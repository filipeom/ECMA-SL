(include_subdirs unqualified)

(library
 (name ECMA_SL)
 (wrapped false)
 (modules
  io
  err
  log
  val
  loc
  expr
  stmt
  type
  func
  prog
  source
  store
  field
  operators
  config
  batch
  choice_monad_intf
  choice_monad
  eval
  eval_op
  eval_functor
  eval_functor_intf
  extern_func
  link_env
  sym_heap2
  sym_heap_intf
  sym_heap_obj_list
  sym_object_list
  sym_state
  sym_value
  args_typing_binop
  args_typing_unop
  type_of_val
  value_intf
  value_reducer
  value_translator
  value_typing
  arith_utils
  string_utils
  date_utils
  byte_utils
  parsing_utils
  parsing_heap_utils
  parser
  lexer
  eOper
  e_Parser
  e_Expr
  e_Stmt
  e_Type
  e_Pat
  e_Pat_v
  e_Pat_Metadata
  e_Func_Metadata
  e_Func
  e_Store
  e_Macro
  e_Prog
  e_Lexer
  secLevel
  secLabel
  secCallStack
  secStore
  secHeap
  secObject
  hTMLGenerator
  hTMLExtensions
  hTMLHashtables
  hTML_Rules
  nSU_Monitor
  nSU_Inliner
  nSU_CompilerConstants
  interpreter
  call_stack
  heap
  object
  common
  external
  compiler
  counter
  t_Checker
  t_Err
  t_ErrFmt
  font
  t_Ctx
  t_Narrowing
  t_Typing
  t_Stmt
  t_Expr
  t_Op
  t_Constraint
  t_Pattern)
 (preprocess
  (staged_pps ppx_import ppx_deriving.std ppx_jane))
 (libraries encoding batteries extlib menhirLib yojson z3 core))

(subdir
 syntax/core
 (rule
  (target lexer.ml)
  (deps lexer.mll)
  (action
   (chdir
    %{workspace_root}
    (run %{bin:ocamllex} -ml -q -o %{target} %{deps}))))
 (menhir
  (modules parser)
  (flags --table)))

(subdir
 syntax/extended
 (rule
  (target E_Lexer.ml)
  (deps E_Lexer.mll)
  (action
   (chdir
    %{workspace_root}
    (run %{bin:ocamllex} -ml -q -o %{target} %{deps}))))
 (menhir
  (modules E_Parser)
  (flags --table --explain)))
