function createOSObject(objectPrototype) {
  os := NewECMAScriptObject();
  setAllInternalMethodsOfOrdinaryObject(os);
  setInternalProperty(os, "Prototype", objectPrototype);

  /* Functions: */

  return os
};

function createProcessObject(objectPrototype) {
  process := NewECMAScriptObject();
  setAllInternalMethodsOfOrdinaryObject(process);
  setInternalProperty(process, "Prototype", objectPrototype);

  /* Properties: */
  createBuiltInProperty(process, "arch", extern str_symbol("p.arch"));
  createBuiltInProperty(process, "execPath", extern str_symbol("p.execPath"));
  createBuiltInProperty(process, "platform", extern str_symbol("p.platform"));

  /* Should be a symbolic lazy object, but now it just keeps env empty */
  env := NewECMAScriptObject();
  setAllInternalMethodsOfOrdinaryObject(env);
  setInternalProperty(env, "Prototype", objectPrototype);
  createBuiltInProperty(process, "env", env);

  argv := NewECMAScriptObject();
  setAllInternalMethodsOfOrdinaryObject(argv);
  setInternalProperty(argv, "Prototype", objectPrototype);
  createBuiltInProperty(process, "argv", argv);

  /* Functions: */
  return process
};

function initNodeGlobalObject(globalObject, objectPrototype, strict) {
  createBuiltInProperty(
  globalObject, "__dirname", extern str_symbol("__dirname"));
  createBuiltInProperty(
  globalObject, "__filename", extern str_symbol("__filename"));
  createBuiltInProperty(globalObject, "require", newLazyObject());

  module := NewECMAScriptObject();
  setAllInternalMethodsOfOrdinaryObject(module);
  setInternalProperty(module, "Prototype", objectPrototype);
  createBuiltInProperty(globalObject, "module", module);

  exports := NewECMAScriptObject();
  setAllInternalMethodsOfOrdinaryObject(exports);
  setInternalProperty(module, "Prototype", objectPrototype);
  createBuiltInProperty(module, "exports", exports);
  createBuiltInProperty(globalObject, "exports", exports);

  /* process */
  process := createProcessObject(objectPrototype);
  createBuiltInProperty(globalObject, "process", process);

  os := createOSObject(objectPrototype);
  createBuiltInProperty(globalObject, "os", os);
  return 'null
}
