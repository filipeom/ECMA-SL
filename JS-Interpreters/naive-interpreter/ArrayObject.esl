typedef JSArrayObject_t := {
	__elements__: any, 							/* FIXME: replace by list type */
  __js_props__: JSProps_t, 
  __proto__: JSObject_t | null,
  resolveProperty: string,
  updateProperty: string
};

function ArrayObject(elements: any): JSArrayObject_t {
	arrayObject: JSArrayObject_t := Object();																					/* BUG: subtyping relationship */
	arrayObject.resolveProperty := "resolveArray";
	arrayObject.updateProperty := "updateArray";
	arrayObject.__js_props__.length := int_to_float(l_len(elements));
	arrayObject.__elements__ := elements;
  return arrayObject
};

function resolveArray(arrayObject: JSArrayObject_t, propVal: float): unknown {			/* BUG: problem with the typeof of unknown types */
	if (typeof(propVal) = __$Flt) {
		length: int := int_of_float(arrayObject.__js_props__.length);
		index: int := int_of_float(propVal);
			if (index >= length) {
				return 'undefined
			} else {
				return l_nth(arrayObject.__elements__, index)
			}
	} else {
		return resolveObject(arrayObject, propVal)																			/* BUG: subtyping relationship */
	}
};

function updateArray(arrayObject: JSArrayObject_t, propVal: float, val: unknown): void {			/* BUG: subtyping relationship */
	if (typeof(propVal) = __$Flt) {
		oldLength: int := int_of_float(arrayObject.__js_props__.length);
		index: int := int_of_float(propVal);
		while (oldLength < index) {
			arrayObject.__elements__ := l_add(arrayObject.__elements__, 'undefined);
			oldLength := oldLength + 1
		};
		arrayObject.__js_props__.length := int_to_float(oldLength + 1);
		arrayObject.__elements__ := l_add(arrayObject.__elements__, val);
		return
	} else {
		raiseError("Unable to update property from array.", propVal)
	}
}