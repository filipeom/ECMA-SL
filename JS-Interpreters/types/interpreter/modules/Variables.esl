function variable_declarator(scope, id, init) {
  print("VariableDeclarator [id][init]:");
  print(id);
  print(init);
  match id with
  | { type: "Identifier", name: name } -> {
    if (!(init = null)) {
      rv := interpreter(scope, init)
    } else {
      rv := 'undefined
    };
    scope.store[name] := rv;
    return rv
  }
  | default -> {
    throw "Unsuported left side of the declaration operation"
  }
};

function __check_is_declared(scope, decl) {
  print("[WARN]: Let/Const variables behave like normal variables");
  return true
};

function var_declaration(scope, decls) {
  print("VariableDeclaration [decls]:");
  print(decls);
  ret := 'empty;
  foreach (decl : decls) {
    ret := interpreter(scope, decl)
  };
  return ret
};

function let_declaration(scope, decls) {
  print("LetDeclaration [decls]:");
  print(decls);
  ret := 'empty;
  foreach (decl : decls) {
    __check_is_declared(scope, decl);
    ret := interpreter(scope, decl)
  };
  return ret
};

function const_declaration(scope, decls) {
  print("ConstDeclaration [decls]:");
  print(decls);
  ret := 'empty;
  foreach (decl : decls) {
    __check_is_declared(scope, decl);
    ret := interpreter(scope, decl)
  };
  return ret
}