function Object() {
  object := { 
    __proto__: null
  };
  return object
};



function resolve_property(original_object, object, prop, must_exist) {
  value := object[prop];
  if (value = 'undefined && !(object.__proto__ = null)) {
    object_proto := object.__proto__;
    return resolve_property(original_object, object_proto, prop, must_exist)
  };
  if (!(value = 'undefined)) {
    return { store: object, name: prop, value: value }
  } elif (!(must_exist)) {
    return { store: original_object, name: prop, value: value }
  } else {
    throw "The prop is not defined in the current object"
  }
}