PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Program [stmts]:"
PROGRAM PRINT: ["$loc_3", "$loc_5", "$loc_10", "$loc_12", "$loc_18", "$loc_20", "$loc_26", "$loc_28", "$loc_34", "$loc_38", "$loc_40", "$loc_46", "$loc_48", "$loc_54", "$loc_59", "$loc_61", "$loc_67"]
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_4" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "test_noarg", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_noarg"
PROGRAM PRINT: { "name": "test_noarg", "scope": null, "code": "$loc_83", "params": [], "parent_scope": "$loc_148" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "test_noarg", "scope": null, "code": "$loc_83", "params": [], "parent_scope": "$loc_148" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_6"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_6"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "retval_1", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": [], "callee": "$loc_9" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "test_noarg", "type": "Identifier" }
PROGRAM PRINT: []
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_noarg"
PROGRAM PRINT: { "name": "test_noarg", "scope": null, "code": "$loc_83", "params": [], "parent_scope": "$loc_148" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "test_noarg"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_84"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_85" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "type": "Literal", "raw": "1", "value": 1 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 1.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 1.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 1.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 1.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 1.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_11" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "test_onearg", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_onearg"
PROGRAM PRINT: { "name": "test_onearg", "scope": null, "code": "$loc_88", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "test_onearg", "scope": null, "code": "$loc_88", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_13"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_13"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "retval_2", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_17"], "callee": "$loc_16" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "test_onearg", "type": "Identifier" }
PROGRAM PRINT: ["$loc_17"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_onearg"
PROGRAM PRINT: { "name": "test_onearg", "scope": null, "code": "$loc_88", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 20.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "test_onearg"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_89"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_90" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "name": "x", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "x"
PROGRAM PRINT: 20.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 20.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 20.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 20.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 20.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_19" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "test_ret_middle", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_ret_middle"
PROGRAM PRINT: { "name": "test_ret_middle", "scope": null, "code": "$loc_93", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "test_ret_middle", "scope": null, "code": "$loc_93", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_21"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_21"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "retval_3", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_25"], "callee": "$loc_24" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "test_ret_middle", "type": "Identifier" }
PROGRAM PRINT: ["$loc_25"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_ret_middle"
PROGRAM PRINT: { "name": "test_ret_middle", "scope": null, "code": "$loc_93", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 300.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "test_ret_middle"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_94", "$loc_96"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_95" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "name": "x", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "x"
PROGRAM PRINT: 300.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 300.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 300.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 300.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 300.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_27" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "test_vdecl", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_vdecl"
PROGRAM PRINT: { "name": "test_vdecl", "scope": null, "code": "$loc_102", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "test_vdecl", "scope": null, "code": "$loc_102", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_29"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_29"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "retval_4", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_33"], "callee": "$loc_32" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "test_vdecl", "type": "Identifier" }
PROGRAM PRINT: ["$loc_33"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_vdecl"
PROGRAM PRINT: { "name": "test_vdecl", "scope": null, "code": "$loc_102", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 1000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "test_vdecl"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_103", "$loc_107"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_104"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_104"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "y", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "4", "value": 4 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 4.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 4.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_108" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_110", "left": "$loc_109", "operator": "*" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "x", "type": "Identifier" }
PROGRAM PRINT: { "name": "y", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "x"
PROGRAM PRINT: 1000.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "y"
PROGRAM PRINT: 4.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 4000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 4000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 4000.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 4000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_35" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_37", "left": "$loc_36", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "global", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "5", "value": 5 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 5.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 5.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_39" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "test_scope_resolution", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_scope_resolution"
PROGRAM PRINT: { "name": "test_scope_resolution", "scope": null, "code": "$loc_113", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "test_scope_resolution", "scope": null, "code": "$loc_113", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_41"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_41"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "retval_5", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_45"], "callee": "$loc_44" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "test_scope_resolution", "type": "Identifier" }
PROGRAM PRINT: ["$loc_45"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_scope_resolution"
PROGRAM PRINT: { "name": "test_scope_resolution", "scope": null, "code": "$loc_113", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "test_scope_resolution"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_114"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_115" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_117", "left": "$loc_116", "operator": "*" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "x", "type": "Identifier" }
PROGRAM PRINT: { "name": "global", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "x"
PROGRAM PRINT: 10000.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "global"
PROGRAM PRINT: 5.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 50000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 50000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 50000.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 50000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "test_internal_func", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_internal_func"
PROGRAM PRINT: { "name": "test_internal_func", "scope": null, "code": "$loc_120", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "test_internal_func", "scope": null, "code": "$loc_120", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_49"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_49"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "func", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_53"], "callee": "$loc_52" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "test_internal_func", "type": "Identifier" }
PROGRAM PRINT: ["$loc_53"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_internal_func"
PROGRAM PRINT: { "name": "test_internal_func", "scope": null, "code": "$loc_120", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 100000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "test_internal_func"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_121", "$loc_125", "$loc_127"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_122"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_122"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "z", "type": "Identifier" }
PROGRAM PRINT: { "name": "x", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "x"
PROGRAM PRINT: 100000.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 100000.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_126" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "internal_func", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "internal_func"
PROGRAM PRINT: { "name": "internal_func", "scope": null, "code": "$loc_131", "params": [], "parent_scope": "$loc_189" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "internal_func", "scope": null, "code": "$loc_131", "params": [], "parent_scope": "$loc_189" }
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_128" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "name": "internal_func", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "internal_func"
PROGRAM PRINT: { "name": "internal_func", "scope": null, "code": "$loc_131", "params": [], "parent_scope": "$loc_189" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "internal_func", "scope": null, "code": "$loc_131", "params": [], "parent_scope": "$loc_189" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: { "name": "internal_func", "scope": null, "code": "$loc_131", "params": [], "parent_scope": "$loc_189" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: { "name": "internal_func", "scope": null, "code": "$loc_131", "params": [], "parent_scope": "$loc_189" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "internal_func", "scope": null, "code": "$loc_131", "params": [], "parent_scope": "$loc_189" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_55"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_55"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "retval_6", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": [], "callee": "$loc_58" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "func", "type": "Identifier" }
PROGRAM PRINT: []
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "func"
PROGRAM PRINT: { "name": "internal_func", "scope": null, "code": "$loc_131", "params": [], "parent_scope": "$loc_189" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "internal_func"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_132"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_133" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_135", "left": "$loc_134", "operator": "*" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "type": "Literal", "raw": "6", "value": 6 }
PROGRAM PRINT: { "name": "z", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 6.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "z"
PROGRAM PRINT: 100000.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 600000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 600000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 600000.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 600000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_60" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "test_return_in_loop", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_return_in_loop"
PROGRAM PRINT: { "name": "test_return_in_loop", "scope": null, "code": "$loc_138", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "test_return_in_loop", "scope": null, "code": "$loc_138", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_62"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_62"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "retval_7", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_66"], "callee": "$loc_65" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "test_return_in_loop", "type": "Identifier" }
PROGRAM PRINT: ["$loc_66"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "test_return_in_loop"
PROGRAM PRINT: { "name": "test_return_in_loop", "scope": null, "code": "$loc_138", "params": ["x"], "parent_scope": "$loc_148" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 1000000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "test_return_in_loop"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_139", "$loc_146"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "test": "$loc_140", "type": "WhileStatement", "body": "$loc_141" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "WhileLoopStatement [test][body]"
PROGRAM PRINT: { "type": "Literal", "raw": "true", "value": true }
PROGRAM PRINT: { "type": "BlockStatement", "body": ["$loc_142"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: true
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_142"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_143" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_145", "left": "$loc_144", "operator": "*" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "type": "Literal", "raw": "7", "value": 7 }
PROGRAM PRINT: { "name": "x", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 7.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "x"
PROGRAM PRINT: 1000000.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 7000000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 7000000.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: true
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 7000000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 7000000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 7000000.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 7000000.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_68" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_80", "left": "$loc_69", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_79", "left": "$loc_70", "operator": "+" }
PROGRAM PRINT: { "name": "retval_7", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_78", "left": "$loc_71", "operator": "+" }
PROGRAM PRINT: { "name": "retval_6", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_77", "left": "$loc_72", "operator": "+" }
PROGRAM PRINT: { "name": "retval_5", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_76", "left": "$loc_73", "operator": "+" }
PROGRAM PRINT: { "name": "retval_4", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_75", "left": "$loc_74", "operator": "+" }
PROGRAM PRINT: { "name": "retval_3", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "name": "retval_1", "type": "Identifier" }
PROGRAM PRINT: { "name": "retval_2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "retval_1"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "retval_2"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "retval_3"
PROGRAM PRINT: 300.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "retval_4"
PROGRAM PRINT: 4000.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "retval_5"
PROGRAM PRINT: 50000.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "retval_6"
PROGRAM PRINT: 600000.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "retval_7"
PROGRAM PRINT: 7000000.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 7654321.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the program [retval]:"
PROGRAM PRINT: 7654321.
