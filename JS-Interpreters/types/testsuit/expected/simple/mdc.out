PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Program [stmts]:"
PROGRAM PRINT: ["$loc_3", "$loc_5", "$loc_7"]
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_4" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "min", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "min"
PROGRAM PRINT: { "name": "min", "scope": null, "code": "$loc_14", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "min", "scope": null, "code": "$loc_14", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_6" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "mdc", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "mdc"
PROGRAM PRINT: { "name": "mdc", "scope": null, "code": "$loc_24", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "mdc", "scope": null, "code": "$loc_24", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_8" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_10", "$loc_11"], "callee": "$loc_9" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "mdc", "type": "Identifier" }
PROGRAM PRINT: ["$loc_10", "$loc_11"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "mdc"
PROGRAM PRINT: { "name": "mdc", "scope": null, "code": "$loc_24", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "mdc"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_25", "$loc_29", "$loc_58"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_26"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_26"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "mdc", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "1", "value": 1 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 1.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 1.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "init": "$loc_30", "test": "$loc_34", "type": "ForStatement", "body": "$loc_42", "update": "$loc_40" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ForLoopStatement [init][test][update][body]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_31"] }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_36", "left": "$loc_35", "operator": "<=" }
PROGRAM PRINT: { "prefix": false, "type": "UpdateExpression", "argument": "$loc_41", "operator": "++" }
PROGRAM PRINT: { "test": "$loc_43", "type": "IfStatement", "alternate": null, "consequent": "$loc_54" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_31"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_38", "$loc_39"], "callee": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "min", "type": "Identifier" }
PROGRAM PRINT: ["$loc_38", "$loc_39"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "min"
PROGRAM PRINT: { "name": "min", "scope": null, "code": "$loc_14", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "min"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_15"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_16" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "test": "$loc_17", "type": "ConditionalExpression", "alternate": "$loc_21", "consequent": "$loc_20" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ConditionalExpression [test][consequent][alternate]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_19", "left": "$loc_18", "operator": "<=" }
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "IfStatement [test][consequent][alternate]"
PROGRAM PRINT: { "type": "LogicalExpression", "right": "$loc_49", "left": "$loc_44", "operator": "&&" }
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_55" }
PROGRAM PRINT: null
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "LogicalExpressionAnd [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_48", "left": "$loc_45", "operator": "==" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": "==" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_47", "left": "$loc_46", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "UpdateExpressionInc [arg]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "EmptyValue" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_38", "$loc_39"], "callee": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "min", "type": "Identifier" }
PROGRAM PRINT: ["$loc_38", "$loc_39"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "min"
PROGRAM PRINT: { "name": "min", "scope": "$loc_74", "code": "$loc_14", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "min"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_15"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_16" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "test": "$loc_17", "type": "ConditionalExpression", "alternate": "$loc_21", "consequent": "$loc_20" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ConditionalExpression [test][consequent][alternate]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_19", "left": "$loc_18", "operator": "<=" }
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "IfStatement [test][consequent][alternate]"
PROGRAM PRINT: { "type": "LogicalExpression", "right": "$loc_49", "left": "$loc_44", "operator": "&&" }
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_55" }
PROGRAM PRINT: null
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "LogicalExpressionAnd [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_48", "left": "$loc_45", "operator": "==" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": "==" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_47", "left": "$loc_46", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_57", "left": "$loc_56", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "mdc", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "UpdateExpressionInc [arg]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "EmptyValue" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_38", "$loc_39"], "callee": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 2.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "min", "type": "Identifier" }
PROGRAM PRINT: ["$loc_38", "$loc_39"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "min"
PROGRAM PRINT: { "name": "min", "scope": "$loc_96", "code": "$loc_14", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "min"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_15"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_16" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "test": "$loc_17", "type": "ConditionalExpression", "alternate": "$loc_21", "consequent": "$loc_20" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ConditionalExpression [test][consequent][alternate]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_19", "left": "$loc_18", "operator": "<=" }
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "IfStatement [test][consequent][alternate]"
PROGRAM PRINT: { "type": "LogicalExpression", "right": "$loc_49", "left": "$loc_44", "operator": "&&" }
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_55" }
PROGRAM PRINT: null
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "LogicalExpressionAnd [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_48", "left": "$loc_45", "operator": "==" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": "==" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_47", "left": "$loc_46", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 2.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 2.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_57", "left": "$loc_56", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "mdc", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 2.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "UpdateExpressionInc [arg]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "EmptyValue" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_38", "$loc_39"], "callee": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 3.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "min", "type": "Identifier" }
PROGRAM PRINT: ["$loc_38", "$loc_39"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "min"
PROGRAM PRINT: { "name": "min", "scope": "$loc_120", "code": "$loc_14", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "min"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_15"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_16" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "test": "$loc_17", "type": "ConditionalExpression", "alternate": "$loc_21", "consequent": "$loc_20" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ConditionalExpression [test][consequent][alternate]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_19", "left": "$loc_18", "operator": "<=" }
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "IfStatement [test][consequent][alternate]"
PROGRAM PRINT: { "type": "LogicalExpression", "right": "$loc_49", "left": "$loc_44", "operator": "&&" }
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_55" }
PROGRAM PRINT: null
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "LogicalExpressionAnd [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_48", "left": "$loc_45", "operator": "==" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": "==" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_47", "left": "$loc_46", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 3.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 3.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "UpdateExpressionInc [arg]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "EmptyValue" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_38", "$loc_39"], "callee": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 4.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "min", "type": "Identifier" }
PROGRAM PRINT: ["$loc_38", "$loc_39"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "min"
PROGRAM PRINT: { "name": "min", "scope": "$loc_144", "code": "$loc_14", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "min"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_15"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_16" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "test": "$loc_17", "type": "ConditionalExpression", "alternate": "$loc_21", "consequent": "$loc_20" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ConditionalExpression [test][consequent][alternate]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_19", "left": "$loc_18", "operator": "<=" }
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "IfStatement [test][consequent][alternate]"
PROGRAM PRINT: { "type": "LogicalExpression", "right": "$loc_49", "left": "$loc_44", "operator": "&&" }
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_55" }
PROGRAM PRINT: null
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "LogicalExpressionAnd [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_48", "left": "$loc_45", "operator": "==" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": "==" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_47", "left": "$loc_46", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 4.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 4.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_57", "left": "$loc_56", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "mdc", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 4.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "UpdateExpressionInc [arg]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "EmptyValue" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_38", "$loc_39"], "callee": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 5.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "min", "type": "Identifier" }
PROGRAM PRINT: ["$loc_38", "$loc_39"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "min"
PROGRAM PRINT: { "name": "min", "scope": "$loc_166", "code": "$loc_14", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "min"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_15"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_16" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "test": "$loc_17", "type": "ConditionalExpression", "alternate": "$loc_21", "consequent": "$loc_20" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ConditionalExpression [test][consequent][alternate]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_19", "left": "$loc_18", "operator": "<=" }
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "IfStatement [test][consequent][alternate]"
PROGRAM PRINT: { "type": "LogicalExpression", "right": "$loc_49", "left": "$loc_44", "operator": "&&" }
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_55" }
PROGRAM PRINT: null
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "LogicalExpressionAnd [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_48", "left": "$loc_45", "operator": "==" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": "==" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_47", "left": "$loc_46", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 5.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 5.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "UpdateExpressionInc [arg]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "EmptyValue" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_38", "$loc_39"], "callee": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 6.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "min", "type": "Identifier" }
PROGRAM PRINT: ["$loc_38", "$loc_39"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "min"
PROGRAM PRINT: { "name": "min", "scope": "$loc_190", "code": "$loc_14", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "min"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_15"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_16" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "test": "$loc_17", "type": "ConditionalExpression", "alternate": "$loc_21", "consequent": "$loc_20" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ConditionalExpression [test][consequent][alternate]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_19", "left": "$loc_18", "operator": "<=" }
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "IfStatement [test][consequent][alternate]"
PROGRAM PRINT: { "type": "LogicalExpression", "right": "$loc_49", "left": "$loc_44", "operator": "&&" }
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_55" }
PROGRAM PRINT: null
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "LogicalExpressionAnd [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_48", "left": "$loc_45", "operator": "==" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": "==" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_47", "left": "$loc_46", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 6.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 6.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "UpdateExpressionInc [arg]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "EmptyValue" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_38", "$loc_39"], "callee": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 7.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "min", "type": "Identifier" }
PROGRAM PRINT: ["$loc_38", "$loc_39"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "min"
PROGRAM PRINT: { "name": "min", "scope": "$loc_212", "code": "$loc_14", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "min"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_15"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_16" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "test": "$loc_17", "type": "ConditionalExpression", "alternate": "$loc_21", "consequent": "$loc_20" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ConditionalExpression [test][consequent][alternate]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_19", "left": "$loc_18", "operator": "<=" }
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "IfStatement [test][consequent][alternate]"
PROGRAM PRINT: { "type": "LogicalExpression", "right": "$loc_49", "left": "$loc_44", "operator": "&&" }
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_55" }
PROGRAM PRINT: null
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "LogicalExpressionAnd [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_48", "left": "$loc_45", "operator": "==" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": "==" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_47", "left": "$loc_46", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 7.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 7.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "UpdateExpressionInc [arg]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "EmptyValue" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_38", "$loc_39"], "callee": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "min", "type": "Identifier" }
PROGRAM PRINT: ["$loc_38", "$loc_39"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "min"
PROGRAM PRINT: { "name": "min", "scope": "$loc_234", "code": "$loc_14", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "min"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_15"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_16" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "test": "$loc_17", "type": "ConditionalExpression", "alternate": "$loc_21", "consequent": "$loc_20" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ConditionalExpression [test][consequent][alternate]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_19", "left": "$loc_18", "operator": "<=" }
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "IfStatement [test][consequent][alternate]"
PROGRAM PRINT: { "type": "LogicalExpression", "right": "$loc_49", "left": "$loc_44", "operator": "&&" }
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_55" }
PROGRAM PRINT: null
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "LogicalExpressionAnd [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_48", "left": "$loc_45", "operator": "==" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": "==" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_47", "left": "$loc_46", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "%" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "UpdateExpressionInc [arg]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "EmptyValue" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "i", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_38", "$loc_39"], "callee": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "i"
PROGRAM PRINT: 9.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "min", "type": "Identifier" }
PROGRAM PRINT: ["$loc_38", "$loc_39"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "min"
PROGRAM PRINT: { "name": "min", "scope": "$loc_256", "code": "$loc_14", "params": ["n1", "n2"], "parent_scope": "$loc_60" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "min"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_15"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_16" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "test": "$loc_17", "type": "ConditionalExpression", "alternate": "$loc_21", "consequent": "$loc_20" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ConditionalExpression [test][consequent][alternate]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_19", "left": "$loc_18", "operator": "<=" }
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionLe [left][right]"
PROGRAM PRINT: { "name": "n1", "type": "Identifier" }
PROGRAM PRINT: { "name": "n2", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n1"
PROGRAM PRINT: 20.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n2"
PROGRAM PRINT: 8.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 8.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 'empty
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_59" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "name": "mdc", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "mdc"
PROGRAM PRINT: 4.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 4.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 4.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 4.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 4.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the program [retval]:"
PROGRAM PRINT: 4.
