PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Program [stmts]:"
PROGRAM PRINT: ["$loc_3", "$loc_5", "$loc_9"]
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_4" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "is_palindrome", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "is_palindrome"
PROGRAM PRINT: { "name": "is_palindrome", "scope": null, "code": "$loc_15", "params": ["n"], "parent_scope": "$loc_56" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "is_palindrome", "scope": null, "code": "$loc_15", "params": ["n"], "parent_scope": "$loc_56" }
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_6" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_8"], "callee": "$loc_7" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "is_palindrome", "type": "Identifier" }
PROGRAM PRINT: ["$loc_8"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "is_palindrome"
PROGRAM PRINT: { "name": "is_palindrome", "scope": null, "code": "$loc_15", "params": ["n"], "parent_scope": "$loc_56" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 1234322.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "is_palindrome"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_16", "$loc_18"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_17" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "invert_number", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "invert_number"
PROGRAM PRINT: { "name": "invert_number", "scope": null, "code": "$loc_26", "params": ["n"], "parent_scope": "$loc_62" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "invert_number", "scope": null, "code": "$loc_26", "params": ["n"], "parent_scope": "$loc_62" }
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_19" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_21", "left": "$loc_20", "operator": "==" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_23"], "callee": "$loc_22" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234322.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "invert_number", "type": "Identifier" }
PROGRAM PRINT: ["$loc_23"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "invert_number"
PROGRAM PRINT: { "name": "invert_number", "scope": null, "code": "$loc_26", "params": ["n"], "parent_scope": "$loc_62" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234322.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "invert_number"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_27", "$loc_31", "$loc_54"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_28"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_28"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "test": "$loc_32", "type": "WhileStatement", "body": "$loc_35" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "WhileLoopStatement [test][body]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_34", "left": "$loc_33", "operator": ">" }
PROGRAM PRINT: { "type": "BlockStatement", "body": ["$loc_36", "$loc_46"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234322.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234322.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 2.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234322.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 123432.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 123432.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 123432.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 2.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 123432.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 22.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 123432.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 12343.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 12343.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 12343.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 22.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 12343.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 223.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 12343.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 1234.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 1234.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 223.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 2234.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 123.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 123.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 123.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 2234.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 123.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 22343.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 123.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 12.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 12.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 12.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 22343.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 12.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 223432.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 12.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 1.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 223432.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 2234321.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_55" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 2234321.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 2234321.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 2234321.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 2234321.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: false
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: false
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: false
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: false
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_10" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_12"], "callee": "$loc_11" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "is_palindrome", "type": "Identifier" }
PROGRAM PRINT: ["$loc_12"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "is_palindrome"
PROGRAM PRINT: { "name": "is_palindrome", "scope": "$loc_62", "code": "$loc_15", "params": ["n"], "parent_scope": "$loc_56" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 1234321.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "is_palindrome"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_16", "$loc_18"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_17" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "name": "invert_number", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "invert_number"
PROGRAM PRINT: { "name": "invert_number", "scope": null, "code": "$loc_26", "params": ["n"], "parent_scope": "$loc_160" }
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: { "name": "invert_number", "scope": null, "code": "$loc_26", "params": ["n"], "parent_scope": "$loc_160" }
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_19" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_21", "left": "$loc_20", "operator": "==" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionEq [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "CallExpression", "arguments": ["$loc_23"], "callee": "$loc_22" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234321.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "CallExpression [callee][args]"
PROGRAM PRINT: { "name": "invert_number", "type": "Identifier" }
PROGRAM PRINT: ["$loc_23"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "invert_number"
PROGRAM PRINT: { "name": "invert_number", "scope": null, "code": "$loc_26", "params": ["n"], "parent_scope": "$loc_160" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234321.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "Start of the function [func]"
PROGRAM PRINT: "invert_number"
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_27", "$loc_31", "$loc_54"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "VariableDeclaration", "kind": "var", "declarations": ["$loc_28"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclaration [decls]:"
PROGRAM PRINT: ["$loc_28"]
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "VariableDeclarator [id][init]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "test": "$loc_32", "type": "WhileStatement", "body": "$loc_35" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "WhileLoopStatement [test][body]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_34", "left": "$loc_33", "operator": ">" }
PROGRAM PRINT: { "type": "BlockStatement", "body": ["$loc_36", "$loc_46"] }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234321.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234321.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 1.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234321.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 123432.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 123432.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 123432.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 123432.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 12.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 123432.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 12343.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 12343.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 12343.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 12.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 12343.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 123.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 12343.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 1234.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 1234.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 123.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 1234.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1234.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 123.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 123.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 123.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 1234.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 123.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 12343.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 123.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 12.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 12.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 12.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 12343.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 12.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 123432.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 12.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 1.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BlockStatement [stmts]:"
PROGRAM PRINT: ["$loc_36", "$loc_46"]
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_37" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_39", "left": "$loc_38", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_43", "left": "$loc_40", "operator": "+" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionPlus [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_42", "left": "$loc_41", "operator": "*" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_45", "left": "$loc_44", "operator": "%" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionTimes [left][right]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 123432.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionModulus [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 1234321.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ExpressionStatement", "expression": "$loc_47" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ExpressionStatement [expression]:"
PROGRAM PRINT: { "type": "AssignmentExpression", "right": "$loc_49", "left": "$loc_48", "operator": "=" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "AssignmentExpression [left][right]:"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_53", "left": "$loc_50", "operator": ">>" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "BitwiseExpressionSignedRightShift [left][right]"
PROGRAM PRINT: { "type": "BinaryExpression", "right": "$loc_52", "left": "$loc_51", "operator": "/" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ArithmeticExpressionDivision [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "10", "value": 10 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 1.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 10.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ComparisonExpressionGt [left][right]"
PROGRAM PRINT: { "name": "n", "type": "Identifier" }
PROGRAM PRINT: { "type": "Literal", "raw": "0", "value": 0 }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "n"
PROGRAM PRINT: 0.
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Literal [value]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 0.
PROGRAM PRINT: "Start of the statement [stmt]"
PROGRAM PRINT: { "type": "ReturnStatement", "argument": "$loc_55" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "ReturnStatement [arg]"
PROGRAM PRINT: { "name": "res", "type": "Identifier" }
PROGRAM PRINT: "........................................"
PROGRAM PRINT: "Identifier [name][value]:"
PROGRAM PRINT: "res"
PROGRAM PRINT: 1234321.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: 1234321.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: 1234321.
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: 1234321.
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: true
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the block [retval]:"
PROGRAM PRINT: true
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the function [retval]:"
PROGRAM PRINT: true
PROGRAM PRINT: "End of the statement [retval]"
PROGRAM PRINT: true
PROGRAM PRINT: "________________________________________________________________________________"
PROGRAM PRINT: "End of the program [retval]:"
PROGRAM PRINT: true
