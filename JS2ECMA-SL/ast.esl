function buildAST () {
__v0 := {  };
__v0["type"] := "Program";
__v2 := {  };
__v2["type"] := "ExpressionStatement";
__v3 := {  };
__v3["type"] := "Identifier";
__v3["name"] := "assertEquals";
__v2["expression"] := __v3;
__v4 := {  };
__v4["type"] := "VariableDeclaration";
__v6 := {  };
__v6["type"] := "VariableDeclarator";
__v7 := {  };
__v7["type"] := "Identifier";
__v7["name"] := "arr";
__v6["id"] := __v7;
__v8 := {  };
__v8["type"] := "ArrayExpression";
__v10 := {  };
__v10["type"] := "Literal";
__v10["value"] := 1;
__v10["raw"] := "1";
__v11 := {  };
__v11["type"] := "Literal";
__v11["value"] := 2;
__v11["raw"] := "2";
__v9 := [ __v10, __v11 ];
__v8["elements"] := __v9;
__v6["init"] := __v8;
__v5 := [ __v6 ];
__v4["declarations"] := __v5;
__v4["kind"] := "var";
__v12 := {  };
__v12["type"] := "ExpressionStatement";
__v13 := {  };
__v13["type"] := "CallExpression";
__v14 := {  };
__v14["type"] := "MemberExpression";
__v15 := {  };
__v15["type"] := "Identifier";
__v15["name"] := "arr";
__v14["object"] := __v15;
__v16 := {  };
__v16["type"] := "Literal";
__v16["value"] := "push";
__v16["raw"] := "\"push\"";
__v14["property"] := __v16;
__v14["computed"] := true;
__v13["callee"] := __v14;
__v18 := {  };
__v18["type"] := "Literal";
__v18["value"] := 3;
__v18["raw"] := "3";
__v17 := [ __v18 ];
__v13["arguments"] := __v17;
__v12["expression"] := __v13;
__v19 := {  };
__v19["type"] := "ExpressionStatement";
__v20 := {  };
__v20["type"] := "CallExpression";
__v21 := {  };
__v21["type"] := "Identifier";
__v21["name"] := "assertEquals";
__v20["callee"] := __v21;
__v23 := {  };
__v23["type"] := "MemberExpression";
__v23["computed"] := true;
__v24 := {  };
__v24["type"] := "Identifier";
__v24["name"] := "arr";
__v23["object"] := __v24;
__v25 := {  };
__v25["type"] := "Literal";
__v25["value"] := 2;
__v25["raw"] := "2";
__v23["property"] := __v25;
__v26 := {  };
__v26["type"] := "Literal";
__v26["value"] := 2;
__v26["raw"] := "2";
__v22 := [ __v23, __v26 ];
__v20["arguments"] := __v22;
__v19["expression"] := __v20;
__v1 := [ __v2, __v4, __v12, __v19 ];
__v0["body"] := __v1;
__v0["sourceType"] := "script";
__v27 := [ "arr" ];
__v0["variableDeclarations"] := __v27;
__v29 := {  };
__v29["type"] := "FunctionDeclaration";
__v30 := {  };
__v30["type"] := "Identifier";
__v30["name"] := "assertEquals";
__v29["id"] := __v30;
__v31 := [ "a", "b" ];
__v29["params"] := __v31;
__v32 := {  };
__v32["type"] := "BlockStatement";
__v34 := {  };
__v34["type"] := "IfStatement";
__v35 := {  };
__v35["type"] := "BinaryExpression";
__v35["operator"] := "===";
__v36 := {  };
__v36["type"] := "Identifier";
__v36["name"] := "a";
__v35["left"] := __v36;
__v37 := {  };
__v37["type"] := "Identifier";
__v37["name"] := "b";
__v35["right"] := __v37;
__v34["test"] := __v35;
__v38 := {  };
__v38["type"] := "BlockStatement";
__v40 := {  };
__v40["type"] := "ReturnStatement";
__v41 := {  };
__v41["type"] := "Literal";
__v41["value"] := true;
__v41["raw"] := "true";
__v40["argument"] := __v41;
__v39 := [ __v40 ];
__v38["body"] := __v39;
__v34["consequent"] := __v38;
__v42 := {  };
__v42["type"] := "BlockStatement";
__v44 := {  };
__v44["type"] := "ThrowStatement";
__v45 := {  };
__v45["type"] := "Literal";
__v45["value"] := 0;
__v45["raw"] := "0";
__v44["argument"] := __v45;
__v43 := [ __v44 ];
__v42["body"] := __v43;
__v34["alternate"] := __v42;
__v33 := [ __v34 ];
__v32["body"] := __v33;
__v46 := [  ];
__v32["variableDeclarations"] := __v46;
__v47 := [  ];
__v32["functionDeclarations"] := __v47;
__v32["codeType"] := "function";
__v32["strict"] := false;
__v29["body"] := __v32;
__v29["generator"] := false;
__v29["expression"] := false;
__v29["async"] := false;
__v28 := [ __v29 ];
__v0["functionDeclarations"] := __v28;
__v0["codeType"] := "global";
__v0["strict"] := false;
return __v0
}