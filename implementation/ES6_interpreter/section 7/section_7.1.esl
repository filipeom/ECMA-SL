/* 7.1 Type Conversion */

/* 7.1.14 ToPropertyKey (argument) */
function ToPropertyKey(argument){

    /* 1. Let key be ToPrimitive(argument, hint String).*/
    key := ToPrimitive(argument, 'String);

    /* 2. ReturnIfAbrupt(key). */
    @ReturnIfAbrupt(key);

    /* 3. If Type(key) is Symbol, then return key. */
    if (Type(key) = "Symbol"){
        return key
    };

    /* 4. Return ToString(key). */
    return ToString(key)
};

/* 7.1.16 CanonicalNumericIndexString ( argument ) */
function CanonicalNumericIndexString(argument){
    /* 1. Assert: Type(argument) is String. */
    assert(Type(argument) = "String");

    /* 2. If argument is "-0", return âˆ’0. */
    if (argument = "-0"){
        return -(0.)
    };

    /* 3. Let n be ToNumber(argument). */
    n := ToNumber(argument);

    /* 4. If SameValue(ToString(n), argument) is false, return undefined. */
    if (SameValue(ToString(n), argument) = false){
        return 'undefined
    };

    /* 5. Return n. */
    return n
}

