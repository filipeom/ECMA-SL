function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Array";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "prototype";
__n7["raw"] := "\"prototype\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["object"] := __n5;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "toString";
__n8["raw"] := "\"toString\"";
__n4["property"] := __n8;
__n4["computed"] := true;
__n3["left"] := __n4;
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "prototype";
__n12["raw"] := "\"prototype\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["object"] := __n10;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "toString";
__n13["raw"] := "\"toString\"";
__n9["property"] := __n13;
__n9["computed"] := true;
__n3["right"] := __n9;
__n2["expression"] := __n3;
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "x";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Array";
__n18["callee"] := __n19;
__n20 := [  ];
__n18["arguments"] := __n20;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n21 := {  };
__n21["type"] := "IfStatement";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "!==";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "x";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "toString";
__n26["raw"] := "\"toString\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n27 := [  ];
__n23["arguments"] := __n27;
__n22["left"] := __n23;
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "+";
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "+";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "[object ";
__n30["raw"] := "\"[object \"";
__n29["left"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "Array";
__n31["raw"] := "\"Array\"";
__n29["right"] := __n31;
__n28["left"] := __n29;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "]";
__n32["raw"] := "\"]\"";
__n28["right"] := __n32;
__n22["right"] := __n28;
__n21["test"] := __n22;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "$ERROR";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "+";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "#1: Array.prototype.toString = Object.prototype.toString; var x = Array(); x.toString() === \"[object \" + \"Array\" + \"]\". Actual: ";
__n40["raw"] := "'#1: Array.prototype.toString = Object.prototype.toString; var x = Array(); x.toString() === \"[object \" + \"Array\" + \"]\". Actual: '";
__n39["left"] := __n40;
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "x";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "toString";
__n44["raw"] := "\"toString\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["callee"] := __n42;
__n45 := [  ];
__n41["arguments"] := __n45;
__n39["right"] := __n41;
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["expression"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n21["consequent"] := __n33;
__n21["alternate"] := null;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "AssignmentExpression";
__n47["operator"] := "=";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "Array";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "prototype";
__n51["raw"] := "\"prototype\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["object"] := __n49;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "toString";
__n52["raw"] := "\"toString\"";
__n48["property"] := __n52;
__n48["computed"] := true;
__n47["left"] := __n48;
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Object";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "prototype";
__n56["raw"] := "\"prototype\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["object"] := __n54;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "toString";
__n57["raw"] := "\"toString\"";
__n53["property"] := __n57;
__n53["computed"] := true;
__n47["right"] := __n53;
__n46["expression"] := __n47;
__n58 := {  };
__n58["type"] := "VariableDeclaration";
__n60 := {  };
__n60["type"] := "VariableDeclarator";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "x";
__n60["id"] := __n61;
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Array";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 0.;
__n65["raw"] := "0";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 1.;
__n66["raw"] := "1";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 2.;
__n67["raw"] := "2";
__n64 := [ __n65, __n66, __n67 ];
__n62["arguments"] := __n64;
__n60["init"] := __n62;
__n59 := [ __n60 ];
__n58["declarations"] := __n59;
__n58["kind"] := "var";
__n68 := {  };
__n68["type"] := "IfStatement";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "!==";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "MemberExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "x";
__n71["object"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "toString";
__n73["raw"] := "\"toString\"";
__n71["property"] := __n73;
__n71["computed"] := true;
__n70["callee"] := __n71;
__n74 := [  ];
__n70["arguments"] := __n74;
__n69["left"] := __n70;
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "+";
__n76 := {  };
__n76["type"] := "BinaryExpression";
__n76["operator"] := "+";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "[object ";
__n77["raw"] := "\"[object \"";
__n76["left"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "Array";
__n78["raw"] := "\"Array\"";
__n76["right"] := __n78;
__n75["left"] := __n76;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "]";
__n79["raw"] := "\"]\"";
__n75["right"] := __n79;
__n69["right"] := __n75;
__n68["test"] := __n69;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#2: Array.prototype.toString = Object.prototype.toString; var x = Array(0,1,2); x.toString() === \"[object \" + \"Array\" + \"]\". Actual: ";
__n87["raw"] := "'#2: Array.prototype.toString = Object.prototype.toString; var x = Array(0,1,2); x.toString() === \"[object \" + \"Array\" + \"]\". Actual: '";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "x";
__n89["object"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "toString";
__n91["raw"] := "\"toString\"";
__n89["property"] := __n91;
__n89["computed"] := true;
__n88["callee"] := __n89;
__n92 := [  ];
__n88["arguments"] := __n92;
__n86["right"] := __n88;
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n68["consequent"] := __n80;
__n68["alternate"] := null;
__n1 := [ __n2, __n14, __n21, __n46, __n58, __n68 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n93 := [ "x" ];
__n0["variableDeclarations"] := __n93;
__n94 := [  ];
__n0["functionDeclarations"] := __n94;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}