function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "ExpressionStatement";
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Array";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.5;
__n9["raw"] := "1.5";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n5["expression"] := __n6;
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "$ERROR";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "+";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "#1.1: new Array(1.5) throw RangeError. Actual: ";
__n15["raw"] := "'#1.1: new Array(1.5) throw RangeError. Actual: '";
__n14["left"] := __n15;
__n16 := {  };
__n16["type"] := "NewExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Array";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.5;
__n19["raw"] := "1.5";
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n14["right"] := __n16;
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["expression"] := __n11;
__n4 := [ __n5, __n10 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n20 := {  };
__n20["type"] := "CatchClause";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "e";
__n20["param"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "IfStatement";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "!==";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "instanceof";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "e";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "RangeError";
__n26["right"] := __n28;
__n25["left"] := __n26;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := true;
__n29["raw"] := "true";
__n25["right"] := __n29;
__n24["test"] := __n25;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "$ERROR";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "+";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "#1.2: new Array(1.5) throw RangeError. Actual: ";
__n37["raw"] := "'#1.2: new Array(1.5) throw RangeError. Actual: '";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "e";
__n36["right"] := __n38;
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n24["consequent"] := __n30;
__n24["alternate"] := null;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n20["body"] := __n22;
__n2["handler"] := __n20;
__n2["finalizer"] := null;
__n39 := {  };
__n39["type"] := "TryStatement";
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "NewExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Array";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "Number";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "MAX_VALUE";
__n48["raw"] := "\"MAX_VALUE\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "+";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#2.1: new Array(Number.MAX_VALUE) throw RangeError. Actual: ";
__n54["raw"] := "'#2.1: new Array(Number.MAX_VALUE) throw RangeError. Actual: '";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "NewExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Array";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Number";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "MAX_VALUE";
__n60["raw"] := "\"MAX_VALUE\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n53["right"] := __n55;
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n41 := [ __n42, __n49 ];
__n40["body"] := __n41;
__n39["block"] := __n40;
__n61 := {  };
__n61["type"] := "CatchClause";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "e";
__n61["param"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "IfStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "instanceof";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "e";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "RangeError";
__n67["right"] := __n69;
__n66["left"] := __n67;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := true;
__n70["raw"] := "true";
__n66["right"] := __n70;
__n65["test"] := __n66;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "$ERROR";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "#2.2: new Array(Number.MAX_VALUE) throw RangeError. Actual: ";
__n78["raw"] := "'#2.2: new Array(Number.MAX_VALUE) throw RangeError. Actual: '";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "e";
__n77["right"] := __n79;
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n65["consequent"] := __n71;
__n65["alternate"] := null;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n61["body"] := __n63;
__n39["handler"] := __n61;
__n39["finalizer"] := null;
__n80 := {  };
__n80["type"] := "TryStatement";
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "NewExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "Array";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "Number";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "MIN_VALUE";
__n89["raw"] := "\"MIN_VALUE\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "$ERROR";
__n91["callee"] := __n92;
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "+";
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "#3.1: new Array(Number.MIN_VALUE) throw RangeError. Actual: ";
__n95["raw"] := "'#3.1: new Array(Number.MIN_VALUE) throw RangeError. Actual: '";
__n94["left"] := __n95;
__n96 := {  };
__n96["type"] := "NewExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "Array";
__n96["callee"] := __n97;
__n99 := {  };
__n99["type"] := "MemberExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "Number";
__n99["object"] := __n100;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "MIN_VALUE";
__n101["raw"] := "\"MIN_VALUE\"";
__n99["property"] := __n101;
__n99["computed"] := true;
__n98 := [ __n99 ];
__n96["arguments"] := __n98;
__n94["right"] := __n96;
__n93 := [ __n94 ];
__n91["arguments"] := __n93;
__n90["expression"] := __n91;
__n82 := [ __n83, __n90 ];
__n81["body"] := __n82;
__n80["block"] := __n81;
__n102 := {  };
__n102["type"] := "CatchClause";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "e";
__n102["param"] := __n103;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "IfStatement";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "!==";
__n108 := {  };
__n108["type"] := "BinaryExpression";
__n108["operator"] := "instanceof";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "e";
__n108["left"] := __n109;
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "RangeError";
__n108["right"] := __n110;
__n107["left"] := __n108;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := true;
__n111["raw"] := "true";
__n107["right"] := __n111;
__n106["test"] := __n107;
__n112 := {  };
__n112["type"] := "BlockStatement";
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "$ERROR";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "BinaryExpression";
__n118["operator"] := "+";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "#3.2: new Array(Number.MIN_VALUE) throw RangeError. Actual: ";
__n119["raw"] := "'#3.2: new Array(Number.MIN_VALUE) throw RangeError. Actual: '";
__n118["left"] := __n119;
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "e";
__n118["right"] := __n120;
__n117 := [ __n118 ];
__n115["arguments"] := __n117;
__n114["expression"] := __n115;
__n113 := [ __n114 ];
__n112["body"] := __n113;
__n106["consequent"] := __n112;
__n106["alternate"] := null;
__n105 := [ __n106 ];
__n104["body"] := __n105;
__n102["body"] := __n104;
__n80["handler"] := __n102;
__n80["finalizer"] := null;
__n1 := [ __n2, __n39, __n80 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n121 := [  ];
__n0["variableDeclarations"] := __n121;
__n122 := [  ];
__n0["functionDeclarations"] := __n122;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}