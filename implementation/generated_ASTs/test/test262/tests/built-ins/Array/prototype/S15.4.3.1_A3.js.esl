function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Array";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "hasOwnProperty";
__n7["raw"] := "\"hasOwnProperty\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "prototype";
__n9["raw"] := "'prototype'";
__n8 := [ __n9 ];
__n4["arguments"] := __n8;
__n3["left"] := __n4;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := true;
__n10["raw"] := "true";
__n3["right"] := __n10;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: Array.hasOwnProperty('prototype') === true. Actual: ";
__n18["raw"] := "'#1: Array.hasOwnProperty(\\'prototype\\') === true. Actual: '";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "Array";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "hasOwnProperty";
__n22["raw"] := "\"hasOwnProperty\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "prototype";
__n24["raw"] := "'prototype'";
__n23 := [ __n24 ];
__n19["arguments"] := __n23;
__n17["right"] := __n19;
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n2["alternate"] := null;
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "verifyNotConfigurable";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Array";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "prototype";
__n30["raw"] := "\"prototype\"";
__n28 := [ __n29, __n30 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n31 := {  };
__n31["type"] := "TryStatement";
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "IfStatement";
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "!==";
__n36 := {  };
__n36["type"] := "UnaryExpression";
__n36["operator"] := "delete";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Array";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "prototype";
__n39["raw"] := "\"prototype\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["argument"] := __n37;
__n36["prefix"] := true;
__n35["left"] := __n36;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := false;
__n40["raw"] := "false";
__n35["right"] := __n40;
__n34["test"] := __n35;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "$ERROR";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#2: Array.prototype has the attribute DontDelete";
__n47["raw"] := "'#2: Array.prototype has the attribute DontDelete'";
__n46 := [ __n47 ];
__n44["arguments"] := __n46;
__n43["expression"] := __n44;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n34["consequent"] := __n41;
__n34["alternate"] := null;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n31["block"] := __n32;
__n48 := {  };
__n48["type"] := "CatchClause";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "e";
__n48["param"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "IfStatement";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "instanceof";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "e";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Test262Error";
__n53["right"] := __n55;
__n52["test"] := __n53;
__n56 := {  };
__n56["type"] := "ThrowStatement";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "e";
__n56["argument"] := __n57;
__n52["consequent"] := __n56;
__n52["alternate"] := null;
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "assert";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "instanceof";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "e";
__n62["left"] := __n63;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "TypeError";
__n62["right"] := __n64;
__n61 := [ __n62 ];
__n59["arguments"] := __n61;
__n58["expression"] := __n59;
__n51 := [ __n52, __n58 ];
__n50["body"] := __n51;
__n48["body"] := __n50;
__n31["handler"] := __n48;
__n31["finalizer"] := null;
__n65 := {  };
__n65["type"] := "IfStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "Array";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "hasOwnProperty";
__n70["raw"] := "\"hasOwnProperty\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "prototype";
__n72["raw"] := "'prototype'";
__n71 := [ __n72 ];
__n67["arguments"] := __n71;
__n66["left"] := __n67;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := true;
__n73["raw"] := "true";
__n66["right"] := __n73;
__n65["test"] := __n66;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "$ERROR";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "+";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "#3: delete Array.prototype; Array.hasOwnProperty('prototype') === true. Actual: ";
__n81["raw"] := "'#3: delete Array.prototype; Array.hasOwnProperty(\\'prototype\\') === true. Actual: '";
__n80["left"] := __n81;
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "Array";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "hasOwnProperty";
__n85["raw"] := "\"hasOwnProperty\"";
__n83["property"] := __n85;
__n83["computed"] := true;
__n82["callee"] := __n83;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "prototype";
__n87["raw"] := "'prototype'";
__n86 := [ __n87 ];
__n82["arguments"] := __n86;
__n80["right"] := __n82;
__n79 := [ __n80 ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n65["consequent"] := __n74;
__n65["alternate"] := null;
__n88 := {  };
__n88["type"] := "IfStatement";
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "===";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "Array";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "prototype";
__n92["raw"] := "\"prototype\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n89["left"] := __n90;
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "undefined";
__n89["right"] := __n93;
__n88["test"] := __n89;
__n94 := {  };
__n94["type"] := "BlockStatement";
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "$ERROR";
__n97["callee"] := __n98;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "#4: delete Array.prototype; Array.prototype !== undefined";
__n100["raw"] := "'#4: delete Array.prototype; Array.prototype !== undefined'";
__n99 := [ __n100 ];
__n97["arguments"] := __n99;
__n96["expression"] := __n97;
__n95 := [ __n96 ];
__n94["body"] := __n95;
__n88["consequent"] := __n94;
__n88["alternate"] := null;
__n1 := [ __n2, __n25, __n31, __n65, __n88 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n101 := [  ];
__n0["variableDeclarations"] := __n101;
__n102 := [  ];
__n0["functionDeclarations"] := __n102;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}