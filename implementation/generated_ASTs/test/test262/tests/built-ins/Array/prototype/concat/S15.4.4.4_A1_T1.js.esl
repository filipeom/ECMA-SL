function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Array";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "y";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "NewExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "Array";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 0.;
__n16["raw"] := "0";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 1.;
__n17["raw"] := "1";
__n15 := [ __n16, __n17 ];
__n13["arguments"] := __n15;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "z";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "NewExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Array";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 2.;
__n25["raw"] := "2";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 3.;
__n26["raw"] := "3";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 4.;
__n27["raw"] := "4";
__n24 := [ __n25, __n26, __n27 ];
__n22["arguments"] := __n24;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n28 := {  };
__n28["type"] := "VariableDeclaration";
__n30 := {  };
__n30["type"] := "VariableDeclarator";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "arr";
__n30["id"] := __n31;
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "x";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "concat";
__n35["raw"] := "\"concat\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "y";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "z";
__n36 := [ __n37, __n38 ];
__n32["arguments"] := __n36;
__n30["init"] := __n32;
__n29 := [ __n30 ];
__n28["declarations"] := __n29;
__n28["kind"] := "var";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "AssignmentExpression";
__n40["operator"] := "=";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "arr";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "getClass";
__n43["raw"] := "\"getClass\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["left"] := __n41;
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "Object";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "prototype";
__n47["raw"] := "\"prototype\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["object"] := __n45;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "toString";
__n48["raw"] := "\"toString\"";
__n44["property"] := __n48;
__n44["computed"] := true;
__n40["right"] := __n44;
__n39["expression"] := __n40;
__n49 := {  };
__n49["type"] := "IfStatement";
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "!==";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "arr";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "getClass";
__n54["raw"] := "\"getClass\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n55 := [  ];
__n51["arguments"] := __n55;
__n50["left"] := __n51;
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "+";
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "+";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "[object ";
__n58["raw"] := "\"[object \"";
__n57["left"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "Array";
__n59["raw"] := "\"Array\"";
__n57["right"] := __n59;
__n56["left"] := __n57;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "]";
__n60["raw"] := "\"]\"";
__n56["right"] := __n60;
__n50["right"] := __n56;
__n49["test"] := __n50;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$ERROR";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "+";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "#0: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr is Array object. Actual: ";
__n68["raw"] := "'#0: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr is Array object. Actual: '";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "arr";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "getClass";
__n72["raw"] := "\"getClass\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n69["callee"] := __n70;
__n73 := [  ];
__n69["arguments"] := __n73;
__n67["right"] := __n69;
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n49["consequent"] := __n61;
__n49["alternate"] := null;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "!==";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n76["computed"] := true;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "arr";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 0.;
__n78["raw"] := "0";
__n76["property"] := __n78;
__n75["left"] := __n76;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 0.;
__n79["raw"] := "0";
__n75["right"] := __n79;
__n74["test"] := __n75;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#1: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[0] === 0. Actual: ";
__n87["raw"] := "'#1: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[0] === 0. Actual: '";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "MemberExpression";
__n88["computed"] := true;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "arr";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 0.;
__n90["raw"] := "0";
__n88["property"] := __n90;
__n86["right"] := __n88;
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n74["consequent"] := __n80;
__n74["alternate"] := null;
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "!==";
__n93 := {  };
__n93["type"] := "MemberExpression";
__n93["computed"] := true;
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "arr";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 1.;
__n95["raw"] := "1";
__n93["property"] := __n95;
__n92["left"] := __n93;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := 1.;
__n96["raw"] := "1";
__n92["right"] := __n96;
__n91["test"] := __n92;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "$ERROR";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "+";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "#2: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[1] === 1. Actual: ";
__n104["raw"] := "'#2: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[1] === 1. Actual: '";
__n103["left"] := __n104;
__n105 := {  };
__n105["type"] := "MemberExpression";
__n105["computed"] := true;
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "arr";
__n105["object"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 1.;
__n107["raw"] := "1";
__n105["property"] := __n107;
__n103["right"] := __n105;
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["expression"] := __n100;
__n98 := [ __n99 ];
__n97["body"] := __n98;
__n91["consequent"] := __n97;
__n91["alternate"] := null;
__n108 := {  };
__n108["type"] := "IfStatement";
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "!==";
__n110 := {  };
__n110["type"] := "MemberExpression";
__n110["computed"] := true;
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "arr";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 2.;
__n112["raw"] := "2";
__n110["property"] := __n112;
__n109["left"] := __n110;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 2.;
__n113["raw"] := "2";
__n109["right"] := __n113;
__n108["test"] := __n109;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n116 := {  };
__n116["type"] := "ExpressionStatement";
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "$ERROR";
__n117["callee"] := __n118;
__n120 := {  };
__n120["type"] := "BinaryExpression";
__n120["operator"] := "+";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "#3: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[2] === 2. Actual: ";
__n121["raw"] := "'#3: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[2] === 2. Actual: '";
__n120["left"] := __n121;
__n122 := {  };
__n122["type"] := "MemberExpression";
__n122["computed"] := true;
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "arr";
__n122["object"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 2.;
__n124["raw"] := "2";
__n122["property"] := __n124;
__n120["right"] := __n122;
__n119 := [ __n120 ];
__n117["arguments"] := __n119;
__n116["expression"] := __n117;
__n115 := [ __n116 ];
__n114["body"] := __n115;
__n108["consequent"] := __n114;
__n108["alternate"] := null;
__n125 := {  };
__n125["type"] := "IfStatement";
__n126 := {  };
__n126["type"] := "BinaryExpression";
__n126["operator"] := "!==";
__n127 := {  };
__n127["type"] := "MemberExpression";
__n127["computed"] := true;
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "arr";
__n127["object"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := 3.;
__n129["raw"] := "3";
__n127["property"] := __n129;
__n126["left"] := __n127;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := 3.;
__n130["raw"] := "3";
__n126["right"] := __n130;
__n125["test"] := __n126;
__n131 := {  };
__n131["type"] := "BlockStatement";
__n133 := {  };
__n133["type"] := "ExpressionStatement";
__n134 := {  };
__n134["type"] := "CallExpression";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "$ERROR";
__n134["callee"] := __n135;
__n137 := {  };
__n137["type"] := "BinaryExpression";
__n137["operator"] := "+";
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := "#4: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[3] === 3. Actual: ";
__n138["raw"] := "'#4: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[3] === 3. Actual: '";
__n137["left"] := __n138;
__n139 := {  };
__n139["type"] := "MemberExpression";
__n139["computed"] := true;
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "arr";
__n139["object"] := __n140;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := 3.;
__n141["raw"] := "3";
__n139["property"] := __n141;
__n137["right"] := __n139;
__n136 := [ __n137 ];
__n134["arguments"] := __n136;
__n133["expression"] := __n134;
__n132 := [ __n133 ];
__n131["body"] := __n132;
__n125["consequent"] := __n131;
__n125["alternate"] := null;
__n142 := {  };
__n142["type"] := "IfStatement";
__n143 := {  };
__n143["type"] := "BinaryExpression";
__n143["operator"] := "!==";
__n144 := {  };
__n144["type"] := "MemberExpression";
__n144["computed"] := true;
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "arr";
__n144["object"] := __n145;
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := 4.;
__n146["raw"] := "4";
__n144["property"] := __n146;
__n143["left"] := __n144;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := 4.;
__n147["raw"] := "4";
__n143["right"] := __n147;
__n142["test"] := __n143;
__n148 := {  };
__n148["type"] := "BlockStatement";
__n150 := {  };
__n150["type"] := "ExpressionStatement";
__n151 := {  };
__n151["type"] := "CallExpression";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "$ERROR";
__n151["callee"] := __n152;
__n154 := {  };
__n154["type"] := "BinaryExpression";
__n154["operator"] := "+";
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := "#5: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[4] === 4. Actual: ";
__n155["raw"] := "'#5: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr[4] === 4. Actual: '";
__n154["left"] := __n155;
__n156 := {  };
__n156["type"] := "MemberExpression";
__n156["computed"] := true;
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "arr";
__n156["object"] := __n157;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := 4.;
__n158["raw"] := "4";
__n156["property"] := __n158;
__n154["right"] := __n156;
__n153 := [ __n154 ];
__n151["arguments"] := __n153;
__n150["expression"] := __n151;
__n149 := [ __n150 ];
__n148["body"] := __n149;
__n142["consequent"] := __n148;
__n142["alternate"] := null;
__n159 := {  };
__n159["type"] := "IfStatement";
__n160 := {  };
__n160["type"] := "BinaryExpression";
__n160["operator"] := "!==";
__n161 := {  };
__n161["type"] := "MemberExpression";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "arr";
__n161["object"] := __n162;
__n163 := {  };
__n163["type"] := "Literal";
__n163["value"] := "length";
__n163["raw"] := "\"length\"";
__n161["property"] := __n163;
__n161["computed"] := true;
__n160["left"] := __n161;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := 5.;
__n164["raw"] := "5";
__n160["right"] := __n164;
__n159["test"] := __n160;
__n165 := {  };
__n165["type"] := "BlockStatement";
__n167 := {  };
__n167["type"] := "ExpressionStatement";
__n168 := {  };
__n168["type"] := "CallExpression";
__n169 := {  };
__n169["type"] := "Identifier";
__n169["name"] := "$ERROR";
__n168["callee"] := __n169;
__n171 := {  };
__n171["type"] := "BinaryExpression";
__n171["operator"] := "+";
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := "#6: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr.length === 5. Actual: ";
__n172["raw"] := "'#6: var x = new Array(); var y = new Array(0,1); var z = new Array(2,3,4); var arr = x.concat(y,z); arr.length === 5. Actual: '";
__n171["left"] := __n172;
__n173 := {  };
__n173["type"] := "MemberExpression";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "arr";
__n173["object"] := __n174;
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := "length";
__n175["raw"] := "\"length\"";
__n173["property"] := __n175;
__n173["computed"] := true;
__n171["right"] := __n173;
__n170 := [ __n171 ];
__n168["arguments"] := __n170;
__n167["expression"] := __n168;
__n166 := [ __n167 ];
__n165["body"] := __n166;
__n159["consequent"] := __n165;
__n159["alternate"] := null;
__n1 := [ __n2, __n9, __n18, __n28, __n39, __n49, __n74, __n91, __n108, __n125, __n142, __n159 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n176 := [ "x", "y", "z", "arr" ];
__n0["variableDeclarations"] := __n176;
__n177 := [  ];
__n0["functionDeclarations"] := __n177;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}