function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "obj";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "NewExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "Number";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "UnaryExpression";
__n16["operator"] := "-";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 128.;
__n17["raw"] := "128";
__n16["argument"] := __n17;
__n16["prefix"] := true;
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "AssignmentExpression";
__n19["operator"] := "=";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "obj";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "length";
__n22["raw"] := "\"length\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["left"] := __n20;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 2.;
__n23["raw"] := "2";
__n19["right"] := __n23;
__n18["expression"] := __n19;
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "AssignmentExpression";
__n25["operator"] := "=";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n26["computed"] := true;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "obj";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 0.;
__n28["raw"] := "0";
__n26["property"] := __n28;
__n25["left"] := __n26;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 11.;
__n29["raw"] := "11";
__n25["right"] := __n29;
__n24["expression"] := __n25;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "AssignmentExpression";
__n31["operator"] := "=";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n32["computed"] := true;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "obj";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1.;
__n34["raw"] := "1";
__n32["property"] := __n34;
__n31["left"] := __n32;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 12.;
__n35["raw"] := "12";
__n31["right"] := __n35;
__n30["expression"] := __n31;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "assert";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Array";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "prototype";
__n45["raw"] := "\"prototype\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["object"] := __n43;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "every";
__n46["raw"] := "\"every\"";
__n42["property"] := __n46;
__n42["computed"] := true;
__n41["object"] := __n42;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "call";
__n47["raw"] := "\"call\"";
__n41["property"] := __n47;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "obj";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "callbackfn";
__n48 := [ __n49, __n50 ];
__n40["arguments"] := __n48;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "Array.prototype.every.call(obj, callbackfn) !== true";
__n51["raw"] := "'Array.prototype.every.call(obj, callbackfn) !== true'";
__n39 := [ __n40, __n51 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "assert";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "accessed";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "accessed !== true";
__n57["raw"] := "'accessed !== true'";
__n55 := [ __n56, __n57 ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n1 := [ __n2, __n7, __n9, __n18, __n24, __n30, __n36, __n52 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n58 := [ "accessed", "obj" ];
__n0["variableDeclarations"] := __n58;
__n60 := {  };
__n60["type"] := "FunctionDeclaration";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "callbackfn";
__n60["id"] := __n61;
__n62 := [ "val", "idx", "obj" ];
__n60["params"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "AssignmentExpression";
__n66["operator"] := "=";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "accessed";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := true;
__n68["raw"] := "true";
__n66["right"] := __n68;
__n65["expression"] := __n66;
__n69 := {  };
__n69["type"] := "ReturnStatement";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "instanceof";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "obj";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "Number";
__n70["right"] := __n72;
__n69["argument"] := __n70;
__n64 := [ __n65, __n69 ];
__n63["body"] := __n64;
__n73 := [  ];
__n63["variableDeclarations"] := __n73;
__n74 := [  ];
__n63["functionDeclarations"] := __n74;
__n63["codeType"] := "function";
__n63["strict"] := false;
__n60["body"] := __n63;
__n60["generator"] := false;
__n60["expression"] := false;
__n60["async"] := false;
__n59 := [ __n60 ];
__n0["functionDeclarations"] := __n59;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}