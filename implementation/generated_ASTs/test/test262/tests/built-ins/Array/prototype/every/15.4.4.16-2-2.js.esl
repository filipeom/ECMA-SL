function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn1";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callbackfn2";
__n4["expression"] := __n5;
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "AssignmentExpression";
__n7["operator"] := "=";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n8["computed"] := true;
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Array";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "prototype";
__n11["raw"] := "\"prototype\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["object"] := __n9;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 2.;
__n12["raw"] := "2";
__n8["property"] := __n12;
__n7["left"] := __n8;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 9.;
__n13["raw"] := "9";
__n7["right"] := __n13;
__n6["expression"] := __n7;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "assert";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "ArrayExpression";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 12.;
__n22["raw"] := "12";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 11.;
__n23["raw"] := "11";
__n21 := [ __n22, __n23 ];
__n20["elements"] := __n21;
__n19["object"] := __n20;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "every";
__n24["raw"] := "\"every\"";
__n19["property"] := __n24;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "callbackfn1";
__n25 := [ __n26 ];
__n18["arguments"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "[12, 11].every(callbackfn1) !== true";
__n27["raw"] := "'[12, 11].every(callbackfn1) !== true'";
__n17 := [ __n18, __n27 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "assert";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "sameValue";
__n32["raw"] := "\"sameValue\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "ArrayExpression";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 12.;
__n38["raw"] := "12";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 11.;
__n39["raw"] := "11";
__n37 := [ __n38, __n39 ];
__n36["elements"] := __n37;
__n35["object"] := __n36;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "every";
__n40["raw"] := "\"every\"";
__n35["property"] := __n40;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "callbackfn2";
__n41 := [ __n42 ];
__n34["arguments"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := false;
__n43["raw"] := "false";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "[12, 11].every(callbackfn2)";
__n44["raw"] := "'[12, 11].every(callbackfn2)'";
__n33 := [ __n34, __n43, __n44 ];
__n29["arguments"] := __n33;
__n28["expression"] := __n29;
__n1 := [ __n2, __n4, __n6, __n14, __n28 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n45 := [  ];
__n0["variableDeclarations"] := __n45;
__n47 := {  };
__n47["type"] := "FunctionDeclaration";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "callbackfn1";
__n47["id"] := __n48;
__n49 := [ "val", "idx", "obj" ];
__n47["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ReturnStatement";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := ">";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "val";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 10.;
__n55["raw"] := "10";
__n53["right"] := __n55;
__n52["argument"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n56 := [  ];
__n50["variableDeclarations"] := __n56;
__n57 := [  ];
__n50["functionDeclarations"] := __n57;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n47["body"] := __n50;
__n47["generator"] := false;
__n47["expression"] := false;
__n47["async"] := false;
__n58 := {  };
__n58["type"] := "FunctionDeclaration";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "callbackfn2";
__n58["id"] := __n59;
__n60 := [ "val", "idx", "obj" ];
__n58["params"] := __n60;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ReturnStatement";
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := ">";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "val";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 11.;
__n66["raw"] := "11";
__n64["right"] := __n66;
__n63["argument"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n67 := [  ];
__n61["variableDeclarations"] := __n67;
__n68 := [  ];
__n61["functionDeclarations"] := __n68;
__n61["codeType"] := "function";
__n61["strict"] := false;
__n58["body"] := __n61;
__n58["generator"] := false;
__n58["expression"] := false;
__n58["async"] := false;
__n46 := [ __n47, __n58 ];
__n0["functionDeclarations"] := __n46;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}