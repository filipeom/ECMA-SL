function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn1";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callbackfn2";
__n4["expression"] := __n5;
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "proto";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "ObjectExpression";
__n12 := {  };
__n12["type"] := "Property";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "length";
__n12["key"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 3.;
__n14["raw"] := "3";
__n12["value"] := __n14;
__n12["computed"] := false;
__n12["kind"] := "init";
__n12["shorthand"] := false;
__n11 := [ __n12 ];
__n10["properties"] := __n11;
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Con";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "FunctionExpression";
__n19["id"] := null;
__n20 := [  ];
__n19["params"] := __n20;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n22 := [  ];
__n21["body"] := __n22;
__n23 := [  ];
__n21["variableDeclarations"] := __n23;
__n24 := [  ];
__n21["functionDeclarations"] := __n24;
__n21["codeType"] := "function";
__n21["strict"] := false;
__n19["body"] := __n21;
__n19["generator"] := false;
__n19["expression"] := false;
__n19["async"] := false;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "AssignmentExpression";
__n26["operator"] := "=";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Con";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "prototype";
__n29["raw"] := "\"prototype\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["left"] := __n27;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "proto";
__n26["right"] := __n30;
__n25["expression"] := __n26;
__n31 := {  };
__n31["type"] := "VariableDeclaration";
__n33 := {  };
__n33["type"] := "VariableDeclarator";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "child";
__n33["id"] := __n34;
__n35 := {  };
__n35["type"] := "NewExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Con";
__n35["callee"] := __n36;
__n37 := [  ];
__n35["arguments"] := __n37;
__n33["init"] := __n35;
__n32 := [ __n33 ];
__n31["declarations"] := __n32;
__n31["kind"] := "var";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Object";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "defineProperty";
__n42["raw"] := "\"defineProperty\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "child";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "length";
__n45["raw"] := "\"length\"";
__n46 := {  };
__n46["type"] := "ObjectExpression";
__n48 := {  };
__n48["type"] := "Property";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "get";
__n48["key"] := __n49;
__n50 := {  };
__n50["type"] := "FunctionExpression";
__n50["id"] := null;
__n51 := [  ];
__n50["params"] := __n51;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ReturnStatement";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 2.;
__n55["raw"] := "2";
__n54["argument"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n56 := [  ];
__n52["variableDeclarations"] := __n56;
__n57 := [  ];
__n52["functionDeclarations"] := __n57;
__n52["codeType"] := "function";
__n52["strict"] := false;
__n50["body"] := __n52;
__n50["generator"] := false;
__n50["expression"] := false;
__n50["async"] := false;
__n48["value"] := __n50;
__n48["computed"] := false;
__n48["kind"] := "init";
__n48["shorthand"] := false;
__n58 := {  };
__n58["type"] := "Property";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "configurable";
__n58["key"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := true;
__n60["raw"] := "true";
__n58["value"] := __n60;
__n58["computed"] := false;
__n58["kind"] := "init";
__n58["shorthand"] := false;
__n47 := [ __n48, __n58 ];
__n46["properties"] := __n47;
__n43 := [ __n44, __n45, __n46 ];
__n39["arguments"] := __n43;
__n38["expression"] := __n39;
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "AssignmentExpression";
__n62["operator"] := "=";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n63["computed"] := true;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "child";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 0.;
__n65["raw"] := "0";
__n63["property"] := __n65;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 12.;
__n66["raw"] := "12";
__n62["right"] := __n66;
__n61["expression"] := __n62;
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "AssignmentExpression";
__n68["operator"] := "=";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n69["computed"] := true;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "child";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 1.;
__n71["raw"] := "1";
__n69["property"] := __n71;
__n68["left"] := __n69;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 11.;
__n72["raw"] := "11";
__n68["right"] := __n72;
__n67["expression"] := __n68;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "AssignmentExpression";
__n74["operator"] := "=";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n75["computed"] := true;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "child";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 2.;
__n77["raw"] := "2";
__n75["property"] := __n77;
__n74["left"] := __n75;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 9.;
__n78["raw"] := "9";
__n74["right"] := __n78;
__n73["expression"] := __n74;
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "assert";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "Array";
__n86["object"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "prototype";
__n88["raw"] := "\"prototype\"";
__n86["property"] := __n88;
__n86["computed"] := true;
__n85["object"] := __n86;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "every";
__n89["raw"] := "\"every\"";
__n85["property"] := __n89;
__n85["computed"] := true;
__n84["object"] := __n85;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "call";
__n90["raw"] := "\"call\"";
__n84["property"] := __n90;
__n84["computed"] := true;
__n83["callee"] := __n84;
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "child";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "callbackfn1";
__n91 := [ __n92, __n93 ];
__n83["arguments"] := __n91;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "Array.prototype.every.call(child, callbackfn1) !== true";
__n94["raw"] := "'Array.prototype.every.call(child, callbackfn1) !== true'";
__n82 := [ __n83, __n94 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "CallExpression";
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "assert";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "sameValue";
__n99["raw"] := "\"sameValue\"";
__n97["property"] := __n99;
__n97["computed"] := true;
__n96["callee"] := __n97;
__n101 := {  };
__n101["type"] := "CallExpression";
__n102 := {  };
__n102["type"] := "MemberExpression";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "Array";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "prototype";
__n106["raw"] := "\"prototype\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n103["object"] := __n104;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "every";
__n107["raw"] := "\"every\"";
__n103["property"] := __n107;
__n103["computed"] := true;
__n102["object"] := __n103;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "call";
__n108["raw"] := "\"call\"";
__n102["property"] := __n108;
__n102["computed"] := true;
__n101["callee"] := __n102;
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "child";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "callbackfn2";
__n109 := [ __n110, __n111 ];
__n101["arguments"] := __n109;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := false;
__n112["raw"] := "false";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "Array.prototype.every.call(child, callbackfn2)";
__n113["raw"] := "'Array.prototype.every.call(child, callbackfn2)'";
__n100 := [ __n101, __n112, __n113 ];
__n96["arguments"] := __n100;
__n95["expression"] := __n96;
__n1 := [ __n2, __n4, __n6, __n15, __n25, __n31, __n38, __n61, __n67, __n73, __n79, __n95 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n114 := [ "proto", "Con", "child" ];
__n0["variableDeclarations"] := __n114;
__n116 := {  };
__n116["type"] := "FunctionDeclaration";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "callbackfn1";
__n116["id"] := __n117;
__n118 := [ "val", "idx", "obj" ];
__n116["params"] := __n118;
__n119 := {  };
__n119["type"] := "BlockStatement";
__n121 := {  };
__n121["type"] := "ReturnStatement";
__n122 := {  };
__n122["type"] := "BinaryExpression";
__n122["operator"] := ">";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "val";
__n122["left"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 10.;
__n124["raw"] := "10";
__n122["right"] := __n124;
__n121["argument"] := __n122;
__n120 := [ __n121 ];
__n119["body"] := __n120;
__n125 := [  ];
__n119["variableDeclarations"] := __n125;
__n126 := [  ];
__n119["functionDeclarations"] := __n126;
__n119["codeType"] := "function";
__n119["strict"] := false;
__n116["body"] := __n119;
__n116["generator"] := false;
__n116["expression"] := false;
__n116["async"] := false;
__n127 := {  };
__n127["type"] := "FunctionDeclaration";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "callbackfn2";
__n127["id"] := __n128;
__n129 := [ "val", "idx", "obj" ];
__n127["params"] := __n129;
__n130 := {  };
__n130["type"] := "BlockStatement";
__n132 := {  };
__n132["type"] := "ReturnStatement";
__n133 := {  };
__n133["type"] := "BinaryExpression";
__n133["operator"] := ">";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "val";
__n133["left"] := __n134;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := 11.;
__n135["raw"] := "11";
__n133["right"] := __n135;
__n132["argument"] := __n133;
__n131 := [ __n132 ];
__n130["body"] := __n131;
__n136 := [  ];
__n130["variableDeclarations"] := __n136;
__n137 := [  ];
__n130["functionDeclarations"] := __n137;
__n130["codeType"] := "function";
__n130["strict"] := false;
__n127["body"] := __n130;
__n127["generator"] := false;
__n127["expression"] := false;
__n127["async"] := false;
__n115 := [ __n116, __n127 ];
__n0["functionDeclarations"] := __n115;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}