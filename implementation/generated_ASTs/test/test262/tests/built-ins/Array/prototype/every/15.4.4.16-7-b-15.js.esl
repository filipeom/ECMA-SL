function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "arr";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ArrayExpression";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 1.;
__n11["raw"] := "1";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 2.;
__n12["raw"] := "2";
__n9 := [ __n10, __n11, __n12 ];
__n8["elements"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Object";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "defineProperty";
__n17["raw"] := "\"defineProperty\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Array";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "prototype";
__n21["raw"] := "\"prototype\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "2";
__n22["raw"] := "\"2\"";
__n23 := {  };
__n23["type"] := "ObjectExpression";
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "get";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "FunctionExpression";
__n27["id"] := null;
__n28 := [  ];
__n27["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ReturnStatement";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "prototype";
__n32["raw"] := "\"prototype\"";
__n31["argument"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n33 := [  ];
__n29["variableDeclarations"] := __n33;
__n34 := [  ];
__n29["functionDeclarations"] := __n34;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n27["body"] := __n29;
__n27["generator"] := false;
__n27["expression"] := false;
__n27["async"] := false;
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n35 := {  };
__n35["type"] := "Property";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "configurable";
__n35["key"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := true;
__n37["raw"] := "true";
__n35["value"] := __n37;
__n35["computed"] := false;
__n35["kind"] := "init";
__n35["shorthand"] := false;
__n24 := [ __n25, __n35 ];
__n23["properties"] := __n24;
__n18 := [ __n19, __n22, __n23 ];
__n14["arguments"] := __n18;
__n13["expression"] := __n14;
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Object";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "defineProperty";
__n42["raw"] := "\"defineProperty\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "arr";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "1";
__n45["raw"] := "\"1\"";
__n46 := {  };
__n46["type"] := "ObjectExpression";
__n48 := {  };
__n48["type"] := "Property";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "get";
__n48["key"] := __n49;
__n50 := {  };
__n50["type"] := "FunctionExpression";
__n50["id"] := null;
__n51 := [  ];
__n50["params"] := __n51;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "AssignmentExpression";
__n55["operator"] := "=";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "arr";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "length";
__n58["raw"] := "\"length\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["left"] := __n56;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 2.;
__n59["raw"] := "2";
__n55["right"] := __n59;
__n54["expression"] := __n55;
__n60 := {  };
__n60["type"] := "ReturnStatement";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 1.;
__n61["raw"] := "1";
__n60["argument"] := __n61;
__n53 := [ __n54, __n60 ];
__n52["body"] := __n53;
__n62 := [  ];
__n52["variableDeclarations"] := __n62;
__n63 := [  ];
__n52["functionDeclarations"] := __n63;
__n52["codeType"] := "function";
__n52["strict"] := false;
__n50["body"] := __n52;
__n50["generator"] := false;
__n50["expression"] := false;
__n50["async"] := false;
__n48["value"] := __n50;
__n48["computed"] := false;
__n48["kind"] := "init";
__n48["shorthand"] := false;
__n64 := {  };
__n64["type"] := "Property";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "configurable";
__n64["key"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := true;
__n66["raw"] := "true";
__n64["value"] := __n66;
__n64["computed"] := false;
__n64["kind"] := "init";
__n64["shorthand"] := false;
__n47 := [ __n48, __n64 ];
__n46["properties"] := __n47;
__n43 := [ __n44, __n45, __n46 ];
__n39["arguments"] := __n43;
__n38["expression"] := __n39;
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "assert";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "sameValue";
__n71["raw"] := "\"sameValue\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "arr";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "every";
__n76["raw"] := "\"every\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["callee"] := __n74;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "callbackfn";
__n77 := [ __n78 ];
__n73["arguments"] := __n77;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := false;
__n79["raw"] := "false";
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "arr.every(callbackfn)";
__n80["raw"] := "'arr.every(callbackfn)'";
__n72 := [ __n73, __n79, __n80 ];
__n68["arguments"] := __n72;
__n67["expression"] := __n68;
__n1 := [ __n2, __n4, __n13, __n38, __n67 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n81 := [ "arr" ];
__n0["variableDeclarations"] := __n81;
__n83 := {  };
__n83["type"] := "FunctionDeclaration";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "callbackfn";
__n83["id"] := __n84;
__n85 := [ "val", "idx", "obj" ];
__n83["params"] := __n85;
__n86 := {  };
__n86["type"] := "BlockStatement";
__n88 := {  };
__n88["type"] := "IfStatement";
__n89 := {  };
__n89["type"] := "LogicalExpression";
__n89["operator"] := "&&";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "===";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "idx";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 2.;
__n92["raw"] := "2";
__n90["right"] := __n92;
__n89["left"] := __n90;
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "===";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "val";
__n93["left"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "prototype";
__n95["raw"] := "\"prototype\"";
__n93["right"] := __n95;
__n89["right"] := __n93;
__n88["test"] := __n89;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ReturnStatement";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := false;
__n99["raw"] := "false";
__n98["argument"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n88["consequent"] := __n96;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "ReturnStatement";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := true;
__n103["raw"] := "true";
__n102["argument"] := __n103;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n88["alternate"] := __n100;
__n87 := [ __n88 ];
__n86["body"] := __n87;
__n104 := [  ];
__n86["variableDeclarations"] := __n104;
__n105 := [  ];
__n86["functionDeclarations"] := __n105;
__n86["codeType"] := "function";
__n86["strict"] := false;
__n83["body"] := __n86;
__n83["generator"] := false;
__n83["expression"] := false;
__n83["async"] := false;
__n82 := [ __n83 ];
__n0["functionDeclarations"] := __n82;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}