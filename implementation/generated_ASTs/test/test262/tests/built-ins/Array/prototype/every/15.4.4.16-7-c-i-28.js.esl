function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "preIterVisible";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "arr";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ArrayExpression";
__n12 := [  ];
__n11["elements"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "callbackfn";
__n13["expression"] := __n14;
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Object";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "defineProperty";
__n19["raw"] := "\"defineProperty\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "arr";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "0";
__n22["raw"] := "\"0\"";
__n23 := {  };
__n23["type"] := "ObjectExpression";
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "get";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "FunctionExpression";
__n27["id"] := null;
__n28 := [  ];
__n27["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "preIterVisible";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := true;
__n34["raw"] := "true";
__n32["right"] := __n34;
__n31["expression"] := __n32;
__n35 := {  };
__n35["type"] := "ReturnStatement";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 11.;
__n36["raw"] := "11";
__n35["argument"] := __n36;
__n30 := [ __n31, __n35 ];
__n29["body"] := __n30;
__n37 := [  ];
__n29["variableDeclarations"] := __n37;
__n38 := [  ];
__n29["functionDeclarations"] := __n38;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n27["body"] := __n29;
__n27["generator"] := false;
__n27["expression"] := false;
__n27["async"] := false;
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n39 := {  };
__n39["type"] := "Property";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "configurable";
__n39["key"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := true;
__n41["raw"] := "true";
__n39["value"] := __n41;
__n39["computed"] := false;
__n39["kind"] := "init";
__n39["shorthand"] := false;
__n24 := [ __n25, __n39 ];
__n23["properties"] := __n24;
__n20 := [ __n21, __n22, __n23 ];
__n16["arguments"] := __n20;
__n15["expression"] := __n16;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Object";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "defineProperty";
__n46["raw"] := "\"defineProperty\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "arr";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "1";
__n49["raw"] := "\"1\"";
__n50 := {  };
__n50["type"] := "ObjectExpression";
__n52 := {  };
__n52["type"] := "Property";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "get";
__n52["key"] := __n53;
__n54 := {  };
__n54["type"] := "FunctionExpression";
__n54["id"] := null;
__n55 := [  ];
__n54["params"] := __n55;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "IfStatement";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "preIterVisible";
__n58["test"] := __n59;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ReturnStatement";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 9.;
__n63["raw"] := "9";
__n62["argument"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n58["consequent"] := __n60;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ReturnStatement";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 11.;
__n67["raw"] := "11";
__n66["argument"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n58["alternate"] := __n64;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n68 := [  ];
__n56["variableDeclarations"] := __n68;
__n69 := [  ];
__n56["functionDeclarations"] := __n69;
__n56["codeType"] := "function";
__n56["strict"] := false;
__n54["body"] := __n56;
__n54["generator"] := false;
__n54["expression"] := false;
__n54["async"] := false;
__n52["value"] := __n54;
__n52["computed"] := false;
__n52["kind"] := "init";
__n52["shorthand"] := false;
__n70 := {  };
__n70["type"] := "Property";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "configurable";
__n70["key"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := true;
__n72["raw"] := "true";
__n70["value"] := __n72;
__n70["computed"] := false;
__n70["kind"] := "init";
__n70["shorthand"] := false;
__n51 := [ __n52, __n70 ];
__n50["properties"] := __n51;
__n47 := [ __n48, __n49, __n50 ];
__n43["arguments"] := __n47;
__n42["expression"] := __n43;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "assert";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "sameValue";
__n77["raw"] := "\"sameValue\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "arr";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "every";
__n82["raw"] := "\"every\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n79["callee"] := __n80;
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "callbackfn";
__n83 := [ __n84 ];
__n79["arguments"] := __n83;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := false;
__n85["raw"] := "false";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "arr.every(callbackfn)";
__n86["raw"] := "'arr.every(callbackfn)'";
__n78 := [ __n79, __n85, __n86 ];
__n74["arguments"] := __n78;
__n73["expression"] := __n74;
__n1 := [ __n2, __n7, __n13, __n15, __n42, __n73 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n87 := [ "preIterVisible", "arr" ];
__n0["variableDeclarations"] := __n87;
__n89 := {  };
__n89["type"] := "FunctionDeclaration";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "callbackfn";
__n89["id"] := __n90;
__n91 := [ "val", "idx", "obj" ];
__n89["params"] := __n91;
__n92 := {  };
__n92["type"] := "BlockStatement";
__n94 := {  };
__n94["type"] := "ReturnStatement";
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := ">";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "val";
__n95["left"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 10.;
__n97["raw"] := "10";
__n95["right"] := __n97;
__n94["argument"] := __n95;
__n93 := [ __n94 ];
__n92["body"] := __n93;
__n98 := [  ];
__n92["variableDeclarations"] := __n98;
__n99 := [  ];
__n92["functionDeclarations"] := __n99;
__n92["codeType"] := "function";
__n92["strict"] := false;
__n89["body"] := __n92;
__n89["generator"] := false;
__n89["expression"] := false;
__n89["async"] := false;
__n88 := [ __n89 ];
__n0["functionDeclarations"] := __n88;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}