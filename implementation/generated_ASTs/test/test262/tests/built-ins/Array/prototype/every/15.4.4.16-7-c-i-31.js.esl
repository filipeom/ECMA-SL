function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arr";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ArrayExpression";
__n14 := [  ];
__n13["elements"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "AssignmentExpression";
__n16["operator"] := "=";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n17["computed"] := true;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "arr";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 5.;
__n19["raw"] := "5";
__n17["property"] := __n19;
__n16["left"] := __n17;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 10.;
__n20["raw"] := "10";
__n16["right"] := __n20;
__n15["expression"] := __n16;
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "AssignmentExpression";
__n22["operator"] := "=";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n23["computed"] := true;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "arr";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 10.;
__n25["raw"] := "10";
__n23["property"] := __n25;
__n22["left"] := __n23;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 100.;
__n26["raw"] := "100";
__n22["right"] := __n26;
__n21["expression"] := __n22;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Object";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "defineProperty";
__n31["raw"] := "\"defineProperty\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "arr";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "1";
__n34["raw"] := "\"1\"";
__n35 := {  };
__n35["type"] := "ObjectExpression";
__n37 := {  };
__n37["type"] := "Property";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "get";
__n37["key"] := __n38;
__n39 := {  };
__n39["type"] := "FunctionExpression";
__n39["id"] := null;
__n40 := [  ];
__n39["params"] := __n40;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ThrowStatement";
__n44 := {  };
__n44["type"] := "NewExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "RangeError";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "unhandle exception happened in getter";
__n47["raw"] := "\"unhandle exception happened in getter\"";
__n46 := [ __n47 ];
__n44["arguments"] := __n46;
__n43["argument"] := __n44;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n48 := [  ];
__n41["variableDeclarations"] := __n48;
__n49 := [  ];
__n41["functionDeclarations"] := __n49;
__n41["codeType"] := "function";
__n41["strict"] := false;
__n39["body"] := __n41;
__n39["generator"] := false;
__n39["expression"] := false;
__n39["async"] := false;
__n37["value"] := __n39;
__n37["computed"] := false;
__n37["kind"] := "init";
__n37["shorthand"] := false;
__n50 := {  };
__n50["type"] := "Property";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "configurable";
__n50["key"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := true;
__n52["raw"] := "true";
__n50["value"] := __n52;
__n50["computed"] := false;
__n50["kind"] := "init";
__n50["shorthand"] := false;
__n36 := [ __n37, __n50 ];
__n35["properties"] := __n36;
__n32 := [ __n33, __n34, __n35 ];
__n28["arguments"] := __n32;
__n27["expression"] := __n28;
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "assert";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "throws";
__n57["raw"] := "\"throws\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "RangeError";
__n60 := {  };
__n60["type"] := "FunctionExpression";
__n60["id"] := null;
__n61 := [  ];
__n60["params"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "arr";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "every";
__n68["raw"] := "\"every\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "callbackfn";
__n69 := [ __n70 ];
__n65["arguments"] := __n69;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n71 := [  ];
__n62["variableDeclarations"] := __n71;
__n72 := [  ];
__n62["functionDeclarations"] := __n72;
__n62["codeType"] := "function";
__n62["strict"] := false;
__n60["body"] := __n62;
__n60["generator"] := false;
__n60["expression"] := false;
__n60["async"] := false;
__n58 := [ __n59, __n60 ];
__n54["arguments"] := __n58;
__n53["expression"] := __n54;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "assert";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "sameValue";
__n77["raw"] := "\"sameValue\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "accessed";
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := false;
__n80["raw"] := "false";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "accessed";
__n81["raw"] := "'accessed'";
__n78 := [ __n79, __n80, __n81 ];
__n74["arguments"] := __n78;
__n73["expression"] := __n74;
__n1 := [ __n2, __n7, __n9, __n15, __n21, __n27, __n53, __n73 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n82 := [ "accessed", "arr" ];
__n0["variableDeclarations"] := __n82;
__n84 := {  };
__n84["type"] := "FunctionDeclaration";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "callbackfn";
__n84["id"] := __n85;
__n86 := [ "val", "idx", "obj" ];
__n84["params"] := __n86;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := ">";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "idx";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 1.;
__n92["raw"] := "1";
__n90["right"] := __n92;
__n89["test"] := __n90;
__n93 := {  };
__n93["type"] := "BlockStatement";
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "AssignmentExpression";
__n96["operator"] := "=";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "accessed";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := true;
__n98["raw"] := "true";
__n96["right"] := __n98;
__n95["expression"] := __n96;
__n94 := [ __n95 ];
__n93["body"] := __n94;
__n89["consequent"] := __n93;
__n89["alternate"] := null;
__n99 := {  };
__n99["type"] := "ReturnStatement";
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := true;
__n100["raw"] := "true";
__n99["argument"] := __n100;
__n88 := [ __n89, __n99 ];
__n87["body"] := __n88;
__n101 := [  ];
__n87["variableDeclarations"] := __n101;
__n102 := [  ];
__n87["functionDeclarations"] := __n102;
__n87["codeType"] := "function";
__n87["strict"] := false;
__n84["body"] := __n87;
__n84["generator"] := false;
__n84["expression"] := false;
__n84["async"] := false;
__n83 := [ __n84 ];
__n0["functionDeclarations"] := __n83;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}