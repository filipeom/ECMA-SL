function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "assert";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "ArrayExpression";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 11.;
__n17["raw"] := "11";
__n16 := [ __n17 ];
__n15["elements"] := __n16;
__n14["object"] := __n15;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "every";
__n18["raw"] := "\"every\"";
__n14["property"] := __n18;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "callbackfn";
__n19 := [ __n20 ];
__n13["arguments"] := __n19;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "[11].every(callbackfn) !== true";
__n21["raw"] := "'[11].every(callbackfn) !== true'";
__n12 := [ __n13, __n21 ];
__n10["arguments"] := __n12;
__n9["expression"] := __n10;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "assert";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "accessed";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "accessed !== true";
__n27["raw"] := "'accessed !== true'";
__n25 := [ __n26, __n27 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n1 := [ __n2, __n7, __n9, __n22 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n28 := [ "accessed" ];
__n0["variableDeclarations"] := __n28;
__n30 := {  };
__n30["type"] := "FunctionDeclaration";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "callbackfn";
__n30["id"] := __n31;
__n32 := [ "val", "idx", "obj" ];
__n30["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "AssignmentExpression";
__n36["operator"] := "=";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "accessed";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := true;
__n38["raw"] := "true";
__n36["right"] := __n38;
__n35["expression"] := __n36;
__n39 := {  };
__n39["type"] := "ReturnStatement";
__n40 := {  };
__n40["type"] := "FunctionExpression";
__n40["id"] := null;
__n41 := [  ];
__n40["params"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n43 := [  ];
__n42["body"] := __n43;
__n44 := [  ];
__n42["variableDeclarations"] := __n44;
__n45 := [  ];
__n42["functionDeclarations"] := __n45;
__n42["codeType"] := "function";
__n42["strict"] := false;
__n40["body"] := __n42;
__n40["generator"] := false;
__n40["expression"] := false;
__n40["async"] := false;
__n39["argument"] := __n40;
__n34 := [ __n35, __n39 ];
__n33["body"] := __n34;
__n46 := [  ];
__n33["variableDeclarations"] := __n46;
__n47 := [  ];
__n33["functionDeclarations"] := __n47;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n30["body"] := __n33;
__n30["generator"] := false;
__n30["expression"] := false;
__n30["async"] := false;
__n29 := [ __n30 ];
__n0["functionDeclarations"] := __n29;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}