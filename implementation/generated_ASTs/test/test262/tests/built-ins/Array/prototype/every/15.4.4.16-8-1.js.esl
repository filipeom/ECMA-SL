function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "cb";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "i";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "ArrayExpression";
__n11 := [  ];
__n10["elements"] := __n11;
__n9["object"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "every";
__n12["raw"] := "\"every\"";
__n9["property"] := __n12;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "cb";
__n13 := [ __n14 ];
__n8["arguments"] := __n13;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "assert";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "sameValue";
__n19["raw"] := "\"sameValue\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "i";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := true;
__n22["raw"] := "true";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "i";
__n23["raw"] := "'i'";
__n20 := [ __n21, __n22, __n23 ];
__n16["arguments"] := __n20;
__n15["expression"] := __n16;
__n1 := [ __n2, __n4, __n15 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n24 := [ "i" ];
__n0["variableDeclarations"] := __n24;
__n26 := {  };
__n26["type"] := "FunctionDeclaration";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "cb";
__n26["id"] := __n27;
__n28 := [  ];
__n26["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n30 := [  ];
__n29["body"] := __n30;
__n31 := [  ];
__n29["variableDeclarations"] := __n31;
__n32 := [  ];
__n29["functionDeclarations"] := __n32;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n26["body"] := __n29;
__n26["generator"] := false;
__n26["expression"] := false;
__n26["async"] := false;
__n25 := [ __n26 ];
__n0["functionDeclarations"] := __n25;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}