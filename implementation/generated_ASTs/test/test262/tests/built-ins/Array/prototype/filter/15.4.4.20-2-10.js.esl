function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "proto";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ObjectExpression";
__n9 := [  ];
__n8["properties"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Object";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "defineProperty";
__n14["raw"] := "\"defineProperty\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "proto";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "length";
__n17["raw"] := "\"length\"";
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "get";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "FunctionExpression";
__n22["id"] := null;
__n23 := [  ];
__n22["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ReturnStatement";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 2.;
__n27["raw"] := "2";
__n26["argument"] := __n27;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n28 := [  ];
__n24["variableDeclarations"] := __n28;
__n29 := [  ];
__n24["functionDeclarations"] := __n29;
__n24["codeType"] := "function";
__n24["strict"] := false;
__n22["body"] := __n24;
__n22["generator"] := false;
__n22["expression"] := false;
__n22["async"] := false;
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "configurable";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := true;
__n32["raw"] := "true";
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n19 := [ __n20, __n30 ];
__n18["properties"] := __n19;
__n15 := [ __n16, __n17, __n18 ];
__n11["arguments"] := __n15;
__n10["expression"] := __n11;
__n33 := {  };
__n33["type"] := "VariableDeclaration";
__n35 := {  };
__n35["type"] := "VariableDeclarator";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Con";
__n35["id"] := __n36;
__n37 := {  };
__n37["type"] := "FunctionExpression";
__n37["id"] := null;
__n38 := [  ];
__n37["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n40 := [  ];
__n39["body"] := __n40;
__n41 := [  ];
__n39["variableDeclarations"] := __n41;
__n42 := [  ];
__n39["functionDeclarations"] := __n42;
__n39["codeType"] := "function";
__n39["strict"] := false;
__n37["body"] := __n39;
__n37["generator"] := false;
__n37["expression"] := false;
__n37["async"] := false;
__n35["init"] := __n37;
__n34 := [ __n35 ];
__n33["declarations"] := __n34;
__n33["kind"] := "var";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "AssignmentExpression";
__n44["operator"] := "=";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "Con";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "prototype";
__n47["raw"] := "\"prototype\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["left"] := __n45;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "proto";
__n44["right"] := __n48;
__n43["expression"] := __n44;
__n49 := {  };
__n49["type"] := "VariableDeclaration";
__n51 := {  };
__n51["type"] := "VariableDeclarator";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "child";
__n51["id"] := __n52;
__n53 := {  };
__n53["type"] := "NewExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "Con";
__n53["callee"] := __n54;
__n55 := [  ];
__n53["arguments"] := __n55;
__n51["init"] := __n53;
__n50 := [ __n51 ];
__n49["declarations"] := __n50;
__n49["kind"] := "var";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "AssignmentExpression";
__n57["operator"] := "=";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n58["computed"] := true;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "child";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 0.;
__n60["raw"] := "0";
__n58["property"] := __n60;
__n57["left"] := __n58;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 12.;
__n61["raw"] := "12";
__n57["right"] := __n61;
__n56["expression"] := __n57;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "AssignmentExpression";
__n63["operator"] := "=";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n64["computed"] := true;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "child";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 1.;
__n66["raw"] := "1";
__n64["property"] := __n66;
__n63["left"] := __n64;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 11.;
__n67["raw"] := "11";
__n63["right"] := __n67;
__n62["expression"] := __n63;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "AssignmentExpression";
__n69["operator"] := "=";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n70["computed"] := true;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "child";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 2.;
__n72["raw"] := "2";
__n70["property"] := __n72;
__n69["left"] := __n70;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 9.;
__n73["raw"] := "9";
__n69["right"] := __n73;
__n68["expression"] := __n69;
__n74 := {  };
__n74["type"] := "VariableDeclaration";
__n76 := {  };
__n76["type"] := "VariableDeclarator";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "newArr";
__n76["id"] := __n77;
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "Array";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "prototype";
__n83["raw"] := "\"prototype\"";
__n81["property"] := __n83;
__n81["computed"] := true;
__n80["object"] := __n81;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "filter";
__n84["raw"] := "\"filter\"";
__n80["property"] := __n84;
__n80["computed"] := true;
__n79["object"] := __n80;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "call";
__n85["raw"] := "\"call\"";
__n79["property"] := __n85;
__n79["computed"] := true;
__n78["callee"] := __n79;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "child";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "callbackfn";
__n86 := [ __n87, __n88 ];
__n78["arguments"] := __n86;
__n76["init"] := __n78;
__n75 := [ __n76 ];
__n74["declarations"] := __n75;
__n74["kind"] := "var";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "assert";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "sameValue";
__n93["raw"] := "\"sameValue\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n90["callee"] := __n91;
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "newArr";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "length";
__n97["raw"] := "\"length\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 2.;
__n98["raw"] := "2";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "newArr.length";
__n99["raw"] := "'newArr.length'";
__n94 := [ __n95, __n98, __n99 ];
__n90["arguments"] := __n94;
__n89["expression"] := __n90;
__n1 := [ __n2, __n4, __n10, __n33, __n43, __n49, __n56, __n62, __n68, __n74, __n89 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n100 := [ "proto", "Con", "child", "newArr" ];
__n0["variableDeclarations"] := __n100;
__n102 := {  };
__n102["type"] := "FunctionDeclaration";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "callbackfn";
__n102["id"] := __n103;
__n104 := [ "val", "idx", "obj" ];
__n102["params"] := __n104;
__n105 := {  };
__n105["type"] := "BlockStatement";
__n107 := {  };
__n107["type"] := "ReturnStatement";
__n108 := {  };
__n108["type"] := "BinaryExpression";
__n108["operator"] := "===";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "obj";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "length";
__n111["raw"] := "\"length\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n108["left"] := __n109;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 2.;
__n112["raw"] := "2";
__n108["right"] := __n112;
__n107["argument"] := __n108;
__n106 := [ __n107 ];
__n105["body"] := __n106;
__n113 := [  ];
__n105["variableDeclarations"] := __n113;
__n114 := [  ];
__n105["functionDeclarations"] := __n114;
__n105["codeType"] := "function";
__n105["strict"] := false;
__n102["body"] := __n105;
__n102["generator"] := false;
__n102["expression"] := false;
__n102["async"] := false;
__n101 := [ __n102 ];
__n0["functionDeclarations"] := __n101;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}