function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "objArray";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "NewExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Array";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 10.;
__n14["raw"] := "10";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "callbackfn";
__n15["expression"] := __n16;
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "newArr";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "ArrayExpression";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 11.;
__n25["raw"] := "11";
__n24 := [ __n25 ];
__n23["elements"] := __n24;
__n22["object"] := __n23;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "filter";
__n26["raw"] := "\"filter\"";
__n22["property"] := __n26;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "callbackfn";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "objArray";
__n27 := [ __n28, __n29 ];
__n21["arguments"] := __n27;
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "assert";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "sameValue";
__n34["raw"] := "\"sameValue\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n36 := {  };
__n36["type"] := "MemberExpression";
__n36["computed"] := true;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "newArr";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 0.;
__n38["raw"] := "0";
__n36["property"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 11.;
__n39["raw"] := "11";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "newArr[0]";
__n40["raw"] := "'newArr[0]'";
__n35 := [ __n36, __n39, __n40 ];
__n31["arguments"] := __n35;
__n30["expression"] := __n31;
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "assert";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "accessed";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "accessed !== true";
__n46["raw"] := "'accessed !== true'";
__n44 := [ __n45, __n46 ];
__n42["arguments"] := __n44;
__n41["expression"] := __n42;
__n1 := [ __n2, __n7, __n15, __n17, __n30, __n41 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n47 := [ "accessed", "objArray", "newArr" ];
__n0["variableDeclarations"] := __n47;
__n49 := {  };
__n49["type"] := "FunctionDeclaration";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "callbackfn";
__n49["id"] := __n50;
__n51 := [ "val", "idx", "obj" ];
__n49["params"] := __n51;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "AssignmentExpression";
__n55["operator"] := "=";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "accessed";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := true;
__n57["raw"] := "true";
__n55["right"] := __n57;
__n54["expression"] := __n55;
__n58 := {  };
__n58["type"] := "ReturnStatement";
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "===";
__n60 := {  };
__n60["type"] := "ThisExpression";
__n59["left"] := __n60;
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "objArray";
__n59["right"] := __n61;
__n58["argument"] := __n59;
__n53 := [ __n54, __n58 ];
__n52["body"] := __n53;
__n62 := [  ];
__n52["variableDeclarations"] := __n62;
__n63 := [  ];
__n52["functionDeclarations"] := __n63;
__n52["codeType"] := "function";
__n52["strict"] := false;
__n49["body"] := __n52;
__n49["generator"] := false;
__n49["expression"] := false;
__n49["async"] := false;
__n48 := [ __n49 ];
__n0["functionDeclarations"] := __n48;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}