function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "cb";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "a";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "ArrayExpression";
__n11 := [  ];
__n10["elements"] := __n11;
__n9["object"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "filter";
__n12["raw"] := "\"filter\"";
__n9["property"] := __n12;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "cb";
__n13 := [ __n14 ];
__n8["arguments"] := __n13;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "assert";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "Array";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "isArray";
__n22["raw"] := "\"isArray\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "a";
__n23 := [ __n24 ];
__n19["arguments"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "Array.isArray(a) !== true";
__n25["raw"] := "'Array.isArray(a) !== true'";
__n18 := [ __n19, __n25 ];
__n16["arguments"] := __n18;
__n15["expression"] := __n16;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "assert";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "sameValue";
__n30["raw"] := "\"sameValue\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "a";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "length";
__n34["raw"] := "\"length\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 0.;
__n35["raw"] := "0";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "a.length";
__n36["raw"] := "'a.length'";
__n31 := [ __n32, __n35, __n36 ];
__n27["arguments"] := __n31;
__n26["expression"] := __n27;
__n1 := [ __n2, __n4, __n15, __n26 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n37 := [ "a" ];
__n0["variableDeclarations"] := __n37;
__n39 := {  };
__n39["type"] := "FunctionDeclaration";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "cb";
__n39["id"] := __n40;
__n41 := [  ];
__n39["params"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n43 := [  ];
__n42["body"] := __n43;
__n44 := [  ];
__n42["variableDeclarations"] := __n44;
__n45 := [  ];
__n42["functionDeclarations"] := __n45;
__n42["codeType"] := "function";
__n42["strict"] := false;
__n39["body"] := __n42;
__n39["generator"] := false;
__n39["expression"] := false;
__n39["async"] := false;
__n38 := [ __n39 ];
__n0["functionDeclarations"] := __n38;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}