function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "AssignmentExpression";
__n5["operator"] := "=";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n6["computed"] := true;
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Array";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "prototype";
__n9["raw"] := "\"prototype\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["object"] := __n7;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 4.;
__n10["raw"] := "4";
__n6["property"] := __n10;
__n5["left"] := __n6;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 5.;
__n11["raw"] := "5";
__n5["right"] := __n11;
__n4["expression"] := __n5;
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "srcArr";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "ArrayExpression";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.;
__n18["raw"] := "1";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 2.;
__n19["raw"] := "2";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 3.;
__n20["raw"] := "3";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 4.;
__n21["raw"] := "4";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 5.;
__n22["raw"] := "5";
__n17 := [ __n18, __n19, __n20, __n21, __n22 ];
__n16["elements"] := __n17;
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n23 := {  };
__n23["type"] := "VariableDeclaration";
__n25 := {  };
__n25["type"] := "VariableDeclarator";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "resArr";
__n25["id"] := __n26;
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "srcArr";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "filter";
__n30["raw"] := "\"filter\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "callbackfn";
__n31 := [ __n32 ];
__n27["arguments"] := __n31;
__n25["init"] := __n27;
__n24 := [ __n25 ];
__n23["declarations"] := __n24;
__n23["kind"] := "var";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "UnaryExpression";
__n34["operator"] := "delete";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n35["computed"] := true;
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Array";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "prototype";
__n38["raw"] := "\"prototype\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["object"] := __n36;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 4.;
__n39["raw"] := "4";
__n35["property"] := __n39;
__n34["argument"] := __n35;
__n34["prefix"] := true;
__n33["expression"] := __n34;
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "assert";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "sameValue";
__n44["raw"] := "\"sameValue\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["callee"] := __n42;
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "resArr";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "length";
__n48["raw"] := "\"length\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 4.;
__n49["raw"] := "4";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "resArr.length";
__n50["raw"] := "'resArr.length'";
__n45 := [ __n46, __n49, __n50 ];
__n41["arguments"] := __n45;
__n40["expression"] := __n41;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "assert";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "sameValue";
__n55["raw"] := "\"sameValue\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n57 := {  };
__n57["type"] := "MemberExpression";
__n57["computed"] := true;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "resArr";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 0.;
__n59["raw"] := "0";
__n57["property"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 1.;
__n60["raw"] := "1";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "resArr[0]";
__n61["raw"] := "'resArr[0]'";
__n56 := [ __n57, __n60, __n61 ];
__n52["arguments"] := __n56;
__n51["expression"] := __n52;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "assert";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "sameValue";
__n66["raw"] := "\"sameValue\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n68 := {  };
__n68["type"] := "MemberExpression";
__n68["computed"] := true;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "resArr";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 3.;
__n70["raw"] := "3";
__n68["property"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 5.;
__n71["raw"] := "5";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "resArr[3]";
__n72["raw"] := "'resArr[3]'";
__n67 := [ __n68, __n71, __n72 ];
__n63["arguments"] := __n67;
__n62["expression"] := __n63;
__n1 := [ __n2, __n4, __n12, __n23, __n33, __n40, __n51, __n62 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n73 := [ "srcArr", "resArr" ];
__n0["variableDeclarations"] := __n73;
__n75 := {  };
__n75["type"] := "FunctionDeclaration";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "callbackfn";
__n75["id"] := __n76;
__n77 := [ "val", "idx", "obj" ];
__n75["params"] := __n77;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "UnaryExpression";
__n81["operator"] := "delete";
__n82 := {  };
__n82["type"] := "MemberExpression";
__n82["computed"] := true;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "srcArr";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := 2.;
__n84["raw"] := "2";
__n82["property"] := __n84;
__n81["argument"] := __n82;
__n81["prefix"] := true;
__n80["expression"] := __n81;
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "UnaryExpression";
__n86["operator"] := "delete";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n87["computed"] := true;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "srcArr";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 4.;
__n89["raw"] := "4";
__n87["property"] := __n89;
__n86["argument"] := __n87;
__n86["prefix"] := true;
__n85["expression"] := __n86;
__n90 := {  };
__n90["type"] := "IfStatement";
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := ">";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "val";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 0.;
__n93["raw"] := "0";
__n91["right"] := __n93;
__n90["test"] := __n91;
__n94 := {  };
__n94["type"] := "ReturnStatement";
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := true;
__n95["raw"] := "true";
__n94["argument"] := __n95;
__n90["consequent"] := __n94;
__n96 := {  };
__n96["type"] := "ReturnStatement";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := false;
__n97["raw"] := "false";
__n96["argument"] := __n97;
__n90["alternate"] := __n96;
__n79 := [ __n80, __n85, __n90 ];
__n78["body"] := __n79;
__n98 := [  ];
__n78["variableDeclarations"] := __n98;
__n99 := [  ];
__n78["functionDeclarations"] := __n99;
__n78["codeType"] := "function";
__n78["strict"] := false;
__n75["body"] := __n78;
__n75["generator"] := false;
__n75["expression"] := false;
__n75["async"] := false;
__n74 := [ __n75 ];
__n0["functionDeclarations"] := __n74;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}