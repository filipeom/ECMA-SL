function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "o";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Object";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "AssignmentExpression";
__n10["operator"] := "=";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "o";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "srcArr";
__n13["raw"] := "\"srcArr\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["left"] := __n11;
__n14 := {  };
__n14["type"] := "ArrayExpression";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 2.;
__n17["raw"] := "2";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 3.;
__n18["raw"] := "3";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 4.;
__n19["raw"] := "4";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 5.;
__n20["raw"] := "5";
__n15 := [ __n16, __n17, __n18, __n19, __n20 ];
__n14["elements"] := __n15;
__n10["right"] := __n14;
__n9["expression"] := __n10;
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "callbackfn";
__n21["expression"] := __n22;
__n23 := {  };
__n23["type"] := "VariableDeclaration";
__n25 := {  };
__n25["type"] := "VariableDeclarator";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "resArr";
__n25["id"] := __n26;
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "o";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "srcArr";
__n31["raw"] := "\"srcArr\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["object"] := __n29;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "filter";
__n32["raw"] := "\"filter\"";
__n28["property"] := __n32;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "callbackfn";
__n33 := [ __n34 ];
__n27["arguments"] := __n33;
__n25["init"] := __n27;
__n24 := [ __n25 ];
__n23["declarations"] := __n24;
__n23["kind"] := "var";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "assert";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "sameValue";
__n39["raw"] := "\"sameValue\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "resArr";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "length";
__n43["raw"] := "\"length\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 5.;
__n44["raw"] := "5";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "resArr.length";
__n45["raw"] := "'resArr.length'";
__n40 := [ __n41, __n44, __n45 ];
__n36["arguments"] := __n40;
__n35["expression"] := __n36;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "assert";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "sameValue";
__n50["raw"] := "\"sameValue\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "UnaryExpression";
__n52["operator"] := "typeof";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "o";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "srcArr";
__n55["raw"] := "\"srcArr\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["argument"] := __n53;
__n52["prefix"] := true;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "undefined";
__n56["raw"] := "\"undefined\"";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "typeof o.srcArr";
__n57["raw"] := "'typeof o.srcArr'";
__n51 := [ __n52, __n56, __n57 ];
__n47["arguments"] := __n51;
__n46["expression"] := __n47;
__n1 := [ __n2, __n9, __n21, __n23, __n35, __n46 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n58 := [ "o", "resArr" ];
__n0["variableDeclarations"] := __n58;
__n60 := {  };
__n60["type"] := "FunctionDeclaration";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "callbackfn";
__n60["id"] := __n61;
__n62 := [ "val", "idx", "obj" ];
__n60["params"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "UnaryExpression";
__n66["operator"] := "delete";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "o";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "srcArr";
__n69["raw"] := "\"srcArr\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["argument"] := __n67;
__n66["prefix"] := true;
__n65["expression"] := __n66;
__n70 := {  };
__n70["type"] := "IfStatement";
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := ">";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "val";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 0.;
__n73["raw"] := "0";
__n71["right"] := __n73;
__n70["test"] := __n71;
__n74 := {  };
__n74["type"] := "ReturnStatement";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := true;
__n75["raw"] := "true";
__n74["argument"] := __n75;
__n70["consequent"] := __n74;
__n76 := {  };
__n76["type"] := "ReturnStatement";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := false;
__n77["raw"] := "false";
__n76["argument"] := __n77;
__n70["alternate"] := __n76;
__n64 := [ __n65, __n70 ];
__n63["body"] := __n64;
__n78 := [  ];
__n63["variableDeclarations"] := __n78;
__n79 := [  ];
__n63["functionDeclarations"] := __n79;
__n63["codeType"] := "function";
__n63["strict"] := false;
__n60["body"] := __n63;
__n60["generator"] := false;
__n60["expression"] := false;
__n60["async"] := false;
__n59 := [ __n60 ];
__n0["functionDeclarations"] := __n59;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}