function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "arr";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ArrayExpression";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 2.;
__n11["raw"] := "2";
__n9 := [ __n10, null, __n11 ];
__n8["elements"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Object";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "defineProperty";
__n16["raw"] := "\"defineProperty\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "arr";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "0";
__n19["raw"] := "\"0\"";
__n20 := {  };
__n20["type"] := "ObjectExpression";
__n22 := {  };
__n22["type"] := "Property";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "get";
__n22["key"] := __n23;
__n24 := {  };
__n24["type"] := "FunctionExpression";
__n24["id"] := null;
__n25 := [  ];
__n24["params"] := __n25;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "UnaryExpression";
__n29["operator"] := "delete";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n30["computed"] := true;
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Array";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "prototype";
__n33["raw"] := "\"prototype\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["object"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1.;
__n34["raw"] := "1";
__n30["property"] := __n34;
__n29["argument"] := __n30;
__n29["prefix"] := true;
__n28["expression"] := __n29;
__n35 := {  };
__n35["type"] := "ReturnStatement";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 0.;
__n36["raw"] := "0";
__n35["argument"] := __n36;
__n27 := [ __n28, __n35 ];
__n26["body"] := __n27;
__n37 := [  ];
__n26["variableDeclarations"] := __n37;
__n38 := [  ];
__n26["functionDeclarations"] := __n38;
__n26["codeType"] := "function";
__n26["strict"] := false;
__n24["body"] := __n26;
__n24["generator"] := false;
__n24["expression"] := false;
__n24["async"] := false;
__n22["value"] := __n24;
__n22["computed"] := false;
__n22["kind"] := "init";
__n22["shorthand"] := false;
__n39 := {  };
__n39["type"] := "Property";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "configurable";
__n39["key"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := true;
__n41["raw"] := "true";
__n39["value"] := __n41;
__n39["computed"] := false;
__n39["kind"] := "init";
__n39["shorthand"] := false;
__n21 := [ __n22, __n39 ];
__n20["properties"] := __n21;
__n17 := [ __n18, __n19, __n20 ];
__n13["arguments"] := __n17;
__n12["expression"] := __n13;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n44["computed"] := true;
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "Array";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "prototype";
__n47["raw"] := "\"prototype\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["object"] := __n45;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1.;
__n48["raw"] := "1";
__n44["property"] := __n48;
__n43["left"] := __n44;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.;
__n49["raw"] := "1";
__n43["right"] := __n49;
__n42["expression"] := __n43;
__n50 := {  };
__n50["type"] := "VariableDeclaration";
__n52 := {  };
__n52["type"] := "VariableDeclarator";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "newArr";
__n52["id"] := __n53;
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "arr";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "filter";
__n57["raw"] := "\"filter\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "callbackfn";
__n58 := [ __n59 ];
__n54["arguments"] := __n58;
__n52["init"] := __n54;
__n51 := [ __n52 ];
__n50["declarations"] := __n51;
__n50["kind"] := "var";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "assert";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "sameValue";
__n64["raw"] := "\"sameValue\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "newArr";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "length";
__n68["raw"] := "\"length\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 2.;
__n69["raw"] := "2";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "newArr.length";
__n70["raw"] := "'newArr.length'";
__n65 := [ __n66, __n69, __n70 ];
__n61["arguments"] := __n65;
__n60["expression"] := __n61;
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "assert";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "notSameValue";
__n75["raw"] := "\"notSameValue\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n72["callee"] := __n73;
__n77 := {  };
__n77["type"] := "MemberExpression";
__n77["computed"] := true;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "newArr";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 1.;
__n79["raw"] := "1";
__n77["property"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 1.;
__n80["raw"] := "1";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "newArr[1]";
__n81["raw"] := "'newArr[1]'";
__n76 := [ __n77, __n80, __n81 ];
__n72["arguments"] := __n76;
__n71["expression"] := __n72;
__n1 := [ __n2, __n4, __n12, __n42, __n50, __n60, __n71 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n82 := [ "arr", "newArr" ];
__n0["variableDeclarations"] := __n82;
__n84 := {  };
__n84["type"] := "FunctionDeclaration";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "callbackfn";
__n84["id"] := __n85;
__n86 := [ "val", "idx", "obj" ];
__n84["params"] := __n86;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ReturnStatement";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := true;
__n90["raw"] := "true";
__n89["argument"] := __n90;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n91 := [  ];
__n87["variableDeclarations"] := __n91;
__n92 := [  ];
__n87["functionDeclarations"] := __n92;
__n87["codeType"] := "function";
__n87["strict"] := false;
__n84["body"] := __n87;
__n84["generator"] := false;
__n84["expression"] := false;
__n84["async"] := false;
__n83 := [ __n84 ];
__n0["functionDeclarations"] := __n83;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}