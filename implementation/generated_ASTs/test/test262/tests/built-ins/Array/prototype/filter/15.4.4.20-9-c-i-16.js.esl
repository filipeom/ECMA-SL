function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Object";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "defineProperty";
__n8["raw"] := "\"defineProperty\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Array";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "prototype";
__n12["raw"] := "\"prototype\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "0";
__n13["raw"] := "\"0\"";
__n14 := {  };
__n14["type"] := "ObjectExpression";
__n16 := {  };
__n16["type"] := "Property";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "get";
__n16["key"] := __n17;
__n18 := {  };
__n18["type"] := "FunctionExpression";
__n18["id"] := null;
__n19 := [  ];
__n18["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ReturnStatement";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 11.;
__n23["raw"] := "11";
__n22["argument"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n24 := [  ];
__n20["variableDeclarations"] := __n24;
__n25 := [  ];
__n20["functionDeclarations"] := __n25;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n18["body"] := __n20;
__n18["generator"] := false;
__n18["expression"] := false;
__n18["async"] := false;
__n16["value"] := __n18;
__n16["computed"] := false;
__n16["kind"] := "init";
__n16["shorthand"] := false;
__n26 := {  };
__n26["type"] := "Property";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "configurable";
__n26["key"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := true;
__n28["raw"] := "true";
__n26["value"] := __n28;
__n26["computed"] := false;
__n26["kind"] := "init";
__n26["shorthand"] := false;
__n15 := [ __n16, __n26 ];
__n14["properties"] := __n15;
__n9 := [ __n10, __n13, __n14 ];
__n5["arguments"] := __n9;
__n4["expression"] := __n5;
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "newArr";
__n31["id"] := __n32;
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "ArrayExpression";
__n36 := [ null, null, null ];
__n35["elements"] := __n36;
__n34["object"] := __n35;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "filter";
__n37["raw"] := "\"filter\"";
__n34["property"] := __n37;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "callbackfn";
__n38 := [ __n39 ];
__n33["arguments"] := __n38;
__n31["init"] := __n33;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "assert";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "sameValue";
__n44["raw"] := "\"sameValue\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["callee"] := __n42;
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "newArr";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "length";
__n48["raw"] := "\"length\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.;
__n49["raw"] := "1";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "newArr.length";
__n50["raw"] := "'newArr.length'";
__n45 := [ __n46, __n49, __n50 ];
__n41["arguments"] := __n45;
__n40["expression"] := __n41;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "assert";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "sameValue";
__n55["raw"] := "\"sameValue\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n57 := {  };
__n57["type"] := "MemberExpression";
__n57["computed"] := true;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "newArr";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 0.;
__n59["raw"] := "0";
__n57["property"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 11.;
__n60["raw"] := "11";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "newArr[0]";
__n61["raw"] := "'newArr[0]'";
__n56 := [ __n57, __n60, __n61 ];
__n52["arguments"] := __n56;
__n51["expression"] := __n52;
__n1 := [ __n2, __n4, __n29, __n40, __n51 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n62 := [ "newArr" ];
__n0["variableDeclarations"] := __n62;
__n64 := {  };
__n64["type"] := "FunctionDeclaration";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "callbackfn";
__n64["id"] := __n65;
__n66 := [ "val", "idx", "obj" ];
__n64["params"] := __n66;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ReturnStatement";
__n70 := {  };
__n70["type"] := "LogicalExpression";
__n70["operator"] := "&&";
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "===";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "idx";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 0.;
__n73["raw"] := "0";
__n71["right"] := __n73;
__n70["left"] := __n71;
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "===";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "val";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 11.;
__n76["raw"] := "11";
__n74["right"] := __n76;
__n70["right"] := __n74;
__n69["argument"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n77 := [  ];
__n67["variableDeclarations"] := __n77;
__n78 := [  ];
__n67["functionDeclarations"] := __n78;
__n67["codeType"] := "function";
__n67["strict"] := false;
__n64["body"] := __n67;
__n64["generator"] := false;
__n64["expression"] := false;
__n64["async"] := false;
__n63 := [ __n64 ];
__n0["functionDeclarations"] := __n63;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}