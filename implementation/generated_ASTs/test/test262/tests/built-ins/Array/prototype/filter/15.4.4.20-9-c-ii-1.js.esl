function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "bPar";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := true;
__n6["raw"] := "true";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "bCalled";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := false;
__n11["raw"] := "false";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "callbackfn";
__n12["expression"] := __n13;
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "srcArr";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "ArrayExpression";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 0.;
__n20["raw"] := "0";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 1.;
__n21["raw"] := "1";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := true;
__n22["raw"] := "true";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 'null;
__n23["raw"] := "\"'null\"";
__n24 := {  };
__n24["type"] := "NewExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Object";
__n24["callee"] := __n25;
__n26 := [  ];
__n24["arguments"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "five";
__n27["raw"] := "\"five\"";
__n19 := [ __n20, __n21, __n22, __n23, __n24, __n27 ];
__n18["elements"] := __n19;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "AssignmentExpression";
__n29["operator"] := "=";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n30["computed"] := true;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "srcArr";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 999999.;
__n32["raw"] := "999999";
__n30["property"] := __n32;
__n29["left"] := __n30;
__n33 := {  };
__n33["type"] := "UnaryExpression";
__n33["operator"] := "-";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 6.6;
__n34["raw"] := "6.6";
__n33["argument"] := __n34;
__n33["prefix"] := true;
__n29["right"] := __n33;
__n28["expression"] := __n29;
__n35 := {  };
__n35["type"] := "VariableDeclaration";
__n37 := {  };
__n37["type"] := "VariableDeclarator";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "resArr";
__n37["id"] := __n38;
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "srcArr";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "filter";
__n42["raw"] := "\"filter\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "callbackfn";
__n43 := [ __n44 ];
__n39["arguments"] := __n43;
__n37["init"] := __n39;
__n36 := [ __n37 ];
__n35["declarations"] := __n36;
__n35["kind"] := "var";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "assert";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "sameValue";
__n49["raw"] := "\"sameValue\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "bCalled";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := true;
__n52["raw"] := "true";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "bCalled";
__n53["raw"] := "'bCalled'";
__n50 := [ __n51, __n52, __n53 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "assert";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "sameValue";
__n58["raw"] := "\"sameValue\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "bPar";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := true;
__n61["raw"] := "true";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "bPar";
__n62["raw"] := "'bPar'";
__n59 := [ __n60, __n61, __n62 ];
__n55["arguments"] := __n59;
__n54["expression"] := __n55;
__n1 := [ __n2, __n7, __n12, __n14, __n28, __n35, __n45, __n54 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n63 := [ "bPar", "bCalled", "srcArr", "resArr" ];
__n0["variableDeclarations"] := __n63;
__n65 := {  };
__n65["type"] := "FunctionDeclaration";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "callbackfn";
__n65["id"] := __n66;
__n67 := [ "val", "idx", "obj" ];
__n65["params"] := __n67;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "AssignmentExpression";
__n71["operator"] := "=";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "bCalled";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := true;
__n73["raw"] := "true";
__n71["right"] := __n73;
__n70["expression"] := __n71;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "!==";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n76["computed"] := true;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "obj";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "idx";
__n76["property"] := __n78;
__n75["left"] := __n76;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "val";
__n75["right"] := __n79;
__n74["test"] := __n75;
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "AssignmentExpression";
__n81["operator"] := "=";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "bPar";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := false;
__n83["raw"] := "false";
__n81["right"] := __n83;
__n80["expression"] := __n81;
__n74["consequent"] := __n80;
__n74["alternate"] := null;
__n69 := [ __n70, __n74 ];
__n68["body"] := __n69;
__n84 := [  ];
__n68["variableDeclarations"] := __n84;
__n85 := [  ];
__n68["functionDeclarations"] := __n85;
__n68["codeType"] := "function";
__n68["strict"] := false;
__n65["body"] := __n68;
__n65["generator"] := false;
__n65["expression"] := false;
__n65["async"] := false;
__n64 := [ __n65 ];
__n0["functionDeclarations"] := __n64;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}