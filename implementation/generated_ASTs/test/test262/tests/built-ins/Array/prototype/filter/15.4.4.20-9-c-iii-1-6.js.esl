function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "toIndex";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "called";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 0.;
__n12["raw"] := "0";
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "callbackfn";
__n13["expression"] := __n14;
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "newArr";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "ArrayExpression";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 11.;
__n23["raw"] := "11";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 12.;
__n24["raw"] := "12";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 13.;
__n25["raw"] := "13";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 14.;
__n26["raw"] := "14";
__n22 := [ __n23, __n24, __n25, __n26 ];
__n21["elements"] := __n22;
__n20["object"] := __n21;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "filter";
__n27["raw"] := "\"filter\"";
__n20["property"] := __n27;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "callbackfn";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "undefined";
__n28 := [ __n29, __n30 ];
__n19["arguments"] := __n28;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "assert";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "sameValue";
__n35["raw"] := "\"sameValue\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "newArr";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "length";
__n39["raw"] := "\"length\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 4.;
__n40["raw"] := "4";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "newArr.length";
__n41["raw"] := "'newArr.length'";
__n36 := [ __n37, __n40, __n41 ];
__n32["arguments"] := __n36;
__n31["expression"] := __n32;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "assert";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "sameValue";
__n46["raw"] := "\"sameValue\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "called";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 4.;
__n49["raw"] := "4";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "called";
__n50["raw"] := "'called'";
__n47 := [ __n48, __n49, __n50 ];
__n43["arguments"] := __n47;
__n42["expression"] := __n43;
__n1 := [ __n2, __n8, __n13, __n15, __n31, __n42 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n51 := [ "toIndex", "called", "newArr" ];
__n0["variableDeclarations"] := __n51;
__n53 := {  };
__n53["type"] := "FunctionDeclaration";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "callbackfn";
__n53["id"] := __n54;
__n55 := [ "val", "idx", "obj" ];
__n53["params"] := __n55;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "UpdateExpression";
__n59["operator"] := "++";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "called";
__n59["argument"] := __n60;
__n59["prefix"] := false;
__n58["expression"] := __n59;
__n61 := {  };
__n61["type"] := "IfStatement";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "===";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n63["computed"] := true;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "toIndex";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "idx";
__n63["property"] := __n65;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "undefined";
__n62["right"] := __n66;
__n61["test"] := __n62;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "IfStatement";
__n70 := {  };
__n70["type"] := "LogicalExpression";
__n70["operator"] := "&&";
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "!==";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "idx";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 0.;
__n73["raw"] := "0";
__n71["right"] := __n73;
__n70["left"] := __n71;
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "===";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n75["computed"] := true;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "toIndex";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "-";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "idx";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 1.;
__n79["raw"] := "1";
__n77["right"] := __n79;
__n75["property"] := __n77;
__n74["left"] := __n75;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "undefined";
__n74["right"] := __n80;
__n70["right"] := __n74;
__n69["test"] := __n70;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "ReturnStatement";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := false;
__n84["raw"] := "false";
__n83["argument"] := __n84;
__n82 := [ __n83 ];
__n81["body"] := __n82;
__n69["consequent"] := __n81;
__n69["alternate"] := null;
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "AssignmentExpression";
__n86["operator"] := "=";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n87["computed"] := true;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "toIndex";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "idx";
__n87["property"] := __n89;
__n86["left"] := __n87;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 1.;
__n90["raw"] := "1";
__n86["right"] := __n90;
__n85["expression"] := __n86;
__n91 := {  };
__n91["type"] := "ReturnStatement";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := true;
__n92["raw"] := "true";
__n91["argument"] := __n92;
__n68 := [ __n69, __n85, __n91 ];
__n67["body"] := __n68;
__n61["consequent"] := __n67;
__n93 := {  };
__n93["type"] := "BlockStatement";
__n95 := {  };
__n95["type"] := "ReturnStatement";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := false;
__n96["raw"] := "false";
__n95["argument"] := __n96;
__n94 := [ __n95 ];
__n93["body"] := __n94;
__n61["alternate"] := __n93;
__n57 := [ __n58, __n61 ];
__n56["body"] := __n57;
__n97 := [  ];
__n56["variableDeclarations"] := __n97;
__n98 := [  ];
__n56["functionDeclarations"] := __n98;
__n56["codeType"] := "function";
__n56["strict"] := false;
__n53["body"] := __n56;
__n53["generator"] := false;
__n53["expression"] := false;
__n53["async"] := false;
__n52 := [ __n53 ];
__n0["functionDeclarations"] := __n52;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}