function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "valueOfAccessed";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := false;
__n11["raw"] := "false";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "toStringAccessed";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := false;
__n16["raw"] := "false";
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "callbackfn";
__n17["expression"] := __n18;
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "proto";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "ObjectExpression";
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "valueOf";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "FunctionExpression";
__n27["id"] := null;
__n28 := [  ];
__n27["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "valueOfAccessed";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := true;
__n34["raw"] := "true";
__n32["right"] := __n34;
__n31["expression"] := __n32;
__n35 := {  };
__n35["type"] := "ReturnStatement";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 2.;
__n36["raw"] := "2";
__n35["argument"] := __n36;
__n30 := [ __n31, __n35 ];
__n29["body"] := __n30;
__n37 := [  ];
__n29["variableDeclarations"] := __n37;
__n38 := [  ];
__n29["functionDeclarations"] := __n38;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n27["body"] := __n29;
__n27["generator"] := false;
__n27["expression"] := false;
__n27["async"] := false;
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n24 := [ __n25 ];
__n23["properties"] := __n24;
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n39 := {  };
__n39["type"] := "VariableDeclaration";
__n41 := {  };
__n41["type"] := "VariableDeclarator";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Con";
__n41["id"] := __n42;
__n43 := {  };
__n43["type"] := "FunctionExpression";
__n43["id"] := null;
__n44 := [  ];
__n43["params"] := __n44;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n46 := [  ];
__n45["body"] := __n46;
__n47 := [  ];
__n45["variableDeclarations"] := __n47;
__n48 := [  ];
__n45["functionDeclarations"] := __n48;
__n45["codeType"] := "function";
__n45["strict"] := false;
__n43["body"] := __n45;
__n43["generator"] := false;
__n43["expression"] := false;
__n43["async"] := false;
__n41["init"] := __n43;
__n40 := [ __n41 ];
__n39["declarations"] := __n40;
__n39["kind"] := "var";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "AssignmentExpression";
__n50["operator"] := "=";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Con";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "prototype";
__n53["raw"] := "\"prototype\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["left"] := __n51;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "proto";
__n50["right"] := __n54;
__n49["expression"] := __n50;
__n55 := {  };
__n55["type"] := "VariableDeclaration";
__n57 := {  };
__n57["type"] := "VariableDeclarator";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "child";
__n57["id"] := __n58;
__n59 := {  };
__n59["type"] := "NewExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Con";
__n59["callee"] := __n60;
__n61 := [  ];
__n59["arguments"] := __n61;
__n57["init"] := __n59;
__n56 := [ __n57 ];
__n55["declarations"] := __n56;
__n55["kind"] := "var";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "AssignmentExpression";
__n63["operator"] := "=";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "child";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "toString";
__n66["raw"] := "\"toString\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["left"] := __n64;
__n67 := {  };
__n67["type"] := "FunctionExpression";
__n67["id"] := null;
__n68 := [  ];
__n67["params"] := __n68;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "AssignmentExpression";
__n72["operator"] := "=";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "toStringAccessed";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := true;
__n74["raw"] := "true";
__n72["right"] := __n74;
__n71["expression"] := __n72;
__n75 := {  };
__n75["type"] := "ReturnStatement";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "1";
__n76["raw"] := "'1'";
__n75["argument"] := __n76;
__n70 := [ __n71, __n75 ];
__n69["body"] := __n70;
__n77 := [  ];
__n69["variableDeclarations"] := __n77;
__n78 := [  ];
__n69["functionDeclarations"] := __n78;
__n69["codeType"] := "function";
__n69["strict"] := false;
__n67["body"] := __n69;
__n67["generator"] := false;
__n67["expression"] := false;
__n67["async"] := false;
__n63["right"] := __n67;
__n62["expression"] := __n63;
__n79 := {  };
__n79["type"] := "VariableDeclaration";
__n81 := {  };
__n81["type"] := "VariableDeclarator";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "obj";
__n81["id"] := __n82;
__n83 := {  };
__n83["type"] := "ObjectExpression";
__n85 := {  };
__n85["type"] := "Property";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 1.;
__n86["raw"] := "1";
__n85["key"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 11.;
__n87["raw"] := "11";
__n85["value"] := __n87;
__n85["computed"] := false;
__n85["kind"] := "init";
__n85["shorthand"] := false;
__n88 := {  };
__n88["type"] := "Property";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 2.;
__n89["raw"] := "2";
__n88["key"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 9.;
__n90["raw"] := "9";
__n88["value"] := __n90;
__n88["computed"] := false;
__n88["kind"] := "init";
__n88["shorthand"] := false;
__n91 := {  };
__n91["type"] := "Property";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "length";
__n91["key"] := __n92;
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "child";
__n91["value"] := __n93;
__n91["computed"] := false;
__n91["kind"] := "init";
__n91["shorthand"] := false;
__n84 := [ __n85, __n88, __n91 ];
__n83["properties"] := __n84;
__n81["init"] := __n83;
__n80 := [ __n81 ];
__n79["declarations"] := __n80;
__n79["kind"] := "var";
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "MemberExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "Array";
__n98["object"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "prototype";
__n100["raw"] := "\"prototype\"";
__n98["property"] := __n100;
__n98["computed"] := true;
__n97["object"] := __n98;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "forEach";
__n101["raw"] := "\"forEach\"";
__n97["property"] := __n101;
__n97["computed"] := true;
__n96["object"] := __n97;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "call";
__n102["raw"] := "\"call\"";
__n96["property"] := __n102;
__n96["computed"] := true;
__n95["callee"] := __n96;
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "obj";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "callbackfn";
__n103 := [ __n104, __n105 ];
__n95["arguments"] := __n103;
__n94["expression"] := __n95;
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "assert";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "testResult";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "testResult !== true";
__n111["raw"] := "'testResult !== true'";
__n109 := [ __n110, __n111 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n112 := {  };
__n112["type"] := "ExpressionStatement";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "assert";
__n113["callee"] := __n114;
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "valueOfAccessed";
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "valueOfAccessed !== true";
__n117["raw"] := "'valueOfAccessed !== true'";
__n115 := [ __n116, __n117 ];
__n113["arguments"] := __n115;
__n112["expression"] := __n113;
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "MemberExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "assert";
__n120["object"] := __n121;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "sameValue";
__n122["raw"] := "\"sameValue\"";
__n120["property"] := __n122;
__n120["computed"] := true;
__n119["callee"] := __n120;
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "toStringAccessed";
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := false;
__n125["raw"] := "false";
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "toStringAccessed";
__n126["raw"] := "'toStringAccessed'";
__n123 := [ __n124, __n125, __n126 ];
__n119["arguments"] := __n123;
__n118["expression"] := __n119;
__n1 := [ __n2, __n7, __n12, __n17, __n19, __n39, __n49, __n55, __n62, __n79, __n94, __n106, __n112, __n118 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n127 := [ "testResult", "valueOfAccessed", "toStringAccessed", "proto", "Con", "child", "obj" ];
__n0["variableDeclarations"] := __n127;
__n129 := {  };
__n129["type"] := "FunctionDeclaration";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "callbackfn";
__n129["id"] := __n130;
__n131 := [ "val", "idx", "obj" ];
__n129["params"] := __n131;
__n132 := {  };
__n132["type"] := "BlockStatement";
__n134 := {  };
__n134["type"] := "ExpressionStatement";
__n135 := {  };
__n135["type"] := "AssignmentExpression";
__n135["operator"] := "=";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "testResult";
__n135["left"] := __n136;
__n137 := {  };
__n137["type"] := "BinaryExpression";
__n137["operator"] := ">";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "val";
__n137["left"] := __n138;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := 10.;
__n139["raw"] := "10";
__n137["right"] := __n139;
__n135["right"] := __n137;
__n134["expression"] := __n135;
__n133 := [ __n134 ];
__n132["body"] := __n133;
__n140 := [  ];
__n132["variableDeclarations"] := __n140;
__n141 := [  ];
__n132["functionDeclarations"] := __n141;
__n132["codeType"] := "function";
__n132["strict"] := false;
__n129["body"] := __n132;
__n129["generator"] := false;
__n129["expression"] := false;
__n129["async"] := false;
__n128 := [ __n129 ];
__n0["functionDeclarations"] := __n128;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}