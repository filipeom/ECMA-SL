function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "obj";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ObjectExpression";
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 0.;
__n16["raw"] := "0";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 111.;
__n20["raw"] := "111";
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "length";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 10.;
__n23["raw"] := "10";
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n14 := [ __n15, __n18, __n21 ];
__n13["properties"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Object";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "defineProperty";
__n28["raw"] := "\"defineProperty\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "obj";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "0";
__n31["raw"] := "\"0\"";
__n32 := {  };
__n32["type"] := "ObjectExpression";
__n34 := {  };
__n34["type"] := "Property";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "get";
__n34["key"] := __n35;
__n36 := {  };
__n36["type"] := "FunctionExpression";
__n36["id"] := null;
__n37 := [  ];
__n36["params"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "UnaryExpression";
__n41["operator"] := "delete";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n42["computed"] := true;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "obj";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 1.;
__n44["raw"] := "1";
__n42["property"] := __n44;
__n41["argument"] := __n42;
__n41["prefix"] := true;
__n40["expression"] := __n41;
__n45 := {  };
__n45["type"] := "ReturnStatement";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 0.;
__n46["raw"] := "0";
__n45["argument"] := __n46;
__n39 := [ __n40, __n45 ];
__n38["body"] := __n39;
__n47 := [  ];
__n38["variableDeclarations"] := __n47;
__n48 := [  ];
__n38["functionDeclarations"] := __n48;
__n38["codeType"] := "function";
__n38["strict"] := false;
__n36["body"] := __n38;
__n36["generator"] := false;
__n36["expression"] := false;
__n36["async"] := false;
__n34["value"] := __n36;
__n34["computed"] := false;
__n34["kind"] := "init";
__n34["shorthand"] := false;
__n49 := {  };
__n49["type"] := "Property";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "configurable";
__n49["key"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := true;
__n51["raw"] := "true";
__n49["value"] := __n51;
__n49["computed"] := false;
__n49["kind"] := "init";
__n49["shorthand"] := false;
__n33 := [ __n34, __n49 ];
__n32["properties"] := __n33;
__n29 := [ __n30, __n31, __n32 ];
__n25["arguments"] := __n29;
__n24["expression"] := __n25;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "AssignmentExpression";
__n53["operator"] := "=";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n54["computed"] := true;
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Object";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "prototype";
__n57["raw"] := "\"prototype\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["object"] := __n55;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 1.;
__n58["raw"] := "1";
__n54["property"] := __n58;
__n53["left"] := __n54;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 1.;
__n59["raw"] := "1";
__n53["right"] := __n59;
__n52["expression"] := __n53;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Array";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "prototype";
__n66["raw"] := "\"prototype\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["object"] := __n64;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "forEach";
__n67["raw"] := "\"forEach\"";
__n63["property"] := __n67;
__n63["computed"] := true;
__n62["object"] := __n63;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "call";
__n68["raw"] := "\"call\"";
__n62["property"] := __n68;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "obj";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "callbackfn";
__n69 := [ __n70, __n71 ];
__n61["arguments"] := __n69;
__n60["expression"] := __n61;
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "assert";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "testResult";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "testResult !== true";
__n77["raw"] := "'testResult !== true'";
__n75 := [ __n76, __n77 ];
__n73["arguments"] := __n75;
__n72["expression"] := __n73;
__n1 := [ __n2, __n7, __n9, __n24, __n52, __n60, __n72 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n78 := [ "testResult", "obj" ];
__n0["variableDeclarations"] := __n78;
__n80 := {  };
__n80["type"] := "FunctionDeclaration";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "callbackfn";
__n80["id"] := __n81;
__n82 := [ "val", "idx", "obj" ];
__n80["params"] := __n82;
__n83 := {  };
__n83["type"] := "BlockStatement";
__n85 := {  };
__n85["type"] := "IfStatement";
__n86 := {  };
__n86["type"] := "LogicalExpression";
__n86["operator"] := "&&";
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "===";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "idx";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 1.;
__n89["raw"] := "1";
__n87["right"] := __n89;
__n86["left"] := __n87;
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "===";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "val";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 1.;
__n92["raw"] := "1";
__n90["right"] := __n92;
__n86["right"] := __n90;
__n85["test"] := __n86;
__n93 := {  };
__n93["type"] := "BlockStatement";
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "AssignmentExpression";
__n96["operator"] := "=";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "testResult";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := true;
__n98["raw"] := "true";
__n96["right"] := __n98;
__n95["expression"] := __n96;
__n94 := [ __n95 ];
__n93["body"] := __n94;
__n85["consequent"] := __n93;
__n85["alternate"] := null;
__n84 := [ __n85 ];
__n83["body"] := __n84;
__n99 := [  ];
__n83["variableDeclarations"] := __n99;
__n100 := [  ];
__n83["functionDeclarations"] := __n100;
__n83["codeType"] := "function";
__n83["strict"] := false;
__n80["body"] := __n83;
__n80["generator"] := false;
__n80["expression"] := false;
__n80["async"] := false;
__n79 := [ __n80 ];
__n0["functionDeclarations"] := __n79;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}