function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "testResult";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := true;
__n11["raw"] := "true";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "callbackfn";
__n12["expression"] := __n13;
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "arr";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "ArrayExpression";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 1.;
__n20["raw"] := "1";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 2.;
__n21["raw"] := "2";
__n19 := [ __n20, __n21 ];
__n18["elements"] := __n19;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Object";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "defineProperty";
__n26["raw"] := "\"defineProperty\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "arr";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "1";
__n29["raw"] := "\"1\"";
__n30 := {  };
__n30["type"] := "ObjectExpression";
__n32 := {  };
__n32["type"] := "Property";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "get";
__n32["key"] := __n33;
__n34 := {  };
__n34["type"] := "FunctionExpression";
__n34["id"] := null;
__n35 := [  ];
__n34["params"] := __n35;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ReturnStatement";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "6.99";
__n39["raw"] := "\"6.99\"";
__n38["argument"] := __n39;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n40 := [  ];
__n36["variableDeclarations"] := __n40;
__n41 := [  ];
__n36["functionDeclarations"] := __n41;
__n36["codeType"] := "function";
__n36["strict"] := false;
__n34["body"] := __n36;
__n34["generator"] := false;
__n34["expression"] := false;
__n34["async"] := false;
__n32["value"] := __n34;
__n32["computed"] := false;
__n32["kind"] := "init";
__n32["shorthand"] := false;
__n42 := {  };
__n42["type"] := "Property";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "configurable";
__n42["key"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := true;
__n44["raw"] := "true";
__n42["value"] := __n44;
__n42["computed"] := false;
__n42["kind"] := "init";
__n42["shorthand"] := false;
__n31 := [ __n32, __n42 ];
__n30["properties"] := __n31;
__n27 := [ __n28, __n29, __n30 ];
__n23["arguments"] := __n27;
__n22["expression"] := __n23;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "Object";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "defineProperty";
__n49["raw"] := "\"defineProperty\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "arr";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "0";
__n52["raw"] := "\"0\"";
__n53 := {  };
__n53["type"] := "ObjectExpression";
__n55 := {  };
__n55["type"] := "Property";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "get";
__n55["key"] := __n56;
__n57 := {  };
__n57["type"] := "FunctionExpression";
__n57["id"] := null;
__n58 := [  ];
__n57["params"] := __n58;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "UnaryExpression";
__n62["operator"] := "delete";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n63["computed"] := true;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "arr";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 1.;
__n65["raw"] := "1";
__n63["property"] := __n65;
__n62["argument"] := __n63;
__n62["prefix"] := true;
__n61["expression"] := __n62;
__n66 := {  };
__n66["type"] := "ReturnStatement";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 0.;
__n67["raw"] := "0";
__n66["argument"] := __n67;
__n60 := [ __n61, __n66 ];
__n59["body"] := __n60;
__n68 := [  ];
__n59["variableDeclarations"] := __n68;
__n69 := [  ];
__n59["functionDeclarations"] := __n69;
__n59["codeType"] := "function";
__n59["strict"] := false;
__n57["body"] := __n59;
__n57["generator"] := false;
__n57["expression"] := false;
__n57["async"] := false;
__n55["value"] := __n57;
__n55["computed"] := false;
__n55["kind"] := "init";
__n55["shorthand"] := false;
__n70 := {  };
__n70["type"] := "Property";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "configurable";
__n70["key"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := true;
__n72["raw"] := "true";
__n70["value"] := __n72;
__n70["computed"] := false;
__n70["kind"] := "init";
__n70["shorthand"] := false;
__n54 := [ __n55, __n70 ];
__n53["properties"] := __n54;
__n50 := [ __n51, __n52, __n53 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "arr";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "forEach";
__n77["raw"] := "\"forEach\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "callbackfn";
__n78 := [ __n79 ];
__n74["arguments"] := __n78;
__n73["expression"] := __n74;
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "assert";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "testResult";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "testResult !== true";
__n85["raw"] := "'testResult !== true'";
__n83 := [ __n84, __n85 ];
__n81["arguments"] := __n83;
__n80["expression"] := __n81;
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "assert";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "accessed";
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "accessed !== true";
__n91["raw"] := "'accessed !== true'";
__n89 := [ __n90, __n91 ];
__n87["arguments"] := __n89;
__n86["expression"] := __n87;
__n1 := [ __n2, __n7, __n12, __n14, __n22, __n45, __n73, __n80, __n86 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n92 := [ "accessed", "testResult", "arr" ];
__n0["variableDeclarations"] := __n92;
__n94 := {  };
__n94["type"] := "FunctionDeclaration";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "callbackfn";
__n94["id"] := __n95;
__n96 := [ "val", "idx", "obj" ];
__n94["params"] := __n96;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "AssignmentExpression";
__n100["operator"] := "=";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "accessed";
__n100["left"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := true;
__n102["raw"] := "true";
__n100["right"] := __n102;
__n99["expression"] := __n100;
__n103 := {  };
__n103["type"] := "IfStatement";
__n104 := {  };
__n104["type"] := "BinaryExpression";
__n104["operator"] := "===";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "idx";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 1.;
__n106["raw"] := "1";
__n104["right"] := __n106;
__n103["test"] := __n104;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "AssignmentExpression";
__n110["operator"] := "=";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "testResult";
__n110["left"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := false;
__n112["raw"] := "false";
__n110["right"] := __n112;
__n109["expression"] := __n110;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n103["consequent"] := __n107;
__n103["alternate"] := null;
__n98 := [ __n99, __n103 ];
__n97["body"] := __n98;
__n113 := [  ];
__n97["variableDeclarations"] := __n113;
__n114 := [  ];
__n97["functionDeclarations"] := __n114;
__n97["codeType"] := "function";
__n97["strict"] := false;
__n94["body"] := __n97;
__n94["generator"] := false;
__n94["expression"] := false;
__n94["async"] := false;
__n93 := [ __n94 ];
__n0["functionDeclarations"] := __n93;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}