function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "result";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := true;
__n6["raw"] := "true";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "kIndex";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ArrayExpression";
__n12 := [  ];
__n11["elements"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "callbackfn";
__n13["expression"] := __n14;
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "ArrayExpression";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 11.;
__n20["raw"] := "11";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 12.;
__n21["raw"] := "12";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 13.;
__n22["raw"] := "13";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 14.;
__n23["raw"] := "14";
__n19 := [ __n20, __n21, __n22, __n23 ];
__n18["elements"] := __n19;
__n17["object"] := __n18;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "forEach";
__n24["raw"] := "\"forEach\"";
__n17["property"] := __n24;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "callbackfn";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "undefined";
__n25 := [ __n26, __n27 ];
__n16["arguments"] := __n25;
__n15["expression"] := __n16;
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "assert";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "result";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "result !== true";
__n33["raw"] := "'result !== true'";
__n31 := [ __n32, __n33 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n1 := [ __n2, __n7, __n13, __n15, __n28 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n34 := [ "result", "kIndex" ];
__n0["variableDeclarations"] := __n34;
__n36 := {  };
__n36["type"] := "FunctionDeclaration";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "callbackfn";
__n36["id"] := __n37;
__n38 := [ "val", "idx", "obj" ];
__n36["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "IfStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "===";
__n43 := {  };
__n43["type"] := "UnaryExpression";
__n43["operator"] := "typeof";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n44["computed"] := true;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "kIndex";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "idx";
__n44["property"] := __n46;
__n43["argument"] := __n44;
__n43["prefix"] := true;
__n42["left"] := __n43;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "undefined";
__n47["raw"] := "\"undefined\"";
__n42["right"] := __n47;
__n41["test"] := __n42;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "LogicalExpression";
__n51["operator"] := "&&";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "!==";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "idx";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 0.;
__n54["raw"] := "0";
__n52["right"] := __n54;
__n51["left"] := __n52;
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "===";
__n56 := {  };
__n56["type"] := "UnaryExpression";
__n56["operator"] := "typeof";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n57["computed"] := true;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "kIndex";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "-";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "idx";
__n59["left"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 1.;
__n61["raw"] := "1";
__n59["right"] := __n61;
__n57["property"] := __n59;
__n56["argument"] := __n57;
__n56["prefix"] := true;
__n55["left"] := __n56;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "undefined";
__n62["raw"] := "\"undefined\"";
__n55["right"] := __n62;
__n51["right"] := __n55;
__n50["test"] := __n51;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "AssignmentExpression";
__n66["operator"] := "=";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "result";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := false;
__n68["raw"] := "false";
__n66["right"] := __n68;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n50["consequent"] := __n63;
__n50["alternate"] := null;
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "AssignmentExpression";
__n70["operator"] := "=";
__n71 := {  };
__n71["type"] := "MemberExpression";
__n71["computed"] := true;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "kIndex";
__n71["object"] := __n72;
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "idx";
__n71["property"] := __n73;
__n70["left"] := __n71;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 1.;
__n74["raw"] := "1";
__n70["right"] := __n74;
__n69["expression"] := __n70;
__n49 := [ __n50, __n69 ];
__n48["body"] := __n49;
__n41["consequent"] := __n48;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "AssignmentExpression";
__n78["operator"] := "=";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "result";
__n78["left"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := false;
__n80["raw"] := "false";
__n78["right"] := __n80;
__n77["expression"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n41["alternate"] := __n75;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n81 := [  ];
__n39["variableDeclarations"] := __n81;
__n82 := [  ];
__n39["functionDeclarations"] := __n82;
__n39["codeType"] := "function";
__n39["strict"] := false;
__n36["body"] := __n39;
__n36["generator"] := false;
__n36["expression"] := false;
__n36["async"] := false;
__n35 := [ __n36 ];
__n0["functionDeclarations"] := __n35;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}