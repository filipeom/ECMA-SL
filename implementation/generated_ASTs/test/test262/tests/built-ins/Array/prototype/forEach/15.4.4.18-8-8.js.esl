function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "foo";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "prototype";
__n6["raw"] := "\"prototype\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "NewExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Array";
__n7["callee"] := __n8;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 2.;
__n11["raw"] := "2";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 3.;
__n12["raw"] := "3";
__n9 := [ __n10, __n11, __n12 ];
__n7["arguments"] := __n9;
__n3["right"] := __n7;
__n2["expression"] := __n3;
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "foo";
__n13["expression"] := __n14;
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "f";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "NewExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "foo";
__n19["callee"] := __n20;
__n21 := [  ];
__n19["arguments"] := __n21;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "AssignmentExpression";
__n23["operator"] := "=";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "f";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "length";
__n26["raw"] := "\"length\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["left"] := __n24;
__n27 := {  };
__n27["type"] := "ArrayExpression";
__n28 := [  ];
__n27["elements"] := __n28;
__n23["right"] := __n27;
__n22["expression"] := __n23;
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "callCnt";
__n31["id"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n31["init"] := __n33;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "cb";
__n34["expression"] := __n35;
__n36 := {  };
__n36["type"] := "VariableDeclaration";
__n38 := {  };
__n38["type"] := "VariableDeclarator";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "i";
__n38["id"] := __n39;
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "f";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "forEach";
__n43["raw"] := "\"forEach\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "cb";
__n44 := [ __n45 ];
__n40["arguments"] := __n44;
__n38["init"] := __n40;
__n37 := [ __n38 ];
__n36["declarations"] := __n37;
__n36["kind"] := "var";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "assert";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "sameValue";
__n50["raw"] := "\"sameValue\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "callCnt";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 0.;
__n53["raw"] := "0";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "callCnt";
__n54["raw"] := "'callCnt'";
__n51 := [ __n52, __n53, __n54 ];
__n47["arguments"] := __n51;
__n46["expression"] := __n47;
__n1 := [ __n2, __n13, __n15, __n22, __n29, __n34, __n36, __n46 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n55 := [ "f", "callCnt", "i" ];
__n0["variableDeclarations"] := __n55;
__n57 := {  };
__n57["type"] := "FunctionDeclaration";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "foo";
__n57["id"] := __n58;
__n59 := [  ];
__n57["params"] := __n59;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n61 := [  ];
__n60["body"] := __n61;
__n62 := [  ];
__n60["variableDeclarations"] := __n62;
__n63 := [  ];
__n60["functionDeclarations"] := __n63;
__n60["codeType"] := "function";
__n60["strict"] := false;
__n57["body"] := __n60;
__n57["generator"] := false;
__n57["expression"] := false;
__n57["async"] := false;
__n64 := {  };
__n64["type"] := "FunctionDeclaration";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "cb";
__n64["id"] := __n65;
__n66 := [  ];
__n64["params"] := __n66;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "UpdateExpression";
__n70["operator"] := "++";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "callCnt";
__n70["argument"] := __n71;
__n70["prefix"] := false;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n72 := [  ];
__n67["variableDeclarations"] := __n72;
__n73 := [  ];
__n67["functionDeclarations"] := __n73;
__n67["codeType"] := "function";
__n67["strict"] := false;
__n64["body"] := __n67;
__n64["generator"] := false;
__n64["expression"] := false;
__n64["async"] := false;
__n56 := [ __n57, __n64 ];
__n0["functionDeclarations"] := __n56;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}