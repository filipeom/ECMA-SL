function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "foo";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "prototype";
__n6["raw"] := "\"prototype\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "NewExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Array";
__n7["callee"] := __n8;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 2.;
__n11["raw"] := "2";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 3.;
__n12["raw"] := "3";
__n9 := [ __n10, __n11, __n12 ];
__n7["arguments"] := __n9;
__n3["right"] := __n7;
__n2["expression"] := __n3;
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "foo";
__n13["expression"] := __n14;
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "f";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "NewExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "foo";
__n19["callee"] := __n20;
__n21 := [  ];
__n19["arguments"] := __n21;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "AssignmentExpression";
__n23["operator"] := "=";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "f";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "length";
__n26["raw"] := "\"length\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["left"] := __n24;
__n27 := {  };
__n27["type"] := "ArrayExpression";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 0.;
__n29["raw"] := "0";
__n28 := [ __n29 ];
__n27["elements"] := __n28;
__n23["right"] := __n27;
__n22["expression"] := __n23;
__n30 := {  };
__n30["type"] := "VariableDeclaration";
__n32 := {  };
__n32["type"] := "VariableDeclarator";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "callCnt";
__n32["id"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 0.;
__n34["raw"] := "0";
__n32["init"] := __n34;
__n31 := [ __n32 ];
__n30["declarations"] := __n31;
__n30["kind"] := "var";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "cb";
__n35["expression"] := __n36;
__n37 := {  };
__n37["type"] := "VariableDeclaration";
__n39 := {  };
__n39["type"] := "VariableDeclarator";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "i";
__n39["id"] := __n40;
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "f";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "forEach";
__n44["raw"] := "\"forEach\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["callee"] := __n42;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "cb";
__n45 := [ __n46 ];
__n41["arguments"] := __n45;
__n39["init"] := __n41;
__n38 := [ __n39 ];
__n37["declarations"] := __n38;
__n37["kind"] := "var";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "assert";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "sameValue";
__n51["raw"] := "\"sameValue\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["callee"] := __n49;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "callCnt";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 0.;
__n54["raw"] := "0";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "callCnt";
__n55["raw"] := "'callCnt'";
__n52 := [ __n53, __n54, __n55 ];
__n48["arguments"] := __n52;
__n47["expression"] := __n48;
__n1 := [ __n2, __n13, __n15, __n22, __n30, __n35, __n37, __n47 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n56 := [ "f", "callCnt", "i" ];
__n0["variableDeclarations"] := __n56;
__n58 := {  };
__n58["type"] := "FunctionDeclaration";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "foo";
__n58["id"] := __n59;
__n60 := [  ];
__n58["params"] := __n60;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n62 := [  ];
__n61["body"] := __n62;
__n63 := [  ];
__n61["variableDeclarations"] := __n63;
__n64 := [  ];
__n61["functionDeclarations"] := __n64;
__n61["codeType"] := "function";
__n61["strict"] := false;
__n58["body"] := __n61;
__n58["generator"] := false;
__n58["expression"] := false;
__n58["async"] := false;
__n65 := {  };
__n65["type"] := "FunctionDeclaration";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "cb";
__n65["id"] := __n66;
__n67 := [  ];
__n65["params"] := __n67;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "UpdateExpression";
__n71["operator"] := "++";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "callCnt";
__n71["argument"] := __n72;
__n71["prefix"] := false;
__n70["expression"] := __n71;
__n69 := [ __n70 ];
__n68["body"] := __n69;
__n73 := [  ];
__n68["variableDeclarations"] := __n73;
__n74 := [  ];
__n68["functionDeclarations"] := __n74;
__n68["codeType"] := "function";
__n68["strict"] := false;
__n65["body"] := __n68;
__n65["generator"] := false;
__n65["expression"] := false;
__n65["async"] := false;
__n57 := [ __n58, __n65 ];
__n0["functionDeclarations"] := __n57;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}