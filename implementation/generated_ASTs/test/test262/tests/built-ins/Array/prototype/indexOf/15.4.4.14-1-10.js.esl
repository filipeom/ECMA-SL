function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n4["computed"] := true;
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Math";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 1.;
__n6["raw"] := "1";
__n4["property"] := __n6;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := true;
__n7["raw"] := "true";
__n3["right"] := __n7;
__n2["expression"] := __n3;
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Math";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "length";
__n12["raw"] := "\"length\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["left"] := __n10;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 2.;
__n13["raw"] := "2";
__n9["right"] := __n13;
__n8["expression"] := __n9;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "assert";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "sameValue";
__n18["raw"] := "\"sameValue\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Array";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "prototype";
__n25["raw"] := "\"prototype\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["object"] := __n23;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "indexOf";
__n26["raw"] := "\"indexOf\"";
__n22["property"] := __n26;
__n22["computed"] := true;
__n21["object"] := __n22;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "call";
__n27["raw"] := "\"call\"";
__n21["property"] := __n27;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Math";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := true;
__n30["raw"] := "true";
__n28 := [ __n29, __n30 ];
__n20["arguments"] := __n28;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 1.;
__n31["raw"] := "1";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "Array.prototype.indexOf.call(Math, true)";
__n32["raw"] := "'Array.prototype.indexOf.call(Math, true)'";
__n19 := [ __n20, __n31, __n32 ];
__n15["arguments"] := __n19;
__n14["expression"] := __n15;
__n1 := [ __n2, __n8, __n14 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n33 := [  ];
__n0["variableDeclarations"] := __n33;
__n34 := [  ];
__n0["functionDeclarations"] := __n34;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}