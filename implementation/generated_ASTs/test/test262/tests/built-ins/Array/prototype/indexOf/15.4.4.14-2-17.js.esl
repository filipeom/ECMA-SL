function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "func";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "FunctionExpression";
__n6["id"] := null;
__n7 := [ "a", "b" ];
__n6["params"] := __n7;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "AssignmentExpression";
__n11["operator"] := "=";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n12["computed"] := true;
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "arguments";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 2.;
__n14["raw"] := "2";
__n12["property"] := __n14;
__n11["left"] := __n12;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := false;
__n15["raw"] := "false";
__n11["right"] := __n15;
__n10["expression"] := __n11;
__n16 := {  };
__n16["type"] := "ReturnStatement";
__n17 := {  };
__n17["type"] := "LogicalExpression";
__n17["operator"] := "&&";
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "===";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Array";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "prototype";
__n24["raw"] := "\"prototype\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["object"] := __n22;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "indexOf";
__n25["raw"] := "\"indexOf\"";
__n21["property"] := __n25;
__n21["computed"] := true;
__n20["object"] := __n21;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "call";
__n26["raw"] := "\"call\"";
__n20["property"] := __n26;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "arguments";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := true;
__n29["raw"] := "true";
__n27 := [ __n28, __n29 ];
__n19["arguments"] := __n27;
__n18["left"] := __n19;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 1.;
__n30["raw"] := "1";
__n18["right"] := __n30;
__n17["left"] := __n18;
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "===";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Array";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "prototype";
__n37["raw"] := "\"prototype\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["object"] := __n35;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "indexOf";
__n38["raw"] := "\"indexOf\"";
__n34["property"] := __n38;
__n34["computed"] := true;
__n33["object"] := __n34;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "call";
__n39["raw"] := "\"call\"";
__n33["property"] := __n39;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "arguments";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := false;
__n42["raw"] := "false";
__n40 := [ __n41, __n42 ];
__n32["arguments"] := __n40;
__n31["left"] := __n32;
__n43 := {  };
__n43["type"] := "UnaryExpression";
__n43["operator"] := "-";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 1.;
__n44["raw"] := "1";
__n43["argument"] := __n44;
__n43["prefix"] := true;
__n31["right"] := __n43;
__n17["right"] := __n31;
__n16["argument"] := __n17;
__n9 := [ __n10, __n16 ];
__n8["body"] := __n9;
__n45 := [  ];
__n8["variableDeclarations"] := __n45;
__n46 := [  ];
__n8["functionDeclarations"] := __n46;
__n8["codeType"] := "function";
__n8["strict"] := false;
__n6["body"] := __n8;
__n6["generator"] := false;
__n6["expression"] := false;
__n6["async"] := false;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "assert";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "func";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 0.;
__n54["raw"] := "0";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := true;
__n55["raw"] := "true";
__n53 := [ __n54, __n55 ];
__n51["arguments"] := __n53;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "func(0, true) !== true";
__n56["raw"] := "'func(0, true) !== true'";
__n50 := [ __n51, __n56 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n1 := [ __n2, __n47 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n57 := [ "func" ];
__n0["variableDeclarations"] := __n57;
__n58 := [  ];
__n0["functionDeclarations"] := __n58;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}