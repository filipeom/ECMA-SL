function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "targetObj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "assert";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "sameValue";
__n12["raw"] := "\"sameValue\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "ArrayExpression";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 0.;
__n18["raw"] := "0";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "targetObj";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 2.;
__n20["raw"] := "2";
__n17 := [ __n18, __n19, __n20 ];
__n16["elements"] := __n17;
__n15["object"] := __n16;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "indexOf";
__n21["raw"] := "\"indexOf\"";
__n15["property"] := __n21;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "targetObj";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 2.;
__n24["raw"] := "2";
__n22 := [ __n23, __n24 ];
__n14["arguments"] := __n22;
__n25 := {  };
__n25["type"] := "UnaryExpression";
__n25["operator"] := "-";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 1.;
__n26["raw"] := "1";
__n25["argument"] := __n26;
__n25["prefix"] := true;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "[0, targetObj, 2].indexOf(targetObj, 2)";
__n27["raw"] := "'[0, targetObj, 2].indexOf(targetObj, 2)'";
__n13 := [ __n14, __n25, __n27 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "assert";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "sameValue";
__n32["raw"] := "\"sameValue\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "ArrayExpression";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 0.;
__n38["raw"] := "0";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 1.;
__n39["raw"] := "1";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "targetObj";
__n37 := [ __n38, __n39, __n40 ];
__n36["elements"] := __n37;
__n35["object"] := __n36;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "indexOf";
__n41["raw"] := "\"indexOf\"";
__n35["property"] := __n41;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "targetObj";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 2.;
__n44["raw"] := "2";
__n42 := [ __n43, __n44 ];
__n34["arguments"] := __n42;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 2.;
__n45["raw"] := "2";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "[0, 1, targetObj].indexOf(targetObj, 2)";
__n46["raw"] := "'[0, 1, targetObj].indexOf(targetObj, 2)'";
__n33 := [ __n34, __n45, __n46 ];
__n29["arguments"] := __n33;
__n28["expression"] := __n29;
__n1 := [ __n2, __n8, __n28 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n47 := [ "targetObj" ];
__n0["variableDeclarations"] := __n47;
__n48 := [  ];
__n0["functionDeclarations"] := __n48;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}