function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Object";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "defineProperty";
__n6["raw"] := "\"defineProperty\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Array";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "prototype";
__n10["raw"] := "\"prototype\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "0";
__n11["raw"] := "\"0\"";
__n12 := {  };
__n12["type"] := "ObjectExpression";
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "get";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "FunctionExpression";
__n16["id"] := null;
__n17 := [  ];
__n16["params"] := __n17;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ReturnStatement";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := false;
__n21["raw"] := "false";
__n20["argument"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n22 := [  ];
__n18["variableDeclarations"] := __n22;
__n23 := [  ];
__n18["functionDeclarations"] := __n23;
__n18["codeType"] := "function";
__n18["strict"] := false;
__n16["body"] := __n18;
__n16["generator"] := false;
__n16["expression"] := false;
__n16["async"] := false;
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "configurable";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := true;
__n26["raw"] := "true";
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n13 := [ __n14, __n24 ];
__n12["properties"] := __n13;
__n7 := [ __n8, __n11, __n12 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "assert";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "sameValue";
__n31["raw"] := "\"sameValue\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "ArrayExpression";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := true;
__n37["raw"] := "true";
__n36 := [ __n37 ];
__n35["elements"] := __n36;
__n34["object"] := __n35;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "indexOf";
__n38["raw"] := "\"indexOf\"";
__n34["property"] := __n38;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := true;
__n40["raw"] := "true";
__n39 := [ __n40 ];
__n33["arguments"] := __n39;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 0.;
__n41["raw"] := "0";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "[true].indexOf(true)";
__n42["raw"] := "'[true].indexOf(true)'";
__n32 := [ __n33, __n41, __n42 ];
__n28["arguments"] := __n32;
__n27["expression"] := __n28;
__n1 := [ __n2, __n27 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n43 := [  ];
__n0["variableDeclarations"] := __n43;
__n44 := [  ];
__n0["functionDeclarations"] := __n44;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}