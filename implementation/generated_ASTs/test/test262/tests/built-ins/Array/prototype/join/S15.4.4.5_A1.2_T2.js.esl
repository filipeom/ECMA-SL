function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Array";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 2.;
__n11["raw"] := "2";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 3.;
__n12["raw"] := "3";
__n8 := [ __n9, __n10, __n11, __n12 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n13 := {  };
__n13["type"] := "IfStatement";
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "!==";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "x";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "join";
__n18["raw"] := "\"join\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "undefined";
__n19 := [ __n20 ];
__n15["arguments"] := __n19;
__n14["left"] := __n15;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "0,1,2,3";
__n21["raw"] := "\"0,1,2,3\"";
__n14["right"] := __n21;
__n13["test"] := __n14;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "$ERROR";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "+";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "#1: x = new Array(0,1,2,3); x.join(undefined) === \"0,1,2,3\". Actual: ";
__n29["raw"] := "'#1: x = new Array(0,1,2,3); x.join(undefined) === \"0,1,2,3\". Actual: '";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "x";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "join";
__n33["raw"] := "\"join\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "undefined";
__n34 := [ __n35 ];
__n30["arguments"] := __n34;
__n28["right"] := __n30;
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n24["expression"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n13["consequent"] := __n22;
__n13["alternate"] := null;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "AssignmentExpression";
__n37["operator"] := "=";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "x";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "ArrayExpression";
__n40 := [  ];
__n39["elements"] := __n40;
__n37["right"] := __n39;
__n36["expression"] := __n37;
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "AssignmentExpression";
__n42["operator"] := "=";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n43["computed"] := true;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "x";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 0.;
__n45["raw"] := "0";
__n43["property"] := __n45;
__n42["left"] := __n43;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 0.;
__n46["raw"] := "0";
__n42["right"] := __n46;
__n41["expression"] := __n42;
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "AssignmentExpression";
__n48["operator"] := "=";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n49["computed"] := true;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "x";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 3.;
__n51["raw"] := "3";
__n49["property"] := __n51;
__n48["left"] := __n49;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 3.;
__n52["raw"] := "3";
__n48["right"] := __n52;
__n47["expression"] := __n48;
__n53 := {  };
__n53["type"] := "IfStatement";
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "!==";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "x";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "join";
__n58["raw"] := "\"join\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "undefined";
__n59 := [ __n60 ];
__n55["arguments"] := __n59;
__n54["left"] := __n55;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "0,,,3";
__n61["raw"] := "\"0,,,3\"";
__n54["right"] := __n61;
__n53["test"] := __n54;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "$ERROR";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "+";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "#2: x = []; x[0] = 0; x[3] = 3; x.join(undefined) === \"0,,,3\". Actual: ";
__n69["raw"] := "'#2: x = []; x[0] = 0; x[3] = 3; x.join(undefined) === \"0,,,3\". Actual: '";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "MemberExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "x";
__n71["object"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "join";
__n73["raw"] := "\"join\"";
__n71["property"] := __n73;
__n71["computed"] := true;
__n70["callee"] := __n71;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "undefined";
__n74 := [ __n75 ];
__n70["arguments"] := __n74;
__n68["right"] := __n70;
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n53["consequent"] := __n62;
__n53["alternate"] := null;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "AssignmentExpression";
__n77["operator"] := "=";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "x";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "ArrayExpression";
__n80 := [  ];
__n79["elements"] := __n80;
__n77["right"] := __n79;
__n76["expression"] := __n77;
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "AssignmentExpression";
__n82["operator"] := "=";
__n83 := {  };
__n83["type"] := "MemberExpression";
__n83["computed"] := true;
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "x";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := 0.;
__n85["raw"] := "0";
__n83["property"] := __n85;
__n82["left"] := __n83;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 0.;
__n86["raw"] := "0";
__n82["right"] := __n86;
__n81["expression"] := __n82;
__n87 := {  };
__n87["type"] := "IfStatement";
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "!==";
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "x";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "join";
__n92["raw"] := "\"join\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n89["callee"] := __n90;
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "undefined";
__n93 := [ __n94 ];
__n89["arguments"] := __n93;
__n88["left"] := __n89;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "0";
__n95["raw"] := "\"0\"";
__n88["right"] := __n95;
__n87["test"] := __n88;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "$ERROR";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "+";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "#3: x = []; x[0] = 0; x.join(undefined) === \"0\". Actual: ";
__n103["raw"] := "'#3: x = []; x[0] = 0; x.join(undefined) === \"0\". Actual: '";
__n102["left"] := __n103;
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "MemberExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "x";
__n105["object"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "join";
__n107["raw"] := "\"join\"";
__n105["property"] := __n107;
__n105["computed"] := true;
__n104["callee"] := __n105;
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "undefined";
__n108 := [ __n109 ];
__n104["arguments"] := __n108;
__n102["right"] := __n104;
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n87["consequent"] := __n96;
__n87["alternate"] := null;
__n1 := [ __n2, __n13, __n36, __n41, __n47, __n53, __n76, __n81, __n87 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n110 := [ "x" ];
__n0["variableDeclarations"] := __n110;
__n111 := [  ];
__n0["functionDeclarations"] := __n111;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}