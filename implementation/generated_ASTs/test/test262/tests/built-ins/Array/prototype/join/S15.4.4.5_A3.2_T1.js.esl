function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Array";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "";
__n9["raw"] := "\"\"";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "";
__n10["raw"] := "\"\"";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "";
__n11["raw"] := "\"\"";
__n8 := [ __n9, __n10, __n11 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "IfStatement";
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "!==";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "x";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "join";
__n17["raw"] := "\"join\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "";
__n19["raw"] := "\"\"";
__n18 := [ __n19 ];
__n14["arguments"] := __n18;
__n13["left"] := __n14;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "";
__n20["raw"] := "\"\"";
__n13["right"] := __n20;
__n12["test"] := __n13;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "$ERROR";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "+";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "#0: var x = new Array(\"\",\"\",\"\"); x.join(\"\") === \"\". Actual: ";
__n28["raw"] := "'#0: var x = new Array(\"\",\"\",\"\"); x.join(\"\") === \"\". Actual: '";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "x";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "join";
__n32["raw"] := "\"join\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "";
__n34["raw"] := "\"\"";
__n33 := [ __n34 ];
__n29["arguments"] := __n33;
__n27["right"] := __n29;
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n12["consequent"] := __n21;
__n12["alternate"] := null;
__n35 := {  };
__n35["type"] := "VariableDeclaration";
__n37 := {  };
__n37["type"] := "VariableDeclarator";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "x";
__n37["id"] := __n38;
__n39 := {  };
__n39["type"] := "NewExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Array";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "\\";
__n42["raw"] := "\"\\\\\"";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "\\";
__n43["raw"] := "\"\\\\\"";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "\\";
__n44["raw"] := "\"\\\\\"";
__n41 := [ __n42, __n43, __n44 ];
__n39["arguments"] := __n41;
__n37["init"] := __n39;
__n36 := [ __n37 ];
__n35["declarations"] := __n36;
__n35["kind"] := "var";
__n45 := {  };
__n45["type"] := "IfStatement";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "x";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "join";
__n50["raw"] := "\"join\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "\\";
__n52["raw"] := "\"\\\\\"";
__n51 := [ __n52 ];
__n47["arguments"] := __n51;
__n46["left"] := __n47;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "\\\\\\\\\\";
__n53["raw"] := "\"\\\\\\\\\\\\\\\\\\\\\"";
__n46["right"] := __n53;
__n45["test"] := __n46;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "$ERROR";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "+";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#1: var x = new Array(\"\\\",\"\\\",\"\\\"); x.join(\"\\\") === \"\\\\\\\\\\\". Actual: ";
__n61["raw"] := "'#1: var x = new Array(\"\\\\\",\"\\\\\",\"\\\\\"); x.join(\"\\\\\") === \"\\\\\\\\\\\\\\\\\\\\\". Actual: '";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "x";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "join";
__n65["raw"] := "\"join\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "\\";
__n67["raw"] := "\"\\\\\"";
__n66 := [ __n67 ];
__n62["arguments"] := __n66;
__n60["right"] := __n62;
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n45["consequent"] := __n54;
__n45["alternate"] := null;
__n68 := {  };
__n68["type"] := "VariableDeclaration";
__n70 := {  };
__n70["type"] := "VariableDeclarator";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "x";
__n70["id"] := __n71;
__n72 := {  };
__n72["type"] := "NewExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "Array";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "&";
__n75["raw"] := "\"&\"";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "&";
__n76["raw"] := "\"&\"";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "&";
__n77["raw"] := "\"&\"";
__n74 := [ __n75, __n76, __n77 ];
__n72["arguments"] := __n74;
__n70["init"] := __n72;
__n69 := [ __n70 ];
__n68["declarations"] := __n69;
__n68["kind"] := "var";
__n78 := {  };
__n78["type"] := "IfStatement";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "!==";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "x";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "join";
__n83["raw"] := "\"join\"";
__n81["property"] := __n83;
__n81["computed"] := true;
__n80["callee"] := __n81;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "&";
__n85["raw"] := "\"&\"";
__n84 := [ __n85 ];
__n80["arguments"] := __n84;
__n79["left"] := __n80;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "&&&&&";
__n86["raw"] := "\"&&&&&\"";
__n79["right"] := __n86;
__n78["test"] := __n79;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "$ERROR";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "+";
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "#2: var x = new Array(\"&\", \"&\", \"&\"); x.join(\"&\") === \"&&&&&\". Actual: ";
__n94["raw"] := "'#2: var x = new Array(\"&\", \"&\", \"&\"); x.join(\"&\") === \"&&&&&\". Actual: '";
__n93["left"] := __n94;
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "x";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "join";
__n98["raw"] := "\"join\"";
__n96["property"] := __n98;
__n96["computed"] := true;
__n95["callee"] := __n96;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "&";
__n100["raw"] := "\"&\"";
__n99 := [ __n100 ];
__n95["arguments"] := __n99;
__n93["right"] := __n95;
__n92 := [ __n93 ];
__n90["arguments"] := __n92;
__n89["expression"] := __n90;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n78["consequent"] := __n87;
__n78["alternate"] := null;
__n101 := {  };
__n101["type"] := "VariableDeclaration";
__n103 := {  };
__n103["type"] := "VariableDeclarator";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "x";
__n103["id"] := __n104;
__n105 := {  };
__n105["type"] := "NewExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "Array";
__n105["callee"] := __n106;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := true;
__n108["raw"] := "true";
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := true;
__n109["raw"] := "true";
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := true;
__n110["raw"] := "true";
__n107 := [ __n108, __n109, __n110 ];
__n105["arguments"] := __n107;
__n103["init"] := __n105;
__n102 := [ __n103 ];
__n101["declarations"] := __n102;
__n101["kind"] := "var";
__n111 := {  };
__n111["type"] := "IfStatement";
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "!==";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "MemberExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "x";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "join";
__n116["raw"] := "\"join\"";
__n114["property"] := __n116;
__n114["computed"] := true;
__n113["callee"] := __n114;
__n117 := [  ];
__n113["arguments"] := __n117;
__n112["left"] := __n113;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "true,true,true";
__n118["raw"] := "\"true,true,true\"";
__n112["right"] := __n118;
__n111["test"] := __n112;
__n119 := {  };
__n119["type"] := "BlockStatement";
__n121 := {  };
__n121["type"] := "ExpressionStatement";
__n122 := {  };
__n122["type"] := "CallExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "$ERROR";
__n122["callee"] := __n123;
__n125 := {  };
__n125["type"] := "BinaryExpression";
__n125["operator"] := "+";
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "#3: var x = new Array(true,true,true); x.join(true,true,true) === \"true,true,true\". Actual: ";
__n126["raw"] := "'#3: var x = new Array(true,true,true); x.join(true,true,true) === \"true,true,true\". Actual: '";
__n125["left"] := __n126;
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "MemberExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "x";
__n128["object"] := __n129;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "join";
__n130["raw"] := "\"join\"";
__n128["property"] := __n130;
__n128["computed"] := true;
__n127["callee"] := __n128;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := true;
__n132["raw"] := "true";
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := true;
__n133["raw"] := "true";
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := true;
__n134["raw"] := "true";
__n131 := [ __n132, __n133, __n134 ];
__n127["arguments"] := __n131;
__n125["right"] := __n127;
__n124 := [ __n125 ];
__n122["arguments"] := __n124;
__n121["expression"] := __n122;
__n120 := [ __n121 ];
__n119["body"] := __n120;
__n111["consequent"] := __n119;
__n111["alternate"] := null;
__n135 := {  };
__n135["type"] := "VariableDeclaration";
__n137 := {  };
__n137["type"] := "VariableDeclarator";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "x";
__n137["id"] := __n138;
__n139 := {  };
__n139["type"] := "NewExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "Array";
__n139["callee"] := __n140;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := 'null;
__n142["raw"] := "\"'null\"";
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := 'null;
__n143["raw"] := "\"'null\"";
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := 'null;
__n144["raw"] := "\"'null\"";
__n141 := [ __n142, __n143, __n144 ];
__n139["arguments"] := __n141;
__n137["init"] := __n139;
__n136 := [ __n137 ];
__n135["declarations"] := __n136;
__n135["kind"] := "var";
__n145 := {  };
__n145["type"] := "IfStatement";
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "!==";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "MemberExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "x";
__n148["object"] := __n149;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "join";
__n150["raw"] := "\"join\"";
__n148["property"] := __n150;
__n148["computed"] := true;
__n147["callee"] := __n148;
__n151 := [  ];
__n147["arguments"] := __n151;
__n146["left"] := __n147;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := ",,";
__n152["raw"] := "\",,\"";
__n146["right"] := __n152;
__n145["test"] := __n146;
__n153 := {  };
__n153["type"] := "BlockStatement";
__n155 := {  };
__n155["type"] := "ExpressionStatement";
__n156 := {  };
__n156["type"] := "CallExpression";
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "$ERROR";
__n156["callee"] := __n157;
__n159 := {  };
__n159["type"] := "BinaryExpression";
__n159["operator"] := "+";
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := "#4: var x = new Array(null,null,null); x.join(null,null,null) === \",,\". Actual: ";
__n160["raw"] := "'#4: var x = new Array(null,null,null); x.join(null,null,null) === \",,\". Actual: '";
__n159["left"] := __n160;
__n161 := {  };
__n161["type"] := "CallExpression";
__n162 := {  };
__n162["type"] := "MemberExpression";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "x";
__n162["object"] := __n163;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := "join";
__n164["raw"] := "\"join\"";
__n162["property"] := __n164;
__n162["computed"] := true;
__n161["callee"] := __n162;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := 'null;
__n166["raw"] := "\"'null\"";
__n167 := {  };
__n167["type"] := "Literal";
__n167["value"] := 'null;
__n167["raw"] := "\"'null\"";
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := 'null;
__n168["raw"] := "\"'null\"";
__n165 := [ __n166, __n167, __n168 ];
__n161["arguments"] := __n165;
__n159["right"] := __n161;
__n158 := [ __n159 ];
__n156["arguments"] := __n158;
__n155["expression"] := __n156;
__n154 := [ __n155 ];
__n153["body"] := __n154;
__n145["consequent"] := __n153;
__n145["alternate"] := null;
__n169 := {  };
__n169["type"] := "VariableDeclaration";
__n171 := {  };
__n171["type"] := "VariableDeclarator";
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "x";
__n171["id"] := __n172;
__n173 := {  };
__n173["type"] := "NewExpression";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "Array";
__n173["callee"] := __n174;
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "undefined";
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "undefined";
__n178 := {  };
__n178["type"] := "Identifier";
__n178["name"] := "undefined";
__n175 := [ __n176, __n177, __n178 ];
__n173["arguments"] := __n175;
__n171["init"] := __n173;
__n170 := [ __n171 ];
__n169["declarations"] := __n170;
__n169["kind"] := "var";
__n179 := {  };
__n179["type"] := "IfStatement";
__n180 := {  };
__n180["type"] := "BinaryExpression";
__n180["operator"] := "!==";
__n181 := {  };
__n181["type"] := "CallExpression";
__n182 := {  };
__n182["type"] := "MemberExpression";
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "x";
__n182["object"] := __n183;
__n184 := {  };
__n184["type"] := "Literal";
__n184["value"] := "join";
__n184["raw"] := "\"join\"";
__n182["property"] := __n184;
__n182["computed"] := true;
__n181["callee"] := __n182;
__n185 := [  ];
__n181["arguments"] := __n185;
__n180["left"] := __n181;
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := ",,";
__n186["raw"] := "\",,\"";
__n180["right"] := __n186;
__n179["test"] := __n180;
__n187 := {  };
__n187["type"] := "BlockStatement";
__n189 := {  };
__n189["type"] := "ExpressionStatement";
__n190 := {  };
__n190["type"] := "CallExpression";
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "$ERROR";
__n190["callee"] := __n191;
__n193 := {  };
__n193["type"] := "BinaryExpression";
__n193["operator"] := "+";
__n194 := {  };
__n194["type"] := "Literal";
__n194["value"] := "#5: var x = new Array(undefined,undefined,undefined); x.join(undefined,undefined,undefined) === \",,\". Actual: ";
__n194["raw"] := "'#5: var x = new Array(undefined,undefined,undefined); x.join(undefined,undefined,undefined) === \",,\". Actual: '";
__n193["left"] := __n194;
__n195 := {  };
__n195["type"] := "CallExpression";
__n196 := {  };
__n196["type"] := "MemberExpression";
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "x";
__n196["object"] := __n197;
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := "join";
__n198["raw"] := "\"join\"";
__n196["property"] := __n198;
__n196["computed"] := true;
__n195["callee"] := __n196;
__n200 := {  };
__n200["type"] := "Identifier";
__n200["name"] := "undefined";
__n201 := {  };
__n201["type"] := "Identifier";
__n201["name"] := "undefined";
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "undefined";
__n199 := [ __n200, __n201, __n202 ];
__n195["arguments"] := __n199;
__n193["right"] := __n195;
__n192 := [ __n193 ];
__n190["arguments"] := __n192;
__n189["expression"] := __n190;
__n188 := [ __n189 ];
__n187["body"] := __n188;
__n179["consequent"] := __n187;
__n179["alternate"] := null;
__n203 := {  };
__n203["type"] := "VariableDeclaration";
__n205 := {  };
__n205["type"] := "VariableDeclarator";
__n206 := {  };
__n206["type"] := "Identifier";
__n206["name"] := "x";
__n205["id"] := __n206;
__n207 := {  };
__n207["type"] := "NewExpression";
__n208 := {  };
__n208["type"] := "Identifier";
__n208["name"] := "Array";
__n207["callee"] := __n208;
__n210 := {  };
__n210["type"] := "Identifier";
__n210["name"] := "Infinity";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "Infinity";
__n212 := {  };
__n212["type"] := "Identifier";
__n212["name"] := "Infinity";
__n209 := [ __n210, __n211, __n212 ];
__n207["arguments"] := __n209;
__n205["init"] := __n207;
__n204 := [ __n205 ];
__n203["declarations"] := __n204;
__n203["kind"] := "var";
__n213 := {  };
__n213["type"] := "IfStatement";
__n214 := {  };
__n214["type"] := "BinaryExpression";
__n214["operator"] := "!==";
__n215 := {  };
__n215["type"] := "CallExpression";
__n216 := {  };
__n216["type"] := "MemberExpression";
__n217 := {  };
__n217["type"] := "Identifier";
__n217["name"] := "x";
__n216["object"] := __n217;
__n218 := {  };
__n218["type"] := "Literal";
__n218["value"] := "join";
__n218["raw"] := "\"join\"";
__n216["property"] := __n218;
__n216["computed"] := true;
__n215["callee"] := __n216;
__n219 := [  ];
__n215["arguments"] := __n219;
__n214["left"] := __n215;
__n220 := {  };
__n220["type"] := "Literal";
__n220["value"] := "Infinity,Infinity,Infinity";
__n220["raw"] := "\"Infinity,Infinity,Infinity\"";
__n214["right"] := __n220;
__n213["test"] := __n214;
__n221 := {  };
__n221["type"] := "BlockStatement";
__n223 := {  };
__n223["type"] := "ExpressionStatement";
__n224 := {  };
__n224["type"] := "CallExpression";
__n225 := {  };
__n225["type"] := "Identifier";
__n225["name"] := "$ERROR";
__n224["callee"] := __n225;
__n227 := {  };
__n227["type"] := "BinaryExpression";
__n227["operator"] := "+";
__n228 := {  };
__n228["type"] := "Literal";
__n228["value"] := "#6: var x = new Array(Infinity,Infinity,Infinity); x.join(Infinity,Infinity,Infinity) === \"Infinity,Infinity,Infinity\". Actual: ";
__n228["raw"] := "'#6: var x = new Array(Infinity,Infinity,Infinity); x.join(Infinity,Infinity,Infinity) === \"Infinity,Infinity,Infinity\". Actual: '";
__n227["left"] := __n228;
__n229 := {  };
__n229["type"] := "CallExpression";
__n230 := {  };
__n230["type"] := "MemberExpression";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "x";
__n230["object"] := __n231;
__n232 := {  };
__n232["type"] := "Literal";
__n232["value"] := "join";
__n232["raw"] := "\"join\"";
__n230["property"] := __n232;
__n230["computed"] := true;
__n229["callee"] := __n230;
__n234 := {  };
__n234["type"] := "Identifier";
__n234["name"] := "Infinity";
__n235 := {  };
__n235["type"] := "Identifier";
__n235["name"] := "Infinity";
__n236 := {  };
__n236["type"] := "Identifier";
__n236["name"] := "Infinity";
__n233 := [ __n234, __n235, __n236 ];
__n229["arguments"] := __n233;
__n227["right"] := __n229;
__n226 := [ __n227 ];
__n224["arguments"] := __n226;
__n223["expression"] := __n224;
__n222 := [ __n223 ];
__n221["body"] := __n222;
__n213["consequent"] := __n221;
__n213["alternate"] := null;
__n237 := {  };
__n237["type"] := "VariableDeclaration";
__n239 := {  };
__n239["type"] := "VariableDeclarator";
__n240 := {  };
__n240["type"] := "Identifier";
__n240["name"] := "x";
__n239["id"] := __n240;
__n241 := {  };
__n241["type"] := "NewExpression";
__n242 := {  };
__n242["type"] := "Identifier";
__n242["name"] := "Array";
__n241["callee"] := __n242;
__n244 := {  };
__n244["type"] := "Identifier";
__n244["name"] := "NaN";
__n245 := {  };
__n245["type"] := "Identifier";
__n245["name"] := "NaN";
__n246 := {  };
__n246["type"] := "Identifier";
__n246["name"] := "NaN";
__n243 := [ __n244, __n245, __n246 ];
__n241["arguments"] := __n243;
__n239["init"] := __n241;
__n238 := [ __n239 ];
__n237["declarations"] := __n238;
__n237["kind"] := "var";
__n247 := {  };
__n247["type"] := "IfStatement";
__n248 := {  };
__n248["type"] := "BinaryExpression";
__n248["operator"] := "!==";
__n249 := {  };
__n249["type"] := "CallExpression";
__n250 := {  };
__n250["type"] := "MemberExpression";
__n251 := {  };
__n251["type"] := "Identifier";
__n251["name"] := "x";
__n250["object"] := __n251;
__n252 := {  };
__n252["type"] := "Literal";
__n252["value"] := "join";
__n252["raw"] := "\"join\"";
__n250["property"] := __n252;
__n250["computed"] := true;
__n249["callee"] := __n250;
__n253 := [  ];
__n249["arguments"] := __n253;
__n248["left"] := __n249;
__n254 := {  };
__n254["type"] := "Literal";
__n254["value"] := "NaN,NaN,NaN";
__n254["raw"] := "\"NaN,NaN,NaN\"";
__n248["right"] := __n254;
__n247["test"] := __n248;
__n255 := {  };
__n255["type"] := "BlockStatement";
__n257 := {  };
__n257["type"] := "ExpressionStatement";
__n258 := {  };
__n258["type"] := "CallExpression";
__n259 := {  };
__n259["type"] := "Identifier";
__n259["name"] := "$ERROR";
__n258["callee"] := __n259;
__n261 := {  };
__n261["type"] := "BinaryExpression";
__n261["operator"] := "+";
__n262 := {  };
__n262["type"] := "Literal";
__n262["value"] := "#7: var x = new Array(NaN,NaN,NaN); x.join(NaN,NaN,NaN) === \"NaN,NaN,NaN\". Actual: ";
__n262["raw"] := "'#7: var x = new Array(NaN,NaN,NaN); x.join(NaN,NaN,NaN) === \"NaN,NaN,NaN\". Actual: '";
__n261["left"] := __n262;
__n263 := {  };
__n263["type"] := "CallExpression";
__n264 := {  };
__n264["type"] := "MemberExpression";
__n265 := {  };
__n265["type"] := "Identifier";
__n265["name"] := "x";
__n264["object"] := __n265;
__n266 := {  };
__n266["type"] := "Literal";
__n266["value"] := "join";
__n266["raw"] := "\"join\"";
__n264["property"] := __n266;
__n264["computed"] := true;
__n263["callee"] := __n264;
__n268 := {  };
__n268["type"] := "Identifier";
__n268["name"] := "NaN";
__n269 := {  };
__n269["type"] := "Identifier";
__n269["name"] := "NaN";
__n270 := {  };
__n270["type"] := "Identifier";
__n270["name"] := "NaN";
__n267 := [ __n268, __n269, __n270 ];
__n263["arguments"] := __n267;
__n261["right"] := __n263;
__n260 := [ __n261 ];
__n258["arguments"] := __n260;
__n257["expression"] := __n258;
__n256 := [ __n257 ];
__n255["body"] := __n256;
__n247["consequent"] := __n255;
__n247["alternate"] := null;
__n1 := [ __n2, __n12, __n35, __n45, __n68, __n78, __n101, __n111, __n135, __n145, __n169, __n179, __n203, __n213, __n237, __n247 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n271 := [ "x" ];
__n0["variableDeclarations"] := __n271;
__n272 := [  ];
__n0["functionDeclarations"] := __n272;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}