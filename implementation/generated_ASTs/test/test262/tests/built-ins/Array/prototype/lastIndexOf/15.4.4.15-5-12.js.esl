function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arr";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n10["computed"] := true;
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "arr";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "BinaryExpression";
__n12["operator"] := "-";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Math";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "pow";
__n16["raw"] := "\"pow\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 2.;
__n18["raw"] := "2";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 32.;
__n19["raw"] := "32";
__n17 := [ __n18, __n19 ];
__n13["arguments"] := __n17;
__n12["left"] := __n13;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 2.;
__n20["raw"] := "2";
__n12["right"] := __n20;
__n10["property"] := __n12;
__n9["left"] := __n10;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 'null;
__n21["raw"] := "\"'null\"";
__n9["right"] := __n21;
__n8["expression"] := __n9;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "assert";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "sameValue";
__n26["raw"] := "\"sameValue\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "arr";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "lastIndexOf";
__n31["raw"] := "\"lastIndexOf\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 'null;
__n33["raw"] := "\"'null\"";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Infinity";
__n32 := [ __n33, __n34 ];
__n28["arguments"] := __n32;
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "-";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Math";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "pow";
__n39["raw"] := "\"pow\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 2.;
__n41["raw"] := "2";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 32.;
__n42["raw"] := "32";
__n40 := [ __n41, __n42 ];
__n36["arguments"] := __n40;
__n35["left"] := __n36;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 2.;
__n43["raw"] := "2";
__n35["right"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "arr.lastIndexOf(null, Infinity)";
__n44["raw"] := "'arr.lastIndexOf(null, Infinity)'";
__n27 := [ __n28, __n35, __n44 ];
__n23["arguments"] := __n27;
__n22["expression"] := __n23;
__n1 := [ __n2, __n8, __n22 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n45 := [ "arr" ];
__n0["variableDeclarations"] := __n45;
__n46 := [  ];
__n0["functionDeclarations"] := __n46;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}