function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "fromIndex";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "toString";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ReturnStatement";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "2";
__n15["raw"] := "'2'";
__n14["argument"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n16 := [  ];
__n12["variableDeclarations"] := __n16;
__n17 := [  ];
__n12["functionDeclarations"] := __n17;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["expression"] := false;
__n10["async"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "targetObj";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "NewExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "RegExp";
__n22["callee"] := __n23;
__n24 := [  ];
__n22["arguments"] := __n24;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "assert";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "sameValue";
__n29["raw"] := "\"sameValue\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "ArrayExpression";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 0.;
__n35["raw"] := "0";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := true;
__n36["raw"] := "true";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "targetObj";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 3.;
__n38["raw"] := "3";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := false;
__n39["raw"] := "false";
__n34 := [ __n35, __n36, __n37, __n38, __n39 ];
__n33["elements"] := __n34;
__n32["object"] := __n33;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "lastIndexOf";
__n40["raw"] := "\"lastIndexOf\"";
__n32["property"] := __n40;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "targetObj";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "fromIndex";
__n41 := [ __n42, __n43 ];
__n31["arguments"] := __n41;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 2.;
__n44["raw"] := "2";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "[0, true, targetObj, 3, false].lastIndexOf(targetObj, fromIndex)";
__n45["raw"] := "'[0, true, targetObj, 3, false].lastIndexOf(targetObj, fromIndex)'";
__n30 := [ __n31, __n44, __n45 ];
__n26["arguments"] := __n30;
__n25["expression"] := __n26;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "assert";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "sameValue";
__n50["raw"] := "\"sameValue\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "ArrayExpression";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 0.;
__n56["raw"] := "0";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := true;
__n57["raw"] := "true";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 3.;
__n58["raw"] := "3";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "targetObj";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := false;
__n60["raw"] := "false";
__n55 := [ __n56, __n57, __n58, __n59, __n60 ];
__n54["elements"] := __n55;
__n53["object"] := __n54;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "lastIndexOf";
__n61["raw"] := "\"lastIndexOf\"";
__n53["property"] := __n61;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "targetObj";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "fromIndex";
__n62 := [ __n63, __n64 ];
__n52["arguments"] := __n62;
__n65 := {  };
__n65["type"] := "UnaryExpression";
__n65["operator"] := "-";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 1.;
__n66["raw"] := "1";
__n65["argument"] := __n66;
__n65["prefix"] := true;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "[0, true, 3, targetObj, false].lastIndexOf(targetObj, fromIndex)";
__n67["raw"] := "'[0, true, 3, targetObj, false].lastIndexOf(targetObj, fromIndex)'";
__n51 := [ __n52, __n65, __n67 ];
__n47["arguments"] := __n51;
__n46["expression"] := __n47;
__n1 := [ __n2, __n18, __n25, __n46 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n68 := [ "fromIndex", "targetObj" ];
__n0["variableDeclarations"] := __n68;
__n69 := [  ];
__n0["functionDeclarations"] := __n69;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}