function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Array";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "prototype";
__n11["raw"] := "\"prototype\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["object"] := __n9;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "length";
__n12["raw"] := "\"length\"";
__n8["property"] := __n12;
__n8["computed"] := true;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 0.;
__n13["raw"] := "0";
__n7 := [ __n8, __n13 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "verifyNotEnumerable";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Array";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "prototype";
__n20["raw"] := "\"prototype\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "length";
__n21["raw"] := "'length'";
__n17 := [ __n18, __n21 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "verifyWritable";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Array";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "prototype";
__n28["raw"] := "\"prototype\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "length";
__n29["raw"] := "'length'";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := false;
__n30["raw"] := "false";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 42.;
__n31["raw"] := "42";
__n25 := [ __n26, __n29, __n30, __n31 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "verifyNotConfigurable";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Array";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "prototype";
__n38["raw"] := "\"prototype\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "length";
__n39["raw"] := "'length'";
__n35 := [ __n36, __n39 ];
__n33["arguments"] := __n35;
__n32["expression"] := __n33;
__n1 := [ __n2, __n14, __n22, __n32 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n40 := [  ];
__n0["variableDeclarations"] := __n40;
__n41 := [  ];
__n0["functionDeclarations"] := __n41;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}