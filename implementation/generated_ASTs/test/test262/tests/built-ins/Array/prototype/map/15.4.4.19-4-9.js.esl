function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 11.;
__n10["raw"] := "11";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n11 := {  };
__n11["type"] := "Property";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 1.;
__n12["raw"] := "1";
__n11["key"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 12.;
__n13["raw"] := "12";
__n11["value"] := __n13;
__n11["computed"] := false;
__n11["kind"] := "init";
__n11["shorthand"] := false;
__n7 := [ __n8, __n11 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "accessed";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := false;
__n18["raw"] := "false";
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Object";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "defineProperty";
__n23["raw"] := "\"defineProperty\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "obj";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "length";
__n26["raw"] := "\"length\"";
__n27 := {  };
__n27["type"] := "ObjectExpression";
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "get";
__n29["key"] := __n30;
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [  ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ReturnStatement";
__n36 := {  };
__n36["type"] := "ObjectExpression";
__n38 := {  };
__n38["type"] := "Property";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "toString";
__n38["key"] := __n39;
__n40 := {  };
__n40["type"] := "FunctionExpression";
__n40["id"] := null;
__n41 := [  ];
__n40["params"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "AssignmentExpression";
__n45["operator"] := "=";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "accessed";
__n45["left"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := true;
__n47["raw"] := "true";
__n45["right"] := __n47;
__n44["expression"] := __n45;
__n48 := {  };
__n48["type"] := "ReturnStatement";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "2";
__n49["raw"] := "\"2\"";
__n48["argument"] := __n49;
__n43 := [ __n44, __n48 ];
__n42["body"] := __n43;
__n50 := [  ];
__n42["variableDeclarations"] := __n50;
__n51 := [  ];
__n42["functionDeclarations"] := __n51;
__n42["codeType"] := "function";
__n42["strict"] := false;
__n40["body"] := __n42;
__n40["generator"] := false;
__n40["expression"] := false;
__n40["async"] := false;
__n38["value"] := __n40;
__n38["computed"] := false;
__n38["kind"] := "init";
__n38["shorthand"] := false;
__n37 := [ __n38 ];
__n36["properties"] := __n37;
__n35["argument"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n52 := [  ];
__n33["variableDeclarations"] := __n52;
__n53 := [  ];
__n33["functionDeclarations"] := __n53;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["expression"] := false;
__n31["async"] := false;
__n29["value"] := __n31;
__n29["computed"] := false;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n54 := {  };
__n54["type"] := "Property";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "configurable";
__n54["key"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := true;
__n56["raw"] := "true";
__n54["value"] := __n56;
__n54["computed"] := false;
__n54["kind"] := "init";
__n54["shorthand"] := false;
__n28 := [ __n29, __n54 ];
__n27["properties"] := __n28;
__n24 := [ __n25, __n26, __n27 ];
__n20["arguments"] := __n24;
__n19["expression"] := __n20;
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "assert";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "throws";
__n61["raw"] := "\"throws\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n58["callee"] := __n59;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "TypeError";
__n64 := {  };
__n64["type"] := "FunctionExpression";
__n64["id"] := null;
__n65 := [  ];
__n64["params"] := __n65;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "MemberExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "Array";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "prototype";
__n74["raw"] := "\"prototype\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["object"] := __n72;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "map";
__n75["raw"] := "\"map\"";
__n71["property"] := __n75;
__n71["computed"] := true;
__n70["object"] := __n71;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "call";
__n76["raw"] := "\"call\"";
__n70["property"] := __n76;
__n70["computed"] := true;
__n69["callee"] := __n70;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "obj";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 'null;
__n79["raw"] := "\"'null\"";
__n77 := [ __n78, __n79 ];
__n69["arguments"] := __n77;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n80 := [  ];
__n66["variableDeclarations"] := __n80;
__n81 := [  ];
__n66["functionDeclarations"] := __n81;
__n66["codeType"] := "function";
__n66["strict"] := false;
__n64["body"] := __n66;
__n64["generator"] := false;
__n64["expression"] := false;
__n64["async"] := false;
__n62 := [ __n63, __n64 ];
__n58["arguments"] := __n62;
__n57["expression"] := __n58;
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "assert";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "accessed";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "accessed !== true";
__n87["raw"] := "'accessed !== true'";
__n85 := [ __n86, __n87 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n1 := [ __n2, __n14, __n19, __n57, __n82 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n88 := [ "obj", "accessed" ];
__n0["variableDeclarations"] := __n88;
__n89 := [  ];
__n0["functionDeclarations"] := __n89;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}