function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "objString";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "callbackfn";
__n9["expression"] := __n10;
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "testResult";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "ArrayExpression";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 11.;
__n19["raw"] := "11";
__n18 := [ __n19 ];
__n17["elements"] := __n18;
__n16["object"] := __n17;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "map";
__n20["raw"] := "\"map\"";
__n16["property"] := __n20;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "callbackfn";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "objString";
__n21 := [ __n22, __n23 ];
__n15["arguments"] := __n21;
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "sameValue";
__n28["raw"] := "\"sameValue\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n30 := {  };
__n30["type"] := "MemberExpression";
__n30["computed"] := true;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "testResult";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 0.;
__n32["raw"] := "0";
__n30["property"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := true;
__n33["raw"] := "true";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "testResult[0]";
__n34["raw"] := "'testResult[0]'";
__n29 := [ __n30, __n33, __n34 ];
__n25["arguments"] := __n29;
__n24["expression"] := __n25;
__n1 := [ __n2, __n9, __n11, __n24 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n35 := [ "objString", "testResult" ];
__n0["variableDeclarations"] := __n35;
__n37 := {  };
__n37["type"] := "FunctionDeclaration";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "callbackfn";
__n37["id"] := __n38;
__n39 := [ "val", "idx", "obj" ];
__n37["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ReturnStatement";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "===";
__n44 := {  };
__n44["type"] := "ThisExpression";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "objString";
__n43["right"] := __n45;
__n42["argument"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n46 := [  ];
__n40["variableDeclarations"] := __n46;
__n47 := [  ];
__n40["functionDeclarations"] := __n47;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n37["body"] := __n40;
__n37["generator"] := false;
__n37["expression"] := false;
__n37["async"] := false;
__n36 := [ __n37 ];
__n0["functionDeclarations"] := __n36;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}