function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "arr";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ArrayExpression";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 1.;
__n11["raw"] := "1";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 2.;
__n12["raw"] := "2";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "last";
__n13["raw"] := "\"last\"";
__n9 := [ __n10, __n11, __n12, __n13 ];
__n8["elements"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Object";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "defineProperty";
__n18["raw"] := "\"defineProperty\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "arr";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "0";
__n21["raw"] := "\"0\"";
__n22 := {  };
__n22["type"] := "ObjectExpression";
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "get";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "FunctionExpression";
__n26["id"] := null;
__n27 := [  ];
__n26["params"] := __n27;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "AssignmentExpression";
__n31["operator"] := "=";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "arr";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "length";
__n34["raw"] := "\"length\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["left"] := __n32;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 3.;
__n35["raw"] := "3";
__n31["right"] := __n35;
__n30["expression"] := __n31;
__n36 := {  };
__n36["type"] := "ReturnStatement";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 0.;
__n37["raw"] := "0";
__n36["argument"] := __n37;
__n29 := [ __n30, __n36 ];
__n28["body"] := __n29;
__n38 := [  ];
__n28["variableDeclarations"] := __n38;
__n39 := [  ];
__n28["functionDeclarations"] := __n39;
__n28["codeType"] := "function";
__n28["strict"] := false;
__n26["body"] := __n28;
__n26["generator"] := false;
__n26["expression"] := false;
__n26["async"] := false;
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n40 := {  };
__n40["type"] := "Property";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "configurable";
__n40["key"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := true;
__n42["raw"] := "true";
__n40["value"] := __n42;
__n40["computed"] := false;
__n40["kind"] := "init";
__n40["shorthand"] := false;
__n23 := [ __n24, __n40 ];
__n22["properties"] := __n23;
__n19 := [ __n20, __n21, __n22 ];
__n15["arguments"] := __n19;
__n14["expression"] := __n15;
__n43 := {  };
__n43["type"] := "VariableDeclaration";
__n45 := {  };
__n45["type"] := "VariableDeclarator";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "testResult";
__n45["id"] := __n46;
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "arr";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "map";
__n50["raw"] := "\"map\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "callbackfn";
__n51 := [ __n52 ];
__n47["arguments"] := __n51;
__n45["init"] := __n47;
__n44 := [ __n45 ];
__n43["declarations"] := __n44;
__n43["kind"] := "var";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "assert";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "sameValue";
__n57["raw"] := "\"sameValue\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "UnaryExpression";
__n59["operator"] := "typeof";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n60["computed"] := true;
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "testResult";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 3.;
__n62["raw"] := "3";
__n60["property"] := __n62;
__n59["argument"] := __n60;
__n59["prefix"] := true;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "undefined";
__n63["raw"] := "\"undefined\"";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "typeof testResult[3]";
__n64["raw"] := "'typeof testResult[3]'";
__n58 := [ __n59, __n63, __n64 ];
__n54["arguments"] := __n58;
__n53["expression"] := __n54;
__n1 := [ __n2, __n4, __n14, __n43, __n53 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n65 := [ "arr", "testResult" ];
__n0["variableDeclarations"] := __n65;
__n67 := {  };
__n67["type"] := "FunctionDeclaration";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "callbackfn";
__n67["id"] := __n68;
__n69 := [ "val", "idx", "obj" ];
__n67["params"] := __n69;
__n70 := {  };
__n70["type"] := "BlockStatement";
__n72 := {  };
__n72["type"] := "ReturnStatement";
__n73 := {  };
__n73["type"] := "LogicalExpression";
__n73["operator"] := "&&";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "===";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "idx";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 3.;
__n76["raw"] := "3";
__n74["right"] := __n76;
__n73["left"] := __n74;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "===";
__n78 := {  };
__n78["type"] := "UnaryExpression";
__n78["operator"] := "typeof";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "val";
__n78["argument"] := __n79;
__n78["prefix"] := true;
__n77["left"] := __n78;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "undefined";
__n80["raw"] := "\"undefined\"";
__n77["right"] := __n80;
__n73["right"] := __n77;
__n72["argument"] := __n73;
__n71 := [ __n72 ];
__n70["body"] := __n71;
__n81 := [  ];
__n70["variableDeclarations"] := __n81;
__n82 := [  ];
__n70["functionDeclarations"] := __n82;
__n70["codeType"] := "function";
__n70["strict"] := false;
__n67["body"] := __n70;
__n67["generator"] := false;
__n67["expression"] := false;
__n67["async"] := false;
__n66 := [ __n67 ];
__n0["functionDeclarations"] := __n66;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}