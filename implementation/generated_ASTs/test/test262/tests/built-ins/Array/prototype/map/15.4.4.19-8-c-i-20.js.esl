function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "proto";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ObjectExpression";
__n9 := [  ];
__n8["properties"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Con";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "FunctionExpression";
__n14["id"] := null;
__n15 := [  ];
__n14["params"] := __n15;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n17 := [  ];
__n16["body"] := __n17;
__n18 := [  ];
__n16["variableDeclarations"] := __n18;
__n19 := [  ];
__n16["functionDeclarations"] := __n19;
__n16["codeType"] := "function";
__n16["strict"] := false;
__n14["body"] := __n16;
__n14["generator"] := false;
__n14["expression"] := false;
__n14["async"] := false;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "=";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Con";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "prototype";
__n24["raw"] := "\"prototype\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["left"] := __n22;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "proto";
__n21["right"] := __n25;
__n20["expression"] := __n21;
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "child";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "NewExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Con";
__n30["callee"] := __n31;
__n32 := [  ];
__n30["arguments"] := __n32;
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "AssignmentExpression";
__n34["operator"] := "=";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "child";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "length";
__n37["raw"] := "\"length\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["left"] := __n35;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 2.;
__n38["raw"] := "2";
__n34["right"] := __n38;
__n33["expression"] := __n34;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Object";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "defineProperty";
__n43["raw"] := "\"defineProperty\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "child";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "0";
__n46["raw"] := "\"0\"";
__n47 := {  };
__n47["type"] := "ObjectExpression";
__n49 := {  };
__n49["type"] := "Property";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "set";
__n49["key"] := __n50;
__n51 := {  };
__n51["type"] := "FunctionExpression";
__n51["id"] := null;
__n52 := [  ];
__n51["params"] := __n52;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n54 := [  ];
__n53["body"] := __n54;
__n55 := [  ];
__n53["variableDeclarations"] := __n55;
__n56 := [  ];
__n53["functionDeclarations"] := __n56;
__n53["codeType"] := "function";
__n53["strict"] := false;
__n51["body"] := __n53;
__n51["generator"] := false;
__n51["expression"] := false;
__n51["async"] := false;
__n49["value"] := __n51;
__n49["computed"] := false;
__n49["kind"] := "init";
__n49["shorthand"] := false;
__n57 := {  };
__n57["type"] := "Property";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "configurable";
__n57["key"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := true;
__n59["raw"] := "true";
__n57["value"] := __n59;
__n57["computed"] := false;
__n57["kind"] := "init";
__n57["shorthand"] := false;
__n48 := [ __n49, __n57 ];
__n47["properties"] := __n48;
__n44 := [ __n45, __n46, __n47 ];
__n40["arguments"] := __n44;
__n39["expression"] := __n40;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Object";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "defineProperty";
__n64["raw"] := "\"defineProperty\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "proto";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "0";
__n67["raw"] := "\"0\"";
__n68 := {  };
__n68["type"] := "ObjectExpression";
__n70 := {  };
__n70["type"] := "Property";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "get";
__n70["key"] := __n71;
__n72 := {  };
__n72["type"] := "FunctionExpression";
__n72["id"] := null;
__n73 := [  ];
__n72["params"] := __n73;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ReturnStatement";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 100.;
__n77["raw"] := "100";
__n76["argument"] := __n77;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n78 := [  ];
__n74["variableDeclarations"] := __n78;
__n79 := [  ];
__n74["functionDeclarations"] := __n79;
__n74["codeType"] := "function";
__n74["strict"] := false;
__n72["body"] := __n74;
__n72["generator"] := false;
__n72["expression"] := false;
__n72["async"] := false;
__n70["value"] := __n72;
__n70["computed"] := false;
__n70["kind"] := "init";
__n70["shorthand"] := false;
__n80 := {  };
__n80["type"] := "Property";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "configurable";
__n80["key"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := true;
__n82["raw"] := "true";
__n80["value"] := __n82;
__n80["computed"] := false;
__n80["kind"] := "init";
__n80["shorthand"] := false;
__n69 := [ __n70, __n80 ];
__n68["properties"] := __n69;
__n65 := [ __n66, __n67, __n68 ];
__n61["arguments"] := __n65;
__n60["expression"] := __n61;
__n83 := {  };
__n83["type"] := "VariableDeclaration";
__n85 := {  };
__n85["type"] := "VariableDeclarator";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "testResult";
__n85["id"] := __n86;
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "Array";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "prototype";
__n92["raw"] := "\"prototype\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n89["object"] := __n90;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "map";
__n93["raw"] := "\"map\"";
__n89["property"] := __n93;
__n89["computed"] := true;
__n88["object"] := __n89;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "call";
__n94["raw"] := "\"call\"";
__n88["property"] := __n94;
__n88["computed"] := true;
__n87["callee"] := __n88;
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "child";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "callbackfn";
__n95 := [ __n96, __n97 ];
__n87["arguments"] := __n95;
__n85["init"] := __n87;
__n84 := [ __n85 ];
__n83["declarations"] := __n84;
__n83["kind"] := "var";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "assert";
__n100["object"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "sameValue";
__n102["raw"] := "\"sameValue\"";
__n100["property"] := __n102;
__n100["computed"] := true;
__n99["callee"] := __n100;
__n104 := {  };
__n104["type"] := "MemberExpression";
__n104["computed"] := true;
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "testResult";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 0.;
__n106["raw"] := "0";
__n104["property"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := true;
__n107["raw"] := "true";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "testResult[0]";
__n108["raw"] := "'testResult[0]'";
__n103 := [ __n104, __n107, __n108 ];
__n99["arguments"] := __n103;
__n98["expression"] := __n99;
__n1 := [ __n2, __n4, __n10, __n20, __n26, __n33, __n39, __n60, __n83, __n98 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n109 := [ "proto", "Con", "child", "testResult" ];
__n0["variableDeclarations"] := __n109;
__n111 := {  };
__n111["type"] := "FunctionDeclaration";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "callbackfn";
__n111["id"] := __n112;
__n113 := [ "val", "idx", "obj" ];
__n111["params"] := __n113;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n116 := {  };
__n116["type"] := "IfStatement";
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "===";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "idx";
__n117["left"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 0.;
__n119["raw"] := "0";
__n117["right"] := __n119;
__n116["test"] := __n117;
__n120 := {  };
__n120["type"] := "BlockStatement";
__n122 := {  };
__n122["type"] := "ReturnStatement";
__n123 := {  };
__n123["type"] := "BinaryExpression";
__n123["operator"] := "===";
__n124 := {  };
__n124["type"] := "UnaryExpression";
__n124["operator"] := "typeof";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "val";
__n124["argument"] := __n125;
__n124["prefix"] := true;
__n123["left"] := __n124;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "undefined";
__n126["raw"] := "\"undefined\"";
__n123["right"] := __n126;
__n122["argument"] := __n123;
__n121 := [ __n122 ];
__n120["body"] := __n121;
__n116["consequent"] := __n120;
__n116["alternate"] := null;
__n127 := {  };
__n127["type"] := "ReturnStatement";
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := false;
__n128["raw"] := "false";
__n127["argument"] := __n128;
__n115 := [ __n116, __n127 ];
__n114["body"] := __n115;
__n129 := [  ];
__n114["variableDeclarations"] := __n129;
__n130 := [  ];
__n114["functionDeclarations"] := __n130;
__n114["codeType"] := "function";
__n114["strict"] := false;
__n111["body"] := __n114;
__n111["generator"] := false;
__n111["expression"] := false;
__n111["async"] := false;
__n110 := [ __n111 ];
__n0["functionDeclarations"] := __n110;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}