function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "thisArg";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ObjectExpression";
__n10 := {  };
__n10["type"] := "Property";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "threshold";
__n10["key"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 10.;
__n12["raw"] := "10";
__n10["value"] := __n12;
__n10["computed"] := false;
__n10["kind"] := "init";
__n10["shorthand"] := false;
__n9 := [ __n10 ];
__n8["properties"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "obj";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "ObjectExpression";
__n19 := {  };
__n19["type"] := "Property";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 0.;
__n20["raw"] := "0";
__n19["key"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 11.;
__n21["raw"] := "11";
__n19["value"] := __n21;
__n19["computed"] := false;
__n19["kind"] := "init";
__n19["shorthand"] := false;
__n22 := {  };
__n22["type"] := "Property";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 1.;
__n23["raw"] := "1";
__n22["key"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 9.;
__n24["raw"] := "9";
__n22["value"] := __n24;
__n22["computed"] := false;
__n22["kind"] := "init";
__n22["shorthand"] := false;
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "length";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 2.;
__n27["raw"] := "2";
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n18 := [ __n19, __n22, __n25 ];
__n17["properties"] := __n18;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n28 := {  };
__n28["type"] := "VariableDeclaration";
__n30 := {  };
__n30["type"] := "VariableDeclarator";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "testResult";
__n30["id"] := __n31;
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Array";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "prototype";
__n37["raw"] := "\"prototype\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["object"] := __n35;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "map";
__n38["raw"] := "\"map\"";
__n34["property"] := __n38;
__n34["computed"] := true;
__n33["object"] := __n34;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "call";
__n39["raw"] := "\"call\"";
__n33["property"] := __n39;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "obj";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "callbackfn";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "thisArg";
__n40 := [ __n41, __n42, __n43 ];
__n32["arguments"] := __n40;
__n30["init"] := __n32;
__n29 := [ __n30 ];
__n28["declarations"] := __n29;
__n28["kind"] := "var";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "assert";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "sameValue";
__n48["raw"] := "\"sameValue\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "MemberExpression";
__n50["computed"] := true;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "testResult";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 0.;
__n52["raw"] := "0";
__n50["property"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := true;
__n53["raw"] := "true";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "testResult[0]";
__n54["raw"] := "'testResult[0]'";
__n49 := [ __n50, __n53, __n54 ];
__n45["arguments"] := __n49;
__n44["expression"] := __n45;
__n1 := [ __n2, __n4, __n13, __n28, __n44 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n55 := [ "thisArg", "obj", "testResult" ];
__n0["variableDeclarations"] := __n55;
__n57 := {  };
__n57["type"] := "FunctionDeclaration";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "callbackfn";
__n57["id"] := __n58;
__n59 := [ "val", "idx", "obj" ];
__n57["params"] := __n59;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ReturnStatement";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "===";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "ThisExpression";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "threshold";
__n66["raw"] := "\"threshold\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["left"] := __n64;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 10.;
__n67["raw"] := "10";
__n63["right"] := __n67;
__n62["argument"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n68 := [  ];
__n60["variableDeclarations"] := __n68;
__n69 := [  ];
__n60["functionDeclarations"] := __n69;
__n60["codeType"] := "function";
__n60["strict"] := false;
__n57["body"] := __n60;
__n57["generator"] := false;
__n57["expression"] := false;
__n57["async"] := false;
__n56 := [ __n57 ];
__n0["functionDeclarations"] := __n56;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}