function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "srcArr";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ArrayExpression";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 1.;
__n11["raw"] := "1";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 2.;
__n12["raw"] := "2";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 3.;
__n13["raw"] := "3";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 4.;
__n14["raw"] := "4";
__n9 := [ __n10, __n11, __n12, __n13, __n14 ];
__n8["elements"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "resArr";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "srcArr";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "map";
__n22["raw"] := "\"map\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "callbackfn";
__n23 := [ __n24 ];
__n19["arguments"] := __n23;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := ">";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "resArr";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "length";
__n32["raw"] := "\"length\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["left"] := __n30;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n29["right"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "resArr.length > 0";
__n34["raw"] := "'resArr.length > 0'";
__n28 := [ __n29, __n34 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n35 := {  };
__n35["type"] := "VariableDeclaration";
__n37 := {  };
__n37["type"] := "VariableDeclarator";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "desc";
__n37["id"] := __n38;
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Object";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "getOwnPropertyDescriptor";
__n42["raw"] := "\"getOwnPropertyDescriptor\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "resArr";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 1.;
__n45["raw"] := "1";
__n43 := [ __n44, __n45 ];
__n39["arguments"] := __n43;
__n37["init"] := __n39;
__n36 := [ __n37 ];
__n35["declarations"] := __n36;
__n35["kind"] := "var";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "assert";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "sameValue";
__n50["raw"] := "\"sameValue\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "desc";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "value";
__n54["raw"] := "\"value\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 3.;
__n55["raw"] := "3";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "desc.value";
__n56["raw"] := "'desc.value'";
__n51 := [ __n52, __n55, __n56 ];
__n47["arguments"] := __n51;
__n46["expression"] := __n47;
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "assert";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "sameValue";
__n61["raw"] := "\"sameValue\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n58["callee"] := __n59;
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "desc";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "writable";
__n65["raw"] := "\"writable\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := true;
__n66["raw"] := "true";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "desc.writable";
__n67["raw"] := "'desc.writable'";
__n62 := [ __n63, __n66, __n67 ];
__n58["arguments"] := __n62;
__n57["expression"] := __n58;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "assert";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "sameValue";
__n72["raw"] := "\"sameValue\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n69["callee"] := __n70;
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "desc";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "enumerable";
__n76["raw"] := "\"enumerable\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := true;
__n77["raw"] := "true";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "desc.enumerable";
__n78["raw"] := "'desc.enumerable'";
__n73 := [ __n74, __n77, __n78 ];
__n69["arguments"] := __n73;
__n68["expression"] := __n69;
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "assert";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "sameValue";
__n83["raw"] := "\"sameValue\"";
__n81["property"] := __n83;
__n81["computed"] := true;
__n80["callee"] := __n81;
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "desc";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "configurable";
__n87["raw"] := "\"configurable\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := true;
__n88["raw"] := "true";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "desc.configurable";
__n89["raw"] := "'desc.configurable'";
__n84 := [ __n85, __n88, __n89 ];
__n80["arguments"] := __n84;
__n79["expression"] := __n80;
__n1 := [ __n2, __n4, __n15, __n25, __n35, __n46, __n57, __n68, __n79 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n90 := [ "srcArr", "resArr", "desc" ];
__n0["variableDeclarations"] := __n90;
__n92 := {  };
__n92["type"] := "FunctionDeclaration";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "callbackfn";
__n92["id"] := __n93;
__n94 := [ "val", "idx", "obj" ];
__n92["params"] := __n94;
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "IfStatement";
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "%";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "val";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := 2.;
__n100["raw"] := "2";
__n98["right"] := __n100;
__n97["test"] := __n98;
__n101 := {  };
__n101["type"] := "ReturnStatement";
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "+";
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "*";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := 2.;
__n104["raw"] := "2";
__n103["left"] := __n104;
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "val";
__n103["right"] := __n105;
__n102["left"] := __n103;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 1.;
__n106["raw"] := "1";
__n102["right"] := __n106;
__n101["argument"] := __n102;
__n97["consequent"] := __n101;
__n107 := {  };
__n107["type"] := "ReturnStatement";
__n108 := {  };
__n108["type"] := "BinaryExpression";
__n108["operator"] := "/";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "val";
__n108["left"] := __n109;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 2.;
__n110["raw"] := "2";
__n108["right"] := __n110;
__n107["argument"] := __n108;
__n97["alternate"] := __n107;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n111 := [  ];
__n95["variableDeclarations"] := __n111;
__n112 := [  ];
__n95["functionDeclarations"] := __n112;
__n95["codeType"] := "function";
__n95["strict"] := false;
__n92["body"] := __n95;
__n92["generator"] := false;
__n92["expression"] := false;
__n92["async"] := false;
__n91 := [ __n92 ];
__n0["functionDeclarations"] := __n91;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}