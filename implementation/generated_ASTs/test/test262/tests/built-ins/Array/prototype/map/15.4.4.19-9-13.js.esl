function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "called";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arr";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ArrayExpression";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 2.;
__n16["raw"] := "2";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 3.;
__n17["raw"] := "3";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 4.;
__n18["raw"] := "4";
__n14 := [ __n15, __n16, __n17, __n18 ];
__n13["elements"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "arr";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "map";
__n23["raw"] := "\"map\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "callbackfn";
__n24 := [ __n25 ];
__n20["arguments"] := __n24;
__n19["expression"] := __n20;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "assert";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "sameValue";
__n30["raw"] := "\"sameValue\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "MemberExpression";
__n32["computed"] := true;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "arr";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 0.;
__n34["raw"] := "0";
__n32["property"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 1.;
__n35["raw"] := "1";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "arr[0]";
__n36["raw"] := "'arr[0]'";
__n31 := [ __n32, __n35, __n36 ];
__n27["arguments"] := __n31;
__n26["expression"] := __n27;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "assert";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "sameValue";
__n41["raw"] := "\"sameValue\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "MemberExpression";
__n43["computed"] := true;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "arr";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 1.;
__n45["raw"] := "1";
__n43["property"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 2.;
__n46["raw"] := "2";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "arr[1]";
__n47["raw"] := "'arr[1]'";
__n42 := [ __n43, __n46, __n47 ];
__n38["arguments"] := __n42;
__n37["expression"] := __n38;
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "assert";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "sameValue";
__n52["raw"] := "\"sameValue\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "MemberExpression";
__n54["computed"] := true;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "arr";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 2.;
__n56["raw"] := "2";
__n54["property"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 3.;
__n57["raw"] := "3";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "arr[2]";
__n58["raw"] := "'arr[2]'";
__n53 := [ __n54, __n57, __n58 ];
__n49["arguments"] := __n53;
__n48["expression"] := __n49;
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "assert";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "sameValue";
__n63["raw"] := "\"sameValue\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n65 := {  };
__n65["type"] := "MemberExpression";
__n65["computed"] := true;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "arr";
__n65["object"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 3.;
__n67["raw"] := "3";
__n65["property"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 4.;
__n68["raw"] := "4";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "arr[3]";
__n69["raw"] := "'arr[3]'";
__n64 := [ __n65, __n68, __n69 ];
__n60["arguments"] := __n64;
__n59["expression"] := __n60;
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "assert";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "sameValue";
__n74["raw"] := "\"sameValue\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "called";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 4.;
__n77["raw"] := "4";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "called";
__n78["raw"] := "'called'";
__n75 := [ __n76, __n77, __n78 ];
__n71["arguments"] := __n75;
__n70["expression"] := __n71;
__n1 := [ __n2, __n7, __n9, __n19, __n26, __n37, __n48, __n59, __n70 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n79 := [ "called", "arr" ];
__n0["variableDeclarations"] := __n79;
__n81 := {  };
__n81["type"] := "FunctionDeclaration";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "callbackfn";
__n81["id"] := __n82;
__n83 := [ "val", "idx", "obj" ];
__n81["params"] := __n83;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "UpdateExpression";
__n87["operator"] := "++";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "called";
__n87["argument"] := __n88;
__n87["prefix"] := false;
__n86["expression"] := __n87;
__n89 := {  };
__n89["type"] := "ReturnStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := ">";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "val";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 2.;
__n92["raw"] := "2";
__n90["right"] := __n92;
__n89["argument"] := __n90;
__n85 := [ __n86, __n89 ];
__n84["body"] := __n85;
__n93 := [  ];
__n84["variableDeclarations"] := __n93;
__n94 := [  ];
__n84["functionDeclarations"] := __n94;
__n84["codeType"] := "function";
__n84["strict"] := false;
__n81["body"] := __n84;
__n81["generator"] := false;
__n81["expression"] := false;
__n81["async"] := false;
__n80 := [ __n81 ];
__n0["functionDeclarations"] := __n80;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}