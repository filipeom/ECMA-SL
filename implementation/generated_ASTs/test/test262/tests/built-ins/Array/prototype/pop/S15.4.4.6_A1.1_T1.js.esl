function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Array";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "pop";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "x";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "pop";
__n16["raw"] := "\"pop\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n17 := [  ];
__n13["arguments"] := __n17;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n18 := {  };
__n18["type"] := "IfStatement";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "!==";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "pop";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "undefined";
__n19["right"] := __n21;
__n18["test"] := __n19;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "$ERROR";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "+";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "#1: var x = new Array(); x.pop() === undefined. Actual: ";
__n29["raw"] := "'#1: var x = new Array(); x.pop() === undefined. Actual: '";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "pop";
__n28["right"] := __n30;
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n24["expression"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n18["consequent"] := __n22;
__n18["alternate"] := null;
__n31 := {  };
__n31["type"] := "IfStatement";
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "!==";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "x";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "length";
__n35["raw"] := "\"length\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["left"] := __n33;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 0.;
__n36["raw"] := "0";
__n32["right"] := __n36;
__n31["test"] := __n32;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$ERROR";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "#2: var x = new Array(); x.pop(); x.length === 0. Actual: ";
__n44["raw"] := "'#2: var x = new Array(); x.pop(); x.length === 0. Actual: '";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "x";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "length";
__n47["raw"] := "\"length\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n43["right"] := __n45;
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n31["consequent"] := __n37;
__n31["alternate"] := null;
__n48 := {  };
__n48["type"] := "VariableDeclaration";
__n50 := {  };
__n50["type"] := "VariableDeclarator";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "x";
__n50["id"] := __n51;
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "Array";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 1.;
__n55["raw"] := "1";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 2.;
__n56["raw"] := "2";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 3.;
__n57["raw"] := "3";
__n54 := [ __n55, __n56, __n57 ];
__n52["arguments"] := __n54;
__n50["init"] := __n52;
__n49 := [ __n50 ];
__n48["declarations"] := __n49;
__n48["kind"] := "var";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "AssignmentExpression";
__n59["operator"] := "=";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "x";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "length";
__n62["raw"] := "\"length\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["left"] := __n60;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 0.;
__n63["raw"] := "0";
__n59["right"] := __n63;
__n58["expression"] := __n59;
__n64 := {  };
__n64["type"] := "VariableDeclaration";
__n66 := {  };
__n66["type"] := "VariableDeclarator";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "pop";
__n66["id"] := __n67;
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "x";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "pop";
__n71["raw"] := "\"pop\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n72 := [  ];
__n68["arguments"] := __n72;
__n66["init"] := __n68;
__n65 := [ __n66 ];
__n64["declarations"] := __n65;
__n64["kind"] := "var";
__n73 := {  };
__n73["type"] := "IfStatement";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "!==";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "pop";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "undefined";
__n74["right"] := __n76;
__n73["test"] := __n74;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "$ERROR";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "+";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "#2: var x = Array(1,2,3); x.length = 0; x.pop() === undefined. Actual: ";
__n84["raw"] := "'#2: var x = Array(1,2,3); x.length = 0; x.pop() === undefined. Actual: '";
__n83["left"] := __n84;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "pop";
__n83["right"] := __n85;
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n78 := [ __n79 ];
__n77["body"] := __n78;
__n73["consequent"] := __n77;
__n73["alternate"] := null;
__n86 := {  };
__n86["type"] := "IfStatement";
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "!==";
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "x";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "length";
__n90["raw"] := "\"length\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n87["left"] := __n88;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 0.;
__n91["raw"] := "0";
__n87["right"] := __n91;
__n86["test"] := __n87;
__n92 := {  };
__n92["type"] := "BlockStatement";
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "$ERROR";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "+";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "#4: var x = new Array(1,2,3); x.length = 0; x.pop(); x.length === 0. Actual: ";
__n99["raw"] := "'#4: var x = new Array(1,2,3); x.length = 0; x.pop(); x.length === 0. Actual: '";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "x";
__n100["object"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "length";
__n102["raw"] := "\"length\"";
__n100["property"] := __n102;
__n100["computed"] := true;
__n98["right"] := __n100;
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n94["expression"] := __n95;
__n93 := [ __n94 ];
__n92["body"] := __n93;
__n86["consequent"] := __n92;
__n86["alternate"] := null;
__n1 := [ __n2, __n9, __n18, __n31, __n48, __n58, __n64, __n73, __n86 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n103 := [ "x", "pop" ];
__n0["variableDeclarations"] := __n103;
__n104 := [  ];
__n0["functionDeclarations"] := __n104;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}