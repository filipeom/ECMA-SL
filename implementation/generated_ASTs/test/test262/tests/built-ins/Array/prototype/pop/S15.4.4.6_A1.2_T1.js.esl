function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Array";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 2.;
__n11["raw"] := "2";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 3.;
__n12["raw"] := "3";
__n8 := [ __n9, __n10, __n11, __n12 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "pop";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "x";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "pop";
__n20["raw"] := "\"pop\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n21 := [  ];
__n17["arguments"] := __n21;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n22 := {  };
__n22["type"] := "IfStatement";
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "!==";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "pop";
__n23["left"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 3.;
__n25["raw"] := "3";
__n23["right"] := __n25;
__n22["test"] := __n23;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "$ERROR";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "+";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "#1: x = new Array(0,1,2,3); x.pop() === 3. Actual: ";
__n33["raw"] := "'#1: x = new Array(0,1,2,3); x.pop() === 3. Actual: '";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "pop";
__n32["right"] := __n34;
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n22["consequent"] := __n26;
__n22["alternate"] := null;
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "x";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "length";
__n39["raw"] := "\"length\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 3.;
__n40["raw"] := "3";
__n36["right"] := __n40;
__n35["test"] := __n36;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "$ERROR";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#2: x = new Array(0,1,2,3); x.pop(); x.length == 3";
__n47["raw"] := "'#2: x = new Array(0,1,2,3); x.pop(); x.length == 3'";
__n46 := [ __n47 ];
__n44["arguments"] := __n46;
__n43["expression"] := __n44;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n35["consequent"] := __n41;
__n35["alternate"] := null;
__n48 := {  };
__n48["type"] := "IfStatement";
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "!==";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n50["computed"] := true;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "x";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 3.;
__n52["raw"] := "3";
__n50["property"] := __n52;
__n49["left"] := __n50;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "undefined";
__n49["right"] := __n53;
__n48["test"] := __n49;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "$ERROR";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "#3: x = new Array(0,1,2,3); x.pop(); x[3] == undefined";
__n60["raw"] := "'#3: x = new Array(0,1,2,3); x.pop(); x[3] == undefined'";
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n48["consequent"] := __n54;
__n48["alternate"] := null;
__n61 := {  };
__n61["type"] := "IfStatement";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "!==";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n63["computed"] := true;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "x";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 2.;
__n65["raw"] := "2";
__n63["property"] := __n65;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 2.;
__n66["raw"] := "2";
__n62["right"] := __n66;
__n61["test"] := __n62;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#4: x = new Array(0,1,2,3); x.pop(); x[2] == 2";
__n73["raw"] := "'#4: x = new Array(0,1,2,3); x.pop(); x[2] == 2'";
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n61["consequent"] := __n67;
__n61["alternate"] := null;
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "AssignmentExpression";
__n75["operator"] := "=";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "x";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "ArrayExpression";
__n78 := [  ];
__n77["elements"] := __n78;
__n75["right"] := __n77;
__n74["expression"] := __n75;
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "AssignmentExpression";
__n80["operator"] := "=";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n81["computed"] := true;
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "x";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 0.;
__n83["raw"] := "0";
__n81["property"] := __n83;
__n80["left"] := __n81;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := 0.;
__n84["raw"] := "0";
__n80["right"] := __n84;
__n79["expression"] := __n80;
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "AssignmentExpression";
__n86["operator"] := "=";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n87["computed"] := true;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "x";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 3.;
__n89["raw"] := "3";
__n87["property"] := __n89;
__n86["left"] := __n87;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 3.;
__n90["raw"] := "3";
__n86["right"] := __n90;
__n85["expression"] := __n86;
__n91 := {  };
__n91["type"] := "VariableDeclaration";
__n93 := {  };
__n93["type"] := "VariableDeclarator";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "pop";
__n93["id"] := __n94;
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "x";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "pop";
__n98["raw"] := "\"pop\"";
__n96["property"] := __n98;
__n96["computed"] := true;
__n95["callee"] := __n96;
__n99 := [  ];
__n95["arguments"] := __n99;
__n93["init"] := __n95;
__n92 := [ __n93 ];
__n91["declarations"] := __n92;
__n91["kind"] := "var";
__n100 := {  };
__n100["type"] := "IfStatement";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "!==";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "pop";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := 3.;
__n103["raw"] := "3";
__n101["right"] := __n103;
__n100["test"] := __n101;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "$ERROR";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "BinaryExpression";
__n110["operator"] := "+";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "#5: x = []; x[0] = 0; x[3] = 3; x.pop() === 3. Actual: ";
__n111["raw"] := "'#5: x = []; x[0] = 0; x[3] = 3; x.pop() === 3. Actual: '";
__n110["left"] := __n111;
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "pop";
__n110["right"] := __n112;
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n105 := [ __n106 ];
__n104["body"] := __n105;
__n100["consequent"] := __n104;
__n100["alternate"] := null;
__n113 := {  };
__n113["type"] := "IfStatement";
__n114 := {  };
__n114["type"] := "BinaryExpression";
__n114["operator"] := "!==";
__n115 := {  };
__n115["type"] := "MemberExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "x";
__n115["object"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "length";
__n117["raw"] := "\"length\"";
__n115["property"] := __n117;
__n115["computed"] := true;
__n114["left"] := __n115;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 3.;
__n118["raw"] := "3";
__n114["right"] := __n118;
__n113["test"] := __n114;
__n119 := {  };
__n119["type"] := "BlockStatement";
__n121 := {  };
__n121["type"] := "ExpressionStatement";
__n122 := {  };
__n122["type"] := "CallExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "$ERROR";
__n122["callee"] := __n123;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := "#6: x = []; x[0] = 0; x[3] = 3; x.pop(); x.length == 3";
__n125["raw"] := "'#6: x = []; x[0] = 0; x[3] = 3; x.pop(); x.length == 3'";
__n124 := [ __n125 ];
__n122["arguments"] := __n124;
__n121["expression"] := __n122;
__n120 := [ __n121 ];
__n119["body"] := __n120;
__n113["consequent"] := __n119;
__n113["alternate"] := null;
__n126 := {  };
__n126["type"] := "IfStatement";
__n127 := {  };
__n127["type"] := "BinaryExpression";
__n127["operator"] := "!==";
__n128 := {  };
__n128["type"] := "MemberExpression";
__n128["computed"] := true;
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "x";
__n128["object"] := __n129;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := 3.;
__n130["raw"] := "3";
__n128["property"] := __n130;
__n127["left"] := __n128;
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "undefined";
__n127["right"] := __n131;
__n126["test"] := __n127;
__n132 := {  };
__n132["type"] := "BlockStatement";
__n134 := {  };
__n134["type"] := "ExpressionStatement";
__n135 := {  };
__n135["type"] := "CallExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "$ERROR";
__n135["callee"] := __n136;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := "#7: x = []; x[0] = 0; x[3] = 3; x.pop(); x[3] == undefined";
__n138["raw"] := "'#7: x = []; x[0] = 0; x[3] = 3; x.pop(); x[3] == undefined'";
__n137 := [ __n138 ];
__n135["arguments"] := __n137;
__n134["expression"] := __n135;
__n133 := [ __n134 ];
__n132["body"] := __n133;
__n126["consequent"] := __n132;
__n126["alternate"] := null;
__n139 := {  };
__n139["type"] := "IfStatement";
__n140 := {  };
__n140["type"] := "BinaryExpression";
__n140["operator"] := "!==";
__n141 := {  };
__n141["type"] := "MemberExpression";
__n141["computed"] := true;
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "x";
__n141["object"] := __n142;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := 2.;
__n143["raw"] := "2";
__n141["property"] := __n143;
__n140["left"] := __n141;
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "undefined";
__n140["right"] := __n144;
__n139["test"] := __n140;
__n145 := {  };
__n145["type"] := "BlockStatement";
__n147 := {  };
__n147["type"] := "ExpressionStatement";
__n148 := {  };
__n148["type"] := "CallExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "$ERROR";
__n148["callee"] := __n149;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "#8: x = []; x[0] = 0; x[3] = 3; x.pop(); x[2] == undefined";
__n151["raw"] := "'#8: x = []; x[0] = 0; x[3] = 3; x.pop(); x[2] == undefined'";
__n150 := [ __n151 ];
__n148["arguments"] := __n150;
__n147["expression"] := __n148;
__n146 := [ __n147 ];
__n145["body"] := __n146;
__n139["consequent"] := __n145;
__n139["alternate"] := null;
__n152 := {  };
__n152["type"] := "ExpressionStatement";
__n153 := {  };
__n153["type"] := "AssignmentExpression";
__n153["operator"] := "=";
__n154 := {  };
__n154["type"] := "MemberExpression";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "x";
__n154["object"] := __n155;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := "length";
__n156["raw"] := "\"length\"";
__n154["property"] := __n156;
__n154["computed"] := true;
__n153["left"] := __n154;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := 1.;
__n157["raw"] := "1";
__n153["right"] := __n157;
__n152["expression"] := __n153;
__n158 := {  };
__n158["type"] := "VariableDeclaration";
__n160 := {  };
__n160["type"] := "VariableDeclarator";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "pop";
__n160["id"] := __n161;
__n162 := {  };
__n162["type"] := "CallExpression";
__n163 := {  };
__n163["type"] := "MemberExpression";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "x";
__n163["object"] := __n164;
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := "pop";
__n165["raw"] := "\"pop\"";
__n163["property"] := __n165;
__n163["computed"] := true;
__n162["callee"] := __n163;
__n166 := [  ];
__n162["arguments"] := __n166;
__n160["init"] := __n162;
__n159 := [ __n160 ];
__n158["declarations"] := __n159;
__n158["kind"] := "var";
__n167 := {  };
__n167["type"] := "IfStatement";
__n168 := {  };
__n168["type"] := "BinaryExpression";
__n168["operator"] := "!==";
__n169 := {  };
__n169["type"] := "Identifier";
__n169["name"] := "pop";
__n168["left"] := __n169;
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := 0.;
__n170["raw"] := "0";
__n168["right"] := __n170;
__n167["test"] := __n168;
__n171 := {  };
__n171["type"] := "BlockStatement";
__n173 := {  };
__n173["type"] := "ExpressionStatement";
__n174 := {  };
__n174["type"] := "CallExpression";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "$ERROR";
__n174["callee"] := __n175;
__n177 := {  };
__n177["type"] := "BinaryExpression";
__n177["operator"] := "+";
__n178 := {  };
__n178["type"] := "Literal";
__n178["value"] := "#9: x = []; x[0] = 0; x[3] = 3; x.pop(); x.length = 1; x.pop() === 0. Actual: ";
__n178["raw"] := "'#9: x = []; x[0] = 0; x[3] = 3; x.pop(); x.length = 1; x.pop() === 0. Actual: '";
__n177["left"] := __n178;
__n179 := {  };
__n179["type"] := "Identifier";
__n179["name"] := "pop";
__n177["right"] := __n179;
__n176 := [ __n177 ];
__n174["arguments"] := __n176;
__n173["expression"] := __n174;
__n172 := [ __n173 ];
__n171["body"] := __n172;
__n167["consequent"] := __n171;
__n167["alternate"] := null;
__n180 := {  };
__n180["type"] := "IfStatement";
__n181 := {  };
__n181["type"] := "BinaryExpression";
__n181["operator"] := "!==";
__n182 := {  };
__n182["type"] := "MemberExpression";
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "x";
__n182["object"] := __n183;
__n184 := {  };
__n184["type"] := "Literal";
__n184["value"] := "length";
__n184["raw"] := "\"length\"";
__n182["property"] := __n184;
__n182["computed"] := true;
__n181["left"] := __n182;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := 0.;
__n185["raw"] := "0";
__n181["right"] := __n185;
__n180["test"] := __n181;
__n186 := {  };
__n186["type"] := "BlockStatement";
__n188 := {  };
__n188["type"] := "ExpressionStatement";
__n189 := {  };
__n189["type"] := "CallExpression";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "$ERROR";
__n189["callee"] := __n190;
__n192 := {  };
__n192["type"] := "BinaryExpression";
__n192["operator"] := "+";
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := "#10: x = []; x[0] = 0; x[3] = 3; x.pop(); x.length = 1; x.pop(); x.length === 0. Actual: ";
__n193["raw"] := "'#10: x = []; x[0] = 0; x[3] = 3; x.pop(); x.length = 1; x.pop(); x.length === 0. Actual: '";
__n192["left"] := __n193;
__n194 := {  };
__n194["type"] := "MemberExpression";
__n195 := {  };
__n195["type"] := "Identifier";
__n195["name"] := "x";
__n194["object"] := __n195;
__n196 := {  };
__n196["type"] := "Literal";
__n196["value"] := "length";
__n196["raw"] := "\"length\"";
__n194["property"] := __n196;
__n194["computed"] := true;
__n192["right"] := __n194;
__n191 := [ __n192 ];
__n189["arguments"] := __n191;
__n188["expression"] := __n189;
__n187 := [ __n188 ];
__n186["body"] := __n187;
__n180["consequent"] := __n186;
__n180["alternate"] := null;
__n1 := [ __n2, __n13, __n22, __n35, __n48, __n61, __n74, __n79, __n85, __n91, __n100, __n113, __n126, __n139, __n152, __n158, __n167, __n180 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n197 := [ "x", "pop" ];
__n0["variableDeclarations"] := __n197;
__n198 := [  ];
__n0["functionDeclarations"] := __n198;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}