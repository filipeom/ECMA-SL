function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "foo";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "prototype";
__n6["raw"] := "\"prototype\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "ArrayExpression";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 2.;
__n10["raw"] := "2";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 3.;
__n11["raw"] := "3";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 4.;
__n12["raw"] := "4";
__n8 := [ __n9, __n10, __n11, __n12 ];
__n7["elements"] := __n8;
__n3["right"] := __n7;
__n2["expression"] := __n3;
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "foo";
__n13["expression"] := __n14;
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "f";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "NewExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "foo";
__n19["callee"] := __n20;
__n21 := [  ];
__n19["arguments"] := __n21;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "cb";
__n22["expression"] := __n23;
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "sameValue";
__n28["raw"] := "\"sameValue\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "f";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "reduce";
__n33["raw"] := "\"reduce\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "cb";
__n36 := {  };
__n36["type"] := "UnaryExpression";
__n36["operator"] := "-";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 1.;
__n37["raw"] := "1";
__n36["argument"] := __n37;
__n36["prefix"] := true;
__n34 := [ __n35, __n36 ];
__n30["arguments"] := __n34;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 9.;
__n38["raw"] := "9";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "f.reduce(cb,-1)";
__n39["raw"] := "'f.reduce(cb,-1)'";
__n29 := [ __n30, __n38, __n39 ];
__n25["arguments"] := __n29;
__n24["expression"] := __n25;
__n1 := [ __n2, __n13, __n15, __n22, __n24 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n40 := [ "f" ];
__n0["variableDeclarations"] := __n40;
__n42 := {  };
__n42["type"] := "FunctionDeclaration";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "foo";
__n42["id"] := __n43;
__n44 := [  ];
__n42["params"] := __n44;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n46 := [  ];
__n45["body"] := __n46;
__n47 := [  ];
__n45["variableDeclarations"] := __n47;
__n48 := [  ];
__n45["functionDeclarations"] := __n48;
__n45["codeType"] := "function";
__n45["strict"] := false;
__n42["body"] := __n45;
__n42["generator"] := false;
__n42["expression"] := false;
__n42["async"] := false;
__n49 := {  };
__n49["type"] := "FunctionDeclaration";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "cb";
__n49["id"] := __n50;
__n51 := [ "prevVal", "curVal", "idx", "obj" ];
__n49["params"] := __n51;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ReturnStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "+";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "prevVal";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "curVal";
__n55["right"] := __n57;
__n54["argument"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n58 := [  ];
__n52["variableDeclarations"] := __n58;
__n59 := [  ];
__n52["functionDeclarations"] := __n59;
__n52["codeType"] := "function";
__n52["strict"] := false;
__n49["body"] := __n52;
__n49["generator"] := false;
__n49["expression"] := false;
__n49["async"] := false;
__n41 := [ __n42, __n49 ];
__n0["functionDeclarations"] := __n41;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}