function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callCnt";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "srcArr";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ArrayExpression";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "1";
__n15["raw"] := "'1'";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "2";
__n16["raw"] := "'2'";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "3";
__n17["raw"] := "'3'";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "4";
__n18["raw"] := "'4'";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "5";
__n19["raw"] := "'5'";
__n14 := [ __n15, __n16, __n17, __n18, __n19 ];
__n13["elements"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "=";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n22["computed"] := true;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "srcArr";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "i";
__n24["raw"] := "\"i\"";
__n22["property"] := __n24;
__n21["left"] := __n22;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 10.;
__n25["raw"] := "10";
__n21["right"] := __n25;
__n20["expression"] := __n21;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "AssignmentExpression";
__n27["operator"] := "=";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n28["computed"] := true;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "srcArr";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := true;
__n30["raw"] := "true";
__n28["property"] := __n30;
__n27["left"] := __n28;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 11.;
__n31["raw"] := "11";
__n27["right"] := __n31;
__n26["expression"] := __n27;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "srcArr";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "reduce";
__n36["raw"] := "\"reduce\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "callbackfn";
__n37 := [ __n38 ];
__n33["arguments"] := __n37;
__n32["expression"] := __n33;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "assert";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "sameValue";
__n43["raw"] := "\"sameValue\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "callCnt";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 4.;
__n46["raw"] := "4";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "callCnt";
__n47["raw"] := "'callCnt'";
__n44 := [ __n45, __n46, __n47 ];
__n40["arguments"] := __n44;
__n39["expression"] := __n40;
__n1 := [ __n2, __n7, __n9, __n20, __n26, __n32, __n39 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n48 := [ "callCnt", "srcArr" ];
__n0["variableDeclarations"] := __n48;
__n50 := {  };
__n50["type"] := "FunctionDeclaration";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "callbackfn";
__n50["id"] := __n51;
__n52 := [ "prevVal", "curVal", "idx", "obj" ];
__n50["params"] := __n52;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "UpdateExpression";
__n56["operator"] := "++";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "callCnt";
__n56["argument"] := __n57;
__n56["prefix"] := false;
__n55["expression"] := __n56;
__n58 := {  };
__n58["type"] := "ReturnStatement";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "curVal";
__n58["argument"] := __n59;
__n54 := [ __n55, __n58 ];
__n53["body"] := __n54;
__n60 := [  ];
__n53["variableDeclarations"] := __n60;
__n61 := [  ];
__n53["functionDeclarations"] := __n61;
__n53["codeType"] := "function";
__n53["strict"] := false;
__n50["body"] := __n53;
__n50["generator"] := false;
__n50["expression"] := false;
__n50["async"] := false;
__n49 := [ __n50 ];
__n0["functionDeclarations"] := __n49;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}