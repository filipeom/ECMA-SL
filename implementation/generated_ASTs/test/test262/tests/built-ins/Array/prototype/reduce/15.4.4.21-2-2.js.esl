function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "assert";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "sameValue";
__n8["raw"] := "\"sameValue\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "ArrayExpression";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 12.;
__n14["raw"] := "12";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 11.;
__n15["raw"] := "11";
__n13 := [ __n14, __n15 ];
__n12["elements"] := __n13;
__n11["object"] := __n12;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "reduce";
__n16["raw"] := "\"reduce\"";
__n11["property"] := __n16;
__n11["computed"] := true;
__n10["callee"] := __n11;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "callbackfn";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n17 := [ __n18, __n19 ];
__n10["arguments"] := __n17;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := true;
__n20["raw"] := "true";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "[12, 11].reduce(callbackfn, 1)";
__n21["raw"] := "'[12, 11].reduce(callbackfn, 1)'";
__n9 := [ __n10, __n20, __n21 ];
__n5["arguments"] := __n9;
__n4["expression"] := __n5;
__n1 := [ __n2, __n4 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n22 := [  ];
__n0["variableDeclarations"] := __n22;
__n24 := {  };
__n24["type"] := "FunctionDeclaration";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "callbackfn";
__n24["id"] := __n25;
__n26 := [ "prevVal", "curVal", "idx", "obj" ];
__n24["params"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ReturnStatement";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "===";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "obj";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "length";
__n33["raw"] := "\"length\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["left"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 2.;
__n34["raw"] := "2";
__n30["right"] := __n34;
__n29["argument"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n35 := [  ];
__n27["variableDeclarations"] := __n35;
__n36 := [  ];
__n27["functionDeclarations"] := __n36;
__n27["codeType"] := "function";
__n27["strict"] := false;
__n24["body"] := __n27;
__n24["generator"] := false;
__n24["expression"] := false;
__n24["async"] := false;
__n23 := [ __n24 ];
__n0["functionDeclarations"] := __n23;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}