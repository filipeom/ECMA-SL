function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "obj";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ObjectExpression";
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "length";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 2.;
__n17["raw"] := "2";
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n14 := [ __n15 ];
__n13["properties"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "preIterVisible";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := false;
__n22["raw"] := "false";
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Object";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "defineProperty";
__n27["raw"] := "\"defineProperty\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "obj";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "0";
__n30["raw"] := "\"0\"";
__n31 := {  };
__n31["type"] := "ObjectExpression";
__n33 := {  };
__n33["type"] := "Property";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "get";
__n33["key"] := __n34;
__n35 := {  };
__n35["type"] := "FunctionExpression";
__n35["id"] := null;
__n36 := [  ];
__n35["params"] := __n36;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "AssignmentExpression";
__n40["operator"] := "=";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "preIterVisible";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := true;
__n42["raw"] := "true";
__n40["right"] := __n42;
__n39["expression"] := __n40;
__n43 := {  };
__n43["type"] := "ReturnStatement";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 0.;
__n44["raw"] := "0";
__n43["argument"] := __n44;
__n38 := [ __n39, __n43 ];
__n37["body"] := __n38;
__n45 := [  ];
__n37["variableDeclarations"] := __n45;
__n46 := [  ];
__n37["functionDeclarations"] := __n46;
__n37["codeType"] := "function";
__n37["strict"] := false;
__n35["body"] := __n37;
__n35["generator"] := false;
__n35["expression"] := false;
__n35["async"] := false;
__n33["value"] := __n35;
__n33["computed"] := false;
__n33["kind"] := "init";
__n33["shorthand"] := false;
__n47 := {  };
__n47["type"] := "Property";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "configurable";
__n47["key"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := true;
__n49["raw"] := "true";
__n47["value"] := __n49;
__n47["computed"] := false;
__n47["kind"] := "init";
__n47["shorthand"] := false;
__n32 := [ __n33, __n47 ];
__n31["properties"] := __n32;
__n28 := [ __n29, __n30, __n31 ];
__n24["arguments"] := __n28;
__n23["expression"] := __n24;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "Object";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "defineProperty";
__n54["raw"] := "\"defineProperty\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "obj";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "1";
__n57["raw"] := "\"1\"";
__n58 := {  };
__n58["type"] := "ObjectExpression";
__n60 := {  };
__n60["type"] := "Property";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "get";
__n60["key"] := __n61;
__n62 := {  };
__n62["type"] := "FunctionExpression";
__n62["id"] := null;
__n63 := [  ];
__n62["params"] := __n63;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "IfStatement";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "preIterVisible";
__n66["test"] := __n67;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ReturnStatement";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 1.;
__n71["raw"] := "1";
__n70["argument"] := __n71;
__n69 := [ __n70 ];
__n68["body"] := __n69;
__n66["consequent"] := __n68;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ReturnStatement";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 100.;
__n75["raw"] := "100";
__n74["argument"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n66["alternate"] := __n72;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n76 := [  ];
__n64["variableDeclarations"] := __n76;
__n77 := [  ];
__n64["functionDeclarations"] := __n77;
__n64["codeType"] := "function";
__n64["strict"] := false;
__n62["body"] := __n64;
__n62["generator"] := false;
__n62["expression"] := false;
__n62["async"] := false;
__n60["value"] := __n62;
__n60["computed"] := false;
__n60["kind"] := "init";
__n60["shorthand"] := false;
__n78 := {  };
__n78["type"] := "Property";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "configurable";
__n78["key"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := true;
__n80["raw"] := "true";
__n78["value"] := __n80;
__n78["computed"] := false;
__n78["kind"] := "init";
__n78["shorthand"] := false;
__n59 := [ __n60, __n78 ];
__n58["properties"] := __n59;
__n55 := [ __n56, __n57, __n58 ];
__n51["arguments"] := __n55;
__n50["expression"] := __n51;
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "Array";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "prototype";
__n87["raw"] := "\"prototype\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n84["object"] := __n85;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "reduce";
__n88["raw"] := "\"reduce\"";
__n84["property"] := __n88;
__n84["computed"] := true;
__n83["object"] := __n84;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "call";
__n89["raw"] := "\"call\"";
__n83["property"] := __n89;
__n83["computed"] := true;
__n82["callee"] := __n83;
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "obj";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "callbackfn";
__n90 := [ __n91, __n92 ];
__n82["arguments"] := __n90;
__n81["expression"] := __n82;
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "assert";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "testResult";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "testResult !== true";
__n98["raw"] := "'testResult !== true'";
__n96 := [ __n97, __n98 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n1 := [ __n2, __n7, __n9, __n18, __n23, __n50, __n81, __n93 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n99 := [ "testResult", "obj", "preIterVisible" ];
__n0["variableDeclarations"] := __n99;
__n101 := {  };
__n101["type"] := "FunctionDeclaration";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "callbackfn";
__n101["id"] := __n102;
__n103 := [ "prevVal", "curVal", "idx", "obj" ];
__n101["params"] := __n103;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "IfStatement";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "===";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "idx";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := 1.;
__n109["raw"] := "1";
__n107["right"] := __n109;
__n106["test"] := __n107;
__n110 := {  };
__n110["type"] := "BlockStatement";
__n112 := {  };
__n112["type"] := "ExpressionStatement";
__n113 := {  };
__n113["type"] := "AssignmentExpression";
__n113["operator"] := "=";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "testResult";
__n113["left"] := __n114;
__n115 := {  };
__n115["type"] := "BinaryExpression";
__n115["operator"] := "===";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "curVal";
__n115["left"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 1.;
__n117["raw"] := "1";
__n115["right"] := __n117;
__n113["right"] := __n115;
__n112["expression"] := __n113;
__n111 := [ __n112 ];
__n110["body"] := __n111;
__n106["consequent"] := __n110;
__n106["alternate"] := null;
__n105 := [ __n106 ];
__n104["body"] := __n105;
__n118 := [  ];
__n104["variableDeclarations"] := __n118;
__n119 := [  ];
__n104["functionDeclarations"] := __n119;
__n104["codeType"] := "function";
__n104["strict"] := false;
__n101["body"] := __n104;
__n101["generator"] := false;
__n101["expression"] := false;
__n101["async"] := false;
__n100 := [ __n101 ];
__n0["functionDeclarations"] := __n100;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}