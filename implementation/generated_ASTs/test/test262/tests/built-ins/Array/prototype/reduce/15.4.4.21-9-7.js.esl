function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "o";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "NewExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Object";
__n8["callee"] := __n9;
__n10 := [  ];
__n8["arguments"] := __n10;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "AssignmentExpression";
__n12["operator"] := "=";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "o";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "arr";
__n15["raw"] := "\"arr\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["left"] := __n13;
__n16 := {  };
__n16["type"] := "ArrayExpression";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "1";
__n18["raw"] := "'1'";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 2.;
__n19["raw"] := "2";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 3.;
__n20["raw"] := "3";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 4.;
__n21["raw"] := "4";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 5.;
__n22["raw"] := "5";
__n17 := [ __n18, __n19, __n20, __n21, __n22 ];
__n16["elements"] := __n17;
__n12["right"] := __n16;
__n11["expression"] := __n12;
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "assert";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "sameValue";
__n27["raw"] := "\"sameValue\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "o";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "arr";
__n33["raw"] := "\"arr\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["object"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "reduce";
__n34["raw"] := "\"reduce\"";
__n30["property"] := __n34;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "callbackfn";
__n35 := [ __n36 ];
__n29["arguments"] := __n35;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "12345";
__n37["raw"] := "\"12345\"";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "o.arr.reduce(callbackfn)";
__n38["raw"] := "'o.arr.reduce(callbackfn)'";
__n28 := [ __n29, __n37, __n38 ];
__n24["arguments"] := __n28;
__n23["expression"] := __n24;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "assert";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "sameValue";
__n43["raw"] := "\"sameValue\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "o";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "hasOwnProperty";
__n48["raw"] := "\"hasOwnProperty\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "arr";
__n50["raw"] := "\"arr\"";
__n49 := [ __n50 ];
__n45["arguments"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := false;
__n51["raw"] := "false";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "o.hasOwnProperty(\"arr\")";
__n52["raw"] := "'o.hasOwnProperty(\"arr\")'";
__n44 := [ __n45, __n51, __n52 ];
__n40["arguments"] := __n44;
__n39["expression"] := __n40;
__n1 := [ __n2, __n4, __n11, __n23, __n39 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n53 := [ "o" ];
__n0["variableDeclarations"] := __n53;
__n55 := {  };
__n55["type"] := "FunctionDeclaration";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "callbackfn";
__n55["id"] := __n56;
__n57 := [ "prevVal", "curVal", "idx", "obj" ];
__n55["params"] := __n57;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "UnaryExpression";
__n61["operator"] := "delete";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "o";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "arr";
__n64["raw"] := "\"arr\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["argument"] := __n62;
__n61["prefix"] := true;
__n60["expression"] := __n61;
__n65 := {  };
__n65["type"] := "ReturnStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "+";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "prevVal";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "curVal";
__n66["right"] := __n68;
__n65["argument"] := __n66;
__n59 := [ __n60, __n65 ];
__n58["body"] := __n59;
__n69 := [  ];
__n58["variableDeclarations"] := __n69;
__n70 := [  ];
__n58["functionDeclarations"] := __n70;
__n58["codeType"] := "function";
__n58["strict"] := false;
__n55["body"] := __n58;
__n55["generator"] := false;
__n55["expression"] := false;
__n55["async"] := false;
__n54 := [ __n55 ];
__n0["functionDeclarations"] := __n54;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}