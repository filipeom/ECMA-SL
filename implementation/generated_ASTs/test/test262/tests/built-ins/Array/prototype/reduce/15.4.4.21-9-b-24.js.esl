function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "testResult";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := true;
__n11["raw"] := "true";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "callbackfn";
__n12["expression"] := __n13;
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "arr";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "ArrayExpression";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 0.;
__n20["raw"] := "0";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 3.;
__n21["raw"] := "3";
__n19 := [ __n20, null, null, __n21 ];
__n18["elements"] := __n19;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Object";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "defineProperty";
__n26["raw"] := "\"defineProperty\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "arr";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "0";
__n29["raw"] := "\"0\"";
__n30 := {  };
__n30["type"] := "ObjectExpression";
__n32 := {  };
__n32["type"] := "Property";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "get";
__n32["key"] := __n33;
__n34 := {  };
__n34["type"] := "FunctionExpression";
__n34["id"] := null;
__n35 := [  ];
__n34["params"] := __n35;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "UnaryExpression";
__n39["operator"] := "delete";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n40["computed"] := true;
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Array";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "prototype";
__n43["raw"] := "\"prototype\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["object"] := __n41;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 1.;
__n44["raw"] := "1";
__n40["property"] := __n44;
__n39["argument"] := __n40;
__n39["prefix"] := true;
__n38["expression"] := __n39;
__n45 := {  };
__n45["type"] := "ReturnStatement";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 0.;
__n46["raw"] := "0";
__n45["argument"] := __n46;
__n37 := [ __n38, __n45 ];
__n36["body"] := __n37;
__n47 := [  ];
__n36["variableDeclarations"] := __n47;
__n48 := [  ];
__n36["functionDeclarations"] := __n48;
__n36["codeType"] := "function";
__n36["strict"] := false;
__n34["body"] := __n36;
__n34["generator"] := false;
__n34["expression"] := false;
__n34["async"] := false;
__n32["value"] := __n34;
__n32["computed"] := false;
__n32["kind"] := "init";
__n32["shorthand"] := false;
__n49 := {  };
__n49["type"] := "Property";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "configurable";
__n49["key"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := true;
__n51["raw"] := "true";
__n49["value"] := __n51;
__n49["computed"] := false;
__n49["kind"] := "init";
__n49["shorthand"] := false;
__n31 := [ __n32, __n49 ];
__n30["properties"] := __n31;
__n27 := [ __n28, __n29, __n30 ];
__n23["arguments"] := __n27;
__n22["expression"] := __n23;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "AssignmentExpression";
__n53["operator"] := "=";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n54["computed"] := true;
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Array";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "prototype";
__n57["raw"] := "\"prototype\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["object"] := __n55;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 1.;
__n58["raw"] := "1";
__n54["property"] := __n58;
__n53["left"] := __n54;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 1.;
__n59["raw"] := "1";
__n53["right"] := __n59;
__n52["expression"] := __n53;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "arr";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "reduce";
__n64["raw"] := "\"reduce\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "callbackfn";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "initialValue";
__n67["raw"] := "\"initialValue\"";
__n65 := [ __n66, __n67 ];
__n61["arguments"] := __n65;
__n60["expression"] := __n61;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "assert";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "testResult";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "testResult !== true";
__n73["raw"] := "'testResult !== true'";
__n71 := [ __n72, __n73 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "assert";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "accessed";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "accessed !== true";
__n79["raw"] := "'accessed !== true'";
__n77 := [ __n78, __n79 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n1 := [ __n2, __n7, __n12, __n14, __n22, __n52, __n60, __n68, __n74 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n80 := [ "accessed", "testResult", "arr" ];
__n0["variableDeclarations"] := __n80;
__n82 := {  };
__n82["type"] := "FunctionDeclaration";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "callbackfn";
__n82["id"] := __n83;
__n84 := [ "accum", "val", "idx", "obj" ];
__n82["params"] := __n84;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "AssignmentExpression";
__n88["operator"] := "=";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "accessed";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := true;
__n90["raw"] := "true";
__n88["right"] := __n90;
__n87["expression"] := __n88;
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "===";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "idx";
__n92["left"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := 1.;
__n94["raw"] := "1";
__n92["right"] := __n94;
__n91["test"] := __n92;
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "AssignmentExpression";
__n98["operator"] := "=";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "testResult";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := false;
__n100["raw"] := "false";
__n98["right"] := __n100;
__n97["expression"] := __n98;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n91["consequent"] := __n95;
__n91["alternate"] := null;
__n86 := [ __n87, __n91 ];
__n85["body"] := __n86;
__n101 := [  ];
__n85["variableDeclarations"] := __n101;
__n102 := [  ];
__n85["functionDeclarations"] := __n102;
__n85["codeType"] := "function";
__n85["strict"] := false;
__n82["body"] := __n85;
__n82["generator"] := false;
__n82["expression"] := false;
__n82["async"] := false;
__n81 := [ __n82 ];
__n0["functionDeclarations"] := __n81;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}