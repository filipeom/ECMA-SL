function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arr";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ArrayExpression";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 0.;
__n15["raw"] := "0";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 2.;
__n17["raw"] := "2";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 3.;
__n18["raw"] := "3";
__n14 := [ __n15, __n16, __n17, __n18 ];
__n13["elements"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Object";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "defineProperty";
__n23["raw"] := "\"defineProperty\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Array";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "prototype";
__n27["raw"] := "\"prototype\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "2";
__n28["raw"] := "\"2\"";
__n29 := {  };
__n29["type"] := "ObjectExpression";
__n31 := {  };
__n31["type"] := "Property";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "get";
__n31["key"] := __n32;
__n33 := {  };
__n33["type"] := "FunctionExpression";
__n33["id"] := null;
__n34 := [  ];
__n33["params"] := __n34;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ReturnStatement";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "prototype";
__n38["raw"] := "\"prototype\"";
__n37["argument"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n39 := [  ];
__n35["variableDeclarations"] := __n39;
__n40 := [  ];
__n35["functionDeclarations"] := __n40;
__n35["codeType"] := "function";
__n35["strict"] := false;
__n33["body"] := __n35;
__n33["generator"] := false;
__n33["expression"] := false;
__n33["async"] := false;
__n31["value"] := __n33;
__n31["computed"] := false;
__n31["kind"] := "init";
__n31["shorthand"] := false;
__n41 := {  };
__n41["type"] := "Property";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "configurable";
__n41["key"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := true;
__n43["raw"] := "true";
__n41["value"] := __n43;
__n41["computed"] := false;
__n41["kind"] := "init";
__n41["shorthand"] := false;
__n30 := [ __n31, __n41 ];
__n29["properties"] := __n30;
__n24 := [ __n25, __n28, __n29 ];
__n20["arguments"] := __n24;
__n19["expression"] := __n20;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "Object";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "defineProperty";
__n48["raw"] := "\"defineProperty\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "arr";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "0";
__n51["raw"] := "\"0\"";
__n52 := {  };
__n52["type"] := "ObjectExpression";
__n54 := {  };
__n54["type"] := "Property";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "get";
__n54["key"] := __n55;
__n56 := {  };
__n56["type"] := "FunctionExpression";
__n56["id"] := null;
__n57 := [  ];
__n56["params"] := __n57;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "AssignmentExpression";
__n61["operator"] := "=";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "arr";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "length";
__n64["raw"] := "\"length\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["left"] := __n62;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 2.;
__n65["raw"] := "2";
__n61["right"] := __n65;
__n60["expression"] := __n61;
__n66 := {  };
__n66["type"] := "ReturnStatement";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 1.;
__n67["raw"] := "1";
__n66["argument"] := __n67;
__n59 := [ __n60, __n66 ];
__n58["body"] := __n59;
__n68 := [  ];
__n58["variableDeclarations"] := __n68;
__n69 := [  ];
__n58["functionDeclarations"] := __n69;
__n58["codeType"] := "function";
__n58["strict"] := false;
__n56["body"] := __n58;
__n56["generator"] := false;
__n56["expression"] := false;
__n56["async"] := false;
__n54["value"] := __n56;
__n54["computed"] := false;
__n54["kind"] := "init";
__n54["shorthand"] := false;
__n70 := {  };
__n70["type"] := "Property";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "configurable";
__n70["key"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := true;
__n72["raw"] := "true";
__n70["value"] := __n72;
__n70["computed"] := false;
__n70["kind"] := "init";
__n70["shorthand"] := false;
__n53 := [ __n54, __n70 ];
__n52["properties"] := __n53;
__n49 := [ __n50, __n51, __n52 ];
__n45["arguments"] := __n49;
__n44["expression"] := __n45;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "arr";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "reduce";
__n77["raw"] := "\"reduce\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "callbackfn";
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "initialValue";
__n80["raw"] := "\"initialValue\"";
__n78 := [ __n79, __n80 ];
__n74["arguments"] := __n78;
__n73["expression"] := __n74;
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "assert";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "testResult";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "testResult !== true";
__n86["raw"] := "'testResult !== true'";
__n84 := [ __n85, __n86 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n1 := [ __n2, __n7, __n9, __n19, __n44, __n73, __n81 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n87 := [ "testResult", "arr" ];
__n0["variableDeclarations"] := __n87;
__n89 := {  };
__n89["type"] := "FunctionDeclaration";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "callbackfn";
__n89["id"] := __n90;
__n91 := [ "accum", "val", "idx", "obj" ];
__n89["params"] := __n91;
__n92 := {  };
__n92["type"] := "BlockStatement";
__n94 := {  };
__n94["type"] := "IfStatement";
__n95 := {  };
__n95["type"] := "LogicalExpression";
__n95["operator"] := "&&";
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "===";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "idx";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 2.;
__n98["raw"] := "2";
__n96["right"] := __n98;
__n95["left"] := __n96;
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "===";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "val";
__n99["left"] := __n100;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "prototype";
__n101["raw"] := "\"prototype\"";
__n99["right"] := __n101;
__n95["right"] := __n99;
__n94["test"] := __n95;
__n102 := {  };
__n102["type"] := "BlockStatement";
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "AssignmentExpression";
__n105["operator"] := "=";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "testResult";
__n105["left"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := true;
__n107["raw"] := "true";
__n105["right"] := __n107;
__n104["expression"] := __n105;
__n103 := [ __n104 ];
__n102["body"] := __n103;
__n94["consequent"] := __n102;
__n94["alternate"] := null;
__n93 := [ __n94 ];
__n92["body"] := __n93;
__n108 := [  ];
__n92["variableDeclarations"] := __n108;
__n109 := [  ];
__n92["functionDeclarations"] := __n109;
__n92["codeType"] := "function";
__n92["strict"] := false;
__n89["body"] := __n92;
__n89["generator"] := false;
__n89["expression"] := false;
__n89["async"] := false;
__n88 := [ __n89 ];
__n0["functionDeclarations"] := __n88;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}