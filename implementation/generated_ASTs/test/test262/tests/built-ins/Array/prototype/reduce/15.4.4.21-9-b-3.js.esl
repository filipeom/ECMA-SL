function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "testResult";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := true;
__n11["raw"] := "true";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "callbackfn";
__n12["expression"] := __n13;
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "obj";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 2.;
__n21["raw"] := "2";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "2";
__n22["raw"] := "\"2\"";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 3.;
__n24["raw"] := "3";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 10.;
__n25["raw"] := "10";
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n19 := [ __n20, __n23 ];
__n18["properties"] := __n19;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Object";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "defineProperty";
__n30["raw"] := "\"defineProperty\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "obj";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "length";
__n33["raw"] := "\"length\"";
__n34 := {  };
__n34["type"] := "ObjectExpression";
__n36 := {  };
__n36["type"] := "Property";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "get";
__n36["key"] := __n37;
__n38 := {  };
__n38["type"] := "FunctionExpression";
__n38["id"] := null;
__n39 := [  ];
__n38["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "UnaryExpression";
__n43["operator"] := "delete";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n44["computed"] := true;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "obj";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 2.;
__n46["raw"] := "2";
__n44["property"] := __n46;
__n43["argument"] := __n44;
__n43["prefix"] := true;
__n42["expression"] := __n43;
__n47 := {  };
__n47["type"] := "ReturnStatement";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 5.;
__n48["raw"] := "5";
__n47["argument"] := __n48;
__n41 := [ __n42, __n47 ];
__n40["body"] := __n41;
__n49 := [  ];
__n40["variableDeclarations"] := __n49;
__n50 := [  ];
__n40["functionDeclarations"] := __n50;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n38["body"] := __n40;
__n38["generator"] := false;
__n38["expression"] := false;
__n38["async"] := false;
__n36["value"] := __n38;
__n36["computed"] := false;
__n36["kind"] := "init";
__n36["shorthand"] := false;
__n51 := {  };
__n51["type"] := "Property";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "configurable";
__n51["key"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := true;
__n53["raw"] := "true";
__n51["value"] := __n53;
__n51["computed"] := false;
__n51["kind"] := "init";
__n51["shorthand"] := false;
__n35 := [ __n36, __n51 ];
__n34["properties"] := __n35;
__n31 := [ __n32, __n33, __n34 ];
__n27["arguments"] := __n31;
__n26["expression"] := __n27;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Array";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "prototype";
__n60["raw"] := "\"prototype\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["object"] := __n58;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "reduce";
__n61["raw"] := "\"reduce\"";
__n57["property"] := __n61;
__n57["computed"] := true;
__n56["object"] := __n57;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "call";
__n62["raw"] := "\"call\"";
__n56["property"] := __n62;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "obj";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "callbackfn";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "initialValue";
__n66["raw"] := "\"initialValue\"";
__n63 := [ __n64, __n65, __n66 ];
__n55["arguments"] := __n63;
__n54["expression"] := __n55;
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "assert";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "accessed";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "accessed !== true";
__n72["raw"] := "'accessed !== true'";
__n70 := [ __n71, __n72 ];
__n68["arguments"] := __n70;
__n67["expression"] := __n68;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "assert";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "testResult";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "testResult !== true";
__n78["raw"] := "'testResult !== true'";
__n76 := [ __n77, __n78 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n1 := [ __n2, __n7, __n12, __n14, __n26, __n54, __n67, __n73 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n79 := [ "accessed", "testResult", "obj" ];
__n0["variableDeclarations"] := __n79;
__n81 := {  };
__n81["type"] := "FunctionDeclaration";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "callbackfn";
__n81["id"] := __n82;
__n83 := [ "accum", "val", "idx", "obj" ];
__n81["params"] := __n83;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "AssignmentExpression";
__n87["operator"] := "=";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "accessed";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := true;
__n89["raw"] := "true";
__n87["right"] := __n89;
__n86["expression"] := __n87;
__n90 := {  };
__n90["type"] := "IfStatement";
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "===";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "idx";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 2.;
__n93["raw"] := "2";
__n91["right"] := __n93;
__n90["test"] := __n91;
__n94 := {  };
__n94["type"] := "BlockStatement";
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "AssignmentExpression";
__n97["operator"] := "=";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "testResult";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := false;
__n99["raw"] := "false";
__n97["right"] := __n99;
__n96["expression"] := __n97;
__n95 := [ __n96 ];
__n94["body"] := __n95;
__n90["consequent"] := __n94;
__n90["alternate"] := null;
__n85 := [ __n86, __n90 ];
__n84["body"] := __n85;
__n100 := [  ];
__n84["variableDeclarations"] := __n100;
__n101 := [  ];
__n84["functionDeclarations"] := __n101;
__n84["codeType"] := "function";
__n84["strict"] := false;
__n81["body"] := __n84;
__n81["generator"] := false;
__n81["expression"] := false;
__n81["async"] := false;
__n80 := [ __n81 ];
__n0["functionDeclarations"] := __n80;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}