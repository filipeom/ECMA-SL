function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "obj";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ObjectExpression";
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "length";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 5.;
__n17["raw"] := "5";
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n14 := [ __n15 ];
__n13["properties"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "Object";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "defineProperty";
__n22["raw"] := "\"defineProperty\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "obj";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "1";
__n25["raw"] := "\"1\"";
__n26 := {  };
__n26["type"] := "ObjectExpression";
__n28 := {  };
__n28["type"] := "Property";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "get";
__n28["key"] := __n29;
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [  ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Object";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "defineProperty";
__n38["raw"] := "\"defineProperty\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "obj";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "3";
__n41["raw"] := "\"3\"";
__n42 := {  };
__n42["type"] := "ObjectExpression";
__n44 := {  };
__n44["type"] := "Property";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "get";
__n44["key"] := __n45;
__n46 := {  };
__n46["type"] := "FunctionExpression";
__n46["id"] := null;
__n47 := [  ];
__n46["params"] := __n47;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ReturnStatement";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 3.;
__n51["raw"] := "3";
__n50["argument"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n52 := [  ];
__n48["variableDeclarations"] := __n52;
__n53 := [  ];
__n48["functionDeclarations"] := __n53;
__n48["codeType"] := "function";
__n48["strict"] := false;
__n46["body"] := __n48;
__n46["generator"] := false;
__n46["expression"] := false;
__n46["async"] := false;
__n44["value"] := __n46;
__n44["computed"] := false;
__n44["kind"] := "init";
__n44["shorthand"] := false;
__n54 := {  };
__n54["type"] := "Property";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "configurable";
__n54["key"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := true;
__n56["raw"] := "true";
__n54["value"] := __n56;
__n54["computed"] := false;
__n54["kind"] := "init";
__n54["shorthand"] := false;
__n43 := [ __n44, __n54 ];
__n42["properties"] := __n43;
__n39 := [ __n40, __n41, __n42 ];
__n35["arguments"] := __n39;
__n34["expression"] := __n35;
__n57 := {  };
__n57["type"] := "ReturnStatement";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 1.;
__n58["raw"] := "1";
__n57["argument"] := __n58;
__n33 := [ __n34, __n57 ];
__n32["body"] := __n33;
__n59 := [  ];
__n32["variableDeclarations"] := __n59;
__n60 := [  ];
__n32["functionDeclarations"] := __n60;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["expression"] := false;
__n30["async"] := false;
__n28["value"] := __n30;
__n28["computed"] := false;
__n28["kind"] := "init";
__n28["shorthand"] := false;
__n61 := {  };
__n61["type"] := "Property";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "configurable";
__n61["key"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := true;
__n63["raw"] := "true";
__n61["value"] := __n63;
__n61["computed"] := false;
__n61["kind"] := "init";
__n61["shorthand"] := false;
__n27 := [ __n28, __n61 ];
__n26["properties"] := __n27;
__n23 := [ __n24, __n25, __n26 ];
__n19["arguments"] := __n23;
__n18["expression"] := __n19;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "Array";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "prototype";
__n70["raw"] := "\"prototype\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["object"] := __n68;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "reduce";
__n71["raw"] := "\"reduce\"";
__n67["property"] := __n71;
__n67["computed"] := true;
__n66["object"] := __n67;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "call";
__n72["raw"] := "\"call\"";
__n66["property"] := __n72;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "obj";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "callbackfn";
__n73 := [ __n74, __n75 ];
__n65["arguments"] := __n73;
__n64["expression"] := __n65;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "assert";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "testResult";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "testResult !== true";
__n81["raw"] := "'testResult !== true'";
__n79 := [ __n80, __n81 ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n1 := [ __n2, __n7, __n9, __n18, __n64, __n76 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n82 := [ "testResult", "obj" ];
__n0["variableDeclarations"] := __n82;
__n84 := {  };
__n84["type"] := "FunctionDeclaration";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "callbackfn";
__n84["id"] := __n85;
__n86 := [ "accum", "val", "idx", "obj" ];
__n84["params"] := __n86;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "LogicalExpression";
__n90["operator"] := "&&";
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "===";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "idx";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 3.;
__n93["raw"] := "3";
__n91["right"] := __n93;
__n90["left"] := __n91;
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "===";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "val";
__n94["left"] := __n95;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := 3.;
__n96["raw"] := "3";
__n94["right"] := __n96;
__n90["right"] := __n94;
__n89["test"] := __n90;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "AssignmentExpression";
__n100["operator"] := "=";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "testResult";
__n100["left"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := true;
__n102["raw"] := "true";
__n100["right"] := __n102;
__n99["expression"] := __n100;
__n98 := [ __n99 ];
__n97["body"] := __n98;
__n89["consequent"] := __n97;
__n89["alternate"] := null;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n103 := [  ];
__n87["variableDeclarations"] := __n103;
__n104 := [  ];
__n87["functionDeclarations"] := __n104;
__n87["codeType"] := "function";
__n87["strict"] := false;
__n84["body"] := __n87;
__n84["generator"] := false;
__n84["expression"] := false;
__n84["async"] := false;
__n83 := [ __n84 ];
__n0["functionDeclarations"] := __n83;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}