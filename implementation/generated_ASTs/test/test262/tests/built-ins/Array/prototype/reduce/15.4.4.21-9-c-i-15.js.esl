function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "initialValue";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 0.;
__n11["raw"] := "0";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "callbackfn";
__n12["expression"] := __n13;
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "proto";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 0.;
__n21["raw"] := "0";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 0.;
__n22["raw"] := "0";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 2.;
__n24["raw"] := "2";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 2.;
__n25["raw"] := "2";
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n19 := [ __n20, __n23 ];
__n18["properties"] := __n19;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Object";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "defineProperty";
__n30["raw"] := "\"defineProperty\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "proto";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "1";
__n33["raw"] := "\"1\"";
__n34 := {  };
__n34["type"] := "ObjectExpression";
__n36 := {  };
__n36["type"] := "Property";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "get";
__n36["key"] := __n37;
__n38 := {  };
__n38["type"] := "FunctionExpression";
__n38["id"] := null;
__n39 := [  ];
__n38["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ReturnStatement";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 1.;
__n43["raw"] := "1";
__n42["argument"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n44 := [  ];
__n40["variableDeclarations"] := __n44;
__n45 := [  ];
__n40["functionDeclarations"] := __n45;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n38["body"] := __n40;
__n38["generator"] := false;
__n38["expression"] := false;
__n38["async"] := false;
__n36["value"] := __n38;
__n36["computed"] := false;
__n36["kind"] := "init";
__n36["shorthand"] := false;
__n46 := {  };
__n46["type"] := "Property";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "configurable";
__n46["key"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := true;
__n48["raw"] := "true";
__n46["value"] := __n48;
__n46["computed"] := false;
__n46["kind"] := "init";
__n46["shorthand"] := false;
__n35 := [ __n36, __n46 ];
__n34["properties"] := __n35;
__n31 := [ __n32, __n33, __n34 ];
__n27["arguments"] := __n31;
__n26["expression"] := __n27;
__n49 := {  };
__n49["type"] := "VariableDeclaration";
__n51 := {  };
__n51["type"] := "VariableDeclarator";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Con";
__n51["id"] := __n52;
__n53 := {  };
__n53["type"] := "FunctionExpression";
__n53["id"] := null;
__n54 := [  ];
__n53["params"] := __n54;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n56 := [  ];
__n55["body"] := __n56;
__n57 := [  ];
__n55["variableDeclarations"] := __n57;
__n58 := [  ];
__n55["functionDeclarations"] := __n58;
__n55["codeType"] := "function";
__n55["strict"] := false;
__n53["body"] := __n55;
__n53["generator"] := false;
__n53["expression"] := false;
__n53["async"] := false;
__n51["init"] := __n53;
__n50 := [ __n51 ];
__n49["declarations"] := __n50;
__n49["kind"] := "var";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "AssignmentExpression";
__n60["operator"] := "=";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "Con";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "prototype";
__n63["raw"] := "\"prototype\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["left"] := __n61;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "proto";
__n60["right"] := __n64;
__n59["expression"] := __n60;
__n65 := {  };
__n65["type"] := "VariableDeclaration";
__n67 := {  };
__n67["type"] := "VariableDeclarator";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "child";
__n67["id"] := __n68;
__n69 := {  };
__n69["type"] := "NewExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "Con";
__n69["callee"] := __n70;
__n71 := [  ];
__n69["arguments"] := __n71;
__n67["init"] := __n69;
__n66 := [ __n67 ];
__n65["declarations"] := __n66;
__n65["kind"] := "var";
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "AssignmentExpression";
__n73["operator"] := "=";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "child";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "length";
__n76["raw"] := "\"length\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["left"] := __n74;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 3.;
__n77["raw"] := "3";
__n73["right"] := __n77;
__n72["expression"] := __n73;
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "MemberExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "Array";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "prototype";
__n84["raw"] := "\"prototype\"";
__n82["property"] := __n84;
__n82["computed"] := true;
__n81["object"] := __n82;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "reduce";
__n85["raw"] := "\"reduce\"";
__n81["property"] := __n85;
__n81["computed"] := true;
__n80["object"] := __n81;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "call";
__n86["raw"] := "\"call\"";
__n80["property"] := __n86;
__n80["computed"] := true;
__n79["callee"] := __n80;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "child";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "callbackfn";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "initialValue";
__n87 := [ __n88, __n89, __n90 ];
__n79["arguments"] := __n87;
__n78["expression"] := __n79;
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "assert";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "testResult";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "testResult !== true";
__n96["raw"] := "'testResult !== true'";
__n94 := [ __n95, __n96 ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n1 := [ __n2, __n7, __n12, __n14, __n26, __n49, __n59, __n65, __n72, __n78, __n91 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n97 := [ "testResult", "initialValue", "proto", "Con", "child" ];
__n0["variableDeclarations"] := __n97;
__n99 := {  };
__n99["type"] := "FunctionDeclaration";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "callbackfn";
__n99["id"] := __n100;
__n101 := [ "prevVal", "curVal", "idx", "obj" ];
__n99["params"] := __n101;
__n102 := {  };
__n102["type"] := "BlockStatement";
__n104 := {  };
__n104["type"] := "IfStatement";
__n105 := {  };
__n105["type"] := "BinaryExpression";
__n105["operator"] := "===";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "idx";
__n105["left"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 1.;
__n107["raw"] := "1";
__n105["right"] := __n107;
__n104["test"] := __n105;
__n108 := {  };
__n108["type"] := "BlockStatement";
__n110 := {  };
__n110["type"] := "ExpressionStatement";
__n111 := {  };
__n111["type"] := "AssignmentExpression";
__n111["operator"] := "=";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "testResult";
__n111["left"] := __n112;
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := "===";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "curVal";
__n113["left"] := __n114;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := 1.;
__n115["raw"] := "1";
__n113["right"] := __n115;
__n111["right"] := __n113;
__n110["expression"] := __n111;
__n109 := [ __n110 ];
__n108["body"] := __n109;
__n104["consequent"] := __n108;
__n104["alternate"] := null;
__n103 := [ __n104 ];
__n102["body"] := __n103;
__n116 := [  ];
__n102["variableDeclarations"] := __n116;
__n117 := [  ];
__n102["functionDeclarations"] := __n117;
__n102["codeType"] := "function";
__n102["strict"] := false;
__n99["body"] := __n102;
__n99["generator"] := false;
__n99["expression"] := false;
__n99["async"] := false;
__n98 := [ __n99 ];
__n0["functionDeclarations"] := __n98;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}