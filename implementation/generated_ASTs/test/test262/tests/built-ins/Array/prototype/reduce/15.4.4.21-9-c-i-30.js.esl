function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "initialValue";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 0.;
__n11["raw"] := "0";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "callbackfn";
__n12["expression"] := __n13;
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "arr";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "ArrayExpression";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 2.;
__n20["raw"] := "2";
__n19 := [ null, null, __n20 ];
__n18["elements"] := __n19;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n21 := {  };
__n21["type"] := "VariableDeclaration";
__n23 := {  };
__n23["type"] := "VariableDeclarator";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "preIterVisible";
__n23["id"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := false;
__n25["raw"] := "false";
__n23["init"] := __n25;
__n22 := [ __n23 ];
__n21["declarations"] := __n22;
__n21["kind"] := "var";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Object";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "defineProperty";
__n30["raw"] := "\"defineProperty\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "arr";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "0";
__n33["raw"] := "\"0\"";
__n34 := {  };
__n34["type"] := "ObjectExpression";
__n36 := {  };
__n36["type"] := "Property";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "get";
__n36["key"] := __n37;
__n38 := {  };
__n38["type"] := "FunctionExpression";
__n38["id"] := null;
__n39 := [  ];
__n38["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "preIterVisible";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := true;
__n45["raw"] := "true";
__n43["right"] := __n45;
__n42["expression"] := __n43;
__n46 := {  };
__n46["type"] := "ReturnStatement";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 0.;
__n47["raw"] := "0";
__n46["argument"] := __n47;
__n41 := [ __n42, __n46 ];
__n40["body"] := __n41;
__n48 := [  ];
__n40["variableDeclarations"] := __n48;
__n49 := [  ];
__n40["functionDeclarations"] := __n49;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n38["body"] := __n40;
__n38["generator"] := false;
__n38["expression"] := false;
__n38["async"] := false;
__n36["value"] := __n38;
__n36["computed"] := false;
__n36["kind"] := "init";
__n36["shorthand"] := false;
__n50 := {  };
__n50["type"] := "Property";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "configurable";
__n50["key"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := true;
__n52["raw"] := "true";
__n50["value"] := __n52;
__n50["computed"] := false;
__n50["kind"] := "init";
__n50["shorthand"] := false;
__n35 := [ __n36, __n50 ];
__n34["properties"] := __n35;
__n31 := [ __n32, __n33, __n34 ];
__n27["arguments"] := __n31;
__n26["expression"] := __n27;
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Object";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "defineProperty";
__n57["raw"] := "\"defineProperty\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "arr";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "1";
__n60["raw"] := "\"1\"";
__n61 := {  };
__n61["type"] := "ObjectExpression";
__n63 := {  };
__n63["type"] := "Property";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "get";
__n63["key"] := __n64;
__n65 := {  };
__n65["type"] := "FunctionExpression";
__n65["id"] := null;
__n66 := [  ];
__n65["params"] := __n66;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "IfStatement";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "preIterVisible";
__n69["test"] := __n70;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "ReturnStatement";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 1.;
__n74["raw"] := "1";
__n73["argument"] := __n74;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n69["consequent"] := __n71;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ReturnStatement";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 100.;
__n78["raw"] := "100";
__n77["argument"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n69["alternate"] := __n75;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n79 := [  ];
__n67["variableDeclarations"] := __n79;
__n80 := [  ];
__n67["functionDeclarations"] := __n80;
__n67["codeType"] := "function";
__n67["strict"] := false;
__n65["body"] := __n67;
__n65["generator"] := false;
__n65["expression"] := false;
__n65["async"] := false;
__n63["value"] := __n65;
__n63["computed"] := false;
__n63["kind"] := "init";
__n63["shorthand"] := false;
__n81 := {  };
__n81["type"] := "Property";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "configurable";
__n81["key"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := true;
__n83["raw"] := "true";
__n81["value"] := __n83;
__n81["computed"] := false;
__n81["kind"] := "init";
__n81["shorthand"] := false;
__n62 := [ __n63, __n81 ];
__n61["properties"] := __n62;
__n58 := [ __n59, __n60, __n61 ];
__n54["arguments"] := __n58;
__n53["expression"] := __n54;
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "arr";
__n86["object"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "reduce";
__n88["raw"] := "\"reduce\"";
__n86["property"] := __n88;
__n86["computed"] := true;
__n85["callee"] := __n86;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "callbackfn";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "initialValue";
__n89 := [ __n90, __n91 ];
__n85["arguments"] := __n89;
__n84["expression"] := __n85;
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "assert";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "testResult";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "testResult !== true";
__n97["raw"] := "'testResult !== true'";
__n95 := [ __n96, __n97 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n1 := [ __n2, __n7, __n12, __n14, __n21, __n26, __n53, __n84, __n92 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n98 := [ "testResult", "initialValue", "arr", "preIterVisible" ];
__n0["variableDeclarations"] := __n98;
__n100 := {  };
__n100["type"] := "FunctionDeclaration";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "callbackfn";
__n100["id"] := __n101;
__n102 := [ "prevVal", "curVal", "idx", "obj" ];
__n100["params"] := __n102;
__n103 := {  };
__n103["type"] := "BlockStatement";
__n105 := {  };
__n105["type"] := "IfStatement";
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "===";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "idx";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := 1.;
__n108["raw"] := "1";
__n106["right"] := __n108;
__n105["test"] := __n106;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "ExpressionStatement";
__n112 := {  };
__n112["type"] := "AssignmentExpression";
__n112["operator"] := "=";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "testResult";
__n112["left"] := __n113;
__n114 := {  };
__n114["type"] := "BinaryExpression";
__n114["operator"] := "===";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "curVal";
__n114["left"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 1.;
__n116["raw"] := "1";
__n114["right"] := __n116;
__n112["right"] := __n114;
__n111["expression"] := __n112;
__n110 := [ __n111 ];
__n109["body"] := __n110;
__n105["consequent"] := __n109;
__n105["alternate"] := null;
__n104 := [ __n105 ];
__n103["body"] := __n104;
__n117 := [  ];
__n103["variableDeclarations"] := __n117;
__n118 := [  ];
__n103["functionDeclarations"] := __n118;
__n103["codeType"] := "function";
__n103["strict"] := false;
__n100["body"] := __n103;
__n100["generator"] := false;
__n100["expression"] := false;
__n100["async"] := false;
__n99 := [ __n100 ];
__n0["functionDeclarations"] := __n99;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}