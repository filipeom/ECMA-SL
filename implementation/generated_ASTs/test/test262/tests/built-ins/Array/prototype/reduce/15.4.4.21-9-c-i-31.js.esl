function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "initialValue";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 0.;
__n11["raw"] := "0";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "callbackfn";
__n12["expression"] := __n13;
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "obj";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 2.;
__n21["raw"] := "2";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 2.;
__n22["raw"] := "2";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "length";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 3.;
__n25["raw"] := "3";
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n19 := [ __n20, __n23 ];
__n18["properties"] := __n19;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "preIterVisible";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := false;
__n30["raw"] := "false";
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Object";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "defineProperty";
__n35["raw"] := "\"defineProperty\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "obj";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "0";
__n38["raw"] := "\"0\"";
__n39 := {  };
__n39["type"] := "ObjectExpression";
__n41 := {  };
__n41["type"] := "Property";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "get";
__n41["key"] := __n42;
__n43 := {  };
__n43["type"] := "FunctionExpression";
__n43["id"] := null;
__n44 := [  ];
__n43["params"] := __n44;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "AssignmentExpression";
__n48["operator"] := "=";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "preIterVisible";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := true;
__n50["raw"] := "true";
__n48["right"] := __n50;
__n47["expression"] := __n48;
__n51 := {  };
__n51["type"] := "ReturnStatement";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 0.;
__n52["raw"] := "0";
__n51["argument"] := __n52;
__n46 := [ __n47, __n51 ];
__n45["body"] := __n46;
__n53 := [  ];
__n45["variableDeclarations"] := __n53;
__n54 := [  ];
__n45["functionDeclarations"] := __n54;
__n45["codeType"] := "function";
__n45["strict"] := false;
__n43["body"] := __n45;
__n43["generator"] := false;
__n43["expression"] := false;
__n43["async"] := false;
__n41["value"] := __n43;
__n41["computed"] := false;
__n41["kind"] := "init";
__n41["shorthand"] := false;
__n55 := {  };
__n55["type"] := "Property";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "configurable";
__n55["key"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := true;
__n57["raw"] := "true";
__n55["value"] := __n57;
__n55["computed"] := false;
__n55["kind"] := "init";
__n55["shorthand"] := false;
__n40 := [ __n41, __n55 ];
__n39["properties"] := __n40;
__n36 := [ __n37, __n38, __n39 ];
__n32["arguments"] := __n36;
__n31["expression"] := __n32;
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "Object";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "defineProperty";
__n62["raw"] := "\"defineProperty\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "obj";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "1";
__n65["raw"] := "\"1\"";
__n66 := {  };
__n66["type"] := "ObjectExpression";
__n68 := {  };
__n68["type"] := "Property";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "get";
__n68["key"] := __n69;
__n70 := {  };
__n70["type"] := "FunctionExpression";
__n70["id"] := null;
__n71 := [  ];
__n70["params"] := __n71;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "preIterVisible";
__n74["test"] := __n75;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n78 := {  };
__n78["type"] := "ReturnStatement";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 1.;
__n79["raw"] := "1";
__n78["argument"] := __n79;
__n77 := [ __n78 ];
__n76["body"] := __n77;
__n74["consequent"] := __n76;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ReturnStatement";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "11";
__n83["raw"] := "\"11\"";
__n82["argument"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n74["alternate"] := __n80;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n84 := [  ];
__n72["variableDeclarations"] := __n84;
__n85 := [  ];
__n72["functionDeclarations"] := __n85;
__n72["codeType"] := "function";
__n72["strict"] := false;
__n70["body"] := __n72;
__n70["generator"] := false;
__n70["expression"] := false;
__n70["async"] := false;
__n68["value"] := __n70;
__n68["computed"] := false;
__n68["kind"] := "init";
__n68["shorthand"] := false;
__n86 := {  };
__n86["type"] := "Property";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "configurable";
__n86["key"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := true;
__n88["raw"] := "true";
__n86["value"] := __n88;
__n86["computed"] := false;
__n86["kind"] := "init";
__n86["shorthand"] := false;
__n67 := [ __n68, __n86 ];
__n66["properties"] := __n67;
__n63 := [ __n64, __n65, __n66 ];
__n59["arguments"] := __n63;
__n58["expression"] := __n59;
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "MemberExpression";
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "Array";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "prototype";
__n95["raw"] := "\"prototype\"";
__n93["property"] := __n95;
__n93["computed"] := true;
__n92["object"] := __n93;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "reduce";
__n96["raw"] := "\"reduce\"";
__n92["property"] := __n96;
__n92["computed"] := true;
__n91["object"] := __n92;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "call";
__n97["raw"] := "\"call\"";
__n91["property"] := __n97;
__n91["computed"] := true;
__n90["callee"] := __n91;
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "obj";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "callbackfn";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "initialValue";
__n98 := [ __n99, __n100, __n101 ];
__n90["arguments"] := __n98;
__n89["expression"] := __n90;
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "assert";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "testResult";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "testResult !== true";
__n107["raw"] := "'testResult !== true'";
__n105 := [ __n106, __n107 ];
__n103["arguments"] := __n105;
__n102["expression"] := __n103;
__n1 := [ __n2, __n7, __n12, __n14, __n26, __n31, __n58, __n89, __n102 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n108 := [ "testResult", "initialValue", "obj", "preIterVisible" ];
__n0["variableDeclarations"] := __n108;
__n110 := {  };
__n110["type"] := "FunctionDeclaration";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "callbackfn";
__n110["id"] := __n111;
__n112 := [ "prevVal", "curVal", "idx", "obj" ];
__n110["params"] := __n112;
__n113 := {  };
__n113["type"] := "BlockStatement";
__n115 := {  };
__n115["type"] := "IfStatement";
__n116 := {  };
__n116["type"] := "BinaryExpression";
__n116["operator"] := "===";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "idx";
__n116["left"] := __n117;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 1.;
__n118["raw"] := "1";
__n116["right"] := __n118;
__n115["test"] := __n116;
__n119 := {  };
__n119["type"] := "BlockStatement";
__n121 := {  };
__n121["type"] := "ExpressionStatement";
__n122 := {  };
__n122["type"] := "AssignmentExpression";
__n122["operator"] := "=";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "testResult";
__n122["left"] := __n123;
__n124 := {  };
__n124["type"] := "BinaryExpression";
__n124["operator"] := "===";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "curVal";
__n124["left"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := 1.;
__n126["raw"] := "1";
__n124["right"] := __n126;
__n122["right"] := __n124;
__n121["expression"] := __n122;
__n120 := [ __n121 ];
__n119["body"] := __n120;
__n115["consequent"] := __n119;
__n115["alternate"] := null;
__n114 := [ __n115 ];
__n113["body"] := __n114;
__n127 := [  ];
__n113["variableDeclarations"] := __n127;
__n128 := [  ];
__n113["functionDeclarations"] := __n128;
__n113["codeType"] := "function";
__n113["strict"] := false;
__n110["body"] := __n113;
__n110["generator"] := false;
__n110["expression"] := false;
__n110["async"] := false;
__n109 := [ __n110 ];
__n0["functionDeclarations"] := __n109;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}