function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "result";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "ArrayExpression";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 11.;
__n14["raw"] := "11";
__n13 := [ __n14 ];
__n12["elements"] := __n13;
__n11["object"] := __n12;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "reduce";
__n15["raw"] := "\"reduce\"";
__n11["property"] := __n15;
__n11["computed"] := true;
__n10["callee"] := __n11;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "callbackfn";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.;
__n18["raw"] := "1";
__n16 := [ __n17, __n18 ];
__n10["arguments"] := __n16;
__n9["expression"] := __n10;
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "assert";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "result";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "result !== true";
__n24["raw"] := "'result !== true'";
__n22 := [ __n23, __n24 ];
__n20["arguments"] := __n22;
__n19["expression"] := __n20;
__n1 := [ __n2, __n7, __n9, __n19 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n25 := [ "result" ];
__n0["variableDeclarations"] := __n25;
__n27 := {  };
__n27["type"] := "FunctionDeclaration";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "callbackfn";
__n27["id"] := __n28;
__n29 := [ "prevVal", "curVal" ];
__n27["params"] := __n29;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "AssignmentExpression";
__n33["operator"] := "=";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "result";
__n33["left"] := __n34;
__n35 := {  };
__n35["type"] := "LogicalExpression";
__n35["operator"] := "&&";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := ">";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "curVal";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 10.;
__n38["raw"] := "10";
__n36["right"] := __n38;
__n35["left"] := __n36;
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "===";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 1.;
__n40["raw"] := "1";
__n39["left"] := __n40;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "prevVal";
__n39["right"] := __n41;
__n35["right"] := __n39;
__n33["right"] := __n35;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n42 := [  ];
__n30["variableDeclarations"] := __n42;
__n43 := [  ];
__n30["functionDeclarations"] := __n43;
__n30["codeType"] := "function";
__n30["strict"] := false;
__n27["body"] := __n30;
__n27["generator"] := false;
__n27["expression"] := false;
__n27["async"] := false;
__n26 := [ __n27 ];
__n0["functionDeclarations"] := __n26;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}