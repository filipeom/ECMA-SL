function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "result";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := true;
__n6["raw"] := "true";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "accessed";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := false;
__n11["raw"] := "false";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "preIteration";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "callbackfn";
__n17["expression"] := __n18;
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "ArrayExpression";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 11.;
__n24["raw"] := "11";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 12.;
__n25["raw"] := "12";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 13.;
__n26["raw"] := "13";
__n23 := [ __n24, __n25, __n26 ];
__n22["elements"] := __n23;
__n21["object"] := __n22;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "reduce";
__n27["raw"] := "\"reduce\"";
__n21["property"] := __n27;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "callbackfn";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 1.;
__n30["raw"] := "1";
__n28 := [ __n29, __n30 ];
__n20["arguments"] := __n28;
__n19["expression"] := __n20;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "assert";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "result";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "result !== true";
__n36["raw"] := "'result !== true'";
__n34 := [ __n35, __n36 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "assert";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "accessed";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "accessed !== true";
__n42["raw"] := "'accessed !== true'";
__n40 := [ __n41, __n42 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n1 := [ __n2, __n7, __n12, __n17, __n19, __n31, __n37 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n43 := [ "result", "accessed", "preIteration" ];
__n0["variableDeclarations"] := __n43;
__n45 := {  };
__n45["type"] := "FunctionDeclaration";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "callbackfn";
__n45["id"] := __n46;
__n47 := [ "prevVal", "curVal", "idx", "obj" ];
__n45["params"] := __n47;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "AssignmentExpression";
__n51["operator"] := "=";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "accessed";
__n51["left"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := true;
__n53["raw"] := "true";
__n51["right"] := __n53;
__n50["expression"] := __n51;
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "preIteration";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "prevVal";
__n55["right"] := __n57;
__n54["test"] := __n55;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "AssignmentExpression";
__n61["operator"] := "=";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "result";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := false;
__n63["raw"] := "false";
__n61["right"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n54["consequent"] := __n58;
__n54["alternate"] := null;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "AssignmentExpression";
__n65["operator"] := "=";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "preIteration";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "curVal";
__n65["right"] := __n67;
__n64["expression"] := __n65;
__n68 := {  };
__n68["type"] := "ReturnStatement";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "curVal";
__n68["argument"] := __n69;
__n49 := [ __n50, __n54, __n64, __n68 ];
__n48["body"] := __n49;
__n70 := [  ];
__n48["variableDeclarations"] := __n70;
__n71 := [  ];
__n48["functionDeclarations"] := __n71;
__n48["codeType"] := "function";
__n48["strict"] := false;
__n45["body"] := __n48;
__n45["generator"] := false;
__n45["expression"] := false;
__n45["async"] := false;
__n44 := [ __n45 ];
__n0["functionDeclarations"] := __n44;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}