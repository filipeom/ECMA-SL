function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "bParCorrect";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arr";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ArrayExpression";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 0.;
__n15["raw"] := "0";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := true;
__n17["raw"] := "true";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 'null;
__n18["raw"] := "\"'null\"";
__n19 := {  };
__n19["type"] := "NewExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Object";
__n19["callee"] := __n20;
__n21 := [  ];
__n19["arguments"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "five";
__n22["raw"] := "\"five\"";
__n14 := [ __n15, __n16, __n17, __n18, __n19, __n22 ];
__n13["elements"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n23 := {  };
__n23["type"] := "VariableDeclaration";
__n25 := {  };
__n25["type"] := "VariableDeclarator";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "initialValue";
__n25["id"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 5.5;
__n27["raw"] := "5.5";
__n25["init"] := __n27;
__n24 := [ __n25 ];
__n23["declarations"] := __n24;
__n23["kind"] := "var";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "assert";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "sameValue";
__n32["raw"] := "\"sameValue\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "arr";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "reduce";
__n37["raw"] := "\"reduce\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "callbackfn";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "initialValue";
__n38 := [ __n39, __n40 ];
__n34["arguments"] := __n38;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "five";
__n41["raw"] := "\"five\"";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "arr.reduce(callbackfn,initialValue)";
__n42["raw"] := "'arr.reduce(callbackfn,initialValue)'";
__n33 := [ __n34, __n41, __n42 ];
__n29["arguments"] := __n33;
__n28["expression"] := __n29;
__n1 := [ __n2, __n7, __n9, __n23, __n28 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n43 := [ "bParCorrect", "arr", "initialValue" ];
__n0["variableDeclarations"] := __n43;
__n45 := {  };
__n45["type"] := "FunctionDeclaration";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "callbackfn";
__n45["id"] := __n46;
__n47 := [ "prevVal", "curVal", "idx", "obj" ];
__n45["params"] := __n47;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "LogicalExpression";
__n51["operator"] := "&&";
__n52 := {  };
__n52["type"] := "LogicalExpression";
__n52["operator"] := "&&";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "===";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "idx";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 0.;
__n55["raw"] := "0";
__n53["right"] := __n55;
__n52["left"] := __n53;
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "===";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n57["computed"] := true;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "obj";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "idx";
__n57["property"] := __n59;
__n56["left"] := __n57;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "curVal";
__n56["right"] := __n60;
__n52["right"] := __n56;
__n51["left"] := __n52;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "===";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "prevVal";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "initialValue";
__n61["right"] := __n63;
__n51["right"] := __n61;
__n50["test"] := __n51;
__n64 := {  };
__n64["type"] := "ReturnStatement";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "curVal";
__n64["argument"] := __n65;
__n50["consequent"] := __n64;
__n66 := {  };
__n66["type"] := "IfStatement";
__n67 := {  };
__n67["type"] := "LogicalExpression";
__n67["operator"] := "&&";
__n68 := {  };
__n68["type"] := "LogicalExpression";
__n68["operator"] := "&&";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := ">";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "idx";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 0.;
__n71["raw"] := "0";
__n69["right"] := __n71;
__n68["left"] := __n69;
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "===";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n73["computed"] := true;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "obj";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "idx";
__n73["property"] := __n75;
__n72["left"] := __n73;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "curVal";
__n72["right"] := __n76;
__n68["right"] := __n72;
__n67["left"] := __n68;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "===";
__n78 := {  };
__n78["type"] := "MemberExpression";
__n78["computed"] := true;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "obj";
__n78["object"] := __n79;
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "-";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "idx";
__n80["left"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 1.;
__n82["raw"] := "1";
__n80["right"] := __n82;
__n78["property"] := __n80;
__n77["left"] := __n78;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "prevVal";
__n77["right"] := __n83;
__n67["right"] := __n77;
__n66["test"] := __n67;
__n84 := {  };
__n84["type"] := "ReturnStatement";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "curVal";
__n84["argument"] := __n85;
__n66["consequent"] := __n84;
__n86 := {  };
__n86["type"] := "ReturnStatement";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := false;
__n87["raw"] := "false";
__n86["argument"] := __n87;
__n66["alternate"] := __n86;
__n50["alternate"] := __n66;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n88 := [  ];
__n48["variableDeclarations"] := __n88;
__n89 := [  ];
__n48["functionDeclarations"] := __n89;
__n48["codeType"] := "function";
__n48["strict"] := false;
__n45["body"] := __n48;
__n45["generator"] := false;
__n45["expression"] := false;
__n45["async"] := false;
__n44 := [ __n45 ];
__n0["functionDeclarations"] := __n44;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}