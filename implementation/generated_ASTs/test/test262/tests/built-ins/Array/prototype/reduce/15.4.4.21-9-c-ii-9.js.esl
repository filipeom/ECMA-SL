function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "called";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "ArrayExpression";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 11.;
__n14["raw"] := "11";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 12.;
__n15["raw"] := "12";
__n13 := [ __n14, __n15 ];
__n12["elements"] := __n13;
__n11["object"] := __n12;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "reduce";
__n16["raw"] := "\"reduce\"";
__n11["property"] := __n16;
__n11["computed"] := true;
__n10["callee"] := __n11;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "callbackfn";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n17 := [ __n18, __n19 ];
__n10["arguments"] := __n17;
__n9["expression"] := __n10;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "assert";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "sameValue";
__n24["raw"] := "\"sameValue\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "called";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 2.;
__n27["raw"] := "2";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "called";
__n28["raw"] := "'called'";
__n25 := [ __n26, __n27, __n28 ];
__n21["arguments"] := __n25;
__n20["expression"] := __n21;
__n1 := [ __n2, __n7, __n9, __n20 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n29 := [ "called" ];
__n0["variableDeclarations"] := __n29;
__n31 := {  };
__n31["type"] := "FunctionDeclaration";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "callbackfn";
__n31["id"] := __n32;
__n33 := [  ];
__n31["params"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "UpdateExpression";
__n37["operator"] := "++";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "called";
__n37["argument"] := __n38;
__n37["prefix"] := false;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n39 := [  ];
__n34["variableDeclarations"] := __n39;
__n40 := [  ];
__n34["functionDeclarations"] := __n40;
__n34["codeType"] := "function";
__n34["strict"] := false;
__n31["body"] := __n34;
__n31["generator"] := false;
__n31["expression"] := false;
__n31["async"] := false;
__n30 := [ __n31 ];
__n0["functionDeclarations"] := __n30;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}