function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "str";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "NewExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "String";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "432";
__n14["raw"] := "\"432\"";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "callbackfn";
__n15["expression"] := __n16;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "AssignmentExpression";
__n18["operator"] := "=";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n19["computed"] := true;
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "String";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "prototype";
__n22["raw"] := "\"prototype\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["object"] := __n20;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 3.;
__n23["raw"] := "3";
__n19["property"] := __n23;
__n18["left"] := __n19;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "1";
__n24["raw"] := "\"1\"";
__n18["right"] := __n24;
__n17["expression"] := __n18;
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "Array";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "prototype";
__n34["raw"] := "\"prototype\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["object"] := __n32;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "reduceRight";
__n35["raw"] := "\"reduceRight\"";
__n31["property"] := __n35;
__n31["computed"] := true;
__n30["object"] := __n31;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "call";
__n36["raw"] := "\"call\"";
__n30["property"] := __n36;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "str";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "callbackfn";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 111.;
__n40["raw"] := "111";
__n37 := [ __n38, __n39, __n40 ];
__n29["arguments"] := __n37;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "Array.prototype.reduceRight.call(str, callbackfn, 111) !== true";
__n41["raw"] := "'Array.prototype.reduceRight.call(str, callbackfn, 111) !== true'";
__n28 := [ __n29, __n41 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "assert";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "accessed";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "accessed !== true";
__n47["raw"] := "'accessed !== true'";
__n45 := [ __n46, __n47 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n1 := [ __n2, __n7, __n15, __n17, __n25, __n42 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n48 := [ "accessed", "str" ];
__n0["variableDeclarations"] := __n48;
__n50 := {  };
__n50["type"] := "FunctionDeclaration";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "callbackfn";
__n50["id"] := __n51;
__n52 := [ "preVal", "curVal", "idx", "obj" ];
__n50["params"] := __n52;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "AssignmentExpression";
__n56["operator"] := "=";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "accessed";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := true;
__n58["raw"] := "true";
__n56["right"] := __n58;
__n55["expression"] := __n56;
__n59 := {  };
__n59["type"] := "ReturnStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "===";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "obj";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "length";
__n63["raw"] := "\"length\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["left"] := __n61;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 3.;
__n64["raw"] := "3";
__n60["right"] := __n64;
__n59["argument"] := __n60;
__n54 := [ __n55, __n59 ];
__n53["body"] := __n54;
__n65 := [  ];
__n53["variableDeclarations"] := __n65;
__n66 := [  ];
__n53["functionDeclarations"] := __n66;
__n53["codeType"] := "function";
__n53["strict"] := false;
__n50["body"] := __n53;
__n50["generator"] := false;
__n50["expression"] := false;
__n50["async"] := false;
__n49 := [ __n50 ];
__n0["functionDeclarations"] := __n49;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}