function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "fun";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "FunctionExpression";
__n11["id"] := null;
__n12 := [ "a", "b" ];
__n11["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ReturnStatement";
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "+";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "a";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "b";
__n16["right"] := __n18;
__n15["argument"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n19 := [  ];
__n13["variableDeclarations"] := __n19;
__n20 := [  ];
__n13["functionDeclarations"] := __n20;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n11["body"] := __n13;
__n11["generator"] := false;
__n11["expression"] := false;
__n11["async"] := false;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "AssignmentExpression";
__n22["operator"] := "=";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n23["computed"] := true;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "fun";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 0.;
__n25["raw"] := "0";
__n23["property"] := __n25;
__n22["left"] := __n23;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 12.;
__n26["raw"] := "12";
__n22["right"] := __n26;
__n21["expression"] := __n22;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "AssignmentExpression";
__n28["operator"] := "=";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n29["computed"] := true;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "fun";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 1.;
__n31["raw"] := "1";
__n29["property"] := __n31;
__n28["left"] := __n29;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 11.;
__n32["raw"] := "11";
__n28["right"] := __n32;
__n27["expression"] := __n28;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "AssignmentExpression";
__n34["operator"] := "=";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n35["computed"] := true;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "fun";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 2.;
__n37["raw"] := "2";
__n35["property"] := __n37;
__n34["left"] := __n35;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 9.;
__n38["raw"] := "9";
__n34["right"] := __n38;
__n33["expression"] := __n34;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "callbackfn";
__n39["expression"] := __n40;
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "assert";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "Array";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "prototype";
__n50["raw"] := "\"prototype\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["object"] := __n48;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "reduceRight";
__n51["raw"] := "\"reduceRight\"";
__n47["property"] := __n51;
__n47["computed"] := true;
__n46["object"] := __n47;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "call";
__n52["raw"] := "\"call\"";
__n46["property"] := __n52;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "fun";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "callbackfn";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 11.;
__n56["raw"] := "11";
__n53 := [ __n54, __n55, __n56 ];
__n45["arguments"] := __n53;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "Array.prototype.reduceRight.call(fun, callbackfn, 11) !== true";
__n57["raw"] := "'Array.prototype.reduceRight.call(fun, callbackfn, 11) !== true'";
__n44 := [ __n45, __n57 ];
__n42["arguments"] := __n44;
__n41["expression"] := __n42;
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "assert";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "accessed";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "accessed !== true";
__n63["raw"] := "'accessed !== true'";
__n61 := [ __n62, __n63 ];
__n59["arguments"] := __n61;
__n58["expression"] := __n59;
__n1 := [ __n2, __n7, __n21, __n27, __n33, __n39, __n41, __n58 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n64 := [ "accessed", "fun" ];
__n0["variableDeclarations"] := __n64;
__n66 := {  };
__n66["type"] := "FunctionDeclaration";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "callbackfn";
__n66["id"] := __n67;
__n68 := [ "prevVal", "curVal", "idx", "obj" ];
__n66["params"] := __n68;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "AssignmentExpression";
__n72["operator"] := "=";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "accessed";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := true;
__n74["raw"] := "true";
__n72["right"] := __n74;
__n71["expression"] := __n72;
__n75 := {  };
__n75["type"] := "ReturnStatement";
__n76 := {  };
__n76["type"] := "BinaryExpression";
__n76["operator"] := "===";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "obj";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "length";
__n79["raw"] := "\"length\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n76["left"] := __n77;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 2.;
__n80["raw"] := "2";
__n76["right"] := __n80;
__n75["argument"] := __n76;
__n70 := [ __n71, __n75 ];
__n69["body"] := __n70;
__n81 := [  ];
__n69["variableDeclarations"] := __n81;
__n82 := [  ];
__n69["functionDeclarations"] := __n82;
__n69["codeType"] := "function";
__n69["strict"] := false;
__n66["body"] := __n69;
__n66["generator"] := false;
__n66["expression"] := false;
__n66["async"] := false;
__n65 := [ __n66 ];
__n0["functionDeclarations"] := __n65;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}