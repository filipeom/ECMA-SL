function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := true;
__n6["raw"] := "true";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "testResult2";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := false;
__n11["raw"] := "false";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "callbackfn";
__n12["expression"] := __n13;
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "toStringAccessed";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := false;
__n18["raw"] := "false";
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "valueOfAccessed";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := false;
__n23["raw"] := "false";
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n24 := {  };
__n24["type"] := "VariableDeclaration";
__n26 := {  };
__n26["type"] := "VariableDeclarator";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "obj";
__n26["id"] := __n27;
__n28 := {  };
__n28["type"] := "ObjectExpression";
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 0.;
__n31["raw"] := "0";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 12.;
__n32["raw"] := "12";
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n33 := {  };
__n33["type"] := "Property";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1.;
__n34["raw"] := "1";
__n33["key"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 11.;
__n35["raw"] := "11";
__n33["value"] := __n35;
__n33["computed"] := false;
__n33["kind"] := "init";
__n33["shorthand"] := false;
__n36 := {  };
__n36["type"] := "Property";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 2.;
__n37["raw"] := "2";
__n36["key"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 9.;
__n38["raw"] := "9";
__n36["value"] := __n38;
__n36["computed"] := false;
__n36["kind"] := "init";
__n36["shorthand"] := false;
__n39 := {  };
__n39["type"] := "Property";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "length";
__n39["key"] := __n40;
__n41 := {  };
__n41["type"] := "ObjectExpression";
__n43 := {  };
__n43["type"] := "Property";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "valueOf";
__n43["key"] := __n44;
__n45 := {  };
__n45["type"] := "FunctionExpression";
__n45["id"] := null;
__n46 := [  ];
__n45["params"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "AssignmentExpression";
__n50["operator"] := "=";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "valueOfAccessed";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := true;
__n52["raw"] := "true";
__n50["right"] := __n52;
__n49["expression"] := __n50;
__n53 := {  };
__n53["type"] := "ReturnStatement";
__n54 := {  };
__n54["type"] := "ObjectExpression";
__n55 := [  ];
__n54["properties"] := __n55;
__n53["argument"] := __n54;
__n48 := [ __n49, __n53 ];
__n47["body"] := __n48;
__n56 := [  ];
__n47["variableDeclarations"] := __n56;
__n57 := [  ];
__n47["functionDeclarations"] := __n57;
__n47["codeType"] := "function";
__n47["strict"] := false;
__n45["body"] := __n47;
__n45["generator"] := false;
__n45["expression"] := false;
__n45["async"] := false;
__n43["value"] := __n45;
__n43["computed"] := false;
__n43["kind"] := "init";
__n43["shorthand"] := false;
__n58 := {  };
__n58["type"] := "Property";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "toString";
__n58["key"] := __n59;
__n60 := {  };
__n60["type"] := "FunctionExpression";
__n60["id"] := null;
__n61 := [  ];
__n60["params"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "AssignmentExpression";
__n65["operator"] := "=";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "toStringAccessed";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := true;
__n67["raw"] := "true";
__n65["right"] := __n67;
__n64["expression"] := __n65;
__n68 := {  };
__n68["type"] := "ReturnStatement";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "2";
__n69["raw"] := "'2'";
__n68["argument"] := __n69;
__n63 := [ __n64, __n68 ];
__n62["body"] := __n63;
__n70 := [  ];
__n62["variableDeclarations"] := __n70;
__n71 := [  ];
__n62["functionDeclarations"] := __n71;
__n62["codeType"] := "function";
__n62["strict"] := false;
__n60["body"] := __n62;
__n60["generator"] := false;
__n60["expression"] := false;
__n60["async"] := false;
__n58["value"] := __n60;
__n58["computed"] := false;
__n58["kind"] := "init";
__n58["shorthand"] := false;
__n42 := [ __n43, __n58 ];
__n41["properties"] := __n42;
__n39["value"] := __n41;
__n39["computed"] := false;
__n39["kind"] := "init";
__n39["shorthand"] := false;
__n29 := [ __n30, __n33, __n36, __n39 ];
__n28["properties"] := __n29;
__n26["init"] := __n28;
__n25 := [ __n26 ];
__n24["declarations"] := __n25;
__n24["kind"] := "var";
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "Array";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "prototype";
__n78["raw"] := "\"prototype\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["object"] := __n76;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "reduceRight";
__n79["raw"] := "\"reduceRight\"";
__n75["property"] := __n79;
__n75["computed"] := true;
__n74["object"] := __n75;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "call";
__n80["raw"] := "\"call\"";
__n74["property"] := __n80;
__n74["computed"] := true;
__n73["callee"] := __n74;
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "obj";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "callbackfn";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := 1.;
__n84["raw"] := "1";
__n81 := [ __n82, __n83, __n84 ];
__n73["arguments"] := __n81;
__n72["expression"] := __n73;
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "assert";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "testResult1";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "testResult1 !== true";
__n90["raw"] := "'testResult1 !== true'";
__n88 := [ __n89, __n90 ];
__n86["arguments"] := __n88;
__n85["expression"] := __n86;
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "assert";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "testResult2";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "testResult2 !== true";
__n96["raw"] := "'testResult2 !== true'";
__n94 := [ __n95, __n96 ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "CallExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "assert";
__n98["callee"] := __n99;
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "valueOfAccessed";
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "valueOfAccessed !== true";
__n102["raw"] := "'valueOfAccessed !== true'";
__n100 := [ __n101, __n102 ];
__n98["arguments"] := __n100;
__n97["expression"] := __n98;
__n103 := {  };
__n103["type"] := "ExpressionStatement";
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "assert";
__n104["callee"] := __n105;
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "toStringAccessed";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "toStringAccessed !== true";
__n108["raw"] := "'toStringAccessed !== true'";
__n106 := [ __n107, __n108 ];
__n104["arguments"] := __n106;
__n103["expression"] := __n104;
__n1 := [ __n2, __n7, __n12, __n14, __n19, __n24, __n72, __n85, __n91, __n97, __n103 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n109 := [ "testResult1", "testResult2", "toStringAccessed", "valueOfAccessed", "obj" ];
__n0["variableDeclarations"] := __n109;
__n111 := {  };
__n111["type"] := "FunctionDeclaration";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "callbackfn";
__n111["id"] := __n112;
__n113 := [ "prevVal", "curVal", "idx", "obj" ];
__n111["params"] := __n113;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n116 := {  };
__n116["type"] := "IfStatement";
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := ">";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "idx";
__n117["left"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 1.;
__n119["raw"] := "1";
__n117["right"] := __n119;
__n116["test"] := __n117;
__n120 := {  };
__n120["type"] := "BlockStatement";
__n122 := {  };
__n122["type"] := "ExpressionStatement";
__n123 := {  };
__n123["type"] := "AssignmentExpression";
__n123["operator"] := "=";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "testResult1";
__n123["left"] := __n124;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := false;
__n125["raw"] := "false";
__n123["right"] := __n125;
__n122["expression"] := __n123;
__n121 := [ __n122 ];
__n120["body"] := __n121;
__n116["consequent"] := __n120;
__n116["alternate"] := null;
__n126 := {  };
__n126["type"] := "IfStatement";
__n127 := {  };
__n127["type"] := "BinaryExpression";
__n127["operator"] := "===";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "idx";
__n127["left"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := 1.;
__n129["raw"] := "1";
__n127["right"] := __n129;
__n126["test"] := __n127;
__n130 := {  };
__n130["type"] := "BlockStatement";
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "AssignmentExpression";
__n133["operator"] := "=";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "testResult2";
__n133["left"] := __n134;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := true;
__n135["raw"] := "true";
__n133["right"] := __n135;
__n132["expression"] := __n133;
__n131 := [ __n132 ];
__n130["body"] := __n131;
__n126["consequent"] := __n130;
__n126["alternate"] := null;
__n136 := {  };
__n136["type"] := "ReturnStatement";
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := false;
__n137["raw"] := "false";
__n136["argument"] := __n137;
__n115 := [ __n116, __n126, __n136 ];
__n114["body"] := __n115;
__n138 := [  ];
__n114["variableDeclarations"] := __n138;
__n139 := [  ];
__n114["functionDeclarations"] := __n139;
__n114["codeType"] := "function";
__n114["strict"] := false;
__n111["body"] := __n114;
__n111["generator"] := false;
__n111["expression"] := false;
__n111["async"] := false;
__n110 := [ __n111 ];
__n0["functionDeclarations"] := __n110;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}