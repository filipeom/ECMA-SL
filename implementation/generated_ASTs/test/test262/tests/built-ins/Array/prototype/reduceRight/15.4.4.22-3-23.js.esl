function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := true;
__n6["raw"] := "true";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "testResult2";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := false;
__n11["raw"] := "false";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "valueOfAccessed";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := false;
__n16["raw"] := "false";
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "toStringAccessed";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := false;
__n21["raw"] := "false";
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n22 := {  };
__n22["type"] := "VariableDeclaration";
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "proto";
__n24["id"] := __n25;
__n26 := {  };
__n26["type"] := "ObjectExpression";
__n28 := {  };
__n28["type"] := "Property";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "valueOf";
__n28["key"] := __n29;
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [  ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "AssignmentExpression";
__n35["operator"] := "=";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "valueOfAccessed";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := true;
__n37["raw"] := "true";
__n35["right"] := __n37;
__n34["expression"] := __n35;
__n38 := {  };
__n38["type"] := "ReturnStatement";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 2.;
__n39["raw"] := "2";
__n38["argument"] := __n39;
__n33 := [ __n34, __n38 ];
__n32["body"] := __n33;
__n40 := [  ];
__n32["variableDeclarations"] := __n40;
__n41 := [  ];
__n32["functionDeclarations"] := __n41;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["expression"] := false;
__n30["async"] := false;
__n28["value"] := __n30;
__n28["computed"] := false;
__n28["kind"] := "init";
__n28["shorthand"] := false;
__n27 := [ __n28 ];
__n26["properties"] := __n27;
__n24["init"] := __n26;
__n23 := [ __n24 ];
__n22["declarations"] := __n23;
__n22["kind"] := "var";
__n42 := {  };
__n42["type"] := "VariableDeclaration";
__n44 := {  };
__n44["type"] := "VariableDeclarator";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Con";
__n44["id"] := __n45;
__n46 := {  };
__n46["type"] := "FunctionExpression";
__n46["id"] := null;
__n47 := [  ];
__n46["params"] := __n47;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n49 := [  ];
__n48["body"] := __n49;
__n50 := [  ];
__n48["variableDeclarations"] := __n50;
__n51 := [  ];
__n48["functionDeclarations"] := __n51;
__n48["codeType"] := "function";
__n48["strict"] := false;
__n46["body"] := __n48;
__n46["generator"] := false;
__n46["expression"] := false;
__n46["async"] := false;
__n44["init"] := __n46;
__n43 := [ __n44 ];
__n42["declarations"] := __n43;
__n42["kind"] := "var";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "AssignmentExpression";
__n53["operator"] := "=";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Con";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "prototype";
__n56["raw"] := "\"prototype\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["left"] := __n54;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "proto";
__n53["right"] := __n57;
__n52["expression"] := __n53;
__n58 := {  };
__n58["type"] := "VariableDeclaration";
__n60 := {  };
__n60["type"] := "VariableDeclarator";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "child";
__n60["id"] := __n61;
__n62 := {  };
__n62["type"] := "NewExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Con";
__n62["callee"] := __n63;
__n64 := [  ];
__n62["arguments"] := __n64;
__n60["init"] := __n62;
__n59 := [ __n60 ];
__n58["declarations"] := __n59;
__n58["kind"] := "var";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "callbackfn";
__n65["expression"] := __n66;
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "AssignmentExpression";
__n68["operator"] := "=";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "child";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "toString";
__n71["raw"] := "\"toString\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["left"] := __n69;
__n72 := {  };
__n72["type"] := "FunctionExpression";
__n72["id"] := null;
__n73 := [  ];
__n72["params"] := __n73;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "AssignmentExpression";
__n77["operator"] := "=";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "toStringAccessed";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := true;
__n79["raw"] := "true";
__n77["right"] := __n79;
__n76["expression"] := __n77;
__n80 := {  };
__n80["type"] := "ReturnStatement";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "1";
__n81["raw"] := "'1'";
__n80["argument"] := __n81;
__n75 := [ __n76, __n80 ];
__n74["body"] := __n75;
__n82 := [  ];
__n74["variableDeclarations"] := __n82;
__n83 := [  ];
__n74["functionDeclarations"] := __n83;
__n74["codeType"] := "function";
__n74["strict"] := false;
__n72["body"] := __n74;
__n72["generator"] := false;
__n72["expression"] := false;
__n72["async"] := false;
__n68["right"] := __n72;
__n67["expression"] := __n68;
__n84 := {  };
__n84["type"] := "VariableDeclaration";
__n86 := {  };
__n86["type"] := "VariableDeclarator";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "obj";
__n86["id"] := __n87;
__n88 := {  };
__n88["type"] := "ObjectExpression";
__n90 := {  };
__n90["type"] := "Property";
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 0.;
__n91["raw"] := "0";
__n90["key"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 12.;
__n92["raw"] := "12";
__n90["value"] := __n92;
__n90["computed"] := false;
__n90["kind"] := "init";
__n90["shorthand"] := false;
__n93 := {  };
__n93["type"] := "Property";
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := 1.;
__n94["raw"] := "1";
__n93["key"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 11.;
__n95["raw"] := "11";
__n93["value"] := __n95;
__n93["computed"] := false;
__n93["kind"] := "init";
__n93["shorthand"] := false;
__n96 := {  };
__n96["type"] := "Property";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 2.;
__n97["raw"] := "2";
__n96["key"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 9.;
__n98["raw"] := "9";
__n96["value"] := __n98;
__n96["computed"] := false;
__n96["kind"] := "init";
__n96["shorthand"] := false;
__n99 := {  };
__n99["type"] := "Property";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "length";
__n99["key"] := __n100;
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "child";
__n99["value"] := __n101;
__n99["computed"] := false;
__n99["kind"] := "init";
__n99["shorthand"] := false;
__n89 := [ __n90, __n93, __n96, __n99 ];
__n88["properties"] := __n89;
__n86["init"] := __n88;
__n85 := [ __n86 ];
__n84["declarations"] := __n85;
__n84["kind"] := "var";
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "MemberExpression";
__n106 := {  };
__n106["type"] := "MemberExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "Array";
__n106["object"] := __n107;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "prototype";
__n108["raw"] := "\"prototype\"";
__n106["property"] := __n108;
__n106["computed"] := true;
__n105["object"] := __n106;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "reduceRight";
__n109["raw"] := "\"reduceRight\"";
__n105["property"] := __n109;
__n105["computed"] := true;
__n104["object"] := __n105;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "call";
__n110["raw"] := "\"call\"";
__n104["property"] := __n110;
__n104["computed"] := true;
__n103["callee"] := __n104;
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "obj";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "callbackfn";
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := 1.;
__n114["raw"] := "1";
__n111 := [ __n112, __n113, __n114 ];
__n103["arguments"] := __n111;
__n102["expression"] := __n103;
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "assert";
__n116["callee"] := __n117;
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "testResult1";
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "testResult1 !== true";
__n120["raw"] := "'testResult1 !== true'";
__n118 := [ __n119, __n120 ];
__n116["arguments"] := __n118;
__n115["expression"] := __n116;
__n121 := {  };
__n121["type"] := "ExpressionStatement";
__n122 := {  };
__n122["type"] := "CallExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "assert";
__n122["callee"] := __n123;
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "testResult2";
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "testResult2 !== true";
__n126["raw"] := "'testResult2 !== true'";
__n124 := [ __n125, __n126 ];
__n122["arguments"] := __n124;
__n121["expression"] := __n122;
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "assert";
__n128["callee"] := __n129;
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "valueOfAccessed";
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := "valueOfAccessed !== true";
__n132["raw"] := "'valueOfAccessed !== true'";
__n130 := [ __n131, __n132 ];
__n128["arguments"] := __n130;
__n127["expression"] := __n128;
__n133 := {  };
__n133["type"] := "ExpressionStatement";
__n134 := {  };
__n134["type"] := "CallExpression";
__n135 := {  };
__n135["type"] := "MemberExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "assert";
__n135["object"] := __n136;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "sameValue";
__n137["raw"] := "\"sameValue\"";
__n135["property"] := __n137;
__n135["computed"] := true;
__n134["callee"] := __n135;
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "toStringAccessed";
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := false;
__n140["raw"] := "false";
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "toStringAccessed";
__n141["raw"] := "'toStringAccessed'";
__n138 := [ __n139, __n140, __n141 ];
__n134["arguments"] := __n138;
__n133["expression"] := __n134;
__n1 := [ __n2, __n7, __n12, __n17, __n22, __n42, __n52, __n58, __n65, __n67, __n84, __n102, __n115, __n121, __n127, __n133 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n142 := [ "testResult1", "testResult2", "valueOfAccessed", "toStringAccessed", "proto", "Con", "child", "obj" ];
__n0["variableDeclarations"] := __n142;
__n144 := {  };
__n144["type"] := "FunctionDeclaration";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "callbackfn";
__n144["id"] := __n145;
__n146 := [ "prevVal", "curVal", "idx", "obj" ];
__n144["params"] := __n146;
__n147 := {  };
__n147["type"] := "BlockStatement";
__n149 := {  };
__n149["type"] := "IfStatement";
__n150 := {  };
__n150["type"] := "BinaryExpression";
__n150["operator"] := ">";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "idx";
__n150["left"] := __n151;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := 1.;
__n152["raw"] := "1";
__n150["right"] := __n152;
__n149["test"] := __n150;
__n153 := {  };
__n153["type"] := "BlockStatement";
__n155 := {  };
__n155["type"] := "ExpressionStatement";
__n156 := {  };
__n156["type"] := "AssignmentExpression";
__n156["operator"] := "=";
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "testResult1";
__n156["left"] := __n157;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := false;
__n158["raw"] := "false";
__n156["right"] := __n158;
__n155["expression"] := __n156;
__n154 := [ __n155 ];
__n153["body"] := __n154;
__n149["consequent"] := __n153;
__n149["alternate"] := null;
__n159 := {  };
__n159["type"] := "IfStatement";
__n160 := {  };
__n160["type"] := "BinaryExpression";
__n160["operator"] := "===";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "idx";
__n160["left"] := __n161;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := 1.;
__n162["raw"] := "1";
__n160["right"] := __n162;
__n159["test"] := __n160;
__n163 := {  };
__n163["type"] := "BlockStatement";
__n165 := {  };
__n165["type"] := "ExpressionStatement";
__n166 := {  };
__n166["type"] := "AssignmentExpression";
__n166["operator"] := "=";
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "testResult2";
__n166["left"] := __n167;
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := true;
__n168["raw"] := "true";
__n166["right"] := __n168;
__n165["expression"] := __n166;
__n164 := [ __n165 ];
__n163["body"] := __n164;
__n159["consequent"] := __n163;
__n159["alternate"] := null;
__n169 := {  };
__n169["type"] := "ReturnStatement";
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := false;
__n170["raw"] := "false";
__n169["argument"] := __n170;
__n148 := [ __n149, __n159, __n169 ];
__n147["body"] := __n148;
__n171 := [  ];
__n147["variableDeclarations"] := __n171;
__n172 := [  ];
__n147["functionDeclarations"] := __n172;
__n147["codeType"] := "function";
__n147["strict"] := false;
__n144["body"] := __n147;
__n144["generator"] := false;
__n144["expression"] := false;
__n144["async"] := false;
__n143 := [ __n144 ];
__n0["functionDeclarations"] := __n143;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}