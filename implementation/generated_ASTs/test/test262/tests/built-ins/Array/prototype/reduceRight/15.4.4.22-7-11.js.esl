function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "str";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "initialValue is not present";
__n6["raw"] := "\"initialValue is not present\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "assert";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "sameValue";
__n11["raw"] := "\"sameValue\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "ArrayExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "str";
__n16 := [ __n17 ];
__n15["elements"] := __n16;
__n14["object"] := __n15;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "reduceRight";
__n18["raw"] := "\"reduceRight\"";
__n14["property"] := __n18;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n20 := {  };
__n20["type"] := "FunctionExpression";
__n20["id"] := null;
__n21 := [  ];
__n20["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n23 := [  ];
__n22["body"] := __n23;
__n24 := [  ];
__n22["variableDeclarations"] := __n24;
__n25 := [  ];
__n22["functionDeclarations"] := __n25;
__n22["codeType"] := "function";
__n22["strict"] := false;
__n20["body"] := __n22;
__n20["generator"] := false;
__n20["expression"] := false;
__n20["async"] := false;
__n19 := [ __n20 ];
__n13["arguments"] := __n19;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "str";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "[str].reduceRight(function () { })";
__n27["raw"] := "'[str].reduceRight(function () { })'";
__n12 := [ __n13, __n26, __n27 ];
__n8["arguments"] := __n12;
__n7["expression"] := __n8;
__n1 := [ __n2, __n7 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n28 := [ "str" ];
__n0["variableDeclarations"] := __n28;
__n29 := [  ];
__n0["functionDeclarations"] := __n29;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}