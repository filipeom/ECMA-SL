function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 2.;
__n9["raw"] := "2";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "accumulator";
__n10["raw"] := "\"accumulator\"";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n11 := {  };
__n11["type"] := "Property";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 3.;
__n12["raw"] := "3";
__n11["key"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "another";
__n13["raw"] := "\"another\"";
__n11["value"] := __n13;
__n11["computed"] := false;
__n11["kind"] := "init";
__n11["shorthand"] := false;
__n7 := [ __n8, __n11 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Object";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "defineProperty";
__n18["raw"] := "\"defineProperty\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "obj";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "length";
__n21["raw"] := "\"length\"";
__n22 := {  };
__n22["type"] := "ObjectExpression";
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "get";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "FunctionExpression";
__n26["id"] := null;
__n27 := [  ];
__n26["params"] := __n27;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "UnaryExpression";
__n31["operator"] := "delete";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n32["computed"] := true;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "obj";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 2.;
__n34["raw"] := "2";
__n32["property"] := __n34;
__n31["argument"] := __n32;
__n31["prefix"] := true;
__n30["expression"] := __n31;
__n35 := {  };
__n35["type"] := "ReturnStatement";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 5.;
__n36["raw"] := "5";
__n35["argument"] := __n36;
__n29 := [ __n30, __n35 ];
__n28["body"] := __n29;
__n37 := [  ];
__n28["variableDeclarations"] := __n37;
__n38 := [  ];
__n28["functionDeclarations"] := __n38;
__n28["codeType"] := "function";
__n28["strict"] := false;
__n26["body"] := __n28;
__n26["generator"] := false;
__n26["expression"] := false;
__n26["async"] := false;
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n39 := {  };
__n39["type"] := "Property";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "configurable";
__n39["key"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := true;
__n41["raw"] := "true";
__n39["value"] := __n41;
__n39["computed"] := false;
__n39["kind"] := "init";
__n39["shorthand"] := false;
__n23 := [ __n24, __n39 ];
__n22["properties"] := __n23;
__n19 := [ __n20, __n21, __n22 ];
__n15["arguments"] := __n19;
__n14["expression"] := __n15;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "assert";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "notSameValue";
__n46["raw"] := "\"notSameValue\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Array";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "prototype";
__n53["raw"] := "\"prototype\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["object"] := __n51;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "reduceRight";
__n54["raw"] := "\"reduceRight\"";
__n50["property"] := __n54;
__n50["computed"] := true;
__n49["object"] := __n50;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "call";
__n55["raw"] := "\"call\"";
__n49["property"] := __n55;
__n49["computed"] := true;
__n48["callee"] := __n49;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "obj";
__n58 := {  };
__n58["type"] := "FunctionExpression";
__n58["id"] := null;
__n59 := [  ];
__n58["params"] := __n59;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n61 := [  ];
__n60["body"] := __n61;
__n62 := [  ];
__n60["variableDeclarations"] := __n62;
__n63 := [  ];
__n60["functionDeclarations"] := __n63;
__n60["codeType"] := "function";
__n60["strict"] := false;
__n58["body"] := __n60;
__n58["generator"] := false;
__n58["expression"] := false;
__n58["async"] := false;
__n56 := [ __n57, __n58 ];
__n48["arguments"] := __n56;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "accumulator";
__n64["raw"] := "\"accumulator\"";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "Array.prototype.reduceRight.call(obj, function () { })";
__n65["raw"] := "'Array.prototype.reduceRight.call(obj, function () { })'";
__n47 := [ __n48, __n64, __n65 ];
__n43["arguments"] := __n47;
__n42["expression"] := __n43;
__n1 := [ __n2, __n14, __n42 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n66 := [ "obj" ];
__n0["variableDeclarations"] := __n66;
__n67 := [  ];
__n0["functionDeclarations"] := __n67;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}