function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "obj";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ObjectExpression";
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 0.;
__n16["raw"] := "0";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "length";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 3.;
__n20["raw"] := "3";
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n14 := [ __n15, __n18 ];
__n13["properties"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n21 := {  };
__n21["type"] := "VariableDeclaration";
__n23 := {  };
__n23["type"] := "VariableDeclarator";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "preIterVisible";
__n23["id"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := false;
__n25["raw"] := "false";
__n23["init"] := __n25;
__n22 := [ __n23 ];
__n21["declarations"] := __n22;
__n21["kind"] := "var";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Object";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "defineProperty";
__n30["raw"] := "\"defineProperty\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "obj";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "1";
__n33["raw"] := "\"1\"";
__n34 := {  };
__n34["type"] := "ObjectExpression";
__n36 := {  };
__n36["type"] := "Property";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "get";
__n36["key"] := __n37;
__n38 := {  };
__n38["type"] := "FunctionExpression";
__n38["id"] := null;
__n39 := [  ];
__n38["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "preIterVisible";
__n42["test"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ReturnStatement";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 1.;
__n47["raw"] := "1";
__n46["argument"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n42["consequent"] := __n44;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ReturnStatement";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "20";
__n51["raw"] := "\"20\"";
__n50["argument"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n42["alternate"] := __n48;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n52 := [  ];
__n40["variableDeclarations"] := __n52;
__n53 := [  ];
__n40["functionDeclarations"] := __n53;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n38["body"] := __n40;
__n38["generator"] := false;
__n38["expression"] := false;
__n38["async"] := false;
__n36["value"] := __n38;
__n36["computed"] := false;
__n36["kind"] := "init";
__n36["shorthand"] := false;
__n54 := {  };
__n54["type"] := "Property";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "configurable";
__n54["key"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := true;
__n56["raw"] := "true";
__n54["value"] := __n56;
__n54["computed"] := false;
__n54["kind"] := "init";
__n54["shorthand"] := false;
__n35 := [ __n36, __n54 ];
__n34["properties"] := __n35;
__n31 := [ __n32, __n33, __n34 ];
__n27["arguments"] := __n31;
__n26["expression"] := __n27;
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Object";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "defineProperty";
__n61["raw"] := "\"defineProperty\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n58["callee"] := __n59;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "obj";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "2";
__n64["raw"] := "\"2\"";
__n65 := {  };
__n65["type"] := "ObjectExpression";
__n67 := {  };
__n67["type"] := "Property";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "get";
__n67["key"] := __n68;
__n69 := {  };
__n69["type"] := "FunctionExpression";
__n69["id"] := null;
__n70 := [  ];
__n69["params"] := __n70;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "AssignmentExpression";
__n74["operator"] := "=";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "preIterVisible";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := true;
__n76["raw"] := "true";
__n74["right"] := __n76;
__n73["expression"] := __n74;
__n77 := {  };
__n77["type"] := "ReturnStatement";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 2.;
__n78["raw"] := "2";
__n77["argument"] := __n78;
__n72 := [ __n73, __n77 ];
__n71["body"] := __n72;
__n79 := [  ];
__n71["variableDeclarations"] := __n79;
__n80 := [  ];
__n71["functionDeclarations"] := __n80;
__n71["codeType"] := "function";
__n71["strict"] := false;
__n69["body"] := __n71;
__n69["generator"] := false;
__n69["expression"] := false;
__n69["async"] := false;
__n67["value"] := __n69;
__n67["computed"] := false;
__n67["kind"] := "init";
__n67["shorthand"] := false;
__n81 := {  };
__n81["type"] := "Property";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "configurable";
__n81["key"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := true;
__n83["raw"] := "true";
__n81["value"] := __n83;
__n81["computed"] := false;
__n81["kind"] := "init";
__n81["shorthand"] := false;
__n66 := [ __n67, __n81 ];
__n65["properties"] := __n66;
__n62 := [ __n63, __n64, __n65 ];
__n58["arguments"] := __n62;
__n57["expression"] := __n58;
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "Array";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "prototype";
__n90["raw"] := "\"prototype\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n87["object"] := __n88;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "reduceRight";
__n91["raw"] := "\"reduceRight\"";
__n87["property"] := __n91;
__n87["computed"] := true;
__n86["object"] := __n87;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "call";
__n92["raw"] := "\"call\"";
__n86["property"] := __n92;
__n86["computed"] := true;
__n85["callee"] := __n86;
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "obj";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "callbackfn";
__n93 := [ __n94, __n95 ];
__n85["arguments"] := __n93;
__n84["expression"] := __n85;
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "assert";
__n97["callee"] := __n98;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "testResult";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "testResult !== true";
__n101["raw"] := "'testResult !== true'";
__n99 := [ __n100, __n101 ];
__n97["arguments"] := __n99;
__n96["expression"] := __n97;
__n1 := [ __n2, __n7, __n9, __n21, __n26, __n57, __n84, __n96 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n102 := [ "testResult", "obj", "preIterVisible" ];
__n0["variableDeclarations"] := __n102;
__n104 := {  };
__n104["type"] := "FunctionDeclaration";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "callbackfn";
__n104["id"] := __n105;
__n106 := [ "prevVal", "curVal", "idx", "obj" ];
__n104["params"] := __n106;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "IfStatement";
__n110 := {  };
__n110["type"] := "BinaryExpression";
__n110["operator"] := "===";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "idx";
__n110["left"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 1.;
__n112["raw"] := "1";
__n110["right"] := __n112;
__n109["test"] := __n110;
__n113 := {  };
__n113["type"] := "BlockStatement";
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "AssignmentExpression";
__n116["operator"] := "=";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "testResult";
__n116["left"] := __n117;
__n118 := {  };
__n118["type"] := "LogicalExpression";
__n118["operator"] := "&&";
__n119 := {  };
__n119["type"] := "BinaryExpression";
__n119["operator"] := "===";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "prevVal";
__n119["left"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := 2.;
__n121["raw"] := "2";
__n119["right"] := __n121;
__n118["left"] := __n119;
__n122 := {  };
__n122["type"] := "BinaryExpression";
__n122["operator"] := "===";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "curVal";
__n122["left"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 1.;
__n124["raw"] := "1";
__n122["right"] := __n124;
__n118["right"] := __n122;
__n116["right"] := __n118;
__n115["expression"] := __n116;
__n114 := [ __n115 ];
__n113["body"] := __n114;
__n109["consequent"] := __n113;
__n109["alternate"] := null;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n125 := [  ];
__n107["variableDeclarations"] := __n125;
__n126 := [  ];
__n107["functionDeclarations"] := __n126;
__n107["codeType"] := "function";
__n107["strict"] := false;
__n104["body"] := __n107;
__n104["generator"] := false;
__n104["expression"] := false;
__n104["async"] := false;
__n103 := [ __n104 ];
__n0["functionDeclarations"] := __n103;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}