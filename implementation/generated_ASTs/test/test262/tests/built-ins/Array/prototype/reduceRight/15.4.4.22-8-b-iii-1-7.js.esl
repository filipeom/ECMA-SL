function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "proto";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ObjectExpression";
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 0.;
__n16["raw"] := "0";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 1.;
__n20["raw"] := "1";
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 2.;
__n22["raw"] := "2";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 2.;
__n23["raw"] := "2";
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "length";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 3.;
__n26["raw"] := "3";
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n14 := [ __n15, __n18, __n21, __n24 ];
__n13["properties"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Con";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [  ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n34 := [  ];
__n33["body"] := __n34;
__n35 := [  ];
__n33["variableDeclarations"] := __n35;
__n36 := [  ];
__n33["functionDeclarations"] := __n36;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["expression"] := false;
__n31["async"] := false;
__n29["init"] := __n31;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "AssignmentExpression";
__n38["operator"] := "=";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Con";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "prototype";
__n41["raw"] := "\"prototype\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["left"] := __n39;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "proto";
__n38["right"] := __n42;
__n37["expression"] := __n38;
__n43 := {  };
__n43["type"] := "VariableDeclaration";
__n45 := {  };
__n45["type"] := "VariableDeclarator";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "child";
__n45["id"] := __n46;
__n47 := {  };
__n47["type"] := "NewExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "Con";
__n47["callee"] := __n48;
__n49 := [  ];
__n47["arguments"] := __n49;
__n45["init"] := __n47;
__n44 := [ __n45 ];
__n43["declarations"] := __n44;
__n43["kind"] := "var";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Array";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "prototype";
__n56["raw"] := "\"prototype\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["object"] := __n54;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "reduceRight";
__n57["raw"] := "\"reduceRight\"";
__n53["property"] := __n57;
__n53["computed"] := true;
__n52["object"] := __n53;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "call";
__n58["raw"] := "\"call\"";
__n52["property"] := __n58;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "child";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "callbackfn";
__n59 := [ __n60, __n61 ];
__n51["arguments"] := __n59;
__n50["expression"] := __n51;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "assert";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "testResult";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "testResult !== true";
__n67["raw"] := "'testResult !== true'";
__n65 := [ __n66, __n67 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n1 := [ __n2, __n7, __n9, __n27, __n37, __n43, __n50, __n62 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n68 := [ "testResult", "proto", "Con", "child" ];
__n0["variableDeclarations"] := __n68;
__n70 := {  };
__n70["type"] := "FunctionDeclaration";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "callbackfn";
__n70["id"] := __n71;
__n72 := [ "prevVal", "curVal", "idx", "obj" ];
__n70["params"] := __n72;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "IfStatement";
__n76 := {  };
__n76["type"] := "BinaryExpression";
__n76["operator"] := "===";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "idx";
__n76["left"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 1.;
__n78["raw"] := "1";
__n76["right"] := __n78;
__n75["test"] := __n76;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "AssignmentExpression";
__n82["operator"] := "=";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "testResult";
__n82["left"] := __n83;
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "===";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "prevVal";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 2.;
__n86["raw"] := "2";
__n84["right"] := __n86;
__n82["right"] := __n84;
__n81["expression"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n75["consequent"] := __n79;
__n75["alternate"] := null;
__n74 := [ __n75 ];
__n73["body"] := __n74;
__n87 := [  ];
__n73["variableDeclarations"] := __n87;
__n88 := [  ];
__n73["functionDeclarations"] := __n88;
__n73["codeType"] := "function";
__n73["strict"] := false;
__n70["body"] := __n73;
__n70["generator"] := false;
__n70["expression"] := false;
__n70["async"] := false;
__n69 := [ __n70 ];
__n0["functionDeclarations"] := __n69;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}