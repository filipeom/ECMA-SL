function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "arr";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "NewExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Array";
__n8["callee"] := __n9;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 10.;
__n11["raw"] := "10";
__n10 := [ __n11 ];
__n8["arguments"] := __n10;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "assert";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "sameValue";
__n16["raw"] := "\"sameValue\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "arr";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "reduceRight";
__n21["raw"] := "\"reduceRight\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "callbackfn";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 5.;
__n24["raw"] := "5";
__n22 := [ __n23, __n24 ];
__n18["arguments"] := __n22;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 5.;
__n25["raw"] := "5";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "arr.reduceRight(callbackfn,5)";
__n26["raw"] := "'arr.reduceRight(callbackfn,5)'";
__n17 := [ __n18, __n25, __n26 ];
__n13["arguments"] := __n17;
__n12["expression"] := __n13;
__n1 := [ __n2, __n4, __n12 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n27 := [ "arr" ];
__n0["variableDeclarations"] := __n27;
__n29 := {  };
__n29["type"] := "FunctionDeclaration";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "callbackfn";
__n29["id"] := __n30;
__n31 := [ "prevVal", "curVal", "idx", "obj" ];
__n29["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n33 := [  ];
__n32["body"] := __n33;
__n34 := [  ];
__n32["variableDeclarations"] := __n34;
__n35 := [  ];
__n32["functionDeclarations"] := __n35;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n29["body"] := __n32;
__n29["generator"] := false;
__n29["expression"] := false;
__n29["async"] := false;
__n28 := [ __n29 ];
__n0["functionDeclarations"] := __n28;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}