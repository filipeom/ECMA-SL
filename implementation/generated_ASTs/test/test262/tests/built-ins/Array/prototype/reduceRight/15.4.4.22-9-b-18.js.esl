function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arr";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ArrayExpression";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 0.;
__n15["raw"] := "0";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 2.;
__n16["raw"] := "2";
__n14 := [ __n15, null, __n16 ];
__n13["elements"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Object";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "defineProperty";
__n21["raw"] := "\"defineProperty\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "arr";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "2";
__n24["raw"] := "\"2\"";
__n25 := {  };
__n25["type"] := "ObjectExpression";
__n27 := {  };
__n27["type"] := "Property";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "get";
__n27["key"] := __n28;
__n29 := {  };
__n29["type"] := "FunctionExpression";
__n29["id"] := null;
__n30 := [  ];
__n29["params"] := __n30;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Object";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "defineProperty";
__n37["raw"] := "\"defineProperty\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "arr";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "1";
__n40["raw"] := "\"1\"";
__n41 := {  };
__n41["type"] := "ObjectExpression";
__n43 := {  };
__n43["type"] := "Property";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "get";
__n43["key"] := __n44;
__n45 := {  };
__n45["type"] := "FunctionExpression";
__n45["id"] := null;
__n46 := [  ];
__n45["params"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ReturnStatement";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 1.;
__n50["raw"] := "1";
__n49["argument"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n51 := [  ];
__n47["variableDeclarations"] := __n51;
__n52 := [  ];
__n47["functionDeclarations"] := __n52;
__n47["codeType"] := "function";
__n47["strict"] := false;
__n45["body"] := __n47;
__n45["generator"] := false;
__n45["expression"] := false;
__n45["async"] := false;
__n43["value"] := __n45;
__n43["computed"] := false;
__n43["kind"] := "init";
__n43["shorthand"] := false;
__n53 := {  };
__n53["type"] := "Property";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "configurable";
__n53["key"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := true;
__n55["raw"] := "true";
__n53["value"] := __n55;
__n53["computed"] := false;
__n53["kind"] := "init";
__n53["shorthand"] := false;
__n42 := [ __n43, __n53 ];
__n41["properties"] := __n42;
__n38 := [ __n39, __n40, __n41 ];
__n34["arguments"] := __n38;
__n33["expression"] := __n34;
__n56 := {  };
__n56["type"] := "ReturnStatement";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 0.;
__n57["raw"] := "0";
__n56["argument"] := __n57;
__n32 := [ __n33, __n56 ];
__n31["body"] := __n32;
__n58 := [  ];
__n31["variableDeclarations"] := __n58;
__n59 := [  ];
__n31["functionDeclarations"] := __n59;
__n31["codeType"] := "function";
__n31["strict"] := false;
__n29["body"] := __n31;
__n29["generator"] := false;
__n29["expression"] := false;
__n29["async"] := false;
__n27["value"] := __n29;
__n27["computed"] := false;
__n27["kind"] := "init";
__n27["shorthand"] := false;
__n60 := {  };
__n60["type"] := "Property";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "configurable";
__n60["key"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := true;
__n62["raw"] := "true";
__n60["value"] := __n62;
__n60["computed"] := false;
__n60["kind"] := "init";
__n60["shorthand"] := false;
__n26 := [ __n27, __n60 ];
__n25["properties"] := __n26;
__n22 := [ __n23, __n24, __n25 ];
__n18["arguments"] := __n22;
__n17["expression"] := __n18;
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "MemberExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "arr";
__n65["object"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "reduceRight";
__n67["raw"] := "\"reduceRight\"";
__n65["property"] := __n67;
__n65["computed"] := true;
__n64["callee"] := __n65;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "callbackfn";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "initialValue";
__n70["raw"] := "\"initialValue\"";
__n68 := [ __n69, __n70 ];
__n64["arguments"] := __n68;
__n63["expression"] := __n64;
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "assert";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "testResult";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "testResult !== true";
__n76["raw"] := "'testResult !== true'";
__n74 := [ __n75, __n76 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n1 := [ __n2, __n7, __n9, __n17, __n63, __n71 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n77 := [ "testResult", "arr" ];
__n0["variableDeclarations"] := __n77;
__n79 := {  };
__n79["type"] := "FunctionDeclaration";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "callbackfn";
__n79["id"] := __n80;
__n81 := [ "prevVal", "curVal", "idx", "obj" ];
__n79["params"] := __n81;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "IfStatement";
__n85 := {  };
__n85["type"] := "LogicalExpression";
__n85["operator"] := "&&";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "===";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "idx";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 1.;
__n88["raw"] := "1";
__n86["right"] := __n88;
__n85["left"] := __n86;
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "===";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "curVal";
__n89["left"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 1.;
__n91["raw"] := "1";
__n89["right"] := __n91;
__n85["right"] := __n89;
__n84["test"] := __n85;
__n92 := {  };
__n92["type"] := "BlockStatement";
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "AssignmentExpression";
__n95["operator"] := "=";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "testResult";
__n95["left"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := true;
__n97["raw"] := "true";
__n95["right"] := __n97;
__n94["expression"] := __n95;
__n93 := [ __n94 ];
__n92["body"] := __n93;
__n84["consequent"] := __n92;
__n84["alternate"] := null;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n98 := [  ];
__n82["variableDeclarations"] := __n98;
__n99 := [  ];
__n82["functionDeclarations"] := __n99;
__n82["codeType"] := "function";
__n82["strict"] := false;
__n79["body"] := __n82;
__n79["generator"] := false;
__n79["expression"] := false;
__n79["async"] := false;
__n78 := [ __n79 ];
__n0["functionDeclarations"] := __n78;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}