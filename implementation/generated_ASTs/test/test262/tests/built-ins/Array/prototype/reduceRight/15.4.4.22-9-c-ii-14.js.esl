function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "assert";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "sameValue";
__n8["raw"] := "\"sameValue\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "ArrayExpression";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 11.;
__n14["raw"] := "11";
__n13 := [ __n14 ];
__n12["elements"] := __n13;
__n11["object"] := __n12;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "reduceRight";
__n15["raw"] := "\"reduceRight\"";
__n11["property"] := __n15;
__n11["computed"] := true;
__n10["callee"] := __n11;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "callbackfn";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 100.;
__n18["raw"] := "100";
__n16 := [ __n17, __n18 ];
__n10["arguments"] := __n16;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := true;
__n19["raw"] := "true";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "[11].reduceRight(callbackfn, 100)";
__n20["raw"] := "'[11].reduceRight(callbackfn, 100)'";
__n9 := [ __n10, __n19, __n20 ];
__n5["arguments"] := __n9;
__n4["expression"] := __n5;
__n1 := [ __n2, __n4 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n21 := [  ];
__n0["variableDeclarations"] := __n21;
__n23 := {  };
__n23["type"] := "FunctionDeclaration";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "callbackfn";
__n23["id"] := __n24;
__n25 := [  ];
__n23["params"] := __n25;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ReturnStatement";
__n29 := {  };
__n29["type"] := "LogicalExpression";
__n29["operator"] := "&&";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "===";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n31["computed"] := true;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "arguments";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n31["property"] := __n33;
__n30["left"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 100.;
__n34["raw"] := "100";
__n30["right"] := __n34;
__n29["left"] := __n30;
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "===";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n36["computed"] := true;
__n37 := {  };
__n37["type"] := "MemberExpression";
__n37["computed"] := true;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "arguments";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 3.;
__n39["raw"] := "3";
__n37["property"] := __n39;
__n36["object"] := __n37;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n40["computed"] := true;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "arguments";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 2.;
__n42["raw"] := "2";
__n40["property"] := __n42;
__n36["property"] := __n40;
__n35["left"] := __n36;
__n43 := {  };
__n43["type"] := "MemberExpression";
__n43["computed"] := true;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "arguments";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 1.;
__n45["raw"] := "1";
__n43["property"] := __n45;
__n35["right"] := __n43;
__n29["right"] := __n35;
__n28["argument"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n46 := [  ];
__n26["variableDeclarations"] := __n46;
__n47 := [  ];
__n26["functionDeclarations"] := __n47;
__n26["codeType"] := "function";
__n26["strict"] := false;
__n23["body"] := __n26;
__n23["generator"] := false;
__n23["expression"] := false;
__n23["async"] := false;
__n22 := [ __n23 ];
__n0["functionDeclarations"] := __n22;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}