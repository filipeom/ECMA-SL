function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n10["computed"] := true;
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "x";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 0.;
__n12["raw"] := "0";
__n10["property"] := __n12;
__n9["left"] := __n10;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := true;
__n13["raw"] := "true";
__n9["right"] := __n13;
__n8["expression"] := __n9;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "AssignmentExpression";
__n15["operator"] := "=";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n16["computed"] := true;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "x";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 2.;
__n18["raw"] := "2";
__n16["property"] := __n18;
__n15["left"] := __n16;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Infinity";
__n15["right"] := __n19;
__n14["expression"] := __n15;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "=";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n22["computed"] := true;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "x";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 4.;
__n24["raw"] := "4";
__n22["property"] := __n24;
__n21["left"] := __n22;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "undefined";
__n21["right"] := __n25;
__n20["expression"] := __n21;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "AssignmentExpression";
__n27["operator"] := "=";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n28["computed"] := true;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "x";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 5.;
__n30["raw"] := "5";
__n28["property"] := __n30;
__n27["left"] := __n28;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "undefined";
__n27["right"] := __n31;
__n26["expression"] := __n27;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "AssignmentExpression";
__n33["operator"] := "=";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n34["computed"] := true;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "x";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 8.;
__n36["raw"] := "8";
__n34["property"] := __n36;
__n33["left"] := __n34;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "NaN";
__n37["raw"] := "\"NaN\"";
__n33["right"] := __n37;
__n32["expression"] := __n33;
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "AssignmentExpression";
__n39["operator"] := "=";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n40["computed"] := true;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "x";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 9.;
__n42["raw"] := "9";
__n40["property"] := __n42;
__n39["left"] := __n40;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "-1";
__n43["raw"] := "\"-1\"";
__n39["right"] := __n43;
__n38["expression"] := __n39;
__n44 := {  };
__n44["type"] := "VariableDeclaration";
__n46 := {  };
__n46["type"] := "VariableDeclarator";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "reverse";
__n46["id"] := __n47;
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "x";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "reverse";
__n51["raw"] := "\"reverse\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["callee"] := __n49;
__n52 := [  ];
__n48["arguments"] := __n52;
__n46["init"] := __n48;
__n45 := [ __n46 ];
__n44["declarations"] := __n45;
__n44["kind"] := "var";
__n53 := {  };
__n53["type"] := "IfStatement";
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "!==";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "reverse";
__n54["left"] := __n55;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "x";
__n54["right"] := __n56;
__n53["test"] := __n54;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "$ERROR";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "+";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#1: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse() === x. Actual: ";
__n64["raw"] := "'#1: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse() === x. Actual: '";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "reverse";
__n63["right"] := __n65;
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n53["consequent"] := __n57;
__n53["alternate"] := null;
__n66 := {  };
__n66["type"] := "IfStatement";
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "!==";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n68["computed"] := true;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "x";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 0.;
__n70["raw"] := "0";
__n68["property"] := __n70;
__n67["left"] := __n68;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "-1";
__n71["raw"] := "\"-1\"";
__n67["right"] := __n71;
__n66["test"] := __n67;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "$ERROR";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "+";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "#2: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[0] === \"-1\". Actual: ";
__n79["raw"] := "'#2: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[0] === \"-1\". Actual: '";
__n78["left"] := __n79;
__n80 := {  };
__n80["type"] := "MemberExpression";
__n80["computed"] := true;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "x";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 0.;
__n82["raw"] := "0";
__n80["property"] := __n82;
__n78["right"] := __n80;
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n66["consequent"] := __n72;
__n66["alternate"] := null;
__n83 := {  };
__n83["type"] := "IfStatement";
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "!==";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n85["computed"] := true;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "x";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 1.;
__n87["raw"] := "1";
__n85["property"] := __n87;
__n84["left"] := __n85;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "NaN";
__n88["raw"] := "\"NaN\"";
__n84["right"] := __n88;
__n83["test"] := __n84;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "$ERROR";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "+";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "#3: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[1] === \"NaN\". Actual: ";
__n96["raw"] := "'#3: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[1] === \"NaN\". Actual: '";
__n95["left"] := __n96;
__n97 := {  };
__n97["type"] := "MemberExpression";
__n97["computed"] := true;
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "x";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 1.;
__n99["raw"] := "1";
__n97["property"] := __n99;
__n95["right"] := __n97;
__n94 := [ __n95 ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n83["consequent"] := __n89;
__n83["alternate"] := null;
__n100 := {  };
__n100["type"] := "IfStatement";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "!==";
__n102 := {  };
__n102["type"] := "MemberExpression";
__n102["computed"] := true;
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "x";
__n102["object"] := __n103;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := 2.;
__n104["raw"] := "2";
__n102["property"] := __n104;
__n101["left"] := __n102;
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "undefined";
__n101["right"] := __n105;
__n100["test"] := __n101;
__n106 := {  };
__n106["type"] := "BlockStatement";
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "$ERROR";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "+";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "#4: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[2] === undefined. Actual: ";
__n113["raw"] := "'#4: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[2] === undefined. Actual: '";
__n112["left"] := __n113;
__n114 := {  };
__n114["type"] := "MemberExpression";
__n114["computed"] := true;
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "x";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 2.;
__n116["raw"] := "2";
__n114["property"] := __n116;
__n112["right"] := __n114;
__n111 := [ __n112 ];
__n109["arguments"] := __n111;
__n108["expression"] := __n109;
__n107 := [ __n108 ];
__n106["body"] := __n107;
__n100["consequent"] := __n106;
__n100["alternate"] := null;
__n117 := {  };
__n117["type"] := "IfStatement";
__n118 := {  };
__n118["type"] := "BinaryExpression";
__n118["operator"] := "!==";
__n119 := {  };
__n119["type"] := "MemberExpression";
__n119["computed"] := true;
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "x";
__n119["object"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := 3.;
__n121["raw"] := "3";
__n119["property"] := __n121;
__n118["left"] := __n119;
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "undefined";
__n118["right"] := __n122;
__n117["test"] := __n118;
__n123 := {  };
__n123["type"] := "BlockStatement";
__n125 := {  };
__n125["type"] := "ExpressionStatement";
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "$ERROR";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "BinaryExpression";
__n129["operator"] := "+";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "#5: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[3] === undefined. Actual: ";
__n130["raw"] := "'#5: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[3] === undefined. Actual: '";
__n129["left"] := __n130;
__n131 := {  };
__n131["type"] := "MemberExpression";
__n131["computed"] := true;
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "x";
__n131["object"] := __n132;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := 3.;
__n133["raw"] := "3";
__n131["property"] := __n133;
__n129["right"] := __n131;
__n128 := [ __n129 ];
__n126["arguments"] := __n128;
__n125["expression"] := __n126;
__n124 := [ __n125 ];
__n123["body"] := __n124;
__n117["consequent"] := __n123;
__n117["alternate"] := null;
__n134 := {  };
__n134["type"] := "IfStatement";
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "!==";
__n136 := {  };
__n136["type"] := "MemberExpression";
__n136["computed"] := true;
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "x";
__n136["object"] := __n137;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := 4.;
__n138["raw"] := "4";
__n136["property"] := __n138;
__n135["left"] := __n136;
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "undefined";
__n135["right"] := __n139;
__n134["test"] := __n135;
__n140 := {  };
__n140["type"] := "BlockStatement";
__n142 := {  };
__n142["type"] := "ExpressionStatement";
__n143 := {  };
__n143["type"] := "CallExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "$ERROR";
__n143["callee"] := __n144;
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "+";
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "#6: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[4] === undefined. Actual: ";
__n147["raw"] := "'#6: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[4] === undefined. Actual: '";
__n146["left"] := __n147;
__n148 := {  };
__n148["type"] := "MemberExpression";
__n148["computed"] := true;
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "x";
__n148["object"] := __n149;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 4.;
__n150["raw"] := "4";
__n148["property"] := __n150;
__n146["right"] := __n148;
__n145 := [ __n146 ];
__n143["arguments"] := __n145;
__n142["expression"] := __n143;
__n141 := [ __n142 ];
__n140["body"] := __n141;
__n134["consequent"] := __n140;
__n134["alternate"] := null;
__n151 := {  };
__n151["type"] := "IfStatement";
__n152 := {  };
__n152["type"] := "BinaryExpression";
__n152["operator"] := "!==";
__n153 := {  };
__n153["type"] := "MemberExpression";
__n153["computed"] := true;
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "x";
__n153["object"] := __n154;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := 5.;
__n155["raw"] := "5";
__n153["property"] := __n155;
__n152["left"] := __n153;
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "undefined";
__n152["right"] := __n156;
__n151["test"] := __n152;
__n157 := {  };
__n157["type"] := "BlockStatement";
__n159 := {  };
__n159["type"] := "ExpressionStatement";
__n160 := {  };
__n160["type"] := "CallExpression";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "$ERROR";
__n160["callee"] := __n161;
__n163 := {  };
__n163["type"] := "BinaryExpression";
__n163["operator"] := "+";
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := "#7: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[5] === undefined. Actual: ";
__n164["raw"] := "'#7: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[5] === undefined. Actual: '";
__n163["left"] := __n164;
__n165 := {  };
__n165["type"] := "MemberExpression";
__n165["computed"] := true;
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "x";
__n165["object"] := __n166;
__n167 := {  };
__n167["type"] := "Literal";
__n167["value"] := 5.;
__n167["raw"] := "5";
__n165["property"] := __n167;
__n163["right"] := __n165;
__n162 := [ __n163 ];
__n160["arguments"] := __n162;
__n159["expression"] := __n160;
__n158 := [ __n159 ];
__n157["body"] := __n158;
__n151["consequent"] := __n157;
__n151["alternate"] := null;
__n168 := {  };
__n168["type"] := "IfStatement";
__n169 := {  };
__n169["type"] := "BinaryExpression";
__n169["operator"] := "!==";
__n170 := {  };
__n170["type"] := "MemberExpression";
__n170["computed"] := true;
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "x";
__n170["object"] := __n171;
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := 6.;
__n172["raw"] := "6";
__n170["property"] := __n172;
__n169["left"] := __n170;
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "undefined";
__n169["right"] := __n173;
__n168["test"] := __n169;
__n174 := {  };
__n174["type"] := "BlockStatement";
__n176 := {  };
__n176["type"] := "ExpressionStatement";
__n177 := {  };
__n177["type"] := "CallExpression";
__n178 := {  };
__n178["type"] := "Identifier";
__n178["name"] := "$ERROR";
__n177["callee"] := __n178;
__n180 := {  };
__n180["type"] := "BinaryExpression";
__n180["operator"] := "+";
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := "#8: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[6] === undefined. Actual: ";
__n181["raw"] := "'#8: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[6] === undefined. Actual: '";
__n180["left"] := __n181;
__n182 := {  };
__n182["type"] := "MemberExpression";
__n182["computed"] := true;
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "x";
__n182["object"] := __n183;
__n184 := {  };
__n184["type"] := "Literal";
__n184["value"] := 6.;
__n184["raw"] := "6";
__n182["property"] := __n184;
__n180["right"] := __n182;
__n179 := [ __n180 ];
__n177["arguments"] := __n179;
__n176["expression"] := __n177;
__n175 := [ __n176 ];
__n174["body"] := __n175;
__n168["consequent"] := __n174;
__n168["alternate"] := null;
__n185 := {  };
__n185["type"] := "IfStatement";
__n186 := {  };
__n186["type"] := "BinaryExpression";
__n186["operator"] := "!==";
__n187 := {  };
__n187["type"] := "MemberExpression";
__n187["computed"] := true;
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "x";
__n187["object"] := __n188;
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := 7.;
__n189["raw"] := "7";
__n187["property"] := __n189;
__n186["left"] := __n187;
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "Infinity";
__n186["right"] := __n190;
__n185["test"] := __n186;
__n191 := {  };
__n191["type"] := "BlockStatement";
__n193 := {  };
__n193["type"] := "ExpressionStatement";
__n194 := {  };
__n194["type"] := "CallExpression";
__n195 := {  };
__n195["type"] := "Identifier";
__n195["name"] := "$ERROR";
__n194["callee"] := __n195;
__n197 := {  };
__n197["type"] := "BinaryExpression";
__n197["operator"] := "+";
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := "#9: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[7] === Infinity. Actual: ";
__n198["raw"] := "'#9: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[7] === Infinity. Actual: '";
__n197["left"] := __n198;
__n199 := {  };
__n199["type"] := "MemberExpression";
__n199["computed"] := true;
__n200 := {  };
__n200["type"] := "Identifier";
__n200["name"] := "x";
__n199["object"] := __n200;
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := 7.;
__n201["raw"] := "7";
__n199["property"] := __n201;
__n197["right"] := __n199;
__n196 := [ __n197 ];
__n194["arguments"] := __n196;
__n193["expression"] := __n194;
__n192 := [ __n193 ];
__n191["body"] := __n192;
__n185["consequent"] := __n191;
__n185["alternate"] := null;
__n202 := {  };
__n202["type"] := "IfStatement";
__n203 := {  };
__n203["type"] := "BinaryExpression";
__n203["operator"] := "!==";
__n204 := {  };
__n204["type"] := "MemberExpression";
__n204["computed"] := true;
__n205 := {  };
__n205["type"] := "Identifier";
__n205["name"] := "x";
__n204["object"] := __n205;
__n206 := {  };
__n206["type"] := "Literal";
__n206["value"] := 8.;
__n206["raw"] := "8";
__n204["property"] := __n206;
__n203["left"] := __n204;
__n207 := {  };
__n207["type"] := "Identifier";
__n207["name"] := "undefined";
__n203["right"] := __n207;
__n202["test"] := __n203;
__n208 := {  };
__n208["type"] := "BlockStatement";
__n210 := {  };
__n210["type"] := "ExpressionStatement";
__n211 := {  };
__n211["type"] := "CallExpression";
__n212 := {  };
__n212["type"] := "Identifier";
__n212["name"] := "$ERROR";
__n211["callee"] := __n212;
__n214 := {  };
__n214["type"] := "BinaryExpression";
__n214["operator"] := "+";
__n215 := {  };
__n215["type"] := "Literal";
__n215["value"] := "#10: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[8] === undefined. Actual: ";
__n215["raw"] := "'#10: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[8] === undefined. Actual: '";
__n214["left"] := __n215;
__n216 := {  };
__n216["type"] := "MemberExpression";
__n216["computed"] := true;
__n217 := {  };
__n217["type"] := "Identifier";
__n217["name"] := "x";
__n216["object"] := __n217;
__n218 := {  };
__n218["type"] := "Literal";
__n218["value"] := 8.;
__n218["raw"] := "8";
__n216["property"] := __n218;
__n214["right"] := __n216;
__n213 := [ __n214 ];
__n211["arguments"] := __n213;
__n210["expression"] := __n211;
__n209 := [ __n210 ];
__n208["body"] := __n209;
__n202["consequent"] := __n208;
__n202["alternate"] := null;
__n219 := {  };
__n219["type"] := "IfStatement";
__n220 := {  };
__n220["type"] := "BinaryExpression";
__n220["operator"] := "!==";
__n221 := {  };
__n221["type"] := "MemberExpression";
__n221["computed"] := true;
__n222 := {  };
__n222["type"] := "Identifier";
__n222["name"] := "x";
__n221["object"] := __n222;
__n223 := {  };
__n223["type"] := "Literal";
__n223["value"] := 9.;
__n223["raw"] := "9";
__n221["property"] := __n223;
__n220["left"] := __n221;
__n224 := {  };
__n224["type"] := "Literal";
__n224["value"] := true;
__n224["raw"] := "true";
__n220["right"] := __n224;
__n219["test"] := __n220;
__n225 := {  };
__n225["type"] := "BlockStatement";
__n227 := {  };
__n227["type"] := "ExpressionStatement";
__n228 := {  };
__n228["type"] := "CallExpression";
__n229 := {  };
__n229["type"] := "Identifier";
__n229["name"] := "$ERROR";
__n228["callee"] := __n229;
__n231 := {  };
__n231["type"] := "BinaryExpression";
__n231["operator"] := "+";
__n232 := {  };
__n232["type"] := "Literal";
__n232["value"] := "#11: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[9] === true. Actual: ";
__n232["raw"] := "'#11: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x[9] === true. Actual: '";
__n231["left"] := __n232;
__n233 := {  };
__n233["type"] := "MemberExpression";
__n233["computed"] := true;
__n234 := {  };
__n234["type"] := "Identifier";
__n234["name"] := "x";
__n233["object"] := __n234;
__n235 := {  };
__n235["type"] := "Literal";
__n235["value"] := 9.;
__n235["raw"] := "9";
__n233["property"] := __n235;
__n231["right"] := __n233;
__n230 := [ __n231 ];
__n228["arguments"] := __n230;
__n227["expression"] := __n228;
__n226 := [ __n227 ];
__n225["body"] := __n226;
__n219["consequent"] := __n225;
__n219["alternate"] := null;
__n236 := {  };
__n236["type"] := "ExpressionStatement";
__n237 := {  };
__n237["type"] := "AssignmentExpression";
__n237["operator"] := "=";
__n238 := {  };
__n238["type"] := "MemberExpression";
__n239 := {  };
__n239["type"] := "Identifier";
__n239["name"] := "x";
__n238["object"] := __n239;
__n240 := {  };
__n240["type"] := "Literal";
__n240["value"] := "length";
__n240["raw"] := "\"length\"";
__n238["property"] := __n240;
__n238["computed"] := true;
__n237["left"] := __n238;
__n241 := {  };
__n241["type"] := "Literal";
__n241["value"] := 9.;
__n241["raw"] := "9";
__n237["right"] := __n241;
__n236["expression"] := __n237;
__n242 := {  };
__n242["type"] := "VariableDeclaration";
__n244 := {  };
__n244["type"] := "VariableDeclarator";
__n245 := {  };
__n245["type"] := "Identifier";
__n245["name"] := "reverse";
__n244["id"] := __n245;
__n246 := {  };
__n246["type"] := "CallExpression";
__n247 := {  };
__n247["type"] := "MemberExpression";
__n248 := {  };
__n248["type"] := "Identifier";
__n248["name"] := "x";
__n247["object"] := __n248;
__n249 := {  };
__n249["type"] := "Literal";
__n249["value"] := "reverse";
__n249["raw"] := "\"reverse\"";
__n247["property"] := __n249;
__n247["computed"] := true;
__n246["callee"] := __n247;
__n250 := [  ];
__n246["arguments"] := __n250;
__n244["init"] := __n246;
__n243 := [ __n244 ];
__n242["declarations"] := __n243;
__n242["kind"] := "var";
__n251 := {  };
__n251["type"] := "IfStatement";
__n252 := {  };
__n252["type"] := "BinaryExpression";
__n252["operator"] := "!==";
__n253 := {  };
__n253["type"] := "Identifier";
__n253["name"] := "reverse";
__n252["left"] := __n253;
__n254 := {  };
__n254["type"] := "Identifier";
__n254["name"] := "x";
__n252["right"] := __n254;
__n251["test"] := __n252;
__n255 := {  };
__n255["type"] := "BlockStatement";
__n257 := {  };
__n257["type"] := "ExpressionStatement";
__n258 := {  };
__n258["type"] := "CallExpression";
__n259 := {  };
__n259["type"] := "Identifier";
__n259["name"] := "$ERROR";
__n258["callee"] := __n259;
__n261 := {  };
__n261["type"] := "BinaryExpression";
__n261["operator"] := "+";
__n262 := {  };
__n262["type"] := "Literal";
__n262["value"] := "#1: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse() === x. Actual: ";
__n262["raw"] := "'#1: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse() === x. Actual: '";
__n261["left"] := __n262;
__n263 := {  };
__n263["type"] := "Identifier";
__n263["name"] := "reverse";
__n261["right"] := __n263;
__n260 := [ __n261 ];
__n258["arguments"] := __n260;
__n257["expression"] := __n258;
__n256 := [ __n257 ];
__n255["body"] := __n256;
__n251["consequent"] := __n255;
__n251["alternate"] := null;
__n264 := {  };
__n264["type"] := "IfStatement";
__n265 := {  };
__n265["type"] := "BinaryExpression";
__n265["operator"] := "!==";
__n266 := {  };
__n266["type"] := "MemberExpression";
__n266["computed"] := true;
__n267 := {  };
__n267["type"] := "Identifier";
__n267["name"] := "x";
__n266["object"] := __n267;
__n268 := {  };
__n268["type"] := "Literal";
__n268["value"] := 0.;
__n268["raw"] := "0";
__n266["property"] := __n268;
__n265["left"] := __n266;
__n269 := {  };
__n269["type"] := "Identifier";
__n269["name"] := "undefined";
__n265["right"] := __n269;
__n264["test"] := __n265;
__n270 := {  };
__n270["type"] := "BlockStatement";
__n272 := {  };
__n272["type"] := "ExpressionStatement";
__n273 := {  };
__n273["type"] := "CallExpression";
__n274 := {  };
__n274["type"] := "Identifier";
__n274["name"] := "$ERROR";
__n273["callee"] := __n274;
__n276 := {  };
__n276["type"] := "BinaryExpression";
__n276["operator"] := "+";
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := "#12: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[0] === undefined. Actual: ";
__n277["raw"] := "'#12: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[0] === undefined. Actual: '";
__n276["left"] := __n277;
__n278 := {  };
__n278["type"] := "MemberExpression";
__n278["computed"] := true;
__n279 := {  };
__n279["type"] := "Identifier";
__n279["name"] := "x";
__n278["object"] := __n279;
__n280 := {  };
__n280["type"] := "Literal";
__n280["value"] := 0.;
__n280["raw"] := "0";
__n278["property"] := __n280;
__n276["right"] := __n278;
__n275 := [ __n276 ];
__n273["arguments"] := __n275;
__n272["expression"] := __n273;
__n271 := [ __n272 ];
__n270["body"] := __n271;
__n264["consequent"] := __n270;
__n264["alternate"] := null;
__n281 := {  };
__n281["type"] := "IfStatement";
__n282 := {  };
__n282["type"] := "BinaryExpression";
__n282["operator"] := "!==";
__n283 := {  };
__n283["type"] := "MemberExpression";
__n283["computed"] := true;
__n284 := {  };
__n284["type"] := "Identifier";
__n284["name"] := "x";
__n283["object"] := __n284;
__n285 := {  };
__n285["type"] := "Literal";
__n285["value"] := 1.;
__n285["raw"] := "1";
__n283["property"] := __n285;
__n282["left"] := __n283;
__n286 := {  };
__n286["type"] := "Identifier";
__n286["name"] := "Infinity";
__n282["right"] := __n286;
__n281["test"] := __n282;
__n287 := {  };
__n287["type"] := "BlockStatement";
__n289 := {  };
__n289["type"] := "ExpressionStatement";
__n290 := {  };
__n290["type"] := "CallExpression";
__n291 := {  };
__n291["type"] := "Identifier";
__n291["name"] := "$ERROR";
__n290["callee"] := __n291;
__n293 := {  };
__n293["type"] := "BinaryExpression";
__n293["operator"] := "+";
__n294 := {  };
__n294["type"] := "Literal";
__n294["value"] := "#13: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[1] === Infinity. Actual: ";
__n294["raw"] := "'#13: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[1] === Infinity. Actual: '";
__n293["left"] := __n294;
__n295 := {  };
__n295["type"] := "MemberExpression";
__n295["computed"] := true;
__n296 := {  };
__n296["type"] := "Identifier";
__n296["name"] := "x";
__n295["object"] := __n296;
__n297 := {  };
__n297["type"] := "Literal";
__n297["value"] := 1.;
__n297["raw"] := "1";
__n295["property"] := __n297;
__n293["right"] := __n295;
__n292 := [ __n293 ];
__n290["arguments"] := __n292;
__n289["expression"] := __n290;
__n288 := [ __n289 ];
__n287["body"] := __n288;
__n281["consequent"] := __n287;
__n281["alternate"] := null;
__n298 := {  };
__n298["type"] := "IfStatement";
__n299 := {  };
__n299["type"] := "BinaryExpression";
__n299["operator"] := "!==";
__n300 := {  };
__n300["type"] := "MemberExpression";
__n300["computed"] := true;
__n301 := {  };
__n301["type"] := "Identifier";
__n301["name"] := "x";
__n300["object"] := __n301;
__n302 := {  };
__n302["type"] := "Literal";
__n302["value"] := 2.;
__n302["raw"] := "2";
__n300["property"] := __n302;
__n299["left"] := __n300;
__n303 := {  };
__n303["type"] := "Identifier";
__n303["name"] := "undefined";
__n299["right"] := __n303;
__n298["test"] := __n299;
__n304 := {  };
__n304["type"] := "BlockStatement";
__n306 := {  };
__n306["type"] := "ExpressionStatement";
__n307 := {  };
__n307["type"] := "CallExpression";
__n308 := {  };
__n308["type"] := "Identifier";
__n308["name"] := "$ERROR";
__n307["callee"] := __n308;
__n310 := {  };
__n310["type"] := "BinaryExpression";
__n310["operator"] := "+";
__n311 := {  };
__n311["type"] := "Literal";
__n311["value"] := "#14: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[2] === undefined. Actual: ";
__n311["raw"] := "'#14: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[2] === undefined. Actual: '";
__n310["left"] := __n311;
__n312 := {  };
__n312["type"] := "MemberExpression";
__n312["computed"] := true;
__n313 := {  };
__n313["type"] := "Identifier";
__n313["name"] := "x";
__n312["object"] := __n313;
__n314 := {  };
__n314["type"] := "Literal";
__n314["value"] := 2.;
__n314["raw"] := "2";
__n312["property"] := __n314;
__n310["right"] := __n312;
__n309 := [ __n310 ];
__n307["arguments"] := __n309;
__n306["expression"] := __n307;
__n305 := [ __n306 ];
__n304["body"] := __n305;
__n298["consequent"] := __n304;
__n298["alternate"] := null;
__n315 := {  };
__n315["type"] := "IfStatement";
__n316 := {  };
__n316["type"] := "BinaryExpression";
__n316["operator"] := "!==";
__n317 := {  };
__n317["type"] := "MemberExpression";
__n317["computed"] := true;
__n318 := {  };
__n318["type"] := "Identifier";
__n318["name"] := "x";
__n317["object"] := __n318;
__n319 := {  };
__n319["type"] := "Literal";
__n319["value"] := 3.;
__n319["raw"] := "3";
__n317["property"] := __n319;
__n316["left"] := __n317;
__n320 := {  };
__n320["type"] := "Identifier";
__n320["name"] := "undefined";
__n316["right"] := __n320;
__n315["test"] := __n316;
__n321 := {  };
__n321["type"] := "BlockStatement";
__n323 := {  };
__n323["type"] := "ExpressionStatement";
__n324 := {  };
__n324["type"] := "CallExpression";
__n325 := {  };
__n325["type"] := "Identifier";
__n325["name"] := "$ERROR";
__n324["callee"] := __n325;
__n327 := {  };
__n327["type"] := "BinaryExpression";
__n327["operator"] := "+";
__n328 := {  };
__n328["type"] := "Literal";
__n328["value"] := "#15: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[3] === undefined. Actual: ";
__n328["raw"] := "'#15: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[3] === undefined. Actual: '";
__n327["left"] := __n328;
__n329 := {  };
__n329["type"] := "MemberExpression";
__n329["computed"] := true;
__n330 := {  };
__n330["type"] := "Identifier";
__n330["name"] := "x";
__n329["object"] := __n330;
__n331 := {  };
__n331["type"] := "Literal";
__n331["value"] := 3.;
__n331["raw"] := "3";
__n329["property"] := __n331;
__n327["right"] := __n329;
__n326 := [ __n327 ];
__n324["arguments"] := __n326;
__n323["expression"] := __n324;
__n322 := [ __n323 ];
__n321["body"] := __n322;
__n315["consequent"] := __n321;
__n315["alternate"] := null;
__n332 := {  };
__n332["type"] := "IfStatement";
__n333 := {  };
__n333["type"] := "BinaryExpression";
__n333["operator"] := "!==";
__n334 := {  };
__n334["type"] := "MemberExpression";
__n334["computed"] := true;
__n335 := {  };
__n335["type"] := "Identifier";
__n335["name"] := "x";
__n334["object"] := __n335;
__n336 := {  };
__n336["type"] := "Literal";
__n336["value"] := 4.;
__n336["raw"] := "4";
__n334["property"] := __n336;
__n333["left"] := __n334;
__n337 := {  };
__n337["type"] := "Identifier";
__n337["name"] := "undefined";
__n333["right"] := __n337;
__n332["test"] := __n333;
__n338 := {  };
__n338["type"] := "BlockStatement";
__n340 := {  };
__n340["type"] := "ExpressionStatement";
__n341 := {  };
__n341["type"] := "CallExpression";
__n342 := {  };
__n342["type"] := "Identifier";
__n342["name"] := "$ERROR";
__n341["callee"] := __n342;
__n344 := {  };
__n344["type"] := "BinaryExpression";
__n344["operator"] := "+";
__n345 := {  };
__n345["type"] := "Literal";
__n345["value"] := "#16: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[4] === undefined. Actual: ";
__n345["raw"] := "'#16: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[4] === undefined. Actual: '";
__n344["left"] := __n345;
__n346 := {  };
__n346["type"] := "MemberExpression";
__n346["computed"] := true;
__n347 := {  };
__n347["type"] := "Identifier";
__n347["name"] := "x";
__n346["object"] := __n347;
__n348 := {  };
__n348["type"] := "Literal";
__n348["value"] := 4.;
__n348["raw"] := "4";
__n346["property"] := __n348;
__n344["right"] := __n346;
__n343 := [ __n344 ];
__n341["arguments"] := __n343;
__n340["expression"] := __n341;
__n339 := [ __n340 ];
__n338["body"] := __n339;
__n332["consequent"] := __n338;
__n332["alternate"] := null;
__n349 := {  };
__n349["type"] := "IfStatement";
__n350 := {  };
__n350["type"] := "BinaryExpression";
__n350["operator"] := "!==";
__n351 := {  };
__n351["type"] := "MemberExpression";
__n351["computed"] := true;
__n352 := {  };
__n352["type"] := "Identifier";
__n352["name"] := "x";
__n351["object"] := __n352;
__n353 := {  };
__n353["type"] := "Literal";
__n353["value"] := 5.;
__n353["raw"] := "5";
__n351["property"] := __n353;
__n350["left"] := __n351;
__n354 := {  };
__n354["type"] := "Identifier";
__n354["name"] := "undefined";
__n350["right"] := __n354;
__n349["test"] := __n350;
__n355 := {  };
__n355["type"] := "BlockStatement";
__n357 := {  };
__n357["type"] := "ExpressionStatement";
__n358 := {  };
__n358["type"] := "CallExpression";
__n359 := {  };
__n359["type"] := "Identifier";
__n359["name"] := "$ERROR";
__n358["callee"] := __n359;
__n361 := {  };
__n361["type"] := "BinaryExpression";
__n361["operator"] := "+";
__n362 := {  };
__n362["type"] := "Literal";
__n362["value"] := "#17: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[5] === undefined. Actual: ";
__n362["raw"] := "'#17: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[5] === undefined. Actual: '";
__n361["left"] := __n362;
__n363 := {  };
__n363["type"] := "MemberExpression";
__n363["computed"] := true;
__n364 := {  };
__n364["type"] := "Identifier";
__n364["name"] := "x";
__n363["object"] := __n364;
__n365 := {  };
__n365["type"] := "Literal";
__n365["value"] := 5.;
__n365["raw"] := "5";
__n363["property"] := __n365;
__n361["right"] := __n363;
__n360 := [ __n361 ];
__n358["arguments"] := __n360;
__n357["expression"] := __n358;
__n356 := [ __n357 ];
__n355["body"] := __n356;
__n349["consequent"] := __n355;
__n349["alternate"] := null;
__n366 := {  };
__n366["type"] := "IfStatement";
__n367 := {  };
__n367["type"] := "BinaryExpression";
__n367["operator"] := "!==";
__n368 := {  };
__n368["type"] := "MemberExpression";
__n368["computed"] := true;
__n369 := {  };
__n369["type"] := "Identifier";
__n369["name"] := "x";
__n368["object"] := __n369;
__n370 := {  };
__n370["type"] := "Literal";
__n370["value"] := 6.;
__n370["raw"] := "6";
__n368["property"] := __n370;
__n367["left"] := __n368;
__n371 := {  };
__n371["type"] := "Identifier";
__n371["name"] := "undefined";
__n367["right"] := __n371;
__n366["test"] := __n367;
__n372 := {  };
__n372["type"] := "BlockStatement";
__n374 := {  };
__n374["type"] := "ExpressionStatement";
__n375 := {  };
__n375["type"] := "CallExpression";
__n376 := {  };
__n376["type"] := "Identifier";
__n376["name"] := "$ERROR";
__n375["callee"] := __n376;
__n378 := {  };
__n378["type"] := "BinaryExpression";
__n378["operator"] := "+";
__n379 := {  };
__n379["type"] := "Literal";
__n379["value"] := "#18: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[6] === undefined. Actual: ";
__n379["raw"] := "'#18: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[6] === undefined. Actual: '";
__n378["left"] := __n379;
__n380 := {  };
__n380["type"] := "MemberExpression";
__n380["computed"] := true;
__n381 := {  };
__n381["type"] := "Identifier";
__n381["name"] := "x";
__n380["object"] := __n381;
__n382 := {  };
__n382["type"] := "Literal";
__n382["value"] := 6.;
__n382["raw"] := "6";
__n380["property"] := __n382;
__n378["right"] := __n380;
__n377 := [ __n378 ];
__n375["arguments"] := __n377;
__n374["expression"] := __n375;
__n373 := [ __n374 ];
__n372["body"] := __n373;
__n366["consequent"] := __n372;
__n366["alternate"] := null;
__n383 := {  };
__n383["type"] := "IfStatement";
__n384 := {  };
__n384["type"] := "BinaryExpression";
__n384["operator"] := "!==";
__n385 := {  };
__n385["type"] := "MemberExpression";
__n385["computed"] := true;
__n386 := {  };
__n386["type"] := "Identifier";
__n386["name"] := "x";
__n385["object"] := __n386;
__n387 := {  };
__n387["type"] := "Literal";
__n387["value"] := 7.;
__n387["raw"] := "7";
__n385["property"] := __n387;
__n384["left"] := __n385;
__n388 := {  };
__n388["type"] := "Literal";
__n388["value"] := "NaN";
__n388["raw"] := "\"NaN\"";
__n384["right"] := __n388;
__n383["test"] := __n384;
__n389 := {  };
__n389["type"] := "BlockStatement";
__n391 := {  };
__n391["type"] := "ExpressionStatement";
__n392 := {  };
__n392["type"] := "CallExpression";
__n393 := {  };
__n393["type"] := "Identifier";
__n393["name"] := "$ERROR";
__n392["callee"] := __n393;
__n395 := {  };
__n395["type"] := "BinaryExpression";
__n395["operator"] := "+";
__n396 := {  };
__n396["type"] := "Literal";
__n396["value"] := "#19: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[7] === \"NaN\". Actual: ";
__n396["raw"] := "'#19: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[7] === \"NaN\". Actual: '";
__n395["left"] := __n396;
__n397 := {  };
__n397["type"] := "MemberExpression";
__n397["computed"] := true;
__n398 := {  };
__n398["type"] := "Identifier";
__n398["name"] := "x";
__n397["object"] := __n398;
__n399 := {  };
__n399["type"] := "Literal";
__n399["value"] := 7.;
__n399["raw"] := "7";
__n397["property"] := __n399;
__n395["right"] := __n397;
__n394 := [ __n395 ];
__n392["arguments"] := __n394;
__n391["expression"] := __n392;
__n390 := [ __n391 ];
__n389["body"] := __n390;
__n383["consequent"] := __n389;
__n383["alternate"] := null;
__n400 := {  };
__n400["type"] := "IfStatement";
__n401 := {  };
__n401["type"] := "BinaryExpression";
__n401["operator"] := "!==";
__n402 := {  };
__n402["type"] := "MemberExpression";
__n402["computed"] := true;
__n403 := {  };
__n403["type"] := "Identifier";
__n403["name"] := "x";
__n402["object"] := __n403;
__n404 := {  };
__n404["type"] := "Literal";
__n404["value"] := 8.;
__n404["raw"] := "8";
__n402["property"] := __n404;
__n401["left"] := __n402;
__n405 := {  };
__n405["type"] := "Literal";
__n405["value"] := "-1";
__n405["raw"] := "\"-1\"";
__n401["right"] := __n405;
__n400["test"] := __n401;
__n406 := {  };
__n406["type"] := "BlockStatement";
__n408 := {  };
__n408["type"] := "ExpressionStatement";
__n409 := {  };
__n409["type"] := "CallExpression";
__n410 := {  };
__n410["type"] := "Identifier";
__n410["name"] := "$ERROR";
__n409["callee"] := __n410;
__n412 := {  };
__n412["type"] := "BinaryExpression";
__n412["operator"] := "+";
__n413 := {  };
__n413["type"] := "Literal";
__n413["value"] := "#20: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[8] === \"-1\". Actual: ";
__n413["raw"] := "'#20: x = []; x[0] = true; x[2] = Infinity; x[4] = undefined; x[5] = undefined; x[8] = \"NaN\"; x[9] = \"-1\"; x.reverse(); x.length = 9; x.reverse(); x[8] === \"-1\". Actual: '";
__n412["left"] := __n413;
__n414 := {  };
__n414["type"] := "MemberExpression";
__n414["computed"] := true;
__n415 := {  };
__n415["type"] := "Identifier";
__n415["name"] := "x";
__n414["object"] := __n415;
__n416 := {  };
__n416["type"] := "Literal";
__n416["value"] := 8.;
__n416["raw"] := "8";
__n414["property"] := __n416;
__n412["right"] := __n414;
__n411 := [ __n412 ];
__n409["arguments"] := __n411;
__n408["expression"] := __n409;
__n407 := [ __n408 ];
__n406["body"] := __n407;
__n400["consequent"] := __n406;
__n400["alternate"] := null;
__n1 := [ __n2, __n8, __n14, __n20, __n26, __n32, __n38, __n44, __n53, __n66, __n83, __n100, __n117, __n134, __n151, __n168, __n185, __n202, __n219, __n236, __n242, __n251, __n264, __n281, __n298, __n315, __n332, __n349, __n366, __n383, __n400 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n417 := [ "x", "reverse" ];
__n0["variableDeclarations"] := __n417;
__n418 := [  ];
__n0["functionDeclarations"] := __n418;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}