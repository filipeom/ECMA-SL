function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 0.;
__n8["raw"] := "0";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 2.;
__n10["raw"] := "2";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 3.;
__n11["raw"] := "3";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 4.;
__n12["raw"] := "4";
__n7 := [ __n8, __n9, __n10, __n11, __n12 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arr";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "x";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "slice";
__n20["raw"] := "\"slice\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 3.;
__n22["raw"] := "3";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 6.;
__n23["raw"] := "6";
__n21 := [ __n22, __n23 ];
__n17["arguments"] := __n21;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "AssignmentExpression";
__n25["operator"] := "=";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "arr";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "getClass";
__n28["raw"] := "\"getClass\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["left"] := __n26;
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Object";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "prototype";
__n32["raw"] := "\"prototype\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["object"] := __n30;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "toString";
__n33["raw"] := "\"toString\"";
__n29["property"] := __n33;
__n29["computed"] := true;
__n25["right"] := __n29;
__n24["expression"] := __n25;
__n34 := {  };
__n34["type"] := "IfStatement";
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "!==";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "arr";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "getClass";
__n39["raw"] := "\"getClass\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n40 := [  ];
__n36["arguments"] := __n40;
__n35["left"] := __n36;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "+";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "[object ";
__n43["raw"] := "\"[object \"";
__n42["left"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "Array";
__n44["raw"] := "\"Array\"";
__n42["right"] := __n44;
__n41["left"] := __n42;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "]";
__n45["raw"] := "\"]\"";
__n41["right"] := __n45;
__n35["right"] := __n41;
__n34["test"] := __n35;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "$ERROR";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#1: var x = [0,1,2,3,4]; var arr = x.slice(3,6); arr is Array object. Actual: ";
__n53["raw"] := "'#1: var x = [0,1,2,3,4]; var arr = x.slice(3,6); arr is Array object. Actual: '";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "arr";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "getClass";
__n57["raw"] := "\"getClass\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n58 := [  ];
__n54["arguments"] := __n58;
__n52["right"] := __n54;
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["expression"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n34["consequent"] := __n46;
__n34["alternate"] := null;
__n59 := {  };
__n59["type"] := "IfStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "!==";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "arr";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "length";
__n63["raw"] := "\"length\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["left"] := __n61;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 2.;
__n64["raw"] := "2";
__n60["right"] := __n64;
__n59["test"] := __n60;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "$ERROR";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "+";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "#2: var x = [0,1,2,3,4]; var arr = x.slice(3,6); arr.length === 2. Actual: ";
__n72["raw"] := "'#2: var x = [0,1,2,3,4]; var arr = x.slice(3,6); arr.length === 2. Actual: '";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "arr";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "length";
__n75["raw"] := "\"length\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n71["right"] := __n73;
__n70 := [ __n71 ];
__n68["arguments"] := __n70;
__n67["expression"] := __n68;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n59["consequent"] := __n65;
__n59["alternate"] := null;
__n76 := {  };
__n76["type"] := "IfStatement";
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "!==";
__n78 := {  };
__n78["type"] := "MemberExpression";
__n78["computed"] := true;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "arr";
__n78["object"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 0.;
__n80["raw"] := "0";
__n78["property"] := __n80;
__n77["left"] := __n78;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 3.;
__n81["raw"] := "3";
__n77["right"] := __n81;
__n76["test"] := __n77;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$ERROR";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "+";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "#3: var x = [0,1,2,3,4]; var arr = x.slice(3,6); arr[0] === 3. Actual: ";
__n89["raw"] := "'#3: var x = [0,1,2,3,4]; var arr = x.slice(3,6); arr[0] === 3. Actual: '";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "MemberExpression";
__n90["computed"] := true;
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "arr";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 0.;
__n92["raw"] := "0";
__n90["property"] := __n92;
__n88["right"] := __n90;
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n76["consequent"] := __n82;
__n76["alternate"] := null;
__n93 := {  };
__n93["type"] := "IfStatement";
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "!==";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n95["computed"] := true;
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "arr";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 1.;
__n97["raw"] := "1";
__n95["property"] := __n97;
__n94["left"] := __n95;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 4.;
__n98["raw"] := "4";
__n94["right"] := __n98;
__n93["test"] := __n94;
__n99 := {  };
__n99["type"] := "BlockStatement";
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "$ERROR";
__n102["callee"] := __n103;
__n105 := {  };
__n105["type"] := "BinaryExpression";
__n105["operator"] := "+";
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "#4: var x = [0,1,2,3,4]; var arr = x.slice(3,6); arr[1] === 4. Actual: ";
__n106["raw"] := "'#4: var x = [0,1,2,3,4]; var arr = x.slice(3,6); arr[1] === 4. Actual: '";
__n105["left"] := __n106;
__n107 := {  };
__n107["type"] := "MemberExpression";
__n107["computed"] := true;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "arr";
__n107["object"] := __n108;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := 1.;
__n109["raw"] := "1";
__n107["property"] := __n109;
__n105["right"] := __n107;
__n104 := [ __n105 ];
__n102["arguments"] := __n104;
__n101["expression"] := __n102;
__n100 := [ __n101 ];
__n99["body"] := __n100;
__n93["consequent"] := __n99;
__n93["alternate"] := null;
__n110 := {  };
__n110["type"] := "IfStatement";
__n111 := {  };
__n111["type"] := "BinaryExpression";
__n111["operator"] := "!==";
__n112 := {  };
__n112["type"] := "MemberExpression";
__n112["computed"] := true;
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "arr";
__n112["object"] := __n113;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := 3.;
__n114["raw"] := "3";
__n112["property"] := __n114;
__n111["left"] := __n112;
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "undefined";
__n111["right"] := __n115;
__n110["test"] := __n111;
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "$ERROR";
__n119["callee"] := __n120;
__n122 := {  };
__n122["type"] := "BinaryExpression";
__n122["operator"] := "+";
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "#5: var x = [0,1,2,3,4]; var arr = x.slice(3,6); arr[3] === undefined. Actual: ";
__n123["raw"] := "'#5: var x = [0,1,2,3,4]; var arr = x.slice(3,6); arr[3] === undefined. Actual: '";
__n122["left"] := __n123;
__n124 := {  };
__n124["type"] := "MemberExpression";
__n124["computed"] := true;
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "arr";
__n124["object"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := 3.;
__n126["raw"] := "3";
__n124["property"] := __n126;
__n122["right"] := __n124;
__n121 := [ __n122 ];
__n119["arguments"] := __n121;
__n118["expression"] := __n119;
__n117 := [ __n118 ];
__n116["body"] := __n117;
__n110["consequent"] := __n116;
__n110["alternate"] := null;
__n1 := [ __n2, __n13, __n24, __n34, __n59, __n76, __n93, __n110 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n127 := [ "x", "arr" ];
__n0["variableDeclarations"] := __n127;
__n128 := [  ];
__n0["functionDeclarations"] := __n128;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}