function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 0.;
__n8["raw"] := "0";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 2.;
__n10["raw"] := "2";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 3.;
__n11["raw"] := "3";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 4.;
__n12["raw"] := "4";
__n7 := [ __n8, __n9, __n10, __n11, __n12 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arr";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "x";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "slice";
__n20["raw"] := "\"slice\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n22 := {  };
__n22["type"] := "UnaryExpression";
__n22["operator"] := "-";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 5.;
__n23["raw"] := "5";
__n22["argument"] := __n23;
__n22["prefix"] := true;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 1.;
__n24["raw"] := "1";
__n21 := [ __n22, __n24 ];
__n17["arguments"] := __n21;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "AssignmentExpression";
__n26["operator"] := "=";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "arr";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "getClass";
__n29["raw"] := "\"getClass\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["left"] := __n27;
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Object";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "prototype";
__n33["raw"] := "\"prototype\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["object"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "toString";
__n34["raw"] := "\"toString\"";
__n30["property"] := __n34;
__n30["computed"] := true;
__n26["right"] := __n30;
__n25["expression"] := __n26;
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "arr";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "getClass";
__n40["raw"] := "\"getClass\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n41 := [  ];
__n37["arguments"] := __n41;
__n36["left"] := __n37;
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "+";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "[object ";
__n44["raw"] := "\"[object \"";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "Array";
__n45["raw"] := "\"Array\"";
__n43["right"] := __n45;
__n42["left"] := __n43;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "]";
__n46["raw"] := "\"]\"";
__n42["right"] := __n46;
__n36["right"] := __n42;
__n35["test"] := __n36;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "+";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#1: var x = [0,1,2,3,4]; var arr = x.slice(-5,1); arr is Array object. Actual: ";
__n54["raw"] := "'#1: var x = [0,1,2,3,4]; var arr = x.slice(-5,1); arr is Array object. Actual: '";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "arr";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "getClass";
__n58["raw"] := "\"getClass\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n59 := [  ];
__n55["arguments"] := __n59;
__n53["right"] := __n55;
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n35["consequent"] := __n47;
__n35["alternate"] := null;
__n60 := {  };
__n60["type"] := "IfStatement";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "!==";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "arr";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "length";
__n64["raw"] := "\"length\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["left"] := __n62;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 1.;
__n65["raw"] := "1";
__n61["right"] := __n65;
__n60["test"] := __n61;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "+";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#2: var x = [0,1,2,3,4]; var arr = x.slice(-5,1); arr.length === 1. Actual: ";
__n73["raw"] := "'#2: var x = [0,1,2,3,4]; var arr = x.slice(-5,1); arr.length === 1. Actual: '";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "arr";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "length";
__n76["raw"] := "\"length\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n72["right"] := __n74;
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n60["consequent"] := __n66;
__n60["alternate"] := null;
__n77 := {  };
__n77["type"] := "IfStatement";
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "!==";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n79["computed"] := true;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "arr";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 0.;
__n81["raw"] := "0";
__n79["property"] := __n81;
__n78["left"] := __n79;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 0.;
__n82["raw"] := "0";
__n78["right"] := __n82;
__n77["test"] := __n78;
__n83 := {  };
__n83["type"] := "BlockStatement";
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "$ERROR";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "+";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "#3: var x = [0,1,2,3,4]; var arr = x.slice(-5,1); arr[0] === 0. Actual: ";
__n90["raw"] := "'#3: var x = [0,1,2,3,4]; var arr = x.slice(-5,1); arr[0] === 0. Actual: '";
__n89["left"] := __n90;
__n91 := {  };
__n91["type"] := "MemberExpression";
__n91["computed"] := true;
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "arr";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 0.;
__n93["raw"] := "0";
__n91["property"] := __n93;
__n89["right"] := __n91;
__n88 := [ __n89 ];
__n86["arguments"] := __n88;
__n85["expression"] := __n86;
__n84 := [ __n85 ];
__n83["body"] := __n84;
__n77["consequent"] := __n83;
__n77["alternate"] := null;
__n94 := {  };
__n94["type"] := "IfStatement";
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "!==";
__n96 := {  };
__n96["type"] := "MemberExpression";
__n96["computed"] := true;
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "arr";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 1.;
__n98["raw"] := "1";
__n96["property"] := __n98;
__n95["left"] := __n96;
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "undefined";
__n95["right"] := __n99;
__n94["test"] := __n95;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "$ERROR";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "+";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "#4: var x = [0,1,2,3,4]; var arr = x.slice(-5,1); arr[1] === undefined. Actual: ";
__n107["raw"] := "'#4: var x = [0,1,2,3,4]; var arr = x.slice(-5,1); arr[1] === undefined. Actual: '";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "MemberExpression";
__n108["computed"] := true;
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "arr";
__n108["object"] := __n109;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 1.;
__n110["raw"] := "1";
__n108["property"] := __n110;
__n106["right"] := __n108;
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n102["expression"] := __n103;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n94["consequent"] := __n100;
__n94["alternate"] := null;
__n1 := [ __n2, __n13, __n25, __n35, __n60, __n77, __n94 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n111 := [ "x", "arr" ];
__n0["variableDeclarations"] := __n111;
__n112 := [  ];
__n0["functionDeclarations"] := __n112;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}