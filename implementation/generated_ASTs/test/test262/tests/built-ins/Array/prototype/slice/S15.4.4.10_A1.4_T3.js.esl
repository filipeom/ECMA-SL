function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 0.;
__n8["raw"] := "0";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 2.;
__n10["raw"] := "2";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 3.;
__n11["raw"] := "3";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 4.;
__n12["raw"] := "4";
__n7 := [ __n8, __n9, __n10, __n11, __n12 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arr";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "x";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "slice";
__n20["raw"] := "\"slice\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n22 := {  };
__n22["type"] := "UnaryExpression";
__n22["operator"] := "-";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 9.;
__n23["raw"] := "9";
__n22["argument"] := __n23;
__n22["prefix"] := true;
__n24 := {  };
__n24["type"] := "UnaryExpression";
__n24["operator"] := "-";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 1.;
__n25["raw"] := "1";
__n24["argument"] := __n25;
__n24["prefix"] := true;
__n21 := [ __n22, __n24 ];
__n17["arguments"] := __n21;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "AssignmentExpression";
__n27["operator"] := "=";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "arr";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "getClass";
__n30["raw"] := "\"getClass\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["left"] := __n28;
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "Object";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "prototype";
__n34["raw"] := "\"prototype\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["object"] := __n32;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "toString";
__n35["raw"] := "\"toString\"";
__n31["property"] := __n35;
__n31["computed"] := true;
__n27["right"] := __n31;
__n26["expression"] := __n27;
__n36 := {  };
__n36["type"] := "IfStatement";
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "!==";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "arr";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "getClass";
__n41["raw"] := "\"getClass\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n42 := [  ];
__n38["arguments"] := __n42;
__n37["left"] := __n38;
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "+";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "[object ";
__n45["raw"] := "\"[object \"";
__n44["left"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "Array";
__n46["raw"] := "\"Array\"";
__n44["right"] := __n46;
__n43["left"] := __n44;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "]";
__n47["raw"] := "\"]\"";
__n43["right"] := __n47;
__n37["right"] := __n43;
__n36["test"] := __n37;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "$ERROR";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "+";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "#1: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr is Array object. Actual: ";
__n55["raw"] := "'#1: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr is Array object. Actual: '";
__n54["left"] := __n55;
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "arr";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "getClass";
__n59["raw"] := "\"getClass\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n60 := [  ];
__n56["arguments"] := __n60;
__n54["right"] := __n56;
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n36["consequent"] := __n48;
__n36["alternate"] := null;
__n61 := {  };
__n61["type"] := "IfStatement";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "!==";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "arr";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "length";
__n65["raw"] := "\"length\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 4.;
__n66["raw"] := "4";
__n62["right"] := __n66;
__n61["test"] := __n62;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "+";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "#2: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr.length === 4. Actual: ";
__n74["raw"] := "'#2: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr.length === 4. Actual: '";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "arr";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "length";
__n77["raw"] := "\"length\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n73["right"] := __n75;
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n61["consequent"] := __n67;
__n61["alternate"] := null;
__n78 := {  };
__n78["type"] := "IfStatement";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "!==";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n80["computed"] := true;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "arr";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 0.;
__n82["raw"] := "0";
__n80["property"] := __n82;
__n79["left"] := __n80;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 0.;
__n83["raw"] := "0";
__n79["right"] := __n83;
__n78["test"] := __n79;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "$ERROR";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "+";
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "#3: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr[0] === 0. Actual: ";
__n91["raw"] := "'#3: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr[0] === 0. Actual: '";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "MemberExpression";
__n92["computed"] := true;
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "arr";
__n92["object"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := 0.;
__n94["raw"] := "0";
__n92["property"] := __n94;
__n90["right"] := __n92;
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86["expression"] := __n87;
__n85 := [ __n86 ];
__n84["body"] := __n85;
__n78["consequent"] := __n84;
__n78["alternate"] := null;
__n95 := {  };
__n95["type"] := "IfStatement";
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "!==";
__n97 := {  };
__n97["type"] := "MemberExpression";
__n97["computed"] := true;
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "arr";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 1.;
__n99["raw"] := "1";
__n97["property"] := __n99;
__n96["left"] := __n97;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := 1.;
__n100["raw"] := "1";
__n96["right"] := __n100;
__n95["test"] := __n96;
__n101 := {  };
__n101["type"] := "BlockStatement";
__n103 := {  };
__n103["type"] := "ExpressionStatement";
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "$ERROR";
__n104["callee"] := __n105;
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "+";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "#4: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr[1] === 1. Actual: ";
__n108["raw"] := "'#4: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr[1] === 1. Actual: '";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "MemberExpression";
__n109["computed"] := true;
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "arr";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 1.;
__n111["raw"] := "1";
__n109["property"] := __n111;
__n107["right"] := __n109;
__n106 := [ __n107 ];
__n104["arguments"] := __n106;
__n103["expression"] := __n104;
__n102 := [ __n103 ];
__n101["body"] := __n102;
__n95["consequent"] := __n101;
__n95["alternate"] := null;
__n112 := {  };
__n112["type"] := "IfStatement";
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := "!==";
__n114 := {  };
__n114["type"] := "MemberExpression";
__n114["computed"] := true;
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "arr";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 2.;
__n116["raw"] := "2";
__n114["property"] := __n116;
__n113["left"] := __n114;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 2.;
__n117["raw"] := "2";
__n113["right"] := __n117;
__n112["test"] := __n113;
__n118 := {  };
__n118["type"] := "BlockStatement";
__n120 := {  };
__n120["type"] := "ExpressionStatement";
__n121 := {  };
__n121["type"] := "CallExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "$ERROR";
__n121["callee"] := __n122;
__n124 := {  };
__n124["type"] := "BinaryExpression";
__n124["operator"] := "+";
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := "#5: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr[2] === 2. Actual: ";
__n125["raw"] := "'#5: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr[2] === 2. Actual: '";
__n124["left"] := __n125;
__n126 := {  };
__n126["type"] := "MemberExpression";
__n126["computed"] := true;
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "arr";
__n126["object"] := __n127;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := 2.;
__n128["raw"] := "2";
__n126["property"] := __n128;
__n124["right"] := __n126;
__n123 := [ __n124 ];
__n121["arguments"] := __n123;
__n120["expression"] := __n121;
__n119 := [ __n120 ];
__n118["body"] := __n119;
__n112["consequent"] := __n118;
__n112["alternate"] := null;
__n129 := {  };
__n129["type"] := "IfStatement";
__n130 := {  };
__n130["type"] := "BinaryExpression";
__n130["operator"] := "!==";
__n131 := {  };
__n131["type"] := "MemberExpression";
__n131["computed"] := true;
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "arr";
__n131["object"] := __n132;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := 3.;
__n133["raw"] := "3";
__n131["property"] := __n133;
__n130["left"] := __n131;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 3.;
__n134["raw"] := "3";
__n130["right"] := __n134;
__n129["test"] := __n130;
__n135 := {  };
__n135["type"] := "BlockStatement";
__n137 := {  };
__n137["type"] := "ExpressionStatement";
__n138 := {  };
__n138["type"] := "CallExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "$ERROR";
__n138["callee"] := __n139;
__n141 := {  };
__n141["type"] := "BinaryExpression";
__n141["operator"] := "+";
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := "#6: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr[3] === 3. Actual: ";
__n142["raw"] := "'#6: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr[3] === 3. Actual: '";
__n141["left"] := __n142;
__n143 := {  };
__n143["type"] := "MemberExpression";
__n143["computed"] := true;
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "arr";
__n143["object"] := __n144;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := 3.;
__n145["raw"] := "3";
__n143["property"] := __n145;
__n141["right"] := __n143;
__n140 := [ __n141 ];
__n138["arguments"] := __n140;
__n137["expression"] := __n138;
__n136 := [ __n137 ];
__n135["body"] := __n136;
__n129["consequent"] := __n135;
__n129["alternate"] := null;
__n146 := {  };
__n146["type"] := "IfStatement";
__n147 := {  };
__n147["type"] := "BinaryExpression";
__n147["operator"] := "!==";
__n148 := {  };
__n148["type"] := "MemberExpression";
__n148["computed"] := true;
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "arr";
__n148["object"] := __n149;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 4.;
__n150["raw"] := "4";
__n148["property"] := __n150;
__n147["left"] := __n148;
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "undefined";
__n147["right"] := __n151;
__n146["test"] := __n147;
__n152 := {  };
__n152["type"] := "BlockStatement";
__n154 := {  };
__n154["type"] := "ExpressionStatement";
__n155 := {  };
__n155["type"] := "CallExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "$ERROR";
__n155["callee"] := __n156;
__n158 := {  };
__n158["type"] := "BinaryExpression";
__n158["operator"] := "+";
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "#7: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr[4] === undefined. Actual: ";
__n159["raw"] := "'#7: var x = [0,1,2,3,4]; var arr = x.slice(-9,-1); arr[4] === undefined. Actual: '";
__n158["left"] := __n159;
__n160 := {  };
__n160["type"] := "MemberExpression";
__n160["computed"] := true;
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "arr";
__n160["object"] := __n161;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := 4.;
__n162["raw"] := "4";
__n160["property"] := __n162;
__n158["right"] := __n160;
__n157 := [ __n158 ];
__n155["arguments"] := __n157;
__n154["expression"] := __n155;
__n153 := [ __n154 ];
__n152["body"] := __n153;
__n146["consequent"] := __n152;
__n146["alternate"] := null;
__n1 := [ __n2, __n13, __n26, __n36, __n61, __n78, __n95, __n112, __n129, __n146 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n163 := [ "x", "arr" ];
__n0["variableDeclarations"] := __n163;
__n164 := [  ];
__n0["functionDeclarations"] := __n164;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}