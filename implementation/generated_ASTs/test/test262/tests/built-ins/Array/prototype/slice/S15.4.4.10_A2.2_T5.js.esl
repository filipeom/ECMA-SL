function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 0.;
__n8["raw"] := "0";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 2.;
__n10["raw"] := "2";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 3.;
__n11["raw"] := "3";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 4.;
__n12["raw"] := "4";
__n7 := [ __n8, __n9, __n10, __n11, __n12 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arr";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "x";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "slice";
__n20["raw"] := "\"slice\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 0.;
__n22["raw"] := "0";
__n23 := {  };
__n23["type"] := "ObjectExpression";
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "valueOf";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "FunctionExpression";
__n27["id"] := null;
__n28 := [  ];
__n27["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ReturnStatement";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 3.;
__n32["raw"] := "3";
__n31["argument"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n33 := [  ];
__n29["variableDeclarations"] := __n33;
__n34 := [  ];
__n29["functionDeclarations"] := __n34;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n27["body"] := __n29;
__n27["generator"] := false;
__n27["expression"] := false;
__n27["async"] := false;
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n35 := {  };
__n35["type"] := "Property";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "toString";
__n35["key"] := __n36;
__n37 := {  };
__n37["type"] := "FunctionExpression";
__n37["id"] := null;
__n38 := [  ];
__n37["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ReturnStatement";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 0.;
__n42["raw"] := "0";
__n41["argument"] := __n42;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n43 := [  ];
__n39["variableDeclarations"] := __n43;
__n44 := [  ];
__n39["functionDeclarations"] := __n44;
__n39["codeType"] := "function";
__n39["strict"] := false;
__n37["body"] := __n39;
__n37["generator"] := false;
__n37["expression"] := false;
__n37["async"] := false;
__n35["value"] := __n37;
__n35["computed"] := false;
__n35["kind"] := "init";
__n35["shorthand"] := false;
__n24 := [ __n25, __n35 ];
__n23["properties"] := __n24;
__n21 := [ __n22, __n23 ];
__n17["arguments"] := __n21;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "AssignmentExpression";
__n46["operator"] := "=";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "arr";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "getClass";
__n49["raw"] := "\"getClass\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["left"] := __n47;
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Object";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "prototype";
__n53["raw"] := "\"prototype\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["object"] := __n51;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "toString";
__n54["raw"] := "\"toString\"";
__n50["property"] := __n54;
__n50["computed"] := true;
__n46["right"] := __n50;
__n45["expression"] := __n46;
__n55 := {  };
__n55["type"] := "IfStatement";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "!==";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "arr";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "getClass";
__n60["raw"] := "\"getClass\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n61 := [  ];
__n57["arguments"] := __n61;
__n56["left"] := __n57;
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "+";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "+";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "[object ";
__n64["raw"] := "\"[object \"";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "Array";
__n65["raw"] := "\"Array\"";
__n63["right"] := __n65;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "]";
__n66["raw"] := "\"]\"";
__n62["right"] := __n66;
__n56["right"] := __n62;
__n55["test"] := __n56;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "+";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "#1: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr is Array object. Actual: ";
__n74["raw"] := "'#1: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr is Array object. Actual: '";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "arr";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "getClass";
__n78["raw"] := "\"getClass\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["callee"] := __n76;
__n79 := [  ];
__n75["arguments"] := __n79;
__n73["right"] := __n75;
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n55["consequent"] := __n67;
__n55["alternate"] := null;
__n80 := {  };
__n80["type"] := "IfStatement";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "!==";
__n82 := {  };
__n82["type"] := "MemberExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "arr";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "length";
__n84["raw"] := "\"length\"";
__n82["property"] := __n84;
__n82["computed"] := true;
__n81["left"] := __n82;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := 3.;
__n85["raw"] := "3";
__n81["right"] := __n85;
__n80["test"] := __n81;
__n86 := {  };
__n86["type"] := "BlockStatement";
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "$ERROR";
__n89["callee"] := __n90;
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "+";
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "#2: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr.length === 3. Actual: ";
__n93["raw"] := "'#2: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr.length === 3. Actual: '";
__n92["left"] := __n93;
__n94 := {  };
__n94["type"] := "MemberExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "arr";
__n94["object"] := __n95;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "length";
__n96["raw"] := "\"length\"";
__n94["property"] := __n96;
__n94["computed"] := true;
__n92["right"] := __n94;
__n91 := [ __n92 ];
__n89["arguments"] := __n91;
__n88["expression"] := __n89;
__n87 := [ __n88 ];
__n86["body"] := __n87;
__n80["consequent"] := __n86;
__n80["alternate"] := null;
__n97 := {  };
__n97["type"] := "IfStatement";
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "!==";
__n99 := {  };
__n99["type"] := "MemberExpression";
__n99["computed"] := true;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "arr";
__n99["object"] := __n100;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 0.;
__n101["raw"] := "0";
__n99["property"] := __n101;
__n98["left"] := __n99;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 0.;
__n102["raw"] := "0";
__n98["right"] := __n102;
__n97["test"] := __n98;
__n103 := {  };
__n103["type"] := "BlockStatement";
__n105 := {  };
__n105["type"] := "ExpressionStatement";
__n106 := {  };
__n106["type"] := "CallExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "$ERROR";
__n106["callee"] := __n107;
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "+";
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "#3: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[0] === 0. Actual: ";
__n110["raw"] := "'#3: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[0] === 0. Actual: '";
__n109["left"] := __n110;
__n111 := {  };
__n111["type"] := "MemberExpression";
__n111["computed"] := true;
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "arr";
__n111["object"] := __n112;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 0.;
__n113["raw"] := "0";
__n111["property"] := __n113;
__n109["right"] := __n111;
__n108 := [ __n109 ];
__n106["arguments"] := __n108;
__n105["expression"] := __n106;
__n104 := [ __n105 ];
__n103["body"] := __n104;
__n97["consequent"] := __n103;
__n97["alternate"] := null;
__n114 := {  };
__n114["type"] := "IfStatement";
__n115 := {  };
__n115["type"] := "BinaryExpression";
__n115["operator"] := "!==";
__n116 := {  };
__n116["type"] := "MemberExpression";
__n116["computed"] := true;
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "arr";
__n116["object"] := __n117;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 1.;
__n118["raw"] := "1";
__n116["property"] := __n118;
__n115["left"] := __n116;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 1.;
__n119["raw"] := "1";
__n115["right"] := __n119;
__n114["test"] := __n115;
__n120 := {  };
__n120["type"] := "BlockStatement";
__n122 := {  };
__n122["type"] := "ExpressionStatement";
__n123 := {  };
__n123["type"] := "CallExpression";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "$ERROR";
__n123["callee"] := __n124;
__n126 := {  };
__n126["type"] := "BinaryExpression";
__n126["operator"] := "+";
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "#4: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[1] === 1. Actual: ";
__n127["raw"] := "'#4: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[1] === 1. Actual: '";
__n126["left"] := __n127;
__n128 := {  };
__n128["type"] := "MemberExpression";
__n128["computed"] := true;
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "arr";
__n128["object"] := __n129;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := 1.;
__n130["raw"] := "1";
__n128["property"] := __n130;
__n126["right"] := __n128;
__n125 := [ __n126 ];
__n123["arguments"] := __n125;
__n122["expression"] := __n123;
__n121 := [ __n122 ];
__n120["body"] := __n121;
__n114["consequent"] := __n120;
__n114["alternate"] := null;
__n131 := {  };
__n131["type"] := "IfStatement";
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := "!==";
__n133 := {  };
__n133["type"] := "MemberExpression";
__n133["computed"] := true;
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "arr";
__n133["object"] := __n134;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := 2.;
__n135["raw"] := "2";
__n133["property"] := __n135;
__n132["left"] := __n133;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := 2.;
__n136["raw"] := "2";
__n132["right"] := __n136;
__n131["test"] := __n132;
__n137 := {  };
__n137["type"] := "BlockStatement";
__n139 := {  };
__n139["type"] := "ExpressionStatement";
__n140 := {  };
__n140["type"] := "CallExpression";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "$ERROR";
__n140["callee"] := __n141;
__n143 := {  };
__n143["type"] := "BinaryExpression";
__n143["operator"] := "+";
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "#5: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[2] === 2. Actual: ";
__n144["raw"] := "'#5: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[2] === 2. Actual: '";
__n143["left"] := __n144;
__n145 := {  };
__n145["type"] := "MemberExpression";
__n145["computed"] := true;
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "arr";
__n145["object"] := __n146;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := 2.;
__n147["raw"] := "2";
__n145["property"] := __n147;
__n143["right"] := __n145;
__n142 := [ __n143 ];
__n140["arguments"] := __n142;
__n139["expression"] := __n140;
__n138 := [ __n139 ];
__n137["body"] := __n138;
__n131["consequent"] := __n137;
__n131["alternate"] := null;
__n148 := {  };
__n148["type"] := "IfStatement";
__n149 := {  };
__n149["type"] := "BinaryExpression";
__n149["operator"] := "!==";
__n150 := {  };
__n150["type"] := "MemberExpression";
__n150["computed"] := true;
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "arr";
__n150["object"] := __n151;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := 3.;
__n152["raw"] := "3";
__n150["property"] := __n152;
__n149["left"] := __n150;
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "undefined";
__n149["right"] := __n153;
__n148["test"] := __n149;
__n154 := {  };
__n154["type"] := "BlockStatement";
__n156 := {  };
__n156["type"] := "ExpressionStatement";
__n157 := {  };
__n157["type"] := "CallExpression";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "$ERROR";
__n157["callee"] := __n158;
__n160 := {  };
__n160["type"] := "BinaryExpression";
__n160["operator"] := "+";
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := "#6: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[3] === undefined. Actual: ";
__n161["raw"] := "'#6: var x = [0,1,2,3,4]; var arr = x.slice(0,{valueOf: function() {return 3}, toString: function() {return 0}}); arr[3] === undefined. Actual: '";
__n160["left"] := __n161;
__n162 := {  };
__n162["type"] := "MemberExpression";
__n162["computed"] := true;
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "arr";
__n162["object"] := __n163;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := 3.;
__n164["raw"] := "3";
__n162["property"] := __n164;
__n160["right"] := __n162;
__n159 := [ __n160 ];
__n157["arguments"] := __n159;
__n156["expression"] := __n157;
__n155 := [ __n156 ];
__n154["body"] := __n155;
__n148["consequent"] := __n154;
__n148["alternate"] := null;
__n1 := [ __n2, __n13, __n45, __n55, __n80, __n97, __n114, __n131, __n148 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n165 := [ "x", "arr" ];
__n0["variableDeclarations"] := __n165;
__n166 := [  ];
__n0["functionDeclarations"] := __n166;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}