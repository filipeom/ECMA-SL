function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "obj";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "NewExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "RegExp";
__n8["callee"] := __n9;
__n10 := [  ];
__n8["arguments"] := __n10;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "AssignmentExpression";
__n12["operator"] := "=";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "obj";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "length";
__n15["raw"] := "\"length\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["left"] := __n13;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 2.;
__n16["raw"] := "2";
__n12["right"] := __n16;
__n11["expression"] := __n12;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "AssignmentExpression";
__n18["operator"] := "=";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n19["computed"] := true;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "obj";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 0.;
__n21["raw"] := "0";
__n19["property"] := __n21;
__n18["left"] := __n19;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 11.;
__n22["raw"] := "11";
__n18["right"] := __n22;
__n17["expression"] := __n18;
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "AssignmentExpression";
__n24["operator"] := "=";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n25["computed"] := true;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "obj";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 1.;
__n27["raw"] := "1";
__n25["property"] := __n27;
__n24["left"] := __n25;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 9.;
__n28["raw"] := "9";
__n24["right"] := __n28;
__n23["expression"] := __n24;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "assert";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Array";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "prototype";
__n38["raw"] := "\"prototype\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["object"] := __n36;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "some";
__n39["raw"] := "\"some\"";
__n35["property"] := __n39;
__n35["computed"] := true;
__n34["object"] := __n35;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "call";
__n40["raw"] := "\"call\"";
__n34["property"] := __n40;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "obj";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "callbackfn";
__n41 := [ __n42, __n43 ];
__n33["arguments"] := __n41;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "Array.prototype.some.call(obj, callbackfn) !== true";
__n44["raw"] := "'Array.prototype.some.call(obj, callbackfn) !== true'";
__n32 := [ __n33, __n44 ];
__n30["arguments"] := __n32;
__n29["expression"] := __n30;
__n1 := [ __n2, __n4, __n11, __n17, __n23, __n29 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n45 := [ "obj" ];
__n0["variableDeclarations"] := __n45;
__n47 := {  };
__n47["type"] := "FunctionDeclaration";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "callbackfn";
__n47["id"] := __n48;
__n49 := [ "val", "idx", "obj" ];
__n47["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ReturnStatement";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "instanceof";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "obj";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "RegExp";
__n53["right"] := __n55;
__n52["argument"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n56 := [  ];
__n50["variableDeclarations"] := __n56;
__n57 := [  ];
__n50["functionDeclarations"] := __n57;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n47["body"] := __n50;
__n47["generator"] := false;
__n47["expression"] := false;
__n47["async"] := false;
__n46 := [ __n47 ];
__n0["functionDeclarations"] := __n46;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}