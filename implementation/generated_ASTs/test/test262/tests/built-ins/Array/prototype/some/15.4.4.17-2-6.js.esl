function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn1";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callbackfn2";
__n4["expression"] := __n5;
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "proto";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "ObjectExpression";
__n12 := {  };
__n12["type"] := "Property";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "length";
__n12["key"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 2.;
__n14["raw"] := "2";
__n12["value"] := __n14;
__n12["computed"] := false;
__n12["kind"] := "init";
__n12["shorthand"] := false;
__n11 := [ __n12 ];
__n10["properties"] := __n11;
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Con";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "FunctionExpression";
__n19["id"] := null;
__n20 := [  ];
__n19["params"] := __n20;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n22 := [  ];
__n21["body"] := __n22;
__n23 := [  ];
__n21["variableDeclarations"] := __n23;
__n24 := [  ];
__n21["functionDeclarations"] := __n24;
__n21["codeType"] := "function";
__n21["strict"] := false;
__n19["body"] := __n21;
__n19["generator"] := false;
__n19["expression"] := false;
__n19["async"] := false;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "AssignmentExpression";
__n26["operator"] := "=";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Con";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "prototype";
__n29["raw"] := "\"prototype\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["left"] := __n27;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "proto";
__n26["right"] := __n30;
__n25["expression"] := __n26;
__n31 := {  };
__n31["type"] := "VariableDeclaration";
__n33 := {  };
__n33["type"] := "VariableDeclarator";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "child";
__n33["id"] := __n34;
__n35 := {  };
__n35["type"] := "NewExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Con";
__n35["callee"] := __n36;
__n37 := [  ];
__n35["arguments"] := __n37;
__n33["init"] := __n35;
__n32 := [ __n33 ];
__n31["declarations"] := __n32;
__n31["kind"] := "var";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "AssignmentExpression";
__n39["operator"] := "=";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n40["computed"] := true;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "child";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 0.;
__n42["raw"] := "0";
__n40["property"] := __n42;
__n39["left"] := __n40;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 9.;
__n43["raw"] := "9";
__n39["right"] := __n43;
__n38["expression"] := __n39;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "AssignmentExpression";
__n45["operator"] := "=";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n46["computed"] := true;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "child";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1.;
__n48["raw"] := "1";
__n46["property"] := __n48;
__n45["left"] := __n46;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 11.;
__n49["raw"] := "11";
__n45["right"] := __n49;
__n44["expression"] := __n45;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "AssignmentExpression";
__n51["operator"] := "=";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n52["computed"] := true;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "child";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 2.;
__n54["raw"] := "2";
__n52["property"] := __n54;
__n51["left"] := __n52;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 12.;
__n55["raw"] := "12";
__n51["right"] := __n55;
__n50["expression"] := __n51;
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "assert";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "Array";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "prototype";
__n65["raw"] := "\"prototype\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["object"] := __n63;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "some";
__n66["raw"] := "\"some\"";
__n62["property"] := __n66;
__n62["computed"] := true;
__n61["object"] := __n62;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "call";
__n67["raw"] := "\"call\"";
__n61["property"] := __n67;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "child";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "callbackfn1";
__n68 := [ __n69, __n70 ];
__n60["arguments"] := __n68;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "Array.prototype.some.call(child, callbackfn1) !== true";
__n71["raw"] := "'Array.prototype.some.call(child, callbackfn1) !== true'";
__n59 := [ __n60, __n71 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "assert";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "sameValue";
__n76["raw"] := "\"sameValue\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["callee"] := __n74;
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "Array";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "prototype";
__n83["raw"] := "\"prototype\"";
__n81["property"] := __n83;
__n81["computed"] := true;
__n80["object"] := __n81;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "some";
__n84["raw"] := "\"some\"";
__n80["property"] := __n84;
__n80["computed"] := true;
__n79["object"] := __n80;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "call";
__n85["raw"] := "\"call\"";
__n79["property"] := __n85;
__n79["computed"] := true;
__n78["callee"] := __n79;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "child";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "callbackfn2";
__n86 := [ __n87, __n88 ];
__n78["arguments"] := __n86;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := false;
__n89["raw"] := "false";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "Array.prototype.some.call(child, callbackfn2)";
__n90["raw"] := "'Array.prototype.some.call(child, callbackfn2)'";
__n77 := [ __n78, __n89, __n90 ];
__n73["arguments"] := __n77;
__n72["expression"] := __n73;
__n1 := [ __n2, __n4, __n6, __n15, __n25, __n31, __n38, __n44, __n50, __n56, __n72 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n91 := [ "proto", "Con", "child" ];
__n0["variableDeclarations"] := __n91;
__n93 := {  };
__n93["type"] := "FunctionDeclaration";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "callbackfn1";
__n93["id"] := __n94;
__n95 := [ "val", "idx", "obj" ];
__n93["params"] := __n95;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ReturnStatement";
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := ">";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "val";
__n99["left"] := __n100;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 10.;
__n101["raw"] := "10";
__n99["right"] := __n101;
__n98["argument"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n102 := [  ];
__n96["variableDeclarations"] := __n102;
__n103 := [  ];
__n96["functionDeclarations"] := __n103;
__n96["codeType"] := "function";
__n96["strict"] := false;
__n93["body"] := __n96;
__n93["generator"] := false;
__n93["expression"] := false;
__n93["async"] := false;
__n104 := {  };
__n104["type"] := "FunctionDeclaration";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "callbackfn2";
__n104["id"] := __n105;
__n106 := [ "val", "idx", "obj" ];
__n104["params"] := __n106;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "ReturnStatement";
__n110 := {  };
__n110["type"] := "BinaryExpression";
__n110["operator"] := ">";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "val";
__n110["left"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 11.;
__n112["raw"] := "11";
__n110["right"] := __n112;
__n109["argument"] := __n110;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n113 := [  ];
__n107["variableDeclarations"] := __n113;
__n114 := [  ];
__n107["functionDeclarations"] := __n114;
__n107["codeType"] := "function";
__n107["strict"] := false;
__n104["body"] := __n107;
__n104["generator"] := false;
__n104["expression"] := false;
__n104["async"] := false;
__n92 := [ __n93, __n104 ];
__n0["functionDeclarations"] := __n92;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}