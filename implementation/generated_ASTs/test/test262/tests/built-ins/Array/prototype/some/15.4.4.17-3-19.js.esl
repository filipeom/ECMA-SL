function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn1";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callbackfn2";
__n4["expression"] := __n5;
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "toStringAccessed";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := false;
__n10["raw"] := "false";
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "obj";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "ObjectExpression";
__n17 := {  };
__n17["type"] := "Property";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 0.;
__n18["raw"] := "0";
__n17["key"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 9.;
__n19["raw"] := "9";
__n17["value"] := __n19;
__n17["computed"] := false;
__n17["kind"] := "init";
__n17["shorthand"] := false;
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 1.;
__n21["raw"] := "1";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 11.;
__n22["raw"] := "11";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 2.;
__n24["raw"] := "2";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 12.;
__n25["raw"] := "12";
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n26 := {  };
__n26["type"] := "Property";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "length";
__n26["key"] := __n27;
__n28 := {  };
__n28["type"] := "ObjectExpression";
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "toString";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "FunctionExpression";
__n32["id"] := null;
__n33 := [  ];
__n32["params"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "AssignmentExpression";
__n37["operator"] := "=";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "toStringAccessed";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := true;
__n39["raw"] := "true";
__n37["right"] := __n39;
__n36["expression"] := __n37;
__n40 := {  };
__n40["type"] := "ReturnStatement";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "2";
__n41["raw"] := "'2'";
__n40["argument"] := __n41;
__n35 := [ __n36, __n40 ];
__n34["body"] := __n35;
__n42 := [  ];
__n34["variableDeclarations"] := __n42;
__n43 := [  ];
__n34["functionDeclarations"] := __n43;
__n34["codeType"] := "function";
__n34["strict"] := false;
__n32["body"] := __n34;
__n32["generator"] := false;
__n32["expression"] := false;
__n32["async"] := false;
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n29 := [ __n30 ];
__n28["properties"] := __n29;
__n26["value"] := __n28;
__n26["computed"] := false;
__n26["kind"] := "init";
__n26["shorthand"] := false;
__n16 := [ __n17, __n20, __n23, __n26 ];
__n15["properties"] := __n16;
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "assert";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Array";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "prototype";
__n53["raw"] := "\"prototype\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["object"] := __n51;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "some";
__n54["raw"] := "\"some\"";
__n50["property"] := __n54;
__n50["computed"] := true;
__n49["object"] := __n50;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "call";
__n55["raw"] := "\"call\"";
__n49["property"] := __n55;
__n49["computed"] := true;
__n48["callee"] := __n49;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "obj";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "callbackfn1";
__n56 := [ __n57, __n58 ];
__n48["arguments"] := __n56;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "Array.prototype.some.call(obj, callbackfn1) !== true";
__n59["raw"] := "'Array.prototype.some.call(obj, callbackfn1) !== true'";
__n47 := [ __n48, __n59 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "assert";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "sameValue";
__n64["raw"] := "\"sameValue\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "Array";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "prototype";
__n71["raw"] := "\"prototype\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["object"] := __n69;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "some";
__n72["raw"] := "\"some\"";
__n68["property"] := __n72;
__n68["computed"] := true;
__n67["object"] := __n68;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "call";
__n73["raw"] := "\"call\"";
__n67["property"] := __n73;
__n67["computed"] := true;
__n66["callee"] := __n67;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "obj";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "callbackfn2";
__n74 := [ __n75, __n76 ];
__n66["arguments"] := __n74;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := false;
__n77["raw"] := "false";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "Array.prototype.some.call(obj, callbackfn2)";
__n78["raw"] := "'Array.prototype.some.call(obj, callbackfn2)'";
__n65 := [ __n66, __n77, __n78 ];
__n61["arguments"] := __n65;
__n60["expression"] := __n61;
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "assert";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "toStringAccessed";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "toStringAccessed !== true";
__n84["raw"] := "'toStringAccessed !== true'";
__n82 := [ __n83, __n84 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n1 := [ __n2, __n4, __n6, __n11, __n44, __n60, __n79 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n85 := [ "toStringAccessed", "obj" ];
__n0["variableDeclarations"] := __n85;
__n87 := {  };
__n87["type"] := "FunctionDeclaration";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "callbackfn1";
__n87["id"] := __n88;
__n89 := [ "val", "idx", "obj" ];
__n87["params"] := __n89;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ReturnStatement";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := ">";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "val";
__n93["left"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 10.;
__n95["raw"] := "10";
__n93["right"] := __n95;
__n92["argument"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n96 := [  ];
__n90["variableDeclarations"] := __n96;
__n97 := [  ];
__n90["functionDeclarations"] := __n97;
__n90["codeType"] := "function";
__n90["strict"] := false;
__n87["body"] := __n90;
__n87["generator"] := false;
__n87["expression"] := false;
__n87["async"] := false;
__n98 := {  };
__n98["type"] := "FunctionDeclaration";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "callbackfn2";
__n98["id"] := __n99;
__n100 := [ "val", "idx", "obj" ];
__n98["params"] := __n100;
__n101 := {  };
__n101["type"] := "BlockStatement";
__n103 := {  };
__n103["type"] := "ReturnStatement";
__n104 := {  };
__n104["type"] := "BinaryExpression";
__n104["operator"] := ">";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "val";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 11.;
__n106["raw"] := "11";
__n104["right"] := __n106;
__n103["argument"] := __n104;
__n102 := [ __n103 ];
__n101["body"] := __n102;
__n107 := [  ];
__n101["variableDeclarations"] := __n107;
__n108 := [  ];
__n101["functionDeclarations"] := __n108;
__n101["codeType"] := "function";
__n101["strict"] := false;
__n98["body"] := __n101;
__n98["generator"] := false;
__n98["expression"] := false;
__n98["async"] := false;
__n86 := [ __n87, __n98 ];
__n0["functionDeclarations"] := __n86;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}