function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arr";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ObjectExpression";
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 2.;
__n16["raw"] := "2";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 2.;
__n17["raw"] := "2";
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "length";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 20.;
__n20["raw"] := "20";
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n14 := [ __n15, __n18 ];
__n13["properties"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Object";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "defineProperty";
__n25["raw"] := "\"defineProperty\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "arr";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "0";
__n28["raw"] := "\"0\"";
__n29 := {  };
__n29["type"] := "ObjectExpression";
__n31 := {  };
__n31["type"] := "Property";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "get";
__n31["key"] := __n32;
__n33 := {  };
__n33["type"] := "FunctionExpression";
__n33["id"] := null;
__n34 := [  ];
__n33["params"] := __n34;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "UnaryExpression";
__n38["operator"] := "delete";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n39["computed"] := true;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Object";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "prototype";
__n42["raw"] := "\"prototype\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["object"] := __n40;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 1.;
__n43["raw"] := "1";
__n39["property"] := __n43;
__n38["argument"] := __n39;
__n38["prefix"] := true;
__n37["expression"] := __n38;
__n44 := {  };
__n44["type"] := "ReturnStatement";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 0.;
__n45["raw"] := "0";
__n44["argument"] := __n45;
__n36 := [ __n37, __n44 ];
__n35["body"] := __n36;
__n46 := [  ];
__n35["variableDeclarations"] := __n46;
__n47 := [  ];
__n35["functionDeclarations"] := __n47;
__n35["codeType"] := "function";
__n35["strict"] := false;
__n33["body"] := __n35;
__n33["generator"] := false;
__n33["expression"] := false;
__n33["async"] := false;
__n31["value"] := __n33;
__n31["computed"] := false;
__n31["kind"] := "init";
__n31["shorthand"] := false;
__n48 := {  };
__n48["type"] := "Property";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "configurable";
__n48["key"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := true;
__n50["raw"] := "true";
__n48["value"] := __n50;
__n48["computed"] := false;
__n48["kind"] := "init";
__n48["shorthand"] := false;
__n30 := [ __n31, __n48 ];
__n29["properties"] := __n30;
__n26 := [ __n27, __n28, __n29 ];
__n22["arguments"] := __n26;
__n21["expression"] := __n22;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "AssignmentExpression";
__n52["operator"] := "=";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n53["computed"] := true;
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Object";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "prototype";
__n56["raw"] := "\"prototype\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["object"] := __n54;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 1.;
__n57["raw"] := "1";
__n53["property"] := __n57;
__n52["left"] := __n53;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 1.;
__n58["raw"] := "1";
__n52["right"] := __n58;
__n51["expression"] := __n52;
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "assert";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "sameValue";
__n63["raw"] := "\"sameValue\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "Array";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "prototype";
__n70["raw"] := "\"prototype\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["object"] := __n68;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "some";
__n71["raw"] := "\"some\"";
__n67["property"] := __n71;
__n67["computed"] := true;
__n66["object"] := __n67;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "call";
__n72["raw"] := "\"call\"";
__n66["property"] := __n72;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "arr";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "callbackfn";
__n73 := [ __n74, __n75 ];
__n65["arguments"] := __n73;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := false;
__n76["raw"] := "false";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "Array.prototype.some.call(arr, callbackfn)";
__n77["raw"] := "'Array.prototype.some.call(arr, callbackfn)'";
__n64 := [ __n65, __n76, __n77 ];
__n60["arguments"] := __n64;
__n59["expression"] := __n60;
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "assert";
__n79["callee"] := __n80;
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "accessed";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "accessed !== true";
__n83["raw"] := "'accessed !== true'";
__n81 := [ __n82, __n83 ];
__n79["arguments"] := __n81;
__n78["expression"] := __n79;
__n1 := [ __n2, __n7, __n9, __n21, __n51, __n59, __n78 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n84 := [ "accessed", "arr" ];
__n0["variableDeclarations"] := __n84;
__n86 := {  };
__n86["type"] := "FunctionDeclaration";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "callbackfn";
__n86["id"] := __n87;
__n88 := [ "val", "idx", "obj" ];
__n86["params"] := __n88;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "AssignmentExpression";
__n92["operator"] := "=";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "accessed";
__n92["left"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := true;
__n94["raw"] := "true";
__n92["right"] := __n94;
__n91["expression"] := __n92;
__n95 := {  };
__n95["type"] := "ReturnStatement";
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "===";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "idx";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 1.;
__n98["raw"] := "1";
__n96["right"] := __n98;
__n95["argument"] := __n96;
__n90 := [ __n91, __n95 ];
__n89["body"] := __n90;
__n99 := [  ];
__n89["variableDeclarations"] := __n99;
__n100 := [  ];
__n89["functionDeclarations"] := __n100;
__n89["codeType"] := "function";
__n89["strict"] := false;
__n86["body"] := __n89;
__n86["generator"] := false;
__n86["expression"] := false;
__n86["async"] := false;
__n85 := [ __n86 ];
__n0["functionDeclarations"] := __n85;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}