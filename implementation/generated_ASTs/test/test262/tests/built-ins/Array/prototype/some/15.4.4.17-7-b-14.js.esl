function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arr";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ArrayExpression";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 0.;
__n15["raw"] := "0";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 2.;
__n17["raw"] := "2";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "last";
__n18["raw"] := "\"last\"";
__n14 := [ __n15, __n16, __n17, __n18 ];
__n13["elements"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Object";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "defineProperty";
__n23["raw"] := "\"defineProperty\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "arr";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "0";
__n26["raw"] := "\"0\"";
__n27 := {  };
__n27["type"] := "ObjectExpression";
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "get";
__n29["key"] := __n30;
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [  ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "AssignmentExpression";
__n36["operator"] := "=";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "arr";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "length";
__n39["raw"] := "\"length\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 3.;
__n40["raw"] := "3";
__n36["right"] := __n40;
__n35["expression"] := __n36;
__n41 := {  };
__n41["type"] := "ReturnStatement";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 0.;
__n42["raw"] := "0";
__n41["argument"] := __n42;
__n34 := [ __n35, __n41 ];
__n33["body"] := __n34;
__n43 := [  ];
__n33["variableDeclarations"] := __n43;
__n44 := [  ];
__n33["functionDeclarations"] := __n44;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["expression"] := false;
__n31["async"] := false;
__n29["value"] := __n31;
__n29["computed"] := false;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n45 := {  };
__n45["type"] := "Property";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "configurable";
__n45["key"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := true;
__n47["raw"] := "true";
__n45["value"] := __n47;
__n45["computed"] := false;
__n45["kind"] := "init";
__n45["shorthand"] := false;
__n28 := [ __n29, __n45 ];
__n27["properties"] := __n28;
__n24 := [ __n25, __n26, __n27 ];
__n20["arguments"] := __n24;
__n19["expression"] := __n20;
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "assert";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "sameValue";
__n52["raw"] := "\"sameValue\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "arr";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "some";
__n57["raw"] := "\"some\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "callbackfn";
__n58 := [ __n59 ];
__n54["arguments"] := __n58;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := false;
__n60["raw"] := "false";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "arr.some(callbackfn)";
__n61["raw"] := "'arr.some(callbackfn)'";
__n53 := [ __n54, __n60, __n61 ];
__n49["arguments"] := __n53;
__n48["expression"] := __n49;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "assert";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "accessed";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "accessed !== true";
__n67["raw"] := "'accessed !== true'";
__n65 := [ __n66, __n67 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n1 := [ __n2, __n7, __n9, __n19, __n48, __n62 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n68 := [ "accessed", "arr" ];
__n0["variableDeclarations"] := __n68;
__n70 := {  };
__n70["type"] := "FunctionDeclaration";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "callbackfn";
__n70["id"] := __n71;
__n72 := [ "val", "idx", "obj" ];
__n70["params"] := __n72;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "AssignmentExpression";
__n76["operator"] := "=";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "accessed";
__n76["left"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := true;
__n78["raw"] := "true";
__n76["right"] := __n78;
__n75["expression"] := __n76;
__n79 := {  };
__n79["type"] := "ReturnStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "===";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "idx";
__n80["left"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 3.;
__n82["raw"] := "3";
__n80["right"] := __n82;
__n79["argument"] := __n80;
__n74 := [ __n75, __n79 ];
__n73["body"] := __n74;
__n83 := [  ];
__n73["variableDeclarations"] := __n83;
__n84 := [  ];
__n73["functionDeclarations"] := __n84;
__n73["codeType"] := "function";
__n73["strict"] := false;
__n70["body"] := __n73;
__n70["generator"] := false;
__n70["expression"] := false;
__n70["async"] := false;
__n69 := [ __n70 ];
__n0["functionDeclarations"] := __n69;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}