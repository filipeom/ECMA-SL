function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arr";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ArrayExpression";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 2.;
__n16["raw"] := "2";
__n14 := [ __n15, __n16 ];
__n13["elements"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Object";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "defineProperty";
__n21["raw"] := "\"defineProperty\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "arr";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "1";
__n24["raw"] := "\"1\"";
__n25 := {  };
__n25["type"] := "ObjectExpression";
__n27 := {  };
__n27["type"] := "Property";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "get";
__n27["key"] := __n28;
__n29 := {  };
__n29["type"] := "FunctionExpression";
__n29["id"] := null;
__n30 := [  ];
__n29["params"] := __n30;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ReturnStatement";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "6.99";
__n34["raw"] := "\"6.99\"";
__n33["argument"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n35 := [  ];
__n31["variableDeclarations"] := __n35;
__n36 := [  ];
__n31["functionDeclarations"] := __n36;
__n31["codeType"] := "function";
__n31["strict"] := false;
__n29["body"] := __n31;
__n29["generator"] := false;
__n29["expression"] := false;
__n29["async"] := false;
__n27["value"] := __n29;
__n27["computed"] := false;
__n27["kind"] := "init";
__n27["shorthand"] := false;
__n37 := {  };
__n37["type"] := "Property";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "configurable";
__n37["key"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := true;
__n39["raw"] := "true";
__n37["value"] := __n39;
__n37["computed"] := false;
__n37["kind"] := "init";
__n37["shorthand"] := false;
__n26 := [ __n27, __n37 ];
__n25["properties"] := __n26;
__n22 := [ __n23, __n24, __n25 ];
__n18["arguments"] := __n22;
__n17["expression"] := __n18;
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Object";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "defineProperty";
__n44["raw"] := "\"defineProperty\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["callee"] := __n42;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "arr";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "0";
__n47["raw"] := "\"0\"";
__n48 := {  };
__n48["type"] := "ObjectExpression";
__n50 := {  };
__n50["type"] := "Property";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "get";
__n50["key"] := __n51;
__n52 := {  };
__n52["type"] := "FunctionExpression";
__n52["id"] := null;
__n53 := [  ];
__n52["params"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "UnaryExpression";
__n57["operator"] := "delete";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n58["computed"] := true;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "arr";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 1.;
__n60["raw"] := "1";
__n58["property"] := __n60;
__n57["argument"] := __n58;
__n57["prefix"] := true;
__n56["expression"] := __n57;
__n61 := {  };
__n61["type"] := "ReturnStatement";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 0.;
__n62["raw"] := "0";
__n61["argument"] := __n62;
__n55 := [ __n56, __n61 ];
__n54["body"] := __n55;
__n63 := [  ];
__n54["variableDeclarations"] := __n63;
__n64 := [  ];
__n54["functionDeclarations"] := __n64;
__n54["codeType"] := "function";
__n54["strict"] := false;
__n52["body"] := __n54;
__n52["generator"] := false;
__n52["expression"] := false;
__n52["async"] := false;
__n50["value"] := __n52;
__n50["computed"] := false;
__n50["kind"] := "init";
__n50["shorthand"] := false;
__n65 := {  };
__n65["type"] := "Property";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "configurable";
__n65["key"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := true;
__n67["raw"] := "true";
__n65["value"] := __n67;
__n65["computed"] := false;
__n65["kind"] := "init";
__n65["shorthand"] := false;
__n49 := [ __n50, __n65 ];
__n48["properties"] := __n49;
__n45 := [ __n46, __n47, __n48 ];
__n41["arguments"] := __n45;
__n40["expression"] := __n41;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "assert";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "sameValue";
__n72["raw"] := "\"sameValue\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n69["callee"] := __n70;
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "arr";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "some";
__n77["raw"] := "\"some\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "callbackfn";
__n78 := [ __n79 ];
__n74["arguments"] := __n78;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := false;
__n80["raw"] := "false";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "arr.some(callbackfn)";
__n81["raw"] := "'arr.some(callbackfn)'";
__n73 := [ __n74, __n80, __n81 ];
__n69["arguments"] := __n73;
__n68["expression"] := __n69;
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "assert";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "accessed";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "accessed !== true";
__n87["raw"] := "'accessed !== true'";
__n85 := [ __n86, __n87 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n1 := [ __n2, __n7, __n9, __n17, __n40, __n68, __n82 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n88 := [ "accessed", "arr" ];
__n0["variableDeclarations"] := __n88;
__n90 := {  };
__n90["type"] := "FunctionDeclaration";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "callbackfn";
__n90["id"] := __n91;
__n92 := [ "val", "idx", "obj" ];
__n90["params"] := __n92;
__n93 := {  };
__n93["type"] := "BlockStatement";
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "AssignmentExpression";
__n96["operator"] := "=";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "accessed";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := true;
__n98["raw"] := "true";
__n96["right"] := __n98;
__n95["expression"] := __n96;
__n99 := {  };
__n99["type"] := "ReturnStatement";
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "===";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "idx";
__n100["left"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 1.;
__n102["raw"] := "1";
__n100["right"] := __n102;
__n99["argument"] := __n100;
__n94 := [ __n95, __n99 ];
__n93["body"] := __n94;
__n103 := [  ];
__n93["variableDeclarations"] := __n103;
__n104 := [  ];
__n93["functionDeclarations"] := __n104;
__n93["codeType"] := "function";
__n93["strict"] := false;
__n90["body"] := __n93;
__n90["generator"] := false;
__n90["expression"] := false;
__n90["async"] := false;
__n89 := [ __n90 ];
__n0["functionDeclarations"] := __n89;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}