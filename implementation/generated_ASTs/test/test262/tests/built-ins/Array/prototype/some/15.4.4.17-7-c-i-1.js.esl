function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "kValue";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "callbackfn";
__n8["expression"] := __n9;
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "obj";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "ObjectExpression";
__n16 := {  };
__n16["type"] := "Property";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 5.;
__n17["raw"] := "5";
__n16["key"] := __n17;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "kValue";
__n16["value"] := __n18;
__n16["computed"] := false;
__n16["kind"] := "init";
__n16["shorthand"] := false;
__n19 := {  };
__n19["type"] := "Property";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "length";
__n19["key"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 100.;
__n21["raw"] := "100";
__n19["value"] := __n21;
__n19["computed"] := false;
__n19["kind"] := "init";
__n19["shorthand"] := false;
__n15 := [ __n16, __n19 ];
__n14["properties"] := __n15;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "assert";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Array";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "prototype";
__n31["raw"] := "\"prototype\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["object"] := __n29;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "some";
__n32["raw"] := "\"some\"";
__n28["property"] := __n32;
__n28["computed"] := true;
__n27["object"] := __n28;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "call";
__n33["raw"] := "\"call\"";
__n27["property"] := __n33;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "obj";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "callbackfn";
__n34 := [ __n35, __n36 ];
__n26["arguments"] := __n34;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "Array.prototype.some.call(obj, callbackfn) !== true";
__n37["raw"] := "'Array.prototype.some.call(obj, callbackfn) !== true'";
__n25 := [ __n26, __n37 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n1 := [ __n2, __n8, __n10, __n22 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n38 := [ "kValue", "obj" ];
__n0["variableDeclarations"] := __n38;
__n40 := {  };
__n40["type"] := "FunctionDeclaration";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "callbackfn";
__n40["id"] := __n41;
__n42 := [ "val", "idx", "obj" ];
__n40["params"] := __n42;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "IfStatement";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "===";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "idx";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 5.;
__n48["raw"] := "5";
__n46["right"] := __n48;
__n45["test"] := __n46;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ReturnStatement";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "===";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "val";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "kValue";
__n52["right"] := __n54;
__n51["argument"] := __n52;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n45["consequent"] := __n49;
__n45["alternate"] := null;
__n55 := {  };
__n55["type"] := "ReturnStatement";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := false;
__n56["raw"] := "false";
__n55["argument"] := __n56;
__n44 := [ __n45, __n55 ];
__n43["body"] := __n44;
__n57 := [  ];
__n43["variableDeclarations"] := __n57;
__n58 := [  ];
__n43["functionDeclarations"] := __n58;
__n43["codeType"] := "function";
__n43["strict"] := false;
__n40["body"] := __n43;
__n40["generator"] := false;
__n40["expression"] := false;
__n40["async"] := false;
__n39 := [ __n40 ];
__n0["functionDeclarations"] := __n39;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}