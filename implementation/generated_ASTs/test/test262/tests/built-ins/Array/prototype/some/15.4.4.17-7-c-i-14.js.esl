function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "kValue";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "abc";
__n6["raw"] := "\"abc\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arr";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ArrayExpression";
__n14 := [  ];
__n13["elements"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Object";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "defineProperty";
__n19["raw"] := "\"defineProperty\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "arr";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "1";
__n22["raw"] := "\"1\"";
__n23 := {  };
__n23["type"] := "ObjectExpression";
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "get";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "FunctionExpression";
__n27["id"] := null;
__n28 := [  ];
__n27["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ReturnStatement";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "kValue";
__n31["argument"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n33 := [  ];
__n29["variableDeclarations"] := __n33;
__n34 := [  ];
__n29["functionDeclarations"] := __n34;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n27["body"] := __n29;
__n27["generator"] := false;
__n27["expression"] := false;
__n27["async"] := false;
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n35 := {  };
__n35["type"] := "Property";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "configurable";
__n35["key"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := true;
__n37["raw"] := "true";
__n35["value"] := __n37;
__n35["computed"] := false;
__n35["kind"] := "init";
__n35["shorthand"] := false;
__n24 := [ __n25, __n35 ];
__n23["properties"] := __n24;
__n20 := [ __n21, __n22, __n23 ];
__n16["arguments"] := __n20;
__n15["expression"] := __n16;
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Object";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "defineProperty";
__n42["raw"] := "\"defineProperty\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Array";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "prototype";
__n46["raw"] := "\"prototype\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "1";
__n47["raw"] := "\"1\"";
__n48 := {  };
__n48["type"] := "ObjectExpression";
__n50 := {  };
__n50["type"] := "Property";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "get";
__n50["key"] := __n51;
__n52 := {  };
__n52["type"] := "FunctionExpression";
__n52["id"] := null;
__n53 := [  ];
__n52["params"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ReturnStatement";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 10.;
__n57["raw"] := "10";
__n56["argument"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n58 := [  ];
__n54["variableDeclarations"] := __n58;
__n59 := [  ];
__n54["functionDeclarations"] := __n59;
__n54["codeType"] := "function";
__n54["strict"] := false;
__n52["body"] := __n54;
__n52["generator"] := false;
__n52["expression"] := false;
__n52["async"] := false;
__n50["value"] := __n52;
__n50["computed"] := false;
__n50["kind"] := "init";
__n50["shorthand"] := false;
__n60 := {  };
__n60["type"] := "Property";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "configurable";
__n60["key"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := true;
__n62["raw"] := "true";
__n60["value"] := __n62;
__n60["computed"] := false;
__n60["kind"] := "init";
__n60["shorthand"] := false;
__n49 := [ __n50, __n60 ];
__n48["properties"] := __n49;
__n43 := [ __n44, __n47, __n48 ];
__n39["arguments"] := __n43;
__n38["expression"] := __n39;
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "assert";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "arr";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "some";
__n70["raw"] := "\"some\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "callbackfn";
__n71 := [ __n72 ];
__n67["arguments"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "arr.some(callbackfn) !== true";
__n73["raw"] := "'arr.some(callbackfn) !== true'";
__n66 := [ __n67, __n73 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n1 := [ __n2, __n7, __n9, __n15, __n38, __n63 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n74 := [ "kValue", "arr" ];
__n0["variableDeclarations"] := __n74;
__n76 := {  };
__n76["type"] := "FunctionDeclaration";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "callbackfn";
__n76["id"] := __n77;
__n78 := [ "val", "idx", "obj" ];
__n76["params"] := __n78;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "IfStatement";
__n82 := {  };
__n82["type"] := "BinaryExpression";
__n82["operator"] := "===";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "idx";
__n82["left"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := 1.;
__n84["raw"] := "1";
__n82["right"] := __n84;
__n81["test"] := __n82;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "ReturnStatement";
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "===";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "val";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "kValue";
__n88["right"] := __n90;
__n87["argument"] := __n88;
__n86 := [ __n87 ];
__n85["body"] := __n86;
__n81["consequent"] := __n85;
__n81["alternate"] := null;
__n91 := {  };
__n91["type"] := "ReturnStatement";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := false;
__n92["raw"] := "false";
__n91["argument"] := __n92;
__n80 := [ __n81, __n91 ];
__n79["body"] := __n80;
__n93 := [  ];
__n79["variableDeclarations"] := __n93;
__n94 := [  ];
__n79["functionDeclarations"] := __n94;
__n79["codeType"] := "function";
__n79["strict"] := false;
__n76["body"] := __n79;
__n76["generator"] := false;
__n76["expression"] := false;
__n76["async"] := false;
__n75 := [ __n76 ];
__n0["functionDeclarations"] := __n75;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}