function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "firstResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "secondResult";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := false;
__n11["raw"] := "false";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "thirdResult";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := false;
__n16["raw"] := "false";
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "callbackfn";
__n17["expression"] := __n18;
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "func";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "FunctionExpression";
__n23["id"] := null;
__n24 := [ "a", "b" ];
__n23["params"] := __n24;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ReturnStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Array";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "prototype";
__n33["raw"] := "\"prototype\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["object"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "some";
__n34["raw"] := "\"some\"";
__n30["property"] := __n34;
__n30["computed"] := true;
__n29["object"] := __n30;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "call";
__n35["raw"] := "\"call\"";
__n29["property"] := __n35;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "arguments";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "callbackfn";
__n36 := [ __n37, __n38 ];
__n28["arguments"] := __n36;
__n27["argument"] := __n28;
__n26 := [ __n27 ];
__n25["body"] := __n26;
__n39 := [  ];
__n25["variableDeclarations"] := __n39;
__n40 := [  ];
__n25["functionDeclarations"] := __n40;
__n25["codeType"] := "function";
__n25["strict"] := false;
__n23["body"] := __n25;
__n23["generator"] := false;
__n23["expression"] := false;
__n23["async"] := false;
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "assert";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "sameValue";
__n45["raw"] := "\"sameValue\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "func";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 11.;
__n50["raw"] := "11";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 12.;
__n51["raw"] := "12";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 9.;
__n52["raw"] := "9";
__n49 := [ __n50, __n51, __n52 ];
__n47["arguments"] := __n49;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := false;
__n53["raw"] := "false";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "func(11, 12, 9)";
__n54["raw"] := "'func(11, 12, 9)'";
__n46 := [ __n47, __n53, __n54 ];
__n42["arguments"] := __n46;
__n41["expression"] := __n42;
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "assert";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "firstResult";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "firstResult !== true";
__n60["raw"] := "'firstResult !== true'";
__n58 := [ __n59, __n60 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "assert";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "secondResult";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "secondResult !== true";
__n66["raw"] := "'secondResult !== true'";
__n64 := [ __n65, __n66 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "assert";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "thirdResult";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "thirdResult !== true";
__n72["raw"] := "'thirdResult !== true'";
__n70 := [ __n71, __n72 ];
__n68["arguments"] := __n70;
__n67["expression"] := __n68;
__n1 := [ __n2, __n7, __n12, __n17, __n19, __n41, __n55, __n61, __n67 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n73 := [ "firstResult", "secondResult", "thirdResult", "func" ];
__n0["variableDeclarations"] := __n73;
__n75 := {  };
__n75["type"] := "FunctionDeclaration";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "callbackfn";
__n75["id"] := __n76;
__n77 := [ "val", "idx", "obj" ];
__n75["params"] := __n77;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "IfStatement";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "===";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "idx";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 0.;
__n83["raw"] := "0";
__n81["right"] := __n83;
__n80["test"] := __n81;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "AssignmentExpression";
__n87["operator"] := "=";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "firstResult";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "===";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "val";
__n89["left"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 11.;
__n91["raw"] := "11";
__n89["right"] := __n91;
__n87["right"] := __n89;
__n86["expression"] := __n87;
__n92 := {  };
__n92["type"] := "ReturnStatement";
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := false;
__n93["raw"] := "false";
__n92["argument"] := __n93;
__n85 := [ __n86, __n92 ];
__n84["body"] := __n85;
__n80["consequent"] := __n84;
__n94 := {  };
__n94["type"] := "IfStatement";
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "===";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "idx";
__n95["left"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 1.;
__n97["raw"] := "1";
__n95["right"] := __n97;
__n94["test"] := __n95;
__n98 := {  };
__n98["type"] := "BlockStatement";
__n100 := {  };
__n100["type"] := "ExpressionStatement";
__n101 := {  };
__n101["type"] := "AssignmentExpression";
__n101["operator"] := "=";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "secondResult";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "===";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "val";
__n103["left"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 12.;
__n105["raw"] := "12";
__n103["right"] := __n105;
__n101["right"] := __n103;
__n100["expression"] := __n101;
__n106 := {  };
__n106["type"] := "ReturnStatement";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := false;
__n107["raw"] := "false";
__n106["argument"] := __n107;
__n99 := [ __n100, __n106 ];
__n98["body"] := __n99;
__n94["consequent"] := __n98;
__n108 := {  };
__n108["type"] := "IfStatement";
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "===";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "idx";
__n109["left"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 2.;
__n111["raw"] := "2";
__n109["right"] := __n111;
__n108["test"] := __n109;
__n112 := {  };
__n112["type"] := "BlockStatement";
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "AssignmentExpression";
__n115["operator"] := "=";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "thirdResult";
__n115["left"] := __n116;
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "===";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "val";
__n117["left"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 9.;
__n119["raw"] := "9";
__n117["right"] := __n119;
__n115["right"] := __n117;
__n114["expression"] := __n115;
__n120 := {  };
__n120["type"] := "ReturnStatement";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := false;
__n121["raw"] := "false";
__n120["argument"] := __n121;
__n113 := [ __n114, __n120 ];
__n112["body"] := __n113;
__n108["consequent"] := __n112;
__n122 := {  };
__n122["type"] := "BlockStatement";
__n124 := {  };
__n124["type"] := "ReturnStatement";
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := true;
__n125["raw"] := "true";
__n124["argument"] := __n125;
__n123 := [ __n124 ];
__n122["body"] := __n123;
__n108["alternate"] := __n122;
__n94["alternate"] := __n108;
__n80["alternate"] := __n94;
__n79 := [ __n80 ];
__n78["body"] := __n79;
__n126 := [  ];
__n78["variableDeclarations"] := __n126;
__n127 := [  ];
__n78["functionDeclarations"] := __n127;
__n78["codeType"] := "function";
__n78["strict"] := false;
__n75["body"] := __n78;
__n75["generator"] := false;
__n75["expression"] := false;
__n75["async"] := false;
__n74 := [ __n75 ];
__n0["functionDeclarations"] := __n74;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}