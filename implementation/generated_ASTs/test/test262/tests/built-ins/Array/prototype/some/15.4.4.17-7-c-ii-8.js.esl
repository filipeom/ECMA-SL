function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "obj";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ObjectExpression";
__n10 := {  };
__n10["type"] := "Property";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 0.;
__n11["raw"] := "0";
__n10["key"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 9.;
__n12["raw"] := "9";
__n10["value"] := __n12;
__n10["computed"] := false;
__n10["kind"] := "init";
__n10["shorthand"] := false;
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 1.;
__n14["raw"] := "1";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 8.;
__n15["raw"] := "8";
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "init";
__n13["shorthand"] := false;
__n16 := {  };
__n16["type"] := "Property";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "length";
__n16["key"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 2.;
__n18["raw"] := "2";
__n16["value"] := __n18;
__n16["computed"] := false;
__n16["kind"] := "init";
__n16["shorthand"] := false;
__n9 := [ __n10, __n13, __n16 ];
__n8["properties"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "assert";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Array";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "prototype";
__n28["raw"] := "\"prototype\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["object"] := __n26;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "some";
__n29["raw"] := "\"some\"";
__n25["property"] := __n29;
__n25["computed"] := true;
__n24["object"] := __n25;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "call";
__n30["raw"] := "\"call\"";
__n24["property"] := __n30;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "obj";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "callbackfn";
__n31 := [ __n32, __n33 ];
__n23["arguments"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "Array.prototype.some.call(obj, callbackfn) !== true";
__n34["raw"] := "'Array.prototype.some.call(obj, callbackfn) !== true'";
__n22 := [ __n23, __n34 ];
__n20["arguments"] := __n22;
__n19["expression"] := __n20;
__n1 := [ __n2, __n4, __n19 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n35 := [ "obj" ];
__n0["variableDeclarations"] := __n35;
__n37 := {  };
__n37["type"] := "FunctionDeclaration";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "callbackfn";
__n37["id"] := __n38;
__n39 := [ "val", "idx", "obj" ];
__n37["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "===";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "idx";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 0.;
__n45["raw"] := "0";
__n43["right"] := __n45;
__n42["test"] := __n43;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "AssignmentExpression";
__n49["operator"] := "=";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n50["computed"] := true;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "obj";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "idx";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 1.;
__n54["raw"] := "1";
__n52["right"] := __n54;
__n50["property"] := __n52;
__n49["left"] := __n50;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 11.;
__n55["raw"] := "11";
__n49["right"] := __n55;
__n48["expression"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n42["consequent"] := __n46;
__n42["alternate"] := null;
__n56 := {  };
__n56["type"] := "ReturnStatement";
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := ">";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "val";
__n57["left"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 10.;
__n59["raw"] := "10";
__n57["right"] := __n59;
__n56["argument"] := __n57;
__n41 := [ __n42, __n56 ];
__n40["body"] := __n41;
__n60 := [  ];
__n40["variableDeclarations"] := __n60;
__n61 := [  ];
__n40["functionDeclarations"] := __n61;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n37["body"] := __n40;
__n37["generator"] := false;
__n37["expression"] := false;
__n37["async"] := false;
__n36 := [ __n37 ];
__n0["functionDeclarations"] := __n36;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}