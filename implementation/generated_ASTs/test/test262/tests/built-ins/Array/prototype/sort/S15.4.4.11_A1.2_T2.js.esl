function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "myComparefn";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "FunctionExpression";
__n6["id"] := null;
__n7 := [ "x", "y" ];
__n6["params"] := __n7;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "IfStatement";
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "===";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "x";
__n11["left"] := __n12;
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "undefined";
__n11["right"] := __n13;
__n10["test"] := __n11;
__n14 := {  };
__n14["type"] := "ReturnStatement";
__n15 := {  };
__n15["type"] := "UnaryExpression";
__n15["operator"] := "-";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n15["argument"] := __n16;
__n15["prefix"] := true;
__n14["argument"] := __n15;
__n10["consequent"] := __n14;
__n10["alternate"] := null;
__n17 := {  };
__n17["type"] := "IfStatement";
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "===";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "y";
__n18["left"] := __n19;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "undefined";
__n18["right"] := __n20;
__n17["test"] := __n18;
__n21 := {  };
__n21["type"] := "ReturnStatement";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 1.;
__n22["raw"] := "1";
__n21["argument"] := __n22;
__n17["consequent"] := __n21;
__n17["alternate"] := null;
__n23 := {  };
__n23["type"] := "ReturnStatement";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 0.;
__n24["raw"] := "0";
__n23["argument"] := __n24;
__n9 := [ __n10, __n17, __n23 ];
__n8["body"] := __n9;
__n25 := [  ];
__n8["variableDeclarations"] := __n25;
__n26 := [  ];
__n8["functionDeclarations"] := __n26;
__n8["codeType"] := "function";
__n8["strict"] := false;
__n6["body"] := __n8;
__n6["generator"] := false;
__n6["expression"] := false;
__n6["async"] := false;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "x";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "NewExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Array";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 2.;
__n34["raw"] := "2";
__n33 := [ __n34 ];
__n31["arguments"] := __n33;
__n29["init"] := __n31;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "AssignmentExpression";
__n36["operator"] := "=";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n37["computed"] := true;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "x";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 1.;
__n39["raw"] := "1";
__n37["property"] := __n39;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 1.;
__n40["raw"] := "1";
__n36["right"] := __n40;
__n35["expression"] := __n36;
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "x";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "sort";
__n45["raw"] := "\"sort\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "myComparefn";
__n46 := [ __n47 ];
__n42["arguments"] := __n46;
__n41["expression"] := __n42;
__n48 := {  };
__n48["type"] := "IfStatement";
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "!==";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "x";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "length";
__n52["raw"] := "\"length\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["left"] := __n50;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 2.;
__n53["raw"] := "2";
__n49["right"] := __n53;
__n48["test"] := __n49;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "$ERROR";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "+";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#1: var x = new Array(2); x[1] = 1;  x.sort(myComparefn); x.length === 2. Actual: ";
__n61["raw"] := "'#1: var x = new Array(2); x[1] = 1;  x.sort(myComparefn); x.length === 2. Actual: '";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "x";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "length";
__n64["raw"] := "\"length\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n60["right"] := __n62;
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n48["consequent"] := __n54;
__n48["alternate"] := null;
__n65 := {  };
__n65["type"] := "IfStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n67["computed"] := true;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "x";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 0.;
__n69["raw"] := "0";
__n67["property"] := __n69;
__n66["left"] := __n67;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 1.;
__n70["raw"] := "1";
__n66["right"] := __n70;
__n65["test"] := __n66;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "$ERROR";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "#2: var x = new Array(2); x[1] = 1;  x.sort(myComparefn); x[0] === 1. Actual: ";
__n78["raw"] := "'#2: var x = new Array(2); x[1] = 1;  x.sort(myComparefn); x[0] === 1. Actual: '";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n79["computed"] := true;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "x";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 0.;
__n81["raw"] := "0";
__n79["property"] := __n81;
__n77["right"] := __n79;
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n65["consequent"] := __n71;
__n65["alternate"] := null;
__n82 := {  };
__n82["type"] := "IfStatement";
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "!==";
__n84 := {  };
__n84["type"] := "MemberExpression";
__n84["computed"] := true;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "x";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 1.;
__n86["raw"] := "1";
__n84["property"] := __n86;
__n83["left"] := __n84;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "undefined";
__n83["right"] := __n87;
__n82["test"] := __n83;
__n88 := {  };
__n88["type"] := "BlockStatement";
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "$ERROR";
__n91["callee"] := __n92;
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "+";
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "#3: var x = new Array(2); x[1] = 1;  x.sort(myComparefn); x[1] === undefined. Actual: ";
__n95["raw"] := "'#3: var x = new Array(2); x[1] = 1;  x.sort(myComparefn); x[1] === undefined. Actual: '";
__n94["left"] := __n95;
__n96 := {  };
__n96["type"] := "MemberExpression";
__n96["computed"] := true;
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "x";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 1.;
__n98["raw"] := "1";
__n96["property"] := __n98;
__n94["right"] := __n96;
__n93 := [ __n94 ];
__n91["arguments"] := __n93;
__n90["expression"] := __n91;
__n89 := [ __n90 ];
__n88["body"] := __n89;
__n82["consequent"] := __n88;
__n82["alternate"] := null;
__n99 := {  };
__n99["type"] := "VariableDeclaration";
__n101 := {  };
__n101["type"] := "VariableDeclarator";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "x";
__n101["id"] := __n102;
__n103 := {  };
__n103["type"] := "NewExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "Array";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 2.;
__n106["raw"] := "2";
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n101["init"] := __n103;
__n100 := [ __n101 ];
__n99["declarations"] := __n100;
__n99["kind"] := "var";
__n107 := {  };
__n107["type"] := "ExpressionStatement";
__n108 := {  };
__n108["type"] := "AssignmentExpression";
__n108["operator"] := "=";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n109["computed"] := true;
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "x";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 0.;
__n111["raw"] := "0";
__n109["property"] := __n111;
__n108["left"] := __n109;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 1.;
__n112["raw"] := "1";
__n108["right"] := __n112;
__n107["expression"] := __n108;
__n113 := {  };
__n113["type"] := "ExpressionStatement";
__n114 := {  };
__n114["type"] := "CallExpression";
__n115 := {  };
__n115["type"] := "MemberExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "x";
__n115["object"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "sort";
__n117["raw"] := "\"sort\"";
__n115["property"] := __n117;
__n115["computed"] := true;
__n114["callee"] := __n115;
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "myComparefn";
__n118 := [ __n119 ];
__n114["arguments"] := __n118;
__n113["expression"] := __n114;
__n120 := {  };
__n120["type"] := "IfStatement";
__n121 := {  };
__n121["type"] := "BinaryExpression";
__n121["operator"] := "!==";
__n122 := {  };
__n122["type"] := "MemberExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "x";
__n122["object"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "length";
__n124["raw"] := "\"length\"";
__n122["property"] := __n124;
__n122["computed"] := true;
__n121["left"] := __n122;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := 2.;
__n125["raw"] := "2";
__n121["right"] := __n125;
__n120["test"] := __n121;
__n126 := {  };
__n126["type"] := "BlockStatement";
__n128 := {  };
__n128["type"] := "ExpressionStatement";
__n129 := {  };
__n129["type"] := "CallExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "$ERROR";
__n129["callee"] := __n130;
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := "+";
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "#4: var x = new Array(2); x[0] = 1;  x.sort(myComparefn); x.length === 2. Actual: ";
__n133["raw"] := "'#4: var x = new Array(2); x[0] = 1;  x.sort(myComparefn); x.length === 2. Actual: '";
__n132["left"] := __n133;
__n134 := {  };
__n134["type"] := "MemberExpression";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "x";
__n134["object"] := __n135;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "length";
__n136["raw"] := "\"length\"";
__n134["property"] := __n136;
__n134["computed"] := true;
__n132["right"] := __n134;
__n131 := [ __n132 ];
__n129["arguments"] := __n131;
__n128["expression"] := __n129;
__n127 := [ __n128 ];
__n126["body"] := __n127;
__n120["consequent"] := __n126;
__n120["alternate"] := null;
__n137 := {  };
__n137["type"] := "IfStatement";
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "!==";
__n139 := {  };
__n139["type"] := "MemberExpression";
__n139["computed"] := true;
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "x";
__n139["object"] := __n140;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := 0.;
__n141["raw"] := "0";
__n139["property"] := __n141;
__n138["left"] := __n139;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := 1.;
__n142["raw"] := "1";
__n138["right"] := __n142;
__n137["test"] := __n138;
__n143 := {  };
__n143["type"] := "BlockStatement";
__n145 := {  };
__n145["type"] := "ExpressionStatement";
__n146 := {  };
__n146["type"] := "CallExpression";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "$ERROR";
__n146["callee"] := __n147;
__n149 := {  };
__n149["type"] := "BinaryExpression";
__n149["operator"] := "+";
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "#5: var x = new Array(2); x[0] = 1;  x.sort(myComparefn); x[0] === 1. Actual: ";
__n150["raw"] := "'#5: var x = new Array(2); x[0] = 1;  x.sort(myComparefn); x[0] === 1. Actual: '";
__n149["left"] := __n150;
__n151 := {  };
__n151["type"] := "MemberExpression";
__n151["computed"] := true;
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "x";
__n151["object"] := __n152;
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := 0.;
__n153["raw"] := "0";
__n151["property"] := __n153;
__n149["right"] := __n151;
__n148 := [ __n149 ];
__n146["arguments"] := __n148;
__n145["expression"] := __n146;
__n144 := [ __n145 ];
__n143["body"] := __n144;
__n137["consequent"] := __n143;
__n137["alternate"] := null;
__n154 := {  };
__n154["type"] := "IfStatement";
__n155 := {  };
__n155["type"] := "BinaryExpression";
__n155["operator"] := "!==";
__n156 := {  };
__n156["type"] := "MemberExpression";
__n156["computed"] := true;
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "x";
__n156["object"] := __n157;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := 1.;
__n158["raw"] := "1";
__n156["property"] := __n158;
__n155["left"] := __n156;
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "undefined";
__n155["right"] := __n159;
__n154["test"] := __n155;
__n160 := {  };
__n160["type"] := "BlockStatement";
__n162 := {  };
__n162["type"] := "ExpressionStatement";
__n163 := {  };
__n163["type"] := "CallExpression";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "$ERROR";
__n163["callee"] := __n164;
__n166 := {  };
__n166["type"] := "BinaryExpression";
__n166["operator"] := "+";
__n167 := {  };
__n167["type"] := "Literal";
__n167["value"] := "#6: var x = new Array(2); x[0] = 1;  x.sort(myComparefn); x[1] === undefined. Actual: ";
__n167["raw"] := "'#6: var x = new Array(2); x[0] = 1;  x.sort(myComparefn); x[1] === undefined. Actual: '";
__n166["left"] := __n167;
__n168 := {  };
__n168["type"] := "MemberExpression";
__n168["computed"] := true;
__n169 := {  };
__n169["type"] := "Identifier";
__n169["name"] := "x";
__n168["object"] := __n169;
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := 1.;
__n170["raw"] := "1";
__n168["property"] := __n170;
__n166["right"] := __n168;
__n165 := [ __n166 ];
__n163["arguments"] := __n165;
__n162["expression"] := __n163;
__n161 := [ __n162 ];
__n160["body"] := __n161;
__n154["consequent"] := __n160;
__n154["alternate"] := null;
__n1 := [ __n2, __n27, __n35, __n41, __n48, __n65, __n82, __n99, __n107, __n113, __n120, __n137, __n154 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n171 := [ "myComparefn", "x" ];
__n0["variableDeclarations"] := __n171;
__n172 := [  ];
__n0["functionDeclarations"] := __n172;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}