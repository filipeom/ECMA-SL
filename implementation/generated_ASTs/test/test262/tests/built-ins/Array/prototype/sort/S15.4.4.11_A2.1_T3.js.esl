function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "valueOf";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ReturnStatement";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n14["argument"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n16 := [  ];
__n12["variableDeclarations"] := __n16;
__n17 := [  ];
__n12["functionDeclarations"] := __n17;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["expression"] := false;
__n10["async"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "toString";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "FunctionExpression";
__n20["id"] := null;
__n21 := [  ];
__n20["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ReturnStatement";
__n25 := {  };
__n25["type"] := "UnaryExpression";
__n25["operator"] := "-";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 2.;
__n26["raw"] := "2";
__n25["argument"] := __n26;
__n25["prefix"] := true;
__n24["argument"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n27 := [  ];
__n22["variableDeclarations"] := __n27;
__n28 := [  ];
__n22["functionDeclarations"] := __n28;
__n22["codeType"] := "function";
__n22["strict"] := false;
__n20["body"] := __n22;
__n20["generator"] := false;
__n20["expression"] := false;
__n20["async"] := false;
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n7 := [ __n8, __n18 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "alphabetR";
__n31["id"] := __n32;
__n33 := {  };
__n33["type"] := "ArrayExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "undefined";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 2.;
__n36["raw"] := "2";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 1.;
__n37["raw"] := "1";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "X";
__n38["raw"] := "\"X\"";
__n39 := {  };
__n39["type"] := "UnaryExpression";
__n39["operator"] := "-";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 1.;
__n40["raw"] := "1";
__n39["argument"] := __n40;
__n39["prefix"] := true;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "a";
__n41["raw"] := "\"a\"";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := true;
__n42["raw"] := "true";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "obj";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "NaN";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Infinity";
__n34 := [ __n35, __n36, __n37, __n38, __n39, __n41, __n42, __n43, __n44, __n45 ];
__n33["elements"] := __n34;
__n31["init"] := __n33;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n46 := {  };
__n46["type"] := "VariableDeclaration";
__n48 := {  };
__n48["type"] := "VariableDeclarator";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "alphabet";
__n48["id"] := __n49;
__n50 := {  };
__n50["type"] := "ArrayExpression";
__n52 := {  };
__n52["type"] := "UnaryExpression";
__n52["operator"] := "-";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 1.;
__n53["raw"] := "1";
__n52["argument"] := __n53;
__n52["prefix"] := true;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "obj";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 1.;
__n55["raw"] := "1";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 2.;
__n56["raw"] := "2";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "Infinity";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "NaN";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "X";
__n59["raw"] := "\"X\"";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "a";
__n60["raw"] := "\"a\"";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := true;
__n61["raw"] := "true";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "undefined";
__n51 := [ __n52, __n54, __n55, __n56, __n57, __n58, __n59, __n60, __n61, __n62 ];
__n50["elements"] := __n51;
__n48["init"] := __n50;
__n47 := [ __n48 ];
__n46["declarations"] := __n47;
__n46["kind"] := "var";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "MemberExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "alphabetR";
__n65["object"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "sort";
__n67["raw"] := "\"sort\"";
__n65["property"] := __n67;
__n65["computed"] := true;
__n64["callee"] := __n65;
__n68 := [  ];
__n64["arguments"] := __n68;
__n63["expression"] := __n64;
__n69 := {  };
__n69["type"] := "VariableDeclaration";
__n71 := {  };
__n71["type"] := "VariableDeclarator";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "result";
__n71["id"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := true;
__n73["raw"] := "true";
__n71["init"] := __n73;
__n70 := [ __n71 ];
__n69["declarations"] := __n70;
__n69["kind"] := "var";
__n74 := {  };
__n74["type"] := "ForStatement";
__n75 := {  };
__n75["type"] := "VariableDeclaration";
__n77 := {  };
__n77["type"] := "VariableDeclarator";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "i";
__n77["id"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 0.;
__n79["raw"] := "0";
__n77["init"] := __n79;
__n76 := [ __n77 ];
__n75["declarations"] := __n76;
__n75["kind"] := "var";
__n74["init"] := __n75;
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "<";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "i";
__n80["left"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 10.;
__n82["raw"] := "10";
__n80["right"] := __n82;
__n74["test"] := __n80;
__n83 := {  };
__n83["type"] := "UpdateExpression";
__n83["operator"] := "++";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "i";
__n83["argument"] := __n84;
__n83["prefix"] := false;
__n74["update"] := __n83;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "IfStatement";
__n88 := {  };
__n88["type"] := "UnaryExpression";
__n88["operator"] := "!";
__n89 := {  };
__n89["type"] := "LogicalExpression";
__n89["operator"] := "&&";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "isNaN";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "MemberExpression";
__n93["computed"] := true;
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "alphabetR";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "i";
__n93["property"] := __n95;
__n92 := [ __n93 ];
__n90["arguments"] := __n92;
__n89["left"] := __n90;
__n96 := {  };
__n96["type"] := "CallExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "isNaN";
__n96["callee"] := __n97;
__n99 := {  };
__n99["type"] := "MemberExpression";
__n99["computed"] := true;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "alphabet";
__n99["object"] := __n100;
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "i";
__n99["property"] := __n101;
__n98 := [ __n99 ];
__n96["arguments"] := __n98;
__n89["right"] := __n96;
__n88["argument"] := __n89;
__n88["prefix"] := true;
__n87["test"] := __n88;
__n102 := {  };
__n102["type"] := "BlockStatement";
__n104 := {  };
__n104["type"] := "IfStatement";
__n105 := {  };
__n105["type"] := "BinaryExpression";
__n105["operator"] := "!==";
__n106 := {  };
__n106["type"] := "MemberExpression";
__n106["computed"] := true;
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "alphabetR";
__n106["object"] := __n107;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "i";
__n106["property"] := __n108;
__n105["left"] := __n106;
__n109 := {  };
__n109["type"] := "MemberExpression";
__n109["computed"] := true;
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "alphabet";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "i";
__n109["property"] := __n111;
__n105["right"] := __n109;
__n104["test"] := __n105;
__n112 := {  };
__n112["type"] := "ExpressionStatement";
__n113 := {  };
__n113["type"] := "AssignmentExpression";
__n113["operator"] := "=";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "result";
__n113["left"] := __n114;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := false;
__n115["raw"] := "false";
__n113["right"] := __n115;
__n112["expression"] := __n113;
__n104["consequent"] := __n112;
__n104["alternate"] := null;
__n103 := [ __n104 ];
__n102["body"] := __n103;
__n87["consequent"] := __n102;
__n87["alternate"] := null;
__n86 := [ __n87 ];
__n85["body"] := __n86;
__n74["body"] := __n85;
__n116 := {  };
__n116["type"] := "IfStatement";
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "!==";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "result";
__n117["left"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := true;
__n119["raw"] := "true";
__n117["right"] := __n119;
__n116["test"] := __n117;
__n120 := {  };
__n120["type"] := "BlockStatement";
__n122 := {  };
__n122["type"] := "ExpressionStatement";
__n123 := {  };
__n123["type"] := "CallExpression";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "$ERROR";
__n123["callee"] := __n124;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "#1: Check ToString operator";
__n126["raw"] := "'#1: Check ToString operator'";
__n125 := [ __n126 ];
__n123["arguments"] := __n125;
__n122["expression"] := __n123;
__n121 := [ __n122 ];
__n120["body"] := __n121;
__n116["consequent"] := __n120;
__n116["alternate"] := null;
__n1 := [ __n2, __n29, __n46, __n63, __n69, __n74, __n116 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n127 := [ "obj", "alphabetR", "alphabet", "result", "i" ];
__n0["variableDeclarations"] := __n127;
__n128 := [  ];
__n0["functionDeclarations"] := __n128;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}