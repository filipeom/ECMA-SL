function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n4["computed"] := true;
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Array";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "prototype";
__n7["raw"] := "\"prototype\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["object"] := __n5;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 1.;
__n8["raw"] := "1";
__n4["property"] := __n8;
__n3["left"] := __n4;
__n9 := {  };
__n9["type"] := "UnaryExpression";
__n9["operator"] := "-";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n9["argument"] := __n10;
__n9["prefix"] := true;
__n3["right"] := __n9;
__n2["expression"] := __n3;
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "x";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "ArrayExpression";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.;
__n18["raw"] := "1";
__n16 := [ __n17, __n18 ];
__n15["elements"] := __n16;
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "arr";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "x";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "splice";
__n26["raw"] := "\"splice\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 1.;
__n28["raw"] := "1";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 1.;
__n29["raw"] := "1";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 2.;
__n30["raw"] := "2";
__n27 := [ __n28, __n29, __n30 ];
__n23["arguments"] := __n27;
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n31 := {  };
__n31["type"] := "IfStatement";
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "!==";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "arr";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "length";
__n35["raw"] := "\"length\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["left"] := __n33;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 1.;
__n36["raw"] := "1";
__n32["right"] := __n36;
__n31["test"] := __n32;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$ERROR";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "#1: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1,2); arr.length === 1. Actual: ";
__n44["raw"] := "'#1: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1,2); arr.length === 1. Actual: '";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "arr";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "length";
__n47["raw"] := "\"length\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n43["right"] := __n45;
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n31["consequent"] := __n37;
__n31["alternate"] := null;
__n48 := {  };
__n48["type"] := "IfStatement";
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "!==";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n50["computed"] := true;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "arr";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 0.;
__n52["raw"] := "0";
__n50["property"] := __n52;
__n49["left"] := __n50;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 1.;
__n53["raw"] := "1";
__n49["right"] := __n53;
__n48["test"] := __n49;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "$ERROR";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "+";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#2: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1,2); arr[0] === 1. Actual: ";
__n61["raw"] := "'#2: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1,2); arr[0] === 1. Actual: '";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "MemberExpression";
__n62["computed"] := true;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "arr";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 0.;
__n64["raw"] := "0";
__n62["property"] := __n64;
__n60["right"] := __n62;
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n48["consequent"] := __n54;
__n48["alternate"] := null;
__n65 := {  };
__n65["type"] := "IfStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n67["computed"] := true;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "arr";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 1.;
__n69["raw"] := "1";
__n67["property"] := __n69;
__n66["left"] := __n67;
__n70 := {  };
__n70["type"] := "UnaryExpression";
__n70["operator"] := "-";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 1.;
__n71["raw"] := "1";
__n70["argument"] := __n71;
__n70["prefix"] := true;
__n66["right"] := __n70;
__n65["test"] := __n66;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "$ERROR";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "+";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "#3: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1,2); arr[1] === -1. Actual: ";
__n79["raw"] := "'#3: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1,2); arr[1] === -1. Actual: '";
__n78["left"] := __n79;
__n80 := {  };
__n80["type"] := "MemberExpression";
__n80["computed"] := true;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "arr";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 1.;
__n82["raw"] := "1";
__n80["property"] := __n82;
__n78["right"] := __n80;
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n65["consequent"] := __n72;
__n65["alternate"] := null;
__n83 := {  };
__n83["type"] := "IfStatement";
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "!==";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "x";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "length";
__n87["raw"] := "\"length\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n84["left"] := __n85;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 2.;
__n88["raw"] := "2";
__n84["right"] := __n88;
__n83["test"] := __n84;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "$ERROR";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "+";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "#4: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1,2); x.length === 2. Actual: ";
__n96["raw"] := "'#4: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1,2); x.length === 2. Actual: '";
__n95["left"] := __n96;
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "x";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "length";
__n99["raw"] := "\"length\"";
__n97["property"] := __n99;
__n97["computed"] := true;
__n95["right"] := __n97;
__n94 := [ __n95 ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n83["consequent"] := __n89;
__n83["alternate"] := null;
__n100 := {  };
__n100["type"] := "IfStatement";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "!==";
__n102 := {  };
__n102["type"] := "MemberExpression";
__n102["computed"] := true;
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "x";
__n102["object"] := __n103;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := 0.;
__n104["raw"] := "0";
__n102["property"] := __n104;
__n101["left"] := __n102;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 0.;
__n105["raw"] := "0";
__n101["right"] := __n105;
__n100["test"] := __n101;
__n106 := {  };
__n106["type"] := "BlockStatement";
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "$ERROR";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "+";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "#5: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1,2); x[0] === 0. Actual: ";
__n113["raw"] := "'#5: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1,2); x[0] === 0. Actual: '";
__n112["left"] := __n113;
__n114 := {  };
__n114["type"] := "MemberExpression";
__n114["computed"] := true;
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "x";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 0.;
__n116["raw"] := "0";
__n114["property"] := __n116;
__n112["right"] := __n114;
__n111 := [ __n112 ];
__n109["arguments"] := __n111;
__n108["expression"] := __n109;
__n107 := [ __n108 ];
__n106["body"] := __n107;
__n100["consequent"] := __n106;
__n100["alternate"] := null;
__n117 := {  };
__n117["type"] := "IfStatement";
__n118 := {  };
__n118["type"] := "BinaryExpression";
__n118["operator"] := "!==";
__n119 := {  };
__n119["type"] := "MemberExpression";
__n119["computed"] := true;
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "x";
__n119["object"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := 1.;
__n121["raw"] := "1";
__n119["property"] := __n121;
__n118["left"] := __n119;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := 2.;
__n122["raw"] := "2";
__n118["right"] := __n122;
__n117["test"] := __n118;
__n123 := {  };
__n123["type"] := "BlockStatement";
__n125 := {  };
__n125["type"] := "ExpressionStatement";
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "$ERROR";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "BinaryExpression";
__n129["operator"] := "+";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "#6: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1,2); x[1] === 2. Actual: ";
__n130["raw"] := "'#6: Array.prototype[1] = -1; x = [0,1]; var arr = x.splice(1,1,2); x[1] === 2. Actual: '";
__n129["left"] := __n130;
__n131 := {  };
__n131["type"] := "MemberExpression";
__n131["computed"] := true;
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "x";
__n131["object"] := __n132;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := 1.;
__n133["raw"] := "1";
__n131["property"] := __n133;
__n129["right"] := __n131;
__n128 := [ __n129 ];
__n126["arguments"] := __n128;
__n125["expression"] := __n126;
__n124 := [ __n125 ];
__n123["body"] := __n124;
__n117["consequent"] := __n123;
__n117["alternate"] := null;
__n134 := {  };
__n134["type"] := "ExpressionStatement";
__n135 := {  };
__n135["type"] := "AssignmentExpression";
__n135["operator"] := "=";
__n136 := {  };
__n136["type"] := "MemberExpression";
__n136["computed"] := true;
__n137 := {  };
__n137["type"] := "MemberExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "Object";
__n137["object"] := __n138;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "prototype";
__n139["raw"] := "\"prototype\"";
__n137["property"] := __n139;
__n137["computed"] := true;
__n136["object"] := __n137;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := 1.;
__n140["raw"] := "1";
__n136["property"] := __n140;
__n135["left"] := __n136;
__n141 := {  };
__n141["type"] := "UnaryExpression";
__n141["operator"] := "-";
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := 1.;
__n142["raw"] := "1";
__n141["argument"] := __n142;
__n141["prefix"] := true;
__n135["right"] := __n141;
__n134["expression"] := __n135;
__n143 := {  };
__n143["type"] := "ExpressionStatement";
__n144 := {  };
__n144["type"] := "AssignmentExpression";
__n144["operator"] := "=";
__n145 := {  };
__n145["type"] := "MemberExpression";
__n146 := {  };
__n146["type"] := "MemberExpression";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "Object";
__n146["object"] := __n147;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "prototype";
__n148["raw"] := "\"prototype\"";
__n146["property"] := __n148;
__n146["computed"] := true;
__n145["object"] := __n146;
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := "length";
__n149["raw"] := "\"length\"";
__n145["property"] := __n149;
__n145["computed"] := true;
__n144["left"] := __n145;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 2.;
__n150["raw"] := "2";
__n144["right"] := __n150;
__n143["expression"] := __n144;
__n151 := {  };
__n151["type"] := "ExpressionStatement";
__n152 := {  };
__n152["type"] := "AssignmentExpression";
__n152["operator"] := "=";
__n153 := {  };
__n153["type"] := "MemberExpression";
__n154 := {  };
__n154["type"] := "MemberExpression";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "Object";
__n154["object"] := __n155;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := "prototype";
__n156["raw"] := "\"prototype\"";
__n154["property"] := __n156;
__n154["computed"] := true;
__n153["object"] := __n154;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := "splice";
__n157["raw"] := "\"splice\"";
__n153["property"] := __n157;
__n153["computed"] := true;
__n152["left"] := __n153;
__n158 := {  };
__n158["type"] := "MemberExpression";
__n159 := {  };
__n159["type"] := "MemberExpression";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "Array";
__n159["object"] := __n160;
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := "prototype";
__n161["raw"] := "\"prototype\"";
__n159["property"] := __n161;
__n159["computed"] := true;
__n158["object"] := __n159;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := "splice";
__n162["raw"] := "\"splice\"";
__n158["property"] := __n162;
__n158["computed"] := true;
__n152["right"] := __n158;
__n151["expression"] := __n152;
__n163 := {  };
__n163["type"] := "ExpressionStatement";
__n164 := {  };
__n164["type"] := "AssignmentExpression";
__n164["operator"] := "=";
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "x";
__n164["left"] := __n165;
__n166 := {  };
__n166["type"] := "ObjectExpression";
__n168 := {  };
__n168["type"] := "Property";
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := 0.;
__n169["raw"] := "0";
__n168["key"] := __n169;
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := 0.;
__n170["raw"] := "0";
__n168["value"] := __n170;
__n168["computed"] := false;
__n168["kind"] := "init";
__n168["shorthand"] := false;
__n171 := {  };
__n171["type"] := "Property";
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := 1.;
__n172["raw"] := "1";
__n171["key"] := __n172;
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := 1.;
__n173["raw"] := "1";
__n171["value"] := __n173;
__n171["computed"] := false;
__n171["kind"] := "init";
__n171["shorthand"] := false;
__n167 := [ __n168, __n171 ];
__n166["properties"] := __n167;
__n164["right"] := __n166;
__n163["expression"] := __n164;
__n174 := {  };
__n174["type"] := "VariableDeclaration";
__n176 := {  };
__n176["type"] := "VariableDeclarator";
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "arr";
__n176["id"] := __n177;
__n178 := {  };
__n178["type"] := "CallExpression";
__n179 := {  };
__n179["type"] := "MemberExpression";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "x";
__n179["object"] := __n180;
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := "splice";
__n181["raw"] := "\"splice\"";
__n179["property"] := __n181;
__n179["computed"] := true;
__n178["callee"] := __n179;
__n183 := {  };
__n183["type"] := "Literal";
__n183["value"] := 1.;
__n183["raw"] := "1";
__n184 := {  };
__n184["type"] := "Literal";
__n184["value"] := 1.;
__n184["raw"] := "1";
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := 2.;
__n185["raw"] := "2";
__n182 := [ __n183, __n184, __n185 ];
__n178["arguments"] := __n182;
__n176["init"] := __n178;
__n175 := [ __n176 ];
__n174["declarations"] := __n175;
__n174["kind"] := "var";
__n186 := {  };
__n186["type"] := "IfStatement";
__n187 := {  };
__n187["type"] := "BinaryExpression";
__n187["operator"] := "!==";
__n188 := {  };
__n188["type"] := "MemberExpression";
__n189 := {  };
__n189["type"] := "Identifier";
__n189["name"] := "arr";
__n188["object"] := __n189;
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := "length";
__n190["raw"] := "\"length\"";
__n188["property"] := __n190;
__n188["computed"] := true;
__n187["left"] := __n188;
__n191 := {  };
__n191["type"] := "Literal";
__n191["value"] := 1.;
__n191["raw"] := "1";
__n187["right"] := __n191;
__n186["test"] := __n187;
__n192 := {  };
__n192["type"] := "BlockStatement";
__n194 := {  };
__n194["type"] := "ExpressionStatement";
__n195 := {  };
__n195["type"] := "CallExpression";
__n196 := {  };
__n196["type"] := "Identifier";
__n196["name"] := "$ERROR";
__n195["callee"] := __n196;
__n198 := {  };
__n198["type"] := "BinaryExpression";
__n198["operator"] := "+";
__n199 := {  };
__n199["type"] := "Literal";
__n199["value"] := "#7: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1,2); arr.length === 1. Actual: ";
__n199["raw"] := "'#7: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1,2); arr.length === 1. Actual: '";
__n198["left"] := __n199;
__n200 := {  };
__n200["type"] := "MemberExpression";
__n201 := {  };
__n201["type"] := "Identifier";
__n201["name"] := "arr";
__n200["object"] := __n201;
__n202 := {  };
__n202["type"] := "Literal";
__n202["value"] := "length";
__n202["raw"] := "\"length\"";
__n200["property"] := __n202;
__n200["computed"] := true;
__n198["right"] := __n200;
__n197 := [ __n198 ];
__n195["arguments"] := __n197;
__n194["expression"] := __n195;
__n193 := [ __n194 ];
__n192["body"] := __n193;
__n186["consequent"] := __n192;
__n186["alternate"] := null;
__n203 := {  };
__n203["type"] := "IfStatement";
__n204 := {  };
__n204["type"] := "BinaryExpression";
__n204["operator"] := "!==";
__n205 := {  };
__n205["type"] := "MemberExpression";
__n205["computed"] := true;
__n206 := {  };
__n206["type"] := "Identifier";
__n206["name"] := "arr";
__n205["object"] := __n206;
__n207 := {  };
__n207["type"] := "Literal";
__n207["value"] := 0.;
__n207["raw"] := "0";
__n205["property"] := __n207;
__n204["left"] := __n205;
__n208 := {  };
__n208["type"] := "Literal";
__n208["value"] := 1.;
__n208["raw"] := "1";
__n204["right"] := __n208;
__n203["test"] := __n204;
__n209 := {  };
__n209["type"] := "BlockStatement";
__n211 := {  };
__n211["type"] := "ExpressionStatement";
__n212 := {  };
__n212["type"] := "CallExpression";
__n213 := {  };
__n213["type"] := "Identifier";
__n213["name"] := "$ERROR";
__n212["callee"] := __n213;
__n215 := {  };
__n215["type"] := "BinaryExpression";
__n215["operator"] := "+";
__n216 := {  };
__n216["type"] := "Literal";
__n216["value"] := "#8: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1,2); arr[0] === 1. Actual: ";
__n216["raw"] := "'#8: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1,2); arr[0] === 1. Actual: '";
__n215["left"] := __n216;
__n217 := {  };
__n217["type"] := "MemberExpression";
__n217["computed"] := true;
__n218 := {  };
__n218["type"] := "Identifier";
__n218["name"] := "arr";
__n217["object"] := __n218;
__n219 := {  };
__n219["type"] := "Literal";
__n219["value"] := 0.;
__n219["raw"] := "0";
__n217["property"] := __n219;
__n215["right"] := __n217;
__n214 := [ __n215 ];
__n212["arguments"] := __n214;
__n211["expression"] := __n212;
__n210 := [ __n211 ];
__n209["body"] := __n210;
__n203["consequent"] := __n209;
__n203["alternate"] := null;
__n220 := {  };
__n220["type"] := "IfStatement";
__n221 := {  };
__n221["type"] := "BinaryExpression";
__n221["operator"] := "!==";
__n222 := {  };
__n222["type"] := "MemberExpression";
__n222["computed"] := true;
__n223 := {  };
__n223["type"] := "Identifier";
__n223["name"] := "arr";
__n222["object"] := __n223;
__n224 := {  };
__n224["type"] := "Literal";
__n224["value"] := 1.;
__n224["raw"] := "1";
__n222["property"] := __n224;
__n221["left"] := __n222;
__n225 := {  };
__n225["type"] := "UnaryExpression";
__n225["operator"] := "-";
__n226 := {  };
__n226["type"] := "Literal";
__n226["value"] := 1.;
__n226["raw"] := "1";
__n225["argument"] := __n226;
__n225["prefix"] := true;
__n221["right"] := __n225;
__n220["test"] := __n221;
__n227 := {  };
__n227["type"] := "BlockStatement";
__n229 := {  };
__n229["type"] := "ExpressionStatement";
__n230 := {  };
__n230["type"] := "CallExpression";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "$ERROR";
__n230["callee"] := __n231;
__n233 := {  };
__n233["type"] := "BinaryExpression";
__n233["operator"] := "+";
__n234 := {  };
__n234["type"] := "Literal";
__n234["value"] := "#9: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1,2); arr[1] === -1. Actual: ";
__n234["raw"] := "'#9: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1,2); arr[1] === -1. Actual: '";
__n233["left"] := __n234;
__n235 := {  };
__n235["type"] := "MemberExpression";
__n235["computed"] := true;
__n236 := {  };
__n236["type"] := "Identifier";
__n236["name"] := "arr";
__n235["object"] := __n236;
__n237 := {  };
__n237["type"] := "Literal";
__n237["value"] := 1.;
__n237["raw"] := "1";
__n235["property"] := __n237;
__n233["right"] := __n235;
__n232 := [ __n233 ];
__n230["arguments"] := __n232;
__n229["expression"] := __n230;
__n228 := [ __n229 ];
__n227["body"] := __n228;
__n220["consequent"] := __n227;
__n220["alternate"] := null;
__n238 := {  };
__n238["type"] := "IfStatement";
__n239 := {  };
__n239["type"] := "BinaryExpression";
__n239["operator"] := "!==";
__n240 := {  };
__n240["type"] := "MemberExpression";
__n241 := {  };
__n241["type"] := "Identifier";
__n241["name"] := "x";
__n240["object"] := __n241;
__n242 := {  };
__n242["type"] := "Literal";
__n242["value"] := "length";
__n242["raw"] := "\"length\"";
__n240["property"] := __n242;
__n240["computed"] := true;
__n239["left"] := __n240;
__n243 := {  };
__n243["type"] := "Literal";
__n243["value"] := 2.;
__n243["raw"] := "2";
__n239["right"] := __n243;
__n238["test"] := __n239;
__n244 := {  };
__n244["type"] := "BlockStatement";
__n246 := {  };
__n246["type"] := "ExpressionStatement";
__n247 := {  };
__n247["type"] := "CallExpression";
__n248 := {  };
__n248["type"] := "Identifier";
__n248["name"] := "$ERROR";
__n247["callee"] := __n248;
__n250 := {  };
__n250["type"] := "BinaryExpression";
__n250["operator"] := "+";
__n251 := {  };
__n251["type"] := "Literal";
__n251["value"] := "#10: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1,2); x.length === 2. Actual: ";
__n251["raw"] := "'#10: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1,2); x.length === 2. Actual: '";
__n250["left"] := __n251;
__n252 := {  };
__n252["type"] := "MemberExpression";
__n253 := {  };
__n253["type"] := "Identifier";
__n253["name"] := "x";
__n252["object"] := __n253;
__n254 := {  };
__n254["type"] := "Literal";
__n254["value"] := "length";
__n254["raw"] := "\"length\"";
__n252["property"] := __n254;
__n252["computed"] := true;
__n250["right"] := __n252;
__n249 := [ __n250 ];
__n247["arguments"] := __n249;
__n246["expression"] := __n247;
__n245 := [ __n246 ];
__n244["body"] := __n245;
__n238["consequent"] := __n244;
__n238["alternate"] := null;
__n255 := {  };
__n255["type"] := "IfStatement";
__n256 := {  };
__n256["type"] := "BinaryExpression";
__n256["operator"] := "!==";
__n257 := {  };
__n257["type"] := "MemberExpression";
__n257["computed"] := true;
__n258 := {  };
__n258["type"] := "Identifier";
__n258["name"] := "x";
__n257["object"] := __n258;
__n259 := {  };
__n259["type"] := "Literal";
__n259["value"] := 0.;
__n259["raw"] := "0";
__n257["property"] := __n259;
__n256["left"] := __n257;
__n260 := {  };
__n260["type"] := "Literal";
__n260["value"] := 0.;
__n260["raw"] := "0";
__n256["right"] := __n260;
__n255["test"] := __n256;
__n261 := {  };
__n261["type"] := "BlockStatement";
__n263 := {  };
__n263["type"] := "ExpressionStatement";
__n264 := {  };
__n264["type"] := "CallExpression";
__n265 := {  };
__n265["type"] := "Identifier";
__n265["name"] := "$ERROR";
__n264["callee"] := __n265;
__n267 := {  };
__n267["type"] := "BinaryExpression";
__n267["operator"] := "+";
__n268 := {  };
__n268["type"] := "Literal";
__n268["value"] := "#11: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1,2); x[0] === 0. Actual: ";
__n268["raw"] := "'#11: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1,2); x[0] === 0. Actual: '";
__n267["left"] := __n268;
__n269 := {  };
__n269["type"] := "MemberExpression";
__n269["computed"] := true;
__n270 := {  };
__n270["type"] := "Identifier";
__n270["name"] := "x";
__n269["object"] := __n270;
__n271 := {  };
__n271["type"] := "Literal";
__n271["value"] := 0.;
__n271["raw"] := "0";
__n269["property"] := __n271;
__n267["right"] := __n269;
__n266 := [ __n267 ];
__n264["arguments"] := __n266;
__n263["expression"] := __n264;
__n262 := [ __n263 ];
__n261["body"] := __n262;
__n255["consequent"] := __n261;
__n255["alternate"] := null;
__n272 := {  };
__n272["type"] := "IfStatement";
__n273 := {  };
__n273["type"] := "BinaryExpression";
__n273["operator"] := "!==";
__n274 := {  };
__n274["type"] := "MemberExpression";
__n274["computed"] := true;
__n275 := {  };
__n275["type"] := "Identifier";
__n275["name"] := "x";
__n274["object"] := __n275;
__n276 := {  };
__n276["type"] := "Literal";
__n276["value"] := 1.;
__n276["raw"] := "1";
__n274["property"] := __n276;
__n273["left"] := __n274;
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := 2.;
__n277["raw"] := "2";
__n273["right"] := __n277;
__n272["test"] := __n273;
__n278 := {  };
__n278["type"] := "BlockStatement";
__n280 := {  };
__n280["type"] := "ExpressionStatement";
__n281 := {  };
__n281["type"] := "CallExpression";
__n282 := {  };
__n282["type"] := "Identifier";
__n282["name"] := "$ERROR";
__n281["callee"] := __n282;
__n284 := {  };
__n284["type"] := "BinaryExpression";
__n284["operator"] := "+";
__n285 := {  };
__n285["type"] := "Literal";
__n285["value"] := "#12: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1,2); x[1] === 2. Actual: ";
__n285["raw"] := "'#12: Object.prototype[1] = -1; Object.prototype.length = 2; Object.prototype.splice = Array.prototype.splice; x = {0:0, 1:1}; var arr = x.splice(1,1,2); x[1] === 2. Actual: '";
__n284["left"] := __n285;
__n286 := {  };
__n286["type"] := "MemberExpression";
__n286["computed"] := true;
__n287 := {  };
__n287["type"] := "Identifier";
__n287["name"] := "x";
__n286["object"] := __n287;
__n288 := {  };
__n288["type"] := "Literal";
__n288["value"] := 1.;
__n288["raw"] := "1";
__n286["property"] := __n288;
__n284["right"] := __n286;
__n283 := [ __n284 ];
__n281["arguments"] := __n283;
__n280["expression"] := __n281;
__n279 := [ __n280 ];
__n278["body"] := __n279;
__n272["consequent"] := __n278;
__n272["alternate"] := null;
__n1 := [ __n2, __n11, __n19, __n31, __n48, __n65, __n83, __n100, __n117, __n134, __n143, __n151, __n163, __n174, __n186, __n203, __n220, __n238, __n255, __n272 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n289 := [ "x", "arr" ];
__n0["variableDeclarations"] := __n289;
__n290 := [  ];
__n0["functionDeclarations"] := __n290;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}