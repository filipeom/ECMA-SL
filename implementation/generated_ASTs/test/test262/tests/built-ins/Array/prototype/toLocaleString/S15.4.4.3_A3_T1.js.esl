function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "n";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "obj";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "toLocaleString";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [  ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "UpdateExpression";
__n20["operator"] := "++";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "n";
__n20["argument"] := __n21;
__n20["prefix"] := false;
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n22 := [  ];
__n17["variableDeclarations"] := __n22;
__n23 := [  ];
__n17["functionDeclarations"] := __n23;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["expression"] := false;
__n15["async"] := false;
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "init";
__n13["shorthand"] := false;
__n12 := [ __n13 ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "AssignmentExpression";
__n25["operator"] := "=";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n26["computed"] := true;
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Array";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "prototype";
__n29["raw"] := "\"prototype\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["object"] := __n27;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 1.;
__n30["raw"] := "1";
__n26["property"] := __n30;
__n25["left"] := __n26;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "obj";
__n25["right"] := __n31;
__n24["expression"] := __n25;
__n32 := {  };
__n32["type"] := "VariableDeclaration";
__n34 := {  };
__n34["type"] := "VariableDeclarator";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "x";
__n34["id"] := __n35;
__n36 := {  };
__n36["type"] := "ArrayExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "obj";
__n37 := [ __n38 ];
__n36["elements"] := __n37;
__n34["init"] := __n36;
__n33 := [ __n34 ];
__n32["declarations"] := __n33;
__n32["kind"] := "var";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "AssignmentExpression";
__n40["operator"] := "=";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "x";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "length";
__n43["raw"] := "\"length\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["left"] := __n41;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 2.;
__n44["raw"] := "2";
__n40["right"] := __n44;
__n39["expression"] := __n40;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "x";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "toLocaleString";
__n49["raw"] := "\"toLocaleString\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n50 := [  ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n51 := {  };
__n51["type"] := "IfStatement";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "!==";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "n";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 2.;
__n54["raw"] := "2";
__n52["right"] := __n54;
__n51["test"] := __n52;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "#1: var n = 0; var obj = {toLocaleString: function() {n++}}; Array.prototype[1] = obj; x = [obj]; x.length = 2; x.toLocaleString(); n === 2. Actual: ";
__n62["raw"] := "'#1: var n = 0; var obj = {toLocaleString: function() {n++}}; Array.prototype[1] = obj; x = [obj]; x.length = 2; x.toLocaleString(); n === 2. Actual: '";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "n";
__n61["right"] := __n63;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n51["consequent"] := __n55;
__n51["alternate"] := null;
__n1 := [ __n2, __n7, __n24, __n32, __n39, __n45, __n51 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n64 := [ "n", "obj", "x" ];
__n0["variableDeclarations"] := __n64;
__n65 := [  ];
__n0["functionDeclarations"] := __n65;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}