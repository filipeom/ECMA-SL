function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "result";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "MyCollection";
__n6["expression"] := __n7;
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "result";
__n9["left"] := __n10;
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "Array";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "from";
__n15["raw"] := "\"from\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["object"] := __n13;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "call";
__n16["raw"] := "\"call\"";
__n12["property"] := __n16;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "MyCollection";
__n19 := {  };
__n19["type"] := "ObjectExpression";
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "length";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 42.;
__n23["raw"] := "42";
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n20 := [ __n21 ];
__n19["properties"] := __n20;
__n17 := [ __n18, __n19 ];
__n11["arguments"] := __n17;
__n9["right"] := __n11;
__n8["expression"] := __n9;
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "sameValue";
__n28["raw"] := "\"sameValue\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "result";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "args";
__n33["raw"] := "\"args\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["object"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "length";
__n34["raw"] := "\"length\"";
__n30["property"] := __n34;
__n30["computed"] := true;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 1.;
__n35["raw"] := "1";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "The value of result.args.length is expected to be 1";
__n36["raw"] := "'The value of result.args.length is expected to be 1'";
__n29 := [ __n30, __n35, __n36 ];
__n25["arguments"] := __n29;
__n24["expression"] := __n25;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "assert";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "sameValue";
__n41["raw"] := "\"sameValue\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "MemberExpression";
__n43["computed"] := true;
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "result";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "args";
__n46["raw"] := "\"args\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["object"] := __n44;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 0.;
__n47["raw"] := "0";
__n43["property"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 42.;
__n48["raw"] := "42";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "The value of result.args[0] is expected to be 42";
__n49["raw"] := "'The value of result.args[0] is expected to be 42'";
__n42 := [ __n43, __n48, __n49 ];
__n38["arguments"] := __n42;
__n37["expression"] := __n38;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "assert";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "instanceof";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "result";
__n54["left"] := __n55;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "MyCollection";
__n54["right"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "The result of evaluating (result instanceof MyCollection) is expected to be true";
__n57["raw"] := "'The result of evaluating (result instanceof MyCollection) is expected to be true'";
__n53 := [ __n54, __n57 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n1 := [ __n2, __n6, __n8, __n24, __n37, __n50 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n58 := [ "result" ];
__n0["variableDeclarations"] := __n58;
__n60 := {  };
__n60["type"] := "FunctionDeclaration";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "MyCollection";
__n60["id"] := __n61;
__n62 := [  ];
__n60["params"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "AssignmentExpression";
__n66["operator"] := "=";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "ThisExpression";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "args";
__n69["raw"] := "\"args\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["left"] := __n67;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "arguments";
__n66["right"] := __n70;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n71 := [  ];
__n63["variableDeclarations"] := __n71;
__n72 := [  ];
__n63["functionDeclarations"] := __n72;
__n63["codeType"] := "function";
__n63["strict"] := false;
__n60["body"] := __n63;
__n60["generator"] := false;
__n60["async"] := false;
__n60["expression"] := false;
__n59 := [ __n60 ];
__n0["functionDeclarations"] := __n59;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}