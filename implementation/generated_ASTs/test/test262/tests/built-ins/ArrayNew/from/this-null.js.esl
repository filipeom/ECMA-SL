function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "result";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Array";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "from";
__n10["raw"] := "\"from\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["object"] := __n8;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "call";
__n11["raw"] := "\"call\"";
__n7["property"] := __n11;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 'null;
__n13["raw"] := "\"'null\"";
__n14 := {  };
__n14["type"] := "ArrayExpression";
__n15 := [  ];
__n14["elements"] := __n15;
__n12 := [ __n13, __n14 ];
__n6["arguments"] := __n12;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "assert";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "instanceof";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "result";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Array";
__n20["right"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "The result of evaluating (result instanceof Array) is expected to be true";
__n23["raw"] := "'The result of evaluating (result instanceof Array) is expected to be true'";
__n19 := [ __n20, __n23 ];
__n17["arguments"] := __n19;
__n16["expression"] := __n17;
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "sameValue";
__n28["raw"] := "\"sameValue\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "result";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "length";
__n32["raw"] := "\"length\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "The value of result.length is expected to be 0";
__n34["raw"] := "'The value of result.length is expected to be 0'";
__n29 := [ __n30, __n33, __n34 ];
__n25["arguments"] := __n29;
__n24["expression"] := __n25;
__n1 := [ __n2, __n16, __n24 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n35 := [ "result" ];
__n0["variableDeclarations"] := __n35;
__n36 := [  ];
__n0["functionDeclarations"] := __n36;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}