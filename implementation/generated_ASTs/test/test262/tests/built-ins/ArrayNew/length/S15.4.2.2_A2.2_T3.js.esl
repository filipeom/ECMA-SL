function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "ExpressionStatement";
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Array";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.5;
__n9["raw"] := "1.5";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n5["expression"] := __n6;
__n10 := {  };
__n10["type"] := "ThrowStatement";
__n11 := {  };
__n11["type"] := "NewExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Test262Error";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "+";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "#1.1: new Array(1.5) throw RangeError. Actual: ";
__n15["raw"] := "'#1.1: new Array(1.5) throw RangeError. Actual: '";
__n14["left"] := __n15;
__n16 := {  };
__n16["type"] := "NewExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Array";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.5;
__n19["raw"] := "1.5";
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n14["right"] := __n16;
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["argument"] := __n11;
__n4 := [ __n5, __n10 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n20 := {  };
__n20["type"] := "CatchClause";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "e";
__n20["param"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "sameValue";
__n28["raw"] := "\"sameValue\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "instanceof";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "e";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "RangeError";
__n30["right"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := true;
__n33["raw"] := "true";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "The result of evaluating (e instanceof RangeError) is expected to be true";
__n34["raw"] := "'The result of evaluating (e instanceof RangeError) is expected to be true'";
__n29 := [ __n30, __n33, __n34 ];
__n25["arguments"] := __n29;
__n24["expression"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n20["body"] := __n22;
__n2["handler"] := __n20;
__n2["finalizer"] := null;
__n35 := {  };
__n35["type"] := "TryStatement";
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "NewExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Array";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Number";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "MAX_VALUE";
__n44["raw"] := "\"MAX_VALUE\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n45 := {  };
__n45["type"] := "ThrowStatement";
__n46 := {  };
__n46["type"] := "NewExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "Test262Error";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "+";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "#2.1: new Array(Number.MAX_VALUE) throw RangeError. Actual: ";
__n50["raw"] := "'#2.1: new Array(Number.MAX_VALUE) throw RangeError. Actual: '";
__n49["left"] := __n50;
__n51 := {  };
__n51["type"] := "NewExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Array";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Number";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "MAX_VALUE";
__n56["raw"] := "\"MAX_VALUE\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n49["right"] := __n51;
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["argument"] := __n46;
__n37 := [ __n38, __n45 ];
__n36["body"] := __n37;
__n35["block"] := __n36;
__n57 := {  };
__n57["type"] := "CatchClause";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "e";
__n57["param"] := __n58;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "assert";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "sameValue";
__n65["raw"] := "\"sameValue\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "instanceof";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "e";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "RangeError";
__n67["right"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := true;
__n70["raw"] := "true";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "The result of evaluating (e instanceof RangeError) is expected to be true";
__n71["raw"] := "'The result of evaluating (e instanceof RangeError) is expected to be true'";
__n66 := [ __n67, __n70, __n71 ];
__n62["arguments"] := __n66;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n57["body"] := __n59;
__n35["handler"] := __n57;
__n35["finalizer"] := null;
__n72 := {  };
__n72["type"] := "TryStatement";
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "NewExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "Array";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "Number";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "MIN_VALUE";
__n81["raw"] := "\"MIN_VALUE\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["expression"] := __n76;
__n82 := {  };
__n82["type"] := "ThrowStatement";
__n83 := {  };
__n83["type"] := "NewExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "Test262Error";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#3.1: new Array(Number.MIN_VALUE) throw RangeError. Actual: ";
__n87["raw"] := "'#3.1: new Array(Number.MIN_VALUE) throw RangeError. Actual: '";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "NewExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "Array";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "Number";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "MIN_VALUE";
__n93["raw"] := "\"MIN_VALUE\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n90 := [ __n91 ];
__n88["arguments"] := __n90;
__n86["right"] := __n88;
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["argument"] := __n83;
__n74 := [ __n75, __n82 ];
__n73["body"] := __n74;
__n72["block"] := __n73;
__n94 := {  };
__n94["type"] := "CatchClause";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "e";
__n94["param"] := __n95;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "assert";
__n100["object"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "sameValue";
__n102["raw"] := "\"sameValue\"";
__n100["property"] := __n102;
__n100["computed"] := true;
__n99["callee"] := __n100;
__n104 := {  };
__n104["type"] := "BinaryExpression";
__n104["operator"] := "instanceof";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "e";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "RangeError";
__n104["right"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := true;
__n107["raw"] := "true";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "The result of evaluating (e instanceof RangeError) is expected to be true";
__n108["raw"] := "'The result of evaluating (e instanceof RangeError) is expected to be true'";
__n103 := [ __n104, __n107, __n108 ];
__n99["arguments"] := __n103;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n94["body"] := __n96;
__n72["handler"] := __n94;
__n72["finalizer"] := null;
__n1 := [ __n2, __n35, __n72 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n109 := [  ];
__n0["variableDeclarations"] := __n109;
__n110 := [  ];
__n0["functionDeclarations"] := __n110;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}