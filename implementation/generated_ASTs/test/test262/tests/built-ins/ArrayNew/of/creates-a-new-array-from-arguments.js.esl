function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "a1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Array";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "of";
__n9["raw"] := "\"of\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "Mike";
__n11["raw"] := "'Mike'";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "Rick";
__n12["raw"] := "'Rick'";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "Leo";
__n13["raw"] := "'Leo'";
__n10 := [ __n11, __n12, __n13 ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "assert";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "sameValue";
__n18["raw"] := "\"sameValue\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "a1";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "length";
__n22["raw"] := "\"length\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 3.;
__n23["raw"] := "3";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "The value of a1.length is expected to be 3";
__n24["raw"] := "'The value of a1.length is expected to be 3'";
__n19 := [ __n20, __n23, __n24 ];
__n15["arguments"] := __n19;
__n14["expression"] := __n15;
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "assert";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "sameValue";
__n29["raw"] := "\"sameValue\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "MemberExpression";
__n31["computed"] := true;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "a1";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n31["property"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "Mike";
__n34["raw"] := "'Mike'";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "The value of a1[0] is expected to be \"Mike\"";
__n35["raw"] := "'The value of a1[0] is expected to be \"Mike\"'";
__n30 := [ __n31, __n34, __n35 ];
__n26["arguments"] := __n30;
__n25["expression"] := __n26;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "assert";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "sameValue";
__n40["raw"] := "\"sameValue\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n42 := {  };
__n42["type"] := "MemberExpression";
__n42["computed"] := true;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "a1";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 1.;
__n44["raw"] := "1";
__n42["property"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "Rick";
__n45["raw"] := "'Rick'";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "The value of a1[1] is expected to be \"Rick\"";
__n46["raw"] := "'The value of a1[1] is expected to be \"Rick\"'";
__n41 := [ __n42, __n45, __n46 ];
__n37["arguments"] := __n41;
__n36["expression"] := __n37;
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "assert";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "sameValue";
__n51["raw"] := "\"sameValue\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["callee"] := __n49;
__n53 := {  };
__n53["type"] := "MemberExpression";
__n53["computed"] := true;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "a1";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 2.;
__n55["raw"] := "2";
__n53["property"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "Leo";
__n56["raw"] := "'Leo'";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "The value of a1[2] is expected to be \"Leo\"";
__n57["raw"] := "'The value of a1[2] is expected to be \"Leo\"'";
__n52 := [ __n53, __n56, __n57 ];
__n48["arguments"] := __n52;
__n47["expression"] := __n48;
__n58 := {  };
__n58["type"] := "VariableDeclaration";
__n60 := {  };
__n60["type"] := "VariableDeclarator";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "a2";
__n60["id"] := __n61;
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "Array";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "of";
__n65["raw"] := "\"of\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "undefined";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := false;
__n68["raw"] := "false";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 'null;
__n69["raw"] := "\"'null\"";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "undefined";
__n66 := [ __n67, __n68, __n69, __n70 ];
__n62["arguments"] := __n66;
__n60["init"] := __n62;
__n59 := [ __n60 ];
__n58["declarations"] := __n59;
__n58["kind"] := "var";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "assert";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "sameValue";
__n75["raw"] := "\"sameValue\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n72["callee"] := __n73;
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "a2";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "length";
__n79["raw"] := "\"length\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 4.;
__n80["raw"] := "4";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "The value of a2.length is expected to be 4";
__n81["raw"] := "'The value of a2.length is expected to be 4'";
__n76 := [ __n77, __n80, __n81 ];
__n72["arguments"] := __n76;
__n71["expression"] := __n72;
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "assert";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "sameValue";
__n86["raw"] := "\"sameValue\"";
__n84["property"] := __n86;
__n84["computed"] := true;
__n83["callee"] := __n84;
__n88 := {  };
__n88["type"] := "MemberExpression";
__n88["computed"] := true;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "a2";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 0.;
__n90["raw"] := "0";
__n88["property"] := __n90;
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "undefined";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "The value of a2[0] is expected to equal undefined";
__n92["raw"] := "'The value of a2[0] is expected to equal undefined'";
__n87 := [ __n88, __n91, __n92 ];
__n83["arguments"] := __n87;
__n82["expression"] := __n83;
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "assert";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "sameValue";
__n97["raw"] := "\"sameValue\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["callee"] := __n95;
__n99 := {  };
__n99["type"] := "MemberExpression";
__n99["computed"] := true;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "a2";
__n99["object"] := __n100;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 1.;
__n101["raw"] := "1";
__n99["property"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := false;
__n102["raw"] := "false";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "The value of a2[1] is expected to be false";
__n103["raw"] := "'The value of a2[1] is expected to be false'";
__n98 := [ __n99, __n102, __n103 ];
__n94["arguments"] := __n98;
__n93["expression"] := __n94;
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "MemberExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "assert";
__n106["object"] := __n107;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "sameValue";
__n108["raw"] := "\"sameValue\"";
__n106["property"] := __n108;
__n106["computed"] := true;
__n105["callee"] := __n106;
__n110 := {  };
__n110["type"] := "MemberExpression";
__n110["computed"] := true;
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "a2";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 2.;
__n112["raw"] := "2";
__n110["property"] := __n112;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 'null;
__n113["raw"] := "\"'null\"";
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "The value of a2[2] is expected to be null";
__n114["raw"] := "'The value of a2[2] is expected to be null'";
__n109 := [ __n110, __n113, __n114 ];
__n105["arguments"] := __n109;
__n104["expression"] := __n105;
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "MemberExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "assert";
__n117["object"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "sameValue";
__n119["raw"] := "\"sameValue\"";
__n117["property"] := __n119;
__n117["computed"] := true;
__n116["callee"] := __n117;
__n121 := {  };
__n121["type"] := "MemberExpression";
__n121["computed"] := true;
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "a2";
__n121["object"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 3.;
__n123["raw"] := "3";
__n121["property"] := __n123;
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "undefined";
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := "The value of a2[3] is expected to equal undefined";
__n125["raw"] := "'The value of a2[3] is expected to equal undefined'";
__n120 := [ __n121, __n124, __n125 ];
__n116["arguments"] := __n120;
__n115["expression"] := __n116;
__n126 := {  };
__n126["type"] := "VariableDeclaration";
__n128 := {  };
__n128["type"] := "VariableDeclarator";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "a3";
__n128["id"] := __n129;
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "MemberExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "Array";
__n131["object"] := __n132;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "of";
__n133["raw"] := "\"of\"";
__n131["property"] := __n133;
__n131["computed"] := true;
__n130["callee"] := __n131;
__n134 := [  ];
__n130["arguments"] := __n134;
__n128["init"] := __n130;
__n127 := [ __n128 ];
__n126["declarations"] := __n127;
__n126["kind"] := "var";
__n135 := {  };
__n135["type"] := "ExpressionStatement";
__n136 := {  };
__n136["type"] := "CallExpression";
__n137 := {  };
__n137["type"] := "MemberExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "assert";
__n137["object"] := __n138;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "sameValue";
__n139["raw"] := "\"sameValue\"";
__n137["property"] := __n139;
__n137["computed"] := true;
__n136["callee"] := __n137;
__n141 := {  };
__n141["type"] := "MemberExpression";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "a3";
__n141["object"] := __n142;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := "length";
__n143["raw"] := "\"length\"";
__n141["property"] := __n143;
__n141["computed"] := true;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := 0.;
__n144["raw"] := "0";
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "The value of a3.length is expected to be 0";
__n145["raw"] := "'The value of a3.length is expected to be 0'";
__n140 := [ __n141, __n144, __n145 ];
__n136["arguments"] := __n140;
__n135["expression"] := __n136;
__n1 := [ __n2, __n14, __n25, __n36, __n47, __n58, __n71, __n82, __n93, __n104, __n115, __n126, __n135 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n146 := [ "a1", "a2", "a3" ];
__n0["variableDeclarations"] := __n146;
__n147 := [  ];
__n0["functionDeclarations"] := __n147;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}