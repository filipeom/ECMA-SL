function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "T";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "assert";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "throws";
__n8["raw"] := "\"throws\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Test262Error";
__n11 := {  };
__n11["type"] := "FunctionExpression";
__n11["id"] := null;
__n12 := [  ];
__n11["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Array";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "of";
__n20["raw"] := "\"of\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["object"] := __n18;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "call";
__n21["raw"] := "\"call\"";
__n17["property"] := __n21;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "T";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "Bob";
__n24["raw"] := "'Bob'";
__n22 := [ __n23, __n24 ];
__n16["arguments"] := __n22;
__n15["expression"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n25 := [  ];
__n13["variableDeclarations"] := __n25;
__n26 := [  ];
__n13["functionDeclarations"] := __n26;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n11["body"] := __n13;
__n11["generator"] := false;
__n11["async"] := false;
__n11["expression"] := false;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "Array.of.call(T, \"Bob\") throws a Test262Error exception";
__n27["raw"] := "'Array.of.call(T, \"Bob\") throws a Test262Error exception'";
__n9 := [ __n10, __n11, __n27 ];
__n5["arguments"] := __n9;
__n4["expression"] := __n5;
__n1 := [ __n2, __n4 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n28 := [  ];
__n0["variableDeclarations"] := __n28;
__n30 := {  };
__n30["type"] := "FunctionDeclaration";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "T";
__n30["id"] := __n31;
__n32 := [  ];
__n30["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ReturnStatement";
__n36 := {  };
__n36["type"] := "NewExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Proxy";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "ObjectExpression";
__n40 := [  ];
__n39["properties"] := __n40;
__n41 := {  };
__n41["type"] := "ObjectExpression";
__n43 := {  };
__n43["type"] := "Property";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "defineProperty";
__n43["key"] := __n44;
__n45 := {  };
__n45["type"] := "FunctionExpression";
__n45["id"] := null;
__n46 := [  ];
__n45["params"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ThrowStatement";
__n50 := {  };
__n50["type"] := "NewExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "Test262Error";
__n50["callee"] := __n51;
__n52 := [  ];
__n50["arguments"] := __n52;
__n49["argument"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n53 := [  ];
__n47["variableDeclarations"] := __n53;
__n54 := [  ];
__n47["functionDeclarations"] := __n54;
__n47["codeType"] := "function";
__n47["strict"] := false;
__n45["body"] := __n47;
__n45["generator"] := false;
__n45["async"] := false;
__n45["expression"] := false;
__n43["value"] := __n45;
__n43["computed"] := false;
__n43["kind"] := "init";
__n43["shorthand"] := false;
__n42 := [ __n43 ];
__n41["properties"] := __n42;
__n38 := [ __n39, __n41 ];
__n36["arguments"] := __n38;
__n35["argument"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n55 := [  ];
__n33["variableDeclarations"] := __n55;
__n56 := [  ];
__n33["functionDeclarations"] := __n56;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n30["body"] := __n33;
__n30["generator"] := false;
__n30["async"] := false;
__n30["expression"] := false;
__n29 := [ __n30 ];
__n0["functionDeclarations"] := __n29;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}