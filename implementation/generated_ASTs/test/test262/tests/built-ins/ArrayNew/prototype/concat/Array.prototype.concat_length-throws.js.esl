function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "spreadablePoisonedLengthGetter";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n10["computed"] := true;
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "spreadablePoisonedLengthGetter";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Symbol";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "isConcatSpreadable";
__n14["raw"] := "\"isConcatSpreadable\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n10["property"] := __n12;
__n9["left"] := __n10;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := true;
__n15["raw"] := "true";
__n9["right"] := __n15;
__n8["expression"] := __n9;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Object";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "defineProperty";
__n20["raw"] := "\"defineProperty\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "spreadablePoisonedLengthGetter";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "length";
__n23["raw"] := "\"length\"";
__n24 := {  };
__n24["type"] := "ObjectExpression";
__n26 := {  };
__n26["type"] := "Property";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "get";
__n26["key"] := __n27;
__n28 := {  };
__n28["type"] := "FunctionExpression";
__n28["id"] := null;
__n29 := [  ];
__n28["params"] := __n29;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ThrowStatement";
__n33 := {  };
__n33["type"] := "NewExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Test262Error";
__n33["callee"] := __n34;
__n35 := [  ];
__n33["arguments"] := __n35;
__n32["argument"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n36 := [  ];
__n30["variableDeclarations"] := __n36;
__n37 := [  ];
__n30["functionDeclarations"] := __n37;
__n30["codeType"] := "function";
__n30["strict"] := false;
__n28["body"] := __n30;
__n28["generator"] := false;
__n28["async"] := false;
__n28["expression"] := false;
__n26["value"] := __n28;
__n26["computed"] := false;
__n26["kind"] := "init";
__n26["shorthand"] := false;
__n25 := [ __n26 ];
__n24["properties"] := __n25;
__n21 := [ __n22, __n23, __n24 ];
__n17["arguments"] := __n21;
__n16["expression"] := __n17;
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "assert";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "throws";
__n42["raw"] := "\"throws\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Test262Error";
__n45 := {  };
__n45["type"] := "FunctionExpression";
__n45["id"] := null;
__n46 := [  ];
__n45["params"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "ArrayExpression";
__n53 := [  ];
__n52["elements"] := __n53;
__n51["object"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "concat";
__n54["raw"] := "\"concat\"";
__n51["property"] := __n54;
__n51["computed"] := true;
__n50["callee"] := __n51;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "spreadablePoisonedLengthGetter";
__n55 := [ __n56 ];
__n50["arguments"] := __n55;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n57 := [  ];
__n47["variableDeclarations"] := __n57;
__n58 := [  ];
__n47["functionDeclarations"] := __n58;
__n47["codeType"] := "function";
__n47["strict"] := false;
__n45["body"] := __n47;
__n45["generator"] := false;
__n45["async"] := false;
__n45["expression"] := false;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "[].concat(spreadablePoisonedLengthGetter) throws a Test262Error exception";
__n59["raw"] := "'[].concat(spreadablePoisonedLengthGetter) throws a Test262Error exception'";
__n43 := [ __n44, __n45, __n59 ];
__n39["arguments"] := __n43;
__n38["expression"] := __n39;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "assert";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "throws";
__n64["raw"] := "\"throws\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "Test262Error";
__n67 := {  };
__n67["type"] := "FunctionExpression";
__n67["id"] := null;
__n68 := [  ];
__n67["params"] := __n68;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "Array";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "prototype";
__n77["raw"] := "\"prototype\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["object"] := __n75;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "concat";
__n78["raw"] := "\"concat\"";
__n74["property"] := __n78;
__n74["computed"] := true;
__n73["object"] := __n74;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "call";
__n79["raw"] := "\"call\"";
__n73["property"] := __n79;
__n73["computed"] := true;
__n72["callee"] := __n73;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "spreadablePoisonedLengthGetter";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 1.;
__n82["raw"] := "1";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 2.;
__n83["raw"] := "2";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := 3.;
__n84["raw"] := "3";
__n80 := [ __n81, __n82, __n83, __n84 ];
__n72["arguments"] := __n80;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n85 := [  ];
__n69["variableDeclarations"] := __n85;
__n86 := [  ];
__n69["functionDeclarations"] := __n86;
__n69["codeType"] := "function";
__n69["strict"] := false;
__n67["body"] := __n69;
__n67["generator"] := false;
__n67["async"] := false;
__n67["expression"] := false;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "Array.prototype.concat.call(spreadablePoisonedLengthGetter, 1, 2, 3) throws a Test262Error exception";
__n87["raw"] := "'Array.prototype.concat.call(spreadablePoisonedLengthGetter, 1, 2, 3) throws a Test262Error exception'";
__n65 := [ __n66, __n67, __n87 ];
__n61["arguments"] := __n65;
__n60["expression"] := __n61;
__n1 := [ __n2, __n8, __n16, __n38, __n60 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n88 := [ "spreadablePoisonedLengthGetter" ];
__n0["variableDeclarations"] := __n88;
__n89 := [  ];
__n0["functionDeclarations"] := __n89;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}