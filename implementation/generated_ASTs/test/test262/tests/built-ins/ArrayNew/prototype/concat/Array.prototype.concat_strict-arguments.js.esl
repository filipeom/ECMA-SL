function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "args";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "FunctionExpression";
__n7["id"] := null;
__n8 := [ "a", "b", "c" ];
__n7["params"] := __n8;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "use strict";
__n12["raw"] := "\"use strict\"";
__n11["expression"] := __n12;
__n11["directive"] := "use strict";
__n13 := {  };
__n13["type"] := "ReturnStatement";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "arguments";
__n13["argument"] := __n14;
__n10 := [ __n11, __n13 ];
__n9["body"] := __n10;
__n15 := [  ];
__n9["variableDeclarations"] := __n15;
__n16 := [  ];
__n9["functionDeclarations"] := __n16;
__n9["codeType"] := "function";
__n9["strict"] := true;
__n7["body"] := __n9;
__n7["generator"] := false;
__n7["async"] := false;
__n7["expression"] := false;
__n6["callee"] := __n7;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.;
__n18["raw"] := "1";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 2.;
__n19["raw"] := "2";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 3.;
__n20["raw"] := "3";
__n17 := [ __n18, __n19, __n20 ];
__n6["arguments"] := __n17;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "AssignmentExpression";
__n22["operator"] := "=";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n23["computed"] := true;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "args";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Symbol";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "isConcatSpreadable";
__n27["raw"] := "\"isConcatSpreadable\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n23["property"] := __n25;
__n22["left"] := __n23;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := true;
__n28["raw"] := "true";
__n22["right"] := __n28;
__n21["expression"] := __n22;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "assert";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "compareArray";
__n33["raw"] := "\"compareArray\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "ArrayExpression";
__n38 := [  ];
__n37["elements"] := __n38;
__n36["object"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "concat";
__n39["raw"] := "\"concat\"";
__n36["property"] := __n39;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "args";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "args";
__n40 := [ __n41, __n42 ];
__n35["arguments"] := __n40;
__n43 := {  };
__n43["type"] := "ArrayExpression";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 1.;
__n45["raw"] := "1";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 2.;
__n46["raw"] := "2";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 3.;
__n47["raw"] := "3";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1.;
__n48["raw"] := "1";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 2.;
__n49["raw"] := "2";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 3.;
__n50["raw"] := "3";
__n44 := [ __n45, __n46, __n47, __n48, __n49, __n50 ];
__n43["elements"] := __n44;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "[].concat(\"(function(a, b, c) {\"use strict\"; return arguments;})(1, 2, 3)\", \"(function(a, b, c) {\"use strict\"; return arguments;})(1, 2, 3)\") must return [1, 2, 3, 1, 2, 3]";
__n51["raw"] := "'[].concat(\"(function(a, b, c) {\"use strict\"; return arguments;})(1, 2, 3)\", \"(function(a, b, c) {\"use strict\"; return arguments;})(1, 2, 3)\") must return [1, 2, 3, 1, 2, 3]'";
__n34 := [ __n35, __n43, __n51 ];
__n30["arguments"] := __n34;
__n29["expression"] := __n30;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Object";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "defineProperty";
__n56["raw"] := "\"defineProperty\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["callee"] := __n54;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "args";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "length";
__n59["raw"] := "\"length\"";
__n60 := {  };
__n60["type"] := "ObjectExpression";
__n62 := {  };
__n62["type"] := "Property";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "value";
__n62["key"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 6.;
__n64["raw"] := "6";
__n62["value"] := __n64;
__n62["computed"] := false;
__n62["kind"] := "init";
__n62["shorthand"] := false;
__n61 := [ __n62 ];
__n60["properties"] := __n61;
__n57 := [ __n58, __n59, __n60 ];
__n53["arguments"] := __n57;
__n52["expression"] := __n53;
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "assert";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "compareArray";
__n69["raw"] := "\"compareArray\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["callee"] := __n67;
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "ArrayExpression";
__n74 := [  ];
__n73["elements"] := __n74;
__n72["object"] := __n73;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "concat";
__n75["raw"] := "\"concat\"";
__n72["property"] := __n75;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "args";
__n76 := [ __n77 ];
__n71["arguments"] := __n76;
__n78 := {  };
__n78["type"] := "ArrayExpression";
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 1.;
__n80["raw"] := "1";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 2.;
__n81["raw"] := "2";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 3.;
__n82["raw"] := "3";
__n83 := {  };
__n83["type"] := "UnaryExpression";
__n83["operator"] := "void";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := 0.;
__n84["raw"] := "0";
__n83["argument"] := __n84;
__n83["prefix"] := true;
__n85 := {  };
__n85["type"] := "UnaryExpression";
__n85["operator"] := "void";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 0.;
__n86["raw"] := "0";
__n85["argument"] := __n86;
__n85["prefix"] := true;
__n87 := {  };
__n87["type"] := "UnaryExpression";
__n87["operator"] := "void";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 0.;
__n88["raw"] := "0";
__n87["argument"] := __n88;
__n87["prefix"] := true;
__n79 := [ __n80, __n81, __n82, __n83, __n85, __n87 ];
__n78["elements"] := __n79;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "[].concat(\"(function(a, b, c) {\"use strict\"; return arguments;})(1, 2, 3)\") must return [1, 2, 3, void 0, void 0, void 0]";
__n89["raw"] := "'[].concat(\"(function(a, b, c) {\"use strict\"; return arguments;})(1, 2, 3)\") must return [1, 2, 3, void 0, void 0, void 0]'";
__n70 := [ __n71, __n78, __n89 ];
__n66["arguments"] := __n70;
__n65["expression"] := __n66;
__n1 := [ __n2, __n21, __n29, __n52, __n65 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n90 := [ "args" ];
__n0["variableDeclarations"] := __n90;
__n91 := [  ];
__n0["functionDeclarations"] := __n91;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}