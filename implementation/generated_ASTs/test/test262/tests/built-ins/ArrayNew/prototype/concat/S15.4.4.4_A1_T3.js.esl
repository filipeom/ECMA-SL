function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 0.;
__n8["raw"] := "0";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n7 := [ __n8, __n9 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "arr";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "x";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "concat";
__n17["raw"] := "\"concat\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n18 := [  ];
__n14["arguments"] := __n18;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "AssignmentExpression";
__n20["operator"] := "=";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "arr";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "getClass";
__n23["raw"] := "\"getClass\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["left"] := __n21;
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Object";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "prototype";
__n27["raw"] := "\"prototype\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["object"] := __n25;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "toString";
__n28["raw"] := "\"toString\"";
__n24["property"] := __n28;
__n24["computed"] := true;
__n20["right"] := __n24;
__n19["expression"] := __n20;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "assert";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "sameValue";
__n33["raw"] := "\"sameValue\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "arr";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "getClass";
__n38["raw"] := "\"getClass\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n39 := [  ];
__n35["arguments"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "[object Array]";
__n40["raw"] := "\"[object Array]\"";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "arr.getClass() must return \"[object Array]\"";
__n41["raw"] := "'arr.getClass() must return \"[object Array]\"'";
__n34 := [ __n35, __n40, __n41 ];
__n30["arguments"] := __n34;
__n29["expression"] := __n30;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "assert";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "sameValue";
__n46["raw"] := "\"sameValue\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n48 := {  };
__n48["type"] := "MemberExpression";
__n48["computed"] := true;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "arr";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 0.;
__n50["raw"] := "0";
__n48["property"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 0.;
__n51["raw"] := "0";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "The value of arr[0] is expected to be 0";
__n52["raw"] := "'The value of arr[0] is expected to be 0'";
__n47 := [ __n48, __n51, __n52 ];
__n43["arguments"] := __n47;
__n42["expression"] := __n43;
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "assert";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "sameValue";
__n57["raw"] := "\"sameValue\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "MemberExpression";
__n59["computed"] := true;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "arr";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 1.;
__n61["raw"] := "1";
__n59["property"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 1.;
__n62["raw"] := "1";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "The value of arr[1] is expected to be 1";
__n63["raw"] := "'The value of arr[1] is expected to be 1'";
__n58 := [ __n59, __n62, __n63 ];
__n54["arguments"] := __n58;
__n53["expression"] := __n54;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "assert";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "sameValue";
__n68["raw"] := "\"sameValue\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "arr";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "length";
__n72["raw"] := "\"length\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 2.;
__n73["raw"] := "2";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "The value of arr.length is expected to be 2";
__n74["raw"] := "'The value of arr.length is expected to be 2'";
__n69 := [ __n70, __n73, __n74 ];
__n65["arguments"] := __n69;
__n64["expression"] := __n65;
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "assert";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "notSameValue";
__n79["raw"] := "\"notSameValue\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n76["callee"] := __n77;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "arr";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "x";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "The value of arr is expected to not equal the value of `x`";
__n83["raw"] := "'The value of arr is expected to not equal the value of `x`'";
__n80 := [ __n81, __n82, __n83 ];
__n76["arguments"] := __n80;
__n75["expression"] := __n76;
__n1 := [ __n2, __n10, __n19, __n29, __n42, __n53, __n64, __n75 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n84 := [ "x", "arr" ];
__n0["variableDeclarations"] := __n84;
__n85 := [  ];
__n0["functionDeclarations"] := __n85;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}