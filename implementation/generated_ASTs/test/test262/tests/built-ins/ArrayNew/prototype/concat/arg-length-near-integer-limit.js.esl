function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "spreadableHasPoisonedIndex";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "length";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Number";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "MAX_SAFE_INTEGER";
__n12["raw"] := "\"MAX_SAFE_INTEGER\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 0.;
__n14["raw"] := "0";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [  ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ThrowStatement";
__n20 := {  };
__n20["type"] := "NewExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "Test262Error";
__n20["callee"] := __n21;
__n22 := [  ];
__n20["arguments"] := __n22;
__n19["argument"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n23 := [  ];
__n17["variableDeclarations"] := __n23;
__n24 := [  ];
__n17["functionDeclarations"] := __n24;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["async"] := false;
__n15["expression"] := false;
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "get";
__n13["shorthand"] := false;
__n7 := [ __n8, __n13 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "AssignmentExpression";
__n26["operator"] := "=";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n27["computed"] := true;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "spreadableHasPoisonedIndex";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Symbol";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "isConcatSpreadable";
__n31["raw"] := "\"isConcatSpreadable\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n27["property"] := __n29;
__n26["left"] := __n27;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := true;
__n32["raw"] := "true";
__n26["right"] := __n32;
__n25["expression"] := __n26;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "assert";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "throws";
__n37["raw"] := "\"throws\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "Test262Error";
__n40 := {  };
__n40["type"] := "FunctionExpression";
__n40["id"] := null;
__n41 := [  ];
__n40["params"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "ArrayExpression";
__n48 := [  ];
__n47["elements"] := __n48;
__n46["object"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "concat";
__n49["raw"] := "\"concat\"";
__n46["property"] := __n49;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "spreadableHasPoisonedIndex";
__n50 := [ __n51 ];
__n45["arguments"] := __n50;
__n44["expression"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n52 := [  ];
__n42["variableDeclarations"] := __n52;
__n53 := [  ];
__n42["functionDeclarations"] := __n53;
__n42["codeType"] := "function";
__n42["strict"] := false;
__n40["body"] := __n42;
__n40["generator"] := false;
__n40["async"] := false;
__n40["expression"] := false;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "[].concat(spreadableHasPoisonedIndex) throws a Test262Error exception";
__n54["raw"] := "'[].concat(spreadableHasPoisonedIndex) throws a Test262Error exception'";
__n38 := [ __n39, __n40, __n54 ];
__n34["arguments"] := __n38;
__n33["expression"] := __n34;
__n1 := [ __n2, __n25, __n33 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n55 := [ "spreadableHasPoisonedIndex" ];
__n0["variableDeclarations"] := __n55;
__n56 := [  ];
__n0["functionDeclarations"] := __n56;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}