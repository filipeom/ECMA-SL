function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "length";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "callCount";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 0.;
__n15["raw"] := "0";
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n16 := {  };
__n16["type"] := "VariableDeclaration";
__n18 := {  };
__n18["type"] := "VariableDeclarator";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "result";
__n18["id"] := __n19;
__n18["init"] := null;
__n17 := [ __n18 ];
__n16["declarations"] := __n17;
__n16["kind"] := "var";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Object";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "defineProperty";
__n24["raw"] := "\"defineProperty\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "obj";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "constructor";
__n27["raw"] := "'constructor'";
__n28 := {  };
__n28["type"] := "ObjectExpression";
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "get";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "FunctionExpression";
__n32["id"] := null;
__n33 := [  ];
__n32["params"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "AssignmentExpression";
__n37["operator"] := "+=";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "callCount";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 1.;
__n39["raw"] := "1";
__n37["right"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n40 := [  ];
__n34["variableDeclarations"] := __n40;
__n41 := [  ];
__n34["functionDeclarations"] := __n41;
__n34["codeType"] := "function";
__n34["strict"] := false;
__n32["body"] := __n34;
__n32["generator"] := false;
__n32["async"] := false;
__n32["expression"] := false;
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n29 := [ __n30 ];
__n28["properties"] := __n29;
__n25 := [ __n26, __n27, __n28 ];
__n21["arguments"] := __n25;
__n20["expression"] := __n21;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "result";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "Array";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "prototype";
__n50["raw"] := "\"prototype\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["object"] := __n48;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "concat";
__n51["raw"] := "\"concat\"";
__n47["property"] := __n51;
__n47["computed"] := true;
__n46["object"] := __n47;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "call";
__n52["raw"] := "\"call\"";
__n46["property"] := __n52;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "obj";
__n53 := [ __n54 ];
__n45["arguments"] := __n53;
__n43["right"] := __n45;
__n42["expression"] := __n43;
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "assert";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "sameValue";
__n59["raw"] := "\"sameValue\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "callCount";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 0.;
__n62["raw"] := "0";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "The value of callCount is expected to be 0";
__n63["raw"] := "'The value of callCount is expected to be 0'";
__n60 := [ __n61, __n62, __n63 ];
__n56["arguments"] := __n60;
__n55["expression"] := __n56;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "assert";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "sameValue";
__n68["raw"] := "\"sameValue\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "MemberExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "Object";
__n71["object"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "getPrototypeOf";
__n73["raw"] := "\"getPrototypeOf\"";
__n71["property"] := __n73;
__n71["computed"] := true;
__n70["callee"] := __n71;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "result";
__n74 := [ __n75 ];
__n70["arguments"] := __n74;
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "Array";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "prototype";
__n78["raw"] := "\"prototype\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "Object.getPrototypeOf(Array.prototype.concat.call(obj)) returns Array.prototype";
__n79["raw"] := "'Object.getPrototypeOf(Array.prototype.concat.call(obj)) returns Array.prototype'";
__n69 := [ __n70, __n76, __n79 ];
__n65["arguments"] := __n69;
__n64["expression"] := __n65;
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "assert";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "Array";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "isArray";
__n87["raw"] := "\"isArray\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n84["callee"] := __n85;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "result";
__n88 := [ __n89 ];
__n84["arguments"] := __n88;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "Array.isArray(result) must return true";
__n90["raw"] := "'Array.isArray(result) must return true'";
__n83 := [ __n84, __n90 ];
__n81["arguments"] := __n83;
__n80["expression"] := __n81;
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "assert";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "sameValue";
__n95["raw"] := "\"sameValue\"";
__n93["property"] := __n95;
__n93["computed"] := true;
__n92["callee"] := __n93;
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "result";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "length";
__n99["raw"] := "\"length\"";
__n97["property"] := __n99;
__n97["computed"] := true;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := 1.;
__n100["raw"] := "1";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "The value of result.length is expected to be 1";
__n101["raw"] := "'The value of result.length is expected to be 1'";
__n96 := [ __n97, __n100, __n101 ];
__n92["arguments"] := __n96;
__n91["expression"] := __n92;
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "assert";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "sameValue";
__n106["raw"] := "\"sameValue\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n103["callee"] := __n104;
__n108 := {  };
__n108["type"] := "MemberExpression";
__n108["computed"] := true;
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "result";
__n108["object"] := __n109;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 0.;
__n110["raw"] := "0";
__n108["property"] := __n110;
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "obj";
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "The value of result[0] is expected to equal the value of obj";
__n112["raw"] := "'The value of result[0] is expected to equal the value of obj'";
__n107 := [ __n108, __n111, __n112 ];
__n103["arguments"] := __n107;
__n102["expression"] := __n103;
__n1 := [ __n2, __n11, __n16, __n20, __n42, __n55, __n64, __n80, __n91, __n102 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n113 := [ "obj", "callCount", "result" ];
__n0["variableDeclarations"] := __n113;
__n114 := [  ];
__n0["functionDeclarations"] := __n114;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}