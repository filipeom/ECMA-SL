function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "thisValue";
__n4["id"] := __n5;
__n4["init"] := null;
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "args";
__n6["id"] := __n7;
__n6["init"] := null;
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "result";
__n8["id"] := __n9;
__n8["init"] := null;
__n3 := [ __n4, __n6, __n8 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "callCount";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 0.;
__n14["raw"] := "0";
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "instance";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "ArrayExpression";
__n20 := [  ];
__n19["elements"] := __n20;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n21 := {  };
__n21["type"] := "VariableDeclaration";
__n23 := {  };
__n23["type"] := "VariableDeclarator";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Ctor";
__n23["id"] := __n24;
__n25 := {  };
__n25["type"] := "FunctionExpression";
__n25["id"] := null;
__n26 := [  ];
__n25["params"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "AssignmentExpression";
__n30["operator"] := "+=";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "callCount";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 1.;
__n32["raw"] := "1";
__n30["right"] := __n32;
__n29["expression"] := __n30;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "AssignmentExpression";
__n34["operator"] := "=";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "thisValue";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "ThisExpression";
__n34["right"] := __n36;
__n33["expression"] := __n34;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "AssignmentExpression";
__n38["operator"] := "=";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "args";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "arguments";
__n38["right"] := __n40;
__n37["expression"] := __n38;
__n41 := {  };
__n41["type"] := "ReturnStatement";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "instance";
__n41["argument"] := __n42;
__n28 := [ __n29, __n33, __n37, __n41 ];
__n27["body"] := __n28;
__n43 := [  ];
__n27["variableDeclarations"] := __n43;
__n44 := [  ];
__n27["functionDeclarations"] := __n44;
__n27["codeType"] := "function";
__n27["strict"] := false;
__n25["body"] := __n27;
__n25["generator"] := false;
__n25["async"] := false;
__n25["expression"] := false;
__n23["init"] := __n25;
__n22 := [ __n23 ];
__n21["declarations"] := __n22;
__n21["kind"] := "var";
__n45 := {  };
__n45["type"] := "VariableDeclaration";
__n47 := {  };
__n47["type"] := "VariableDeclarator";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "a";
__n47["id"] := __n48;
__n49 := {  };
__n49["type"] := "ArrayExpression";
__n50 := [  ];
__n49["elements"] := __n50;
__n47["init"] := __n49;
__n46 := [ __n47 ];
__n45["declarations"] := __n46;
__n45["kind"] := "var";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "AssignmentExpression";
__n52["operator"] := "=";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "a";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "constructor";
__n55["raw"] := "\"constructor\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["left"] := __n53;
__n56 := {  };
__n56["type"] := "ObjectExpression";
__n57 := [  ];
__n56["properties"] := __n57;
__n52["right"] := __n56;
__n51["expression"] := __n52;
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "AssignmentExpression";
__n59["operator"] := "=";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n60["computed"] := true;
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "a";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "constructor";
__n63["raw"] := "\"constructor\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["object"] := __n61;
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Symbol";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "species";
__n66["raw"] := "\"species\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n60["property"] := __n64;
__n59["left"] := __n60;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "Ctor";
__n59["right"] := __n67;
__n58["expression"] := __n59;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "AssignmentExpression";
__n69["operator"] := "=";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "result";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "a";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "concat";
__n74["raw"] := "\"concat\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n75 := [  ];
__n71["arguments"] := __n75;
__n69["right"] := __n71;
__n68["expression"] := __n69;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "MemberExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "assert";
__n78["object"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "sameValue";
__n80["raw"] := "\"sameValue\"";
__n78["property"] := __n80;
__n78["computed"] := true;
__n77["callee"] := __n78;
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "callCount";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 1.;
__n83["raw"] := "1";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "The value of callCount is expected to be 1";
__n84["raw"] := "'The value of callCount is expected to be 1'";
__n81 := [ __n82, __n83, __n84 ];
__n77["arguments"] := __n81;
__n76["expression"] := __n77;
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "assert";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "sameValue";
__n89["raw"] := "\"sameValue\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n86["callee"] := __n87;
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "MemberExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "Object";
__n92["object"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "getPrototypeOf";
__n94["raw"] := "\"getPrototypeOf\"";
__n92["property"] := __n94;
__n92["computed"] := true;
__n91["callee"] := __n92;
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "thisValue";
__n95 := [ __n96 ];
__n91["arguments"] := __n95;
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "Ctor";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "prototype";
__n99["raw"] := "\"prototype\"";
__n97["property"] := __n99;
__n97["computed"] := true;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "Object.getPrototypeOf(this) returns Ctor.prototype";
__n100["raw"] := "'Object.getPrototypeOf(this) returns Ctor.prototype'";
__n90 := [ __n91, __n97, __n100 ];
__n86["arguments"] := __n90;
__n85["expression"] := __n86;
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "assert";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "sameValue";
__n105["raw"] := "\"sameValue\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n102["callee"] := __n103;
__n107 := {  };
__n107["type"] := "MemberExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "args";
__n107["object"] := __n108;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "length";
__n109["raw"] := "\"length\"";
__n107["property"] := __n109;
__n107["computed"] := true;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 1.;
__n110["raw"] := "1";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "The value of args.length is expected to be 1";
__n111["raw"] := "'The value of args.length is expected to be 1'";
__n106 := [ __n107, __n110, __n111 ];
__n102["arguments"] := __n106;
__n101["expression"] := __n102;
__n112 := {  };
__n112["type"] := "ExpressionStatement";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "MemberExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "assert";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "sameValue";
__n116["raw"] := "\"sameValue\"";
__n114["property"] := __n116;
__n114["computed"] := true;
__n113["callee"] := __n114;
__n118 := {  };
__n118["type"] := "MemberExpression";
__n118["computed"] := true;
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "args";
__n118["object"] := __n119;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := 0.;
__n120["raw"] := "0";
__n118["property"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := 0.;
__n121["raw"] := "0";
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "The value of args[0] is expected to be 0";
__n122["raw"] := "'The value of args[0] is expected to be 0'";
__n117 := [ __n118, __n121, __n122 ];
__n113["arguments"] := __n117;
__n112["expression"] := __n113;
__n123 := {  };
__n123["type"] := "ExpressionStatement";
__n124 := {  };
__n124["type"] := "CallExpression";
__n125 := {  };
__n125["type"] := "MemberExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "assert";
__n125["object"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "sameValue";
__n127["raw"] := "\"sameValue\"";
__n125["property"] := __n127;
__n125["computed"] := true;
__n124["callee"] := __n125;
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "result";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "instance";
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "The value of result is expected to equal the value of instance";
__n131["raw"] := "'The value of result is expected to equal the value of instance'";
__n128 := [ __n129, __n130, __n131 ];
__n124["arguments"] := __n128;
__n123["expression"] := __n124;
__n1 := [ __n2, __n10, __n15, __n21, __n45, __n51, __n58, __n68, __n76, __n85, __n101, __n112, __n123 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n132 := [ "thisValue", "args", "result", "callCount", "instance", "Ctor", "a" ];
__n0["variableDeclarations"] := __n132;
__n133 := [  ];
__n0["functionDeclarations"] := __n133;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}