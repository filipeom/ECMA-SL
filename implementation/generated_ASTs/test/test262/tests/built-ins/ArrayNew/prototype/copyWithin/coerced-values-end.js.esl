function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "compareArray";
__n6["raw"] := "\"compareArray\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "ArrayExpression";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 0.;
__n12["raw"] := "0";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 1.;
__n13["raw"] := "1";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 2.;
__n14["raw"] := "2";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 3.;
__n15["raw"] := "3";
__n11 := [ __n12, __n13, __n14, __n15 ];
__n10["elements"] := __n11;
__n9["object"] := __n10;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "copyWithin";
__n16["raw"] := "\"copyWithin\"";
__n9["property"] := __n16;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.;
__n18["raw"] := "1";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 0.;
__n19["raw"] := "0";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 'null;
__n20["raw"] := "\"'null\"";
__n17 := [ __n18, __n19, __n20 ];
__n8["arguments"] := __n17;
__n21 := {  };
__n21["type"] := "ArrayExpression";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 0.;
__n23["raw"] := "0";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 1.;
__n24["raw"] := "1";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 2.;
__n25["raw"] := "2";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 3.;
__n26["raw"] := "3";
__n22 := [ __n23, __n24, __n25, __n26 ];
__n21["elements"] := __n22;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "[0, 1, 2, 3].copyWithin(1, 0, null) must return [0, 1, 2, 3]";
__n27["raw"] := "'[0, 1, 2, 3].copyWithin(1, 0, null) must return [0, 1, 2, 3]'";
__n7 := [ __n8, __n21, __n27 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "assert";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "compareArray";
__n32["raw"] := "\"compareArray\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "ArrayExpression";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 0.;
__n38["raw"] := "0";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 1.;
__n39["raw"] := "1";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 2.;
__n40["raw"] := "2";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 3.;
__n41["raw"] := "3";
__n37 := [ __n38, __n39, __n40, __n41 ];
__n36["elements"] := __n37;
__n35["object"] := __n36;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "copyWithin";
__n42["raw"] := "\"copyWithin\"";
__n35["property"] := __n42;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 1.;
__n44["raw"] := "1";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 0.;
__n45["raw"] := "0";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "NaN";
__n43 := [ __n44, __n45, __n46 ];
__n34["arguments"] := __n43;
__n47 := {  };
__n47["type"] := "ArrayExpression";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 0.;
__n49["raw"] := "0";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 1.;
__n50["raw"] := "1";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 2.;
__n51["raw"] := "2";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 3.;
__n52["raw"] := "3";
__n48 := [ __n49, __n50, __n51, __n52 ];
__n47["elements"] := __n48;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "[0, 1, 2, 3].copyWithin(1, 0, NaN) must return [0, 1, 2, 3]";
__n53["raw"] := "'[0, 1, 2, 3].copyWithin(1, 0, NaN) must return [0, 1, 2, 3]'";
__n33 := [ __n34, __n47, __n53 ];
__n29["arguments"] := __n33;
__n28["expression"] := __n29;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "assert";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "compareArray";
__n58["raw"] := "\"compareArray\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "ArrayExpression";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 0.;
__n64["raw"] := "0";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 1.;
__n65["raw"] := "1";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 2.;
__n66["raw"] := "2";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 3.;
__n67["raw"] := "3";
__n63 := [ __n64, __n65, __n66, __n67 ];
__n62["elements"] := __n63;
__n61["object"] := __n62;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "copyWithin";
__n68["raw"] := "\"copyWithin\"";
__n61["property"] := __n68;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 1.;
__n70["raw"] := "1";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 0.;
__n71["raw"] := "0";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := false;
__n72["raw"] := "false";
__n69 := [ __n70, __n71, __n72 ];
__n60["arguments"] := __n69;
__n73 := {  };
__n73["type"] := "ArrayExpression";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 0.;
__n75["raw"] := "0";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 1.;
__n76["raw"] := "1";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 2.;
__n77["raw"] := "2";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 3.;
__n78["raw"] := "3";
__n74 := [ __n75, __n76, __n77, __n78 ];
__n73["elements"] := __n74;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "[0, 1, 2, 3].copyWithin(1, 0, false) must return [0, 1, 2, 3]";
__n79["raw"] := "'[0, 1, 2, 3].copyWithin(1, 0, false) must return [0, 1, 2, 3]'";
__n59 := [ __n60, __n73, __n79 ];
__n55["arguments"] := __n59;
__n54["expression"] := __n55;
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "MemberExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "assert";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "compareArray";
__n84["raw"] := "\"compareArray\"";
__n82["property"] := __n84;
__n82["computed"] := true;
__n81["callee"] := __n82;
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "ArrayExpression";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 0.;
__n90["raw"] := "0";
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 1.;
__n91["raw"] := "1";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 2.;
__n92["raw"] := "2";
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 3.;
__n93["raw"] := "3";
__n89 := [ __n90, __n91, __n92, __n93 ];
__n88["elements"] := __n89;
__n87["object"] := __n88;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "copyWithin";
__n94["raw"] := "\"copyWithin\"";
__n87["property"] := __n94;
__n87["computed"] := true;
__n86["callee"] := __n87;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := 1.;
__n96["raw"] := "1";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 0.;
__n97["raw"] := "0";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := true;
__n98["raw"] := "true";
__n95 := [ __n96, __n97, __n98 ];
__n86["arguments"] := __n95;
__n99 := {  };
__n99["type"] := "ArrayExpression";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 0.;
__n101["raw"] := "0";
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 0.;
__n102["raw"] := "0";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := 2.;
__n103["raw"] := "2";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := 3.;
__n104["raw"] := "3";
__n100 := [ __n101, __n102, __n103, __n104 ];
__n99["elements"] := __n100;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "[0, 1, 2, 3].copyWithin(1, 0, true) must return [0, 0, 2, 3]";
__n105["raw"] := "'[0, 1, 2, 3].copyWithin(1, 0, true) must return [0, 0, 2, 3]'";
__n85 := [ __n86, __n99, __n105 ];
__n81["arguments"] := __n85;
__n80["expression"] := __n81;
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "MemberExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "assert";
__n108["object"] := __n109;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "compareArray";
__n110["raw"] := "\"compareArray\"";
__n108["property"] := __n110;
__n108["computed"] := true;
__n107["callee"] := __n108;
__n112 := {  };
__n112["type"] := "CallExpression";
__n113 := {  };
__n113["type"] := "MemberExpression";
__n114 := {  };
__n114["type"] := "ArrayExpression";
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 0.;
__n116["raw"] := "0";
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 1.;
__n117["raw"] := "1";
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 2.;
__n118["raw"] := "2";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 3.;
__n119["raw"] := "3";
__n115 := [ __n116, __n117, __n118, __n119 ];
__n114["elements"] := __n115;
__n113["object"] := __n114;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "copyWithin";
__n120["raw"] := "\"copyWithin\"";
__n113["property"] := __n120;
__n113["computed"] := true;
__n112["callee"] := __n113;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := 1.;
__n122["raw"] := "1";
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 0.;
__n123["raw"] := "0";
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "-2";
__n124["raw"] := "'-2'";
__n121 := [ __n122, __n123, __n124 ];
__n112["arguments"] := __n121;
__n125 := {  };
__n125["type"] := "ArrayExpression";
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := 0.;
__n127["raw"] := "0";
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := 0.;
__n128["raw"] := "0";
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := 1.;
__n129["raw"] := "1";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := 3.;
__n130["raw"] := "3";
__n126 := [ __n127, __n128, __n129, __n130 ];
__n125["elements"] := __n126;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "[0, 1, 2, 3].copyWithin(1, 0, \"-2\") must return [0, 0, 1, 3]";
__n131["raw"] := "'[0, 1, 2, 3].copyWithin(1, 0, \"-2\") must return [0, 0, 1, 3]'";
__n111 := [ __n112, __n125, __n131 ];
__n107["arguments"] := __n111;
__n106["expression"] := __n107;
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "MemberExpression";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "assert";
__n134["object"] := __n135;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "compareArray";
__n136["raw"] := "\"compareArray\"";
__n134["property"] := __n136;
__n134["computed"] := true;
__n133["callee"] := __n134;
__n138 := {  };
__n138["type"] := "CallExpression";
__n139 := {  };
__n139["type"] := "MemberExpression";
__n140 := {  };
__n140["type"] := "ArrayExpression";
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := 0.;
__n142["raw"] := "0";
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := 1.;
__n143["raw"] := "1";
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := 2.;
__n144["raw"] := "2";
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := 3.;
__n145["raw"] := "3";
__n141 := [ __n142, __n143, __n144, __n145 ];
__n140["elements"] := __n141;
__n139["object"] := __n140;
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := "copyWithin";
__n146["raw"] := "\"copyWithin\"";
__n139["property"] := __n146;
__n139["computed"] := true;
__n138["callee"] := __n139;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := 1.;
__n148["raw"] := "1";
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := 0.;
__n149["raw"] := "0";
__n150 := {  };
__n150["type"] := "UnaryExpression";
__n150["operator"] := "-";
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := 2.5;
__n151["raw"] := "2.5";
__n150["argument"] := __n151;
__n150["prefix"] := true;
__n147 := [ __n148, __n149, __n150 ];
__n138["arguments"] := __n147;
__n152 := {  };
__n152["type"] := "ArrayExpression";
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := 0.;
__n154["raw"] := "0";
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := 0.;
__n155["raw"] := "0";
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := 1.;
__n156["raw"] := "1";
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := 3.;
__n157["raw"] := "3";
__n153 := [ __n154, __n155, __n156, __n157 ];
__n152["elements"] := __n153;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := "[0, 1, 2, 3].copyWithin(1, 0, -2.5) must return [0, 0, 1, 3]";
__n158["raw"] := "'[0, 1, 2, 3].copyWithin(1, 0, -2.5) must return [0, 0, 1, 3]'";
__n137 := [ __n138, __n152, __n158 ];
__n133["arguments"] := __n137;
__n132["expression"] := __n133;
__n1 := [ __n2, __n28, __n54, __n80, __n106, __n132 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n159 := [  ];
__n0["variableDeclarations"] := __n159;
__n160 := [  ];
__n0["functionDeclarations"] := __n160;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}