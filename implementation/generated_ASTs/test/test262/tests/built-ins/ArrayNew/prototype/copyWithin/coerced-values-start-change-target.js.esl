function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "longDenseArray";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "shorten";
__n4["expression"] := __n5;
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "array";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "longDenseArray";
__n10["callee"] := __n11;
__n12 := [  ];
__n10["arguments"] := __n12;
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "AssignmentExpression";
__n14["operator"] := "=";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "array";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "length";
__n17["raw"] := "\"length\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["left"] := __n15;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 20.;
__n18["raw"] := "20";
__n14["right"] := __n18;
__n13["expression"] := __n14;
__n19 := {  };
__n19["type"] := "ForStatement";
__n20 := {  };
__n20["type"] := "VariableDeclaration";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "i";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 0.;
__n24["raw"] := "0";
__n22["init"] := __n24;
__n21 := [ __n22 ];
__n20["declarations"] := __n21;
__n20["kind"] := "var";
__n19["init"] := __n20;
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "<";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "i";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 19.;
__n27["raw"] := "19";
__n25["right"] := __n27;
__n19["test"] := __n25;
__n28 := {  };
__n28["type"] := "UpdateExpression";
__n28["operator"] := "++";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "i";
__n28["argument"] := __n29;
__n28["prefix"] := false;
__n19["update"] := __n28;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "AssignmentExpression";
__n33["operator"] := "=";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n34["computed"] := true;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "array";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "+";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "i";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 1000.;
__n38["raw"] := "1000";
__n36["right"] := __n38;
__n34["property"] := __n36;
__n33["left"] := __n34;
__n39 := {  };
__n39["type"] := "MemberExpression";
__n39["computed"] := true;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "array";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "i";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 1.;
__n43["raw"] := "1";
__n41["right"] := __n43;
__n39["property"] := __n41;
__n33["right"] := __n39;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n19["body"] := __n30;
__n44 := {  };
__n44["type"] := "VariableDeclaration";
__n46 := {  };
__n46["type"] := "VariableDeclarator";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "currArray";
__n46["id"] := __n47;
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "longDenseArray";
__n48["callee"] := __n49;
__n50 := [  ];
__n48["arguments"] := __n50;
__n46["init"] := __n48;
__n45 := [ __n46 ];
__n44["declarations"] := __n45;
__n44["kind"] := "var";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "assert";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "compareArray";
__n55["raw"] := "\"compareArray\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "currArray";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "copyWithin";
__n60["raw"] := "\"copyWithin\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 1000.;
__n62["raw"] := "1000";
__n63 := {  };
__n63["type"] := "ObjectExpression";
__n65 := {  };
__n65["type"] := "Property";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "valueOf";
__n65["key"] := __n66;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "shorten";
__n65["value"] := __n67;
__n65["computed"] := false;
__n65["kind"] := "init";
__n65["shorthand"] := false;
__n64 := [ __n65 ];
__n63["properties"] := __n64;
__n61 := [ __n62, __n63 ];
__n57["arguments"] := __n61;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "array";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "currArray.copyWithin(1000, {valueOf: shorten}) returns array";
__n69["raw"] := "'currArray.copyWithin(1000, {valueOf: shorten}) returns array'";
__n56 := [ __n57, __n68, __n69 ];
__n52["arguments"] := __n56;
__n51["expression"] := __n52;
__n1 := [ __n2, __n4, __n6, __n13, __n19, __n44, __n51 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n70 := [ "array", "i", "currArray" ];
__n0["variableDeclarations"] := __n70;
__n72 := {  };
__n72["type"] := "FunctionDeclaration";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "longDenseArray";
__n72["id"] := __n73;
__n74 := [  ];
__n72["params"] := __n74;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "VariableDeclaration";
__n79 := {  };
__n79["type"] := "VariableDeclarator";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "a";
__n79["id"] := __n80;
__n81 := {  };
__n81["type"] := "ArrayExpression";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 0.;
__n83["raw"] := "0";
__n82 := [ __n83 ];
__n81["elements"] := __n82;
__n79["init"] := __n81;
__n78 := [ __n79 ];
__n77["declarations"] := __n78;
__n77["kind"] := "var";
__n84 := {  };
__n84["type"] := "ForStatement";
__n85 := {  };
__n85["type"] := "VariableDeclaration";
__n87 := {  };
__n87["type"] := "VariableDeclarator";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "i";
__n87["id"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 0.;
__n89["raw"] := "0";
__n87["init"] := __n89;
__n86 := [ __n87 ];
__n85["declarations"] := __n86;
__n85["kind"] := "var";
__n84["init"] := __n85;
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "<";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "i";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 1024.;
__n92["raw"] := "1024";
__n90["right"] := __n92;
__n84["test"] := __n90;
__n93 := {  };
__n93["type"] := "UpdateExpression";
__n93["operator"] := "++";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "i";
__n93["argument"] := __n94;
__n93["prefix"] := false;
__n84["update"] := __n93;
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "AssignmentExpression";
__n98["operator"] := "=";
__n99 := {  };
__n99["type"] := "MemberExpression";
__n99["computed"] := true;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "a";
__n99["object"] := __n100;
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "i";
__n99["property"] := __n101;
__n98["left"] := __n99;
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "i";
__n98["right"] := __n102;
__n97["expression"] := __n98;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n84["body"] := __n95;
__n103 := {  };
__n103["type"] := "ReturnStatement";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "a";
__n103["argument"] := __n104;
__n76 := [ __n77, __n84, __n103 ];
__n75["body"] := __n76;
__n105 := [ "a", "i" ];
__n75["variableDeclarations"] := __n105;
__n106 := [  ];
__n75["functionDeclarations"] := __n106;
__n75["codeType"] := "function";
__n75["strict"] := false;
__n72["body"] := __n75;
__n72["generator"] := false;
__n72["async"] := false;
__n72["expression"] := false;
__n107 := {  };
__n107["type"] := "FunctionDeclaration";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "shorten";
__n107["id"] := __n108;
__n109 := [  ];
__n107["params"] := __n109;
__n110 := {  };
__n110["type"] := "BlockStatement";
__n112 := {  };
__n112["type"] := "ExpressionStatement";
__n113 := {  };
__n113["type"] := "AssignmentExpression";
__n113["operator"] := "=";
__n114 := {  };
__n114["type"] := "MemberExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "currArray";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "length";
__n116["raw"] := "\"length\"";
__n114["property"] := __n116;
__n114["computed"] := true;
__n113["left"] := __n114;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 20.;
__n117["raw"] := "20";
__n113["right"] := __n117;
__n112["expression"] := __n113;
__n118 := {  };
__n118["type"] := "ReturnStatement";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 1.;
__n119["raw"] := "1";
__n118["argument"] := __n119;
__n111 := [ __n112, __n118 ];
__n110["body"] := __n111;
__n120 := [  ];
__n110["variableDeclarations"] := __n120;
__n121 := [  ];
__n110["functionDeclarations"] := __n121;
__n110["codeType"] := "function";
__n110["strict"] := false;
__n107["body"] := __n110;
__n107["generator"] := false;
__n107["async"] := false;
__n107["expression"] := false;
__n71 := [ __n72, __n107 ];
__n0["functionDeclarations"] := __n71;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}