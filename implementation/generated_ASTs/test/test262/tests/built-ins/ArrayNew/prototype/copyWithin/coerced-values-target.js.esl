function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "compareArray";
__n6["raw"] := "\"compareArray\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "ArrayExpression";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 0.;
__n12["raw"] := "0";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 1.;
__n13["raw"] := "1";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 2.;
__n14["raw"] := "2";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 3.;
__n15["raw"] := "3";
__n11 := [ __n12, __n13, __n14, __n15 ];
__n10["elements"] := __n11;
__n9["object"] := __n10;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "copyWithin";
__n16["raw"] := "\"copyWithin\"";
__n9["property"] := __n16;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "undefined";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n17 := [ __n18, __n19 ];
__n8["arguments"] := __n17;
__n20 := {  };
__n20["type"] := "ArrayExpression";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 1.;
__n22["raw"] := "1";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 2.;
__n23["raw"] := "2";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 3.;
__n24["raw"] := "3";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 3.;
__n25["raw"] := "3";
__n21 := [ __n22, __n23, __n24, __n25 ];
__n20["elements"] := __n21;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "[0, 1, 2, 3].copyWithin(undefined, 1) must return [1, 2, 3, 3]";
__n26["raw"] := "'[0, 1, 2, 3].copyWithin(undefined, 1) must return [1, 2, 3, 3]'";
__n7 := [ __n8, __n20, __n26 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "assert";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "compareArray";
__n31["raw"] := "\"compareArray\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "ArrayExpression";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 0.;
__n37["raw"] := "0";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 1.;
__n38["raw"] := "1";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 2.;
__n39["raw"] := "2";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 3.;
__n40["raw"] := "3";
__n36 := [ __n37, __n38, __n39, __n40 ];
__n35["elements"] := __n36;
__n34["object"] := __n35;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "copyWithin";
__n41["raw"] := "\"copyWithin\"";
__n34["property"] := __n41;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := false;
__n43["raw"] := "false";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 1.;
__n44["raw"] := "1";
__n42 := [ __n43, __n44 ];
__n33["arguments"] := __n42;
__n45 := {  };
__n45["type"] := "ArrayExpression";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 1.;
__n47["raw"] := "1";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 2.;
__n48["raw"] := "2";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 3.;
__n49["raw"] := "3";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 3.;
__n50["raw"] := "3";
__n46 := [ __n47, __n48, __n49, __n50 ];
__n45["elements"] := __n46;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "[0, 1, 2, 3].copyWithin(false, 1) must return [1, 2, 3, 3]";
__n51["raw"] := "'[0, 1, 2, 3].copyWithin(false, 1) must return [1, 2, 3, 3]'";
__n32 := [ __n33, __n45, __n51 ];
__n28["arguments"] := __n32;
__n27["expression"] := __n28;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "assert";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "compareArray";
__n56["raw"] := "\"compareArray\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["callee"] := __n54;
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "ArrayExpression";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 0.;
__n62["raw"] := "0";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 1.;
__n63["raw"] := "1";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 2.;
__n64["raw"] := "2";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 3.;
__n65["raw"] := "3";
__n61 := [ __n62, __n63, __n64, __n65 ];
__n60["elements"] := __n61;
__n59["object"] := __n60;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "copyWithin";
__n66["raw"] := "\"copyWithin\"";
__n59["property"] := __n66;
__n59["computed"] := true;
__n58["callee"] := __n59;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "NaN";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 1.;
__n69["raw"] := "1";
__n67 := [ __n68, __n69 ];
__n58["arguments"] := __n67;
__n70 := {  };
__n70["type"] := "ArrayExpression";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.;
__n72["raw"] := "1";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 2.;
__n73["raw"] := "2";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 3.;
__n74["raw"] := "3";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 3.;
__n75["raw"] := "3";
__n71 := [ __n72, __n73, __n74, __n75 ];
__n70["elements"] := __n71;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "[0, 1, 2, 3].copyWithin(NaN, 1) must return [1, 2, 3, 3]";
__n76["raw"] := "'[0, 1, 2, 3].copyWithin(NaN, 1) must return [1, 2, 3, 3]'";
__n57 := [ __n58, __n70, __n76 ];
__n53["arguments"] := __n57;
__n52["expression"] := __n53;
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "assert";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "compareArray";
__n81["raw"] := "\"compareArray\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n78["callee"] := __n79;
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "ArrayExpression";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 0.;
__n87["raw"] := "0";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 1.;
__n88["raw"] := "1";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 2.;
__n89["raw"] := "2";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 3.;
__n90["raw"] := "3";
__n86 := [ __n87, __n88, __n89, __n90 ];
__n85["elements"] := __n86;
__n84["object"] := __n85;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "copyWithin";
__n91["raw"] := "\"copyWithin\"";
__n84["property"] := __n91;
__n84["computed"] := true;
__n83["callee"] := __n84;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 'null;
__n93["raw"] := "\"'null\"";
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := 1.;
__n94["raw"] := "1";
__n92 := [ __n93, __n94 ];
__n83["arguments"] := __n92;
__n95 := {  };
__n95["type"] := "ArrayExpression";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 1.;
__n97["raw"] := "1";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 2.;
__n98["raw"] := "2";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 3.;
__n99["raw"] := "3";
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := 3.;
__n100["raw"] := "3";
__n96 := [ __n97, __n98, __n99, __n100 ];
__n95["elements"] := __n96;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "[0, 1, 2, 3].copyWithin(null, 1) must return [1, 2, 3, 3]";
__n101["raw"] := "'[0, 1, 2, 3].copyWithin(null, 1) must return [1, 2, 3, 3]'";
__n82 := [ __n83, __n95, __n101 ];
__n78["arguments"] := __n82;
__n77["expression"] := __n78;
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "assert";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "compareArray";
__n106["raw"] := "\"compareArray\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n103["callee"] := __n104;
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "ArrayExpression";
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 0.;
__n112["raw"] := "0";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 1.;
__n113["raw"] := "1";
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := 2.;
__n114["raw"] := "2";
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := 3.;
__n115["raw"] := "3";
__n111 := [ __n112, __n113, __n114, __n115 ];
__n110["elements"] := __n111;
__n109["object"] := __n110;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "copyWithin";
__n116["raw"] := "\"copyWithin\"";
__n109["property"] := __n116;
__n109["computed"] := true;
__n108["callee"] := __n109;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := true;
__n118["raw"] := "true";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 0.;
__n119["raw"] := "0";
__n117 := [ __n118, __n119 ];
__n108["arguments"] := __n117;
__n120 := {  };
__n120["type"] := "ArrayExpression";
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := 0.;
__n122["raw"] := "0";
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 0.;
__n123["raw"] := "0";
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 1.;
__n124["raw"] := "1";
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := 2.;
__n125["raw"] := "2";
__n121 := [ __n122, __n123, __n124, __n125 ];
__n120["elements"] := __n121;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "[0, 1, 2, 3].copyWithin(true, 0) must return [0, 0, 1, 2]";
__n126["raw"] := "'[0, 1, 2, 3].copyWithin(true, 0) must return [0, 0, 1, 2]'";
__n107 := [ __n108, __n120, __n126 ];
__n103["arguments"] := __n107;
__n102["expression"] := __n103;
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "MemberExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "assert";
__n129["object"] := __n130;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "compareArray";
__n131["raw"] := "\"compareArray\"";
__n129["property"] := __n131;
__n129["computed"] := true;
__n128["callee"] := __n129;
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "MemberExpression";
__n135 := {  };
__n135["type"] := "ArrayExpression";
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := 0.;
__n137["raw"] := "0";
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := 1.;
__n138["raw"] := "1";
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := 2.;
__n139["raw"] := "2";
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := 3.;
__n140["raw"] := "3";
__n136 := [ __n137, __n138, __n139, __n140 ];
__n135["elements"] := __n136;
__n134["object"] := __n135;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "copyWithin";
__n141["raw"] := "\"copyWithin\"";
__n134["property"] := __n141;
__n134["computed"] := true;
__n133["callee"] := __n134;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := "1";
__n143["raw"] := "'1'";
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := 0.;
__n144["raw"] := "0";
__n142 := [ __n143, __n144 ];
__n133["arguments"] := __n142;
__n145 := {  };
__n145["type"] := "ArrayExpression";
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := 0.;
__n147["raw"] := "0";
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := 0.;
__n148["raw"] := "0";
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := 1.;
__n149["raw"] := "1";
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 2.;
__n150["raw"] := "2";
__n146 := [ __n147, __n148, __n149, __n150 ];
__n145["elements"] := __n146;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "[0, 1, 2, 3].copyWithin(\"1\", 0) must return [0, 0, 1, 2]";
__n151["raw"] := "'[0, 1, 2, 3].copyWithin(\"1\", 0) must return [0, 0, 1, 2]'";
__n132 := [ __n133, __n145, __n151 ];
__n128["arguments"] := __n132;
__n127["expression"] := __n128;
__n152 := {  };
__n152["type"] := "ExpressionStatement";
__n153 := {  };
__n153["type"] := "CallExpression";
__n154 := {  };
__n154["type"] := "MemberExpression";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "assert";
__n154["object"] := __n155;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := "compareArray";
__n156["raw"] := "\"compareArray\"";
__n154["property"] := __n156;
__n154["computed"] := true;
__n153["callee"] := __n154;
__n158 := {  };
__n158["type"] := "CallExpression";
__n159 := {  };
__n159["type"] := "MemberExpression";
__n160 := {  };
__n160["type"] := "ArrayExpression";
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := 0.;
__n162["raw"] := "0";
__n163 := {  };
__n163["type"] := "Literal";
__n163["value"] := 1.;
__n163["raw"] := "1";
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := 2.;
__n164["raw"] := "2";
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := 3.;
__n165["raw"] := "3";
__n161 := [ __n162, __n163, __n164, __n165 ];
__n160["elements"] := __n161;
__n159["object"] := __n160;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "copyWithin";
__n166["raw"] := "\"copyWithin\"";
__n159["property"] := __n166;
__n159["computed"] := true;
__n158["callee"] := __n159;
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := 0.5;
__n168["raw"] := "0.5";
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := 1.;
__n169["raw"] := "1";
__n167 := [ __n168, __n169 ];
__n158["arguments"] := __n167;
__n170 := {  };
__n170["type"] := "ArrayExpression";
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := 1.;
__n172["raw"] := "1";
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := 2.;
__n173["raw"] := "2";
__n174 := {  };
__n174["type"] := "Literal";
__n174["value"] := 3.;
__n174["raw"] := "3";
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := 3.;
__n175["raw"] := "3";
__n171 := [ __n172, __n173, __n174, __n175 ];
__n170["elements"] := __n171;
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := "[0, 1, 2, 3].copyWithin(0.5, 1) must return [1, 2, 3, 3]";
__n176["raw"] := "'[0, 1, 2, 3].copyWithin(0.5, 1) must return [1, 2, 3, 3]'";
__n157 := [ __n158, __n170, __n176 ];
__n153["arguments"] := __n157;
__n152["expression"] := __n153;
__n177 := {  };
__n177["type"] := "ExpressionStatement";
__n178 := {  };
__n178["type"] := "CallExpression";
__n179 := {  };
__n179["type"] := "MemberExpression";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "assert";
__n179["object"] := __n180;
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := "compareArray";
__n181["raw"] := "\"compareArray\"";
__n179["property"] := __n181;
__n179["computed"] := true;
__n178["callee"] := __n179;
__n183 := {  };
__n183["type"] := "CallExpression";
__n184 := {  };
__n184["type"] := "MemberExpression";
__n185 := {  };
__n185["type"] := "ArrayExpression";
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := 0.;
__n187["raw"] := "0";
__n188 := {  };
__n188["type"] := "Literal";
__n188["value"] := 1.;
__n188["raw"] := "1";
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := 2.;
__n189["raw"] := "2";
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := 3.;
__n190["raw"] := "3";
__n186 := [ __n187, __n188, __n189, __n190 ];
__n185["elements"] := __n186;
__n184["object"] := __n185;
__n191 := {  };
__n191["type"] := "Literal";
__n191["value"] := "copyWithin";
__n191["raw"] := "\"copyWithin\"";
__n184["property"] := __n191;
__n184["computed"] := true;
__n183["callee"] := __n184;
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := 1.5;
__n193["raw"] := "1.5";
__n194 := {  };
__n194["type"] := "Literal";
__n194["value"] := 0.;
__n194["raw"] := "0";
__n192 := [ __n193, __n194 ];
__n183["arguments"] := __n192;
__n195 := {  };
__n195["type"] := "ArrayExpression";
__n197 := {  };
__n197["type"] := "Literal";
__n197["value"] := 0.;
__n197["raw"] := "0";
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := 0.;
__n198["raw"] := "0";
__n199 := {  };
__n199["type"] := "Literal";
__n199["value"] := 1.;
__n199["raw"] := "1";
__n200 := {  };
__n200["type"] := "Literal";
__n200["value"] := 2.;
__n200["raw"] := "2";
__n196 := [ __n197, __n198, __n199, __n200 ];
__n195["elements"] := __n196;
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := "[0, 1, 2, 3].copyWithin(1.5, 0) must return [0, 0, 1, 2]";
__n201["raw"] := "'[0, 1, 2, 3].copyWithin(1.5, 0) must return [0, 0, 1, 2]'";
__n182 := [ __n183, __n195, __n201 ];
__n178["arguments"] := __n182;
__n177["expression"] := __n178;
__n1 := [ __n2, __n27, __n52, __n77, __n102, __n127, __n152, __n177 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n202 := [  ];
__n0["variableDeclarations"] := __n202;
__n203 := [  ];
__n0["functionDeclarations"] := __n203;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}