function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callbackfnAccessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "toStringAccessed";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := false;
__n11["raw"] := "false";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "valueOfAccessed";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := false;
__n16["raw"] := "false";
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "callbackfn";
__n17["expression"] := __n18;
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "obj";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "ObjectExpression";
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 0.;
__n26["raw"] := "0";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 11.;
__n27["raw"] := "11";
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n28 := {  };
__n28["type"] := "Property";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 1.;
__n29["raw"] := "1";
__n28["key"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 12.;
__n30["raw"] := "12";
__n28["value"] := __n30;
__n28["computed"] := false;
__n28["kind"] := "init";
__n28["shorthand"] := false;
__n31 := {  };
__n31["type"] := "Property";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "length";
__n31["key"] := __n32;
__n33 := {  };
__n33["type"] := "ObjectExpression";
__n35 := {  };
__n35["type"] := "Property";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "valueOf";
__n35["key"] := __n36;
__n37 := {  };
__n37["type"] := "FunctionExpression";
__n37["id"] := null;
__n38 := [  ];
__n37["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "AssignmentExpression";
__n42["operator"] := "=";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "valueOfAccessed";
__n42["left"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := true;
__n44["raw"] := "true";
__n42["right"] := __n44;
__n41["expression"] := __n42;
__n45 := {  };
__n45["type"] := "ReturnStatement";
__n46 := {  };
__n46["type"] := "ObjectExpression";
__n47 := [  ];
__n46["properties"] := __n47;
__n45["argument"] := __n46;
__n40 := [ __n41, __n45 ];
__n39["body"] := __n40;
__n48 := [  ];
__n39["variableDeclarations"] := __n48;
__n49 := [  ];
__n39["functionDeclarations"] := __n49;
__n39["codeType"] := "function";
__n39["strict"] := false;
__n37["body"] := __n39;
__n37["generator"] := false;
__n37["async"] := false;
__n37["expression"] := false;
__n35["value"] := __n37;
__n35["computed"] := false;
__n35["kind"] := "init";
__n35["shorthand"] := false;
__n50 := {  };
__n50["type"] := "Property";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "toString";
__n50["key"] := __n51;
__n52 := {  };
__n52["type"] := "FunctionExpression";
__n52["id"] := null;
__n53 := [  ];
__n52["params"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "AssignmentExpression";
__n57["operator"] := "=";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "toStringAccessed";
__n57["left"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := true;
__n59["raw"] := "true";
__n57["right"] := __n59;
__n56["expression"] := __n57;
__n60 := {  };
__n60["type"] := "ReturnStatement";
__n61 := {  };
__n61["type"] := "ObjectExpression";
__n62 := [  ];
__n61["properties"] := __n62;
__n60["argument"] := __n61;
__n55 := [ __n56, __n60 ];
__n54["body"] := __n55;
__n63 := [  ];
__n54["variableDeclarations"] := __n63;
__n64 := [  ];
__n54["functionDeclarations"] := __n64;
__n54["codeType"] := "function";
__n54["strict"] := false;
__n52["body"] := __n54;
__n52["generator"] := false;
__n52["async"] := false;
__n52["expression"] := false;
__n50["value"] := __n52;
__n50["computed"] := false;
__n50["kind"] := "init";
__n50["shorthand"] := false;
__n34 := [ __n35, __n50 ];
__n33["properties"] := __n34;
__n31["value"] := __n33;
__n31["computed"] := false;
__n31["kind"] := "init";
__n31["shorthand"] := false;
__n24 := [ __n25, __n28, __n31 ];
__n23["properties"] := __n24;
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "assert";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "throws";
__n69["raw"] := "\"throws\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["callee"] := __n67;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "TypeError";
__n72 := {  };
__n72["type"] := "FunctionExpression";
__n72["id"] := null;
__n73 := [  ];
__n72["params"] := __n73;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "MemberExpression";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "Array";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "prototype";
__n82["raw"] := "\"prototype\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n79["object"] := __n80;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "every";
__n83["raw"] := "\"every\"";
__n79["property"] := __n83;
__n79["computed"] := true;
__n78["object"] := __n79;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "call";
__n84["raw"] := "\"call\"";
__n78["property"] := __n84;
__n78["computed"] := true;
__n77["callee"] := __n78;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "obj";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "callbackfn";
__n85 := [ __n86, __n87 ];
__n77["arguments"] := __n85;
__n76["expression"] := __n77;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n88 := [  ];
__n74["variableDeclarations"] := __n88;
__n89 := [  ];
__n74["functionDeclarations"] := __n89;
__n74["codeType"] := "function";
__n74["strict"] := false;
__n72["body"] := __n74;
__n72["generator"] := false;
__n72["async"] := false;
__n72["expression"] := false;
__n70 := [ __n71, __n72 ];
__n66["arguments"] := __n70;
__n65["expression"] := __n66;
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "assert";
__n91["callee"] := __n92;
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "toStringAccessed";
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "toStringAccessed !== true";
__n95["raw"] := "'toStringAccessed !== true'";
__n93 := [ __n94, __n95 ];
__n91["arguments"] := __n93;
__n90["expression"] := __n91;
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "assert";
__n97["callee"] := __n98;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "valueOfAccessed";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "valueOfAccessed !== true";
__n101["raw"] := "'valueOfAccessed !== true'";
__n99 := [ __n100, __n101 ];
__n97["arguments"] := __n99;
__n96["expression"] := __n97;
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "assert";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "sameValue";
__n106["raw"] := "\"sameValue\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n103["callee"] := __n104;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "callbackfnAccessed";
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := false;
__n109["raw"] := "false";
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "callbackfnAccessed";
__n110["raw"] := "'callbackfnAccessed'";
__n107 := [ __n108, __n109, __n110 ];
__n103["arguments"] := __n107;
__n102["expression"] := __n103;
__n1 := [ __n2, __n7, __n12, __n17, __n19, __n65, __n90, __n96, __n102 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n111 := [ "callbackfnAccessed", "toStringAccessed", "valueOfAccessed", "obj" ];
__n0["variableDeclarations"] := __n111;
__n113 := {  };
__n113["type"] := "FunctionDeclaration";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "callbackfn";
__n113["id"] := __n114;
__n115 := [ "val", "idx", "obj" ];
__n113["params"] := __n115;
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "AssignmentExpression";
__n119["operator"] := "=";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "callbackfnAccessed";
__n119["left"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := true;
__n121["raw"] := "true";
__n119["right"] := __n121;
__n118["expression"] := __n119;
__n122 := {  };
__n122["type"] := "ReturnStatement";
__n123 := {  };
__n123["type"] := "BinaryExpression";
__n123["operator"] := ">";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "val";
__n123["left"] := __n124;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := 10.;
__n125["raw"] := "10";
__n123["right"] := __n125;
__n122["argument"] := __n123;
__n117 := [ __n118, __n122 ];
__n116["body"] := __n117;
__n126 := [  ];
__n116["variableDeclarations"] := __n126;
__n127 := [  ];
__n116["functionDeclarations"] := __n127;
__n116["codeType"] := "function";
__n116["strict"] := false;
__n113["body"] := __n116;
__n113["generator"] := false;
__n113["async"] := false;
__n113["expression"] := false;
__n112 := [ __n113 ];
__n0["functionDeclarations"] := __n112;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}