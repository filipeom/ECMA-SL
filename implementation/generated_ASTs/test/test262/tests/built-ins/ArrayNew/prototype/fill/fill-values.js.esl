function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "compareArray";
__n6["raw"] := "\"compareArray\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "ArrayExpression";
__n11 := [  ];
__n10["elements"] := __n11;
__n9["object"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "fill";
__n12["raw"] := "\"fill\"";
__n9["property"] := __n12;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 8.;
__n14["raw"] := "8";
__n13 := [ __n14 ];
__n8["arguments"] := __n13;
__n15 := {  };
__n15["type"] := "ArrayExpression";
__n16 := [  ];
__n15["elements"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "[].fill(8) must return []";
__n17["raw"] := "'[].fill(8) must return []'";
__n7 := [ __n8, __n15, __n17 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "assert";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "compareArray";
__n22["raw"] := "\"compareArray\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "ArrayExpression";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 0.;
__n28["raw"] := "0";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 0.;
__n29["raw"] := "0";
__n27 := [ __n28, __n29 ];
__n26["elements"] := __n27;
__n25["object"] := __n26;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "fill";
__n30["raw"] := "\"fill\"";
__n25["property"] := __n30;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n31 := [  ];
__n24["arguments"] := __n31;
__n32 := {  };
__n32["type"] := "ArrayExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "undefined";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "undefined";
__n33 := [ __n34, __n35 ];
__n32["elements"] := __n33;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "[0, 0].fill() must return [undefined, undefined]";
__n36["raw"] := "'[0, 0].fill() must return [undefined, undefined]'";
__n23 := [ __n24, __n32, __n36 ];
__n19["arguments"] := __n23;
__n18["expression"] := __n19;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "assert";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "compareArray";
__n41["raw"] := "\"compareArray\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "ArrayExpression";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 0.;
__n47["raw"] := "0";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 0.;
__n48["raw"] := "0";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 0.;
__n49["raw"] := "0";
__n46 := [ __n47, __n48, __n49 ];
__n45["elements"] := __n46;
__n44["object"] := __n45;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "fill";
__n50["raw"] := "\"fill\"";
__n44["property"] := __n50;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 8.;
__n52["raw"] := "8";
__n51 := [ __n52 ];
__n43["arguments"] := __n51;
__n53 := {  };
__n53["type"] := "ArrayExpression";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 8.;
__n55["raw"] := "8";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 8.;
__n56["raw"] := "8";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 8.;
__n57["raw"] := "8";
__n54 := [ __n55, __n56, __n57 ];
__n53["elements"] := __n54;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "[0, 0, 0].fill(8) must return [8, 8, 8]";
__n58["raw"] := "'[0, 0, 0].fill(8) must return [8, 8, 8]'";
__n42 := [ __n43, __n53, __n58 ];
__n38["arguments"] := __n42;
__n37["expression"] := __n38;
__n1 := [ __n2, __n18, __n37 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n59 := [  ];
__n0["variableDeclarations"] := __n59;
__n60 := [  ];
__n0["functionDeclarations"] := __n60;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}