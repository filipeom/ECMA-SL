function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "innerObj";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "assert";
__n5["callee"] := __n6;
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "NewExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "innerObj";
__n9["callee"] := __n10;
__n11 := [  ];
__n9["arguments"] := __n11;
__n8["object"] := __n9;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "retVal";
__n12["raw"] := "\"retVal\"";
__n8["property"] := __n12;
__n8["computed"] := true;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "new innerObj().retVal !== true";
__n13["raw"] := "'new innerObj().retVal !== true'";
__n7 := [ __n8, __n13 ];
__n5["arguments"] := __n7;
__n4["expression"] := __n5;
__n1 := [ __n2, __n4 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n14 := [  ];
__n0["variableDeclarations"] := __n14;
__n16 := {  };
__n16["type"] := "FunctionDeclaration";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "innerObj";
__n16["id"] := __n17;
__n18 := [  ];
__n16["params"] := __n18;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "AssignmentExpression";
__n22["operator"] := "=";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "ThisExpression";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "_15_4_4_20_5_30";
__n25["raw"] := "\"_15_4_4_20_5_30\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["left"] := __n23;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := true;
__n26["raw"] := "true";
__n22["right"] := __n26;
__n21["expression"] := __n22;
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "_15_4_4_20_5_30";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := false;
__n31["raw"] := "false";
__n29["init"] := __n31;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "callbackfn";
__n32["expression"] := __n33;
__n34 := {  };
__n34["type"] := "VariableDeclaration";
__n36 := {  };
__n36["type"] := "VariableDeclarator";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "srcArr";
__n36["id"] := __n37;
__n38 := {  };
__n38["type"] := "ArrayExpression";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 1.;
__n40["raw"] := "1";
__n39 := [ __n40 ];
__n38["elements"] := __n39;
__n36["init"] := __n38;
__n35 := [ __n36 ];
__n34["declarations"] := __n35;
__n34["kind"] := "var";
__n41 := {  };
__n41["type"] := "VariableDeclaration";
__n43 := {  };
__n43["type"] := "VariableDeclarator";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "resArr";
__n43["id"] := __n44;
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "srcArr";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "filter";
__n48["raw"] := "\"filter\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "callbackfn";
__n49 := [ __n50 ];
__n45["arguments"] := __n49;
__n43["init"] := __n45;
__n42 := [ __n43 ];
__n41["declarations"] := __n42;
__n41["kind"] := "var";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "AssignmentExpression";
__n52["operator"] := "=";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "ThisExpression";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "retVal";
__n55["raw"] := "\"retVal\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["left"] := __n53;
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "===";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "resArr";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "length";
__n59["raw"] := "\"length\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["left"] := __n57;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 0.;
__n60["raw"] := "0";
__n56["right"] := __n60;
__n52["right"] := __n56;
__n51["expression"] := __n52;
__n20 := [ __n21, __n27, __n32, __n34, __n41, __n51 ];
__n19["body"] := __n20;
__n61 := [ "_15_4_4_20_5_30", "srcArr", "resArr" ];
__n19["variableDeclarations"] := __n61;
__n63 := {  };
__n63["type"] := "FunctionDeclaration";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "callbackfn";
__n63["id"] := __n64;
__n65 := [ "val", "idx", "obj" ];
__n63["params"] := __n65;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ReturnStatement";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "ThisExpression";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "_15_4_4_20_5_30";
__n71["raw"] := "\"_15_4_4_20_5_30\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["argument"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n72 := [  ];
__n66["variableDeclarations"] := __n72;
__n73 := [  ];
__n66["functionDeclarations"] := __n73;
__n66["codeType"] := "function";
__n66["strict"] := false;
__n63["body"] := __n66;
__n63["generator"] := false;
__n63["async"] := false;
__n63["expression"] := false;
__n62 := [ __n63 ];
__n19["functionDeclarations"] := __n62;
__n19["codeType"] := "function";
__n19["strict"] := false;
__n16["body"] := __n19;
__n16["generator"] := false;
__n16["async"] := false;
__n16["expression"] := false;
__n15 := [ __n16 ];
__n0["functionDeclarations"] := __n15;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}