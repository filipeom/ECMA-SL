function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "objFunction";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "FunctionExpression";
__n11["id"] := null;
__n12 := [  ];
__n11["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n14 := [  ];
__n13["body"] := __n14;
__n15 := [  ];
__n13["variableDeclarations"] := __n15;
__n16 := [  ];
__n13["functionDeclarations"] := __n16;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n11["body"] := __n13;
__n11["generator"] := false;
__n11["async"] := false;
__n11["expression"] := false;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "callbackfn";
__n17["expression"] := __n18;
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "newArr";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "ArrayExpression";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 11.;
__n27["raw"] := "11";
__n26 := [ __n27 ];
__n25["elements"] := __n26;
__n24["object"] := __n25;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "filter";
__n28["raw"] := "\"filter\"";
__n24["property"] := __n28;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "callbackfn";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "objFunction";
__n29 := [ __n30, __n31 ];
__n23["arguments"] := __n29;
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "assert";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "sameValue";
__n36["raw"] := "\"sameValue\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n38 := {  };
__n38["type"] := "MemberExpression";
__n38["computed"] := true;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "newArr";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 0.;
__n40["raw"] := "0";
__n38["property"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 11.;
__n41["raw"] := "11";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "newArr[0]";
__n42["raw"] := "'newArr[0]'";
__n37 := [ __n38, __n41, __n42 ];
__n33["arguments"] := __n37;
__n32["expression"] := __n33;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "assert";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "accessed";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "accessed !== true";
__n48["raw"] := "'accessed !== true'";
__n46 := [ __n47, __n48 ];
__n44["arguments"] := __n46;
__n43["expression"] := __n44;
__n1 := [ __n2, __n7, __n17, __n19, __n32, __n43 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n49 := [ "accessed", "objFunction", "newArr" ];
__n0["variableDeclarations"] := __n49;
__n51 := {  };
__n51["type"] := "FunctionDeclaration";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "callbackfn";
__n51["id"] := __n52;
__n53 := [ "val", "idx", "obj" ];
__n51["params"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "AssignmentExpression";
__n57["operator"] := "=";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "accessed";
__n57["left"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := true;
__n59["raw"] := "true";
__n57["right"] := __n59;
__n56["expression"] := __n57;
__n60 := {  };
__n60["type"] := "ReturnStatement";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "===";
__n62 := {  };
__n62["type"] := "ThisExpression";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "objFunction";
__n61["right"] := __n63;
__n60["argument"] := __n61;
__n55 := [ __n56, __n60 ];
__n54["body"] := __n55;
__n64 := [  ];
__n54["variableDeclarations"] := __n64;
__n65 := [  ];
__n54["functionDeclarations"] := __n65;
__n54["codeType"] := "function";
__n54["strict"] := false;
__n51["body"] := __n54;
__n51["generator"] := false;
__n51["async"] := false;
__n51["expression"] := false;
__n50 := [ __n51 ];
__n0["functionDeclarations"] := __n50;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}