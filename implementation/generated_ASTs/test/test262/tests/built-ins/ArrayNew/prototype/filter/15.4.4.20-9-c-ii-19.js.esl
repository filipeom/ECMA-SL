function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "obj";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ObjectExpression";
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 0.;
__n16["raw"] := "0";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 11.;
__n17["raw"] := "11";
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "non_index_property";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 8.;
__n20["raw"] := "8";
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 2.;
__n22["raw"] := "2";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 5.;
__n23["raw"] := "5";
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "length";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 20.;
__n26["raw"] := "20";
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n14 := [ __n15, __n18, __n21, __n24 ];
__n13["properties"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "newArr";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "Array";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "prototype";
__n36["raw"] := "\"prototype\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["object"] := __n34;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "filter";
__n37["raw"] := "\"filter\"";
__n33["property"] := __n37;
__n33["computed"] := true;
__n32["object"] := __n33;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "call";
__n38["raw"] := "\"call\"";
__n32["property"] := __n38;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "obj";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "callbackfn";
__n39 := [ __n40, __n41 ];
__n31["arguments"] := __n39;
__n29["init"] := __n31;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "assert";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "sameValue";
__n46["raw"] := "\"sameValue\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "newArr";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "length";
__n50["raw"] := "\"length\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 0.;
__n51["raw"] := "0";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "newArr.length";
__n52["raw"] := "'newArr.length'";
__n47 := [ __n48, __n51, __n52 ];
__n43["arguments"] := __n47;
__n42["expression"] := __n43;
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "assert";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "accessed";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "accessed !== true";
__n58["raw"] := "'accessed !== true'";
__n56 := [ __n57, __n58 ];
__n54["arguments"] := __n56;
__n53["expression"] := __n54;
__n1 := [ __n2, __n7, __n9, __n27, __n42, __n53 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n59 := [ "accessed", "obj", "newArr" ];
__n0["variableDeclarations"] := __n59;
__n61 := {  };
__n61["type"] := "FunctionDeclaration";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "callbackfn";
__n61["id"] := __n62;
__n63 := [ "val", "idx", "obj" ];
__n61["params"] := __n63;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "AssignmentExpression";
__n67["operator"] := "=";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "accessed";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := true;
__n69["raw"] := "true";
__n67["right"] := __n69;
__n66["expression"] := __n67;
__n70 := {  };
__n70["type"] := "ReturnStatement";
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "===";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "val";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 8.;
__n73["raw"] := "8";
__n71["right"] := __n73;
__n70["argument"] := __n71;
__n65 := [ __n66, __n70 ];
__n64["body"] := __n65;
__n74 := [  ];
__n64["variableDeclarations"] := __n74;
__n75 := [  ];
__n64["functionDeclarations"] := __n75;
__n64["codeType"] := "function";
__n64["strict"] := false;
__n61["body"] := __n64;
__n61["generator"] := false;
__n61["async"] := false;
__n61["expression"] := false;
__n60 := [ __n61 ];
__n0["functionDeclarations"] := __n60;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}