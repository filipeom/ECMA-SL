function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "a";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "callCount";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 0.;
__n12["raw"] := "0";
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "cb";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "FunctionExpression";
__n17["id"] := null;
__n18 := [  ];
__n17["params"] := __n18;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "AssignmentExpression";
__n22["operator"] := "+=";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "callCount";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 1.;
__n24["raw"] := "1";
__n22["right"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n25 := [  ];
__n19["variableDeclarations"] := __n25;
__n26 := [  ];
__n19["functionDeclarations"] := __n26;
__n19["codeType"] := "function";
__n19["strict"] := false;
__n17["body"] := __n19;
__n17["generator"] := false;
__n17["async"] := false;
__n17["expression"] := false;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "AssignmentExpression";
__n28["operator"] := "=";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "a";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "constructor";
__n31["raw"] := "\"constructor\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["left"] := __n29;
__n32 := {  };
__n32["type"] := "ObjectExpression";
__n33 := [  ];
__n32["properties"] := __n33;
__n28["right"] := __n32;
__n27["expression"] := __n28;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "AssignmentExpression";
__n35["operator"] := "=";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n36["computed"] := true;
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "a";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "constructor";
__n39["raw"] := "\"constructor\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["object"] := __n37;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Symbol";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "species";
__n42["raw"] := "\"species\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n36["property"] := __n40;
__n35["left"] := __n36;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "parseInt";
__n35["right"] := __n43;
__n34["expression"] := __n35;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "assert";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "throws";
__n48["raw"] := "\"throws\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "TypeError";
__n51 := {  };
__n51["type"] := "FunctionExpression";
__n51["id"] := null;
__n52 := [  ];
__n51["params"] := __n52;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "a";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "filter";
__n59["raw"] := "\"filter\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "cb";
__n60 := [ __n61 ];
__n56["arguments"] := __n60;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n62 := [  ];
__n53["variableDeclarations"] := __n62;
__n63 := [  ];
__n53["functionDeclarations"] := __n63;
__n53["codeType"] := "function";
__n53["strict"] := false;
__n51["body"] := __n53;
__n51["generator"] := false;
__n51["async"] := false;
__n51["expression"] := false;
__n49 := [ __n50, __n51 ];
__n45["arguments"] := __n49;
__n44["expression"] := __n45;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "assert";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "sameValue";
__n68["raw"] := "\"sameValue\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "callCount";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 0.;
__n71["raw"] := "0";
__n69 := [ __n70, __n71 ];
__n65["arguments"] := __n69;
__n64["expression"] := __n65;
__n1 := [ __n2, __n8, __n13, __n27, __n34, __n44, __n64 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n72 := [ "a", "callCount", "cb" ];
__n0["variableDeclarations"] := __n72;
__n73 := [  ];
__n0["functionDeclarations"] := __n73;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}