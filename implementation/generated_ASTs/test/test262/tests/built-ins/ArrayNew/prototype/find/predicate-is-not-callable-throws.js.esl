function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "throws";
__n6["raw"] := "\"throws\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "TypeError";
__n9 := {  };
__n9["type"] := "FunctionExpression";
__n9["id"] := null;
__n10 := [  ];
__n9["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "ArrayExpression";
__n17 := [  ];
__n16["elements"] := __n17;
__n15["object"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "find";
__n18["raw"] := "\"find\"";
__n15["property"] := __n18;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n20 := {  };
__n20["type"] := "ObjectExpression";
__n21 := [  ];
__n20["properties"] := __n21;
__n19 := [ __n20 ];
__n14["arguments"] := __n19;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n22 := [  ];
__n11["variableDeclarations"] := __n22;
__n23 := [  ];
__n11["functionDeclarations"] := __n23;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n9["body"] := __n11;
__n9["generator"] := false;
__n9["async"] := false;
__n9["expression"] := false;
__n7 := [ __n8, __n9 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "throws";
__n28["raw"] := "\"throws\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "TypeError";
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [  ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "ArrayExpression";
__n39 := [  ];
__n38["elements"] := __n39;
__n37["object"] := __n38;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "find";
__n40["raw"] := "\"find\"";
__n37["property"] := __n40;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 'null;
__n42["raw"] := "\"'null\"";
__n41 := [ __n42 ];
__n36["arguments"] := __n41;
__n35["expression"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n43 := [  ];
__n33["variableDeclarations"] := __n43;
__n44 := [  ];
__n33["functionDeclarations"] := __n44;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["async"] := false;
__n31["expression"] := false;
__n29 := [ __n30, __n31 ];
__n25["arguments"] := __n29;
__n24["expression"] := __n25;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "assert";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "throws";
__n49["raw"] := "\"throws\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "TypeError";
__n52 := {  };
__n52["type"] := "FunctionExpression";
__n52["id"] := null;
__n53 := [  ];
__n52["params"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "ArrayExpression";
__n60 := [  ];
__n59["elements"] := __n60;
__n58["object"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "find";
__n61["raw"] := "\"find\"";
__n58["property"] := __n61;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "undefined";
__n62 := [ __n63 ];
__n57["arguments"] := __n62;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n64 := [  ];
__n54["variableDeclarations"] := __n64;
__n65 := [  ];
__n54["functionDeclarations"] := __n65;
__n54["codeType"] := "function";
__n54["strict"] := false;
__n52["body"] := __n54;
__n52["generator"] := false;
__n52["async"] := false;
__n52["expression"] := false;
__n50 := [ __n51, __n52 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "assert";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "throws";
__n70["raw"] := "\"throws\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "TypeError";
__n73 := {  };
__n73["type"] := "FunctionExpression";
__n73["id"] := null;
__n74 := [  ];
__n73["params"] := __n74;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "ArrayExpression";
__n81 := [  ];
__n80["elements"] := __n81;
__n79["object"] := __n80;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "find";
__n82["raw"] := "\"find\"";
__n79["property"] := __n82;
__n79["computed"] := true;
__n78["callee"] := __n79;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := true;
__n84["raw"] := "true";
__n83 := [ __n84 ];
__n78["arguments"] := __n83;
__n77["expression"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n85 := [  ];
__n75["variableDeclarations"] := __n85;
__n86 := [  ];
__n75["functionDeclarations"] := __n86;
__n75["codeType"] := "function";
__n75["strict"] := false;
__n73["body"] := __n75;
__n73["generator"] := false;
__n73["async"] := false;
__n73["expression"] := false;
__n71 := [ __n72, __n73 ];
__n67["arguments"] := __n71;
__n66["expression"] := __n67;
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "assert";
__n89["object"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "throws";
__n91["raw"] := "\"throws\"";
__n89["property"] := __n91;
__n89["computed"] := true;
__n88["callee"] := __n89;
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "TypeError";
__n94 := {  };
__n94["type"] := "FunctionExpression";
__n94["id"] := null;
__n95 := [  ];
__n94["params"] := __n95;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "ArrayExpression";
__n102 := [  ];
__n101["elements"] := __n102;
__n100["object"] := __n101;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "find";
__n103["raw"] := "\"find\"";
__n100["property"] := __n103;
__n100["computed"] := true;
__n99["callee"] := __n100;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 1.;
__n105["raw"] := "1";
__n104 := [ __n105 ];
__n99["arguments"] := __n104;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n106 := [  ];
__n96["variableDeclarations"] := __n106;
__n107 := [  ];
__n96["functionDeclarations"] := __n107;
__n96["codeType"] := "function";
__n96["strict"] := false;
__n94["body"] := __n96;
__n94["generator"] := false;
__n94["async"] := false;
__n94["expression"] := false;
__n92 := [ __n93, __n94 ];
__n88["arguments"] := __n92;
__n87["expression"] := __n88;
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "MemberExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "assert";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "throws";
__n112["raw"] := "\"throws\"";
__n110["property"] := __n112;
__n110["computed"] := true;
__n109["callee"] := __n110;
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "TypeError";
__n115 := {  };
__n115["type"] := "FunctionExpression";
__n115["id"] := null;
__n116 := [  ];
__n115["params"] := __n116;
__n117 := {  };
__n117["type"] := "BlockStatement";
__n119 := {  };
__n119["type"] := "ExpressionStatement";
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "MemberExpression";
__n122 := {  };
__n122["type"] := "ArrayExpression";
__n123 := [  ];
__n122["elements"] := __n123;
__n121["object"] := __n122;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "find";
__n124["raw"] := "\"find\"";
__n121["property"] := __n124;
__n121["computed"] := true;
__n120["callee"] := __n121;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "";
__n126["raw"] := "''";
__n125 := [ __n126 ];
__n120["arguments"] := __n125;
__n119["expression"] := __n120;
__n118 := [ __n119 ];
__n117["body"] := __n118;
__n127 := [  ];
__n117["variableDeclarations"] := __n127;
__n128 := [  ];
__n117["functionDeclarations"] := __n128;
__n117["codeType"] := "function";
__n117["strict"] := false;
__n115["body"] := __n117;
__n115["generator"] := false;
__n115["async"] := false;
__n115["expression"] := false;
__n113 := [ __n114, __n115 ];
__n109["arguments"] := __n113;
__n108["expression"] := __n109;
__n129 := {  };
__n129["type"] := "ExpressionStatement";
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "MemberExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "assert";
__n131["object"] := __n132;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "throws";
__n133["raw"] := "\"throws\"";
__n131["property"] := __n133;
__n131["computed"] := true;
__n130["callee"] := __n131;
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "TypeError";
__n136 := {  };
__n136["type"] := "FunctionExpression";
__n136["id"] := null;
__n137 := [  ];
__n136["params"] := __n137;
__n138 := {  };
__n138["type"] := "BlockStatement";
__n140 := {  };
__n140["type"] := "ExpressionStatement";
__n141 := {  };
__n141["type"] := "CallExpression";
__n142 := {  };
__n142["type"] := "MemberExpression";
__n143 := {  };
__n143["type"] := "ArrayExpression";
__n144 := [  ];
__n143["elements"] := __n144;
__n142["object"] := __n143;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "find";
__n145["raw"] := "\"find\"";
__n142["property"] := __n145;
__n142["computed"] := true;
__n141["callee"] := __n142;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := 1.;
__n147["raw"] := "1";
__n146 := [ __n147 ];
__n141["arguments"] := __n146;
__n140["expression"] := __n141;
__n139 := [ __n140 ];
__n138["body"] := __n139;
__n148 := [  ];
__n138["variableDeclarations"] := __n148;
__n149 := [  ];
__n138["functionDeclarations"] := __n149;
__n138["codeType"] := "function";
__n138["strict"] := false;
__n136["body"] := __n138;
__n136["generator"] := false;
__n136["async"] := false;
__n136["expression"] := false;
__n134 := [ __n135, __n136 ];
__n130["arguments"] := __n134;
__n129["expression"] := __n130;
__n150 := {  };
__n150["type"] := "ExpressionStatement";
__n151 := {  };
__n151["type"] := "CallExpression";
__n152 := {  };
__n152["type"] := "MemberExpression";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "assert";
__n152["object"] := __n153;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "throws";
__n154["raw"] := "\"throws\"";
__n152["property"] := __n154;
__n152["computed"] := true;
__n151["callee"] := __n152;
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "TypeError";
__n157 := {  };
__n157["type"] := "FunctionExpression";
__n157["id"] := null;
__n158 := [  ];
__n157["params"] := __n158;
__n159 := {  };
__n159["type"] := "BlockStatement";
__n161 := {  };
__n161["type"] := "ExpressionStatement";
__n162 := {  };
__n162["type"] := "CallExpression";
__n163 := {  };
__n163["type"] := "MemberExpression";
__n164 := {  };
__n164["type"] := "ArrayExpression";
__n165 := [  ];
__n164["elements"] := __n165;
__n163["object"] := __n164;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "find";
__n166["raw"] := "\"find\"";
__n163["property"] := __n166;
__n163["computed"] := true;
__n162["callee"] := __n163;
__n168 := {  };
__n168["type"] := "ArrayExpression";
__n169 := [  ];
__n168["elements"] := __n169;
__n167 := [ __n168 ];
__n162["arguments"] := __n167;
__n161["expression"] := __n162;
__n160 := [ __n161 ];
__n159["body"] := __n160;
__n170 := [  ];
__n159["variableDeclarations"] := __n170;
__n171 := [  ];
__n159["functionDeclarations"] := __n171;
__n159["codeType"] := "function";
__n159["strict"] := false;
__n157["body"] := __n159;
__n157["generator"] := false;
__n157["async"] := false;
__n157["expression"] := false;
__n155 := [ __n156, __n157 ];
__n151["arguments"] := __n155;
__n150["expression"] := __n151;
__n172 := {  };
__n172["type"] := "ExpressionStatement";
__n173 := {  };
__n173["type"] := "CallExpression";
__n174 := {  };
__n174["type"] := "MemberExpression";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "assert";
__n174["object"] := __n175;
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := "throws";
__n176["raw"] := "\"throws\"";
__n174["property"] := __n176;
__n174["computed"] := true;
__n173["callee"] := __n174;
__n178 := {  };
__n178["type"] := "Identifier";
__n178["name"] := "TypeError";
__n179 := {  };
__n179["type"] := "FunctionExpression";
__n179["id"] := null;
__n180 := [  ];
__n179["params"] := __n180;
__n181 := {  };
__n181["type"] := "BlockStatement";
__n183 := {  };
__n183["type"] := "ExpressionStatement";
__n184 := {  };
__n184["type"] := "CallExpression";
__n185 := {  };
__n185["type"] := "MemberExpression";
__n186 := {  };
__n186["type"] := "ArrayExpression";
__n187 := [  ];
__n186["elements"] := __n187;
__n185["object"] := __n186;
__n188 := {  };
__n188["type"] := "Literal";
__n188["value"] := "find";
__n188["raw"] := "\"find\"";
__n185["property"] := __n188;
__n185["computed"] := true;
__n184["callee"] := __n185;
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := "/./";
__n190["raw"] := "/./";
__n190["source"] := ".";
__n191 := {  };
__n191["type"] := "RegExp";
__n192 := {  };
__n192["type"] := "Char";
__n192["value"] := ".";
__n192["kind"] := "meta";
__n192["symbol"] := ".";
__n192["codePoint"] := nan;
__n191["body"] := __n192;
__n191["flags"] := "";
__n191["nCaps"] := 0.;
__n190["regex"] := __n191;
__n189 := [ __n190 ];
__n184["arguments"] := __n189;
__n183["expression"] := __n184;
__n182 := [ __n183 ];
__n181["body"] := __n182;
__n193 := [  ];
__n181["variableDeclarations"] := __n193;
__n194 := [  ];
__n181["functionDeclarations"] := __n194;
__n181["codeType"] := "function";
__n181["strict"] := false;
__n179["body"] := __n181;
__n179["generator"] := false;
__n179["async"] := false;
__n179["expression"] := false;
__n177 := [ __n178, __n179 ];
__n173["arguments"] := __n177;
__n172["expression"] := __n173;
__n1 := [ __n2, __n24, __n45, __n66, __n87, __n108, __n129, __n150, __n172 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n195 := [  ];
__n0["variableDeclarations"] := __n195;
__n196 := [  ];
__n0["functionDeclarations"] := __n196;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}