function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "global";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ThisExpression";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "result";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := false;
__n11["raw"] := "false";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "callbackfn";
__n12["expression"] := __n13;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "ArrayExpression";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 11.;
__n19["raw"] := "11";
__n18 := [ __n19 ];
__n17["elements"] := __n18;
__n16["object"] := __n17;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "forEach";
__n20["raw"] := "\"forEach\"";
__n16["property"] := __n20;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "callbackfn";
__n23 := {  };
__n23["type"] := "ThisExpression";
__n21 := [ __n22, __n23 ];
__n15["arguments"] := __n21;
__n14["expression"] := __n15;
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "assert";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "result";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "result !== true";
__n29["raw"] := "'result !== true'";
__n27 := [ __n28, __n29 ];
__n25["arguments"] := __n27;
__n24["expression"] := __n25;
__n1 := [ __n2, __n7, __n12, __n14, __n24 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n30 := [ "global", "result" ];
__n0["variableDeclarations"] := __n30;
__n32 := {  };
__n32["type"] := "FunctionDeclaration";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "callbackfn";
__n32["id"] := __n33;
__n34 := [ "val", "idx", "obj" ];
__n32["params"] := __n34;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "AssignmentExpression";
__n38["operator"] := "=";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "result";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "===";
__n41 := {  };
__n41["type"] := "ThisExpression";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "global";
__n40["right"] := __n42;
__n38["right"] := __n40;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n43 := [  ];
__n35["variableDeclarations"] := __n43;
__n44 := [  ];
__n35["functionDeclarations"] := __n44;
__n35["codeType"] := "function";
__n35["strict"] := false;
__n32["body"] := __n35;
__n32["generator"] := false;
__n32["async"] := false;
__n32["expression"] := false;
__n31 := [ __n32 ];
__n0["functionDeclarations"] := __n31;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}