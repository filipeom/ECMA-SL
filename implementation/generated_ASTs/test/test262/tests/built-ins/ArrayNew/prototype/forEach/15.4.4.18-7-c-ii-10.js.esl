function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "result";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "ArrayExpression";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 11.;
__n14["raw"] := "11";
__n13 := [ __n14 ];
__n12["elements"] := __n13;
__n11["object"] := __n12;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "forEach";
__n15["raw"] := "\"forEach\"";
__n11["property"] := __n15;
__n11["computed"] := true;
__n10["callee"] := __n11;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "callbackfn";
__n16 := [ __n17 ];
__n10["arguments"] := __n16;
__n9["expression"] := __n10;
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "assert";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "result";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "result !== true";
__n23["raw"] := "'result !== true'";
__n21 := [ __n22, __n23 ];
__n19["arguments"] := __n21;
__n18["expression"] := __n19;
__n1 := [ __n2, __n7, __n9, __n18 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n24 := [ "result" ];
__n0["variableDeclarations"] := __n24;
__n26 := {  };
__n26["type"] := "FunctionDeclaration";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "callbackfn";
__n26["id"] := __n27;
__n28 := [ "val" ];
__n26["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "result";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := ">";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "val";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 10.;
__n36["raw"] := "10";
__n34["right"] := __n36;
__n32["right"] := __n34;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n37 := [  ];
__n29["variableDeclarations"] := __n37;
__n38 := [  ];
__n29["functionDeclarations"] := __n38;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n26["body"] := __n29;
__n26["generator"] := false;
__n26["async"] := false;
__n26["expression"] := false;
__n25 := [ __n26 ];
__n0["functionDeclarations"] := __n25;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}