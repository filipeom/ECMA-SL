function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "toString";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ReturnStatement";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := true;
__n15["raw"] := "true";
__n14["argument"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n16 := [  ];
__n12["variableDeclarations"] := __n16;
__n17 := [  ];
__n12["functionDeclarations"] := __n17;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "_false";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := false;
__n22["raw"] := "false";
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n23 := {  };
__n23["type"] := "VariableDeclaration";
__n25 := {  };
__n25["type"] := "VariableDeclarator";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "a";
__n25["id"] := __n26;
__n27 := {  };
__n27["type"] := "ArrayExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "obj";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "true";
__n30["raw"] := "\"true\"";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "undefined";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 0.;
__n32["raw"] := "0";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "_false";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 'null;
__n34["raw"] := "\"'null\"";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 1.;
__n35["raw"] := "1";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "str";
__n36["raw"] := "\"str\"";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 0.;
__n37["raw"] := "0";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 1.;
__n38["raw"] := "1";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := true;
__n39["raw"] := "true";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := false;
__n40["raw"] := "false";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := true;
__n41["raw"] := "true";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := false;
__n42["raw"] := "false";
__n28 := [ __n29, __n30, __n31, __n32, __n33, __n34, __n35, __n36, __n37, __n38, __n39, __n40, __n41, __n42 ];
__n27["elements"] := __n28;
__n25["init"] := __n27;
__n24 := [ __n25 ];
__n23["declarations"] := __n24;
__n23["kind"] := "var";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "assert";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "sameValue";
__n47["raw"] := "\"sameValue\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["callee"] := __n45;
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "a";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "indexOf";
__n52["raw"] := "\"indexOf\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := true;
__n54["raw"] := "true";
__n53 := [ __n54 ];
__n49["arguments"] := __n53;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 10.;
__n55["raw"] := "10";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "a[10]=true";
__n56["raw"] := "'a[10]=true'";
__n48 := [ __n49, __n55, __n56 ];
__n44["arguments"] := __n48;
__n43["expression"] := __n44;
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "assert";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "sameValue";
__n61["raw"] := "\"sameValue\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n58["callee"] := __n59;
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "a";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "indexOf";
__n66["raw"] := "\"indexOf\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := false;
__n68["raw"] := "false";
__n67 := [ __n68 ];
__n63["arguments"] := __n67;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 4.;
__n69["raw"] := "4";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "a[4] =_false";
__n70["raw"] := "'a[4] =_false'";
__n62 := [ __n63, __n69, __n70 ];
__n58["arguments"] := __n62;
__n57["expression"] := __n58;
__n1 := [ __n2, __n18, __n23, __n43, __n57 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n71 := [ "obj", "_false", "a" ];
__n0["variableDeclarations"] := __n71;
__n72 := [  ];
__n0["functionDeclarations"] := __n72;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}