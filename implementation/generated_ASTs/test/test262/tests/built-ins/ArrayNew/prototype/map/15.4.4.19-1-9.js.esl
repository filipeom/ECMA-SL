function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "obj";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "FunctionExpression";
__n8["id"] := null;
__n9 := [ "a", "b" ];
__n8["params"] := __n9;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ReturnStatement";
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "+";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "a";
__n13["left"] := __n14;
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "b";
__n13["right"] := __n15;
__n12["argument"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n16 := [  ];
__n10["variableDeclarations"] := __n16;
__n17 := [  ];
__n10["functionDeclarations"] := __n17;
__n10["codeType"] := "function";
__n10["strict"] := false;
__n8["body"] := __n10;
__n8["generator"] := false;
__n8["async"] := false;
__n8["expression"] := false;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "AssignmentExpression";
__n19["operator"] := "=";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n20["computed"] := true;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "obj";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 0.;
__n22["raw"] := "0";
__n20["property"] := __n22;
__n19["left"] := __n20;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 11.;
__n23["raw"] := "11";
__n19["right"] := __n23;
__n18["expression"] := __n19;
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "AssignmentExpression";
__n25["operator"] := "=";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n26["computed"] := true;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "obj";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 1.;
__n28["raw"] := "1";
__n26["property"] := __n28;
__n25["left"] := __n26;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 9.;
__n29["raw"] := "9";
__n25["right"] := __n29;
__n24["expression"] := __n25;
__n30 := {  };
__n30["type"] := "VariableDeclaration";
__n32 := {  };
__n32["type"] := "VariableDeclarator";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "testResult";
__n32["id"] := __n33;
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Array";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "prototype";
__n39["raw"] := "\"prototype\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["object"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "map";
__n40["raw"] := "\"map\"";
__n36["property"] := __n40;
__n36["computed"] := true;
__n35["object"] := __n36;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "call";
__n41["raw"] := "\"call\"";
__n35["property"] := __n41;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "obj";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "callbackfn";
__n42 := [ __n43, __n44 ];
__n34["arguments"] := __n42;
__n32["init"] := __n34;
__n31 := [ __n32 ];
__n30["declarations"] := __n31;
__n30["kind"] := "var";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "assert";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "sameValue";
__n49["raw"] := "\"sameValue\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "MemberExpression";
__n51["computed"] := true;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "testResult";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 0.;
__n53["raw"] := "0";
__n51["property"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := true;
__n54["raw"] := "true";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "testResult[0]";
__n55["raw"] := "'testResult[0]'";
__n50 := [ __n51, __n54, __n55 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "assert";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "sameValue";
__n60["raw"] := "\"sameValue\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n62 := {  };
__n62["type"] := "MemberExpression";
__n62["computed"] := true;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "testResult";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 1.;
__n64["raw"] := "1";
__n62["property"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := true;
__n65["raw"] := "true";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "testResult[1]";
__n66["raw"] := "'testResult[1]'";
__n61 := [ __n62, __n65, __n66 ];
__n57["arguments"] := __n61;
__n56["expression"] := __n57;
__n1 := [ __n2, __n4, __n18, __n24, __n30, __n45, __n56 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n67 := [ "obj", "testResult" ];
__n0["variableDeclarations"] := __n67;
__n69 := {  };
__n69["type"] := "FunctionDeclaration";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "callbackfn";
__n69["id"] := __n70;
__n71 := [ "val", "idx", "obj" ];
__n69["params"] := __n71;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ReturnStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "instanceof";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "obj";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "Function";
__n75["right"] := __n77;
__n74["argument"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n78 := [  ];
__n72["variableDeclarations"] := __n78;
__n79 := [  ];
__n72["functionDeclarations"] := __n79;
__n72["codeType"] := "function";
__n72["strict"] := false;
__n69["body"] := __n72;
__n69["generator"] := false;
__n69["async"] := false;
__n69["expression"] := false;
__n68 := [ __n69 ];
__n0["functionDeclarations"] := __n68;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}