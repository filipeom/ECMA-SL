function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "arrProtoLen";
__n6["id"] := __n7;
__n6["init"] := null;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "arrProtoLen";
__n9["left"] := __n10;
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Array";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "prototype";
__n14["raw"] := "\"prototype\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["object"] := __n12;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "length";
__n15["raw"] := "\"length\"";
__n11["property"] := __n15;
__n11["computed"] := true;
__n9["right"] := __n11;
__n8["expression"] := __n9;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "AssignmentExpression";
__n17["operator"] := "=";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Array";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "prototype";
__n21["raw"] := "\"prototype\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["object"] := __n19;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "length";
__n22["raw"] := "\"length\"";
__n18["property"] := __n22;
__n18["computed"] := true;
__n17["left"] := __n18;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 0.;
__n23["raw"] := "0";
__n17["right"] := __n23;
__n16["expression"] := __n17;
__n24 := {  };
__n24["type"] := "VariableDeclaration";
__n26 := {  };
__n26["type"] := "VariableDeclarator";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "testResult";
__n26["id"] := __n27;
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "ArrayExpression";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 12.;
__n32["raw"] := "12";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 11.;
__n33["raw"] := "11";
__n31 := [ __n32, __n33 ];
__n30["elements"] := __n31;
__n29["object"] := __n30;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "map";
__n34["raw"] := "\"map\"";
__n29["property"] := __n34;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "callbackfn";
__n35 := [ __n36 ];
__n28["arguments"] := __n35;
__n26["init"] := __n28;
__n25 := [ __n26 ];
__n24["declarations"] := __n25;
__n24["kind"] := "var";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "assert";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "sameValue";
__n41["raw"] := "\"sameValue\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "testResult";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "length";
__n45["raw"] := "\"length\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 2.;
__n46["raw"] := "2";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "testResult.length";
__n47["raw"] := "'testResult.length'";
__n42 := [ __n43, __n46, __n47 ];
__n38["arguments"] := __n42;
__n37["expression"] := __n38;
__n1 := [ __n2, __n4, __n8, __n16, __n24, __n37 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n48 := [ "arrProtoLen", "testResult" ];
__n0["variableDeclarations"] := __n48;
__n50 := {  };
__n50["type"] := "FunctionDeclaration";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "callbackfn";
__n50["id"] := __n51;
__n52 := [ "val", "idx", "obj" ];
__n50["params"] := __n52;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ReturnStatement";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := ">";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "val";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 10.;
__n58["raw"] := "10";
__n56["right"] := __n58;
__n55["argument"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n59 := [  ];
__n53["variableDeclarations"] := __n59;
__n60 := [  ];
__n53["functionDeclarations"] := __n60;
__n53["codeType"] := "function";
__n53["strict"] := false;
__n50["body"] := __n53;
__n50["generator"] := false;
__n50["async"] := false;
__n50["expression"] := false;
__n49 := [ __n50 ];
__n0["functionDeclarations"] := __n49;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}