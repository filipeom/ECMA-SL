function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "cb";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "assert";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "sameValue";
__n8["raw"] := "\"sameValue\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "ArrayExpression";
__n13 := [  ];
__n12["elements"] := __n13;
__n11["object"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "reduce";
__n14["raw"] := "\"reduce\"";
__n11["property"] := __n14;
__n11["computed"] := true;
__n10["callee"] := __n11;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "cb";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 1.;
__n17["raw"] := "1";
__n15 := [ __n16, __n17 ];
__n10["arguments"] := __n15;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.;
__n18["raw"] := "1";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "[].reduce(cb,1)";
__n19["raw"] := "'[].reduce(cb,1)'";
__n9 := [ __n10, __n18, __n19 ];
__n5["arguments"] := __n9;
__n4["expression"] := __n5;
__n1 := [ __n2, __n4 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n20 := [  ];
__n0["variableDeclarations"] := __n20;
__n22 := {  };
__n22["type"] := "FunctionDeclaration";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "cb";
__n22["id"] := __n23;
__n24 := [  ];
__n22["params"] := __n24;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n26 := [  ];
__n25["body"] := __n26;
__n27 := [  ];
__n25["variableDeclarations"] := __n27;
__n28 := [  ];
__n25["functionDeclarations"] := __n28;
__n25["codeType"] := "function";
__n25["strict"] := false;
__n22["body"] := __n25;
__n22["generator"] := false;
__n22["async"] := false;
__n22["expression"] := false;
__n21 := [ __n22 ];
__n0["functionDeclarations"] := __n21;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}