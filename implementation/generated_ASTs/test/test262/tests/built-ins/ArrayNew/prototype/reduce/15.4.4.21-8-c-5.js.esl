function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "accessed";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := false;
__n12["raw"] := "false";
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Object";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "defineProperty";
__n17["raw"] := "\"defineProperty\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "obj";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "length";
__n20["raw"] := "\"length\"";
__n21 := {  };
__n21["type"] := "ObjectExpression";
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "get";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "FunctionExpression";
__n25["id"] := null;
__n26 := [  ];
__n25["params"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "AssignmentExpression";
__n30["operator"] := "=";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "accessed";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := true;
__n32["raw"] := "true";
__n30["right"] := __n32;
__n29["expression"] := __n30;
__n33 := {  };
__n33["type"] := "ReturnStatement";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 2.;
__n34["raw"] := "2";
__n33["argument"] := __n34;
__n28 := [ __n29, __n33 ];
__n27["body"] := __n28;
__n35 := [  ];
__n27["variableDeclarations"] := __n35;
__n36 := [  ];
__n27["functionDeclarations"] := __n36;
__n27["codeType"] := "function";
__n27["strict"] := false;
__n25["body"] := __n27;
__n25["generator"] := false;
__n25["async"] := false;
__n25["expression"] := false;
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n37 := {  };
__n37["type"] := "Property";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "configurable";
__n37["key"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := true;
__n39["raw"] := "true";
__n37["value"] := __n39;
__n37["computed"] := false;
__n37["kind"] := "init";
__n37["shorthand"] := false;
__n22 := [ __n23, __n37 ];
__n21["properties"] := __n22;
__n18 := [ __n19, __n20, __n21 ];
__n14["arguments"] := __n18;
__n13["expression"] := __n14;
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "assert";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "throws";
__n44["raw"] := "\"throws\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["callee"] := __n42;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "TypeError";
__n47 := {  };
__n47["type"] := "FunctionExpression";
__n47["id"] := null;
__n48 := [  ];
__n47["params"] := __n48;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Array";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "prototype";
__n57["raw"] := "\"prototype\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["object"] := __n55;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "reduce";
__n58["raw"] := "\"reduce\"";
__n54["property"] := __n58;
__n54["computed"] := true;
__n53["object"] := __n54;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "call";
__n59["raw"] := "\"call\"";
__n53["property"] := __n59;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "obj";
__n62 := {  };
__n62["type"] := "FunctionExpression";
__n62["id"] := null;
__n63 := [  ];
__n62["params"] := __n63;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n65 := [  ];
__n64["body"] := __n65;
__n66 := [  ];
__n64["variableDeclarations"] := __n66;
__n67 := [  ];
__n64["functionDeclarations"] := __n67;
__n64["codeType"] := "function";
__n64["strict"] := false;
__n62["body"] := __n64;
__n62["generator"] := false;
__n62["async"] := false;
__n62["expression"] := false;
__n60 := [ __n61, __n62 ];
__n52["arguments"] := __n60;
__n51["expression"] := __n52;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n68 := [  ];
__n49["variableDeclarations"] := __n68;
__n69 := [  ];
__n49["functionDeclarations"] := __n69;
__n49["codeType"] := "function";
__n49["strict"] := false;
__n47["body"] := __n49;
__n47["generator"] := false;
__n47["async"] := false;
__n47["expression"] := false;
__n45 := [ __n46, __n47 ];
__n41["arguments"] := __n45;
__n40["expression"] := __n41;
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "assert";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "accessed";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "accessed !== true";
__n75["raw"] := "'accessed !== true'";
__n73 := [ __n74, __n75 ];
__n71["arguments"] := __n73;
__n70["expression"] := __n71;
__n1 := [ __n2, __n8, __n13, __n40, __n70 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n76 := [ "obj", "accessed" ];
__n0["variableDeclarations"] := __n76;
__n77 := [  ];
__n0["functionDeclarations"] := __n77;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}