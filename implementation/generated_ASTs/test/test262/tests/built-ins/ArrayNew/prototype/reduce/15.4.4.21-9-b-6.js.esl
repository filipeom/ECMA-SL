function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "obj";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ObjectExpression";
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "length";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 6.;
__n17["raw"] := "6";
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n14 := [ __n15 ];
__n13["properties"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "Object";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "defineProperty";
__n22["raw"] := "\"defineProperty\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "obj";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "0";
__n25["raw"] := "\"0\"";
__n26 := {  };
__n26["type"] := "ObjectExpression";
__n28 := {  };
__n28["type"] := "Property";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "get";
__n28["key"] := __n29;
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [  ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Object";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "defineProperty";
__n38["raw"] := "\"defineProperty\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Object";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "prototype";
__n42["raw"] := "\"prototype\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "1";
__n43["raw"] := "\"1\"";
__n44 := {  };
__n44["type"] := "ObjectExpression";
__n46 := {  };
__n46["type"] := "Property";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "get";
__n46["key"] := __n47;
__n48 := {  };
__n48["type"] := "FunctionExpression";
__n48["id"] := null;
__n49 := [  ];
__n48["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ReturnStatement";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 6.99;
__n53["raw"] := "6.99";
__n52["argument"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n54 := [  ];
__n50["variableDeclarations"] := __n54;
__n55 := [  ];
__n50["functionDeclarations"] := __n55;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n48["body"] := __n50;
__n48["generator"] := false;
__n48["async"] := false;
__n48["expression"] := false;
__n46["value"] := __n48;
__n46["computed"] := false;
__n46["kind"] := "init";
__n46["shorthand"] := false;
__n56 := {  };
__n56["type"] := "Property";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "configurable";
__n56["key"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := true;
__n58["raw"] := "true";
__n56["value"] := __n58;
__n56["computed"] := false;
__n56["kind"] := "init";
__n56["shorthand"] := false;
__n45 := [ __n46, __n56 ];
__n44["properties"] := __n45;
__n39 := [ __n40, __n43, __n44 ];
__n35["arguments"] := __n39;
__n34["expression"] := __n35;
__n59 := {  };
__n59["type"] := "ReturnStatement";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 0.;
__n60["raw"] := "0";
__n59["argument"] := __n60;
__n33 := [ __n34, __n59 ];
__n32["body"] := __n33;
__n61 := [  ];
__n32["variableDeclarations"] := __n61;
__n62 := [  ];
__n32["functionDeclarations"] := __n62;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["async"] := false;
__n30["expression"] := false;
__n28["value"] := __n30;
__n28["computed"] := false;
__n28["kind"] := "init";
__n28["shorthand"] := false;
__n63 := {  };
__n63["type"] := "Property";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "configurable";
__n63["key"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := true;
__n65["raw"] := "true";
__n63["value"] := __n65;
__n63["computed"] := false;
__n63["kind"] := "init";
__n63["shorthand"] := false;
__n27 := [ __n28, __n63 ];
__n26["properties"] := __n27;
__n23 := [ __n24, __n25, __n26 ];
__n19["arguments"] := __n23;
__n18["expression"] := __n19;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "Array";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "prototype";
__n72["raw"] := "\"prototype\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n69["object"] := __n70;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "reduce";
__n73["raw"] := "\"reduce\"";
__n69["property"] := __n73;
__n69["computed"] := true;
__n68["object"] := __n69;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "call";
__n74["raw"] := "\"call\"";
__n68["property"] := __n74;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "obj";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "callbackfn";
__n75 := [ __n76, __n77 ];
__n67["arguments"] := __n75;
__n66["expression"] := __n67;
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "assert";
__n79["callee"] := __n80;
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "testResult";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "testResult !== true";
__n83["raw"] := "'testResult !== true'";
__n81 := [ __n82, __n83 ];
__n79["arguments"] := __n81;
__n78["expression"] := __n79;
__n1 := [ __n2, __n7, __n9, __n18, __n66, __n78 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n84 := [ "testResult", "obj" ];
__n0["variableDeclarations"] := __n84;
__n86 := {  };
__n86["type"] := "FunctionDeclaration";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "callbackfn";
__n86["id"] := __n87;
__n88 := [ "accum", "val", "idx", "obj" ];
__n86["params"] := __n88;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "LogicalExpression";
__n92["operator"] := "&&";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "===";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "idx";
__n93["left"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 1.;
__n95["raw"] := "1";
__n93["right"] := __n95;
__n92["left"] := __n93;
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "===";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "val";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 6.99;
__n98["raw"] := "6.99";
__n96["right"] := __n98;
__n92["right"] := __n96;
__n91["test"] := __n92;
__n99 := {  };
__n99["type"] := "BlockStatement";
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "AssignmentExpression";
__n102["operator"] := "=";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "testResult";
__n102["left"] := __n103;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := true;
__n104["raw"] := "true";
__n102["right"] := __n104;
__n101["expression"] := __n102;
__n100 := [ __n101 ];
__n99["body"] := __n100;
__n91["consequent"] := __n99;
__n91["alternate"] := null;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n105 := [  ];
__n89["variableDeclarations"] := __n105;
__n106 := [  ];
__n89["functionDeclarations"] := __n106;
__n89["codeType"] := "function";
__n89["strict"] := false;
__n86["body"] := __n89;
__n86["generator"] := false;
__n86["async"] := false;
__n86["expression"] := false;
__n85 := [ __n86 ];
__n0["functionDeclarations"] := __n85;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}