function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "hello
world\\!";
__n9["raw"] := "\"hello\\nworld\\\\!\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "accessed";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := false;
__n14["raw"] := "false";
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "callbackfn";
__n15["expression"] := __n16;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "assert";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Array";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "prototype";
__n26["raw"] := "\"prototype\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["object"] := __n24;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "reduceRight";
__n27["raw"] := "\"reduceRight\"";
__n23["property"] := __n27;
__n23["computed"] := true;
__n22["object"] := __n23;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "call";
__n28["raw"] := "\"call\"";
__n22["property"] := __n28;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "obj";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "callbackfn";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "h";
__n32["raw"] := "\"h\"";
__n29 := [ __n30, __n31, __n32 ];
__n21["arguments"] := __n29;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "Array.prototype.reduceRight.call(obj, callbackfn, \"h\") !== true";
__n33["raw"] := "'Array.prototype.reduceRight.call(obj, callbackfn, \"h\") !== true'";
__n20 := [ __n21, __n33 ];
__n18["arguments"] := __n20;
__n17["expression"] := __n18;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "assert";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "accessed";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "accessed !== true";
__n39["raw"] := "'accessed !== true'";
__n37 := [ __n38, __n39 ];
__n35["arguments"] := __n37;
__n34["expression"] := __n35;
__n1 := [ __n2, __n10, __n15, __n17, __n34 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n40 := [ "obj", "accessed" ];
__n0["variableDeclarations"] := __n40;
__n42 := {  };
__n42["type"] := "FunctionDeclaration";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "callbackfn";
__n42["id"] := __n43;
__n44 := [ "prevVal", "curVal", "idx", "o" ];
__n42["params"] := __n44;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "AssignmentExpression";
__n48["operator"] := "=";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "accessed";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := true;
__n50["raw"] := "true";
__n48["right"] := __n50;
__n47["expression"] := __n48;
__n51 := {  };
__n51["type"] := "ReturnStatement";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "instanceof";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "o";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "String";
__n52["right"] := __n54;
__n51["argument"] := __n52;
__n46 := [ __n47, __n51 ];
__n45["body"] := __n46;
__n55 := [  ];
__n45["variableDeclarations"] := __n55;
__n56 := [  ];
__n45["functionDeclarations"] := __n56;
__n45["codeType"] := "function";
__n45["strict"] := false;
__n42["body"] := __n45;
__n42["generator"] := false;
__n42["async"] := false;
__n42["expression"] := false;
__n41 := [ __n42 ];
__n0["functionDeclarations"] := __n41;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}