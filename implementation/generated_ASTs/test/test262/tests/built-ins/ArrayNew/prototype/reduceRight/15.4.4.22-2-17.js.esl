function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arg";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "accessed";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := false;
__n10["raw"] := "false";
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "callbackfn";
__n11["expression"] := __n12;
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "func";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "FunctionExpression";
__n17["id"] := null;
__n18 := [ "a", "b" ];
__n17["params"] := __n18;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "AssignmentExpression";
__n22["operator"] := "=";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "arg";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "arguments";
__n22["right"] := __n24;
__n21["expression"] := __n22;
__n25 := {  };
__n25["type"] := "ReturnStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Array";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "prototype";
__n31["raw"] := "\"prototype\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["object"] := __n29;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "reduceRight";
__n32["raw"] := "\"reduceRight\"";
__n28["property"] := __n32;
__n28["computed"] := true;
__n27["object"] := __n28;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "call";
__n33["raw"] := "\"call\"";
__n27["property"] := __n33;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "arguments";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "callbackfn";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 11.;
__n37["raw"] := "11";
__n34 := [ __n35, __n36, __n37 ];
__n26["arguments"] := __n34;
__n25["argument"] := __n26;
__n20 := [ __n21, __n25 ];
__n19["body"] := __n20;
__n38 := [  ];
__n19["variableDeclarations"] := __n38;
__n39 := [  ];
__n19["functionDeclarations"] := __n39;
__n19["codeType"] := "function";
__n19["strict"] := false;
__n17["body"] := __n19;
__n17["generator"] := false;
__n17["async"] := false;
__n17["expression"] := false;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "assert";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "func";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 12.;
__n47["raw"] := "12";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 11.;
__n48["raw"] := "11";
__n46 := [ __n47, __n48 ];
__n44["arguments"] := __n46;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "func(12, 11) !== true";
__n49["raw"] := "'func(12, 11) !== true'";
__n43 := [ __n44, __n49 ];
__n41["arguments"] := __n43;
__n40["expression"] := __n41;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "assert";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "accessed";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "accessed !== true";
__n55["raw"] := "'accessed !== true'";
__n53 := [ __n54, __n55 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n1 := [ __n2, __n6, __n11, __n13, __n40, __n50 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n56 := [ "arg", "accessed", "func" ];
__n0["variableDeclarations"] := __n56;
__n58 := {  };
__n58["type"] := "FunctionDeclaration";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "callbackfn";
__n58["id"] := __n59;
__n60 := [ "prevVal", "curVal", "idx", "obj" ];
__n58["params"] := __n60;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "AssignmentExpression";
__n64["operator"] := "=";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "accessed";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := true;
__n66["raw"] := "true";
__n64["right"] := __n66;
__n63["expression"] := __n64;
__n67 := {  };
__n67["type"] := "ReturnStatement";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "===";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "obj";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "length";
__n71["raw"] := "\"length\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["left"] := __n69;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 2.;
__n72["raw"] := "2";
__n68["right"] := __n72;
__n67["argument"] := __n68;
__n62 := [ __n63, __n67 ];
__n61["body"] := __n62;
__n73 := [  ];
__n61["variableDeclarations"] := __n73;
__n74 := [  ];
__n61["functionDeclarations"] := __n74;
__n61["codeType"] := "function";
__n61["strict"] := false;
__n58["body"] := __n61;
__n58["generator"] := false;
__n58["async"] := false;
__n58["expression"] := false;
__n57 := [ __n58 ];
__n0["functionDeclarations"] := __n57;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}