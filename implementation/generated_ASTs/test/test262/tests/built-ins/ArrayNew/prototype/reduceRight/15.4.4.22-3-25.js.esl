function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := true;
__n6["raw"] := "true";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "testResult2";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := false;
__n11["raw"] := "false";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "callbackfn";
__n12["expression"] := __n13;
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "obj";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 0.;
__n21["raw"] := "0";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 12.;
__n22["raw"] := "12";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 1.;
__n24["raw"] := "1";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 11.;
__n25["raw"] := "11";
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n26 := {  };
__n26["type"] := "Property";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 2.;
__n27["raw"] := "2";
__n26["key"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 9.;
__n28["raw"] := "9";
__n26["value"] := __n28;
__n26["computed"] := false;
__n26["kind"] := "init";
__n26["shorthand"] := false;
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "length";
__n29["key"] := __n30;
__n31 := {  };
__n31["type"] := "UnaryExpression";
__n31["operator"] := "-";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 4294967294.5;
__n32["raw"] := "4294967294.5";
__n31["argument"] := __n32;
__n31["prefix"] := true;
__n29["value"] := __n31;
__n29["computed"] := false;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n19 := [ __n20, __n23, __n26, __n29 ];
__n18["properties"] := __n19;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Array";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "prototype";
__n39["raw"] := "\"prototype\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["object"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "reduceRight";
__n40["raw"] := "\"reduceRight\"";
__n36["property"] := __n40;
__n36["computed"] := true;
__n35["object"] := __n36;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "call";
__n41["raw"] := "\"call\"";
__n35["property"] := __n41;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "obj";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "callbackfn";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 1.;
__n45["raw"] := "1";
__n42 := [ __n43, __n44, __n45 ];
__n34["arguments"] := __n42;
__n33["expression"] := __n34;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "assert";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "testResult1";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "testResult1 !== true";
__n51["raw"] := "'testResult1 !== true'";
__n49 := [ __n50, __n51 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "assert";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "sameValue";
__n56["raw"] := "\"sameValue\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["callee"] := __n54;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "testResult2";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := false;
__n59["raw"] := "false";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "testResult2";
__n60["raw"] := "'testResult2'";
__n57 := [ __n58, __n59, __n60 ];
__n53["arguments"] := __n57;
__n52["expression"] := __n53;
__n1 := [ __n2, __n7, __n12, __n14, __n33, __n46, __n52 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n61 := [ "testResult1", "testResult2", "obj" ];
__n0["variableDeclarations"] := __n61;
__n63 := {  };
__n63["type"] := "FunctionDeclaration";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "callbackfn";
__n63["id"] := __n64;
__n65 := [ "prevVal", "curVal", "idx", "obj" ];
__n63["params"] := __n65;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "IfStatement";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := ">";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "idx";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 1.;
__n71["raw"] := "1";
__n69["right"] := __n71;
__n68["test"] := __n69;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "AssignmentExpression";
__n75["operator"] := "=";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "testResult1";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := false;
__n77["raw"] := "false";
__n75["right"] := __n77;
__n74["expression"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n68["consequent"] := __n72;
__n68["alternate"] := null;
__n78 := {  };
__n78["type"] := "IfStatement";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "===";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "idx";
__n79["left"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 1.;
__n81["raw"] := "1";
__n79["right"] := __n81;
__n78["test"] := __n79;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "AssignmentExpression";
__n85["operator"] := "=";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "testResult2";
__n85["left"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := true;
__n87["raw"] := "true";
__n85["right"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n78["consequent"] := __n82;
__n78["alternate"] := null;
__n88 := {  };
__n88["type"] := "ReturnStatement";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := false;
__n89["raw"] := "false";
__n88["argument"] := __n89;
__n67 := [ __n68, __n78, __n88 ];
__n66["body"] := __n67;
__n90 := [  ];
__n66["variableDeclarations"] := __n90;
__n91 := [  ];
__n66["functionDeclarations"] := __n91;
__n66["codeType"] := "function";
__n66["strict"] := false;
__n63["body"] := __n66;
__n63["generator"] := false;
__n63["async"] := false;
__n63["expression"] := false;
__n62 := [ __n63 ];
__n0["functionDeclarations"] := __n62;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}