function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "foo";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "prototype";
__n6["raw"] := "\"prototype\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "NewExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Array";
__n7["callee"] := __n8;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 2.;
__n11["raw"] := "2";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 3.;
__n12["raw"] := "3";
__n9 := [ __n10, __n11, __n12 ];
__n7["arguments"] := __n9;
__n3["right"] := __n7;
__n2["expression"] := __n3;
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "foo";
__n13["expression"] := __n14;
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "f";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "NewExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "foo";
__n19["callee"] := __n20;
__n21 := [  ];
__n19["arguments"] := __n21;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "AssignmentExpression";
__n23["operator"] := "=";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "f";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "length";
__n26["raw"] := "\"length\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["left"] := __n24;
__n27 := {  };
__n27["type"] := "ArrayExpression";
__n28 := [  ];
__n27["elements"] := __n28;
__n23["right"] := __n27;
__n22["expression"] := __n23;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "cb";
__n29["expression"] := __n30;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "assert";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "throws";
__n35["raw"] := "\"throws\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "TypeError";
__n38 := {  };
__n38["type"] := "FunctionExpression";
__n38["id"] := null;
__n39 := [  ];
__n38["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "f";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "reduceRight";
__n46["raw"] := "\"reduceRight\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "cb";
__n47 := [ __n48 ];
__n43["arguments"] := __n47;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n49 := [  ];
__n40["variableDeclarations"] := __n49;
__n50 := [  ];
__n40["functionDeclarations"] := __n50;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n38["body"] := __n40;
__n38["generator"] := false;
__n38["async"] := false;
__n38["expression"] := false;
__n36 := [ __n37, __n38 ];
__n32["arguments"] := __n36;
__n31["expression"] := __n32;
__n1 := [ __n2, __n13, __n15, __n22, __n29, __n31 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n51 := [ "f" ];
__n0["variableDeclarations"] := __n51;
__n53 := {  };
__n53["type"] := "FunctionDeclaration";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "foo";
__n53["id"] := __n54;
__n55 := [  ];
__n53["params"] := __n55;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n57 := [  ];
__n56["body"] := __n57;
__n58 := [  ];
__n56["variableDeclarations"] := __n58;
__n59 := [  ];
__n56["functionDeclarations"] := __n59;
__n56["codeType"] := "function";
__n56["strict"] := false;
__n53["body"] := __n56;
__n53["generator"] := false;
__n53["async"] := false;
__n53["expression"] := false;
__n60 := {  };
__n60["type"] := "FunctionDeclaration";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "cb";
__n60["id"] := __n61;
__n62 := [  ];
__n60["params"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n64 := [  ];
__n63["body"] := __n64;
__n65 := [  ];
__n63["variableDeclarations"] := __n65;
__n66 := [  ];
__n63["functionDeclarations"] := __n66;
__n63["codeType"] := "function";
__n63["strict"] := false;
__n60["body"] := __n63;
__n60["generator"] := false;
__n60["async"] := false;
__n60["expression"] := false;
__n52 := [ __n53, __n60 ];
__n0["functionDeclarations"] := __n52;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}