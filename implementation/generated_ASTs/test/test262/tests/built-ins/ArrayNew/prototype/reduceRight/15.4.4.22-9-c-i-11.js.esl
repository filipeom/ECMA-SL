function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "proto";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ObjectExpression";
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 0.;
__n16["raw"] := "0";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 11.;
__n20["raw"] := "11";
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 2.;
__n22["raw"] := "2";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 2.;
__n23["raw"] := "2";
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n14 := [ __n15, __n18, __n21 ];
__n13["properties"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n24 := {  };
__n24["type"] := "VariableDeclaration";
__n26 := {  };
__n26["type"] := "VariableDeclarator";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Con";
__n26["id"] := __n27;
__n28 := {  };
__n28["type"] := "FunctionExpression";
__n28["id"] := null;
__n29 := [  ];
__n28["params"] := __n29;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n31 := [  ];
__n30["body"] := __n31;
__n32 := [  ];
__n30["variableDeclarations"] := __n32;
__n33 := [  ];
__n30["functionDeclarations"] := __n33;
__n30["codeType"] := "function";
__n30["strict"] := false;
__n28["body"] := __n30;
__n28["generator"] := false;
__n28["async"] := false;
__n28["expression"] := false;
__n26["init"] := __n28;
__n25 := [ __n26 ];
__n24["declarations"] := __n25;
__n24["kind"] := "var";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "AssignmentExpression";
__n35["operator"] := "=";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Con";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "prototype";
__n38["raw"] := "\"prototype\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["left"] := __n36;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "proto";
__n35["right"] := __n39;
__n34["expression"] := __n35;
__n40 := {  };
__n40["type"] := "VariableDeclaration";
__n42 := {  };
__n42["type"] := "VariableDeclarator";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "child";
__n42["id"] := __n43;
__n44 := {  };
__n44["type"] := "NewExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Con";
__n44["callee"] := __n45;
__n46 := [  ];
__n44["arguments"] := __n46;
__n42["init"] := __n44;
__n41 := [ __n42 ];
__n40["declarations"] := __n41;
__n40["kind"] := "var";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "AssignmentExpression";
__n48["operator"] := "=";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "child";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "length";
__n51["raw"] := "\"length\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["left"] := __n49;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 3.;
__n52["raw"] := "3";
__n48["right"] := __n52;
__n47["expression"] := __n48;
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Object";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "defineProperty";
__n57["raw"] := "\"defineProperty\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "child";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "1";
__n60["raw"] := "\"1\"";
__n61 := {  };
__n61["type"] := "ObjectExpression";
__n63 := {  };
__n63["type"] := "Property";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "get";
__n63["key"] := __n64;
__n65 := {  };
__n65["type"] := "FunctionExpression";
__n65["id"] := null;
__n66 := [  ];
__n65["params"] := __n66;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ReturnStatement";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "1";
__n70["raw"] := "\"1\"";
__n69["argument"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n71 := [  ];
__n67["variableDeclarations"] := __n71;
__n72 := [  ];
__n67["functionDeclarations"] := __n72;
__n67["codeType"] := "function";
__n67["strict"] := false;
__n65["body"] := __n67;
__n65["generator"] := false;
__n65["async"] := false;
__n65["expression"] := false;
__n63["value"] := __n65;
__n63["computed"] := false;
__n63["kind"] := "init";
__n63["shorthand"] := false;
__n73 := {  };
__n73["type"] := "Property";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "configurable";
__n73["key"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := true;
__n75["raw"] := "true";
__n73["value"] := __n75;
__n73["computed"] := false;
__n73["kind"] := "init";
__n73["shorthand"] := false;
__n62 := [ __n63, __n73 ];
__n61["properties"] := __n62;
__n58 := [ __n59, __n60, __n61 ];
__n54["arguments"] := __n58;
__n53["expression"] := __n54;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "MemberExpression";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "Array";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "prototype";
__n82["raw"] := "\"prototype\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n79["object"] := __n80;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "reduceRight";
__n83["raw"] := "\"reduceRight\"";
__n79["property"] := __n83;
__n79["computed"] := true;
__n78["object"] := __n79;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "call";
__n84["raw"] := "\"call\"";
__n78["property"] := __n84;
__n78["computed"] := true;
__n77["callee"] := __n78;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "child";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "callbackfn";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "initialValue";
__n88["raw"] := "\"initialValue\"";
__n85 := [ __n86, __n87, __n88 ];
__n77["arguments"] := __n85;
__n76["expression"] := __n77;
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "assert";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "testResult";
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "testResult !== true";
__n94["raw"] := "'testResult !== true'";
__n92 := [ __n93, __n94 ];
__n90["arguments"] := __n92;
__n89["expression"] := __n90;
__n1 := [ __n2, __n7, __n9, __n24, __n34, __n40, __n47, __n53, __n76, __n89 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n95 := [ "testResult", "proto", "Con", "child" ];
__n0["variableDeclarations"] := __n95;
__n97 := {  };
__n97["type"] := "FunctionDeclaration";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "callbackfn";
__n97["id"] := __n98;
__n99 := [ "prevVal", "curVal", "idx", "obj" ];
__n97["params"] := __n99;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "IfStatement";
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "===";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "idx";
__n103["left"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 1.;
__n105["raw"] := "1";
__n103["right"] := __n105;
__n102["test"] := __n103;
__n106 := {  };
__n106["type"] := "BlockStatement";
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "AssignmentExpression";
__n109["operator"] := "=";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "testResult";
__n109["left"] := __n110;
__n111 := {  };
__n111["type"] := "BinaryExpression";
__n111["operator"] := "===";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "curVal";
__n111["left"] := __n112;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "1";
__n113["raw"] := "\"1\"";
__n111["right"] := __n113;
__n109["right"] := __n111;
__n108["expression"] := __n109;
__n107 := [ __n108 ];
__n106["body"] := __n107;
__n102["consequent"] := __n106;
__n102["alternate"] := null;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n114 := [  ];
__n100["variableDeclarations"] := __n114;
__n115 := [  ];
__n100["functionDeclarations"] := __n115;
__n100["codeType"] := "function";
__n100["strict"] := false;
__n97["body"] := __n100;
__n97["generator"] := false;
__n97["async"] := false;
__n97["expression"] := false;
__n96 := [ __n97 ];
__n0["functionDeclarations"] := __n96;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}