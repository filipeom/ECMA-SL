function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arg";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "callbackfn";
__n6["expression"] := __n7;
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "fun";
__n10["id"] := __n11;
__n12 := [  ];
__n10["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "AssignmentExpression";
__n16["operator"] := "=";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "arg";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "arguments";
__n16["right"] := __n18;
__n15["expression"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n19 := [  ];
__n13["variableDeclarations"] := __n19;
__n20 := [  ];
__n13["functionDeclarations"] := __n20;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n10["body"] := __n13;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n9["callee"] := __n10;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 1.;
__n22["raw"] := "1";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 2.;
__n23["raw"] := "2";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 3.;
__n24["raw"] := "3";
__n21 := [ __n22, __n23, __n24 ];
__n9["arguments"] := __n21;
__n8["expression"] := __n9;
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "ArrayExpression";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 11.;
__n33["raw"] := "11";
__n32 := [ __n33 ];
__n31["elements"] := __n32;
__n30["object"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "some";
__n34["raw"] := "\"some\"";
__n30["property"] := __n34;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "callbackfn";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "arg";
__n35 := [ __n36, __n37 ];
__n29["arguments"] := __n35;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "[11].some(callbackfn, arg) !== true";
__n38["raw"] := "'[11].some(callbackfn, arg) !== true'";
__n28 := [ __n29, __n38 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n1 := [ __n2, __n6, __n8, __n25 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n39 := [ "arg" ];
__n0["variableDeclarations"] := __n39;
__n41 := {  };
__n41["type"] := "FunctionDeclaration";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "callbackfn";
__n41["id"] := __n42;
__n43 := [ "val", "idx", "obj" ];
__n41["params"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ReturnStatement";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "===";
__n48 := {  };
__n48["type"] := "ThisExpression";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "arg";
__n47["right"] := __n49;
__n46["argument"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n50 := [  ];
__n44["variableDeclarations"] := __n50;
__n51 := [  ];
__n44["functionDeclarations"] := __n51;
__n44["codeType"] := "function";
__n44["strict"] := false;
__n41["body"] := __n44;
__n41["generator"] := false;
__n41["async"] := false;
__n41["expression"] := false;
__n40 := [ __n41 ];
__n0["functionDeclarations"] := __n40;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}