function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callCnt";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arr";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ArrayExpression";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 0.;
__n15["raw"] := "0";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 2.;
__n17["raw"] := "2";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 3.;
__n18["raw"] := "3";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 4.;
__n19["raw"] := "4";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 5.;
__n20["raw"] := "5";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 6.;
__n21["raw"] := "6";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 7.;
__n22["raw"] := "7";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 8.;
__n23["raw"] := "8";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 9.;
__n24["raw"] := "9";
__n14 := [ __n15, __n16, __n17, __n18, __n19, __n20, __n21, __n22, __n23, __n24 ];
__n13["elements"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "AssignmentExpression";
__n26["operator"] := "=";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n27["computed"] := true;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "arr";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "i";
__n29["raw"] := "\"i\"";
__n27["property"] := __n29;
__n26["left"] := __n27;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 10.;
__n30["raw"] := "10";
__n26["right"] := __n30;
__n25["expression"] := __n26;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n33["computed"] := true;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "arr";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := true;
__n35["raw"] := "true";
__n33["property"] := __n35;
__n32["left"] := __n33;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 11.;
__n36["raw"] := "11";
__n32["right"] := __n36;
__n31["expression"] := __n32;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "assert";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "sameValue";
__n41["raw"] := "\"sameValue\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "arr";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "some";
__n46["raw"] := "\"some\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "callbackfn";
__n47 := [ __n48 ];
__n43["arguments"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := false;
__n49["raw"] := "false";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "arr.some(callbackfn)";
__n50["raw"] := "'arr.some(callbackfn)'";
__n42 := [ __n43, __n49, __n50 ];
__n38["arguments"] := __n42;
__n37["expression"] := __n38;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "assert";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "sameValue";
__n55["raw"] := "\"sameValue\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "callCnt";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 10.;
__n58["raw"] := "10";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "callCnt";
__n59["raw"] := "'callCnt'";
__n56 := [ __n57, __n58, __n59 ];
__n52["arguments"] := __n56;
__n51["expression"] := __n52;
__n1 := [ __n2, __n7, __n9, __n25, __n31, __n37, __n51 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n60 := [ "callCnt", "arr" ];
__n0["variableDeclarations"] := __n60;
__n62 := {  };
__n62["type"] := "FunctionDeclaration";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "callbackfn";
__n62["id"] := __n63;
__n64 := [ "val", "idx", "obj" ];
__n62["params"] := __n64;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "UpdateExpression";
__n68["operator"] := "++";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "callCnt";
__n68["argument"] := __n69;
__n68["prefix"] := false;
__n67["expression"] := __n68;
__n70 := {  };
__n70["type"] := "ReturnStatement";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := false;
__n71["raw"] := "false";
__n70["argument"] := __n71;
__n66 := [ __n67, __n70 ];
__n65["body"] := __n66;
__n72 := [  ];
__n65["variableDeclarations"] := __n72;
__n73 := [  ];
__n65["functionDeclarations"] := __n73;
__n65["codeType"] := "function";
__n65["strict"] := false;
__n62["body"] := __n65;
__n62["generator"] := false;
__n62["async"] := false;
__n62["expression"] := false;
__n61 := [ __n62 ];
__n0["functionDeclarations"] := __n61;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}