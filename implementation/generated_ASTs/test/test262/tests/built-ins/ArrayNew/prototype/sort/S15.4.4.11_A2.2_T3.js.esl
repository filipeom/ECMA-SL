function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "valueOf";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ReturnStatement";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n14["argument"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n16 := [  ];
__n12["variableDeclarations"] := __n16;
__n17 := [  ];
__n12["functionDeclarations"] := __n17;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "toString";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "FunctionExpression";
__n20["id"] := null;
__n21 := [  ];
__n20["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ReturnStatement";
__n25 := {  };
__n25["type"] := "UnaryExpression";
__n25["operator"] := "-";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 2.;
__n26["raw"] := "2";
__n25["argument"] := __n26;
__n25["prefix"] := true;
__n24["argument"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n27 := [  ];
__n22["variableDeclarations"] := __n27;
__n28 := [  ];
__n22["functionDeclarations"] := __n28;
__n22["codeType"] := "function";
__n22["strict"] := false;
__n20["body"] := __n22;
__n20["generator"] := false;
__n20["async"] := false;
__n20["expression"] := false;
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n7 := [ __n8, __n18 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "alphabetR";
__n31["id"] := __n32;
__n33 := {  };
__n33["type"] := "ArrayExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "undefined";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 2.;
__n36["raw"] := "2";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 1.;
__n37["raw"] := "1";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "X";
__n38["raw"] := "\"X\"";
__n39 := {  };
__n39["type"] := "UnaryExpression";
__n39["operator"] := "-";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 1.;
__n40["raw"] := "1";
__n39["argument"] := __n40;
__n39["prefix"] := true;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "a";
__n41["raw"] := "\"a\"";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := true;
__n42["raw"] := "true";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "obj";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "NaN";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Infinity";
__n34 := [ __n35, __n36, __n37, __n38, __n39, __n41, __n42, __n43, __n44, __n45 ];
__n33["elements"] := __n34;
__n31["init"] := __n33;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n46 := {  };
__n46["type"] := "VariableDeclaration";
__n48 := {  };
__n48["type"] := "VariableDeclarator";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "alphabet";
__n48["id"] := __n49;
__n50 := {  };
__n50["type"] := "ArrayExpression";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := true;
__n52["raw"] := "true";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "a";
__n53["raw"] := "\"a\"";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "X";
__n54["raw"] := "\"X\"";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "NaN";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Infinity";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 2.;
__n57["raw"] := "2";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 1.;
__n58["raw"] := "1";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "obj";
__n60 := {  };
__n60["type"] := "UnaryExpression";
__n60["operator"] := "-";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 1.;
__n61["raw"] := "1";
__n60["argument"] := __n61;
__n60["prefix"] := true;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "undefined";
__n51 := [ __n52, __n53, __n54, __n55, __n56, __n57, __n58, __n59, __n60, __n62 ];
__n50["elements"] := __n51;
__n48["init"] := __n50;
__n47 := [ __n48 ];
__n46["declarations"] := __n47;
__n46["kind"] := "var";
__n63 := {  };
__n63["type"] := "VariableDeclaration";
__n65 := {  };
__n65["type"] := "VariableDeclarator";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "myComparefn";
__n65["id"] := __n66;
__n67 := {  };
__n67["type"] := "FunctionExpression";
__n67["id"] := null;
__n68 := [ "x", "y" ];
__n67["params"] := __n68;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "VariableDeclaration";
__n73 := {  };
__n73["type"] := "VariableDeclarator";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "xS";
__n73["id"] := __n74;
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "String";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "x";
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n73["init"] := __n75;
__n72 := [ __n73 ];
__n71["declarations"] := __n72;
__n71["kind"] := "var";
__n79 := {  };
__n79["type"] := "VariableDeclaration";
__n81 := {  };
__n81["type"] := "VariableDeclarator";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "yS";
__n81["id"] := __n82;
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "String";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "y";
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n81["init"] := __n83;
__n80 := [ __n81 ];
__n79["declarations"] := __n80;
__n79["kind"] := "var";
__n87 := {  };
__n87["type"] := "IfStatement";
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "<";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "xS";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "yS";
__n88["right"] := __n90;
__n87["test"] := __n88;
__n91 := {  };
__n91["type"] := "ReturnStatement";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 1.;
__n92["raw"] := "1";
__n91["argument"] := __n92;
__n87["consequent"] := __n91;
__n87["alternate"] := null;
__n93 := {  };
__n93["type"] := "IfStatement";
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := ">";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "xS";
__n94["left"] := __n95;
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "yS";
__n94["right"] := __n96;
__n93["test"] := __n94;
__n97 := {  };
__n97["type"] := "ReturnStatement";
__n98 := {  };
__n98["type"] := "UnaryExpression";
__n98["operator"] := "-";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 1.;
__n99["raw"] := "1";
__n98["argument"] := __n99;
__n98["prefix"] := true;
__n97["argument"] := __n98;
__n93["consequent"] := __n97;
__n93["alternate"] := null;
__n100 := {  };
__n100["type"] := "ReturnStatement";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 0.;
__n101["raw"] := "0";
__n100["argument"] := __n101;
__n70 := [ __n71, __n79, __n87, __n93, __n100 ];
__n69["body"] := __n70;
__n102 := [ "xS", "yS" ];
__n69["variableDeclarations"] := __n102;
__n103 := [  ];
__n69["functionDeclarations"] := __n103;
__n69["codeType"] := "function";
__n69["strict"] := false;
__n67["body"] := __n69;
__n67["generator"] := false;
__n67["async"] := false;
__n67["expression"] := false;
__n65["init"] := __n67;
__n64 := [ __n65 ];
__n63["declarations"] := __n64;
__n63["kind"] := "var";
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "MemberExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "alphabetR";
__n106["object"] := __n107;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "sort";
__n108["raw"] := "\"sort\"";
__n106["property"] := __n108;
__n106["computed"] := true;
__n105["callee"] := __n106;
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "myComparefn";
__n109 := [ __n110 ];
__n105["arguments"] := __n109;
__n104["expression"] := __n105;
__n111 := {  };
__n111["type"] := "VariableDeclaration";
__n113 := {  };
__n113["type"] := "VariableDeclarator";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "result";
__n113["id"] := __n114;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := true;
__n115["raw"] := "true";
__n113["init"] := __n115;
__n112 := [ __n113 ];
__n111["declarations"] := __n112;
__n111["kind"] := "var";
__n116 := {  };
__n116["type"] := "ForStatement";
__n117 := {  };
__n117["type"] := "VariableDeclaration";
__n119 := {  };
__n119["type"] := "VariableDeclarator";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "i";
__n119["id"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := 0.;
__n121["raw"] := "0";
__n119["init"] := __n121;
__n118 := [ __n119 ];
__n117["declarations"] := __n118;
__n117["kind"] := "var";
__n116["init"] := __n117;
__n122 := {  };
__n122["type"] := "BinaryExpression";
__n122["operator"] := "<";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "i";
__n122["left"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 10.;
__n124["raw"] := "10";
__n122["right"] := __n124;
__n116["test"] := __n122;
__n125 := {  };
__n125["type"] := "UpdateExpression";
__n125["operator"] := "++";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "i";
__n125["argument"] := __n126;
__n125["prefix"] := false;
__n116["update"] := __n125;
__n127 := {  };
__n127["type"] := "BlockStatement";
__n129 := {  };
__n129["type"] := "IfStatement";
__n130 := {  };
__n130["type"] := "UnaryExpression";
__n130["operator"] := "!";
__n131 := {  };
__n131["type"] := "LogicalExpression";
__n131["operator"] := "&&";
__n132 := {  };
__n132["type"] := "CallExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "isNaN";
__n132["callee"] := __n133;
__n135 := {  };
__n135["type"] := "MemberExpression";
__n135["computed"] := true;
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "alphabetR";
__n135["object"] := __n136;
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "i";
__n135["property"] := __n137;
__n134 := [ __n135 ];
__n132["arguments"] := __n134;
__n131["left"] := __n132;
__n138 := {  };
__n138["type"] := "CallExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "isNaN";
__n138["callee"] := __n139;
__n141 := {  };
__n141["type"] := "MemberExpression";
__n141["computed"] := true;
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "alphabet";
__n141["object"] := __n142;
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "i";
__n141["property"] := __n143;
__n140 := [ __n141 ];
__n138["arguments"] := __n140;
__n131["right"] := __n138;
__n130["argument"] := __n131;
__n130["prefix"] := true;
__n129["test"] := __n130;
__n144 := {  };
__n144["type"] := "BlockStatement";
__n146 := {  };
__n146["type"] := "IfStatement";
__n147 := {  };
__n147["type"] := "BinaryExpression";
__n147["operator"] := "!==";
__n148 := {  };
__n148["type"] := "MemberExpression";
__n148["computed"] := true;
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "alphabetR";
__n148["object"] := __n149;
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "i";
__n148["property"] := __n150;
__n147["left"] := __n148;
__n151 := {  };
__n151["type"] := "MemberExpression";
__n151["computed"] := true;
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "alphabet";
__n151["object"] := __n152;
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "i";
__n151["property"] := __n153;
__n147["right"] := __n151;
__n146["test"] := __n147;
__n154 := {  };
__n154["type"] := "ExpressionStatement";
__n155 := {  };
__n155["type"] := "AssignmentExpression";
__n155["operator"] := "=";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "result";
__n155["left"] := __n156;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := false;
__n157["raw"] := "false";
__n155["right"] := __n157;
__n154["expression"] := __n155;
__n146["consequent"] := __n154;
__n146["alternate"] := null;
__n145 := [ __n146 ];
__n144["body"] := __n145;
__n129["consequent"] := __n144;
__n129["alternate"] := null;
__n128 := [ __n129 ];
__n127["body"] := __n128;
__n116["body"] := __n127;
__n158 := {  };
__n158["type"] := "IfStatement";
__n159 := {  };
__n159["type"] := "BinaryExpression";
__n159["operator"] := "!==";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "result";
__n159["left"] := __n160;
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := true;
__n161["raw"] := "true";
__n159["right"] := __n161;
__n158["test"] := __n159;
__n162 := {  };
__n162["type"] := "BlockStatement";
__n164 := {  };
__n164["type"] := "ThrowStatement";
__n165 := {  };
__n165["type"] := "NewExpression";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "Test262Error";
__n165["callee"] := __n166;
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := "#1: Check ToString operator";
__n168["raw"] := "'#1: Check ToString operator'";
__n167 := [ __n168 ];
__n165["arguments"] := __n167;
__n164["argument"] := __n165;
__n163 := [ __n164 ];
__n162["body"] := __n163;
__n158["consequent"] := __n162;
__n158["alternate"] := null;
__n1 := [ __n2, __n29, __n46, __n63, __n104, __n111, __n116, __n158 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n169 := [ "obj", "alphabetR", "alphabet", "myComparefn", "result", "i" ];
__n0["variableDeclarations"] := __n169;
__n170 := [  ];
__n0["functionDeclarations"] := __n170;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}