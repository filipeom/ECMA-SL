function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "StopSplice";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "traps";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ArrayExpression";
__n9 := [  ];
__n8["elements"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "targetLength";
__n12["id"] := __n13;
__n12["init"] := null;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "array";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "ArrayExpression";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "no-hole";
__n20["raw"] := "\"no-hole\"";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "stop";
__n21["raw"] := "\"stop\"";
__n19 := [ __n20, null, __n21 ];
__n18["elements"] := __n19;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "AssignmentExpression";
__n23["operator"] := "=";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "array";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "constructor";
__n26["raw"] := "\"constructor\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["left"] := __n24;
__n27 := {  };
__n27["type"] := "ObjectExpression";
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Symbol";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "species";
__n32["raw"] := "\"species\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["key"] := __n30;
__n33 := {  };
__n33["type"] := "FunctionExpression";
__n33["id"] := null;
__n34 := [ "n" ];
__n33["params"] := __n34;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "AssignmentExpression";
__n38["operator"] := "=";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "targetLength";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "n";
__n38["right"] := __n40;
__n37["expression"] := __n38;
__n41 := {  };
__n41["type"] := "ReturnStatement";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "target";
__n41["argument"] := __n42;
__n36 := [ __n37, __n41 ];
__n35["body"] := __n36;
__n43 := [  ];
__n35["variableDeclarations"] := __n43;
__n44 := [  ];
__n35["functionDeclarations"] := __n44;
__n35["codeType"] := "function";
__n35["strict"] := false;
__n33["body"] := __n35;
__n33["generator"] := false;
__n33["async"] := false;
__n33["expression"] := false;
__n29["value"] := __n33;
__n29["computed"] := true;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n28 := [ __n29 ];
__n27["properties"] := __n28;
__n23["right"] := __n27;
__n22["expression"] := __n23;
__n45 := {  };
__n45["type"] := "VariableDeclaration";
__n47 := {  };
__n47["type"] := "VariableDeclarator";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "source";
__n47["id"] := __n48;
__n49 := {  };
__n49["type"] := "NewExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "Proxy";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "array";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "allowProxyTraps";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "ObjectExpression";
__n58 := {  };
__n58["type"] := "Property";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "get";
__n58["key"] := __n59;
__n60 := {  };
__n60["type"] := "FunctionExpression";
__n60["id"] := null;
__n61 := [ "t", "pk", "r" ];
__n60["params"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "traps";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "push";
__n68["raw"] := "\"push\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "TemplateLiteral";
__n72 := {  };
__n72["type"] := "TemplateElement";
__n73 := {  };
__n73["raw"] := "source.[[Get]]:";
__n73["cooked"] := "source.[[Get]]:";
__n72["value"] := __n73;
__n72["tail"] := false;
__n74 := {  };
__n74["type"] := "TemplateElement";
__n75 := {  };
__n75["raw"] := "";
__n75["cooked"] := "";
__n74["value"] := __n75;
__n74["tail"] := true;
__n71 := [ __n72, __n74 ];
__n70["quasis"] := __n71;
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "String";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "pk";
__n79 := [ __n80 ];
__n77["arguments"] := __n79;
__n76 := [ __n77 ];
__n70["expressions"] := __n76;
__n69 := [ __n70 ];
__n65["arguments"] := __n69;
__n64["expression"] := __n65;
__n81 := {  };
__n81["type"] := "IfStatement";
__n82 := {  };
__n82["type"] := "BinaryExpression";
__n82["operator"] := "===";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "pk";
__n82["left"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "length";
__n84["raw"] := "\"length\"";
__n82["right"] := __n84;
__n81["test"] := __n82;
__n85 := {  };
__n85["type"] := "ReturnStatement";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "**";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 2.;
__n88["raw"] := "2";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 53.;
__n89["raw"] := "53";
__n87["right"] := __n89;
__n86["left"] := __n87;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 2.;
__n90["raw"] := "2";
__n86["right"] := __n90;
__n85["argument"] := __n86;
__n81["consequent"] := __n85;
__n81["alternate"] := null;
__n91 := {  };
__n91["type"] := "ReturnStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "Reflect";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "get";
__n95["raw"] := "\"get\"";
__n93["property"] := __n95;
__n93["computed"] := true;
__n92["callee"] := __n93;
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "t";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "pk";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "r";
__n96 := [ __n97, __n98, __n99 ];
__n92["arguments"] := __n96;
__n91["argument"] := __n92;
__n63 := [ __n64, __n81, __n91 ];
__n62["body"] := __n63;
__n100 := [  ];
__n62["variableDeclarations"] := __n100;
__n101 := [  ];
__n62["functionDeclarations"] := __n101;
__n62["codeType"] := "function";
__n62["strict"] := false;
__n60["body"] := __n62;
__n60["generator"] := false;
__n60["async"] := false;
__n60["expression"] := false;
__n58["value"] := __n60;
__n58["computed"] := false;
__n58["kind"] := "init";
__n58["shorthand"] := false;
__n102 := {  };
__n102["type"] := "Property";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "has";
__n102["key"] := __n103;
__n104 := {  };
__n104["type"] := "FunctionExpression";
__n104["id"] := null;
__n105 := [ "t", "pk", "r" ];
__n104["params"] := __n105;
__n106 := {  };
__n106["type"] := "BlockStatement";
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "MemberExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "traps";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "push";
__n112["raw"] := "\"push\"";
__n110["property"] := __n112;
__n110["computed"] := true;
__n109["callee"] := __n110;
__n114 := {  };
__n114["type"] := "TemplateLiteral";
__n116 := {  };
__n116["type"] := "TemplateElement";
__n117 := {  };
__n117["raw"] := "source.[[Has]]:";
__n117["cooked"] := "source.[[Has]]:";
__n116["value"] := __n117;
__n116["tail"] := false;
__n118 := {  };
__n118["type"] := "TemplateElement";
__n119 := {  };
__n119["raw"] := "";
__n119["cooked"] := "";
__n118["value"] := __n119;
__n118["tail"] := true;
__n115 := [ __n116, __n118 ];
__n114["quasis"] := __n115;
__n121 := {  };
__n121["type"] := "CallExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "String";
__n121["callee"] := __n122;
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "pk";
__n123 := [ __n124 ];
__n121["arguments"] := __n123;
__n120 := [ __n121 ];
__n114["expressions"] := __n120;
__n113 := [ __n114 ];
__n109["arguments"] := __n113;
__n108["expression"] := __n109;
__n125 := {  };
__n125["type"] := "ReturnStatement";
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "MemberExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "Reflect";
__n127["object"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "get";
__n129["raw"] := "\"get\"";
__n127["property"] := __n129;
__n127["computed"] := true;
__n126["callee"] := __n127;
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "t";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "pk";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "r";
__n130 := [ __n131, __n132, __n133 ];
__n126["arguments"] := __n130;
__n125["argument"] := __n126;
__n107 := [ __n108, __n125 ];
__n106["body"] := __n107;
__n134 := [  ];
__n106["variableDeclarations"] := __n134;
__n135 := [  ];
__n106["functionDeclarations"] := __n135;
__n106["codeType"] := "function";
__n106["strict"] := false;
__n104["body"] := __n106;
__n104["generator"] := false;
__n104["async"] := false;
__n104["expression"] := false;
__n102["value"] := __n104;
__n102["computed"] := false;
__n102["kind"] := "init";
__n102["shorthand"] := false;
__n57 := [ __n58, __n102 ];
__n56["properties"] := __n57;
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n51 := [ __n52, __n53 ];
__n49["arguments"] := __n51;
__n47["init"] := __n49;
__n46 := [ __n47 ];
__n45["declarations"] := __n46;
__n45["kind"] := "var";
__n136 := {  };
__n136["type"] := "VariableDeclaration";
__n138 := {  };
__n138["type"] := "VariableDeclarator";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "target";
__n138["id"] := __n139;
__n140 := {  };
__n140["type"] := "NewExpression";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "Proxy";
__n140["callee"] := __n141;
__n143 := {  };
__n143["type"] := "ArrayExpression";
__n144 := [  ];
__n143["elements"] := __n144;
__n145 := {  };
__n145["type"] := "CallExpression";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "allowProxyTraps";
__n145["callee"] := __n146;
__n148 := {  };
__n148["type"] := "ObjectExpression";
__n150 := {  };
__n150["type"] := "Property";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "defineProperty";
__n150["key"] := __n151;
__n152 := {  };
__n152["type"] := "FunctionExpression";
__n152["id"] := null;
__n153 := [ "t", "pk", "desc" ];
__n152["params"] := __n153;
__n154 := {  };
__n154["type"] := "BlockStatement";
__n156 := {  };
__n156["type"] := "ExpressionStatement";
__n157 := {  };
__n157["type"] := "CallExpression";
__n158 := {  };
__n158["type"] := "MemberExpression";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "traps";
__n158["object"] := __n159;
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := "push";
__n160["raw"] := "\"push\"";
__n158["property"] := __n160;
__n158["computed"] := true;
__n157["callee"] := __n158;
__n162 := {  };
__n162["type"] := "TemplateLiteral";
__n164 := {  };
__n164["type"] := "TemplateElement";
__n165 := {  };
__n165["raw"] := "target.[[DefineProperty]]:";
__n165["cooked"] := "target.[[DefineProperty]]:";
__n164["value"] := __n165;
__n164["tail"] := false;
__n166 := {  };
__n166["type"] := "TemplateElement";
__n167 := {  };
__n167["raw"] := "";
__n167["cooked"] := "";
__n166["value"] := __n167;
__n166["tail"] := true;
__n163 := [ __n164, __n166 ];
__n162["quasis"] := __n163;
__n169 := {  };
__n169["type"] := "CallExpression";
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "String";
__n169["callee"] := __n170;
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "pk";
__n171 := [ __n172 ];
__n169["arguments"] := __n171;
__n168 := [ __n169 ];
__n162["expressions"] := __n168;
__n161 := [ __n162 ];
__n157["arguments"] := __n161;
__n156["expression"] := __n157;
__n173 := {  };
__n173["type"] := "IfStatement";
__n174 := {  };
__n174["type"] := "LogicalExpression";
__n174["operator"] := "||";
__n175 := {  };
__n175["type"] := "BinaryExpression";
__n175["operator"] := "===";
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "pk";
__n175["left"] := __n176;
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "0";
__n177["raw"] := "\"0\"";
__n175["right"] := __n177;
__n174["left"] := __n175;
__n178 := {  };
__n178["type"] := "BinaryExpression";
__n178["operator"] := "===";
__n179 := {  };
__n179["type"] := "Identifier";
__n179["name"] := "pk";
__n178["left"] := __n179;
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := "1";
__n180["raw"] := "\"1\"";
__n178["right"] := __n180;
__n174["right"] := __n178;
__n173["test"] := __n174;
__n181 := {  };
__n181["type"] := "ReturnStatement";
__n182 := {  };
__n182["type"] := "CallExpression";
__n183 := {  };
__n183["type"] := "MemberExpression";
__n184 := {  };
__n184["type"] := "Identifier";
__n184["name"] := "Reflect";
__n183["object"] := __n184;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "defineProperty";
__n185["raw"] := "\"defineProperty\"";
__n183["property"] := __n185;
__n183["computed"] := true;
__n182["callee"] := __n183;
__n187 := {  };
__n187["type"] := "Identifier";
__n187["name"] := "t";
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "pk";
__n189 := {  };
__n189["type"] := "Identifier";
__n189["name"] := "desc";
__n186 := [ __n187, __n188, __n189 ];
__n182["arguments"] := __n186;
__n181["argument"] := __n182;
__n173["consequent"] := __n181;
__n173["alternate"] := null;
__n190 := {  };
__n190["type"] := "ThrowStatement";
__n191 := {  };
__n191["type"] := "NewExpression";
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "StopSplice";
__n191["callee"] := __n192;
__n193 := [  ];
__n191["arguments"] := __n193;
__n190["argument"] := __n191;
__n155 := [ __n156, __n173, __n190 ];
__n154["body"] := __n155;
__n194 := [  ];
__n154["variableDeclarations"] := __n194;
__n195 := [  ];
__n154["functionDeclarations"] := __n195;
__n154["codeType"] := "function";
__n154["strict"] := false;
__n152["body"] := __n154;
__n152["generator"] := false;
__n152["async"] := false;
__n152["expression"] := false;
__n150["value"] := __n152;
__n150["computed"] := false;
__n150["kind"] := "init";
__n150["shorthand"] := false;
__n149 := [ __n150 ];
__n148["properties"] := __n149;
__n147 := [ __n148 ];
__n145["arguments"] := __n147;
__n142 := [ __n143, __n145 ];
__n140["arguments"] := __n142;
__n138["init"] := __n140;
__n137 := [ __n138 ];
__n136["declarations"] := __n137;
__n136["kind"] := "var";
__n196 := {  };
__n196["type"] := "ExpressionStatement";
__n197 := {  };
__n197["type"] := "CallExpression";
__n198 := {  };
__n198["type"] := "MemberExpression";
__n199 := {  };
__n199["type"] := "Identifier";
__n199["name"] := "assert";
__n198["object"] := __n199;
__n200 := {  };
__n200["type"] := "Literal";
__n200["value"] := "throws";
__n200["raw"] := "\"throws\"";
__n198["property"] := __n200;
__n198["computed"] := true;
__n197["callee"] := __n198;
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "StopSplice";
__n203 := {  };
__n203["type"] := "FunctionExpression";
__n203["id"] := null;
__n204 := [  ];
__n203["params"] := __n204;
__n205 := {  };
__n205["type"] := "BlockStatement";
__n207 := {  };
__n207["type"] := "ExpressionStatement";
__n208 := {  };
__n208["type"] := "CallExpression";
__n209 := {  };
__n209["type"] := "MemberExpression";
__n210 := {  };
__n210["type"] := "MemberExpression";
__n211 := {  };
__n211["type"] := "MemberExpression";
__n212 := {  };
__n212["type"] := "Identifier";
__n212["name"] := "Array";
__n211["object"] := __n212;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := "prototype";
__n213["raw"] := "\"prototype\"";
__n211["property"] := __n213;
__n211["computed"] := true;
__n210["object"] := __n211;
__n214 := {  };
__n214["type"] := "Literal";
__n214["value"] := "splice";
__n214["raw"] := "\"splice\"";
__n210["property"] := __n214;
__n210["computed"] := true;
__n209["object"] := __n210;
__n215 := {  };
__n215["type"] := "Literal";
__n215["value"] := "call";
__n215["raw"] := "\"call\"";
__n209["property"] := __n215;
__n209["computed"] := true;
__n208["callee"] := __n209;
__n217 := {  };
__n217["type"] := "Identifier";
__n217["name"] := "source";
__n218 := {  };
__n218["type"] := "Literal";
__n218["value"] := 0.;
__n218["raw"] := "0";
__n219 := {  };
__n219["type"] := "BinaryExpression";
__n219["operator"] := "+";
__n220 := {  };
__n220["type"] := "BinaryExpression";
__n220["operator"] := "**";
__n221 := {  };
__n221["type"] := "Literal";
__n221["value"] := 2.;
__n221["raw"] := "2";
__n220["left"] := __n221;
__n222 := {  };
__n222["type"] := "Literal";
__n222["value"] := 53.;
__n222["raw"] := "53";
__n220["right"] := __n222;
__n219["left"] := __n220;
__n223 := {  };
__n223["type"] := "Literal";
__n223["value"] := 4.;
__n223["raw"] := "4";
__n219["right"] := __n223;
__n216 := [ __n217, __n218, __n219 ];
__n208["arguments"] := __n216;
__n207["expression"] := __n208;
__n206 := [ __n207 ];
__n205["body"] := __n206;
__n224 := [  ];
__n205["variableDeclarations"] := __n224;
__n225 := [  ];
__n205["functionDeclarations"] := __n225;
__n205["codeType"] := "function";
__n205["strict"] := false;
__n203["body"] := __n205;
__n203["generator"] := false;
__n203["async"] := false;
__n203["expression"] := false;
__n226 := {  };
__n226["type"] := "Literal";
__n226["value"] := "// deleteCount argument exceeding 2^53-1. Array.prototype.splice.call(source, 0, 2 ** 53 + 4) throws a StopSplice exception";
__n226["raw"] := "'// deleteCount argument exceeding 2^53-1. Array.prototype.splice.call(source, 0, 2 ** 53 + 4) throws a StopSplice exception'";
__n201 := [ __n202, __n203, __n226 ];
__n197["arguments"] := __n201;
__n196["expression"] := __n197;
__n227 := {  };
__n227["type"] := "ExpressionStatement";
__n228 := {  };
__n228["type"] := "CallExpression";
__n229 := {  };
__n229["type"] := "MemberExpression";
__n230 := {  };
__n230["type"] := "Identifier";
__n230["name"] := "assert";
__n229["object"] := __n230;
__n231 := {  };
__n231["type"] := "Literal";
__n231["value"] := "sameValue";
__n231["raw"] := "\"sameValue\"";
__n229["property"] := __n231;
__n229["computed"] := true;
__n228["callee"] := __n229;
__n233 := {  };
__n233["type"] := "Identifier";
__n233["name"] := "targetLength";
__n234 := {  };
__n234["type"] := "BinaryExpression";
__n234["operator"] := "-";
__n235 := {  };
__n235["type"] := "BinaryExpression";
__n235["operator"] := "**";
__n236 := {  };
__n236["type"] := "Literal";
__n236["value"] := 2.;
__n236["raw"] := "2";
__n235["left"] := __n236;
__n237 := {  };
__n237["type"] := "Literal";
__n237["value"] := 53.;
__n237["raw"] := "53";
__n235["right"] := __n237;
__n234["left"] := __n235;
__n238 := {  };
__n238["type"] := "Literal";
__n238["value"] := 1.;
__n238["raw"] := "1";
__n234["right"] := __n238;
__n239 := {  };
__n239["type"] := "Literal";
__n239["value"] := "The value of targetLength is expected to be 2 ** 53 - 1";
__n239["raw"] := "'The value of targetLength is expected to be 2 ** 53 - 1'";
__n232 := [ __n233, __n234, __n239 ];
__n228["arguments"] := __n232;
__n227["expression"] := __n228;
__n240 := {  };
__n240["type"] := "ExpressionStatement";
__n241 := {  };
__n241["type"] := "CallExpression";
__n242 := {  };
__n242["type"] := "MemberExpression";
__n243 := {  };
__n243["type"] := "Identifier";
__n243["name"] := "assert";
__n242["object"] := __n243;
__n244 := {  };
__n244["type"] := "Literal";
__n244["value"] := "compareArray";
__n244["raw"] := "\"compareArray\"";
__n242["property"] := __n244;
__n242["computed"] := true;
__n241["callee"] := __n242;
__n246 := {  };
__n246["type"] := "Identifier";
__n246["name"] := "traps";
__n247 := {  };
__n247["type"] := "ArrayExpression";
__n249 := {  };
__n249["type"] := "Literal";
__n249["value"] := "source.[[Get]]:length";
__n249["raw"] := "\"source.[[Get]]:length\"";
__n250 := {  };
__n250["type"] := "Literal";
__n250["value"] := "source.[[Get]]:constructor";
__n250["raw"] := "\"source.[[Get]]:constructor\"";
__n251 := {  };
__n251["type"] := "Literal";
__n251["value"] := "source.[[Has]]:0";
__n251["raw"] := "\"source.[[Has]]:0\"";
__n252 := {  };
__n252["type"] := "Literal";
__n252["value"] := "source.[[Get]]:0";
__n252["raw"] := "\"source.[[Get]]:0\"";
__n253 := {  };
__n253["type"] := "Literal";
__n253["value"] := "target.[[DefineProperty]]:0";
__n253["raw"] := "\"target.[[DefineProperty]]:0\"";
__n254 := {  };
__n254["type"] := "Literal";
__n254["value"] := "source.[[Has]]:1";
__n254["raw"] := "\"source.[[Has]]:1\"";
__n255 := {  };
__n255["type"] := "Literal";
__n255["value"] := "source.[[Has]]:2";
__n255["raw"] := "\"source.[[Has]]:2\"";
__n256 := {  };
__n256["type"] := "Literal";
__n256["value"] := "source.[[Get]]:2";
__n256["raw"] := "\"source.[[Get]]:2\"";
__n257 := {  };
__n257["type"] := "Literal";
__n257["value"] := "target.[[DefineProperty]]:2";
__n257["raw"] := "\"target.[[DefineProperty]]:2\"";
__n248 := [ __n249, __n250, __n251, __n252, __n253, __n254, __n255, __n256, __n257 ];
__n247["elements"] := __n248;
__n258 := {  };
__n258["type"] := "Literal";
__n258["value"] := "The value of traps is expected to be [
  \"source.[[Get]]:length\",

  \"source.[[Get]]:constructor\",

  \"source.[[Has]]:0\",
  \"source.[[Get]]:0\",
  \"target.[[DefineProperty]]:0\",

  \"source.[[Has]]:1\",

  \"source.[[Has]]:2\",
  \"source.[[Get]]:2\",
  \"target.[[DefineProperty]]:2\",
]";
__n258["raw"] := "'The value of traps is expected to be [\\n  \"source.[[Get]]:length\",\\n\\n  \"source.[[Get]]:constructor\",\\n\\n  \"source.[[Has]]:0\",\\n  \"source.[[Get]]:0\",\\n  \"target.[[DefineProperty]]:0\",\\n\\n  \"source.[[Has]]:1\",\\n\\n  \"source.[[Has]]:2\",\\n  \"source.[[Get]]:2\",\\n  \"target.[[DefineProperty]]:2\",\\n]'";
__n245 := [ __n246, __n247, __n258 ];
__n241["arguments"] := __n245;
__n240["expression"] := __n241;
__n1 := [ __n2, __n4, __n10, __n14, __n22, __n45, __n136, __n196, __n227, __n240 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n259 := [ "traps", "targetLength", "array", "source", "target" ];
__n0["variableDeclarations"] := __n259;
__n261 := {  };
__n261["type"] := "FunctionDeclaration";
__n262 := {  };
__n262["type"] := "Identifier";
__n262["name"] := "StopSplice";
__n261["id"] := __n262;
__n263 := [  ];
__n261["params"] := __n263;
__n264 := {  };
__n264["type"] := "BlockStatement";
__n265 := [  ];
__n264["body"] := __n265;
__n266 := [  ];
__n264["variableDeclarations"] := __n266;
__n267 := [  ];
__n264["functionDeclarations"] := __n267;
__n264["codeType"] := "function";
__n264["strict"] := false;
__n261["body"] := __n264;
__n261["generator"] := false;
__n261["async"] := false;
__n261["expression"] := false;
__n260 := [ __n261 ];
__n0["functionDeclarations"] := __n260;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}