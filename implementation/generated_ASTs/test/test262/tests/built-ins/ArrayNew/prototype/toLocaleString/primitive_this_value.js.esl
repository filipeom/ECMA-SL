function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := "use strict";
__n3["raw"] := "\"use strict\"";
__n2["expression"] := __n3;
__n2["directive"] := "use strict";
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "listSeparator";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "ArrayExpression";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "";
__n12["raw"] := "\"\"";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "";
__n13["raw"] := "\"\"";
__n11 := [ __n12, __n13 ];
__n10["elements"] := __n11;
__n9["object"] := __n10;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "toLocaleString";
__n14["raw"] := "\"toLocaleString\"";
__n9["property"] := __n14;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n15 := [  ];
__n8["arguments"] := __n15;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "AssignmentExpression";
__n17["operator"] := "=";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Boolean";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "prototype";
__n21["raw"] := "\"prototype\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["object"] := __n19;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "toString";
__n22["raw"] := "\"toString\"";
__n18["property"] := __n22;
__n18["computed"] := true;
__n17["left"] := __n18;
__n23 := {  };
__n23["type"] := "FunctionExpression";
__n23["id"] := null;
__n24 := [  ];
__n23["params"] := __n24;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ReturnStatement";
__n28 := {  };
__n28["type"] := "UnaryExpression";
__n28["operator"] := "typeof";
__n29 := {  };
__n29["type"] := "ThisExpression";
__n28["argument"] := __n29;
__n28["prefix"] := true;
__n27["argument"] := __n28;
__n26 := [ __n27 ];
__n25["body"] := __n26;
__n30 := [  ];
__n25["variableDeclarations"] := __n30;
__n31 := [  ];
__n25["functionDeclarations"] := __n31;
__n25["codeType"] := "function";
__n25["strict"] := false;
__n23["body"] := __n25;
__n23["generator"] := false;
__n23["async"] := false;
__n23["expression"] := false;
__n17["right"] := __n23;
__n16["expression"] := __n17;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "assert";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "sameValue";
__n36["raw"] := "\"sameValue\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "ArrayExpression";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := true;
__n42["raw"] := "true";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := false;
__n43["raw"] := "false";
__n41 := [ __n42, __n43 ];
__n40["elements"] := __n41;
__n39["object"] := __n40;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "toLocaleString";
__n44["raw"] := "\"toLocaleString\"";
__n39["property"] := __n44;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n45 := [  ];
__n38["arguments"] := __n45;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "+";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "+";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "boolean";
__n48["raw"] := "\"boolean\"";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "listSeparator";
__n47["right"] := __n49;
__n46["left"] := __n47;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "boolean";
__n50["raw"] := "\"boolean\"";
__n46["right"] := __n50;
__n37 := [ __n38, __n46 ];
__n33["arguments"] := __n37;
__n32["expression"] := __n33;
__n1 := [ __n2, __n4, __n16, __n32 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n51 := [ "listSeparator" ];
__n0["variableDeclarations"] := __n51;
__n52 := [  ];
__n0["functionDeclarations"] := __n52;
__n0["codeType"] := "global";
__n0["strict"] := true;
return ( false, __n0 )
}