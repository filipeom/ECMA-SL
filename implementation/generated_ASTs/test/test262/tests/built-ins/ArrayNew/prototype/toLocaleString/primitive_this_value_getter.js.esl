function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := "use strict";
__n3["raw"] := "\"use strict\"";
__n2["expression"] := __n3;
__n2["directive"] := "use strict";
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "listSeparator";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "ArrayExpression";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "";
__n12["raw"] := "\"\"";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "";
__n13["raw"] := "\"\"";
__n11 := [ __n12, __n13 ];
__n10["elements"] := __n11;
__n9["object"] := __n10;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "toLocaleString";
__n14["raw"] := "\"toLocaleString\"";
__n9["property"] := __n14;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n15 := [  ];
__n8["arguments"] := __n15;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Object";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "defineProperty";
__n20["raw"] := "\"defineProperty\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Boolean";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "prototype";
__n24["raw"] := "\"prototype\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "toString";
__n25["raw"] := "\"toString\"";
__n26 := {  };
__n26["type"] := "ObjectExpression";
__n28 := {  };
__n28["type"] := "Property";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "get";
__n28["key"] := __n29;
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [  ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "VariableDeclaration";
__n36 := {  };
__n36["type"] := "VariableDeclarator";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "v";
__n36["id"] := __n37;
__n38 := {  };
__n38["type"] := "UnaryExpression";
__n38["operator"] := "typeof";
__n39 := {  };
__n39["type"] := "ThisExpression";
__n38["argument"] := __n39;
__n38["prefix"] := true;
__n36["init"] := __n38;
__n35 := [ __n36 ];
__n34["declarations"] := __n35;
__n34["kind"] := "var";
__n40 := {  };
__n40["type"] := "ReturnStatement";
__n41 := {  };
__n41["type"] := "FunctionExpression";
__n41["id"] := null;
__n42 := [  ];
__n41["params"] := __n42;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ReturnStatement";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "v";
__n45["argument"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n47 := [  ];
__n43["variableDeclarations"] := __n47;
__n48 := [  ];
__n43["functionDeclarations"] := __n48;
__n43["codeType"] := "function";
__n43["strict"] := false;
__n41["body"] := __n43;
__n41["generator"] := false;
__n41["async"] := false;
__n41["expression"] := false;
__n40["argument"] := __n41;
__n33 := [ __n34, __n40 ];
__n32["body"] := __n33;
__n49 := [ "v" ];
__n32["variableDeclarations"] := __n49;
__n50 := [  ];
__n32["functionDeclarations"] := __n50;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["async"] := false;
__n30["expression"] := false;
__n28["value"] := __n30;
__n28["computed"] := false;
__n28["kind"] := "init";
__n28["shorthand"] := false;
__n27 := [ __n28 ];
__n26["properties"] := __n27;
__n21 := [ __n22, __n25, __n26 ];
__n17["arguments"] := __n21;
__n16["expression"] := __n17;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "assert";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "sameValue";
__n55["raw"] := "\"sameValue\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "ArrayExpression";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := true;
__n61["raw"] := "true";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := false;
__n62["raw"] := "false";
__n60 := [ __n61, __n62 ];
__n59["elements"] := __n60;
__n58["object"] := __n59;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "toLocaleString";
__n63["raw"] := "\"toLocaleString\"";
__n58["property"] := __n63;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n64 := [  ];
__n57["arguments"] := __n64;
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "+";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "+";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "boolean";
__n67["raw"] := "\"boolean\"";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "listSeparator";
__n66["right"] := __n68;
__n65["left"] := __n66;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "boolean";
__n69["raw"] := "\"boolean\"";
__n65["right"] := __n69;
__n56 := [ __n57, __n65 ];
__n52["arguments"] := __n56;
__n51["expression"] := __n52;
__n1 := [ __n2, __n4, __n16, __n51 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n70 := [ "listSeparator" ];
__n0["variableDeclarations"] := __n70;
__n71 := [  ];
__n0["functionDeclarations"] := __n71;
__n0["codeType"] := "global";
__n0["strict"] := true;
return ( false, __n0 )
}