function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Array";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "IfStatement";
__n10 := {  };
__n10["type"] := "BinaryExpression";
__n10["operator"] := "!==";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "x";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "toString";
__n14["raw"] := "\"toString\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n15 := [  ];
__n11["arguments"] := __n15;
__n10["left"] := __n11;
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "x";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "join";
__n19["raw"] := "\"join\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n20 := [  ];
__n16["arguments"] := __n20;
__n10["right"] := __n16;
__n9["test"] := __n10;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ThrowStatement";
__n24 := {  };
__n24["type"] := "NewExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Test262Error";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "+";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "#1.1: x = new Array(); x.toString() === x.join(). Actual: ";
__n28["raw"] := "'#1.1: x = new Array(); x.toString() === x.join(). Actual: '";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "x";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "toString";
__n32["raw"] := "\"toString\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n33 := [  ];
__n29["arguments"] := __n33;
__n27["right"] := __n29;
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["argument"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n9["consequent"] := __n21;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "IfStatement";
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "!==";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "x";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "toString";
__n41["raw"] := "\"toString\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n42 := [  ];
__n38["arguments"] := __n42;
__n37["left"] := __n38;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "";
__n43["raw"] := "\"\"";
__n37["right"] := __n43;
__n36["test"] := __n37;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ThrowStatement";
__n47 := {  };
__n47["type"] := "NewExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "Test262Error";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "+";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "#1.2: x = new Array(); x.toString() === \"\". Actual: ";
__n51["raw"] := "'#1.2: x = new Array(); x.toString() === \"\". Actual: '";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "x";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "toString";
__n55["raw"] := "\"toString\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n56 := [  ];
__n52["arguments"] := __n56;
__n50["right"] := __n52;
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["argument"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n36["consequent"] := __n44;
__n36["alternate"] := null;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n9["alternate"] := __n34;
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "AssignmentExpression";
__n58["operator"] := "=";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "x";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "ArrayExpression";
__n61 := [  ];
__n60["elements"] := __n61;
__n58["right"] := __n60;
__n57["expression"] := __n58;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "AssignmentExpression";
__n63["operator"] := "=";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n64["computed"] := true;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "x";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 0.;
__n66["raw"] := "0";
__n64["property"] := __n66;
__n63["left"] := __n64;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 1.;
__n67["raw"] := "1";
__n63["right"] := __n67;
__n62["expression"] := __n63;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "AssignmentExpression";
__n69["operator"] := "=";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "x";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "length";
__n72["raw"] := "\"length\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n69["left"] := __n70;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 0.;
__n73["raw"] := "0";
__n69["right"] := __n73;
__n68["expression"] := __n69;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "!==";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "x";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "toString";
__n79["raw"] := "\"toString\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n76["callee"] := __n77;
__n80 := [  ];
__n76["arguments"] := __n80;
__n75["left"] := __n76;
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "MemberExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "x";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "join";
__n84["raw"] := "\"join\"";
__n82["property"] := __n84;
__n82["computed"] := true;
__n81["callee"] := __n82;
__n85 := [  ];
__n81["arguments"] := __n85;
__n75["right"] := __n81;
__n74["test"] := __n75;
__n86 := {  };
__n86["type"] := "BlockStatement";
__n88 := {  };
__n88["type"] := "ThrowStatement";
__n89 := {  };
__n89["type"] := "NewExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "Test262Error";
__n89["callee"] := __n90;
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "+";
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "#2.1: x = []; x[0] = 1; x.length = 0; x.toString() === x.join(). Actual: ";
__n93["raw"] := "'#2.1: x = []; x[0] = 1; x.length = 0; x.toString() === x.join(). Actual: '";
__n92["left"] := __n93;
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "x";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "toString";
__n97["raw"] := "\"toString\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["callee"] := __n95;
__n98 := [  ];
__n94["arguments"] := __n98;
__n92["right"] := __n94;
__n91 := [ __n92 ];
__n89["arguments"] := __n91;
__n88["argument"] := __n89;
__n87 := [ __n88 ];
__n86["body"] := __n87;
__n74["consequent"] := __n86;
__n99 := {  };
__n99["type"] := "BlockStatement";
__n101 := {  };
__n101["type"] := "IfStatement";
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "!==";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "x";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "toString";
__n106["raw"] := "\"toString\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n103["callee"] := __n104;
__n107 := [  ];
__n103["arguments"] := __n107;
__n102["left"] := __n103;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "";
__n108["raw"] := "\"\"";
__n102["right"] := __n108;
__n101["test"] := __n102;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "ThrowStatement";
__n112 := {  };
__n112["type"] := "NewExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "Test262Error";
__n112["callee"] := __n113;
__n115 := {  };
__n115["type"] := "BinaryExpression";
__n115["operator"] := "+";
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "#2.2: x = []; x[0] = 1; x.length = 0; x.toString() === \"\". Actual: ";
__n116["raw"] := "'#2.2: x = []; x[0] = 1; x.length = 0; x.toString() === \"\". Actual: '";
__n115["left"] := __n116;
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "MemberExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "x";
__n118["object"] := __n119;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "toString";
__n120["raw"] := "\"toString\"";
__n118["property"] := __n120;
__n118["computed"] := true;
__n117["callee"] := __n118;
__n121 := [  ];
__n117["arguments"] := __n121;
__n115["right"] := __n117;
__n114 := [ __n115 ];
__n112["arguments"] := __n114;
__n111["argument"] := __n112;
__n110 := [ __n111 ];
__n109["body"] := __n110;
__n101["consequent"] := __n109;
__n101["alternate"] := null;
__n100 := [ __n101 ];
__n99["body"] := __n100;
__n74["alternate"] := __n99;
__n1 := [ __n2, __n9, __n57, __n62, __n68, __n74 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n122 := [ "x" ];
__n0["variableDeclarations"] := __n122;
__n123 := [  ];
__n0["functionDeclarations"] := __n123;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}