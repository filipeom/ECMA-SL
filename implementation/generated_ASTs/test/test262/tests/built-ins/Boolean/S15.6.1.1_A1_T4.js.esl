function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "UnaryExpression";
__n4["operator"] := "typeof";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Boolean";
__n5["callee"] := __n6;
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "undefined";
__n7 := [ __n8 ];
__n5["arguments"] := __n7;
__n4["argument"] := __n5;
__n4["prefix"] := true;
__n3["left"] := __n4;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "boolean";
__n9["raw"] := "\"boolean\"";
__n3["right"] := __n9;
__n2["test"] := __n3;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "$ERROR";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "+";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1.1: typeof Boolean(undefined) should be \"boolean\", actual is \"";
__n18["raw"] := "'#1.1: typeof Boolean(undefined) should be \"boolean\", actual is \"'";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "UnaryExpression";
__n19["operator"] := "typeof";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "Boolean";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "undefined";
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n19["argument"] := __n20;
__n19["prefix"] := true;
__n17["right"] := __n19;
__n16["left"] := __n17;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "\"";
__n24["raw"] := "'\"'";
__n16["right"] := __n24;
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["expression"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n2["consequent"] := __n10;
__n2["alternate"] := null;
__n25 := {  };
__n25["type"] := "IfStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "!==";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Boolean";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "undefined";
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["left"] := __n27;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := false;
__n31["raw"] := "false";
__n26["right"] := __n31;
__n25["test"] := __n26;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "$ERROR";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "#1.2: Boolean(undefined) should be false";
__n38["raw"] := "'#1.2: Boolean(undefined) should be false'";
__n37 := [ __n38 ];
__n35["arguments"] := __n37;
__n34["expression"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n25["consequent"] := __n32;
__n25["alternate"] := null;
__n39 := {  };
__n39["type"] := "IfStatement";
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "!==";
__n41 := {  };
__n41["type"] := "UnaryExpression";
__n41["operator"] := "typeof";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Boolean";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "UnaryExpression";
__n45["operator"] := "void";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 0.;
__n46["raw"] := "0";
__n45["argument"] := __n46;
__n45["prefix"] := true;
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n41["argument"] := __n42;
__n41["prefix"] := true;
__n40["left"] := __n41;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "boolean";
__n47["raw"] := "\"boolean\"";
__n40["right"] := __n47;
__n39["test"] := __n40;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "$ERROR";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "+";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "+";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "#2.1: typeof Boolean(void 0) should be \"boolean\", actual is \"";
__n56["raw"] := "'#2.1: typeof Boolean(void 0) should be \"boolean\", actual is \"'";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "UnaryExpression";
__n57["operator"] := "typeof";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Boolean";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "UnaryExpression";
__n61["operator"] := "void";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 0.;
__n62["raw"] := "0";
__n61["argument"] := __n62;
__n61["prefix"] := true;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["argument"] := __n58;
__n57["prefix"] := true;
__n55["right"] := __n57;
__n54["left"] := __n55;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "\"";
__n63["raw"] := "'\"'";
__n54["right"] := __n63;
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n39["consequent"] := __n48;
__n39["alternate"] := null;
__n64 := {  };
__n64["type"] := "IfStatement";
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "!==";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "Boolean";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "UnaryExpression";
__n69["operator"] := "void";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 0.;
__n70["raw"] := "0";
__n69["argument"] := __n70;
__n69["prefix"] := true;
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["left"] := __n66;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := false;
__n71["raw"] := "false";
__n65["right"] := __n71;
__n64["test"] := __n65;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "$ERROR";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "#2.2: Boolean(void 0) should be false";
__n78["raw"] := "'#2.2: Boolean(void 0) should be false'";
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n64["consequent"] := __n72;
__n64["alternate"] := null;
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!==";
__n81 := {  };
__n81["type"] := "UnaryExpression";
__n81["operator"] := "typeof";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "Boolean";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "FunctionExpression";
__n86["id"] := null;
__n87 := [  ];
__n86["params"] := __n87;
__n88 := {  };
__n88["type"] := "BlockStatement";
__n89 := [  ];
__n88["body"] := __n89;
__n90 := [  ];
__n88["variableDeclarations"] := __n90;
__n91 := [  ];
__n88["functionDeclarations"] := __n91;
__n88["codeType"] := "function";
__n88["strict"] := false;
__n86["body"] := __n88;
__n86["generator"] := false;
__n86["expression"] := false;
__n86["async"] := false;
__n85["callee"] := __n86;
__n92 := [  ];
__n85["arguments"] := __n92;
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["argument"] := __n82;
__n81["prefix"] := true;
__n80["left"] := __n81;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "boolean";
__n93["raw"] := "\"boolean\"";
__n80["right"] := __n93;
__n79["test"] := __n80;
__n94 := {  };
__n94["type"] := "BlockStatement";
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "$ERROR";
__n97["callee"] := __n98;
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "+";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "+";
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "#3.1: typeof Boolean(function(){}()) should be \"boolean\", actual is \"";
__n102["raw"] := "'#3.1: typeof Boolean(function(){}()) should be \"boolean\", actual is \"'";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "UnaryExpression";
__n103["operator"] := "typeof";
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "Boolean";
__n104["callee"] := __n105;
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "FunctionExpression";
__n108["id"] := null;
__n109 := [  ];
__n108["params"] := __n109;
__n110 := {  };
__n110["type"] := "BlockStatement";
__n111 := [  ];
__n110["body"] := __n111;
__n112 := [  ];
__n110["variableDeclarations"] := __n112;
__n113 := [  ];
__n110["functionDeclarations"] := __n113;
__n110["codeType"] := "function";
__n110["strict"] := false;
__n108["body"] := __n110;
__n108["generator"] := false;
__n108["expression"] := false;
__n108["async"] := false;
__n107["callee"] := __n108;
__n114 := [  ];
__n107["arguments"] := __n114;
__n106 := [ __n107 ];
__n104["arguments"] := __n106;
__n103["argument"] := __n104;
__n103["prefix"] := true;
__n101["right"] := __n103;
__n100["left"] := __n101;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "\"";
__n115["raw"] := "'\"'";
__n100["right"] := __n115;
__n99 := [ __n100 ];
__n97["arguments"] := __n99;
__n96["expression"] := __n97;
__n95 := [ __n96 ];
__n94["body"] := __n95;
__n79["consequent"] := __n94;
__n79["alternate"] := null;
__n116 := {  };
__n116["type"] := "IfStatement";
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "!==";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "Boolean";
__n118["callee"] := __n119;
__n121 := {  };
__n121["type"] := "CallExpression";
__n122 := {  };
__n122["type"] := "FunctionExpression";
__n122["id"] := null;
__n123 := [  ];
__n122["params"] := __n123;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n125 := [  ];
__n124["body"] := __n125;
__n126 := [  ];
__n124["variableDeclarations"] := __n126;
__n127 := [  ];
__n124["functionDeclarations"] := __n127;
__n124["codeType"] := "function";
__n124["strict"] := false;
__n122["body"] := __n124;
__n122["generator"] := false;
__n122["expression"] := false;
__n122["async"] := false;
__n121["callee"] := __n122;
__n128 := [  ];
__n121["arguments"] := __n128;
__n120 := [ __n121 ];
__n118["arguments"] := __n120;
__n117["left"] := __n118;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := false;
__n129["raw"] := "false";
__n117["right"] := __n129;
__n116["test"] := __n117;
__n130 := {  };
__n130["type"] := "BlockStatement";
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "$ERROR";
__n133["callee"] := __n134;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "#3.2: Boolean(function(){}()) should be false";
__n136["raw"] := "'#3.2: Boolean(function(){}()) should be false'";
__n135 := [ __n136 ];
__n133["arguments"] := __n135;
__n132["expression"] := __n133;
__n131 := [ __n132 ];
__n130["body"] := __n131;
__n116["consequent"] := __n130;
__n116["alternate"] := null;
__n137 := {  };
__n137["type"] := "IfStatement";
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "!==";
__n139 := {  };
__n139["type"] := "UnaryExpression";
__n139["operator"] := "typeof";
__n140 := {  };
__n140["type"] := "CallExpression";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "Boolean";
__n140["callee"] := __n141;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := 'null;
__n143["raw"] := "\"'null\"";
__n142 := [ __n143 ];
__n140["arguments"] := __n142;
__n139["argument"] := __n140;
__n139["prefix"] := true;
__n138["left"] := __n139;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "boolean";
__n144["raw"] := "\"boolean\"";
__n138["right"] := __n144;
__n137["test"] := __n138;
__n145 := {  };
__n145["type"] := "BlockStatement";
__n147 := {  };
__n147["type"] := "ExpressionStatement";
__n148 := {  };
__n148["type"] := "CallExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "$ERROR";
__n148["callee"] := __n149;
__n151 := {  };
__n151["type"] := "BinaryExpression";
__n151["operator"] := "+";
__n152 := {  };
__n152["type"] := "BinaryExpression";
__n152["operator"] := "+";
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := "#4.1: typeof Boolean(null) should be \"boolean\", actual is \"";
__n153["raw"] := "'#4.1: typeof Boolean(null) should be \"boolean\", actual is \"'";
__n152["left"] := __n153;
__n154 := {  };
__n154["type"] := "UnaryExpression";
__n154["operator"] := "typeof";
__n155 := {  };
__n155["type"] := "CallExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "Boolean";
__n155["callee"] := __n156;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := 'null;
__n158["raw"] := "\"'null\"";
__n157 := [ __n158 ];
__n155["arguments"] := __n157;
__n154["argument"] := __n155;
__n154["prefix"] := true;
__n152["right"] := __n154;
__n151["left"] := __n152;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "\"";
__n159["raw"] := "'\"'";
__n151["right"] := __n159;
__n150 := [ __n151 ];
__n148["arguments"] := __n150;
__n147["expression"] := __n148;
__n146 := [ __n147 ];
__n145["body"] := __n146;
__n137["consequent"] := __n145;
__n137["alternate"] := null;
__n160 := {  };
__n160["type"] := "IfStatement";
__n161 := {  };
__n161["type"] := "BinaryExpression";
__n161["operator"] := "!==";
__n162 := {  };
__n162["type"] := "CallExpression";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "Boolean";
__n162["callee"] := __n163;
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := 'null;
__n165["raw"] := "\"'null\"";
__n164 := [ __n165 ];
__n162["arguments"] := __n164;
__n161["left"] := __n162;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := false;
__n166["raw"] := "false";
__n161["right"] := __n166;
__n160["test"] := __n161;
__n167 := {  };
__n167["type"] := "BlockStatement";
__n169 := {  };
__n169["type"] := "ExpressionStatement";
__n170 := {  };
__n170["type"] := "CallExpression";
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "$ERROR";
__n170["callee"] := __n171;
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := "#4.2: Boolean(null) should be false";
__n173["raw"] := "'#4.2: Boolean(null) should be false'";
__n172 := [ __n173 ];
__n170["arguments"] := __n172;
__n169["expression"] := __n170;
__n168 := [ __n169 ];
__n167["body"] := __n168;
__n160["consequent"] := __n167;
__n160["alternate"] := null;
__n174 := {  };
__n174["type"] := "IfStatement";
__n175 := {  };
__n175["type"] := "BinaryExpression";
__n175["operator"] := "!==";
__n176 := {  };
__n176["type"] := "UnaryExpression";
__n176["operator"] := "typeof";
__n177 := {  };
__n177["type"] := "CallExpression";
__n178 := {  };
__n178["type"] := "Identifier";
__n178["name"] := "Boolean";
__n177["callee"] := __n178;
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "x";
__n179 := [ __n180 ];
__n177["arguments"] := __n179;
__n176["argument"] := __n177;
__n176["prefix"] := true;
__n175["left"] := __n176;
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := "boolean";
__n181["raw"] := "\"boolean\"";
__n175["right"] := __n181;
__n174["test"] := __n175;
__n182 := {  };
__n182["type"] := "BlockStatement";
__n184 := {  };
__n184["type"] := "ExpressionStatement";
__n185 := {  };
__n185["type"] := "CallExpression";
__n186 := {  };
__n186["type"] := "Identifier";
__n186["name"] := "$ERROR";
__n185["callee"] := __n186;
__n188 := {  };
__n188["type"] := "BinaryExpression";
__n188["operator"] := "+";
__n189 := {  };
__n189["type"] := "BinaryExpression";
__n189["operator"] := "+";
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := "#5.1: var x; typeof Boolean(x) should be \"boolean\", actual is \"";
__n190["raw"] := "'#5.1: var x; typeof Boolean(x) should be \"boolean\", actual is \"'";
__n189["left"] := __n190;
__n191 := {  };
__n191["type"] := "UnaryExpression";
__n191["operator"] := "typeof";
__n192 := {  };
__n192["type"] := "CallExpression";
__n193 := {  };
__n193["type"] := "Identifier";
__n193["name"] := "Boolean";
__n192["callee"] := __n193;
__n195 := {  };
__n195["type"] := "Identifier";
__n195["name"] := "x";
__n194 := [ __n195 ];
__n192["arguments"] := __n194;
__n191["argument"] := __n192;
__n191["prefix"] := true;
__n189["right"] := __n191;
__n188["left"] := __n189;
__n196 := {  };
__n196["type"] := "Literal";
__n196["value"] := "\"";
__n196["raw"] := "'\"'";
__n188["right"] := __n196;
__n187 := [ __n188 ];
__n185["arguments"] := __n187;
__n184["expression"] := __n185;
__n183 := [ __n184 ];
__n182["body"] := __n183;
__n174["consequent"] := __n182;
__n174["alternate"] := null;
__n197 := {  };
__n197["type"] := "IfStatement";
__n198 := {  };
__n198["type"] := "BinaryExpression";
__n198["operator"] := "!==";
__n199 := {  };
__n199["type"] := "CallExpression";
__n200 := {  };
__n200["type"] := "Identifier";
__n200["name"] := "Boolean";
__n199["callee"] := __n200;
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "x";
__n201 := [ __n202 ];
__n199["arguments"] := __n201;
__n198["left"] := __n199;
__n203 := {  };
__n203["type"] := "Literal";
__n203["value"] := false;
__n203["raw"] := "false";
__n198["right"] := __n203;
__n197["test"] := __n198;
__n204 := {  };
__n204["type"] := "BlockStatement";
__n206 := {  };
__n206["type"] := "ExpressionStatement";
__n207 := {  };
__n207["type"] := "CallExpression";
__n208 := {  };
__n208["type"] := "Identifier";
__n208["name"] := "$ERROR";
__n207["callee"] := __n208;
__n210 := {  };
__n210["type"] := "Literal";
__n210["value"] := "#5.2: var x; Boolean(x) should be false";
__n210["raw"] := "'#5.2: var x; Boolean(x) should be false'";
__n209 := [ __n210 ];
__n207["arguments"] := __n209;
__n206["expression"] := __n207;
__n205 := [ __n206 ];
__n204["body"] := __n205;
__n197["consequent"] := __n204;
__n197["alternate"] := null;
__n211 := {  };
__n211["type"] := "VariableDeclaration";
__n213 := {  };
__n213["type"] := "VariableDeclarator";
__n214 := {  };
__n214["type"] := "Identifier";
__n214["name"] := "x";
__n213["id"] := __n214;
__n213["init"] := null;
__n212 := [ __n213 ];
__n211["declarations"] := __n212;
__n211["kind"] := "var";
__n1 := [ __n2, __n25, __n39, __n64, __n79, __n116, __n137, __n160, __n174, __n197, __n211 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n215 := [ "x" ];
__n0["variableDeclarations"] := __n215;
__n216 := [  ];
__n0["functionDeclarations"] := __n216;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}