function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "IfStatement";
__n7 := {  };
__n7["type"] := "BinaryExpression";
__n7["operator"] := "!==";
__n8 := {  };
__n8["type"] := "UnaryExpression";
__n8["operator"] := "typeof";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Boolean";
__n9["callee"] := __n10;
__n12 := {  };
__n12["type"] := "AssignmentExpression";
__n12["operator"] := "=";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "x";
__n12["left"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 0.;
__n14["raw"] := "0";
__n12["right"] := __n14;
__n11 := [ __n12 ];
__n9["arguments"] := __n11;
__n8["argument"] := __n9;
__n8["prefix"] := true;
__n7["left"] := __n8;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "boolean";
__n15["raw"] := "\"boolean\"";
__n7["right"] := __n15;
__n6["test"] := __n7;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "$ERROR";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "+";
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "+";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "#1.1: typeof Boolean(x=0) should be \"boolean\", actual is \"";
__n24["raw"] := "'#1.1: typeof Boolean(x=0) should be \"boolean\", actual is \"'";
__n23["left"] := __n24;
__n25 := {  };
__n25["type"] := "UnaryExpression";
__n25["operator"] := "typeof";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Boolean";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "AssignmentExpression";
__n29["operator"] := "=";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "x";
__n29["left"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 0.;
__n31["raw"] := "0";
__n29["right"] := __n31;
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["argument"] := __n26;
__n25["prefix"] := true;
__n23["right"] := __n25;
__n22["left"] := __n23;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "\"";
__n32["raw"] := "'\"'";
__n22["right"] := __n32;
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n18["expression"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n6["consequent"] := __n16;
__n6["alternate"] := null;
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "!==";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Boolean";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "AssignmentExpression";
__n38["operator"] := "=";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "x";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 0.;
__n40["raw"] := "0";
__n38["right"] := __n40;
__n37 := [ __n38 ];
__n35["arguments"] := __n37;
__n34["left"] := __n35;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := false;
__n41["raw"] := "false";
__n34["right"] := __n41;
__n33["test"] := __n34;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$ERROR";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "#1.2: Boolean(x=0) should be false";
__n48["raw"] := "'#1.2: Boolean(x=0) should be false'";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n33["consequent"] := __n42;
__n33["alternate"] := null;
__n49 := {  };
__n49["type"] := "IfStatement";
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "!==";
__n51 := {  };
__n51["type"] := "UnaryExpression";
__n51["operator"] := "typeof";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "Boolean";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "AssignmentExpression";
__n55["operator"] := "=";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "x";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 1.;
__n57["raw"] := "1";
__n55["right"] := __n57;
__n54 := [ __n55 ];
__n52["arguments"] := __n54;
__n51["argument"] := __n52;
__n51["prefix"] := true;
__n50["left"] := __n51;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "boolean";
__n58["raw"] := "\"boolean\"";
__n50["right"] := __n58;
__n49["test"] := __n50;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "+";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "+";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "#2.1: typeof Boolean(x=1) should be \"boolean\", actual is \"";
__n67["raw"] := "'#2.1: typeof Boolean(x=1) should be \"boolean\", actual is \"'";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "UnaryExpression";
__n68["operator"] := "typeof";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "Boolean";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "AssignmentExpression";
__n72["operator"] := "=";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "x";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 1.;
__n74["raw"] := "1";
__n72["right"] := __n74;
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["argument"] := __n69;
__n68["prefix"] := true;
__n66["right"] := __n68;
__n65["left"] := __n66;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "\"";
__n75["raw"] := "'\"'";
__n65["right"] := __n75;
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n49["consequent"] := __n59;
__n49["alternate"] := null;
__n76 := {  };
__n76["type"] := "IfStatement";
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "!==";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "Boolean";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "AssignmentExpression";
__n81["operator"] := "=";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "x";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 1.;
__n83["raw"] := "1";
__n81["right"] := __n83;
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["left"] := __n78;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := true;
__n84["raw"] := "true";
__n77["right"] := __n84;
__n76["test"] := __n77;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "$ERROR";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "#2.2: Boolean(x=1) should be true";
__n91["raw"] := "'#2.2: Boolean(x=1) should be true'";
__n90 := [ __n91 ];
__n88["arguments"] := __n90;
__n87["expression"] := __n88;
__n86 := [ __n87 ];
__n85["body"] := __n86;
__n76["consequent"] := __n85;
__n76["alternate"] := null;
__n92 := {  };
__n92["type"] := "IfStatement";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "!==";
__n94 := {  };
__n94["type"] := "UnaryExpression";
__n94["operator"] := "typeof";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "Boolean";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "AssignmentExpression";
__n98["operator"] := "=";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "x";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := false;
__n100["raw"] := "false";
__n98["right"] := __n100;
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n94["argument"] := __n95;
__n94["prefix"] := true;
__n93["left"] := __n94;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "boolean";
__n101["raw"] := "\"boolean\"";
__n93["right"] := __n101;
__n92["test"] := __n93;
__n102 := {  };
__n102["type"] := "BlockStatement";
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "$ERROR";
__n105["callee"] := __n106;
__n108 := {  };
__n108["type"] := "BinaryExpression";
__n108["operator"] := "+";
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "+";
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "#3.1: typeof Boolean(x=false) should be \"boolean\", actual is \"";
__n110["raw"] := "'#3.1: typeof Boolean(x=false) should be \"boolean\", actual is \"'";
__n109["left"] := __n110;
__n111 := {  };
__n111["type"] := "UnaryExpression";
__n111["operator"] := "typeof";
__n112 := {  };
__n112["type"] := "CallExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "Boolean";
__n112["callee"] := __n113;
__n115 := {  };
__n115["type"] := "AssignmentExpression";
__n115["operator"] := "=";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "x";
__n115["left"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := false;
__n117["raw"] := "false";
__n115["right"] := __n117;
__n114 := [ __n115 ];
__n112["arguments"] := __n114;
__n111["argument"] := __n112;
__n111["prefix"] := true;
__n109["right"] := __n111;
__n108["left"] := __n109;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "\"";
__n118["raw"] := "'\"'";
__n108["right"] := __n118;
__n107 := [ __n108 ];
__n105["arguments"] := __n107;
__n104["expression"] := __n105;
__n103 := [ __n104 ];
__n102["body"] := __n103;
__n92["consequent"] := __n102;
__n92["alternate"] := null;
__n119 := {  };
__n119["type"] := "IfStatement";
__n120 := {  };
__n120["type"] := "BinaryExpression";
__n120["operator"] := "!==";
__n121 := {  };
__n121["type"] := "CallExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "Boolean";
__n121["callee"] := __n122;
__n124 := {  };
__n124["type"] := "AssignmentExpression";
__n124["operator"] := "=";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "x";
__n124["left"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := false;
__n126["raw"] := "false";
__n124["right"] := __n126;
__n123 := [ __n124 ];
__n121["arguments"] := __n123;
__n120["left"] := __n121;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := false;
__n127["raw"] := "false";
__n120["right"] := __n127;
__n119["test"] := __n120;
__n128 := {  };
__n128["type"] := "BlockStatement";
__n130 := {  };
__n130["type"] := "ExpressionStatement";
__n131 := {  };
__n131["type"] := "CallExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "$ERROR";
__n131["callee"] := __n132;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "#3.2: Boolean(x=false) should be false";
__n134["raw"] := "'#3.2: Boolean(x=false) should be false'";
__n133 := [ __n134 ];
__n131["arguments"] := __n133;
__n130["expression"] := __n131;
__n129 := [ __n130 ];
__n128["body"] := __n129;
__n119["consequent"] := __n128;
__n119["alternate"] := null;
__n135 := {  };
__n135["type"] := "IfStatement";
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "!==";
__n137 := {  };
__n137["type"] := "UnaryExpression";
__n137["operator"] := "typeof";
__n138 := {  };
__n138["type"] := "CallExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "Boolean";
__n138["callee"] := __n139;
__n141 := {  };
__n141["type"] := "AssignmentExpression";
__n141["operator"] := "=";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "x";
__n141["left"] := __n142;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := true;
__n143["raw"] := "true";
__n141["right"] := __n143;
__n140 := [ __n141 ];
__n138["arguments"] := __n140;
__n137["argument"] := __n138;
__n137["prefix"] := true;
__n136["left"] := __n137;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "boolean";
__n144["raw"] := "\"boolean\"";
__n136["right"] := __n144;
__n135["test"] := __n136;
__n145 := {  };
__n145["type"] := "BlockStatement";
__n147 := {  };
__n147["type"] := "ExpressionStatement";
__n148 := {  };
__n148["type"] := "CallExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "$ERROR";
__n148["callee"] := __n149;
__n151 := {  };
__n151["type"] := "BinaryExpression";
__n151["operator"] := "+";
__n152 := {  };
__n152["type"] := "BinaryExpression";
__n152["operator"] := "+";
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := "#4.1: typeof Boolean(x=true) should be \"boolean\", actual is \"";
__n153["raw"] := "'#4.1: typeof Boolean(x=true) should be \"boolean\", actual is \"'";
__n152["left"] := __n153;
__n154 := {  };
__n154["type"] := "UnaryExpression";
__n154["operator"] := "typeof";
__n155 := {  };
__n155["type"] := "CallExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "Boolean";
__n155["callee"] := __n156;
__n158 := {  };
__n158["type"] := "AssignmentExpression";
__n158["operator"] := "=";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "x";
__n158["left"] := __n159;
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := true;
__n160["raw"] := "true";
__n158["right"] := __n160;
__n157 := [ __n158 ];
__n155["arguments"] := __n157;
__n154["argument"] := __n155;
__n154["prefix"] := true;
__n152["right"] := __n154;
__n151["left"] := __n152;
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := "\"";
__n161["raw"] := "'\"'";
__n151["right"] := __n161;
__n150 := [ __n151 ];
__n148["arguments"] := __n150;
__n147["expression"] := __n148;
__n146 := [ __n147 ];
__n145["body"] := __n146;
__n135["consequent"] := __n145;
__n135["alternate"] := null;
__n162 := {  };
__n162["type"] := "IfStatement";
__n163 := {  };
__n163["type"] := "BinaryExpression";
__n163["operator"] := "!==";
__n164 := {  };
__n164["type"] := "CallExpression";
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "Boolean";
__n164["callee"] := __n165;
__n167 := {  };
__n167["type"] := "AssignmentExpression";
__n167["operator"] := "=";
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "x";
__n167["left"] := __n168;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := true;
__n169["raw"] := "true";
__n167["right"] := __n169;
__n166 := [ __n167 ];
__n164["arguments"] := __n166;
__n163["left"] := __n164;
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := true;
__n170["raw"] := "true";
__n163["right"] := __n170;
__n162["test"] := __n163;
__n171 := {  };
__n171["type"] := "BlockStatement";
__n173 := {  };
__n173["type"] := "ExpressionStatement";
__n174 := {  };
__n174["type"] := "CallExpression";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "$ERROR";
__n174["callee"] := __n175;
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "#4.2: Boolean(x=true) should be true";
__n177["raw"] := "'#4.2: Boolean(x=true) should be true'";
__n176 := [ __n177 ];
__n174["arguments"] := __n176;
__n173["expression"] := __n174;
__n172 := [ __n173 ];
__n171["body"] := __n172;
__n162["consequent"] := __n171;
__n162["alternate"] := null;
__n178 := {  };
__n178["type"] := "IfStatement";
__n179 := {  };
__n179["type"] := "BinaryExpression";
__n179["operator"] := "!==";
__n180 := {  };
__n180["type"] := "UnaryExpression";
__n180["operator"] := "typeof";
__n181 := {  };
__n181["type"] := "CallExpression";
__n182 := {  };
__n182["type"] := "Identifier";
__n182["name"] := "Boolean";
__n181["callee"] := __n182;
__n184 := {  };
__n184["type"] := "AssignmentExpression";
__n184["operator"] := "=";
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "x";
__n184["left"] := __n185;
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := 'null;
__n186["raw"] := "\"'null\"";
__n184["right"] := __n186;
__n183 := [ __n184 ];
__n181["arguments"] := __n183;
__n180["argument"] := __n181;
__n180["prefix"] := true;
__n179["left"] := __n180;
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := "boolean";
__n187["raw"] := "\"boolean\"";
__n179["right"] := __n187;
__n178["test"] := __n179;
__n188 := {  };
__n188["type"] := "BlockStatement";
__n190 := {  };
__n190["type"] := "ExpressionStatement";
__n191 := {  };
__n191["type"] := "CallExpression";
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "$ERROR";
__n191["callee"] := __n192;
__n194 := {  };
__n194["type"] := "BinaryExpression";
__n194["operator"] := "+";
__n195 := {  };
__n195["type"] := "BinaryExpression";
__n195["operator"] := "+";
__n196 := {  };
__n196["type"] := "Literal";
__n196["value"] := "#5.1: typeof Boolean(x=null) should be \"boolean\", actual is \"";
__n196["raw"] := "'#5.1: typeof Boolean(x=null) should be \"boolean\", actual is \"'";
__n195["left"] := __n196;
__n197 := {  };
__n197["type"] := "UnaryExpression";
__n197["operator"] := "typeof";
__n198 := {  };
__n198["type"] := "CallExpression";
__n199 := {  };
__n199["type"] := "Identifier";
__n199["name"] := "Boolean";
__n198["callee"] := __n199;
__n201 := {  };
__n201["type"] := "AssignmentExpression";
__n201["operator"] := "=";
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "x";
__n201["left"] := __n202;
__n203 := {  };
__n203["type"] := "Literal";
__n203["value"] := 'null;
__n203["raw"] := "\"'null\"";
__n201["right"] := __n203;
__n200 := [ __n201 ];
__n198["arguments"] := __n200;
__n197["argument"] := __n198;
__n197["prefix"] := true;
__n195["right"] := __n197;
__n194["left"] := __n195;
__n204 := {  };
__n204["type"] := "Literal";
__n204["value"] := "\"";
__n204["raw"] := "'\"'";
__n194["right"] := __n204;
__n193 := [ __n194 ];
__n191["arguments"] := __n193;
__n190["expression"] := __n191;
__n189 := [ __n190 ];
__n188["body"] := __n189;
__n178["consequent"] := __n188;
__n178["alternate"] := null;
__n205 := {  };
__n205["type"] := "IfStatement";
__n206 := {  };
__n206["type"] := "BinaryExpression";
__n206["operator"] := "!==";
__n207 := {  };
__n207["type"] := "CallExpression";
__n208 := {  };
__n208["type"] := "Identifier";
__n208["name"] := "Boolean";
__n207["callee"] := __n208;
__n210 := {  };
__n210["type"] := "AssignmentExpression";
__n210["operator"] := "=";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "x";
__n210["left"] := __n211;
__n212 := {  };
__n212["type"] := "Literal";
__n212["value"] := 'null;
__n212["raw"] := "\"'null\"";
__n210["right"] := __n212;
__n209 := [ __n210 ];
__n207["arguments"] := __n209;
__n206["left"] := __n207;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := false;
__n213["raw"] := "false";
__n206["right"] := __n213;
__n205["test"] := __n206;
__n214 := {  };
__n214["type"] := "BlockStatement";
__n216 := {  };
__n216["type"] := "ExpressionStatement";
__n217 := {  };
__n217["type"] := "CallExpression";
__n218 := {  };
__n218["type"] := "Identifier";
__n218["name"] := "$ERROR";
__n217["callee"] := __n218;
__n220 := {  };
__n220["type"] := "Literal";
__n220["value"] := "#5.2: Boolean(x=null) should be false";
__n220["raw"] := "'#5.2: Boolean(x=null) should be false'";
__n219 := [ __n220 ];
__n217["arguments"] := __n219;
__n216["expression"] := __n217;
__n215 := [ __n216 ];
__n214["body"] := __n215;
__n205["consequent"] := __n214;
__n205["alternate"] := null;
__n1 := [ __n2, __n6, __n33, __n49, __n76, __n92, __n119, __n135, __n162, __n178, __n205 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n221 := [ "x" ];
__n0["variableDeclarations"] := __n221;
__n222 := [  ];
__n0["functionDeclarations"] := __n222;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}