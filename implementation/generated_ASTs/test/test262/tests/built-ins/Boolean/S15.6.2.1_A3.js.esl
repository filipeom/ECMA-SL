function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Boolean";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "IfStatement";
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "!==";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "x1";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "valueOf";
__n15["raw"] := "\"valueOf\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["callee"] := __n13;
__n16 := [  ];
__n12["arguments"] := __n16;
__n11["left"] := __n12;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := true;
__n17["raw"] := "true";
__n11["right"] := __n17;
__n10["test"] := __n11;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "$ERROR";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "#1: var x1 = new Boolean(1); x1.valueOf() === true";
__n24["raw"] := "'#1: var x1 = new Boolean(1); x1.valueOf() === true'";
__n23 := [ __n24 ];
__n21["arguments"] := __n23;
__n20["expression"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n10["consequent"] := __n18;
__n10["alternate"] := null;
__n25 := {  };
__n25["type"] := "VariableDeclaration";
__n27 := {  };
__n27["type"] := "VariableDeclarator";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "x2";
__n27["id"] := __n28;
__n29 := {  };
__n29["type"] := "NewExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Boolean";
__n29["callee"] := __n30;
__n31 := [  ];
__n29["arguments"] := __n31;
__n27["init"] := __n29;
__n26 := [ __n27 ];
__n25["declarations"] := __n26;
__n25["kind"] := "var";
__n32 := {  };
__n32["type"] := "IfStatement";
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "!==";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "x2";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "valueOf";
__n37["raw"] := "\"valueOf\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n38 := [  ];
__n34["arguments"] := __n38;
__n33["left"] := __n34;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := false;
__n39["raw"] := "false";
__n33["right"] := __n39;
__n32["test"] := __n33;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "#2: var x2 = new Boolean(); x2.valueOf() === false";
__n46["raw"] := "'#2: var x2 = new Boolean(); x2.valueOf() === false'";
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n32["consequent"] := __n40;
__n32["alternate"] := null;
__n47 := {  };
__n47["type"] := "VariableDeclaration";
__n49 := {  };
__n49["type"] := "VariableDeclarator";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "x2";
__n49["id"] := __n50;
__n51 := {  };
__n51["type"] := "NewExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Boolean";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 0.;
__n54["raw"] := "0";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n49["init"] := __n51;
__n48 := [ __n49 ];
__n47["declarations"] := __n48;
__n47["kind"] := "var";
__n55 := {  };
__n55["type"] := "IfStatement";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "!==";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "x2";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "valueOf";
__n60["raw"] := "\"valueOf\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n61 := [  ];
__n57["arguments"] := __n61;
__n56["left"] := __n57;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := false;
__n62["raw"] := "false";
__n56["right"] := __n62;
__n55["test"] := __n56;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$ERROR";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "#3: var x2 = new Boolean(0); x2.valueOf() === false";
__n69["raw"] := "'#3: var x2 = new Boolean(0); x2.valueOf() === false'";
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n55["consequent"] := __n63;
__n55["alternate"] := null;
__n70 := {  };
__n70["type"] := "VariableDeclaration";
__n72 := {  };
__n72["type"] := "VariableDeclarator";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "x2";
__n72["id"] := __n73;
__n74 := {  };
__n74["type"] := "NewExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "Boolean";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "NewExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "Object";
__n77["callee"] := __n78;
__n79 := [  ];
__n77["arguments"] := __n79;
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n72["init"] := __n74;
__n71 := [ __n72 ];
__n70["declarations"] := __n71;
__n70["kind"] := "var";
__n80 := {  };
__n80["type"] := "IfStatement";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "!==";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "x2";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "valueOf";
__n85["raw"] := "\"valueOf\"";
__n83["property"] := __n85;
__n83["computed"] := true;
__n82["callee"] := __n83;
__n86 := [  ];
__n82["arguments"] := __n86;
__n81["left"] := __n82;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := true;
__n87["raw"] := "true";
__n81["right"] := __n87;
__n80["test"] := __n81;
__n88 := {  };
__n88["type"] := "BlockStatement";
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "$ERROR";
__n91["callee"] := __n92;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "#4: var x2 = new Boolean(new Object()); x2.valueOf() === true";
__n94["raw"] := "'#4: var x2 = new Boolean(new Object()); x2.valueOf() === true'";
__n93 := [ __n94 ];
__n91["arguments"] := __n93;
__n90["expression"] := __n91;
__n89 := [ __n90 ];
__n88["body"] := __n89;
__n80["consequent"] := __n88;
__n80["alternate"] := null;
__n1 := [ __n2, __n10, __n25, __n32, __n47, __n55, __n70, __n80 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n95 := [ "x1", "x2" ];
__n0["variableDeclarations"] := __n95;
__n96 := [  ];
__n0["functionDeclarations"] := __n96;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}