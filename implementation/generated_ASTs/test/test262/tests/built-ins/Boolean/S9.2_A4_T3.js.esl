function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Boolean";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Number";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "POSITIVE_INFINITY";
__n9["raw"] := "\"POSITIVE_INFINITY\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := true;
__n10["raw"] := "true";
__n3["right"] := __n10;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: Boolean(+Infinity) === true. Actual: ";
__n18["raw"] := "'#1: Boolean(+Infinity) === true. Actual: '";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Boolean";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "UnaryExpression";
__n22["operator"] := "+";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Infinity";
__n22["argument"] := __n23;
__n22["prefix"] := true;
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n17["right"] := __n19;
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n2["alternate"] := null;
__n24 := {  };
__n24["type"] := "IfStatement";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "!==";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Boolean";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Number";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "NEGATIVE_INFINITY";
__n31["raw"] := "\"NEGATIVE_INFINITY\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["left"] := __n26;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := true;
__n32["raw"] := "true";
__n25["right"] := __n32;
__n24["test"] := __n25;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "$ERROR";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "+";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "#2: Boolean(-Infinity) === true. Actual: ";
__n40["raw"] := "'#2: Boolean(-Infinity) === true. Actual: '";
__n39["left"] := __n40;
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Boolean";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "UnaryExpression";
__n44["operator"] := "-";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Infinity";
__n44["argument"] := __n45;
__n44["prefix"] := true;
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n39["right"] := __n41;
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["expression"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n24["consequent"] := __n33;
__n24["alternate"] := null;
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "!==";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "Boolean";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Number";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "MAX_VALUE";
__n53["raw"] := "\"MAX_VALUE\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["left"] := __n48;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := true;
__n54["raw"] := "true";
__n47["right"] := __n54;
__n46["test"] := __n47;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "#3: Boolean(Number.MAX_VALUE) === true. Actual: ";
__n62["raw"] := "'#3: Boolean(Number.MAX_VALUE) === true. Actual: '";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "Boolean";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "Number";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "MAX_VALUE";
__n68["raw"] := "\"MAX_VALUE\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n61["right"] := __n63;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n46["consequent"] := __n55;
__n46["alternate"] := null;
__n69 := {  };
__n69["type"] := "IfStatement";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "!==";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "Boolean";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "Number";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "MIN_VALUE";
__n76["raw"] := "\"MIN_VALUE\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73 := [ __n74 ];
__n71["arguments"] := __n73;
__n70["left"] := __n71;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := true;
__n77["raw"] := "true";
__n70["right"] := __n77;
__n69["test"] := __n70;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "$ERROR";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "+";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "#4: Boolean(Number.MIN_VALUE) === true. Actual: ";
__n85["raw"] := "'#4: Boolean(Number.MIN_VALUE) === true. Actual: '";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "Boolean";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "Number";
__n89["object"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "MIN_VALUE";
__n91["raw"] := "\"MIN_VALUE\"";
__n89["property"] := __n91;
__n89["computed"] := true;
__n88 := [ __n89 ];
__n86["arguments"] := __n88;
__n84["right"] := __n86;
__n83 := [ __n84 ];
__n81["arguments"] := __n83;
__n80["expression"] := __n81;
__n79 := [ __n80 ];
__n78["body"] := __n79;
__n69["consequent"] := __n78;
__n69["alternate"] := null;
__n92 := {  };
__n92["type"] := "IfStatement";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "!==";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "Boolean";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 13.;
__n97["raw"] := "13";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["left"] := __n94;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := true;
__n98["raw"] := "true";
__n93["right"] := __n98;
__n92["test"] := __n93;
__n99 := {  };
__n99["type"] := "BlockStatement";
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "$ERROR";
__n102["callee"] := __n103;
__n105 := {  };
__n105["type"] := "BinaryExpression";
__n105["operator"] := "+";
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "#5: Boolean(13) === true. Actual: ";
__n106["raw"] := "'#5: Boolean(13) === true. Actual: '";
__n105["left"] := __n106;
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "Boolean";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 13.;
__n110["raw"] := "13";
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n105["right"] := __n107;
__n104 := [ __n105 ];
__n102["arguments"] := __n104;
__n101["expression"] := __n102;
__n100 := [ __n101 ];
__n99["body"] := __n100;
__n92["consequent"] := __n99;
__n92["alternate"] := null;
__n111 := {  };
__n111["type"] := "IfStatement";
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "!==";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "Boolean";
__n113["callee"] := __n114;
__n116 := {  };
__n116["type"] := "UnaryExpression";
__n116["operator"] := "-";
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 13.;
__n117["raw"] := "13";
__n116["argument"] := __n117;
__n116["prefix"] := true;
__n115 := [ __n116 ];
__n113["arguments"] := __n115;
__n112["left"] := __n113;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := true;
__n118["raw"] := "true";
__n112["right"] := __n118;
__n111["test"] := __n112;
__n119 := {  };
__n119["type"] := "BlockStatement";
__n121 := {  };
__n121["type"] := "ExpressionStatement";
__n122 := {  };
__n122["type"] := "CallExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "$ERROR";
__n122["callee"] := __n123;
__n125 := {  };
__n125["type"] := "BinaryExpression";
__n125["operator"] := "+";
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "#6: Boolean(-13) === true. Actual: ";
__n126["raw"] := "'#6: Boolean(-13) === true. Actual: '";
__n125["left"] := __n126;
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "Boolean";
__n127["callee"] := __n128;
__n130 := {  };
__n130["type"] := "UnaryExpression";
__n130["operator"] := "-";
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := 13.;
__n131["raw"] := "13";
__n130["argument"] := __n131;
__n130["prefix"] := true;
__n129 := [ __n130 ];
__n127["arguments"] := __n129;
__n125["right"] := __n127;
__n124 := [ __n125 ];
__n122["arguments"] := __n124;
__n121["expression"] := __n122;
__n120 := [ __n121 ];
__n119["body"] := __n120;
__n111["consequent"] := __n119;
__n111["alternate"] := null;
__n132 := {  };
__n132["type"] := "IfStatement";
__n133 := {  };
__n133["type"] := "BinaryExpression";
__n133["operator"] := "!==";
__n134 := {  };
__n134["type"] := "CallExpression";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "Boolean";
__n134["callee"] := __n135;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := 1.3;
__n137["raw"] := "1.3";
__n136 := [ __n137 ];
__n134["arguments"] := __n136;
__n133["left"] := __n134;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := true;
__n138["raw"] := "true";
__n133["right"] := __n138;
__n132["test"] := __n133;
__n139 := {  };
__n139["type"] := "BlockStatement";
__n141 := {  };
__n141["type"] := "ExpressionStatement";
__n142 := {  };
__n142["type"] := "CallExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "$ERROR";
__n142["callee"] := __n143;
__n145 := {  };
__n145["type"] := "BinaryExpression";
__n145["operator"] := "+";
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := "#7: Boolean(1.3) === true. Actual: ";
__n146["raw"] := "'#7: Boolean(1.3) === true. Actual: '";
__n145["left"] := __n146;
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "Boolean";
__n147["callee"] := __n148;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 1.3;
__n150["raw"] := "1.3";
__n149 := [ __n150 ];
__n147["arguments"] := __n149;
__n145["right"] := __n147;
__n144 := [ __n145 ];
__n142["arguments"] := __n144;
__n141["expression"] := __n142;
__n140 := [ __n141 ];
__n139["body"] := __n140;
__n132["consequent"] := __n139;
__n132["alternate"] := null;
__n151 := {  };
__n151["type"] := "IfStatement";
__n152 := {  };
__n152["type"] := "BinaryExpression";
__n152["operator"] := "!==";
__n153 := {  };
__n153["type"] := "CallExpression";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "Boolean";
__n153["callee"] := __n154;
__n156 := {  };
__n156["type"] := "UnaryExpression";
__n156["operator"] := "-";
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := 1.3;
__n157["raw"] := "1.3";
__n156["argument"] := __n157;
__n156["prefix"] := true;
__n155 := [ __n156 ];
__n153["arguments"] := __n155;
__n152["left"] := __n153;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := true;
__n158["raw"] := "true";
__n152["right"] := __n158;
__n151["test"] := __n152;
__n159 := {  };
__n159["type"] := "BlockStatement";
__n161 := {  };
__n161["type"] := "ExpressionStatement";
__n162 := {  };
__n162["type"] := "CallExpression";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "$ERROR";
__n162["callee"] := __n163;
__n165 := {  };
__n165["type"] := "BinaryExpression";
__n165["operator"] := "+";
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "#8: Boolean(-1.3) === true. Actual: ";
__n166["raw"] := "'#8: Boolean(-1.3) === true. Actual: '";
__n165["left"] := __n166;
__n167 := {  };
__n167["type"] := "CallExpression";
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "Boolean";
__n167["callee"] := __n168;
__n170 := {  };
__n170["type"] := "UnaryExpression";
__n170["operator"] := "-";
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := 1.3;
__n171["raw"] := "1.3";
__n170["argument"] := __n171;
__n170["prefix"] := true;
__n169 := [ __n170 ];
__n167["arguments"] := __n169;
__n165["right"] := __n167;
__n164 := [ __n165 ];
__n162["arguments"] := __n164;
__n161["expression"] := __n162;
__n160 := [ __n161 ];
__n159["body"] := __n160;
__n151["consequent"] := __n159;
__n151["alternate"] := null;
__n1 := [ __n2, __n24, __n46, __n69, __n92, __n111, __n132, __n151 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n172 := [  ];
__n0["variableDeclarations"] := __n172;
__n173 := [  ];
__n0["functionDeclarations"] := __n173;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}