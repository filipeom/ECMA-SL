function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Boolean";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "NewExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Object";
__n7["callee"] := __n8;
__n9 := [  ];
__n7["arguments"] := __n9;
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := true;
__n10["raw"] := "true";
__n3["right"] := __n10;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: Boolean(new Object()) === true. Actual: ";
__n18["raw"] := "'#1: Boolean(new Object()) === true. Actual: '";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Boolean";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "NewExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Object";
__n22["callee"] := __n23;
__n24 := [  ];
__n22["arguments"] := __n24;
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n17["right"] := __n19;
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n2["alternate"] := null;
__n25 := {  };
__n25["type"] := "IfStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "!==";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Boolean";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "NewExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "String";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "";
__n33["raw"] := "\"\"";
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["left"] := __n27;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := true;
__n34["raw"] := "true";
__n26["right"] := __n34;
__n25["test"] := __n26;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#2: Boolean(new String(\"\")) === true. Actual: ";
__n42["raw"] := "'#2: Boolean(new String(\"\")) === true. Actual: '";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Boolean";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "NewExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "String";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "";
__n49["raw"] := "\"\"";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n41["right"] := __n43;
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n25["consequent"] := __n35;
__n25["alternate"] := null;
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "Boolean";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "NewExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "String";
__n55["callee"] := __n56;
__n57 := [  ];
__n55["arguments"] := __n57;
__n54 := [ __n55 ];
__n52["arguments"] := __n54;
__n51["left"] := __n52;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := true;
__n58["raw"] := "true";
__n51["right"] := __n58;
__n50["test"] := __n51;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "+";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "#3: Boolean(new String()) === true. Actual: ";
__n66["raw"] := "'#3: Boolean(new String()) === true. Actual: '";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "Boolean";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "NewExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "String";
__n70["callee"] := __n71;
__n72 := [  ];
__n70["arguments"] := __n72;
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n65["right"] := __n67;
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n50["consequent"] := __n59;
__n50["alternate"] := null;
__n73 := {  };
__n73["type"] := "IfStatement";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "!==";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "Boolean";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "NewExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "Boolean";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := true;
__n81["raw"] := "true";
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["left"] := __n75;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := true;
__n82["raw"] := "true";
__n74["right"] := __n82;
__n73["test"] := __n74;
__n83 := {  };
__n83["type"] := "BlockStatement";
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "$ERROR";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "+";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "#4: Boolean(new Boolean(true)) === true. Actual: ";
__n90["raw"] := "'#4: Boolean(new Boolean(true)) === true. Actual: '";
__n89["left"] := __n90;
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "Boolean";
__n91["callee"] := __n92;
__n94 := {  };
__n94["type"] := "NewExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "Boolean";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := true;
__n97["raw"] := "true";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93 := [ __n94 ];
__n91["arguments"] := __n93;
__n89["right"] := __n91;
__n88 := [ __n89 ];
__n86["arguments"] := __n88;
__n85["expression"] := __n86;
__n84 := [ __n85 ];
__n83["body"] := __n84;
__n73["consequent"] := __n83;
__n73["alternate"] := null;
__n98 := {  };
__n98["type"] := "IfStatement";
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "!==";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "Boolean";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "NewExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "Boolean";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := false;
__n106["raw"] := "false";
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["left"] := __n100;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := true;
__n107["raw"] := "true";
__n99["right"] := __n107;
__n98["test"] := __n99;
__n108 := {  };
__n108["type"] := "BlockStatement";
__n110 := {  };
__n110["type"] := "ExpressionStatement";
__n111 := {  };
__n111["type"] := "CallExpression";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "$ERROR";
__n111["callee"] := __n112;
__n114 := {  };
__n114["type"] := "BinaryExpression";
__n114["operator"] := "+";
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "#5: Boolean(new Boolean(false)) === true. Actual: ";
__n115["raw"] := "'#5: Boolean(new Boolean(false)) === true. Actual: '";
__n114["left"] := __n115;
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "Boolean";
__n116["callee"] := __n117;
__n119 := {  };
__n119["type"] := "NewExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "Boolean";
__n119["callee"] := __n120;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := false;
__n122["raw"] := "false";
__n121 := [ __n122 ];
__n119["arguments"] := __n121;
__n118 := [ __n119 ];
__n116["arguments"] := __n118;
__n114["right"] := __n116;
__n113 := [ __n114 ];
__n111["arguments"] := __n113;
__n110["expression"] := __n111;
__n109 := [ __n110 ];
__n108["body"] := __n109;
__n98["consequent"] := __n108;
__n98["alternate"] := null;
__n123 := {  };
__n123["type"] := "IfStatement";
__n124 := {  };
__n124["type"] := "BinaryExpression";
__n124["operator"] := "!==";
__n125 := {  };
__n125["type"] := "CallExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "Boolean";
__n125["callee"] := __n126;
__n128 := {  };
__n128["type"] := "NewExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "Boolean";
__n128["callee"] := __n129;
__n130 := [  ];
__n128["arguments"] := __n130;
__n127 := [ __n128 ];
__n125["arguments"] := __n127;
__n124["left"] := __n125;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := true;
__n131["raw"] := "true";
__n124["right"] := __n131;
__n123["test"] := __n124;
__n132 := {  };
__n132["type"] := "BlockStatement";
__n134 := {  };
__n134["type"] := "ExpressionStatement";
__n135 := {  };
__n135["type"] := "CallExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "$ERROR";
__n135["callee"] := __n136;
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "+";
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "#6: Boolean(new Boolean()) === true. Actual: ";
__n139["raw"] := "'#6: Boolean(new Boolean()) === true. Actual: '";
__n138["left"] := __n139;
__n140 := {  };
__n140["type"] := "CallExpression";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "Boolean";
__n140["callee"] := __n141;
__n143 := {  };
__n143["type"] := "NewExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "Boolean";
__n143["callee"] := __n144;
__n145 := [  ];
__n143["arguments"] := __n145;
__n142 := [ __n143 ];
__n140["arguments"] := __n142;
__n138["right"] := __n140;
__n137 := [ __n138 ];
__n135["arguments"] := __n137;
__n134["expression"] := __n135;
__n133 := [ __n134 ];
__n132["body"] := __n133;
__n123["consequent"] := __n132;
__n123["alternate"] := null;
__n146 := {  };
__n146["type"] := "IfStatement";
__n147 := {  };
__n147["type"] := "BinaryExpression";
__n147["operator"] := "!==";
__n148 := {  };
__n148["type"] := "CallExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "Boolean";
__n148["callee"] := __n149;
__n151 := {  };
__n151["type"] := "NewExpression";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "Array";
__n151["callee"] := __n152;
__n153 := [  ];
__n151["arguments"] := __n153;
__n150 := [ __n151 ];
__n148["arguments"] := __n150;
__n147["left"] := __n148;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := true;
__n154["raw"] := "true";
__n147["right"] := __n154;
__n146["test"] := __n147;
__n155 := {  };
__n155["type"] := "BlockStatement";
__n157 := {  };
__n157["type"] := "ExpressionStatement";
__n158 := {  };
__n158["type"] := "CallExpression";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "$ERROR";
__n158["callee"] := __n159;
__n161 := {  };
__n161["type"] := "BinaryExpression";
__n161["operator"] := "+";
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := "#7: Boolean(new Array()) === true. Actual: ";
__n162["raw"] := "'#7: Boolean(new Array()) === true. Actual: '";
__n161["left"] := __n162;
__n163 := {  };
__n163["type"] := "CallExpression";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "Boolean";
__n163["callee"] := __n164;
__n166 := {  };
__n166["type"] := "NewExpression";
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "Array";
__n166["callee"] := __n167;
__n168 := [  ];
__n166["arguments"] := __n168;
__n165 := [ __n166 ];
__n163["arguments"] := __n165;
__n161["right"] := __n163;
__n160 := [ __n161 ];
__n158["arguments"] := __n160;
__n157["expression"] := __n158;
__n156 := [ __n157 ];
__n155["body"] := __n156;
__n146["consequent"] := __n155;
__n146["alternate"] := null;
__n169 := {  };
__n169["type"] := "IfStatement";
__n170 := {  };
__n170["type"] := "BinaryExpression";
__n170["operator"] := "!==";
__n171 := {  };
__n171["type"] := "CallExpression";
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "Boolean";
__n171["callee"] := __n172;
__n174 := {  };
__n174["type"] := "NewExpression";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "Number";
__n174["callee"] := __n175;
__n176 := [  ];
__n174["arguments"] := __n176;
__n173 := [ __n174 ];
__n171["arguments"] := __n173;
__n170["left"] := __n171;
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := true;
__n177["raw"] := "true";
__n170["right"] := __n177;
__n169["test"] := __n170;
__n178 := {  };
__n178["type"] := "BlockStatement";
__n180 := {  };
__n180["type"] := "ExpressionStatement";
__n181 := {  };
__n181["type"] := "CallExpression";
__n182 := {  };
__n182["type"] := "Identifier";
__n182["name"] := "$ERROR";
__n181["callee"] := __n182;
__n184 := {  };
__n184["type"] := "BinaryExpression";
__n184["operator"] := "+";
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "#8: Boolean(new Number()) === true. Actual: ";
__n185["raw"] := "'#8: Boolean(new Number()) === true. Actual: '";
__n184["left"] := __n185;
__n186 := {  };
__n186["type"] := "CallExpression";
__n187 := {  };
__n187["type"] := "Identifier";
__n187["name"] := "Boolean";
__n186["callee"] := __n187;
__n189 := {  };
__n189["type"] := "NewExpression";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "Number";
__n189["callee"] := __n190;
__n191 := [  ];
__n189["arguments"] := __n191;
__n188 := [ __n189 ];
__n186["arguments"] := __n188;
__n184["right"] := __n186;
__n183 := [ __n184 ];
__n181["arguments"] := __n183;
__n180["expression"] := __n181;
__n179 := [ __n180 ];
__n178["body"] := __n179;
__n169["consequent"] := __n178;
__n169["alternate"] := null;
__n192 := {  };
__n192["type"] := "IfStatement";
__n193 := {  };
__n193["type"] := "BinaryExpression";
__n193["operator"] := "!==";
__n194 := {  };
__n194["type"] := "CallExpression";
__n195 := {  };
__n195["type"] := "Identifier";
__n195["name"] := "Boolean";
__n194["callee"] := __n195;
__n197 := {  };
__n197["type"] := "NewExpression";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "Number";
__n197["callee"] := __n198;
__n200 := {  };
__n200["type"] := "UnaryExpression";
__n200["operator"] := "-";
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := 0.;
__n201["raw"] := "0";
__n200["argument"] := __n201;
__n200["prefix"] := true;
__n199 := [ __n200 ];
__n197["arguments"] := __n199;
__n196 := [ __n197 ];
__n194["arguments"] := __n196;
__n193["left"] := __n194;
__n202 := {  };
__n202["type"] := "Literal";
__n202["value"] := true;
__n202["raw"] := "true";
__n193["right"] := __n202;
__n192["test"] := __n193;
__n203 := {  };
__n203["type"] := "BlockStatement";
__n205 := {  };
__n205["type"] := "ExpressionStatement";
__n206 := {  };
__n206["type"] := "CallExpression";
__n207 := {  };
__n207["type"] := "Identifier";
__n207["name"] := "$ERROR";
__n206["callee"] := __n207;
__n209 := {  };
__n209["type"] := "BinaryExpression";
__n209["operator"] := "+";
__n210 := {  };
__n210["type"] := "Literal";
__n210["value"] := "#9: Boolean(new Number(-0)) === true. Actual: ";
__n210["raw"] := "'#9: Boolean(new Number(-0)) === true. Actual: '";
__n209["left"] := __n210;
__n211 := {  };
__n211["type"] := "CallExpression";
__n212 := {  };
__n212["type"] := "Identifier";
__n212["name"] := "Boolean";
__n211["callee"] := __n212;
__n214 := {  };
__n214["type"] := "NewExpression";
__n215 := {  };
__n215["type"] := "Identifier";
__n215["name"] := "Number";
__n214["callee"] := __n215;
__n217 := {  };
__n217["type"] := "UnaryExpression";
__n217["operator"] := "-";
__n218 := {  };
__n218["type"] := "Literal";
__n218["value"] := 0.;
__n218["raw"] := "0";
__n217["argument"] := __n218;
__n217["prefix"] := true;
__n216 := [ __n217 ];
__n214["arguments"] := __n216;
__n213 := [ __n214 ];
__n211["arguments"] := __n213;
__n209["right"] := __n211;
__n208 := [ __n209 ];
__n206["arguments"] := __n208;
__n205["expression"] := __n206;
__n204 := [ __n205 ];
__n203["body"] := __n204;
__n192["consequent"] := __n203;
__n192["alternate"] := null;
__n219 := {  };
__n219["type"] := "IfStatement";
__n220 := {  };
__n220["type"] := "BinaryExpression";
__n220["operator"] := "!==";
__n221 := {  };
__n221["type"] := "CallExpression";
__n222 := {  };
__n222["type"] := "Identifier";
__n222["name"] := "Boolean";
__n221["callee"] := __n222;
__n224 := {  };
__n224["type"] := "NewExpression";
__n225 := {  };
__n225["type"] := "Identifier";
__n225["name"] := "Number";
__n224["callee"] := __n225;
__n227 := {  };
__n227["type"] := "Literal";
__n227["value"] := 0.;
__n227["raw"] := "0";
__n226 := [ __n227 ];
__n224["arguments"] := __n226;
__n223 := [ __n224 ];
__n221["arguments"] := __n223;
__n220["left"] := __n221;
__n228 := {  };
__n228["type"] := "Literal";
__n228["value"] := true;
__n228["raw"] := "true";
__n220["right"] := __n228;
__n219["test"] := __n220;
__n229 := {  };
__n229["type"] := "BlockStatement";
__n231 := {  };
__n231["type"] := "ExpressionStatement";
__n232 := {  };
__n232["type"] := "CallExpression";
__n233 := {  };
__n233["type"] := "Identifier";
__n233["name"] := "$ERROR";
__n232["callee"] := __n233;
__n235 := {  };
__n235["type"] := "BinaryExpression";
__n235["operator"] := "+";
__n236 := {  };
__n236["type"] := "Literal";
__n236["value"] := "#10: Boolean(new Number(0)) === true. Actual: ";
__n236["raw"] := "'#10: Boolean(new Number(0)) === true. Actual: '";
__n235["left"] := __n236;
__n237 := {  };
__n237["type"] := "CallExpression";
__n238 := {  };
__n238["type"] := "Identifier";
__n238["name"] := "Boolean";
__n237["callee"] := __n238;
__n240 := {  };
__n240["type"] := "NewExpression";
__n241 := {  };
__n241["type"] := "Identifier";
__n241["name"] := "Number";
__n240["callee"] := __n241;
__n243 := {  };
__n243["type"] := "Literal";
__n243["value"] := 0.;
__n243["raw"] := "0";
__n242 := [ __n243 ];
__n240["arguments"] := __n242;
__n239 := [ __n240 ];
__n237["arguments"] := __n239;
__n235["right"] := __n237;
__n234 := [ __n235 ];
__n232["arguments"] := __n234;
__n231["expression"] := __n232;
__n230 := [ __n231 ];
__n229["body"] := __n230;
__n219["consequent"] := __n229;
__n219["alternate"] := null;
__n244 := {  };
__n244["type"] := "IfStatement";
__n245 := {  };
__n245["type"] := "BinaryExpression";
__n245["operator"] := "!==";
__n246 := {  };
__n246["type"] := "CallExpression";
__n247 := {  };
__n247["type"] := "Identifier";
__n247["name"] := "Boolean";
__n246["callee"] := __n247;
__n249 := {  };
__n249["type"] := "NewExpression";
__n250 := {  };
__n250["type"] := "Identifier";
__n250["name"] := "Number";
__n249["callee"] := __n250;
__n251 := [  ];
__n249["arguments"] := __n251;
__n248 := [ __n249 ];
__n246["arguments"] := __n248;
__n245["left"] := __n246;
__n252 := {  };
__n252["type"] := "Literal";
__n252["value"] := true;
__n252["raw"] := "true";
__n245["right"] := __n252;
__n244["test"] := __n245;
__n253 := {  };
__n253["type"] := "BlockStatement";
__n255 := {  };
__n255["type"] := "ExpressionStatement";
__n256 := {  };
__n256["type"] := "CallExpression";
__n257 := {  };
__n257["type"] := "Identifier";
__n257["name"] := "$ERROR";
__n256["callee"] := __n257;
__n259 := {  };
__n259["type"] := "BinaryExpression";
__n259["operator"] := "+";
__n260 := {  };
__n260["type"] := "Literal";
__n260["value"] := "#11: Boolean(new Number()) === true. Actual: ";
__n260["raw"] := "'#11: Boolean(new Number()) === true. Actual: '";
__n259["left"] := __n260;
__n261 := {  };
__n261["type"] := "CallExpression";
__n262 := {  };
__n262["type"] := "Identifier";
__n262["name"] := "Boolean";
__n261["callee"] := __n262;
__n264 := {  };
__n264["type"] := "NewExpression";
__n265 := {  };
__n265["type"] := "Identifier";
__n265["name"] := "Number";
__n264["callee"] := __n265;
__n266 := [  ];
__n264["arguments"] := __n266;
__n263 := [ __n264 ];
__n261["arguments"] := __n263;
__n259["right"] := __n261;
__n258 := [ __n259 ];
__n256["arguments"] := __n258;
__n255["expression"] := __n256;
__n254 := [ __n255 ];
__n253["body"] := __n254;
__n244["consequent"] := __n253;
__n244["alternate"] := null;
__n267 := {  };
__n267["type"] := "IfStatement";
__n268 := {  };
__n268["type"] := "BinaryExpression";
__n268["operator"] := "!==";
__n269 := {  };
__n269["type"] := "CallExpression";
__n270 := {  };
__n270["type"] := "Identifier";
__n270["name"] := "Boolean";
__n269["callee"] := __n270;
__n272 := {  };
__n272["type"] := "NewExpression";
__n273 := {  };
__n273["type"] := "Identifier";
__n273["name"] := "Number";
__n272["callee"] := __n273;
__n275 := {  };
__n275["type"] := "MemberExpression";
__n276 := {  };
__n276["type"] := "Identifier";
__n276["name"] := "Number";
__n275["object"] := __n276;
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := "NaN";
__n277["raw"] := "\"NaN\"";
__n275["property"] := __n277;
__n275["computed"] := true;
__n274 := [ __n275 ];
__n272["arguments"] := __n274;
__n271 := [ __n272 ];
__n269["arguments"] := __n271;
__n268["left"] := __n269;
__n278 := {  };
__n278["type"] := "Literal";
__n278["value"] := true;
__n278["raw"] := "true";
__n268["right"] := __n278;
__n267["test"] := __n268;
__n279 := {  };
__n279["type"] := "BlockStatement";
__n281 := {  };
__n281["type"] := "ExpressionStatement";
__n282 := {  };
__n282["type"] := "CallExpression";
__n283 := {  };
__n283["type"] := "Identifier";
__n283["name"] := "$ERROR";
__n282["callee"] := __n283;
__n285 := {  };
__n285["type"] := "BinaryExpression";
__n285["operator"] := "+";
__n286 := {  };
__n286["type"] := "Literal";
__n286["value"] := "#12: Boolean(new Number(Number.NaN)) === true. Actual: ";
__n286["raw"] := "'#12: Boolean(new Number(Number.NaN)) === true. Actual: '";
__n285["left"] := __n286;
__n287 := {  };
__n287["type"] := "CallExpression";
__n288 := {  };
__n288["type"] := "Identifier";
__n288["name"] := "Boolean";
__n287["callee"] := __n288;
__n290 := {  };
__n290["type"] := "NewExpression";
__n291 := {  };
__n291["type"] := "Identifier";
__n291["name"] := "Number";
__n290["callee"] := __n291;
__n293 := {  };
__n293["type"] := "MemberExpression";
__n294 := {  };
__n294["type"] := "Identifier";
__n294["name"] := "Number";
__n293["object"] := __n294;
__n295 := {  };
__n295["type"] := "Literal";
__n295["value"] := "NaN";
__n295["raw"] := "\"NaN\"";
__n293["property"] := __n295;
__n293["computed"] := true;
__n292 := [ __n293 ];
__n290["arguments"] := __n292;
__n289 := [ __n290 ];
__n287["arguments"] := __n289;
__n285["right"] := __n287;
__n284 := [ __n285 ];
__n282["arguments"] := __n284;
__n281["expression"] := __n282;
__n280 := [ __n281 ];
__n279["body"] := __n280;
__n267["consequent"] := __n279;
__n267["alternate"] := null;
__n296 := {  };
__n296["type"] := "IfStatement";
__n297 := {  };
__n297["type"] := "BinaryExpression";
__n297["operator"] := "!==";
__n298 := {  };
__n298["type"] := "CallExpression";
__n299 := {  };
__n299["type"] := "Identifier";
__n299["name"] := "Boolean";
__n298["callee"] := __n299;
__n301 := {  };
__n301["type"] := "NewExpression";
__n302 := {  };
__n302["type"] := "Identifier";
__n302["name"] := "Number";
__n301["callee"] := __n302;
__n304 := {  };
__n304["type"] := "UnaryExpression";
__n304["operator"] := "-";
__n305 := {  };
__n305["type"] := "Literal";
__n305["value"] := 1.;
__n305["raw"] := "1";
__n304["argument"] := __n305;
__n304["prefix"] := true;
__n303 := [ __n304 ];
__n301["arguments"] := __n303;
__n300 := [ __n301 ];
__n298["arguments"] := __n300;
__n297["left"] := __n298;
__n306 := {  };
__n306["type"] := "Literal";
__n306["value"] := true;
__n306["raw"] := "true";
__n297["right"] := __n306;
__n296["test"] := __n297;
__n307 := {  };
__n307["type"] := "BlockStatement";
__n309 := {  };
__n309["type"] := "ExpressionStatement";
__n310 := {  };
__n310["type"] := "CallExpression";
__n311 := {  };
__n311["type"] := "Identifier";
__n311["name"] := "$ERROR";
__n310["callee"] := __n311;
__n313 := {  };
__n313["type"] := "BinaryExpression";
__n313["operator"] := "+";
__n314 := {  };
__n314["type"] := "Literal";
__n314["value"] := "#13: Boolean(new Number(-1)) === true. Actual: ";
__n314["raw"] := "'#13: Boolean(new Number(-1)) === true. Actual: '";
__n313["left"] := __n314;
__n315 := {  };
__n315["type"] := "CallExpression";
__n316 := {  };
__n316["type"] := "Identifier";
__n316["name"] := "Boolean";
__n315["callee"] := __n316;
__n318 := {  };
__n318["type"] := "NewExpression";
__n319 := {  };
__n319["type"] := "Identifier";
__n319["name"] := "Number";
__n318["callee"] := __n319;
__n321 := {  };
__n321["type"] := "UnaryExpression";
__n321["operator"] := "-";
__n322 := {  };
__n322["type"] := "Literal";
__n322["value"] := 1.;
__n322["raw"] := "1";
__n321["argument"] := __n322;
__n321["prefix"] := true;
__n320 := [ __n321 ];
__n318["arguments"] := __n320;
__n317 := [ __n318 ];
__n315["arguments"] := __n317;
__n313["right"] := __n315;
__n312 := [ __n313 ];
__n310["arguments"] := __n312;
__n309["expression"] := __n310;
__n308 := [ __n309 ];
__n307["body"] := __n308;
__n296["consequent"] := __n307;
__n296["alternate"] := null;
__n323 := {  };
__n323["type"] := "IfStatement";
__n324 := {  };
__n324["type"] := "BinaryExpression";
__n324["operator"] := "!==";
__n325 := {  };
__n325["type"] := "CallExpression";
__n326 := {  };
__n326["type"] := "Identifier";
__n326["name"] := "Boolean";
__n325["callee"] := __n326;
__n328 := {  };
__n328["type"] := "NewExpression";
__n329 := {  };
__n329["type"] := "Identifier";
__n329["name"] := "Number";
__n328["callee"] := __n329;
__n331 := {  };
__n331["type"] := "Literal";
__n331["value"] := 1.;
__n331["raw"] := "1";
__n330 := [ __n331 ];
__n328["arguments"] := __n330;
__n327 := [ __n328 ];
__n325["arguments"] := __n327;
__n324["left"] := __n325;
__n332 := {  };
__n332["type"] := "Literal";
__n332["value"] := true;
__n332["raw"] := "true";
__n324["right"] := __n332;
__n323["test"] := __n324;
__n333 := {  };
__n333["type"] := "BlockStatement";
__n335 := {  };
__n335["type"] := "ExpressionStatement";
__n336 := {  };
__n336["type"] := "CallExpression";
__n337 := {  };
__n337["type"] := "Identifier";
__n337["name"] := "$ERROR";
__n336["callee"] := __n337;
__n339 := {  };
__n339["type"] := "BinaryExpression";
__n339["operator"] := "+";
__n340 := {  };
__n340["type"] := "Literal";
__n340["value"] := "#14: Boolean(new Number(1)) === true. Actual: ";
__n340["raw"] := "'#14: Boolean(new Number(1)) === true. Actual: '";
__n339["left"] := __n340;
__n341 := {  };
__n341["type"] := "CallExpression";
__n342 := {  };
__n342["type"] := "Identifier";
__n342["name"] := "Boolean";
__n341["callee"] := __n342;
__n344 := {  };
__n344["type"] := "NewExpression";
__n345 := {  };
__n345["type"] := "Identifier";
__n345["name"] := "Number";
__n344["callee"] := __n345;
__n347 := {  };
__n347["type"] := "Literal";
__n347["value"] := 1.;
__n347["raw"] := "1";
__n346 := [ __n347 ];
__n344["arguments"] := __n346;
__n343 := [ __n344 ];
__n341["arguments"] := __n343;
__n339["right"] := __n341;
__n338 := [ __n339 ];
__n336["arguments"] := __n338;
__n335["expression"] := __n336;
__n334 := [ __n335 ];
__n333["body"] := __n334;
__n323["consequent"] := __n333;
__n323["alternate"] := null;
__n348 := {  };
__n348["type"] := "IfStatement";
__n349 := {  };
__n349["type"] := "BinaryExpression";
__n349["operator"] := "!==";
__n350 := {  };
__n350["type"] := "CallExpression";
__n351 := {  };
__n351["type"] := "Identifier";
__n351["name"] := "Boolean";
__n350["callee"] := __n351;
__n353 := {  };
__n353["type"] := "NewExpression";
__n354 := {  };
__n354["type"] := "Identifier";
__n354["name"] := "Number";
__n353["callee"] := __n354;
__n356 := {  };
__n356["type"] := "MemberExpression";
__n357 := {  };
__n357["type"] := "Identifier";
__n357["name"] := "Number";
__n356["object"] := __n357;
__n358 := {  };
__n358["type"] := "Literal";
__n358["value"] := "POSITIVE_INFINITY";
__n358["raw"] := "\"POSITIVE_INFINITY\"";
__n356["property"] := __n358;
__n356["computed"] := true;
__n355 := [ __n356 ];
__n353["arguments"] := __n355;
__n352 := [ __n353 ];
__n350["arguments"] := __n352;
__n349["left"] := __n350;
__n359 := {  };
__n359["type"] := "Literal";
__n359["value"] := true;
__n359["raw"] := "true";
__n349["right"] := __n359;
__n348["test"] := __n349;
__n360 := {  };
__n360["type"] := "BlockStatement";
__n362 := {  };
__n362["type"] := "ExpressionStatement";
__n363 := {  };
__n363["type"] := "CallExpression";
__n364 := {  };
__n364["type"] := "Identifier";
__n364["name"] := "$ERROR";
__n363["callee"] := __n364;
__n366 := {  };
__n366["type"] := "BinaryExpression";
__n366["operator"] := "+";
__n367 := {  };
__n367["type"] := "Literal";
__n367["value"] := "#15: Boolean(new Number(Number.POSITIVE_INFINITY)) === true. Actual: ";
__n367["raw"] := "'#15: Boolean(new Number(Number.POSITIVE_INFINITY)) === true. Actual: '";
__n366["left"] := __n367;
__n368 := {  };
__n368["type"] := "CallExpression";
__n369 := {  };
__n369["type"] := "Identifier";
__n369["name"] := "Boolean";
__n368["callee"] := __n369;
__n371 := {  };
__n371["type"] := "NewExpression";
__n372 := {  };
__n372["type"] := "Identifier";
__n372["name"] := "Number";
__n371["callee"] := __n372;
__n374 := {  };
__n374["type"] := "MemberExpression";
__n375 := {  };
__n375["type"] := "Identifier";
__n375["name"] := "Number";
__n374["object"] := __n375;
__n376 := {  };
__n376["type"] := "Literal";
__n376["value"] := "POSITIVE_INFINITY";
__n376["raw"] := "\"POSITIVE_INFINITY\"";
__n374["property"] := __n376;
__n374["computed"] := true;
__n373 := [ __n374 ];
__n371["arguments"] := __n373;
__n370 := [ __n371 ];
__n368["arguments"] := __n370;
__n366["right"] := __n368;
__n365 := [ __n366 ];
__n363["arguments"] := __n365;
__n362["expression"] := __n363;
__n361 := [ __n362 ];
__n360["body"] := __n361;
__n348["consequent"] := __n360;
__n348["alternate"] := null;
__n377 := {  };
__n377["type"] := "IfStatement";
__n378 := {  };
__n378["type"] := "BinaryExpression";
__n378["operator"] := "!==";
__n379 := {  };
__n379["type"] := "CallExpression";
__n380 := {  };
__n380["type"] := "Identifier";
__n380["name"] := "Boolean";
__n379["callee"] := __n380;
__n382 := {  };
__n382["type"] := "NewExpression";
__n383 := {  };
__n383["type"] := "Identifier";
__n383["name"] := "Number";
__n382["callee"] := __n383;
__n385 := {  };
__n385["type"] := "MemberExpression";
__n386 := {  };
__n386["type"] := "Identifier";
__n386["name"] := "Number";
__n385["object"] := __n386;
__n387 := {  };
__n387["type"] := "Literal";
__n387["value"] := "NEGATIVE_INFINITY";
__n387["raw"] := "\"NEGATIVE_INFINITY\"";
__n385["property"] := __n387;
__n385["computed"] := true;
__n384 := [ __n385 ];
__n382["arguments"] := __n384;
__n381 := [ __n382 ];
__n379["arguments"] := __n381;
__n378["left"] := __n379;
__n388 := {  };
__n388["type"] := "Literal";
__n388["value"] := true;
__n388["raw"] := "true";
__n378["right"] := __n388;
__n377["test"] := __n378;
__n389 := {  };
__n389["type"] := "BlockStatement";
__n391 := {  };
__n391["type"] := "ExpressionStatement";
__n392 := {  };
__n392["type"] := "CallExpression";
__n393 := {  };
__n393["type"] := "Identifier";
__n393["name"] := "$ERROR";
__n392["callee"] := __n393;
__n395 := {  };
__n395["type"] := "BinaryExpression";
__n395["operator"] := "+";
__n396 := {  };
__n396["type"] := "Literal";
__n396["value"] := "#16: Boolean(new Number(Number.NEGATIVE_INFINITY)) === true. Actual: ";
__n396["raw"] := "'#16: Boolean(new Number(Number.NEGATIVE_INFINITY)) === true. Actual: '";
__n395["left"] := __n396;
__n397 := {  };
__n397["type"] := "CallExpression";
__n398 := {  };
__n398["type"] := "Identifier";
__n398["name"] := "Boolean";
__n397["callee"] := __n398;
__n400 := {  };
__n400["type"] := "NewExpression";
__n401 := {  };
__n401["type"] := "Identifier";
__n401["name"] := "Number";
__n400["callee"] := __n401;
__n403 := {  };
__n403["type"] := "MemberExpression";
__n404 := {  };
__n404["type"] := "Identifier";
__n404["name"] := "Number";
__n403["object"] := __n404;
__n405 := {  };
__n405["type"] := "Literal";
__n405["value"] := "NEGATIVE_INFINITY";
__n405["raw"] := "\"NEGATIVE_INFINITY\"";
__n403["property"] := __n405;
__n403["computed"] := true;
__n402 := [ __n403 ];
__n400["arguments"] := __n402;
__n399 := [ __n400 ];
__n397["arguments"] := __n399;
__n395["right"] := __n397;
__n394 := [ __n395 ];
__n392["arguments"] := __n394;
__n391["expression"] := __n392;
__n390 := [ __n391 ];
__n389["body"] := __n390;
__n377["consequent"] := __n389;
__n377["alternate"] := null;
__n406 := {  };
__n406["type"] := "IfStatement";
__n407 := {  };
__n407["type"] := "BinaryExpression";
__n407["operator"] := "!==";
__n408 := {  };
__n408["type"] := "CallExpression";
__n409 := {  };
__n409["type"] := "Identifier";
__n409["name"] := "Boolean";
__n408["callee"] := __n409;
__n411 := {  };
__n411["type"] := "NewExpression";
__n412 := {  };
__n412["type"] := "Identifier";
__n412["name"] := "Function";
__n411["callee"] := __n412;
__n413 := [  ];
__n411["arguments"] := __n413;
__n410 := [ __n411 ];
__n408["arguments"] := __n410;
__n407["left"] := __n408;
__n414 := {  };
__n414["type"] := "Literal";
__n414["value"] := true;
__n414["raw"] := "true";
__n407["right"] := __n414;
__n406["test"] := __n407;
__n415 := {  };
__n415["type"] := "BlockStatement";
__n417 := {  };
__n417["type"] := "ExpressionStatement";
__n418 := {  };
__n418["type"] := "CallExpression";
__n419 := {  };
__n419["type"] := "Identifier";
__n419["name"] := "$ERROR";
__n418["callee"] := __n419;
__n421 := {  };
__n421["type"] := "BinaryExpression";
__n421["operator"] := "+";
__n422 := {  };
__n422["type"] := "Literal";
__n422["value"] := "#17: Boolean(new Function()) === true. Actual: ";
__n422["raw"] := "'#17: Boolean(new Function()) === true. Actual: '";
__n421["left"] := __n422;
__n423 := {  };
__n423["type"] := "CallExpression";
__n424 := {  };
__n424["type"] := "Identifier";
__n424["name"] := "Boolean";
__n423["callee"] := __n424;
__n426 := {  };
__n426["type"] := "NewExpression";
__n427 := {  };
__n427["type"] := "Identifier";
__n427["name"] := "Function";
__n426["callee"] := __n427;
__n428 := [  ];
__n426["arguments"] := __n428;
__n425 := [ __n426 ];
__n423["arguments"] := __n425;
__n421["right"] := __n423;
__n420 := [ __n421 ];
__n418["arguments"] := __n420;
__n417["expression"] := __n418;
__n416 := [ __n417 ];
__n415["body"] := __n416;
__n406["consequent"] := __n415;
__n406["alternate"] := null;
__n429 := {  };
__n429["type"] := "IfStatement";
__n430 := {  };
__n430["type"] := "BinaryExpression";
__n430["operator"] := "!==";
__n431 := {  };
__n431["type"] := "CallExpression";
__n432 := {  };
__n432["type"] := "Identifier";
__n432["name"] := "Boolean";
__n431["callee"] := __n432;
__n434 := {  };
__n434["type"] := "NewExpression";
__n435 := {  };
__n435["type"] := "Identifier";
__n435["name"] := "Date";
__n434["callee"] := __n435;
__n436 := [  ];
__n434["arguments"] := __n436;
__n433 := [ __n434 ];
__n431["arguments"] := __n433;
__n430["left"] := __n431;
__n437 := {  };
__n437["type"] := "Literal";
__n437["value"] := true;
__n437["raw"] := "true";
__n430["right"] := __n437;
__n429["test"] := __n430;
__n438 := {  };
__n438["type"] := "BlockStatement";
__n440 := {  };
__n440["type"] := "ExpressionStatement";
__n441 := {  };
__n441["type"] := "CallExpression";
__n442 := {  };
__n442["type"] := "Identifier";
__n442["name"] := "$ERROR";
__n441["callee"] := __n442;
__n444 := {  };
__n444["type"] := "BinaryExpression";
__n444["operator"] := "+";
__n445 := {  };
__n445["type"] := "Literal";
__n445["value"] := "#18: Boolean(new Date()) === true. Actual: ";
__n445["raw"] := "'#18: Boolean(new Date()) === true. Actual: '";
__n444["left"] := __n445;
__n446 := {  };
__n446["type"] := "CallExpression";
__n447 := {  };
__n447["type"] := "Identifier";
__n447["name"] := "Boolean";
__n446["callee"] := __n447;
__n449 := {  };
__n449["type"] := "NewExpression";
__n450 := {  };
__n450["type"] := "Identifier";
__n450["name"] := "Date";
__n449["callee"] := __n450;
__n451 := [  ];
__n449["arguments"] := __n451;
__n448 := [ __n449 ];
__n446["arguments"] := __n448;
__n444["right"] := __n446;
__n443 := [ __n444 ];
__n441["arguments"] := __n443;
__n440["expression"] := __n441;
__n439 := [ __n440 ];
__n438["body"] := __n439;
__n429["consequent"] := __n438;
__n429["alternate"] := null;
__n452 := {  };
__n452["type"] := "IfStatement";
__n453 := {  };
__n453["type"] := "BinaryExpression";
__n453["operator"] := "!==";
__n454 := {  };
__n454["type"] := "CallExpression";
__n455 := {  };
__n455["type"] := "Identifier";
__n455["name"] := "Boolean";
__n454["callee"] := __n455;
__n457 := {  };
__n457["type"] := "NewExpression";
__n458 := {  };
__n458["type"] := "Identifier";
__n458["name"] := "Date";
__n457["callee"] := __n458;
__n460 := {  };
__n460["type"] := "Literal";
__n460["value"] := 0.;
__n460["raw"] := "0";
__n459 := [ __n460 ];
__n457["arguments"] := __n459;
__n456 := [ __n457 ];
__n454["arguments"] := __n456;
__n453["left"] := __n454;
__n461 := {  };
__n461["type"] := "Literal";
__n461["value"] := true;
__n461["raw"] := "true";
__n453["right"] := __n461;
__n452["test"] := __n453;
__n462 := {  };
__n462["type"] := "BlockStatement";
__n464 := {  };
__n464["type"] := "ExpressionStatement";
__n465 := {  };
__n465["type"] := "CallExpression";
__n466 := {  };
__n466["type"] := "Identifier";
__n466["name"] := "$ERROR";
__n465["callee"] := __n466;
__n468 := {  };
__n468["type"] := "BinaryExpression";
__n468["operator"] := "+";
__n469 := {  };
__n469["type"] := "Literal";
__n469["value"] := "#19: Boolean(new Date(0)) === true. Actual: ";
__n469["raw"] := "'#19: Boolean(new Date(0)) === true. Actual: '";
__n468["left"] := __n469;
__n470 := {  };
__n470["type"] := "CallExpression";
__n471 := {  };
__n471["type"] := "Identifier";
__n471["name"] := "Boolean";
__n470["callee"] := __n471;
__n473 := {  };
__n473["type"] := "NewExpression";
__n474 := {  };
__n474["type"] := "Identifier";
__n474["name"] := "Date";
__n473["callee"] := __n474;
__n476 := {  };
__n476["type"] := "Literal";
__n476["value"] := 0.;
__n476["raw"] := "0";
__n475 := [ __n476 ];
__n473["arguments"] := __n475;
__n472 := [ __n473 ];
__n470["arguments"] := __n472;
__n468["right"] := __n470;
__n467 := [ __n468 ];
__n465["arguments"] := __n467;
__n464["expression"] := __n465;
__n463 := [ __n464 ];
__n462["body"] := __n463;
__n452["consequent"] := __n462;
__n452["alternate"] := null;
__n1 := [ __n2, __n25, __n50, __n73, __n98, __n123, __n146, __n169, __n192, __n219, __n244, __n267, __n296, __n323, __n348, __n377, __n406, __n429, __n452 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n477 := [  ];
__n0["variableDeclarations"] := __n477;
__n478 := [  ];
__n0["functionDeclarations"] := __n478;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}