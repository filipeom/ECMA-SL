function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "VariableDeclaration";
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "s1";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "NewExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Date";
__n9["callee"] := __n10;
__n11 := [  ];
__n9["arguments"] := __n11;
__n7["init"] := __n9;
__n6 := [ __n7 ];
__n5["declarations"] := __n6;
__n5["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "AssignmentExpression";
__n13["operator"] := "=";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "s1";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "valueOf";
__n16["raw"] := "\"valueOf\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["left"] := __n14;
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Boolean";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "prototype";
__n20["raw"] := "\"prototype\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["object"] := __n18;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "valueOf";
__n21["raw"] := "\"valueOf\"";
__n17["property"] := __n21;
__n17["computed"] := true;
__n13["right"] := __n17;
__n12["expression"] := __n13;
__n22 := {  };
__n22["type"] := "VariableDeclaration";
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "v1";
__n24["id"] := __n25;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "s1";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "valueOf";
__n29["raw"] := "\"valueOf\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n30 := [  ];
__n26["arguments"] := __n30;
__n24["init"] := __n26;
__n23 := [ __n24 ];
__n22["declarations"] := __n23;
__n22["kind"] := "var";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "$ERROR";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "#1: Boolean.prototype.valueOf on not a Boolean object should throw TypeError";
__n35["raw"] := "'#1: Boolean.prototype.valueOf on not a Boolean object should throw TypeError'";
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n4 := [ __n5, __n12, __n22, __n31 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n36 := {  };
__n36["type"] := "CatchClause";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "e";
__n36["param"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "UnaryExpression";
__n41["operator"] := "!";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "instanceof";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "e";
__n42["left"] := __n43;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "TypeError";
__n42["right"] := __n44;
__n41["argument"] := __n42;
__n41["prefix"] := true;
__n40["test"] := __n41;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "$ERROR";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "+";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "#1: Boolean.prototype.valueOf on not a Boolean object should throw TypeError, not ";
__n52["raw"] := "'#1: Boolean.prototype.valueOf on not a Boolean object should throw TypeError, not '";
__n51["left"] := __n52;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "e";
__n51["right"] := __n53;
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n40["consequent"] := __n45;
__n40["alternate"] := null;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n36["body"] := __n38;
__n2["handler"] := __n36;
__n2["finalizer"] := null;
__n54 := {  };
__n54["type"] := "TryStatement";
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "VariableDeclaration";
__n59 := {  };
__n59["type"] := "VariableDeclarator";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "s2";
__n59["id"] := __n60;
__n61 := {  };
__n61["type"] := "NewExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "Date";
__n61["callee"] := __n62;
__n63 := [  ];
__n61["arguments"] := __n63;
__n59["init"] := __n61;
__n58 := [ __n59 ];
__n57["declarations"] := __n58;
__n57["kind"] := "var";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "AssignmentExpression";
__n65["operator"] := "=";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "s2";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "myValueOf";
__n68["raw"] := "\"myValueOf\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["left"] := __n66;
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "Boolean";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "prototype";
__n72["raw"] := "\"prototype\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n69["object"] := __n70;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "valueOf";
__n73["raw"] := "\"valueOf\"";
__n69["property"] := __n73;
__n69["computed"] := true;
__n65["right"] := __n69;
__n64["expression"] := __n65;
__n74 := {  };
__n74["type"] := "VariableDeclaration";
__n76 := {  };
__n76["type"] := "VariableDeclarator";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "v2";
__n76["id"] := __n77;
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "s2";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "myValueOf";
__n81["raw"] := "\"myValueOf\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n78["callee"] := __n79;
__n82 := [  ];
__n78["arguments"] := __n82;
__n76["init"] := __n78;
__n75 := [ __n76 ];
__n74["declarations"] := __n75;
__n74["kind"] := "var";
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "$ERROR";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#2: Boolean.prototype.valueOf on not a Boolean object should throw TypeError";
__n87["raw"] := "'#2: Boolean.prototype.valueOf on not a Boolean object should throw TypeError'";
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n56 := [ __n57, __n64, __n74, __n83 ];
__n55["body"] := __n56;
__n54["block"] := __n55;
__n88 := {  };
__n88["type"] := "CatchClause";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "e";
__n88["param"] := __n89;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "IfStatement";
__n93 := {  };
__n93["type"] := "UnaryExpression";
__n93["operator"] := "!";
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "instanceof";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "e";
__n94["left"] := __n95;
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "TypeError";
__n94["right"] := __n96;
__n93["argument"] := __n94;
__n93["prefix"] := true;
__n92["test"] := __n93;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "$ERROR";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "+";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "#2: Boolean.prototype.valueOf on not a Boolean object should throw TypeError, not ";
__n104["raw"] := "'#2: Boolean.prototype.valueOf on not a Boolean object should throw TypeError, not '";
__n103["left"] := __n104;
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "e";
__n103["right"] := __n105;
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["expression"] := __n100;
__n98 := [ __n99 ];
__n97["body"] := __n98;
__n92["consequent"] := __n97;
__n92["alternate"] := null;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n88["body"] := __n90;
__n54["handler"] := __n88;
__n54["finalizer"] := null;
__n1 := [ __n2, __n54 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n106 := [ "s1", "v1", "s2", "v2" ];
__n0["variableDeclarations"] := __n106;
__n107 := [  ];
__n0["functionDeclarations"] := __n107;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}