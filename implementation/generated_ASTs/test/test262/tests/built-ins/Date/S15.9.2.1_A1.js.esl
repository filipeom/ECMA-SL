function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "UnaryExpression";
__n4["operator"] := "typeof";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Date";
__n5["callee"] := __n6;
__n7 := [  ];
__n5["arguments"] := __n7;
__n4["argument"] := __n5;
__n4["prefix"] := true;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "string";
__n8["raw"] := "\"string\"";
__n3["right"] := __n8;
__n2["test"] := __n3;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "$ERROR";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "+";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "#1: typeof Date() should be \"string\", actual is ";
__n16["raw"] := "'#1: typeof Date() should be \"string\", actual is '";
__n15["left"] := __n16;
__n17 := {  };
__n17["type"] := "UnaryExpression";
__n17["operator"] := "typeof";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Date";
__n18["callee"] := __n19;
__n20 := [  ];
__n18["arguments"] := __n20;
__n17["argument"] := __n18;
__n17["prefix"] := true;
__n15["right"] := __n17;
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n2["consequent"] := __n9;
__n2["alternate"] := null;
__n21 := {  };
__n21["type"] := "IfStatement";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "!==";
__n23 := {  };
__n23["type"] := "UnaryExpression";
__n23["operator"] := "typeof";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Date";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 1.;
__n27["raw"] := "1";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["argument"] := __n24;
__n23["prefix"] := true;
__n22["left"] := __n23;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "string";
__n28["raw"] := "\"string\"";
__n22["right"] := __n28;
__n21["test"] := __n22;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "$ERROR";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "+";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "#2: typeof Date(1) should be \"string\", actual is ";
__n36["raw"] := "'#2: typeof Date(1) should be \"string\", actual is '";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "typeof";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "Date";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 1.;
__n41["raw"] := "1";
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n35["right"] := __n37;
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n21["consequent"] := __n29;
__n21["alternate"] := null;
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "!==";
__n44 := {  };
__n44["type"] := "UnaryExpression";
__n44["operator"] := "typeof";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "Date";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1970.;
__n48["raw"] := "1970";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.;
__n49["raw"] := "1";
__n47 := [ __n48, __n49 ];
__n45["arguments"] := __n47;
__n44["argument"] := __n45;
__n44["prefix"] := true;
__n43["left"] := __n44;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "string";
__n50["raw"] := "\"string\"";
__n43["right"] := __n50;
__n42["test"] := __n43;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "$ERROR";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "+";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "#3: typeof Date(1970, 1) should be \"string\", actual is ";
__n58["raw"] := "'#3: typeof Date(1970, 1) should be \"string\", actual is '";
__n57["left"] := __n58;
__n59 := {  };
__n59["type"] := "UnaryExpression";
__n59["operator"] := "typeof";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "Date";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 1970.;
__n63["raw"] := "1970";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 1.;
__n64["raw"] := "1";
__n62 := [ __n63, __n64 ];
__n60["arguments"] := __n62;
__n59["argument"] := __n60;
__n59["prefix"] := true;
__n57["right"] := __n59;
__n56 := [ __n57 ];
__n54["arguments"] := __n56;
__n53["expression"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n42["consequent"] := __n51;
__n42["alternate"] := null;
__n65 := {  };
__n65["type"] := "IfStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "UnaryExpression";
__n67["operator"] := "typeof";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "Date";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 1970.;
__n71["raw"] := "1970";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.;
__n72["raw"] := "1";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 1.;
__n73["raw"] := "1";
__n70 := [ __n71, __n72, __n73 ];
__n68["arguments"] := __n70;
__n67["argument"] := __n68;
__n67["prefix"] := true;
__n66["left"] := __n67;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "string";
__n74["raw"] := "\"string\"";
__n66["right"] := __n74;
__n65["test"] := __n66;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "$ERROR";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "+";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "#4: typeof Date(1970, 1, 1) should be \"string\", actual is ";
__n82["raw"] := "'#4: typeof Date(1970, 1, 1) should be \"string\", actual is '";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "UnaryExpression";
__n83["operator"] := "typeof";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "Date";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 1970.;
__n87["raw"] := "1970";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 1.;
__n88["raw"] := "1";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 1.;
__n89["raw"] := "1";
__n86 := [ __n87, __n88, __n89 ];
__n84["arguments"] := __n86;
__n83["argument"] := __n84;
__n83["prefix"] := true;
__n81["right"] := __n83;
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n65["consequent"] := __n75;
__n65["alternate"] := null;
__n90 := {  };
__n90["type"] := "IfStatement";
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "!==";
__n92 := {  };
__n92["type"] := "UnaryExpression";
__n92["operator"] := "typeof";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "Date";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := 1970.;
__n96["raw"] := "1970";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 1.;
__n97["raw"] := "1";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 1.;
__n98["raw"] := "1";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 1.;
__n99["raw"] := "1";
__n95 := [ __n96, __n97, __n98, __n99 ];
__n93["arguments"] := __n95;
__n92["argument"] := __n93;
__n92["prefix"] := true;
__n91["left"] := __n92;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "string";
__n100["raw"] := "\"string\"";
__n91["right"] := __n100;
__n90["test"] := __n91;
__n101 := {  };
__n101["type"] := "BlockStatement";
__n103 := {  };
__n103["type"] := "ExpressionStatement";
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "$ERROR";
__n104["callee"] := __n105;
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "+";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "#5: typeof Date(1970, 1, 1, 1) should be \"string\", actual is ";
__n108["raw"] := "'#5: typeof Date(1970, 1, 1, 1) should be \"string\", actual is '";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "UnaryExpression";
__n109["operator"] := "typeof";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "Date";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 1970.;
__n113["raw"] := "1970";
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := 1.;
__n114["raw"] := "1";
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := 1.;
__n115["raw"] := "1";
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 1.;
__n116["raw"] := "1";
__n112 := [ __n113, __n114, __n115, __n116 ];
__n110["arguments"] := __n112;
__n109["argument"] := __n110;
__n109["prefix"] := true;
__n107["right"] := __n109;
__n106 := [ __n107 ];
__n104["arguments"] := __n106;
__n103["expression"] := __n104;
__n102 := [ __n103 ];
__n101["body"] := __n102;
__n90["consequent"] := __n101;
__n90["alternate"] := null;
__n117 := {  };
__n117["type"] := "IfStatement";
__n118 := {  };
__n118["type"] := "BinaryExpression";
__n118["operator"] := "!==";
__n119 := {  };
__n119["type"] := "UnaryExpression";
__n119["operator"] := "typeof";
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "Date";
__n120["callee"] := __n121;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 1970.;
__n123["raw"] := "1970";
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 1.;
__n124["raw"] := "1";
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := 1.;
__n125["raw"] := "1";
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := 1.;
__n126["raw"] := "1";
__n122 := [ __n123, __n124, __n125, __n126 ];
__n120["arguments"] := __n122;
__n119["argument"] := __n120;
__n119["prefix"] := true;
__n118["left"] := __n119;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "string";
__n127["raw"] := "\"string\"";
__n118["right"] := __n127;
__n117["test"] := __n118;
__n128 := {  };
__n128["type"] := "BlockStatement";
__n130 := {  };
__n130["type"] := "ExpressionStatement";
__n131 := {  };
__n131["type"] := "CallExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "$ERROR";
__n131["callee"] := __n132;
__n134 := {  };
__n134["type"] := "BinaryExpression";
__n134["operator"] := "+";
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "#7: typeof Date(1970, 1, 1, 1) should be \"string\", actual is ";
__n135["raw"] := "'#7: typeof Date(1970, 1, 1, 1) should be \"string\", actual is '";
__n134["left"] := __n135;
__n136 := {  };
__n136["type"] := "UnaryExpression";
__n136["operator"] := "typeof";
__n137 := {  };
__n137["type"] := "CallExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "Date";
__n137["callee"] := __n138;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := 1970.;
__n140["raw"] := "1970";
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := 1.;
__n141["raw"] := "1";
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := 1.;
__n142["raw"] := "1";
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := 1.;
__n143["raw"] := "1";
__n139 := [ __n140, __n141, __n142, __n143 ];
__n137["arguments"] := __n139;
__n136["argument"] := __n137;
__n136["prefix"] := true;
__n134["right"] := __n136;
__n133 := [ __n134 ];
__n131["arguments"] := __n133;
__n130["expression"] := __n131;
__n129 := [ __n130 ];
__n128["body"] := __n129;
__n117["consequent"] := __n128;
__n117["alternate"] := null;
__n144 := {  };
__n144["type"] := "IfStatement";
__n145 := {  };
__n145["type"] := "BinaryExpression";
__n145["operator"] := "!==";
__n146 := {  };
__n146["type"] := "UnaryExpression";
__n146["operator"] := "typeof";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "Date";
__n147["callee"] := __n148;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 1970.;
__n150["raw"] := "1970";
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := 1.;
__n151["raw"] := "1";
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := 1.;
__n152["raw"] := "1";
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := 1.;
__n153["raw"] := "1";
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := 0.;
__n154["raw"] := "0";
__n149 := [ __n150, __n151, __n152, __n153, __n154 ];
__n147["arguments"] := __n149;
__n146["argument"] := __n147;
__n146["prefix"] := true;
__n145["left"] := __n146;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := "string";
__n155["raw"] := "\"string\"";
__n145["right"] := __n155;
__n144["test"] := __n145;
__n156 := {  };
__n156["type"] := "BlockStatement";
__n158 := {  };
__n158["type"] := "ExpressionStatement";
__n159 := {  };
__n159["type"] := "CallExpression";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "$ERROR";
__n159["callee"] := __n160;
__n162 := {  };
__n162["type"] := "BinaryExpression";
__n162["operator"] := "+";
__n163 := {  };
__n163["type"] := "Literal";
__n163["value"] := "#8: typeof Date(1970, 1, 1, 1, 0) should be \"string\", actual is ";
__n163["raw"] := "'#8: typeof Date(1970, 1, 1, 1, 0) should be \"string\", actual is '";
__n162["left"] := __n163;
__n164 := {  };
__n164["type"] := "UnaryExpression";
__n164["operator"] := "typeof";
__n165 := {  };
__n165["type"] := "CallExpression";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "Date";
__n165["callee"] := __n166;
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := 1970.;
__n168["raw"] := "1970";
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := 1.;
__n169["raw"] := "1";
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := 1.;
__n170["raw"] := "1";
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := 1.;
__n171["raw"] := "1";
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := 0.;
__n172["raw"] := "0";
__n167 := [ __n168, __n169, __n170, __n171, __n172 ];
__n165["arguments"] := __n167;
__n164["argument"] := __n165;
__n164["prefix"] := true;
__n162["right"] := __n164;
__n161 := [ __n162 ];
__n159["arguments"] := __n161;
__n158["expression"] := __n159;
__n157 := [ __n158 ];
__n156["body"] := __n157;
__n144["consequent"] := __n156;
__n144["alternate"] := null;
__n173 := {  };
__n173["type"] := "IfStatement";
__n174 := {  };
__n174["type"] := "BinaryExpression";
__n174["operator"] := "!==";
__n175 := {  };
__n175["type"] := "UnaryExpression";
__n175["operator"] := "typeof";
__n176 := {  };
__n176["type"] := "CallExpression";
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "Date";
__n176["callee"] := __n177;
__n179 := {  };
__n179["type"] := "Literal";
__n179["value"] := 1970.;
__n179["raw"] := "1970";
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := 1.;
__n180["raw"] := "1";
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := 1.;
__n181["raw"] := "1";
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := 1.;
__n182["raw"] := "1";
__n183 := {  };
__n183["type"] := "Literal";
__n183["value"] := 0.;
__n183["raw"] := "0";
__n184 := {  };
__n184["type"] := "Literal";
__n184["value"] := 0.;
__n184["raw"] := "0";
__n178 := [ __n179, __n180, __n181, __n182, __n183, __n184 ];
__n176["arguments"] := __n178;
__n175["argument"] := __n176;
__n175["prefix"] := true;
__n174["left"] := __n175;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "string";
__n185["raw"] := "\"string\"";
__n174["right"] := __n185;
__n173["test"] := __n174;
__n186 := {  };
__n186["type"] := "BlockStatement";
__n188 := {  };
__n188["type"] := "ExpressionStatement";
__n189 := {  };
__n189["type"] := "CallExpression";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "$ERROR";
__n189["callee"] := __n190;
__n192 := {  };
__n192["type"] := "BinaryExpression";
__n192["operator"] := "+";
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := "#9: typeof Date(1970, 1, 1, 1, 0, 0) should be \"string\", actual is ";
__n193["raw"] := "'#9: typeof Date(1970, 1, 1, 1, 0, 0) should be \"string\", actual is '";
__n192["left"] := __n193;
__n194 := {  };
__n194["type"] := "UnaryExpression";
__n194["operator"] := "typeof";
__n195 := {  };
__n195["type"] := "CallExpression";
__n196 := {  };
__n196["type"] := "Identifier";
__n196["name"] := "Date";
__n195["callee"] := __n196;
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := 1970.;
__n198["raw"] := "1970";
__n199 := {  };
__n199["type"] := "Literal";
__n199["value"] := 1.;
__n199["raw"] := "1";
__n200 := {  };
__n200["type"] := "Literal";
__n200["value"] := 1.;
__n200["raw"] := "1";
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := 1.;
__n201["raw"] := "1";
__n202 := {  };
__n202["type"] := "Literal";
__n202["value"] := 0.;
__n202["raw"] := "0";
__n203 := {  };
__n203["type"] := "Literal";
__n203["value"] := 0.;
__n203["raw"] := "0";
__n197 := [ __n198, __n199, __n200, __n201, __n202, __n203 ];
__n195["arguments"] := __n197;
__n194["argument"] := __n195;
__n194["prefix"] := true;
__n192["right"] := __n194;
__n191 := [ __n192 ];
__n189["arguments"] := __n191;
__n188["expression"] := __n189;
__n187 := [ __n188 ];
__n186["body"] := __n187;
__n173["consequent"] := __n186;
__n173["alternate"] := null;
__n204 := {  };
__n204["type"] := "IfStatement";
__n205 := {  };
__n205["type"] := "BinaryExpression";
__n205["operator"] := "!==";
__n206 := {  };
__n206["type"] := "UnaryExpression";
__n206["operator"] := "typeof";
__n207 := {  };
__n207["type"] := "CallExpression";
__n208 := {  };
__n208["type"] := "Identifier";
__n208["name"] := "Date";
__n207["callee"] := __n208;
__n210 := {  };
__n210["type"] := "Literal";
__n210["value"] := 1970.;
__n210["raw"] := "1970";
__n211 := {  };
__n211["type"] := "Literal";
__n211["value"] := 1.;
__n211["raw"] := "1";
__n212 := {  };
__n212["type"] := "Literal";
__n212["value"] := 1.;
__n212["raw"] := "1";
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := 1.;
__n213["raw"] := "1";
__n214 := {  };
__n214["type"] := "Literal";
__n214["value"] := 0.;
__n214["raw"] := "0";
__n215 := {  };
__n215["type"] := "Literal";
__n215["value"] := 0.;
__n215["raw"] := "0";
__n216 := {  };
__n216["type"] := "Literal";
__n216["value"] := 0.;
__n216["raw"] := "0";
__n209 := [ __n210, __n211, __n212, __n213, __n214, __n215, __n216 ];
__n207["arguments"] := __n209;
__n206["argument"] := __n207;
__n206["prefix"] := true;
__n205["left"] := __n206;
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := "string";
__n217["raw"] := "\"string\"";
__n205["right"] := __n217;
__n204["test"] := __n205;
__n218 := {  };
__n218["type"] := "BlockStatement";
__n220 := {  };
__n220["type"] := "ExpressionStatement";
__n221 := {  };
__n221["type"] := "CallExpression";
__n222 := {  };
__n222["type"] := "Identifier";
__n222["name"] := "$ERROR";
__n221["callee"] := __n222;
__n224 := {  };
__n224["type"] := "BinaryExpression";
__n224["operator"] := "+";
__n225 := {  };
__n225["type"] := "Literal";
__n225["value"] := "#10: typeof Date(1970, 1, 1, 1, 0, 0, 0) should be \"string\", actual is ";
__n225["raw"] := "'#10: typeof Date(1970, 1, 1, 1, 0, 0, 0) should be \"string\", actual is '";
__n224["left"] := __n225;
__n226 := {  };
__n226["type"] := "UnaryExpression";
__n226["operator"] := "typeof";
__n227 := {  };
__n227["type"] := "CallExpression";
__n228 := {  };
__n228["type"] := "Identifier";
__n228["name"] := "Date";
__n227["callee"] := __n228;
__n230 := {  };
__n230["type"] := "Literal";
__n230["value"] := 1970.;
__n230["raw"] := "1970";
__n231 := {  };
__n231["type"] := "Literal";
__n231["value"] := 1.;
__n231["raw"] := "1";
__n232 := {  };
__n232["type"] := "Literal";
__n232["value"] := 1.;
__n232["raw"] := "1";
__n233 := {  };
__n233["type"] := "Literal";
__n233["value"] := 1.;
__n233["raw"] := "1";
__n234 := {  };
__n234["type"] := "Literal";
__n234["value"] := 0.;
__n234["raw"] := "0";
__n235 := {  };
__n235["type"] := "Literal";
__n235["value"] := 0.;
__n235["raw"] := "0";
__n236 := {  };
__n236["type"] := "Literal";
__n236["value"] := 0.;
__n236["raw"] := "0";
__n229 := [ __n230, __n231, __n232, __n233, __n234, __n235, __n236 ];
__n227["arguments"] := __n229;
__n226["argument"] := __n227;
__n226["prefix"] := true;
__n224["right"] := __n226;
__n223 := [ __n224 ];
__n221["arguments"] := __n223;
__n220["expression"] := __n221;
__n219 := [ __n220 ];
__n218["body"] := __n219;
__n204["consequent"] := __n218;
__n204["alternate"] := null;
__n237 := {  };
__n237["type"] := "IfStatement";
__n238 := {  };
__n238["type"] := "BinaryExpression";
__n238["operator"] := "!==";
__n239 := {  };
__n239["type"] := "UnaryExpression";
__n239["operator"] := "typeof";
__n240 := {  };
__n240["type"] := "CallExpression";
__n241 := {  };
__n241["type"] := "Identifier";
__n241["name"] := "Date";
__n240["callee"] := __n241;
__n243 := {  };
__n243["type"] := "MemberExpression";
__n244 := {  };
__n244["type"] := "Identifier";
__n244["name"] := "Number";
__n243["object"] := __n244;
__n245 := {  };
__n245["type"] := "Literal";
__n245["value"] := "NaN";
__n245["raw"] := "\"NaN\"";
__n243["property"] := __n245;
__n243["computed"] := true;
__n242 := [ __n243 ];
__n240["arguments"] := __n242;
__n239["argument"] := __n240;
__n239["prefix"] := true;
__n238["left"] := __n239;
__n246 := {  };
__n246["type"] := "Literal";
__n246["value"] := "string";
__n246["raw"] := "\"string\"";
__n238["right"] := __n246;
__n237["test"] := __n238;
__n247 := {  };
__n247["type"] := "BlockStatement";
__n249 := {  };
__n249["type"] := "ExpressionStatement";
__n250 := {  };
__n250["type"] := "CallExpression";
__n251 := {  };
__n251["type"] := "Identifier";
__n251["name"] := "$ERROR";
__n250["callee"] := __n251;
__n253 := {  };
__n253["type"] := "BinaryExpression";
__n253["operator"] := "+";
__n254 := {  };
__n254["type"] := "Literal";
__n254["value"] := "#11: typeof Date(Number.NaN) should be \"string\", actual is ";
__n254["raw"] := "'#11: typeof Date(Number.NaN) should be \"string\", actual is '";
__n253["left"] := __n254;
__n255 := {  };
__n255["type"] := "UnaryExpression";
__n255["operator"] := "typeof";
__n256 := {  };
__n256["type"] := "CallExpression";
__n257 := {  };
__n257["type"] := "Identifier";
__n257["name"] := "Date";
__n256["callee"] := __n257;
__n259 := {  };
__n259["type"] := "MemberExpression";
__n260 := {  };
__n260["type"] := "Identifier";
__n260["name"] := "Number";
__n259["object"] := __n260;
__n261 := {  };
__n261["type"] := "Literal";
__n261["value"] := "NaN";
__n261["raw"] := "\"NaN\"";
__n259["property"] := __n261;
__n259["computed"] := true;
__n258 := [ __n259 ];
__n256["arguments"] := __n258;
__n255["argument"] := __n256;
__n255["prefix"] := true;
__n253["right"] := __n255;
__n252 := [ __n253 ];
__n250["arguments"] := __n252;
__n249["expression"] := __n250;
__n248 := [ __n249 ];
__n247["body"] := __n248;
__n237["consequent"] := __n247;
__n237["alternate"] := null;
__n262 := {  };
__n262["type"] := "IfStatement";
__n263 := {  };
__n263["type"] := "BinaryExpression";
__n263["operator"] := "!==";
__n264 := {  };
__n264["type"] := "UnaryExpression";
__n264["operator"] := "typeof";
__n265 := {  };
__n265["type"] := "CallExpression";
__n266 := {  };
__n266["type"] := "Identifier";
__n266["name"] := "Date";
__n265["callee"] := __n266;
__n268 := {  };
__n268["type"] := "MemberExpression";
__n269 := {  };
__n269["type"] := "Identifier";
__n269["name"] := "Number";
__n268["object"] := __n269;
__n270 := {  };
__n270["type"] := "Literal";
__n270["value"] := "POSITIVE_INFINITY";
__n270["raw"] := "\"POSITIVE_INFINITY\"";
__n268["property"] := __n270;
__n268["computed"] := true;
__n267 := [ __n268 ];
__n265["arguments"] := __n267;
__n264["argument"] := __n265;
__n264["prefix"] := true;
__n263["left"] := __n264;
__n271 := {  };
__n271["type"] := "Literal";
__n271["value"] := "string";
__n271["raw"] := "\"string\"";
__n263["right"] := __n271;
__n262["test"] := __n263;
__n272 := {  };
__n272["type"] := "BlockStatement";
__n274 := {  };
__n274["type"] := "ExpressionStatement";
__n275 := {  };
__n275["type"] := "CallExpression";
__n276 := {  };
__n276["type"] := "Identifier";
__n276["name"] := "$ERROR";
__n275["callee"] := __n276;
__n278 := {  };
__n278["type"] := "BinaryExpression";
__n278["operator"] := "+";
__n279 := {  };
__n279["type"] := "Literal";
__n279["value"] := "#12: typeof Date(Number.POSITIVE_INFINITY) should be \"string\", actual is ";
__n279["raw"] := "'#12: typeof Date(Number.POSITIVE_INFINITY) should be \"string\", actual is '";
__n278["left"] := __n279;
__n280 := {  };
__n280["type"] := "UnaryExpression";
__n280["operator"] := "typeof";
__n281 := {  };
__n281["type"] := "CallExpression";
__n282 := {  };
__n282["type"] := "Identifier";
__n282["name"] := "Date";
__n281["callee"] := __n282;
__n284 := {  };
__n284["type"] := "MemberExpression";
__n285 := {  };
__n285["type"] := "Identifier";
__n285["name"] := "Number";
__n284["object"] := __n285;
__n286 := {  };
__n286["type"] := "Literal";
__n286["value"] := "POSITIVE_INFINITY";
__n286["raw"] := "\"POSITIVE_INFINITY\"";
__n284["property"] := __n286;
__n284["computed"] := true;
__n283 := [ __n284 ];
__n281["arguments"] := __n283;
__n280["argument"] := __n281;
__n280["prefix"] := true;
__n278["right"] := __n280;
__n277 := [ __n278 ];
__n275["arguments"] := __n277;
__n274["expression"] := __n275;
__n273 := [ __n274 ];
__n272["body"] := __n273;
__n262["consequent"] := __n272;
__n262["alternate"] := null;
__n287 := {  };
__n287["type"] := "IfStatement";
__n288 := {  };
__n288["type"] := "BinaryExpression";
__n288["operator"] := "!==";
__n289 := {  };
__n289["type"] := "UnaryExpression";
__n289["operator"] := "typeof";
__n290 := {  };
__n290["type"] := "CallExpression";
__n291 := {  };
__n291["type"] := "Identifier";
__n291["name"] := "Date";
__n290["callee"] := __n291;
__n293 := {  };
__n293["type"] := "MemberExpression";
__n294 := {  };
__n294["type"] := "Identifier";
__n294["name"] := "Number";
__n293["object"] := __n294;
__n295 := {  };
__n295["type"] := "Literal";
__n295["value"] := "NEGATIVE_INFINITY";
__n295["raw"] := "\"NEGATIVE_INFINITY\"";
__n293["property"] := __n295;
__n293["computed"] := true;
__n292 := [ __n293 ];
__n290["arguments"] := __n292;
__n289["argument"] := __n290;
__n289["prefix"] := true;
__n288["left"] := __n289;
__n296 := {  };
__n296["type"] := "Literal";
__n296["value"] := "string";
__n296["raw"] := "\"string\"";
__n288["right"] := __n296;
__n287["test"] := __n288;
__n297 := {  };
__n297["type"] := "BlockStatement";
__n299 := {  };
__n299["type"] := "ExpressionStatement";
__n300 := {  };
__n300["type"] := "CallExpression";
__n301 := {  };
__n301["type"] := "Identifier";
__n301["name"] := "$ERROR";
__n300["callee"] := __n301;
__n303 := {  };
__n303["type"] := "BinaryExpression";
__n303["operator"] := "+";
__n304 := {  };
__n304["type"] := "Literal";
__n304["value"] := "#13: typeof Date(Number.NEGATIVE_INFINITY) should be \"string\", actual is ";
__n304["raw"] := "'#13: typeof Date(Number.NEGATIVE_INFINITY) should be \"string\", actual is '";
__n303["left"] := __n304;
__n305 := {  };
__n305["type"] := "UnaryExpression";
__n305["operator"] := "typeof";
__n306 := {  };
__n306["type"] := "CallExpression";
__n307 := {  };
__n307["type"] := "Identifier";
__n307["name"] := "Date";
__n306["callee"] := __n307;
__n309 := {  };
__n309["type"] := "MemberExpression";
__n310 := {  };
__n310["type"] := "Identifier";
__n310["name"] := "Number";
__n309["object"] := __n310;
__n311 := {  };
__n311["type"] := "Literal";
__n311["value"] := "NEGATIVE_INFINITY";
__n311["raw"] := "\"NEGATIVE_INFINITY\"";
__n309["property"] := __n311;
__n309["computed"] := true;
__n308 := [ __n309 ];
__n306["arguments"] := __n308;
__n305["argument"] := __n306;
__n305["prefix"] := true;
__n303["right"] := __n305;
__n302 := [ __n303 ];
__n300["arguments"] := __n302;
__n299["expression"] := __n300;
__n298 := [ __n299 ];
__n297["body"] := __n298;
__n287["consequent"] := __n297;
__n287["alternate"] := null;
__n312 := {  };
__n312["type"] := "IfStatement";
__n313 := {  };
__n313["type"] := "BinaryExpression";
__n313["operator"] := "!==";
__n314 := {  };
__n314["type"] := "UnaryExpression";
__n314["operator"] := "typeof";
__n315 := {  };
__n315["type"] := "CallExpression";
__n316 := {  };
__n316["type"] := "Identifier";
__n316["name"] := "Date";
__n315["callee"] := __n316;
__n318 := {  };
__n318["type"] := "Identifier";
__n318["name"] := "undefined";
__n317 := [ __n318 ];
__n315["arguments"] := __n317;
__n314["argument"] := __n315;
__n314["prefix"] := true;
__n313["left"] := __n314;
__n319 := {  };
__n319["type"] := "Literal";
__n319["value"] := "string";
__n319["raw"] := "\"string\"";
__n313["right"] := __n319;
__n312["test"] := __n313;
__n320 := {  };
__n320["type"] := "BlockStatement";
__n322 := {  };
__n322["type"] := "ExpressionStatement";
__n323 := {  };
__n323["type"] := "CallExpression";
__n324 := {  };
__n324["type"] := "Identifier";
__n324["name"] := "$ERROR";
__n323["callee"] := __n324;
__n326 := {  };
__n326["type"] := "BinaryExpression";
__n326["operator"] := "+";
__n327 := {  };
__n327["type"] := "Literal";
__n327["value"] := "#14: typeof Date(undefined) should be \"string\", actual is ";
__n327["raw"] := "'#14: typeof Date(undefined) should be \"string\", actual is '";
__n326["left"] := __n327;
__n328 := {  };
__n328["type"] := "UnaryExpression";
__n328["operator"] := "typeof";
__n329 := {  };
__n329["type"] := "CallExpression";
__n330 := {  };
__n330["type"] := "Identifier";
__n330["name"] := "Date";
__n329["callee"] := __n330;
__n332 := {  };
__n332["type"] := "Identifier";
__n332["name"] := "undefined";
__n331 := [ __n332 ];
__n329["arguments"] := __n331;
__n328["argument"] := __n329;
__n328["prefix"] := true;
__n326["right"] := __n328;
__n325 := [ __n326 ];
__n323["arguments"] := __n325;
__n322["expression"] := __n323;
__n321 := [ __n322 ];
__n320["body"] := __n321;
__n312["consequent"] := __n320;
__n312["alternate"] := null;
__n333 := {  };
__n333["type"] := "IfStatement";
__n334 := {  };
__n334["type"] := "BinaryExpression";
__n334["operator"] := "!==";
__n335 := {  };
__n335["type"] := "UnaryExpression";
__n335["operator"] := "typeof";
__n336 := {  };
__n336["type"] := "CallExpression";
__n337 := {  };
__n337["type"] := "Identifier";
__n337["name"] := "Date";
__n336["callee"] := __n337;
__n339 := {  };
__n339["type"] := "Literal";
__n339["value"] := 'null;
__n339["raw"] := "\"'null\"";
__n338 := [ __n339 ];
__n336["arguments"] := __n338;
__n335["argument"] := __n336;
__n335["prefix"] := true;
__n334["left"] := __n335;
__n340 := {  };
__n340["type"] := "Literal";
__n340["value"] := "string";
__n340["raw"] := "\"string\"";
__n334["right"] := __n340;
__n333["test"] := __n334;
__n341 := {  };
__n341["type"] := "BlockStatement";
__n343 := {  };
__n343["type"] := "ExpressionStatement";
__n344 := {  };
__n344["type"] := "CallExpression";
__n345 := {  };
__n345["type"] := "Identifier";
__n345["name"] := "$ERROR";
__n344["callee"] := __n345;
__n347 := {  };
__n347["type"] := "BinaryExpression";
__n347["operator"] := "+";
__n348 := {  };
__n348["type"] := "Literal";
__n348["value"] := "#15: typeof Date(null) should be \"string\", actual is ";
__n348["raw"] := "'#15: typeof Date(null) should be \"string\", actual is '";
__n347["left"] := __n348;
__n349 := {  };
__n349["type"] := "UnaryExpression";
__n349["operator"] := "typeof";
__n350 := {  };
__n350["type"] := "CallExpression";
__n351 := {  };
__n351["type"] := "Identifier";
__n351["name"] := "Date";
__n350["callee"] := __n351;
__n353 := {  };
__n353["type"] := "Literal";
__n353["value"] := 'null;
__n353["raw"] := "\"'null\"";
__n352 := [ __n353 ];
__n350["arguments"] := __n352;
__n349["argument"] := __n350;
__n349["prefix"] := true;
__n347["right"] := __n349;
__n346 := [ __n347 ];
__n344["arguments"] := __n346;
__n343["expression"] := __n344;
__n342 := [ __n343 ];
__n341["body"] := __n342;
__n333["consequent"] := __n341;
__n333["alternate"] := null;
__n1 := [ __n2, __n21, __n42, __n65, __n90, __n117, __n144, __n173, __n204, __n237, __n262, __n287, __n312, __n333 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n354 := [  ];
__n0["variableDeclarations"] := __n354;
__n355 := [  ];
__n0["functionDeclarations"] := __n355;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}