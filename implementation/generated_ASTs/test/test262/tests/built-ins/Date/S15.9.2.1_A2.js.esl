function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "isEqual";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "IfStatement";
__n5 := {  };
__n5["type"] := "UnaryExpression";
__n5["operator"] := "!";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "isEqual";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Date";
__n9["callee"] := __n10;
__n11 := [  ];
__n9["arguments"] := __n11;
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "NewExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Date";
__n14["callee"] := __n15;
__n16 := [  ];
__n14["arguments"] := __n16;
__n13["object"] := __n14;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "toString";
__n17["raw"] := "\"toString\"";
__n13["property"] := __n17;
__n13["computed"] := true;
__n12["callee"] := __n13;
__n18 := [  ];
__n12["arguments"] := __n18;
__n8 := [ __n9, __n12 ];
__n6["arguments"] := __n8;
__n5["argument"] := __n6;
__n5["prefix"] := true;
__n4["test"] := __n5;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "$ERROR";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "#1: Date() is equal to (new Date()).toString()";
__n25["raw"] := "'#1: Date() is equal to (new Date()).toString()'";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n4["consequent"] := __n19;
__n4["alternate"] := null;
__n26 := {  };
__n26["type"] := "IfStatement";
__n27 := {  };
__n27["type"] := "UnaryExpression";
__n27["operator"] := "!";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "isEqual";
__n28["callee"] := __n29;
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Date";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1.;
__n34["raw"] := "1";
__n33 := [ __n34 ];
__n31["arguments"] := __n33;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "NewExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Date";
__n37["callee"] := __n38;
__n39 := [  ];
__n37["arguments"] := __n39;
__n36["object"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "toString";
__n40["raw"] := "\"toString\"";
__n36["property"] := __n40;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n41 := [  ];
__n35["arguments"] := __n41;
__n30 := [ __n31, __n35 ];
__n28["arguments"] := __n30;
__n27["argument"] := __n28;
__n27["prefix"] := true;
__n26["test"] := __n27;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$ERROR";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "#2: Date(1) is equal to (new Date()).toString()";
__n48["raw"] := "'#2: Date(1) is equal to (new Date()).toString()'";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n26["consequent"] := __n42;
__n26["alternate"] := null;
__n49 := {  };
__n49["type"] := "IfStatement";
__n50 := {  };
__n50["type"] := "UnaryExpression";
__n50["operator"] := "!";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "isEqual";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Date";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 1970.;
__n57["raw"] := "1970";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 1.;
__n58["raw"] := "1";
__n56 := [ __n57, __n58 ];
__n54["arguments"] := __n56;
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "NewExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "Date";
__n61["callee"] := __n62;
__n63 := [  ];
__n61["arguments"] := __n63;
__n60["object"] := __n61;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "toString";
__n64["raw"] := "\"toString\"";
__n60["property"] := __n64;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n65 := [  ];
__n59["arguments"] := __n65;
__n53 := [ __n54, __n59 ];
__n51["arguments"] := __n53;
__n50["argument"] := __n51;
__n50["prefix"] := true;
__n49["test"] := __n50;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "#3: Date(1970, 1) is equal to (new Date()).toString()";
__n72["raw"] := "'#3: Date(1970, 1) is equal to (new Date()).toString()'";
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n49["consequent"] := __n66;
__n49["alternate"] := null;
__n73 := {  };
__n73["type"] := "IfStatement";
__n74 := {  };
__n74["type"] := "UnaryExpression";
__n74["operator"] := "!";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "isEqual";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "Date";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 1970.;
__n81["raw"] := "1970";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 1.;
__n82["raw"] := "1";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 1.;
__n83["raw"] := "1";
__n80 := [ __n81, __n82, __n83 ];
__n78["arguments"] := __n80;
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "NewExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "Date";
__n86["callee"] := __n87;
__n88 := [  ];
__n86["arguments"] := __n88;
__n85["object"] := __n86;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "toString";
__n89["raw"] := "\"toString\"";
__n85["property"] := __n89;
__n85["computed"] := true;
__n84["callee"] := __n85;
__n90 := [  ];
__n84["arguments"] := __n90;
__n77 := [ __n78, __n84 ];
__n75["arguments"] := __n77;
__n74["argument"] := __n75;
__n74["prefix"] := true;
__n73["test"] := __n74;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "#4: Date(1970, 1, 1) is equal to (new Date()).toString()";
__n97["raw"] := "'#4: Date(1970, 1, 1) is equal to (new Date()).toString()'";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n73["consequent"] := __n91;
__n73["alternate"] := null;
__n98 := {  };
__n98["type"] := "IfStatement";
__n99 := {  };
__n99["type"] := "UnaryExpression";
__n99["operator"] := "!";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "isEqual";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "Date";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 1970.;
__n106["raw"] := "1970";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 1.;
__n107["raw"] := "1";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := 1.;
__n108["raw"] := "1";
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := 1.;
__n109["raw"] := "1";
__n105 := [ __n106, __n107, __n108, __n109 ];
__n103["arguments"] := __n105;
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "MemberExpression";
__n112 := {  };
__n112["type"] := "NewExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "Date";
__n112["callee"] := __n113;
__n114 := [  ];
__n112["arguments"] := __n114;
__n111["object"] := __n112;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "toString";
__n115["raw"] := "\"toString\"";
__n111["property"] := __n115;
__n111["computed"] := true;
__n110["callee"] := __n111;
__n116 := [  ];
__n110["arguments"] := __n116;
__n102 := [ __n103, __n110 ];
__n100["arguments"] := __n102;
__n99["argument"] := __n100;
__n99["prefix"] := true;
__n98["test"] := __n99;
__n117 := {  };
__n117["type"] := "BlockStatement";
__n119 := {  };
__n119["type"] := "ExpressionStatement";
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "$ERROR";
__n120["callee"] := __n121;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "#5: Date(1970, 1, 1, 1) is equal to (new Date()).toString()";
__n123["raw"] := "'#5: Date(1970, 1, 1, 1) is equal to (new Date()).toString()'";
__n122 := [ __n123 ];
__n120["arguments"] := __n122;
__n119["expression"] := __n120;
__n118 := [ __n119 ];
__n117["body"] := __n118;
__n98["consequent"] := __n117;
__n98["alternate"] := null;
__n124 := {  };
__n124["type"] := "IfStatement";
__n125 := {  };
__n125["type"] := "UnaryExpression";
__n125["operator"] := "!";
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "isEqual";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "CallExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "Date";
__n129["callee"] := __n130;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := 1970.;
__n132["raw"] := "1970";
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := 1.;
__n133["raw"] := "1";
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 1.;
__n134["raw"] := "1";
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := 1.;
__n135["raw"] := "1";
__n131 := [ __n132, __n133, __n134, __n135 ];
__n129["arguments"] := __n131;
__n136 := {  };
__n136["type"] := "CallExpression";
__n137 := {  };
__n137["type"] := "MemberExpression";
__n138 := {  };
__n138["type"] := "NewExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "Date";
__n138["callee"] := __n139;
__n140 := [  ];
__n138["arguments"] := __n140;
__n137["object"] := __n138;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "toString";
__n141["raw"] := "\"toString\"";
__n137["property"] := __n141;
__n137["computed"] := true;
__n136["callee"] := __n137;
__n142 := [  ];
__n136["arguments"] := __n142;
__n128 := [ __n129, __n136 ];
__n126["arguments"] := __n128;
__n125["argument"] := __n126;
__n125["prefix"] := true;
__n124["test"] := __n125;
__n143 := {  };
__n143["type"] := "BlockStatement";
__n145 := {  };
__n145["type"] := "ExpressionStatement";
__n146 := {  };
__n146["type"] := "CallExpression";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "$ERROR";
__n146["callee"] := __n147;
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := "#7: Date(1970, 1, 1, 1) is equal to (new Date()).toString()";
__n149["raw"] := "'#7: Date(1970, 1, 1, 1) is equal to (new Date()).toString()'";
__n148 := [ __n149 ];
__n146["arguments"] := __n148;
__n145["expression"] := __n146;
__n144 := [ __n145 ];
__n143["body"] := __n144;
__n124["consequent"] := __n143;
__n124["alternate"] := null;
__n150 := {  };
__n150["type"] := "IfStatement";
__n151 := {  };
__n151["type"] := "UnaryExpression";
__n151["operator"] := "!";
__n152 := {  };
__n152["type"] := "CallExpression";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "isEqual";
__n152["callee"] := __n153;
__n155 := {  };
__n155["type"] := "CallExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "Date";
__n155["callee"] := __n156;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := 1970.;
__n158["raw"] := "1970";
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := 1.;
__n159["raw"] := "1";
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := 1.;
__n160["raw"] := "1";
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := 1.;
__n161["raw"] := "1";
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := 0.;
__n162["raw"] := "0";
__n157 := [ __n158, __n159, __n160, __n161, __n162 ];
__n155["arguments"] := __n157;
__n163 := {  };
__n163["type"] := "CallExpression";
__n164 := {  };
__n164["type"] := "MemberExpression";
__n165 := {  };
__n165["type"] := "NewExpression";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "Date";
__n165["callee"] := __n166;
__n167 := [  ];
__n165["arguments"] := __n167;
__n164["object"] := __n165;
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := "toString";
__n168["raw"] := "\"toString\"";
__n164["property"] := __n168;
__n164["computed"] := true;
__n163["callee"] := __n164;
__n169 := [  ];
__n163["arguments"] := __n169;
__n154 := [ __n155, __n163 ];
__n152["arguments"] := __n154;
__n151["argument"] := __n152;
__n151["prefix"] := true;
__n150["test"] := __n151;
__n170 := {  };
__n170["type"] := "BlockStatement";
__n172 := {  };
__n172["type"] := "ExpressionStatement";
__n173 := {  };
__n173["type"] := "CallExpression";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "$ERROR";
__n173["callee"] := __n174;
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := "#8: Date(1970, 1, 1, 1, 0) is equal to (new Date()).toString()";
__n176["raw"] := "'#8: Date(1970, 1, 1, 1, 0) is equal to (new Date()).toString()'";
__n175 := [ __n176 ];
__n173["arguments"] := __n175;
__n172["expression"] := __n173;
__n171 := [ __n172 ];
__n170["body"] := __n171;
__n150["consequent"] := __n170;
__n150["alternate"] := null;
__n177 := {  };
__n177["type"] := "IfStatement";
__n178 := {  };
__n178["type"] := "UnaryExpression";
__n178["operator"] := "!";
__n179 := {  };
__n179["type"] := "CallExpression";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "isEqual";
__n179["callee"] := __n180;
__n182 := {  };
__n182["type"] := "CallExpression";
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "Date";
__n182["callee"] := __n183;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := 1970.;
__n185["raw"] := "1970";
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := 1.;
__n186["raw"] := "1";
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := 1.;
__n187["raw"] := "1";
__n188 := {  };
__n188["type"] := "Literal";
__n188["value"] := 1.;
__n188["raw"] := "1";
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := 0.;
__n189["raw"] := "0";
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := 0.;
__n190["raw"] := "0";
__n184 := [ __n185, __n186, __n187, __n188, __n189, __n190 ];
__n182["arguments"] := __n184;
__n191 := {  };
__n191["type"] := "CallExpression";
__n192 := {  };
__n192["type"] := "MemberExpression";
__n193 := {  };
__n193["type"] := "NewExpression";
__n194 := {  };
__n194["type"] := "Identifier";
__n194["name"] := "Date";
__n193["callee"] := __n194;
__n195 := [  ];
__n193["arguments"] := __n195;
__n192["object"] := __n193;
__n196 := {  };
__n196["type"] := "Literal";
__n196["value"] := "toString";
__n196["raw"] := "\"toString\"";
__n192["property"] := __n196;
__n192["computed"] := true;
__n191["callee"] := __n192;
__n197 := [  ];
__n191["arguments"] := __n197;
__n181 := [ __n182, __n191 ];
__n179["arguments"] := __n181;
__n178["argument"] := __n179;
__n178["prefix"] := true;
__n177["test"] := __n178;
__n198 := {  };
__n198["type"] := "BlockStatement";
__n200 := {  };
__n200["type"] := "ExpressionStatement";
__n201 := {  };
__n201["type"] := "CallExpression";
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "$ERROR";
__n201["callee"] := __n202;
__n204 := {  };
__n204["type"] := "Literal";
__n204["value"] := "#9: Date(1970, 1, 1, 1, 0, 0) is equal to (new Date()).toString()";
__n204["raw"] := "'#9: Date(1970, 1, 1, 1, 0, 0) is equal to (new Date()).toString()'";
__n203 := [ __n204 ];
__n201["arguments"] := __n203;
__n200["expression"] := __n201;
__n199 := [ __n200 ];
__n198["body"] := __n199;
__n177["consequent"] := __n198;
__n177["alternate"] := null;
__n205 := {  };
__n205["type"] := "IfStatement";
__n206 := {  };
__n206["type"] := "UnaryExpression";
__n206["operator"] := "!";
__n207 := {  };
__n207["type"] := "CallExpression";
__n208 := {  };
__n208["type"] := "Identifier";
__n208["name"] := "isEqual";
__n207["callee"] := __n208;
__n210 := {  };
__n210["type"] := "CallExpression";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "Date";
__n210["callee"] := __n211;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := 1970.;
__n213["raw"] := "1970";
__n214 := {  };
__n214["type"] := "Literal";
__n214["value"] := 1.;
__n214["raw"] := "1";
__n215 := {  };
__n215["type"] := "Literal";
__n215["value"] := 1.;
__n215["raw"] := "1";
__n216 := {  };
__n216["type"] := "Literal";
__n216["value"] := 1.;
__n216["raw"] := "1";
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := 0.;
__n217["raw"] := "0";
__n218 := {  };
__n218["type"] := "Literal";
__n218["value"] := 0.;
__n218["raw"] := "0";
__n219 := {  };
__n219["type"] := "Literal";
__n219["value"] := 0.;
__n219["raw"] := "0";
__n212 := [ __n213, __n214, __n215, __n216, __n217, __n218, __n219 ];
__n210["arguments"] := __n212;
__n220 := {  };
__n220["type"] := "CallExpression";
__n221 := {  };
__n221["type"] := "MemberExpression";
__n222 := {  };
__n222["type"] := "NewExpression";
__n223 := {  };
__n223["type"] := "Identifier";
__n223["name"] := "Date";
__n222["callee"] := __n223;
__n224 := [  ];
__n222["arguments"] := __n224;
__n221["object"] := __n222;
__n225 := {  };
__n225["type"] := "Literal";
__n225["value"] := "toString";
__n225["raw"] := "\"toString\"";
__n221["property"] := __n225;
__n221["computed"] := true;
__n220["callee"] := __n221;
__n226 := [  ];
__n220["arguments"] := __n226;
__n209 := [ __n210, __n220 ];
__n207["arguments"] := __n209;
__n206["argument"] := __n207;
__n206["prefix"] := true;
__n205["test"] := __n206;
__n227 := {  };
__n227["type"] := "BlockStatement";
__n229 := {  };
__n229["type"] := "ExpressionStatement";
__n230 := {  };
__n230["type"] := "CallExpression";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "$ERROR";
__n230["callee"] := __n231;
__n233 := {  };
__n233["type"] := "Literal";
__n233["value"] := "#10: Date(1970, 1, 1, 1, 0, 0, 0) is equal to (new Date()).toString()";
__n233["raw"] := "'#10: Date(1970, 1, 1, 1, 0, 0, 0) is equal to (new Date()).toString()'";
__n232 := [ __n233 ];
__n230["arguments"] := __n232;
__n229["expression"] := __n230;
__n228 := [ __n229 ];
__n227["body"] := __n228;
__n205["consequent"] := __n227;
__n205["alternate"] := null;
__n234 := {  };
__n234["type"] := "IfStatement";
__n235 := {  };
__n235["type"] := "UnaryExpression";
__n235["operator"] := "!";
__n236 := {  };
__n236["type"] := "CallExpression";
__n237 := {  };
__n237["type"] := "Identifier";
__n237["name"] := "isEqual";
__n236["callee"] := __n237;
__n239 := {  };
__n239["type"] := "CallExpression";
__n240 := {  };
__n240["type"] := "Identifier";
__n240["name"] := "Date";
__n239["callee"] := __n240;
__n242 := {  };
__n242["type"] := "MemberExpression";
__n243 := {  };
__n243["type"] := "Identifier";
__n243["name"] := "Number";
__n242["object"] := __n243;
__n244 := {  };
__n244["type"] := "Literal";
__n244["value"] := "NaN";
__n244["raw"] := "\"NaN\"";
__n242["property"] := __n244;
__n242["computed"] := true;
__n241 := [ __n242 ];
__n239["arguments"] := __n241;
__n245 := {  };
__n245["type"] := "CallExpression";
__n246 := {  };
__n246["type"] := "MemberExpression";
__n247 := {  };
__n247["type"] := "NewExpression";
__n248 := {  };
__n248["type"] := "Identifier";
__n248["name"] := "Date";
__n247["callee"] := __n248;
__n249 := [  ];
__n247["arguments"] := __n249;
__n246["object"] := __n247;
__n250 := {  };
__n250["type"] := "Literal";
__n250["value"] := "toString";
__n250["raw"] := "\"toString\"";
__n246["property"] := __n250;
__n246["computed"] := true;
__n245["callee"] := __n246;
__n251 := [  ];
__n245["arguments"] := __n251;
__n238 := [ __n239, __n245 ];
__n236["arguments"] := __n238;
__n235["argument"] := __n236;
__n235["prefix"] := true;
__n234["test"] := __n235;
__n252 := {  };
__n252["type"] := "BlockStatement";
__n254 := {  };
__n254["type"] := "ExpressionStatement";
__n255 := {  };
__n255["type"] := "CallExpression";
__n256 := {  };
__n256["type"] := "Identifier";
__n256["name"] := "$ERROR";
__n255["callee"] := __n256;
__n258 := {  };
__n258["type"] := "Literal";
__n258["value"] := "#11: Date(Number.NaN) is equal to (new Date()).toString()";
__n258["raw"] := "'#11: Date(Number.NaN) is equal to (new Date()).toString()'";
__n257 := [ __n258 ];
__n255["arguments"] := __n257;
__n254["expression"] := __n255;
__n253 := [ __n254 ];
__n252["body"] := __n253;
__n234["consequent"] := __n252;
__n234["alternate"] := null;
__n259 := {  };
__n259["type"] := "IfStatement";
__n260 := {  };
__n260["type"] := "UnaryExpression";
__n260["operator"] := "!";
__n261 := {  };
__n261["type"] := "CallExpression";
__n262 := {  };
__n262["type"] := "Identifier";
__n262["name"] := "isEqual";
__n261["callee"] := __n262;
__n264 := {  };
__n264["type"] := "CallExpression";
__n265 := {  };
__n265["type"] := "Identifier";
__n265["name"] := "Date";
__n264["callee"] := __n265;
__n267 := {  };
__n267["type"] := "MemberExpression";
__n268 := {  };
__n268["type"] := "Identifier";
__n268["name"] := "Number";
__n267["object"] := __n268;
__n269 := {  };
__n269["type"] := "Literal";
__n269["value"] := "POSITIVE_INFINITY";
__n269["raw"] := "\"POSITIVE_INFINITY\"";
__n267["property"] := __n269;
__n267["computed"] := true;
__n266 := [ __n267 ];
__n264["arguments"] := __n266;
__n270 := {  };
__n270["type"] := "CallExpression";
__n271 := {  };
__n271["type"] := "MemberExpression";
__n272 := {  };
__n272["type"] := "NewExpression";
__n273 := {  };
__n273["type"] := "Identifier";
__n273["name"] := "Date";
__n272["callee"] := __n273;
__n274 := [  ];
__n272["arguments"] := __n274;
__n271["object"] := __n272;
__n275 := {  };
__n275["type"] := "Literal";
__n275["value"] := "toString";
__n275["raw"] := "\"toString\"";
__n271["property"] := __n275;
__n271["computed"] := true;
__n270["callee"] := __n271;
__n276 := [  ];
__n270["arguments"] := __n276;
__n263 := [ __n264, __n270 ];
__n261["arguments"] := __n263;
__n260["argument"] := __n261;
__n260["prefix"] := true;
__n259["test"] := __n260;
__n277 := {  };
__n277["type"] := "BlockStatement";
__n279 := {  };
__n279["type"] := "ExpressionStatement";
__n280 := {  };
__n280["type"] := "CallExpression";
__n281 := {  };
__n281["type"] := "Identifier";
__n281["name"] := "$ERROR";
__n280["callee"] := __n281;
__n283 := {  };
__n283["type"] := "Literal";
__n283["value"] := "#12: Date(Number.POSITIVE_INFINITY) is equal to (new Date()).toString()";
__n283["raw"] := "'#12: Date(Number.POSITIVE_INFINITY) is equal to (new Date()).toString()'";
__n282 := [ __n283 ];
__n280["arguments"] := __n282;
__n279["expression"] := __n280;
__n278 := [ __n279 ];
__n277["body"] := __n278;
__n259["consequent"] := __n277;
__n259["alternate"] := null;
__n284 := {  };
__n284["type"] := "IfStatement";
__n285 := {  };
__n285["type"] := "UnaryExpression";
__n285["operator"] := "!";
__n286 := {  };
__n286["type"] := "CallExpression";
__n287 := {  };
__n287["type"] := "Identifier";
__n287["name"] := "isEqual";
__n286["callee"] := __n287;
__n289 := {  };
__n289["type"] := "CallExpression";
__n290 := {  };
__n290["type"] := "Identifier";
__n290["name"] := "Date";
__n289["callee"] := __n290;
__n292 := {  };
__n292["type"] := "MemberExpression";
__n293 := {  };
__n293["type"] := "Identifier";
__n293["name"] := "Number";
__n292["object"] := __n293;
__n294 := {  };
__n294["type"] := "Literal";
__n294["value"] := "NEGATIVE_INFINITY";
__n294["raw"] := "\"NEGATIVE_INFINITY\"";
__n292["property"] := __n294;
__n292["computed"] := true;
__n291 := [ __n292 ];
__n289["arguments"] := __n291;
__n295 := {  };
__n295["type"] := "CallExpression";
__n296 := {  };
__n296["type"] := "MemberExpression";
__n297 := {  };
__n297["type"] := "NewExpression";
__n298 := {  };
__n298["type"] := "Identifier";
__n298["name"] := "Date";
__n297["callee"] := __n298;
__n299 := [  ];
__n297["arguments"] := __n299;
__n296["object"] := __n297;
__n300 := {  };
__n300["type"] := "Literal";
__n300["value"] := "toString";
__n300["raw"] := "\"toString\"";
__n296["property"] := __n300;
__n296["computed"] := true;
__n295["callee"] := __n296;
__n301 := [  ];
__n295["arguments"] := __n301;
__n288 := [ __n289, __n295 ];
__n286["arguments"] := __n288;
__n285["argument"] := __n286;
__n285["prefix"] := true;
__n284["test"] := __n285;
__n302 := {  };
__n302["type"] := "BlockStatement";
__n304 := {  };
__n304["type"] := "ExpressionStatement";
__n305 := {  };
__n305["type"] := "CallExpression";
__n306 := {  };
__n306["type"] := "Identifier";
__n306["name"] := "$ERROR";
__n305["callee"] := __n306;
__n308 := {  };
__n308["type"] := "Literal";
__n308["value"] := "#13: Date(Number.NEGATIVE_INFINITY) is equal to (new Date()).toString()";
__n308["raw"] := "'#13: Date(Number.NEGATIVE_INFINITY) is equal to (new Date()).toString()'";
__n307 := [ __n308 ];
__n305["arguments"] := __n307;
__n304["expression"] := __n305;
__n303 := [ __n304 ];
__n302["body"] := __n303;
__n284["consequent"] := __n302;
__n284["alternate"] := null;
__n309 := {  };
__n309["type"] := "IfStatement";
__n310 := {  };
__n310["type"] := "UnaryExpression";
__n310["operator"] := "!";
__n311 := {  };
__n311["type"] := "CallExpression";
__n312 := {  };
__n312["type"] := "Identifier";
__n312["name"] := "isEqual";
__n311["callee"] := __n312;
__n314 := {  };
__n314["type"] := "CallExpression";
__n315 := {  };
__n315["type"] := "Identifier";
__n315["name"] := "Date";
__n314["callee"] := __n315;
__n317 := {  };
__n317["type"] := "Identifier";
__n317["name"] := "undefined";
__n316 := [ __n317 ];
__n314["arguments"] := __n316;
__n318 := {  };
__n318["type"] := "CallExpression";
__n319 := {  };
__n319["type"] := "MemberExpression";
__n320 := {  };
__n320["type"] := "NewExpression";
__n321 := {  };
__n321["type"] := "Identifier";
__n321["name"] := "Date";
__n320["callee"] := __n321;
__n322 := [  ];
__n320["arguments"] := __n322;
__n319["object"] := __n320;
__n323 := {  };
__n323["type"] := "Literal";
__n323["value"] := "toString";
__n323["raw"] := "\"toString\"";
__n319["property"] := __n323;
__n319["computed"] := true;
__n318["callee"] := __n319;
__n324 := [  ];
__n318["arguments"] := __n324;
__n313 := [ __n314, __n318 ];
__n311["arguments"] := __n313;
__n310["argument"] := __n311;
__n310["prefix"] := true;
__n309["test"] := __n310;
__n325 := {  };
__n325["type"] := "BlockStatement";
__n327 := {  };
__n327["type"] := "ExpressionStatement";
__n328 := {  };
__n328["type"] := "CallExpression";
__n329 := {  };
__n329["type"] := "Identifier";
__n329["name"] := "$ERROR";
__n328["callee"] := __n329;
__n331 := {  };
__n331["type"] := "Literal";
__n331["value"] := "#14: Date(undefined) is equal to (new Date()).toString()";
__n331["raw"] := "'#14: Date(undefined) is equal to (new Date()).toString()'";
__n330 := [ __n331 ];
__n328["arguments"] := __n330;
__n327["expression"] := __n328;
__n326 := [ __n327 ];
__n325["body"] := __n326;
__n309["consequent"] := __n325;
__n309["alternate"] := null;
__n332 := {  };
__n332["type"] := "IfStatement";
__n333 := {  };
__n333["type"] := "UnaryExpression";
__n333["operator"] := "!";
__n334 := {  };
__n334["type"] := "CallExpression";
__n335 := {  };
__n335["type"] := "Identifier";
__n335["name"] := "isEqual";
__n334["callee"] := __n335;
__n337 := {  };
__n337["type"] := "CallExpression";
__n338 := {  };
__n338["type"] := "Identifier";
__n338["name"] := "Date";
__n337["callee"] := __n338;
__n340 := {  };
__n340["type"] := "Literal";
__n340["value"] := 'null;
__n340["raw"] := "\"'null\"";
__n339 := [ __n340 ];
__n337["arguments"] := __n339;
__n341 := {  };
__n341["type"] := "CallExpression";
__n342 := {  };
__n342["type"] := "MemberExpression";
__n343 := {  };
__n343["type"] := "NewExpression";
__n344 := {  };
__n344["type"] := "Identifier";
__n344["name"] := "Date";
__n343["callee"] := __n344;
__n345 := [  ];
__n343["arguments"] := __n345;
__n342["object"] := __n343;
__n346 := {  };
__n346["type"] := "Literal";
__n346["value"] := "toString";
__n346["raw"] := "\"toString\"";
__n342["property"] := __n346;
__n342["computed"] := true;
__n341["callee"] := __n342;
__n347 := [  ];
__n341["arguments"] := __n347;
__n336 := [ __n337, __n341 ];
__n334["arguments"] := __n336;
__n333["argument"] := __n334;
__n333["prefix"] := true;
__n332["test"] := __n333;
__n348 := {  };
__n348["type"] := "BlockStatement";
__n350 := {  };
__n350["type"] := "ExpressionStatement";
__n351 := {  };
__n351["type"] := "CallExpression";
__n352 := {  };
__n352["type"] := "Identifier";
__n352["name"] := "$ERROR";
__n351["callee"] := __n352;
__n354 := {  };
__n354["type"] := "Literal";
__n354["value"] := "#15: Date(null) is equal to (new Date()).toString()";
__n354["raw"] := "'#15: Date(null) is equal to (new Date()).toString()'";
__n353 := [ __n354 ];
__n351["arguments"] := __n353;
__n350["expression"] := __n351;
__n349 := [ __n350 ];
__n348["body"] := __n349;
__n332["consequent"] := __n348;
__n332["alternate"] := null;
__n1 := [ __n2, __n4, __n26, __n49, __n73, __n98, __n124, __n150, __n177, __n205, __n234, __n259, __n284, __n309, __n332 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n355 := [  ];
__n0["variableDeclarations"] := __n355;
__n357 := {  };
__n357["type"] := "FunctionDeclaration";
__n358 := {  };
__n358["type"] := "Identifier";
__n358["name"] := "isEqual";
__n357["id"] := __n358;
__n359 := [ "d1", "d2" ];
__n357["params"] := __n359;
__n360 := {  };
__n360["type"] := "BlockStatement";
__n362 := {  };
__n362["type"] := "IfStatement";
__n363 := {  };
__n363["type"] := "BinaryExpression";
__n363["operator"] := "===";
__n364 := {  };
__n364["type"] := "Identifier";
__n364["name"] := "d1";
__n363["left"] := __n364;
__n365 := {  };
__n365["type"] := "Identifier";
__n365["name"] := "d2";
__n363["right"] := __n365;
__n362["test"] := __n363;
__n366 := {  };
__n366["type"] := "BlockStatement";
__n368 := {  };
__n368["type"] := "ReturnStatement";
__n369 := {  };
__n369["type"] := "Literal";
__n369["value"] := true;
__n369["raw"] := "true";
__n368["argument"] := __n369;
__n367 := [ __n368 ];
__n366["body"] := __n367;
__n362["consequent"] := __n366;
__n370 := {  };
__n370["type"] := "IfStatement";
__n371 := {  };
__n371["type"] := "BinaryExpression";
__n371["operator"] := "<=";
__n372 := {  };
__n372["type"] := "CallExpression";
__n373 := {  };
__n373["type"] := "MemberExpression";
__n374 := {  };
__n374["type"] := "Identifier";
__n374["name"] := "Math";
__n373["object"] := __n374;
__n375 := {  };
__n375["type"] := "Literal";
__n375["value"] := "abs";
__n375["raw"] := "\"abs\"";
__n373["property"] := __n375;
__n373["computed"] := true;
__n372["callee"] := __n373;
__n377 := {  };
__n377["type"] := "BinaryExpression";
__n377["operator"] := "-";
__n378 := {  };
__n378["type"] := "CallExpression";
__n379 := {  };
__n379["type"] := "MemberExpression";
__n380 := {  };
__n380["type"] := "Identifier";
__n380["name"] := "Date";
__n379["object"] := __n380;
__n381 := {  };
__n381["type"] := "Literal";
__n381["value"] := "parse";
__n381["raw"] := "\"parse\"";
__n379["property"] := __n381;
__n379["computed"] := true;
__n378["callee"] := __n379;
__n383 := {  };
__n383["type"] := "Identifier";
__n383["name"] := "d1";
__n382 := [ __n383 ];
__n378["arguments"] := __n382;
__n377["left"] := __n378;
__n384 := {  };
__n384["type"] := "CallExpression";
__n385 := {  };
__n385["type"] := "MemberExpression";
__n386 := {  };
__n386["type"] := "Identifier";
__n386["name"] := "Date";
__n385["object"] := __n386;
__n387 := {  };
__n387["type"] := "Literal";
__n387["value"] := "parse";
__n387["raw"] := "\"parse\"";
__n385["property"] := __n387;
__n385["computed"] := true;
__n384["callee"] := __n385;
__n389 := {  };
__n389["type"] := "Identifier";
__n389["name"] := "d2";
__n388 := [ __n389 ];
__n384["arguments"] := __n388;
__n377["right"] := __n384;
__n376 := [ __n377 ];
__n372["arguments"] := __n376;
__n371["left"] := __n372;
__n390 := {  };
__n390["type"] := "Literal";
__n390["value"] := 1000.;
__n390["raw"] := "1000";
__n371["right"] := __n390;
__n370["test"] := __n371;
__n391 := {  };
__n391["type"] := "BlockStatement";
__n393 := {  };
__n393["type"] := "ReturnStatement";
__n394 := {  };
__n394["type"] := "Literal";
__n394["value"] := true;
__n394["raw"] := "true";
__n393["argument"] := __n394;
__n392 := [ __n393 ];
__n391["body"] := __n392;
__n370["consequent"] := __n391;
__n395 := {  };
__n395["type"] := "BlockStatement";
__n397 := {  };
__n397["type"] := "ReturnStatement";
__n398 := {  };
__n398["type"] := "Literal";
__n398["value"] := false;
__n398["raw"] := "false";
__n397["argument"] := __n398;
__n396 := [ __n397 ];
__n395["body"] := __n396;
__n370["alternate"] := __n395;
__n362["alternate"] := __n370;
__n361 := [ __n362 ];
__n360["body"] := __n361;
__n399 := [  ];
__n360["variableDeclarations"] := __n399;
__n400 := [  ];
__n360["functionDeclarations"] := __n400;
__n360["codeType"] := "function";
__n360["strict"] := false;
__n357["body"] := __n360;
__n357["generator"] := false;
__n357["async"] := false;
__n357["expression"] := false;
__n356 := [ __n357 ];
__n0["functionDeclarations"] := __n356;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}