function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "myObj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "FunctionExpression";
__n6["id"] := null;
__n7 := [ "val" ];
__n6["params"] := __n7;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "AssignmentExpression";
__n11["operator"] := "=";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "ThisExpression";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "value";
__n14["raw"] := "\"value\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["left"] := __n12;
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "val";
__n11["right"] := __n15;
__n10["expression"] := __n11;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "AssignmentExpression";
__n17["operator"] := "=";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "ThisExpression";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "valueOf";
__n20["raw"] := "\"valueOf\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["left"] := __n18;
__n21 := {  };
__n21["type"] := "FunctionExpression";
__n21["id"] := null;
__n22 := [  ];
__n21["params"] := __n22;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ThrowStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "+";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "valueOf-";
__n27["raw"] := "\"valueOf-\"";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "ThisExpression";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "value";
__n30["raw"] := "\"value\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n26["right"] := __n28;
__n25["argument"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n31 := [  ];
__n23["variableDeclarations"] := __n31;
__n32 := [  ];
__n23["functionDeclarations"] := __n32;
__n23["codeType"] := "function";
__n23["strict"] := false;
__n21["body"] := __n23;
__n21["generator"] := false;
__n21["expression"] := false;
__n21["async"] := false;
__n17["right"] := __n21;
__n16["expression"] := __n17;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "AssignmentExpression";
__n34["operator"] := "=";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "ThisExpression";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "toString";
__n37["raw"] := "\"toString\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["left"] := __n35;
__n38 := {  };
__n38["type"] := "FunctionExpression";
__n38["id"] := null;
__n39 := [  ];
__n38["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ThrowStatement";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "toString-";
__n44["raw"] := "\"toString-\"";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "ThisExpression";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "value";
__n47["raw"] := "\"value\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n43["right"] := __n45;
__n42["argument"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n48 := [  ];
__n40["variableDeclarations"] := __n48;
__n49 := [  ];
__n40["functionDeclarations"] := __n49;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n38["body"] := __n40;
__n38["generator"] := false;
__n38["expression"] := false;
__n38["async"] := false;
__n34["right"] := __n38;
__n33["expression"] := __n34;
__n9 := [ __n10, __n16, __n33 ];
__n8["body"] := __n9;
__n50 := [  ];
__n8["variableDeclarations"] := __n50;
__n51 := [  ];
__n8["functionDeclarations"] := __n51;
__n8["codeType"] := "function";
__n8["strict"] := false;
__n6["body"] := __n8;
__n6["generator"] := false;
__n6["expression"] := false;
__n6["async"] := false;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n52 := {  };
__n52["type"] := "TryStatement";
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "VariableDeclaration";
__n57 := {  };
__n57["type"] := "VariableDeclarator";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "x1";
__n57["id"] := __n58;
__n59 := {  };
__n59["type"] := "NewExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Date";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "NewExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "myObj";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 1.;
__n65["raw"] := "1";
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n66 := {  };
__n66["type"] := "NewExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "myObj";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 2.;
__n69["raw"] := "2";
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n70 := {  };
__n70["type"] := "NewExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "myObj";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 3.;
__n73["raw"] := "3";
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n74 := {  };
__n74["type"] := "NewExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "myObj";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 4.;
__n77["raw"] := "4";
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n78 := {  };
__n78["type"] := "NewExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "myObj";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 5.;
__n81["raw"] := "5";
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n61 := [ __n62, __n66, __n70, __n74, __n78 ];
__n59["arguments"] := __n61;
__n57["init"] := __n59;
__n56 := [ __n57 ];
__n55["declarations"] := __n56;
__n55["kind"] := "var";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "#1: The 1st step is calling ToNumber(year)";
__n86["raw"] := "\"#1: The 1st step is calling ToNumber(year)\"";
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n54 := [ __n55, __n82 ];
__n53["body"] := __n54;
__n52["block"] := __n53;
__n87 := {  };
__n87["type"] := "CatchClause";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "e";
__n87["param"] := __n88;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "!==";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "e";
__n92["left"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "valueOf-1";
__n94["raw"] := "\"valueOf-1\"";
__n92["right"] := __n94;
__n91["test"] := __n92;
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "CallExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "$ERROR";
__n98["callee"] := __n99;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "#1: The 1st step is calling ToNumber(year)";
__n101["raw"] := "\"#1: The 1st step is calling ToNumber(year)\"";
__n100 := [ __n101 ];
__n98["arguments"] := __n100;
__n97["expression"] := __n98;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n91["consequent"] := __n95;
__n91["alternate"] := null;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n87["body"] := __n89;
__n52["handler"] := __n87;
__n52["finalizer"] := null;
__n102 := {  };
__n102["type"] := "TryStatement";
__n103 := {  };
__n103["type"] := "BlockStatement";
__n105 := {  };
__n105["type"] := "VariableDeclaration";
__n107 := {  };
__n107["type"] := "VariableDeclarator";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "x2";
__n107["id"] := __n108;
__n109 := {  };
__n109["type"] := "NewExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "Date";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 1.;
__n112["raw"] := "1";
__n113 := {  };
__n113["type"] := "NewExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "myObj";
__n113["callee"] := __n114;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 2.;
__n116["raw"] := "2";
__n115 := [ __n116 ];
__n113["arguments"] := __n115;
__n117 := {  };
__n117["type"] := "NewExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "myObj";
__n117["callee"] := __n118;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := 3.;
__n120["raw"] := "3";
__n119 := [ __n120 ];
__n117["arguments"] := __n119;
__n121 := {  };
__n121["type"] := "NewExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "myObj";
__n121["callee"] := __n122;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 4.;
__n124["raw"] := "4";
__n123 := [ __n124 ];
__n121["arguments"] := __n123;
__n125 := {  };
__n125["type"] := "NewExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "myObj";
__n125["callee"] := __n126;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := 5.;
__n128["raw"] := "5";
__n127 := [ __n128 ];
__n125["arguments"] := __n127;
__n111 := [ __n112, __n113, __n117, __n121, __n125 ];
__n109["arguments"] := __n111;
__n107["init"] := __n109;
__n106 := [ __n107 ];
__n105["declarations"] := __n106;
__n105["kind"] := "var";
__n129 := {  };
__n129["type"] := "ExpressionStatement";
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "$ERROR";
__n130["callee"] := __n131;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "#2: The 2nd step is calling ToNumber(month)";
__n133["raw"] := "\"#2: The 2nd step is calling ToNumber(month)\"";
__n132 := [ __n133 ];
__n130["arguments"] := __n132;
__n129["expression"] := __n130;
__n104 := [ __n105, __n129 ];
__n103["body"] := __n104;
__n102["block"] := __n103;
__n134 := {  };
__n134["type"] := "CatchClause";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "e";
__n134["param"] := __n135;
__n136 := {  };
__n136["type"] := "BlockStatement";
__n138 := {  };
__n138["type"] := "IfStatement";
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "!==";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "e";
__n139["left"] := __n140;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "valueOf-2";
__n141["raw"] := "\"valueOf-2\"";
__n139["right"] := __n141;
__n138["test"] := __n139;
__n142 := {  };
__n142["type"] := "BlockStatement";
__n144 := {  };
__n144["type"] := "ExpressionStatement";
__n145 := {  };
__n145["type"] := "CallExpression";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "$ERROR";
__n145["callee"] := __n146;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "#2: The 2nd step is calling ToNumber(month)";
__n148["raw"] := "\"#2: The 2nd step is calling ToNumber(month)\"";
__n147 := [ __n148 ];
__n145["arguments"] := __n147;
__n144["expression"] := __n145;
__n143 := [ __n144 ];
__n142["body"] := __n143;
__n138["consequent"] := __n142;
__n138["alternate"] := null;
__n137 := [ __n138 ];
__n136["body"] := __n137;
__n134["body"] := __n136;
__n102["handler"] := __n134;
__n102["finalizer"] := null;
__n149 := {  };
__n149["type"] := "TryStatement";
__n150 := {  };
__n150["type"] := "BlockStatement";
__n152 := {  };
__n152["type"] := "VariableDeclaration";
__n154 := {  };
__n154["type"] := "VariableDeclarator";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "x3";
__n154["id"] := __n155;
__n156 := {  };
__n156["type"] := "NewExpression";
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "Date";
__n156["callee"] := __n157;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := 1.;
__n159["raw"] := "1";
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := 2.;
__n160["raw"] := "2";
__n161 := {  };
__n161["type"] := "NewExpression";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "myObj";
__n161["callee"] := __n162;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := 3.;
__n164["raw"] := "3";
__n163 := [ __n164 ];
__n161["arguments"] := __n163;
__n165 := {  };
__n165["type"] := "NewExpression";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "myObj";
__n165["callee"] := __n166;
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := 4.;
__n168["raw"] := "4";
__n167 := [ __n168 ];
__n165["arguments"] := __n167;
__n169 := {  };
__n169["type"] := "NewExpression";
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "myObj";
__n169["callee"] := __n170;
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := 5.;
__n172["raw"] := "5";
__n171 := [ __n172 ];
__n169["arguments"] := __n171;
__n158 := [ __n159, __n160, __n161, __n165, __n169 ];
__n156["arguments"] := __n158;
__n154["init"] := __n156;
__n153 := [ __n154 ];
__n152["declarations"] := __n153;
__n152["kind"] := "var";
__n173 := {  };
__n173["type"] := "ExpressionStatement";
__n174 := {  };
__n174["type"] := "CallExpression";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "$ERROR";
__n174["callee"] := __n175;
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "#3: The 3rd step is calling ToNumber(date)";
__n177["raw"] := "\"#3: The 3rd step is calling ToNumber(date)\"";
__n176 := [ __n177 ];
__n174["arguments"] := __n176;
__n173["expression"] := __n174;
__n151 := [ __n152, __n173 ];
__n150["body"] := __n151;
__n149["block"] := __n150;
__n178 := {  };
__n178["type"] := "CatchClause";
__n179 := {  };
__n179["type"] := "Identifier";
__n179["name"] := "e";
__n178["param"] := __n179;
__n180 := {  };
__n180["type"] := "BlockStatement";
__n182 := {  };
__n182["type"] := "IfStatement";
__n183 := {  };
__n183["type"] := "BinaryExpression";
__n183["operator"] := "!==";
__n184 := {  };
__n184["type"] := "Identifier";
__n184["name"] := "e";
__n183["left"] := __n184;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "valueOf-3";
__n185["raw"] := "\"valueOf-3\"";
__n183["right"] := __n185;
__n182["test"] := __n183;
__n186 := {  };
__n186["type"] := "BlockStatement";
__n188 := {  };
__n188["type"] := "ExpressionStatement";
__n189 := {  };
__n189["type"] := "CallExpression";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "$ERROR";
__n189["callee"] := __n190;
__n192 := {  };
__n192["type"] := "Literal";
__n192["value"] := "#3: The 3rd step is calling ToNumber(date)";
__n192["raw"] := "\"#3: The 3rd step is calling ToNumber(date)\"";
__n191 := [ __n192 ];
__n189["arguments"] := __n191;
__n188["expression"] := __n189;
__n187 := [ __n188 ];
__n186["body"] := __n187;
__n182["consequent"] := __n186;
__n182["alternate"] := null;
__n181 := [ __n182 ];
__n180["body"] := __n181;
__n178["body"] := __n180;
__n149["handler"] := __n178;
__n149["finalizer"] := null;
__n193 := {  };
__n193["type"] := "TryStatement";
__n194 := {  };
__n194["type"] := "BlockStatement";
__n196 := {  };
__n196["type"] := "VariableDeclaration";
__n198 := {  };
__n198["type"] := "VariableDeclarator";
__n199 := {  };
__n199["type"] := "Identifier";
__n199["name"] := "x4";
__n198["id"] := __n199;
__n200 := {  };
__n200["type"] := "NewExpression";
__n201 := {  };
__n201["type"] := "Identifier";
__n201["name"] := "Date";
__n200["callee"] := __n201;
__n203 := {  };
__n203["type"] := "Literal";
__n203["value"] := 1.;
__n203["raw"] := "1";
__n204 := {  };
__n204["type"] := "Literal";
__n204["value"] := 2.;
__n204["raw"] := "2";
__n205 := {  };
__n205["type"] := "Literal";
__n205["value"] := 3.;
__n205["raw"] := "3";
__n206 := {  };
__n206["type"] := "NewExpression";
__n207 := {  };
__n207["type"] := "Identifier";
__n207["name"] := "myObj";
__n206["callee"] := __n207;
__n209 := {  };
__n209["type"] := "Literal";
__n209["value"] := 4.;
__n209["raw"] := "4";
__n208 := [ __n209 ];
__n206["arguments"] := __n208;
__n210 := {  };
__n210["type"] := "NewExpression";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "myObj";
__n210["callee"] := __n211;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := 5.;
__n213["raw"] := "5";
__n212 := [ __n213 ];
__n210["arguments"] := __n212;
__n202 := [ __n203, __n204, __n205, __n206, __n210 ];
__n200["arguments"] := __n202;
__n198["init"] := __n200;
__n197 := [ __n198 ];
__n196["declarations"] := __n197;
__n196["kind"] := "var";
__n214 := {  };
__n214["type"] := "ExpressionStatement";
__n215 := {  };
__n215["type"] := "CallExpression";
__n216 := {  };
__n216["type"] := "Identifier";
__n216["name"] := "$ERROR";
__n215["callee"] := __n216;
__n218 := {  };
__n218["type"] := "Literal";
__n218["value"] := "#4: The 4th step is calling ToNumber(hours)";
__n218["raw"] := "\"#4: The 4th step is calling ToNumber(hours)\"";
__n217 := [ __n218 ];
__n215["arguments"] := __n217;
__n214["expression"] := __n215;
__n195 := [ __n196, __n214 ];
__n194["body"] := __n195;
__n193["block"] := __n194;
__n219 := {  };
__n219["type"] := "CatchClause";
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "e";
__n219["param"] := __n220;
__n221 := {  };
__n221["type"] := "BlockStatement";
__n223 := {  };
__n223["type"] := "IfStatement";
__n224 := {  };
__n224["type"] := "BinaryExpression";
__n224["operator"] := "!==";
__n225 := {  };
__n225["type"] := "Identifier";
__n225["name"] := "e";
__n224["left"] := __n225;
__n226 := {  };
__n226["type"] := "Literal";
__n226["value"] := "valueOf-4";
__n226["raw"] := "\"valueOf-4\"";
__n224["right"] := __n226;
__n223["test"] := __n224;
__n227 := {  };
__n227["type"] := "BlockStatement";
__n229 := {  };
__n229["type"] := "ExpressionStatement";
__n230 := {  };
__n230["type"] := "CallExpression";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "$ERROR";
__n230["callee"] := __n231;
__n233 := {  };
__n233["type"] := "Literal";
__n233["value"] := "#4: The 4th step is calling ToNumber(hours)";
__n233["raw"] := "\"#4: The 4th step is calling ToNumber(hours)\"";
__n232 := [ __n233 ];
__n230["arguments"] := __n232;
__n229["expression"] := __n230;
__n228 := [ __n229 ];
__n227["body"] := __n228;
__n223["consequent"] := __n227;
__n223["alternate"] := null;
__n222 := [ __n223 ];
__n221["body"] := __n222;
__n219["body"] := __n221;
__n193["handler"] := __n219;
__n193["finalizer"] := null;
__n234 := {  };
__n234["type"] := "TryStatement";
__n235 := {  };
__n235["type"] := "BlockStatement";
__n237 := {  };
__n237["type"] := "VariableDeclaration";
__n239 := {  };
__n239["type"] := "VariableDeclarator";
__n240 := {  };
__n240["type"] := "Identifier";
__n240["name"] := "x5";
__n239["id"] := __n240;
__n241 := {  };
__n241["type"] := "NewExpression";
__n242 := {  };
__n242["type"] := "Identifier";
__n242["name"] := "Date";
__n241["callee"] := __n242;
__n244 := {  };
__n244["type"] := "Literal";
__n244["value"] := 1.;
__n244["raw"] := "1";
__n245 := {  };
__n245["type"] := "Literal";
__n245["value"] := 2.;
__n245["raw"] := "2";
__n246 := {  };
__n246["type"] := "Literal";
__n246["value"] := 3.;
__n246["raw"] := "3";
__n247 := {  };
__n247["type"] := "Literal";
__n247["value"] := 4.;
__n247["raw"] := "4";
__n248 := {  };
__n248["type"] := "NewExpression";
__n249 := {  };
__n249["type"] := "Identifier";
__n249["name"] := "myObj";
__n248["callee"] := __n249;
__n251 := {  };
__n251["type"] := "Literal";
__n251["value"] := 5.;
__n251["raw"] := "5";
__n250 := [ __n251 ];
__n248["arguments"] := __n250;
__n243 := [ __n244, __n245, __n246, __n247, __n248 ];
__n241["arguments"] := __n243;
__n239["init"] := __n241;
__n238 := [ __n239 ];
__n237["declarations"] := __n238;
__n237["kind"] := "var";
__n252 := {  };
__n252["type"] := "ExpressionStatement";
__n253 := {  };
__n253["type"] := "CallExpression";
__n254 := {  };
__n254["type"] := "Identifier";
__n254["name"] := "$ERROR";
__n253["callee"] := __n254;
__n256 := {  };
__n256["type"] := "Literal";
__n256["value"] := "#5: The 5th step is calling ToNumber(minutes)";
__n256["raw"] := "\"#5: The 5th step is calling ToNumber(minutes)\"";
__n255 := [ __n256 ];
__n253["arguments"] := __n255;
__n252["expression"] := __n253;
__n236 := [ __n237, __n252 ];
__n235["body"] := __n236;
__n234["block"] := __n235;
__n257 := {  };
__n257["type"] := "CatchClause";
__n258 := {  };
__n258["type"] := "Identifier";
__n258["name"] := "e";
__n257["param"] := __n258;
__n259 := {  };
__n259["type"] := "BlockStatement";
__n261 := {  };
__n261["type"] := "IfStatement";
__n262 := {  };
__n262["type"] := "BinaryExpression";
__n262["operator"] := "!==";
__n263 := {  };
__n263["type"] := "Identifier";
__n263["name"] := "e";
__n262["left"] := __n263;
__n264 := {  };
__n264["type"] := "Literal";
__n264["value"] := "valueOf-5";
__n264["raw"] := "\"valueOf-5\"";
__n262["right"] := __n264;
__n261["test"] := __n262;
__n265 := {  };
__n265["type"] := "BlockStatement";
__n267 := {  };
__n267["type"] := "ExpressionStatement";
__n268 := {  };
__n268["type"] := "CallExpression";
__n269 := {  };
__n269["type"] := "Identifier";
__n269["name"] := "$ERROR";
__n268["callee"] := __n269;
__n271 := {  };
__n271["type"] := "Literal";
__n271["value"] := "#5: The 5th step is calling ToNumber(minutes)";
__n271["raw"] := "\"#5: The 5th step is calling ToNumber(minutes)\"";
__n270 := [ __n271 ];
__n268["arguments"] := __n270;
__n267["expression"] := __n268;
__n266 := [ __n267 ];
__n265["body"] := __n266;
__n261["consequent"] := __n265;
__n261["alternate"] := null;
__n260 := [ __n261 ];
__n259["body"] := __n260;
__n257["body"] := __n259;
__n234["handler"] := __n257;
__n234["finalizer"] := null;
__n1 := [ __n2, __n52, __n102, __n149, __n193, __n234 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n272 := [ "myObj", "x1", "x2", "x3", "x4", "x5" ];
__n0["variableDeclarations"] := __n272;
__n273 := [  ];
__n0["functionDeclarations"] := __n273;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}