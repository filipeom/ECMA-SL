function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Date";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "UTC";
__n9["raw"] := "\"UTC\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["object"] := __n7;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "length";
__n10["raw"] := "\"length\"";
__n6["property"] := __n10;
__n6["computed"] := true;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "verifyNotWritable";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Date";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "UTC";
__n17["raw"] := "\"UTC\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "length";
__n18["raw"] := "\"length\"";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 'null;
__n19["raw"] := "\"'null\"";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 1.;
__n20["raw"] := "1";
__n14 := [ __n15, __n18, __n19, __n20 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n21 := {  };
__n21["type"] := "IfStatement";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "!==";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Date";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "UTC";
__n26["raw"] := "\"UTC\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["object"] := __n24;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "length";
__n27["raw"] := "\"length\"";
__n23["property"] := __n27;
__n23["computed"] := true;
__n22["left"] := __n23;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "x";
__n22["right"] := __n28;
__n21["test"] := __n22;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "$ERROR";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "#1: The Date.UTC.length has the attribute ReadOnly";
__n35["raw"] := "'#1: The Date.UTC.length has the attribute ReadOnly'";
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n21["consequent"] := __n29;
__n21["alternate"] := null;
__n1 := [ __n2, __n11, __n21 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n36 := [ "x" ];
__n0["variableDeclarations"] := __n36;
__n37 := [  ];
__n0["functionDeclarations"] := __n37;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}