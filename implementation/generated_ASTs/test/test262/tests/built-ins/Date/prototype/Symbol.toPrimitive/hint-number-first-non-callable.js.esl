function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "tsCallCount";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "obj";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "valueOf";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 'null;
__n15["raw"] := "\"'null\"";
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "init";
__n13["shorthand"] := false;
__n16 := {  };
__n16["type"] := "Property";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "toString";
__n16["key"] := __n17;
__n18 := {  };
__n18["type"] := "FunctionExpression";
__n18["id"] := null;
__n19 := [  ];
__n18["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "AssignmentExpression";
__n23["operator"] := "+=";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "tsCallCount";
__n23["left"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 1.;
__n25["raw"] := "1";
__n23["right"] := __n25;
__n22["expression"] := __n23;
__n26 := {  };
__n26["type"] := "ReturnStatement";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "toString test262";
__n27["raw"] := "'toString test262'";
__n26["argument"] := __n27;
__n21 := [ __n22, __n26 ];
__n20["body"] := __n21;
__n28 := [  ];
__n20["variableDeclarations"] := __n28;
__n29 := [  ];
__n20["functionDeclarations"] := __n29;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n18["body"] := __n20;
__n18["generator"] := false;
__n18["async"] := false;
__n18["expression"] := false;
__n16["value"] := __n18;
__n16["computed"] := false;
__n16["kind"] := "init";
__n16["shorthand"] := false;
__n12 := [ __n13, __n16 ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "assert";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "sameValue";
__n34["raw"] := "\"sameValue\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n38["computed"] := true;
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Date";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "prototype";
__n41["raw"] := "\"prototype\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["object"] := __n39;
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Symbol";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "toPrimitive";
__n44["raw"] := "\"toPrimitive\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n38["property"] := __n42;
__n37["object"] := __n38;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "call";
__n45["raw"] := "\"call\"";
__n37["property"] := __n45;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "obj";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "number";
__n48["raw"] := "'number'";
__n46 := [ __n47, __n48 ];
__n36["arguments"] := __n46;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "toString test262";
__n49["raw"] := "'toString test262'";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "`toString` is used as a fallback when `valueOf` is not callable";
__n50["raw"] := "'`toString` is used as a fallback when `valueOf` is not callable'";
__n35 := [ __n36, __n49, __n50 ];
__n31["arguments"] := __n35;
__n30["expression"] := __n31;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "assert";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "sameValue";
__n55["raw"] := "\"sameValue\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "tsCallCount";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 1.;
__n58["raw"] := "1";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "`toString` method was invoked exactly once";
__n59["raw"] := "'`toString` method was invoked exactly once'";
__n56 := [ __n57, __n58, __n59 ];
__n52["arguments"] := __n56;
__n51["expression"] := __n52;
__n1 := [ __n2, __n7, __n30, __n51 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n60 := [ "tsCallCount", "obj" ];
__n0["variableDeclarations"] := __n60;
__n61 := [  ];
__n0["functionDeclarations"] := __n61;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}