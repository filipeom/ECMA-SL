function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "date";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Date";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 2016.;
__n9["raw"] := "2016";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 6.;
__n10["raw"] := "6";
__n8 := [ __n9, __n10 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "returnValue";
__n13["id"] := __n14;
__n13["init"] := null;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "AssignmentExpression";
__n16["operator"] := "=";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "returnValue";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "date";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "setTime";
__n21["raw"] := "\"setTime\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 6.;
__n23["raw"] := "6";
__n22 := [ __n23 ];
__n18["arguments"] := __n22;
__n16["right"] := __n18;
__n15["expression"] := __n16;
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "sameValue";
__n28["raw"] := "\"sameValue\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "returnValue";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 6.;
__n31["raw"] := "6";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "within unit boundary (return value)";
__n32["raw"] := "'within unit boundary (return value)'";
__n29 := [ __n30, __n31, __n32 ];
__n25["arguments"] := __n29;
__n24["expression"] := __n25;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "assert";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "sameValue";
__n37["raw"] := "\"sameValue\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "date";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "getTime";
__n42["raw"] := "\"getTime\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n43 := [  ];
__n39["arguments"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 6.;
__n44["raw"] := "6";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "within unit boundary ([[DateValue]] slot)";
__n45["raw"] := "'within unit boundary ([[DateValue]] slot)'";
__n38 := [ __n39, __n44, __n45 ];
__n34["arguments"] := __n38;
__n33["expression"] := __n34;
__n1 := [ __n2, __n11, __n15, __n24, __n33 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n46 := [ "date", "returnValue" ];
__n0["variableDeclarations"] := __n46;
__n47 := [  ];
__n0["functionDeclarations"] := __n47;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}