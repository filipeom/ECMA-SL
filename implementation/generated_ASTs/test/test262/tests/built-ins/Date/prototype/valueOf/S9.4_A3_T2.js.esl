function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "d1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Date";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Number";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "NaN";
__n11["raw"] := "\"NaN\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "IfStatement";
__n13 := {  };
__n13["type"] := "UnaryExpression";
__n13["operator"] := "!";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "isNaN";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "d1";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "valueOf";
__n20["raw"] := "\"valueOf\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n21 := [  ];
__n17["arguments"] := __n21;
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["argument"] := __n14;
__n13["prefix"] := true;
__n12["test"] := __n13;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "$ERROR";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "#1: var d1 = new Date(Number.NaN); d1.valueOf() === Number.NaN;";
__n28["raw"] := "'#1: var d1 = new Date(Number.NaN); d1.valueOf() === Number.NaN;'";
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n24["expression"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n12["consequent"] := __n22;
__n12["alternate"] := null;
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "d2";
__n31["id"] := __n32;
__n33 := {  };
__n33["type"] := "NewExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Date";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Infinity";
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n31["init"] := __n33;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n37 := {  };
__n37["type"] := "IfStatement";
__n38 := {  };
__n38["type"] := "UnaryExpression";
__n38["operator"] := "!";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "isNaN";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "d2";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "valueOf";
__n45["raw"] := "\"valueOf\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n46 := [  ];
__n42["arguments"] := __n46;
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["argument"] := __n39;
__n38["prefix"] := true;
__n37["test"] := __n38;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#2: var d2 = new Date(Infinity); d2.valueOf() === Number.NaN;";
__n53["raw"] := "'#2: var d2 = new Date(Infinity); d2.valueOf() === Number.NaN;'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n37["consequent"] := __n47;
__n37["alternate"] := null;
__n54 := {  };
__n54["type"] := "VariableDeclaration";
__n56 := {  };
__n56["type"] := "VariableDeclarator";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "d3";
__n56["id"] := __n57;
__n58 := {  };
__n58["type"] := "NewExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Date";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "UnaryExpression";
__n61["operator"] := "-";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "Infinity";
__n61["argument"] := __n62;
__n61["prefix"] := true;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n56["init"] := __n58;
__n55 := [ __n56 ];
__n54["declarations"] := __n55;
__n54["kind"] := "var";
__n63 := {  };
__n63["type"] := "IfStatement";
__n64 := {  };
__n64["type"] := "UnaryExpression";
__n64["operator"] := "!";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "isNaN";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "d3";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "valueOf";
__n71["raw"] := "\"valueOf\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n72 := [  ];
__n68["arguments"] := __n72;
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["argument"] := __n65;
__n64["prefix"] := true;
__n63["test"] := __n64;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "$ERROR";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "#3: var d3 = new Date(-Infinity); d3.valueOf() === Number.NaN;";
__n79["raw"] := "'#3: var d3 = new Date(-Infinity); d3.valueOf() === Number.NaN;'";
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["expression"] := __n76;
__n74 := [ __n75 ];
__n73["body"] := __n74;
__n63["consequent"] := __n73;
__n63["alternate"] := null;
__n80 := {  };
__n80["type"] := "VariableDeclaration";
__n82 := {  };
__n82["type"] := "VariableDeclarator";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "d4";
__n82["id"] := __n83;
__n84 := {  };
__n84["type"] := "NewExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "Date";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 0.;
__n87["raw"] := "0";
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n82["init"] := __n84;
__n81 := [ __n82 ];
__n80["declarations"] := __n81;
__n80["kind"] := "var";
__n88 := {  };
__n88["type"] := "IfStatement";
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "!==";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "d4";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "valueOf";
__n93["raw"] := "\"valueOf\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n90["callee"] := __n91;
__n94 := [  ];
__n90["arguments"] := __n94;
__n89["left"] := __n90;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 0.;
__n95["raw"] := "0";
__n89["right"] := __n95;
__n88["test"] := __n89;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "$ERROR";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "#4: var d4 = new Date(0); d4.valueOf() === 0;";
__n102["raw"] := "'#4: var d4 = new Date(0); d4.valueOf() === 0;'";
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n88["consequent"] := __n96;
__n88["alternate"] := null;
__n103 := {  };
__n103["type"] := "VariableDeclaration";
__n105 := {  };
__n105["type"] := "VariableDeclarator";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "d5";
__n105["id"] := __n106;
__n107 := {  };
__n107["type"] := "NewExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "Date";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "UnaryExpression";
__n110["operator"] := "-";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 0.;
__n111["raw"] := "0";
__n110["argument"] := __n111;
__n110["prefix"] := true;
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n105["init"] := __n107;
__n104 := [ __n105 ];
__n103["declarations"] := __n104;
__n103["kind"] := "var";
__n112 := {  };
__n112["type"] := "IfStatement";
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := "!==";
__n114 := {  };
__n114["type"] := "CallExpression";
__n115 := {  };
__n115["type"] := "MemberExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "d5";
__n115["object"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "valueOf";
__n117["raw"] := "\"valueOf\"";
__n115["property"] := __n117;
__n115["computed"] := true;
__n114["callee"] := __n115;
__n118 := [  ];
__n114["arguments"] := __n118;
__n113["left"] := __n114;
__n119 := {  };
__n119["type"] := "UnaryExpression";
__n119["operator"] := "-";
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := 0.;
__n120["raw"] := "0";
__n119["argument"] := __n120;
__n119["prefix"] := true;
__n113["right"] := __n119;
__n112["test"] := __n113;
__n121 := {  };
__n121["type"] := "BlockStatement";
__n123 := {  };
__n123["type"] := "ExpressionStatement";
__n124 := {  };
__n124["type"] := "CallExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "$ERROR";
__n124["callee"] := __n125;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "#5: var d5 = new Date(-0); d5.valueOf() === -0;";
__n127["raw"] := "'#5: var d5 = new Date(-0); d5.valueOf() === -0;'";
__n126 := [ __n127 ];
__n124["arguments"] := __n126;
__n123["expression"] := __n124;
__n122 := [ __n123 ];
__n121["body"] := __n122;
__n112["consequent"] := __n121;
__n112["alternate"] := null;
__n1 := [ __n2, __n12, __n29, __n37, __n54, __n63, __n80, __n88, __n103, __n112 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n128 := [ "d1", "d2", "d3", "d4", "d5" ];
__n0["variableDeclarations"] := __n128;
__n129 := [  ];
__n0["functionDeclarations"] := __n129;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}