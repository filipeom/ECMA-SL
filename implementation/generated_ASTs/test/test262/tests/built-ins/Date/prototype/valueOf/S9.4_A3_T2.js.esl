function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "d1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Date";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Number";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "NaN";
__n11["raw"] := "\"NaN\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "assert";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "sameValue";
__n16["raw"] := "\"sameValue\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "d1";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "valueOf";
__n21["raw"] := "\"valueOf\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n22 := [  ];
__n18["arguments"] := __n22;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "NaN";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "NaN";
__n24["raw"] := "\"NaN\"";
__n17 := [ __n18, __n23, __n24 ];
__n13["arguments"] := __n17;
__n12["expression"] := __n13;
__n25 := {  };
__n25["type"] := "VariableDeclaration";
__n27 := {  };
__n27["type"] := "VariableDeclarator";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "d2";
__n27["id"] := __n28;
__n29 := {  };
__n29["type"] := "NewExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Date";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Infinity";
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n27["init"] := __n29;
__n26 := [ __n27 ];
__n25["declarations"] := __n26;
__n25["kind"] := "var";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "assert";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "sameValue";
__n37["raw"] := "\"sameValue\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "d2";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "valueOf";
__n42["raw"] := "\"valueOf\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n43 := [  ];
__n39["arguments"] := __n43;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "NaN";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "Infinity";
__n45["raw"] := "\"Infinity\"";
__n38 := [ __n39, __n44, __n45 ];
__n34["arguments"] := __n38;
__n33["expression"] := __n34;
__n46 := {  };
__n46["type"] := "VariableDeclaration";
__n48 := {  };
__n48["type"] := "VariableDeclarator";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "d3";
__n48["id"] := __n49;
__n50 := {  };
__n50["type"] := "NewExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "Date";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "UnaryExpression";
__n53["operator"] := "-";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "Infinity";
__n53["argument"] := __n54;
__n53["prefix"] := true;
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n48["init"] := __n50;
__n47 := [ __n48 ];
__n46["declarations"] := __n47;
__n46["kind"] := "var";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "assert";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "sameValue";
__n59["raw"] := "\"sameValue\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "d3";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "valueOf";
__n64["raw"] := "\"valueOf\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n65 := [  ];
__n61["arguments"] := __n65;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "NaN";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "-Infinity";
__n67["raw"] := "\"-Infinity\"";
__n60 := [ __n61, __n66, __n67 ];
__n56["arguments"] := __n60;
__n55["expression"] := __n56;
__n68 := {  };
__n68["type"] := "VariableDeclaration";
__n70 := {  };
__n70["type"] := "VariableDeclarator";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "d4";
__n70["id"] := __n71;
__n72 := {  };
__n72["type"] := "NewExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "Date";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 0.;
__n75["raw"] := "0";
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n70["init"] := __n72;
__n69 := [ __n70 ];
__n68["declarations"] := __n69;
__n68["kind"] := "var";
__n76 := {  };
__n76["type"] := "IfStatement";
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "!==";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "d4";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "valueOf";
__n81["raw"] := "\"valueOf\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n78["callee"] := __n79;
__n82 := [  ];
__n78["arguments"] := __n82;
__n77["left"] := __n78;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 0.;
__n83["raw"] := "0";
__n77["right"] := __n83;
__n76["test"] := __n77;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "ThrowStatement";
__n87 := {  };
__n87["type"] := "NewExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "Test262Error";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "#4: var d4 = new Date(0); d4.valueOf() === 0;";
__n90["raw"] := "'#4: var d4 = new Date(0); d4.valueOf() === 0;'";
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86["argument"] := __n87;
__n85 := [ __n86 ];
__n84["body"] := __n85;
__n76["consequent"] := __n84;
__n76["alternate"] := null;
__n91 := {  };
__n91["type"] := "VariableDeclaration";
__n93 := {  };
__n93["type"] := "VariableDeclarator";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "d5";
__n93["id"] := __n94;
__n95 := {  };
__n95["type"] := "NewExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "Date";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "UnaryExpression";
__n98["operator"] := "-";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 0.;
__n99["raw"] := "0";
__n98["argument"] := __n99;
__n98["prefix"] := true;
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n93["init"] := __n95;
__n92 := [ __n93 ];
__n91["declarations"] := __n92;
__n91["kind"] := "var";
__n100 := {  };
__n100["type"] := "IfStatement";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "!==";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "d5";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "valueOf";
__n105["raw"] := "\"valueOf\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n102["callee"] := __n103;
__n106 := [  ];
__n102["arguments"] := __n106;
__n101["left"] := __n102;
__n107 := {  };
__n107["type"] := "UnaryExpression";
__n107["operator"] := "-";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := 0.;
__n108["raw"] := "0";
__n107["argument"] := __n108;
__n107["prefix"] := true;
__n101["right"] := __n107;
__n100["test"] := __n101;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "ThrowStatement";
__n112 := {  };
__n112["type"] := "NewExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "Test262Error";
__n112["callee"] := __n113;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "#5: var d5 = new Date(-0); d5.valueOf() === -0;";
__n115["raw"] := "'#5: var d5 = new Date(-0); d5.valueOf() === -0;'";
__n114 := [ __n115 ];
__n112["arguments"] := __n114;
__n111["argument"] := __n112;
__n110 := [ __n111 ];
__n109["body"] := __n110;
__n100["consequent"] := __n109;
__n100["alternate"] := null;
__n1 := [ __n2, __n12, __n25, __n33, __n46, __n55, __n68, __n76, __n91, __n100 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n116 := [ "d1", "d2", "d3", "d4", "d5" ];
__n0["variableDeclarations"] := __n116;
__n117 := [  ];
__n0["functionDeclarations"] := __n117;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}