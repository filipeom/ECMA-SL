function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "foo";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Function";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "baz";
__n9["raw"] := "\"baz\"";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "baz";
__n10["raw"] := "\"baz\"";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "baz";
__n11["raw"] := "\"baz\"";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "return 0;";
__n12["raw"] := "\"return 0;\"";
__n8 := [ __n9, __n10, __n11, __n12 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n13 := [ "foo" ];
__n0["variableDeclarations"] := __n13;
__n14 := [  ];
__n0["functionDeclarations"] := __n14;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}