function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := "use strict";
__n3["raw"] := "\"use strict\"";
__n2["expression"] := __n3;
__n2["directive"] := "use strict";
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "f1";
__n4["expression"] := __n5;
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "assert";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "throws";
__n10["raw"] := "\"throws\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["callee"] := __n8;
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "TypeError";
__n13 := {  };
__n13["type"] := "FunctionExpression";
__n13["id"] := null;
__n14 := [  ];
__n13["params"] := __n14;
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "f1";
__n18["callee"] := __n19;
__n20 := [  ];
__n18["arguments"] := __n20;
__n17["expression"] := __n18;
__n16 := [ __n17 ];
__n15["body"] := __n16;
__n21 := [  ];
__n15["variableDeclarations"] := __n21;
__n22 := [  ];
__n15["functionDeclarations"] := __n22;
__n15["codeType"] := "function";
__n15["strict"] := false;
__n13["body"] := __n15;
__n13["generator"] := false;
__n13["expression"] := false;
__n13["async"] := false;
__n11 := [ __n12, __n13 ];
__n7["arguments"] := __n11;
__n6["expression"] := __n7;
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "gNonStrict";
__n23["expression"] := __n24;
__n1 := [ __n2, __n4, __n6, __n23 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n25 := [  ];
__n0["variableDeclarations"] := __n25;
__n27 := {  };
__n27["type"] := "FunctionDeclaration";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "f1";
__n27["id"] := __n28;
__n29 := [  ];
__n27["params"] := __n29;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "FunctionExpression";
__n34["id"] := null;
__n35 := [  ];
__n34["params"] := __n35;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "gNonStrict";
__n39["callee"] := __n40;
__n41 := [  ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n42 := [  ];
__n36["variableDeclarations"] := __n42;
__n43 := [  ];
__n36["functionDeclarations"] := __n43;
__n36["codeType"] := "function";
__n36["strict"] := false;
__n34["body"] := __n36;
__n34["generator"] := false;
__n34["expression"] := false;
__n34["async"] := false;
__n33["callee"] := __n34;
__n44 := [  ];
__n33["arguments"] := __n44;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n45 := [  ];
__n30["variableDeclarations"] := __n45;
__n46 := [  ];
__n30["functionDeclarations"] := __n46;
__n30["codeType"] := "function";
__n30["strict"] := false;
__n27["body"] := __n30;
__n27["generator"] := false;
__n27["expression"] := false;
__n27["async"] := false;
__n47 := {  };
__n47["type"] := "FunctionDeclaration";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "gNonStrict";
__n47["id"] := __n48;
__n49 := [  ];
__n47["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ReturnStatement";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "gNonStrict";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "caller";
__n55["raw"] := "\"caller\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["argument"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n56 := [  ];
__n50["variableDeclarations"] := __n56;
__n57 := [  ];
__n50["functionDeclarations"] := __n57;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n47["body"] := __n50;
__n47["generator"] := false;
__n47["expression"] := false;
__n47["async"] := false;
__n26 := [ __n27, __n47 ];
__n0["functionDeclarations"] := __n26;
__n0["codeType"] := "global";
__n0["strict"] := true;
return __n0
}