function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := "use strict";
__n3["raw"] := "\"use strict\"";
__n2["expression"] := __n3;
__n2["directive"] := "use strict";
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "assert";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "throws";
__n8["raw"] := "\"throws\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "TypeError";
__n11 := {  };
__n11["type"] := "FunctionExpression";
__n11["id"] := null;
__n12 := [  ];
__n11["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "FunctionExpression";
__n17["id"] := null;
__n18 := [  ];
__n17["params"] := __n18;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "FunctionExpression";
__n23["id"] := null;
__n24 := [  ];
__n23["params"] := __n24;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "gNonStrict";
__n28["callee"] := __n29;
__n30 := [  ];
__n28["arguments"] := __n30;
__n27["expression"] := __n28;
__n26 := [ __n27 ];
__n25["body"] := __n26;
__n31 := [  ];
__n25["variableDeclarations"] := __n31;
__n32 := [  ];
__n25["functionDeclarations"] := __n32;
__n25["codeType"] := "function";
__n25["strict"] := false;
__n23["body"] := __n25;
__n23["generator"] := false;
__n23["async"] := false;
__n23["expression"] := false;
__n22["callee"] := __n23;
__n33 := [  ];
__n22["arguments"] := __n33;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n34 := [  ];
__n19["variableDeclarations"] := __n34;
__n35 := [  ];
__n19["functionDeclarations"] := __n35;
__n19["codeType"] := "function";
__n19["strict"] := false;
__n17["body"] := __n19;
__n17["generator"] := false;
__n17["async"] := false;
__n17["expression"] := false;
__n16["callee"] := __n17;
__n36 := [  ];
__n16["arguments"] := __n36;
__n15["expression"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n37 := [  ];
__n13["variableDeclarations"] := __n37;
__n38 := [  ];
__n13["functionDeclarations"] := __n38;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n11["body"] := __n13;
__n11["generator"] := false;
__n11["async"] := false;
__n11["expression"] := false;
__n9 := [ __n10, __n11 ];
__n5["arguments"] := __n9;
__n4["expression"] := __n5;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "gNonStrict";
__n39["expression"] := __n40;
__n1 := [ __n2, __n4, __n39 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n41 := [  ];
__n0["variableDeclarations"] := __n41;
__n43 := {  };
__n43["type"] := "FunctionDeclaration";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "gNonStrict";
__n43["id"] := __n44;
__n45 := [  ];
__n43["params"] := __n45;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ReturnStatement";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "gNonStrict";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "caller";
__n51["raw"] := "\"caller\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["argument"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n52 := [  ];
__n46["variableDeclarations"] := __n52;
__n53 := [  ];
__n46["functionDeclarations"] := __n53;
__n46["codeType"] := "function";
__n46["strict"] := false;
__n43["body"] := __n46;
__n43["generator"] := false;
__n43["async"] := false;
__n43["expression"] := false;
__n42 := [ __n43 ];
__n0["functionDeclarations"] := __n42;
__n0["codeType"] := "global";
__n0["strict"] := true;
return ( false, __n0 )
}