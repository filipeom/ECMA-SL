function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "o";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "defineProperty";
__n12["raw"] := "\"defineProperty\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "o";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "foo";
__n15["raw"] := "\"foo\"";
__n16 := {  };
__n16["type"] := "ObjectExpression";
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "set";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "FunctionExpression";
__n20["id"] := null;
__n21 := [ "stuff" ];
__n20["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "use strict";
__n25["raw"] := "\"use strict\"";
__n24["expression"] := __n25;
__n24["directive"] := "use strict";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "gNonStrict";
__n27["callee"] := __n28;
__n29 := [  ];
__n27["arguments"] := __n29;
__n26["expression"] := __n27;
__n23 := [ __n24, __n26 ];
__n22["body"] := __n23;
__n30 := [  ];
__n22["variableDeclarations"] := __n30;
__n31 := [  ];
__n22["functionDeclarations"] := __n31;
__n22["codeType"] := "function";
__n22["strict"] := true;
__n20["body"] := __n22;
__n20["generator"] := false;
__n20["async"] := false;
__n20["expression"] := false;
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n17 := [ __n18 ];
__n16["properties"] := __n17;
__n13 := [ __n14, __n15, __n16 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "assert";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "throws";
__n36["raw"] := "\"throws\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "TypeError";
__n39 := {  };
__n39["type"] := "FunctionExpression";
__n39["id"] := null;
__n40 := [  ];
__n39["params"] := __n40;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "AssignmentExpression";
__n44["operator"] := "=";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "o";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "foo";
__n47["raw"] := "\"foo\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["left"] := __n45;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 10.;
__n48["raw"] := "10";
__n44["right"] := __n48;
__n43["expression"] := __n44;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n49 := [  ];
__n41["variableDeclarations"] := __n49;
__n50 := [  ];
__n41["functionDeclarations"] := __n50;
__n41["codeType"] := "function";
__n41["strict"] := false;
__n39["body"] := __n41;
__n39["generator"] := false;
__n39["async"] := false;
__n39["expression"] := false;
__n37 := [ __n38, __n39 ];
__n33["arguments"] := __n37;
__n32["expression"] := __n33;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "gNonStrict";
__n51["expression"] := __n52;
__n1 := [ __n2, __n8, __n32, __n51 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n53 := [ "o" ];
__n0["variableDeclarations"] := __n53;
__n55 := {  };
__n55["type"] := "FunctionDeclaration";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "gNonStrict";
__n55["id"] := __n56;
__n57 := [  ];
__n55["params"] := __n57;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ReturnStatement";
__n61 := {  };
__n61["type"] := "LogicalExpression";
__n61["operator"] := "||";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "gNonStrict";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "caller";
__n64["raw"] := "\"caller\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["left"] := __n62;
__n65 := {  };
__n65["type"] := "MemberExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "gNonStrict";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "caller";
__n68["raw"] := "\"caller\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["object"] := __n66;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "throwTypeError";
__n69["raw"] := "\"throwTypeError\"";
__n65["property"] := __n69;
__n65["computed"] := true;
__n61["right"] := __n65;
__n60["argument"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n70 := [  ];
__n58["variableDeclarations"] := __n70;
__n71 := [  ];
__n58["functionDeclarations"] := __n71;
__n58["codeType"] := "function";
__n58["strict"] := false;
__n55["body"] := __n58;
__n55["generator"] := false;
__n55["async"] := false;
__n55["expression"] := false;
__n54 := [ __n55 ];
__n0["functionDeclarations"] := __n54;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}