function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "global";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ThisExpression";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "f";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "EmptyStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "assert";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "throws";
__n14["raw"] := "\"throws\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "TypeError";
__n17 := {  };
__n17["type"] := "FunctionExpression";
__n17["id"] := null;
__n18 := [  ];
__n17["params"] := __n18;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "f";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "apply";
__n25["raw"] := "\"apply\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "global";
__n26 := [ __n27 ];
__n22["arguments"] := __n26;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n28 := [  ];
__n19["variableDeclarations"] := __n28;
__n29 := [  ];
__n19["functionDeclarations"] := __n29;
__n19["codeType"] := "function";
__n19["strict"] := false;
__n17["body"] := __n19;
__n17["generator"] := false;
__n17["async"] := false;
__n17["expression"] := false;
__n15 := [ __n16, __n17 ];
__n11["arguments"] := __n15;
__n10["expression"] := __n11;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "gNonStrict";
__n30["expression"] := __n31;
__n1 := [ __n2, __n7, __n9, __n10, __n30 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n32 := [ "global" ];
__n0["variableDeclarations"] := __n32;
__n34 := {  };
__n34["type"] := "FunctionDeclaration";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "f";
__n34["id"] := __n35;
__n36 := [  ];
__n34["params"] := __n36;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "use strict";
__n40["raw"] := "\"use strict\"";
__n39["expression"] := __n40;
__n39["directive"] := "use strict";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "gNonStrict";
__n42["callee"] := __n43;
__n44 := [  ];
__n42["arguments"] := __n44;
__n41["expression"] := __n42;
__n38 := [ __n39, __n41 ];
__n37["body"] := __n38;
__n45 := [  ];
__n37["variableDeclarations"] := __n45;
__n46 := [  ];
__n37["functionDeclarations"] := __n46;
__n37["codeType"] := "function";
__n37["strict"] := true;
__n34["body"] := __n37;
__n34["generator"] := false;
__n34["async"] := false;
__n34["expression"] := false;
__n47 := {  };
__n47["type"] := "FunctionDeclaration";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "gNonStrict";
__n47["id"] := __n48;
__n49 := [  ];
__n47["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ReturnStatement";
__n53 := {  };
__n53["type"] := "LogicalExpression";
__n53["operator"] := "||";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "gNonStrict";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "caller";
__n56["raw"] := "\"caller\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["left"] := __n54;
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "gNonStrict";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "caller";
__n60["raw"] := "\"caller\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["object"] := __n58;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "throwTypeError";
__n61["raw"] := "\"throwTypeError\"";
__n57["property"] := __n61;
__n57["computed"] := true;
__n53["right"] := __n57;
__n52["argument"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n62 := [  ];
__n50["variableDeclarations"] := __n62;
__n63 := [  ];
__n50["functionDeclarations"] := __n63;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n47["body"] := __n50;
__n47["generator"] := false;
__n47["async"] := false;
__n47["expression"] := false;
__n33 := [ __n34, __n47 ];
__n0["functionDeclarations"] := __n33;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}