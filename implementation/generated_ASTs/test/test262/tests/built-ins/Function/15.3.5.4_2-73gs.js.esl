function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "f";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "EmptyStatement";
__n5 := {  };
__n5["type"] := "VariableDeclaration";
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "o";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "ObjectExpression";
__n10 := [  ];
__n9["properties"] := __n10;
__n7["init"] := __n9;
__n6 := [ __n7 ];
__n5["declarations"] := __n6;
__n5["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "assert";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "throws";
__n15["raw"] := "\"throws\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["callee"] := __n13;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "TypeError";
__n18 := {  };
__n18["type"] := "FunctionExpression";
__n18["id"] := null;
__n19 := [  ];
__n18["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "f";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "bind";
__n27["raw"] := "\"bind\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "o";
__n28 := [ __n29 ];
__n24["arguments"] := __n28;
__n23["callee"] := __n24;
__n30 := [  ];
__n23["arguments"] := __n30;
__n22["expression"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n31 := [  ];
__n20["variableDeclarations"] := __n31;
__n32 := [  ];
__n20["functionDeclarations"] := __n32;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n18["body"] := __n20;
__n18["generator"] := false;
__n18["async"] := false;
__n18["expression"] := false;
__n16 := [ __n17, __n18 ];
__n12["arguments"] := __n16;
__n11["expression"] := __n12;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "gNonStrict";
__n33["expression"] := __n34;
__n1 := [ __n2, __n4, __n5, __n11, __n33 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n35 := [ "o" ];
__n0["variableDeclarations"] := __n35;
__n37 := {  };
__n37["type"] := "FunctionDeclaration";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "f";
__n37["id"] := __n38;
__n39 := [  ];
__n37["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "use strict";
__n43["raw"] := "\"use strict\"";
__n42["expression"] := __n43;
__n42["directive"] := "use strict";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "gNonStrict";
__n45["callee"] := __n46;
__n47 := [  ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n41 := [ __n42, __n44 ];
__n40["body"] := __n41;
__n48 := [  ];
__n40["variableDeclarations"] := __n48;
__n49 := [  ];
__n40["functionDeclarations"] := __n49;
__n40["codeType"] := "function";
__n40["strict"] := true;
__n37["body"] := __n40;
__n37["generator"] := false;
__n37["async"] := false;
__n37["expression"] := false;
__n50 := {  };
__n50["type"] := "FunctionDeclaration";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "gNonStrict";
__n50["id"] := __n51;
__n52 := [  ];
__n50["params"] := __n52;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ReturnStatement";
__n56 := {  };
__n56["type"] := "LogicalExpression";
__n56["operator"] := "||";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "gNonStrict";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "caller";
__n59["raw"] := "\"caller\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["left"] := __n57;
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "gNonStrict";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "caller";
__n63["raw"] := "\"caller\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["object"] := __n61;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "throwTypeError";
__n64["raw"] := "\"throwTypeError\"";
__n60["property"] := __n64;
__n60["computed"] := true;
__n56["right"] := __n60;
__n55["argument"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n65 := [  ];
__n53["variableDeclarations"] := __n65;
__n66 := [  ];
__n53["functionDeclarations"] := __n66;
__n53["codeType"] := "function";
__n53["strict"] := false;
__n50["body"] := __n53;
__n50["generator"] := false;
__n50["async"] := false;
__n50["expression"] := false;
__n36 := [ __n37, __n50 ];
__n0["functionDeclarations"] := __n36;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}