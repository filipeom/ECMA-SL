function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "f";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "EmptyStatement";
__n5 := {  };
__n5["type"] := "VariableDeclaration";
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "o";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "ObjectExpression";
__n10 := [  ];
__n9["properties"] := __n10;
__n7["init"] := __n9;
__n6 := [ __n7 ];
__n5["declarations"] := __n6;
__n5["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "FunctionExpression";
__n13["id"] := null;
__n14 := [  ];
__n13["params"] := __n14;
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "use strict";
__n18["raw"] := "\"use strict\"";
__n17["expression"] := __n18;
__n17["directive"] := "use strict";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "f";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "bind";
__n24["raw"] := "\"bind\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "o";
__n25 := [ __n26 ];
__n21["arguments"] := __n25;
__n20["callee"] := __n21;
__n27 := [  ];
__n20["arguments"] := __n27;
__n19["expression"] := __n20;
__n16 := [ __n17, __n19 ];
__n15["body"] := __n16;
__n28 := [  ];
__n15["variableDeclarations"] := __n28;
__n29 := [  ];
__n15["functionDeclarations"] := __n29;
__n15["codeType"] := "function";
__n15["strict"] := true;
__n13["body"] := __n15;
__n13["generator"] := false;
__n13["async"] := false;
__n13["expression"] := false;
__n12["callee"] := __n13;
__n30 := [  ];
__n12["arguments"] := __n30;
__n11["expression"] := __n12;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "gNonStrict";
__n31["expression"] := __n32;
__n1 := [ __n2, __n4, __n5, __n11, __n31 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n33 := [ "o" ];
__n0["variableDeclarations"] := __n33;
__n35 := {  };
__n35["type"] := "FunctionDeclaration";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "f";
__n35["id"] := __n36;
__n37 := [  ];
__n35["params"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ReturnStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "gNonStrict";
__n41["callee"] := __n42;
__n43 := [  ];
__n41["arguments"] := __n43;
__n40["argument"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n44 := [  ];
__n38["variableDeclarations"] := __n44;
__n45 := [  ];
__n38["functionDeclarations"] := __n45;
__n38["codeType"] := "function";
__n38["strict"] := false;
__n35["body"] := __n38;
__n35["generator"] := false;
__n35["async"] := false;
__n35["expression"] := false;
__n46 := {  };
__n46["type"] := "FunctionDeclaration";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "gNonStrict";
__n46["id"] := __n47;
__n48 := [  ];
__n46["params"] := __n48;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ReturnStatement";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "gNonStrict";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "caller";
__n54["raw"] := "\"caller\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["argument"] := __n52;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n55 := [  ];
__n49["variableDeclarations"] := __n55;
__n56 := [  ];
__n49["functionDeclarations"] := __n56;
__n49["codeType"] := "function";
__n49["strict"] := false;
__n46["body"] := __n49;
__n46["generator"] := false;
__n46["async"] := false;
__n46["expression"] := false;
__n34 := [ __n35, __n46 ];
__n0["functionDeclarations"] := __n34;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}