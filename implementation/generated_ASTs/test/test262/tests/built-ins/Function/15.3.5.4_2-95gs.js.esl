function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "gNonStrict";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Function";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "return gNonStrict.caller || gNonStrict.caller.throwTypeError;";
__n9["raw"] := "\"return gNonStrict.caller || gNonStrict.caller.throwTypeError;\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "f";
__n10["expression"] := __n11;
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "assert";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "throws";
__n16["raw"] := "\"throws\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "TypeError";
__n19 := {  };
__n19["type"] := "FunctionExpression";
__n19["id"] := null;
__n20 := [  ];
__n19["params"] := __n20;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "f";
__n24["callee"] := __n25;
__n26 := [  ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n27 := [  ];
__n21["variableDeclarations"] := __n27;
__n28 := [  ];
__n21["functionDeclarations"] := __n28;
__n21["codeType"] := "function";
__n21["strict"] := false;
__n19["body"] := __n21;
__n19["generator"] := false;
__n19["async"] := false;
__n19["expression"] := false;
__n17 := [ __n18, __n19 ];
__n13["arguments"] := __n17;
__n12["expression"] := __n13;
__n1 := [ __n2, __n10, __n12 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n29 := [ "gNonStrict" ];
__n0["variableDeclarations"] := __n29;
__n31 := {  };
__n31["type"] := "FunctionDeclaration";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "f";
__n31["id"] := __n32;
__n33 := [  ];
__n31["params"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "use strict";
__n37["raw"] := "\"use strict\"";
__n36["expression"] := __n37;
__n36["directive"] := "use strict";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "gNonStrict";
__n39["callee"] := __n40;
__n41 := [  ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n35 := [ __n36, __n38 ];
__n34["body"] := __n35;
__n42 := [  ];
__n34["variableDeclarations"] := __n42;
__n43 := [  ];
__n34["functionDeclarations"] := __n43;
__n34["codeType"] := "function";
__n34["strict"] := true;
__n31["body"] := __n34;
__n31["generator"] := false;
__n31["async"] := false;
__n31["expression"] := false;
__n30 := [ __n31 ];
__n0["functionDeclarations"] := __n30;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}