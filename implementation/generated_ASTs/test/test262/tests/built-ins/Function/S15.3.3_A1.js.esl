function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "UnaryExpression";
__n3["operator"] := "!";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Function";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "hasOwnProperty";
__n7["raw"] := "\"hasOwnProperty\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "prototype";
__n9["raw"] := "\"prototype\"";
__n8 := [ __n9 ];
__n4["arguments"] := __n8;
__n3["argument"] := __n4;
__n3["prefix"] := true;
__n2["test"] := __n3;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "$ERROR";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "#1: The Function constructor has the property \"prototype\"";
__n16["raw"] := "'#1: The Function constructor has the property \"prototype\"'";
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["expression"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n2["consequent"] := __n10;
__n2["alternate"] := null;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n17 := [  ];
__n0["variableDeclarations"] := __n17;
__n18 := [  ];
__n0["functionDeclarations"] := __n18;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}