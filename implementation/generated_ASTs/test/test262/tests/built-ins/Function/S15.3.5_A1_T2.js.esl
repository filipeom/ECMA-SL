function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "f";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Function";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "IfStatement";
__n10 := {  };
__n10["type"] := "BinaryExpression";
__n10["operator"] := "!==";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Object";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "prototype";
__n16["raw"] := "\"prototype\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["object"] := __n14;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "toString";
__n17["raw"] := "\"toString\"";
__n13["property"] := __n17;
__n13["computed"] := true;
__n12["object"] := __n13;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "call";
__n18["raw"] := "\"call\"";
__n12["property"] := __n18;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "f";
__n19 := [ __n20 ];
__n11["arguments"] := __n19;
__n10["left"] := __n11;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "[object Function]";
__n21["raw"] := "\"[object Function]\"";
__n10["right"] := __n21;
__n9["test"] := __n10;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "$ERROR";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "#1: The value of the [[Class]] property is \"Function\"";
__n28["raw"] := "'#1: The value of the [[Class]] property is \"Function\"'";
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n24["expression"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n9["consequent"] := __n22;
__n9["alternate"] := null;
__n1 := [ __n2, __n9 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n29 := [ "f" ];
__n0["variableDeclarations"] := __n29;
__n30 := [  ];
__n0["functionDeclarations"] := __n30;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}