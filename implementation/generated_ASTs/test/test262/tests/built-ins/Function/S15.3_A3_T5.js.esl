function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "f";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Function";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "call";
__n9["raw"] := "\"call\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "ThisExpression";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "return this.planet;";
__n12["raw"] := "\"return this.planet;\"";
__n10 := [ __n11, __n12 ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "g";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Function";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "call";
__n20["raw"] := "\"call\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n22 := {  };
__n22["type"] := "ThisExpression";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "return this.color;";
__n23["raw"] := "\"return this.color;\"";
__n21 := [ __n22, __n23 ];
__n17["arguments"] := __n21;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n24 := {  };
__n24["type"] := "IfStatement";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "!==";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "f";
__n26["callee"] := __n27;
__n28 := [  ];
__n26["arguments"] := __n28;
__n25["left"] := __n26;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "undefined";
__n25["right"] := __n29;
__n24["test"] := __n25;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "$ERROR";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "#2: ";
__n36["raw"] := "'#2: '";
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n24["consequent"] := __n30;
__n24["alternate"] := null;
__n37 := {  };
__n37["type"] := "VariableDeclaration";
__n39 := {  };
__n39["type"] := "VariableDeclarator";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "planet";
__n39["id"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "mars";
__n41["raw"] := "\"mars\"";
__n39["init"] := __n41;
__n38 := [ __n39 ];
__n37["declarations"] := __n38;
__n37["kind"] := "var";
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "!==";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "f";
__n44["callee"] := __n45;
__n46 := [  ];
__n44["arguments"] := __n46;
__n43["left"] := __n44;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "mars";
__n47["raw"] := "\"mars\"";
__n43["right"] := __n47;
__n42["test"] := __n43;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "$ERROR";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#2: ";
__n54["raw"] := "'#2: '";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n42["consequent"] := __n48;
__n42["alternate"] := null;
__n55 := {  };
__n55["type"] := "IfStatement";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "!==";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "g";
__n57["callee"] := __n58;
__n59 := [  ];
__n57["arguments"] := __n59;
__n56["left"] := __n57;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "undefined";
__n56["right"] := __n60;
__n55["test"] := __n56;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$ERROR";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "#3: ";
__n67["raw"] := "'#3: '";
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n55["consequent"] := __n61;
__n55["alternate"] := null;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "AssignmentExpression";
__n69["operator"] := "=";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "ThisExpression";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "color";
__n72["raw"] := "\"color\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n69["left"] := __n70;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "red";
__n73["raw"] := "\"red\"";
__n69["right"] := __n73;
__n68["expression"] := __n69;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "!==";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "g";
__n76["callee"] := __n77;
__n78 := [  ];
__n76["arguments"] := __n78;
__n75["left"] := __n76;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "red";
__n79["raw"] := "\"red\"";
__n75["right"] := __n79;
__n74["test"] := __n75;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "#4: ";
__n86["raw"] := "'#4: '";
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n74["consequent"] := __n80;
__n74["alternate"] := null;
__n1 := [ __n2, __n13, __n24, __n37, __n42, __n55, __n68, __n74 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n87 := [ "f", "g", "planet" ];
__n0["variableDeclarations"] := __n87;
__n88 := [  ];
__n0["functionDeclarations"] := __n88;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}