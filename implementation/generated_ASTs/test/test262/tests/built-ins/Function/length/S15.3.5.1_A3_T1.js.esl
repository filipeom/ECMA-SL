function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "f";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Function";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "arg1,arg2,arg3";
__n9["raw"] := "\"arg1,arg2,arg3\"";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "arg4,arg5";
__n10["raw"] := "\"arg4,arg5\"";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 'null;
__n11["raw"] := "\"'null\"";
__n8 := [ __n9, __n10, __n11 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "IfStatement";
__n13 := {  };
__n13["type"] := "UnaryExpression";
__n13["operator"] := "!";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "f";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "hasOwnProperty";
__n17["raw"] := "\"hasOwnProperty\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "length";
__n19["raw"] := "'length'";
__n18 := [ __n19 ];
__n14["arguments"] := __n18;
__n13["argument"] := __n14;
__n13["prefix"] := true;
__n12["test"] := __n13;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "$ERROR";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "#1: the function has length property.";
__n26["raw"] := "'#1: the function has length property.'";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n12["consequent"] := __n20;
__n12["alternate"] := null;
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "flength";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "f";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "length";
__n33["raw"] := "\"length\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n29["init"] := __n31;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "verifyNotWritable";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "f";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "length";
__n39["raw"] := "\"length\"";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 'null;
__n40["raw"] := "\"'null\"";
__n41 := {  };
__n41["type"] := "FunctionExpression";
__n41["id"] := null;
__n42 := [  ];
__n41["params"] := __n42;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n44 := [  ];
__n43["body"] := __n44;
__n45 := [  ];
__n43["variableDeclarations"] := __n45;
__n46 := [  ];
__n43["functionDeclarations"] := __n46;
__n43["codeType"] := "function";
__n43["strict"] := false;
__n41["body"] := __n43;
__n41["generator"] := false;
__n41["expression"] := false;
__n41["async"] := false;
__n37 := [ __n38, __n39, __n40, __n41 ];
__n35["arguments"] := __n37;
__n34["expression"] := __n35;
__n47 := {  };
__n47["type"] := "IfStatement";
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "!==";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "f";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "length";
__n51["raw"] := "\"length\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["left"] := __n49;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "flength";
__n48["right"] := __n52;
__n47["test"] := __n48;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "$ERROR";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#2: the function.length property has the attributes ReadOnly";
__n59["raw"] := "'#2: the function.length property has the attributes ReadOnly'";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n47["consequent"] := __n53;
__n47["alternate"] := null;
__n60 := {  };
__n60["type"] := "TryStatement";
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "MemberExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "f";
__n65["object"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "length";
__n67["raw"] := "\"length\"";
__n65["property"] := __n67;
__n65["computed"] := true;
__n64["callee"] := __n65;
__n68 := [  ];
__n64["arguments"] := __n68;
__n63["expression"] := __n64;
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#3: the function.length property has the attributes ReadOnly";
__n73["raw"] := "'#3: the function.length property has the attributes ReadOnly'";
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n62 := [ __n63, __n69 ];
__n61["body"] := __n62;
__n60["block"] := __n61;
__n74 := {  };
__n74["type"] := "CatchClause";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "e";
__n74["param"] := __n75;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n78 := {  };
__n78["type"] := "IfStatement";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "instanceof";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "e";
__n79["left"] := __n80;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "Test262Error";
__n79["right"] := __n81;
__n78["test"] := __n79;
__n82 := {  };
__n82["type"] := "ThrowStatement";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "e";
__n82["argument"] := __n83;
__n78["consequent"] := __n82;
__n78["alternate"] := null;
__n77 := [ __n78 ];
__n76["body"] := __n77;
__n74["body"] := __n76;
__n60["handler"] := __n74;
__n60["finalizer"] := null;
__n84 := {  };
__n84["type"] := "IfStatement";
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "!==";
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "f";
__n86["object"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "length";
__n88["raw"] := "\"length\"";
__n86["property"] := __n88;
__n86["computed"] := true;
__n85["left"] := __n86;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 5.;
__n89["raw"] := "5";
__n85["right"] := __n89;
__n84["test"] := __n85;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "$ERROR";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "#4: the length property has the attributes { ReadOnly }";
__n96["raw"] := "'#4: the length property has the attributes { ReadOnly }'";
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n84["consequent"] := __n90;
__n84["alternate"] := null;
__n1 := [ __n2, __n12, __n27, __n34, __n47, __n60, __n84 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n97 := [ "f", "flength" ];
__n0["variableDeclarations"] := __n97;
__n98 := [  ];
__n0["functionDeclarations"] := __n98;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}