function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Number";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "Function";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "this.touched= true;";
__n16["raw"] := "\"this.touched= true;\"";
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["object"] := __n13;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "apply";
__n17["raw"] := "\"apply\"";
__n12["property"] := __n17;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "obj";
__n18 := [ __n19 ];
__n11["arguments"] := __n18;
__n10["expression"] := __n11;
__n20 := {  };
__n20["type"] := "IfStatement";
__n21 := {  };
__n21["type"] := "UnaryExpression";
__n21["operator"] := "!";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "obj";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "touched";
__n24["raw"] := "\"touched\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["argument"] := __n22;
__n21["prefix"] := true;
__n20["test"] := __n21;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "$ERROR";
__n28["callee"] := __n29;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "#1: If thisArg is not null(defined) the called function is passed ToObject(thisArg) as the this value";
__n31["raw"] := "'#1: If thisArg is not null(defined) the called function is passed ToObject(thisArg) as the this value'";
__n30 := [ __n31 ];
__n28["arguments"] := __n30;
__n27["expression"] := __n28;
__n26 := [ __n27 ];
__n25["body"] := __n26;
__n20["consequent"] := __n25;
__n20["alternate"] := null;
__n1 := [ __n2, __n10, __n20 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n32 := [ "obj" ];
__n0["variableDeclarations"] := __n32;
__n33 := [  ];
__n0["functionDeclarations"] := __n33;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}