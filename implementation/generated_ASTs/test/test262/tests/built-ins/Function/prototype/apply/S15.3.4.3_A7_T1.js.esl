function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Function";
__n5["callee"] := __n6;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "a1,a2,a3";
__n8["raw"] := "\"a1,a2,a3\"";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "this.shifted=a1;";
__n9["raw"] := "\"this.shifted=a1;\"";
__n7 := [ __n8, __n9 ];
__n5["arguments"] := __n7;
__n4["object"] := __n5;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "apply";
__n10["raw"] := "\"apply\"";
__n4["property"] := __n10;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 'null;
__n12["raw"] := "\"'null\"";
__n13 := {  };
__n13["type"] := "ArrayExpression";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n14 := [ __n15 ];
__n13["elements"] := __n14;
__n11 := [ __n12, __n13 ];
__n3["arguments"] := __n11;
__n2["expression"] := __n3;
__n16 := {  };
__n16["type"] := "IfStatement";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "!==";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n18["computed"] := true;
__n19 := {  };
__n19["type"] := "ThisExpression";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "shifted";
__n20["raw"] := "\"shifted\"";
__n18["property"] := __n20;
__n17["left"] := __n18;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 1.;
__n21["raw"] := "1";
__n17["right"] := __n21;
__n16["test"] := __n17;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "$ERROR";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "#1: If argArray is either an array or an arguments object, the function is passed the...";
__n28["raw"] := "'#1: If argArray is either an array or an arguments object, the function is passed the...'";
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n24["expression"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n16["consequent"] := __n22;
__n16["alternate"] := null;
__n1 := [ __n2, __n16 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n29 := [  ];
__n0["variableDeclarations"] := __n29;
__n30 := [  ];
__n0["functionDeclarations"] := __n30;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}