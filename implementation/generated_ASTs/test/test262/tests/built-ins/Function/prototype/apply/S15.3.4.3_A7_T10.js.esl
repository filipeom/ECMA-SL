function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Function";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "a1,a2,a3";
__n20["raw"] := "\"a1,a2,a3\"";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "this.shifted=a1+a2+a3;";
__n21["raw"] := "\"this.shifted=a1+a2+a3;\"";
__n19 := [ __n20, __n21 ];
__n17["arguments"] := __n19;
__n16["object"] := __n17;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "apply";
__n22["raw"] := "\"apply\"";
__n16["property"] := __n22;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "obj";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "arguments";
__n23 := [ __n24, __n25 ];
__n15["arguments"] := __n23;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n26 := [  ];
__n12["variableDeclarations"] := __n26;
__n27 := [  ];
__n12["functionDeclarations"] := __n27;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["expression"] := false;
__n10["async"] := false;
__n9["callee"] := __n10;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "";
__n29["raw"] := "\"\"";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 4.;
__n30["raw"] := "4";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 2.;
__n31["raw"] := "2";
__n28 := [ __n29, __n30, __n31 ];
__n9["arguments"] := __n28;
__n8["expression"] := __n9;
__n32 := {  };
__n32["type"] := "IfStatement";
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "!==";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n34["computed"] := true;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "obj";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "shifted";
__n36["raw"] := "\"shifted\"";
__n34["property"] := __n36;
__n33["left"] := __n34;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "42";
__n37["raw"] := "\"42\"";
__n33["right"] := __n37;
__n32["test"] := __n33;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "$ERROR";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "#1: If argArray is either an array or an arguments object, the function is passed the...";
__n44["raw"] := "'#1: If argArray is either an array or an arguments object, the function is passed the...'";
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n32["consequent"] := __n38;
__n32["alternate"] := null;
__n45 := {  };
__n45["type"] := "IfStatement";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "UnaryExpression";
__n47["operator"] := "typeof";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n48["computed"] := true;
__n49 := {  };
__n49["type"] := "ThisExpression";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "shifted";
__n50["raw"] := "\"shifted\"";
__n48["property"] := __n50;
__n47["argument"] := __n48;
__n47["prefix"] := true;
__n46["left"] := __n47;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "undefined";
__n51["raw"] := "\"undefined\"";
__n46["right"] := __n51;
__n45["test"] := __n46;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "#2: If argArray is either an array or an arguments object, the function is passed the...";
__n58["raw"] := "'#2: If argArray is either an array or an arguments object, the function is passed the...'";
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n45["consequent"] := __n52;
__n45["alternate"] := null;
__n1 := [ __n2, __n8, __n32, __n45 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n59 := [ "obj" ];
__n0["variableDeclarations"] := __n59;
__n60 := [  ];
__n0["functionDeclarations"] := __n60;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}