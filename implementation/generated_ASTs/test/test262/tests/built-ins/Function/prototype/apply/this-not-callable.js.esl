function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "throws";
__n6["raw"] := "\"throws\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "TypeError";
__n9 := {  };
__n9["type"] := "FunctionExpression";
__n9["id"] := null;
__n10 := [  ];
__n9["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Function";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "prototype";
__n19["raw"] := "\"prototype\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["object"] := __n17;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "apply";
__n20["raw"] := "\"apply\"";
__n16["property"] := __n20;
__n16["computed"] := true;
__n15["object"] := __n16;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "call";
__n21["raw"] := "\"call\"";
__n15["property"] := __n21;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "undefined";
__n24 := {  };
__n24["type"] := "ObjectExpression";
__n25 := [  ];
__n24["properties"] := __n25;
__n26 := {  };
__n26["type"] := "ArrayExpression";
__n27 := [  ];
__n26["elements"] := __n27;
__n22 := [ __n23, __n24, __n26 ];
__n14["arguments"] := __n22;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n28 := [  ];
__n11["variableDeclarations"] := __n28;
__n29 := [  ];
__n11["functionDeclarations"] := __n29;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n9["body"] := __n11;
__n9["generator"] := false;
__n9["async"] := false;
__n9["expression"] := false;
__n7 := [ __n8, __n9 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "assert";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "throws";
__n34["raw"] := "\"throws\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "TypeError";
__n37 := {  };
__n37["type"] := "FunctionExpression";
__n37["id"] := null;
__n38 := [  ];
__n37["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "Function";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "prototype";
__n47["raw"] := "\"prototype\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["object"] := __n45;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "apply";
__n48["raw"] := "\"apply\"";
__n44["property"] := __n48;
__n44["computed"] := true;
__n43["object"] := __n44;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "call";
__n49["raw"] := "\"call\"";
__n43["property"] := __n49;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 'null;
__n51["raw"] := "\"'null\"";
__n52 := {  };
__n52["type"] := "ObjectExpression";
__n53 := [  ];
__n52["properties"] := __n53;
__n54 := {  };
__n54["type"] := "ArrayExpression";
__n55 := [  ];
__n54["elements"] := __n55;
__n50 := [ __n51, __n52, __n54 ];
__n42["arguments"] := __n50;
__n41["expression"] := __n42;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n56 := [  ];
__n39["variableDeclarations"] := __n56;
__n57 := [  ];
__n39["functionDeclarations"] := __n57;
__n39["codeType"] := "function";
__n39["strict"] := false;
__n37["body"] := __n39;
__n37["generator"] := false;
__n37["async"] := false;
__n37["expression"] := false;
__n35 := [ __n36, __n37 ];
__n31["arguments"] := __n35;
__n30["expression"] := __n31;
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "assert";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "throws";
__n62["raw"] := "\"throws\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "TypeError";
__n65 := {  };
__n65["type"] := "FunctionExpression";
__n65["id"] := null;
__n66 := [  ];
__n65["params"] := __n66;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "MemberExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "Function";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "prototype";
__n75["raw"] := "\"prototype\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n72["object"] := __n73;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "apply";
__n76["raw"] := "\"apply\"";
__n72["property"] := __n76;
__n72["computed"] := true;
__n71["object"] := __n72;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "call";
__n77["raw"] := "\"call\"";
__n71["property"] := __n77;
__n71["computed"] := true;
__n70["callee"] := __n71;
__n79 := {  };
__n79["type"] := "ObjectExpression";
__n80 := [  ];
__n79["properties"] := __n80;
__n81 := {  };
__n81["type"] := "ObjectExpression";
__n82 := [  ];
__n81["properties"] := __n82;
__n83 := {  };
__n83["type"] := "ArrayExpression";
__n84 := [  ];
__n83["elements"] := __n84;
__n78 := [ __n79, __n81, __n83 ];
__n70["arguments"] := __n78;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n85 := [  ];
__n67["variableDeclarations"] := __n85;
__n86 := [  ];
__n67["functionDeclarations"] := __n86;
__n67["codeType"] := "function";
__n67["strict"] := false;
__n65["body"] := __n67;
__n65["generator"] := false;
__n65["async"] := false;
__n65["expression"] := false;
__n63 := [ __n64, __n65 ];
__n59["arguments"] := __n63;
__n58["expression"] := __n59;
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "assert";
__n89["object"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "throws";
__n91["raw"] := "\"throws\"";
__n89["property"] := __n91;
__n89["computed"] := true;
__n88["callee"] := __n89;
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "TypeError";
__n94 := {  };
__n94["type"] := "FunctionExpression";
__n94["id"] := null;
__n95 := [  ];
__n94["params"] := __n95;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "MemberExpression";
__n102 := {  };
__n102["type"] := "MemberExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "Function";
__n102["object"] := __n103;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "prototype";
__n104["raw"] := "\"prototype\"";
__n102["property"] := __n104;
__n102["computed"] := true;
__n101["object"] := __n102;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "apply";
__n105["raw"] := "\"apply\"";
__n101["property"] := __n105;
__n101["computed"] := true;
__n100["object"] := __n101;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "call";
__n106["raw"] := "\"call\"";
__n100["property"] := __n106;
__n100["computed"] := true;
__n99["callee"] := __n100;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "/re/";
__n108["raw"] := "/re/";
__n108["source"] := "re";
__n109 := {  };
__n109["type"] := "RegExp";
__n110 := {  };
__n110["type"] := "Alternative";
__n112 := {  };
__n112["type"] := "Char";
__n112["value"] := "r";
__n112["kind"] := "simple";
__n112["symbol"] := "r";
__n112["codePoint"] := 114.;
__n113 := {  };
__n113["type"] := "Char";
__n113["value"] := "e";
__n113["kind"] := "simple";
__n113["symbol"] := "e";
__n113["codePoint"] := 101.;
__n111 := [ __n112, __n113 ];
__n110["expressions"] := __n111;
__n109["body"] := __n110;
__n109["flags"] := "";
__n109["nCaps"] := 0.;
__n108["regex"] := __n109;
__n114 := {  };
__n114["type"] := "ObjectExpression";
__n115 := [  ];
__n114["properties"] := __n115;
__n116 := {  };
__n116["type"] := "ArrayExpression";
__n117 := [  ];
__n116["elements"] := __n117;
__n107 := [ __n108, __n114, __n116 ];
__n99["arguments"] := __n107;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n118 := [  ];
__n96["variableDeclarations"] := __n118;
__n119 := [  ];
__n96["functionDeclarations"] := __n119;
__n96["codeType"] := "function";
__n96["strict"] := false;
__n94["body"] := __n96;
__n94["generator"] := false;
__n94["async"] := false;
__n94["expression"] := false;
__n92 := [ __n93, __n94 ];
__n88["arguments"] := __n92;
__n87["expression"] := __n88;
__n1 := [ __n2, __n30, __n58, __n87 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n120 := [  ];
__n0["variableDeclarations"] := __n120;
__n121 := [  ];
__n0["functionDeclarations"] := __n121;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}