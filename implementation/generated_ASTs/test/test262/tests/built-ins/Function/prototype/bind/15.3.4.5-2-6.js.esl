function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "boc";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Object";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "bind";
__n9["raw"] := "\"bind\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 'null;
__n11["raw"] := "\"'null\"";
__n10 := [ __n11 ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "o";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "boc";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 42.;
__n19["raw"] := "42";
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "assert";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "==";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "o";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 42.;
__n26["raw"] := "42";
__n24["right"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "(o == 42) !== true";
__n27["raw"] := "'(o == 42) !== true'";
__n23 := [ __n24, __n27 ];
__n21["arguments"] := __n23;
__n20["expression"] := __n21;
__n1 := [ __n2, __n12, __n20 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n28 := [ "boc", "o" ];
__n0["variableDeclarations"] := __n28;
__n29 := [  ];
__n0["functionDeclarations"] := __n29;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}