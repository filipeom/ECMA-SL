function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "prop";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "abc";
__n10["raw"] := "\"abc\"";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "func";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [ "x" ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ReturnStatement";
__n20 := {  };
__n20["type"] := "LogicalExpression";
__n20["operator"] := "&&";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "===";
__n22 := {  };
__n22["type"] := "ThisExpression";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "obj";
__n21["right"] := __n23;
__n20["left"] := __n21;
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "===";
__n25 := {  };
__n25["type"] := "UnaryExpression";
__n25["operator"] := "typeof";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "x";
__n25["argument"] := __n26;
__n25["prefix"] := true;
__n24["left"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "undefined";
__n27["raw"] := "\"undefined\"";
__n24["right"] := __n27;
__n20["right"] := __n24;
__n19["argument"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n28 := [  ];
__n17["variableDeclarations"] := __n28;
__n29 := [  ];
__n17["functionDeclarations"] := __n29;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["expression"] := false;
__n15["async"] := false;
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n30 := {  };
__n30["type"] := "VariableDeclaration";
__n32 := {  };
__n32["type"] := "VariableDeclarator";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "newFunc";
__n32["id"] := __n33;
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Function";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "prototype";
__n39["raw"] := "\"prototype\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["object"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "bind";
__n40["raw"] := "\"bind\"";
__n36["property"] := __n40;
__n36["computed"] := true;
__n35["object"] := __n36;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "call";
__n41["raw"] := "\"call\"";
__n35["property"] := __n41;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "func";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "obj";
__n42 := [ __n43, __n44 ];
__n34["arguments"] := __n42;
__n32["init"] := __n34;
__n31 := [ __n32 ];
__n30["declarations"] := __n31;
__n30["kind"] := "var";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "assert";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "newFunc";
__n49["callee"] := __n50;
__n51 := [  ];
__n49["arguments"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "newFunc() !== true";
__n52["raw"] := "'newFunc() !== true'";
__n48 := [ __n49, __n52 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n1 := [ __n2, __n11, __n30, __n45 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n53 := [ "obj", "func", "newFunc" ];
__n0["variableDeclarations"] := __n53;
__n54 := [  ];
__n0["functionDeclarations"] := __n54;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}