function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "prop";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "abc";
__n10["raw"] := "\"abc\"";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "func";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [ "x" ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ReturnStatement";
__n20 := {  };
__n20["type"] := "LogicalExpression";
__n20["operator"] := "&&";
__n21 := {  };
__n21["type"] := "LogicalExpression";
__n21["operator"] := "&&";
__n22 := {  };
__n22["type"] := "LogicalExpression";
__n22["operator"] := "&&";
__n23 := {  };
__n23["type"] := "LogicalExpression";
__n23["operator"] := "&&";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "===";
__n25 := {  };
__n25["type"] := "ThisExpression";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "obj";
__n24["right"] := __n26;
__n23["left"] := __n24;
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "===";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "x";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 1.;
__n29["raw"] := "1";
__n27["right"] := __n29;
__n23["right"] := __n27;
__n22["left"] := __n23;
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "===";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n31["computed"] := true;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "arguments";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n31["property"] := __n33;
__n30["left"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1.;
__n34["raw"] := "1";
__n30["right"] := __n34;
__n22["right"] := __n30;
__n21["left"] := __n22;
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "===";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "arguments";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "length";
__n38["raw"] := "\"length\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["left"] := __n36;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 1.;
__n39["raw"] := "1";
__n35["right"] := __n39;
__n21["right"] := __n35;
__n20["left"] := __n21;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "===";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "ThisExpression";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "prop";
__n43["raw"] := "\"prop\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["left"] := __n41;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "abc";
__n44["raw"] := "\"abc\"";
__n40["right"] := __n44;
__n20["right"] := __n40;
__n19["argument"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n45 := [  ];
__n17["variableDeclarations"] := __n45;
__n46 := [  ];
__n17["functionDeclarations"] := __n46;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["expression"] := false;
__n15["async"] := false;
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n47 := {  };
__n47["type"] := "VariableDeclaration";
__n49 := {  };
__n49["type"] := "VariableDeclarator";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "newFunc";
__n49["id"] := __n50;
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Function";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "prototype";
__n56["raw"] := "\"prototype\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["object"] := __n54;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "bind";
__n57["raw"] := "\"bind\"";
__n53["property"] := __n57;
__n53["computed"] := true;
__n52["object"] := __n53;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "call";
__n58["raw"] := "\"call\"";
__n52["property"] := __n58;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "func";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "obj";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 1.;
__n62["raw"] := "1";
__n59 := [ __n60, __n61, __n62 ];
__n51["arguments"] := __n59;
__n49["init"] := __n51;
__n48 := [ __n49 ];
__n47["declarations"] := __n48;
__n47["kind"] := "var";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "assert";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "newFunc";
__n67["callee"] := __n68;
__n69 := [  ];
__n67["arguments"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "newFunc() !== true";
__n70["raw"] := "'newFunc() !== true'";
__n66 := [ __n67, __n70 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n1 := [ __n2, __n11, __n47, __n63 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n71 := [ "obj", "func", "newFunc" ];
__n0["variableDeclarations"] := __n71;
__n72 := [  ];
__n0["functionDeclarations"] := __n72;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}