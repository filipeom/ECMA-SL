function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "prop";
__n9["raw"] := "\"prop\"";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "a";
__n10["raw"] := "\"a\"";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "func";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [  ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ReturnStatement";
__n20 := {  };
__n20["type"] := "ThisExpression";
__n19["argument"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n21 := [  ];
__n17["variableDeclarations"] := __n21;
__n22 := [  ];
__n17["functionDeclarations"] := __n22;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["expression"] := false;
__n15["async"] := false;
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n23 := {  };
__n23["type"] := "VariableDeclaration";
__n25 := {  };
__n25["type"] := "VariableDeclarator";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "newFunc";
__n25["id"] := __n26;
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Function";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "prototype";
__n32["raw"] := "\"prototype\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["object"] := __n30;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "bind";
__n33["raw"] := "\"bind\"";
__n29["property"] := __n33;
__n29["computed"] := true;
__n28["object"] := __n29;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "call";
__n34["raw"] := "\"call\"";
__n28["property"] := __n34;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "func";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "obj";
__n35 := [ __n36, __n37 ];
__n27["arguments"] := __n35;
__n25["init"] := __n27;
__n24 := [ __n25 ];
__n23["declarations"] := __n24;
__n23["kind"] := "var";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "assert";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "sameValue";
__n42["raw"] := "\"sameValue\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "newFunc";
__n44["callee"] := __n45;
__n46 := [  ];
__n44["arguments"] := __n46;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "obj";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "newFunc()";
__n48["raw"] := "'newFunc()'";
__n43 := [ __n44, __n47, __n48 ];
__n39["arguments"] := __n43;
__n38["expression"] := __n39;
__n1 := [ __n2, __n11, __n23, __n38 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n49 := [ "obj", "func", "newFunc" ];
__n0["variableDeclarations"] := __n49;
__n50 := [  ];
__n0["functionDeclarations"] := __n50;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}