function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Function";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "a1,a2,a3";
__n20["raw"] := "\"a1,a2,a3\"";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "this.shifted=a1.length+a2+a3;";
__n21["raw"] := "\"this.shifted=a1.length+a2+a3;\"";
__n19 := [ __n20, __n21 ];
__n17["arguments"] := __n19;
__n16["object"] := __n17;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "call";
__n22["raw"] := "\"call\"";
__n16["property"] := __n22;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "obj";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "arguments";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "";
__n26["raw"] := "\"\"";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "2";
__n27["raw"] := "\"2\"";
__n23 := [ __n24, __n25, __n26, __n27 ];
__n15["arguments"] := __n23;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n28 := [  ];
__n12["variableDeclarations"] := __n28;
__n29 := [  ];
__n12["functionDeclarations"] := __n29;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["expression"] := false;
__n10["async"] := false;
__n9["callee"] := __n10;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "";
__n31["raw"] := "\"\"";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 4.;
__n32["raw"] := "4";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 2.;
__n33["raw"] := "2";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "a";
__n34["raw"] := "\"a\"";
__n30 := [ __n31, __n32, __n33, __n34 ];
__n9["arguments"] := __n30;
__n8["expression"] := __n9;
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n37["computed"] := true;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "obj";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "shifted";
__n39["raw"] := "\"shifted\"";
__n37["property"] := __n39;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "42";
__n40["raw"] := "\"42\"";
__n36["right"] := __n40;
__n35["test"] := __n36;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "$ERROR";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#1: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object";
__n47["raw"] := "'#1: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object'";
__n46 := [ __n47 ];
__n44["arguments"] := __n46;
__n43["expression"] := __n44;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n35["consequent"] := __n41;
__n35["alternate"] := null;
__n48 := {  };
__n48["type"] := "IfStatement";
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "!==";
__n50 := {  };
__n50["type"] := "UnaryExpression";
__n50["operator"] := "typeof";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n51["computed"] := true;
__n52 := {  };
__n52["type"] := "ThisExpression";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "shifted";
__n53["raw"] := "\"shifted\"";
__n51["property"] := __n53;
__n50["argument"] := __n51;
__n50["prefix"] := true;
__n49["left"] := __n50;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "undefined";
__n54["raw"] := "\"undefined\"";
__n49["right"] := __n54;
__n48["test"] := __n49;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#2: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object";
__n61["raw"] := "'#2: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object'";
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n48["consequent"] := __n55;
__n48["alternate"] := null;
__n1 := [ __n2, __n8, __n35, __n48 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n62 := [ "obj" ];
__n0["variableDeclarations"] := __n62;
__n63 := [  ];
__n0["functionDeclarations"] := __n63;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}