function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "NewExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Function";
__n5["callee"] := __n6;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "a1,a2";
__n8["raw"] := "\"a1,a2\"";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "a3";
__n9["raw"] := "\"a3\"";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "this.shifted=a1;";
__n10["raw"] := "\"this.shifted=a1;\"";
__n7 := [ __n8, __n9, __n10 ];
__n5["arguments"] := __n7;
__n4["object"] := __n5;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "call";
__n11["raw"] := "\"call\"";
__n4["property"] := __n11;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 'null;
__n13["raw"] := "\"'null\"";
__n14 := {  };
__n14["type"] := "ArrayExpression";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 3.;
__n16["raw"] := "3";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 2.;
__n17["raw"] := "2";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.;
__n18["raw"] := "1";
__n15 := [ __n16, __n17, __n18 ];
__n14["elements"] := __n15;
__n12 := [ __n13, __n14 ];
__n3["arguments"] := __n12;
__n2["expression"] := __n3;
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!==";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n22["computed"] := true;
__n23 := {  };
__n23["type"] := "ThisExpression";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "shifted";
__n24["raw"] := "\"shifted\"";
__n22["property"] := __n24;
__n21["object"] := __n22;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "length";
__n25["raw"] := "\"length\"";
__n21["property"] := __n25;
__n21["computed"] := true;
__n20["left"] := __n21;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 3.;
__n26["raw"] := "3";
__n20["right"] := __n26;
__n19["test"] := __n20;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "$ERROR";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "#1: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object";
__n33["raw"] := "'#1: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object'";
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n29["expression"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n19["consequent"] := __n27;
__n19["alternate"] := null;
__n34 := {  };
__n34["type"] := "IfStatement";
__n35 := {  };
__n35["type"] := "LogicalExpression";
__n35["operator"] := "||";
__n36 := {  };
__n36["type"] := "LogicalExpression";
__n36["operator"] := "||";
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "!==";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n38["computed"] := true;
__n39 := {  };
__n39["type"] := "MemberExpression";
__n39["computed"] := true;
__n40 := {  };
__n40["type"] := "ThisExpression";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "shifted";
__n41["raw"] := "\"shifted\"";
__n39["property"] := __n41;
__n38["object"] := __n39;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 0.;
__n42["raw"] := "0";
__n38["property"] := __n42;
__n37["left"] := __n38;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 3.;
__n43["raw"] := "3";
__n37["right"] := __n43;
__n36["left"] := __n37;
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "!==";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n45["computed"] := true;
__n46 := {  };
__n46["type"] := "MemberExpression";
__n46["computed"] := true;
__n47 := {  };
__n47["type"] := "ThisExpression";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "shifted";
__n48["raw"] := "\"shifted\"";
__n46["property"] := __n48;
__n45["object"] := __n46;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.;
__n49["raw"] := "1";
__n45["property"] := __n49;
__n44["left"] := __n45;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 2.;
__n50["raw"] := "2";
__n44["right"] := __n50;
__n36["right"] := __n44;
__n35["left"] := __n36;
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n52["computed"] := true;
__n53 := {  };
__n53["type"] := "MemberExpression";
__n53["computed"] := true;
__n54 := {  };
__n54["type"] := "ThisExpression";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "shifted";
__n55["raw"] := "\"shifted\"";
__n53["property"] := __n55;
__n52["object"] := __n53;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 2.;
__n56["raw"] := "2";
__n52["property"] := __n56;
__n51["left"] := __n52;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 1.;
__n57["raw"] := "1";
__n51["right"] := __n57;
__n35["right"] := __n51;
__n34["test"] := __n35;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$ERROR";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#2: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object";
__n64["raw"] := "'#2: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object'";
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n34["consequent"] := __n58;
__n34["alternate"] := null;
__n1 := [ __n2, __n19, __n34 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n65 := [  ];
__n0["variableDeclarations"] := __n65;
__n66 := [  ];
__n0["functionDeclarations"] := __n66;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}