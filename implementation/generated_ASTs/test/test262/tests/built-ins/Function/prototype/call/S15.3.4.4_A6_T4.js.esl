function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "i";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "p";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "toString";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [  ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ReturnStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "+";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "a";
__n21["raw"] := "\"a\"";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "UpdateExpression";
__n22["operator"] := "++";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "i";
__n22["argument"] := __n23;
__n22["prefix"] := true;
__n20["right"] := __n22;
__n19["argument"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n24 := [  ];
__n17["variableDeclarations"] := __n24;
__n25 := [  ];
__n17["functionDeclarations"] := __n25;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["expression"] := false;
__n15["async"] := false;
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "init";
__n13["shorthand"] := false;
__n12 := [ __n13 ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "obj";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "ObjectExpression";
__n31 := [  ];
__n30["properties"] := __n31;
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "NewExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Function";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "p";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "p";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "p";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "this.shifted=a3+a2+a1.length;";
__n41["raw"] := "\"this.shifted=a3+a2+a1.length;\"";
__n37 := [ __n38, __n39, __n40, __n41 ];
__n35["arguments"] := __n37;
__n34["object"] := __n35;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "call";
__n42["raw"] := "\"call\"";
__n34["property"] := __n42;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "obj";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "FunctionExpression";
__n46["id"] := null;
__n47 := [  ];
__n46["params"] := __n47;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ReturnStatement";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "arguments";
__n50["argument"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n52 := [  ];
__n48["variableDeclarations"] := __n52;
__n53 := [  ];
__n48["functionDeclarations"] := __n53;
__n48["codeType"] := "function";
__n48["strict"] := false;
__n46["body"] := __n48;
__n46["generator"] := false;
__n46["expression"] := false;
__n46["async"] := false;
__n45["callee"] := __n46;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "a";
__n55["raw"] := "\"a\"";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "b";
__n56["raw"] := "\"b\"";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "c";
__n57["raw"] := "\"c\"";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "d";
__n58["raw"] := "\"d\"";
__n54 := [ __n55, __n56, __n57, __n58 ];
__n45["arguments"] := __n54;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "";
__n59["raw"] := "\"\"";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 2.;
__n60["raw"] := "2";
__n43 := [ __n44, __n45, __n59, __n60 ];
__n33["arguments"] := __n43;
__n32["expression"] := __n33;
__n61 := {  };
__n61["type"] := "IfStatement";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "!==";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n63["computed"] := true;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "obj";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "shifted";
__n65["raw"] := "\"shifted\"";
__n63["property"] := __n65;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "24";
__n66["raw"] := "\"24\"";
__n62["right"] := __n66;
__n61["test"] := __n62;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#1: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object";
__n73["raw"] := "'#1: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object'";
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n61["consequent"] := __n67;
__n61["alternate"] := null;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "!==";
__n76 := {  };
__n76["type"] := "UnaryExpression";
__n76["operator"] := "typeof";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n77["computed"] := true;
__n78 := {  };
__n78["type"] := "ThisExpression";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "shifted";
__n79["raw"] := "\"shifted\"";
__n77["property"] := __n79;
__n76["argument"] := __n77;
__n76["prefix"] := true;
__n75["left"] := __n76;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "undefined";
__n80["raw"] := "\"undefined\"";
__n75["right"] := __n80;
__n74["test"] := __n75;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "$ERROR";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#2: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object";
__n87["raw"] := "'#2: The call method takes one or more arguments, thisArg and (optionally) arg1, arg2 etc, and performs a function call using the [[Call]] property of the object'";
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n82 := [ __n83 ];
__n81["body"] := __n82;
__n74["consequent"] := __n81;
__n74["alternate"] := null;
__n1 := [ __n2, __n7, __n26, __n32, __n61, __n74 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n88 := [ "i", "p", "obj" ];
__n0["variableDeclarations"] := __n88;
__n89 := [  ];
__n0["functionDeclarations"] := __n89;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}