function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "Identifier";
__n4["name"] := "verifyProperty";
__n3["callee"] := __n4;
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "JSON";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "parse";
__n8["raw"] := "\"parse\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "name";
__n9["raw"] := "'name'";
__n10 := {  };
__n10["type"] := "ObjectExpression";
__n12 := {  };
__n12["type"] := "Property";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "value";
__n12["key"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "parse";
__n14["raw"] := "'parse'";
__n12["value"] := __n14;
__n12["computed"] := false;
__n12["kind"] := "init";
__n12["shorthand"] := false;
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "writable";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := false;
__n17["raw"] := "false";
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "enumerable";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := false;
__n20["raw"] := "false";
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "configurable";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := true;
__n23["raw"] := "true";
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n11 := [ __n12, __n15, __n18, __n21 ];
__n10["properties"] := __n11;
__n5 := [ __n6, __n9, __n10 ];
__n3["arguments"] := __n5;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n24 := [  ];
__n0["variableDeclarations"] := __n24;
__n25 := [  ];
__n0["functionDeclarations"] := __n25;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}