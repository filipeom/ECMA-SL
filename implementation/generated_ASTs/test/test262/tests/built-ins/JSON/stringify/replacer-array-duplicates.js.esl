function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "getCalls";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "value";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "key";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [  ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "AssignmentExpression";
__n20["operator"] := "+=";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "getCalls";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 1.;
__n22["raw"] := "1";
__n20["right"] := __n22;
__n19["expression"] := __n20;
__n23 := {  };
__n23["type"] := "ReturnStatement";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := true;
__n24["raw"] := "true";
__n23["argument"] := __n24;
__n18 := [ __n19, __n23 ];
__n17["body"] := __n18;
__n25 := [  ];
__n17["variableDeclarations"] := __n25;
__n26 := [  ];
__n17["functionDeclarations"] := __n26;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["async"] := false;
__n15["expression"] := false;
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "get";
__n13["shorthand"] := false;
__n12 := [ __n13 ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "assert";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "sameValue";
__n31["raw"] := "\"sameValue\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "JSON";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "stringify";
__n36["raw"] := "\"stringify\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "value";
__n39 := {  };
__n39["type"] := "ArrayExpression";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "key";
__n41["raw"] := "'key'";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "key";
__n42["raw"] := "'key'";
__n40 := [ __n41, __n42 ];
__n39["elements"] := __n40;
__n37 := [ __n38, __n39 ];
__n33["arguments"] := __n37;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "{\"key\":true}";
__n43["raw"] := "'{\"key\":true}'";
__n32 := [ __n33, __n43 ];
__n28["arguments"] := __n32;
__n27["expression"] := __n28;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "assert";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "sameValue";
__n48["raw"] := "\"sameValue\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "getCalls";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 1.;
__n51["raw"] := "1";
__n49 := [ __n50, __n51 ];
__n45["arguments"] := __n49;
__n44["expression"] := __n45;
__n1 := [ __n2, __n7, __n27, __n44 ];
__n0["body"] := __n1;
__n52 := [ "getCalls", "value" ];
__n0["variableDeclarations"] := __n52;
__n53 := [  ];
__n0["functionDeclarations"] := __n53;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}