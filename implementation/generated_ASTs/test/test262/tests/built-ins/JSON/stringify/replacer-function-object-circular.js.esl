function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "direct";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "prop";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "ObjectExpression";
__n11 := [  ];
__n10["properties"] := __n11;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "directReplacer";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "FunctionExpression";
__n16["id"] := null;
__n17 := [ "k", "v" ];
__n16["params"] := __n17;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ReturnStatement";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "direct";
__n20["argument"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n22 := [  ];
__n18["variableDeclarations"] := __n22;
__n23 := [  ];
__n18["functionDeclarations"] := __n23;
__n18["codeType"] := "function";
__n18["strict"] := false;
__n16["body"] := __n18;
__n16["generator"] := false;
__n16["async"] := false;
__n16["expression"] := false;
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "throws";
__n28["raw"] := "\"throws\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "TypeError";
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [  ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "JSON";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "stringify";
__n39["raw"] := "\"stringify\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "direct";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "directReplacer";
__n40 := [ __n41, __n42 ];
__n36["arguments"] := __n40;
__n35["expression"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n43 := [  ];
__n33["variableDeclarations"] := __n43;
__n44 := [  ];
__n33["functionDeclarations"] := __n44;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["async"] := false;
__n31["expression"] := false;
__n29 := [ __n30, __n31 ];
__n25["arguments"] := __n29;
__n24["expression"] := __n25;
__n45 := {  };
__n45["type"] := "VariableDeclaration";
__n47 := {  };
__n47["type"] := "VariableDeclarator";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "indirect";
__n47["id"] := __n48;
__n49 := {  };
__n49["type"] := "ObjectExpression";
__n51 := {  };
__n51["type"] := "Property";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "p1";
__n51["key"] := __n52;
__n53 := {  };
__n53["type"] := "ObjectExpression";
__n55 := {  };
__n55["type"] := "Property";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "p2";
__n55["key"] := __n56;
__n57 := {  };
__n57["type"] := "ObjectExpression";
__n58 := [  ];
__n57["properties"] := __n58;
__n55["value"] := __n57;
__n55["computed"] := false;
__n55["kind"] := "init";
__n55["shorthand"] := false;
__n54 := [ __n55 ];
__n53["properties"] := __n54;
__n51["value"] := __n53;
__n51["computed"] := false;
__n51["kind"] := "init";
__n51["shorthand"] := false;
__n50 := [ __n51 ];
__n49["properties"] := __n50;
__n47["init"] := __n49;
__n46 := [ __n47 ];
__n45["declarations"] := __n46;
__n45["kind"] := "var";
__n59 := {  };
__n59["type"] := "VariableDeclaration";
__n61 := {  };
__n61["type"] := "VariableDeclarator";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "indirectReplacer";
__n61["id"] := __n62;
__n63 := {  };
__n63["type"] := "FunctionExpression";
__n63["id"] := null;
__n64 := [ "key", "value" ];
__n63["params"] := __n64;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "IfStatement";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "===";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "key";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "p2";
__n70["raw"] := "'p2'";
__n68["right"] := __n70;
__n67["test"] := __n68;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "ReturnStatement";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "indirect";
__n73["argument"] := __n74;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n67["consequent"] := __n71;
__n67["alternate"] := null;
__n75 := {  };
__n75["type"] := "ReturnStatement";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "value";
__n75["argument"] := __n76;
__n66 := [ __n67, __n75 ];
__n65["body"] := __n66;
__n77 := [  ];
__n65["variableDeclarations"] := __n77;
__n78 := [  ];
__n65["functionDeclarations"] := __n78;
__n65["codeType"] := "function";
__n65["strict"] := false;
__n63["body"] := __n65;
__n63["generator"] := false;
__n63["async"] := false;
__n63["expression"] := false;
__n61["init"] := __n63;
__n60 := [ __n61 ];
__n59["declarations"] := __n60;
__n59["kind"] := "var";
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "assert";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "throws";
__n83["raw"] := "\"throws\"";
__n81["property"] := __n83;
__n81["computed"] := true;
__n80["callee"] := __n81;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "TypeError";
__n86 := {  };
__n86["type"] := "FunctionExpression";
__n86["id"] := null;
__n87 := [  ];
__n86["params"] := __n87;
__n88 := {  };
__n88["type"] := "BlockStatement";
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "MemberExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "JSON";
__n92["object"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "stringify";
__n94["raw"] := "\"stringify\"";
__n92["property"] := __n94;
__n92["computed"] := true;
__n91["callee"] := __n92;
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "indirect";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "indirectReplacer";
__n95 := [ __n96, __n97 ];
__n91["arguments"] := __n95;
__n90["expression"] := __n91;
__n89 := [ __n90 ];
__n88["body"] := __n89;
__n98 := [  ];
__n88["variableDeclarations"] := __n98;
__n99 := [  ];
__n88["functionDeclarations"] := __n99;
__n88["codeType"] := "function";
__n88["strict"] := false;
__n86["body"] := __n88;
__n86["generator"] := false;
__n86["async"] := false;
__n86["expression"] := false;
__n84 := [ __n85, __n86 ];
__n80["arguments"] := __n84;
__n79["expression"] := __n80;
__n1 := [ __n2, __n12, __n24, __n45, __n59, __n79 ];
__n0["body"] := __n1;
__n100 := [ "direct", "directReplacer", "indirect", "indirectReplacer" ];
__n0["variableDeclarations"] := __n100;
__n101 := [  ];
__n0["functionDeclarations"] := __n101;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}