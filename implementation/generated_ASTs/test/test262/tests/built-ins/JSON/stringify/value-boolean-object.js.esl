function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "JSON";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "stringify";
__n11["raw"] := "\"stringify\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n13 := {  };
__n13["type"] := "NewExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "Boolean";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := true;
__n16["raw"] := "true";
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12 := [ __n13 ];
__n8["arguments"] := __n12;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "true";
__n17["raw"] := "'true'";
__n7 := [ __n8, __n17 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "assert";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "sameValue";
__n22["raw"] := "\"sameValue\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "JSON";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "stringify";
__n27["raw"] := "\"stringify\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n29 := {  };
__n29["type"] := "ObjectExpression";
__n31 := {  };
__n31["type"] := "Property";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "toJSON";
__n31["key"] := __n32;
__n33 := {  };
__n33["type"] := "FunctionExpression";
__n33["id"] := null;
__n34 := [  ];
__n33["params"] := __n34;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ReturnStatement";
__n38 := {  };
__n38["type"] := "ObjectExpression";
__n40 := {  };
__n40["type"] := "Property";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "key";
__n40["key"] := __n41;
__n42 := {  };
__n42["type"] := "NewExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Boolean";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := false;
__n45["raw"] := "false";
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n40["value"] := __n42;
__n40["computed"] := false;
__n40["kind"] := "init";
__n40["shorthand"] := false;
__n39 := [ __n40 ];
__n38["properties"] := __n39;
__n37["argument"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n46 := [  ];
__n35["variableDeclarations"] := __n46;
__n47 := [  ];
__n35["functionDeclarations"] := __n47;
__n35["codeType"] := "function";
__n35["strict"] := false;
__n33["body"] := __n35;
__n33["generator"] := false;
__n33["async"] := false;
__n33["expression"] := false;
__n31["value"] := __n33;
__n31["computed"] := false;
__n31["kind"] := "init";
__n31["shorthand"] := false;
__n30 := [ __n31 ];
__n29["properties"] := __n30;
__n28 := [ __n29 ];
__n24["arguments"] := __n28;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "{\"key\":false}";
__n48["raw"] := "'{\"key\":false}'";
__n23 := [ __n24, __n48 ];
__n19["arguments"] := __n23;
__n18["expression"] := __n19;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "assert";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "sameValue";
__n53["raw"] := "\"sameValue\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["callee"] := __n51;
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "JSON";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "stringify";
__n58["raw"] := "\"stringify\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n60 := {  };
__n60["type"] := "ArrayExpression";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 1.;
__n62["raw"] := "1";
__n61 := [ __n62 ];
__n60["elements"] := __n61;
__n63 := {  };
__n63["type"] := "FunctionExpression";
__n63["id"] := null;
__n64 := [ "_k", "v" ];
__n63["params"] := __n64;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "ReturnStatement";
__n68 := {  };
__n68["type"] := "ConditionalExpression";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "===";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "v";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 1.;
__n71["raw"] := "1";
__n69["right"] := __n71;
__n68["test"] := __n69;
__n72 := {  };
__n72["type"] := "NewExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "Boolean";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := true;
__n75["raw"] := "true";
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n68["consequent"] := __n72;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "v";
__n68["alternate"] := __n76;
__n67["argument"] := __n68;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n77 := [  ];
__n65["variableDeclarations"] := __n77;
__n78 := [  ];
__n65["functionDeclarations"] := __n78;
__n65["codeType"] := "function";
__n65["strict"] := false;
__n63["body"] := __n65;
__n63["generator"] := false;
__n63["async"] := false;
__n63["expression"] := false;
__n59 := [ __n60, __n63 ];
__n55["arguments"] := __n59;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "[true]";
__n79["raw"] := "'[true]'";
__n54 := [ __n55, __n79 ];
__n50["arguments"] := __n54;
__n49["expression"] := __n50;
__n1 := [ __n2, __n18, __n49 ];
__n0["body"] := __n1;
__n80 := [  ];
__n0["variableDeclarations"] := __n80;
__n81 := [  ];
__n0["functionDeclarations"] := __n81;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}