function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "JSON";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "stringify";
__n11["raw"] := "\"stringify\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n13 := {  };
__n13["type"] := "NewExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "Number";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 8.5;
__n16["raw"] := "8.5";
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12 := [ __n13 ];
__n8["arguments"] := __n12;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "8.5";
__n17["raw"] := "'8.5'";
__n7 := [ __n8, __n17 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "toPrimitiveReplacer";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "FunctionExpression";
__n22["id"] := null;
__n23 := [ "_key", "value" ];
__n22["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "IfStatement";
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "===";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "value";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "str";
__n29["raw"] := "'str'";
__n27["right"] := __n29;
__n26["test"] := __n27;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "VariableDeclaration";
__n34 := {  };
__n34["type"] := "VariableDeclarator";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "num";
__n34["id"] := __n35;
__n36 := {  };
__n36["type"] := "NewExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Number";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 42.;
__n39["raw"] := "42";
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n34["init"] := __n36;
__n33 := [ __n34 ];
__n32["declarations"] := __n33;
__n32["kind"] := "var";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "AssignmentExpression";
__n41["operator"] := "=";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "num";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "toString";
__n44["raw"] := "\"toString\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["left"] := __n42;
__n45 := {  };
__n45["type"] := "FunctionExpression";
__n45["id"] := null;
__n46 := [  ];
__n45["params"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ThrowStatement";
__n50 := {  };
__n50["type"] := "NewExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "Test262Error";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "should not be called";
__n53["raw"] := "'should not be called'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["argument"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n54 := [  ];
__n47["variableDeclarations"] := __n54;
__n55 := [  ];
__n47["functionDeclarations"] := __n55;
__n47["codeType"] := "function";
__n47["strict"] := false;
__n45["body"] := __n47;
__n45["generator"] := false;
__n45["async"] := false;
__n45["expression"] := false;
__n41["right"] := __n45;
__n40["expression"] := __n41;
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "AssignmentExpression";
__n57["operator"] := "=";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "num";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "valueOf";
__n60["raw"] := "\"valueOf\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["left"] := __n58;
__n61 := {  };
__n61["type"] := "FunctionExpression";
__n61["id"] := null;
__n62 := [  ];
__n61["params"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ReturnStatement";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 2.;
__n66["raw"] := "2";
__n65["argument"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n67 := [  ];
__n63["variableDeclarations"] := __n67;
__n68 := [  ];
__n63["functionDeclarations"] := __n68;
__n63["codeType"] := "function";
__n63["strict"] := false;
__n61["body"] := __n63;
__n61["generator"] := false;
__n61["async"] := false;
__n61["expression"] := false;
__n57["right"] := __n61;
__n56["expression"] := __n57;
__n69 := {  };
__n69["type"] := "ReturnStatement";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "num";
__n69["argument"] := __n70;
__n31 := [ __n32, __n40, __n56, __n69 ];
__n30["body"] := __n31;
__n26["consequent"] := __n30;
__n26["alternate"] := null;
__n71 := {  };
__n71["type"] := "ReturnStatement";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "value";
__n71["argument"] := __n72;
__n25 := [ __n26, __n71 ];
__n24["body"] := __n25;
__n73 := [ "num" ];
__n24["variableDeclarations"] := __n73;
__n74 := [  ];
__n24["functionDeclarations"] := __n74;
__n24["codeType"] := "function";
__n24["strict"] := false;
__n22["body"] := __n24;
__n22["generator"] := false;
__n22["async"] := false;
__n22["expression"] := false;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "assert";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "sameValue";
__n79["raw"] := "\"sameValue\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n76["callee"] := __n77;
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "MemberExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "JSON";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "stringify";
__n84["raw"] := "\"stringify\"";
__n82["property"] := __n84;
__n82["computed"] := true;
__n81["callee"] := __n82;
__n86 := {  };
__n86["type"] := "ArrayExpression";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "str";
__n88["raw"] := "'str'";
__n87 := [ __n88 ];
__n86["elements"] := __n87;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "toPrimitiveReplacer";
__n85 := [ __n86, __n89 ];
__n81["arguments"] := __n85;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "[2]";
__n90["raw"] := "'[2]'";
__n80 := [ __n81, __n90 ];
__n76["arguments"] := __n80;
__n75["expression"] := __n76;
__n91 := {  };
__n91["type"] := "VariableDeclaration";
__n93 := {  };
__n93["type"] := "VariableDeclarator";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "abruptToJSON";
__n93["id"] := __n94;
__n95 := {  };
__n95["type"] := "FunctionExpression";
__n95["id"] := null;
__n96 := [  ];
__n95["params"] := __n96;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "VariableDeclaration";
__n101 := {  };
__n101["type"] := "VariableDeclarator";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "num";
__n101["id"] := __n102;
__n103 := {  };
__n103["type"] := "NewExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "Number";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 3.14;
__n106["raw"] := "3.14";
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n101["init"] := __n103;
__n100 := [ __n101 ];
__n99["declarations"] := __n100;
__n99["kind"] := "var";
__n107 := {  };
__n107["type"] := "ExpressionStatement";
__n108 := {  };
__n108["type"] := "AssignmentExpression";
__n108["operator"] := "=";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "num";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "toString";
__n111["raw"] := "\"toString\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n108["left"] := __n109;
__n112 := {  };
__n112["type"] := "FunctionExpression";
__n112["id"] := null;
__n113 := [  ];
__n112["params"] := __n113;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n116 := {  };
__n116["type"] := "ThrowStatement";
__n117 := {  };
__n117["type"] := "NewExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "Test262Error";
__n117["callee"] := __n118;
__n119 := [  ];
__n117["arguments"] := __n119;
__n116["argument"] := __n117;
__n115 := [ __n116 ];
__n114["body"] := __n115;
__n120 := [  ];
__n114["variableDeclarations"] := __n120;
__n121 := [  ];
__n114["functionDeclarations"] := __n121;
__n114["codeType"] := "function";
__n114["strict"] := false;
__n112["body"] := __n114;
__n112["generator"] := false;
__n112["async"] := false;
__n112["expression"] := false;
__n108["right"] := __n112;
__n107["expression"] := __n108;
__n122 := {  };
__n122["type"] := "ExpressionStatement";
__n123 := {  };
__n123["type"] := "AssignmentExpression";
__n123["operator"] := "=";
__n124 := {  };
__n124["type"] := "MemberExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "num";
__n124["object"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "valueOf";
__n126["raw"] := "\"valueOf\"";
__n124["property"] := __n126;
__n124["computed"] := true;
__n123["left"] := __n124;
__n127 := {  };
__n127["type"] := "FunctionExpression";
__n127["id"] := null;
__n128 := [  ];
__n127["params"] := __n128;
__n129 := {  };
__n129["type"] := "BlockStatement";
__n131 := {  };
__n131["type"] := "ThrowStatement";
__n132 := {  };
__n132["type"] := "NewExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "Test262Error";
__n132["callee"] := __n133;
__n134 := [  ];
__n132["arguments"] := __n134;
__n131["argument"] := __n132;
__n130 := [ __n131 ];
__n129["body"] := __n130;
__n135 := [  ];
__n129["variableDeclarations"] := __n135;
__n136 := [  ];
__n129["functionDeclarations"] := __n136;
__n129["codeType"] := "function";
__n129["strict"] := false;
__n127["body"] := __n129;
__n127["generator"] := false;
__n127["async"] := false;
__n127["expression"] := false;
__n123["right"] := __n127;
__n122["expression"] := __n123;
__n137 := {  };
__n137["type"] := "ReturnStatement";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "num";
__n137["argument"] := __n138;
__n98 := [ __n99, __n107, __n122, __n137 ];
__n97["body"] := __n98;
__n139 := [ "num" ];
__n97["variableDeclarations"] := __n139;
__n140 := [  ];
__n97["functionDeclarations"] := __n140;
__n97["codeType"] := "function";
__n97["strict"] := false;
__n95["body"] := __n97;
__n95["generator"] := false;
__n95["async"] := false;
__n95["expression"] := false;
__n93["init"] := __n95;
__n92 := [ __n93 ];
__n91["declarations"] := __n92;
__n91["kind"] := "var";
__n141 := {  };
__n141["type"] := "ExpressionStatement";
__n142 := {  };
__n142["type"] := "CallExpression";
__n143 := {  };
__n143["type"] := "MemberExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "assert";
__n143["object"] := __n144;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "throws";
__n145["raw"] := "\"throws\"";
__n143["property"] := __n145;
__n143["computed"] := true;
__n142["callee"] := __n143;
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "Test262Error";
__n148 := {  };
__n148["type"] := "FunctionExpression";
__n148["id"] := null;
__n149 := [  ];
__n148["params"] := __n149;
__n150 := {  };
__n150["type"] := "BlockStatement";
__n152 := {  };
__n152["type"] := "ExpressionStatement";
__n153 := {  };
__n153["type"] := "CallExpression";
__n154 := {  };
__n154["type"] := "MemberExpression";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "JSON";
__n154["object"] := __n155;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := "stringify";
__n156["raw"] := "\"stringify\"";
__n154["property"] := __n156;
__n154["computed"] := true;
__n153["callee"] := __n154;
__n158 := {  };
__n158["type"] := "ObjectExpression";
__n160 := {  };
__n160["type"] := "Property";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "key";
__n160["key"] := __n161;
__n162 := {  };
__n162["type"] := "ObjectExpression";
__n164 := {  };
__n164["type"] := "Property";
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "toJSON";
__n164["key"] := __n165;
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "abruptToJSON";
__n164["value"] := __n166;
__n164["computed"] := false;
__n164["kind"] := "init";
__n164["shorthand"] := false;
__n163 := [ __n164 ];
__n162["properties"] := __n163;
__n160["value"] := __n162;
__n160["computed"] := false;
__n160["kind"] := "init";
__n160["shorthand"] := false;
__n159 := [ __n160 ];
__n158["properties"] := __n159;
__n157 := [ __n158 ];
__n153["arguments"] := __n157;
__n152["expression"] := __n153;
__n151 := [ __n152 ];
__n150["body"] := __n151;
__n167 := [  ];
__n150["variableDeclarations"] := __n167;
__n168 := [  ];
__n150["functionDeclarations"] := __n168;
__n150["codeType"] := "function";
__n150["strict"] := false;
__n148["body"] := __n150;
__n148["generator"] := false;
__n148["async"] := false;
__n148["expression"] := false;
__n146 := [ __n147, __n148 ];
__n142["arguments"] := __n146;
__n141["expression"] := __n142;
__n1 := [ __n2, __n18, __n75, __n91, __n141 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n169 := [ "toPrimitiveReplacer", "abruptToJSON" ];
__n0["variableDeclarations"] := __n169;
__n170 := [  ];
__n0["functionDeclarations"] := __n170;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}