function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "Identifier";
__n4["name"] := "verifyNotEnumerable";
__n3["callee"] := __n4;
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Math";
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "cos";
__n7["raw"] := "\"cos\"";
__n5 := [ __n6, __n7 ];
__n3["arguments"] := __n5;
__n2["expression"] := __n3;
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "verifyWritable";
__n9["callee"] := __n10;
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Math";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "cos";
__n13["raw"] := "\"cos\"";
__n11 := [ __n12, __n13 ];
__n9["arguments"] := __n11;
__n8["expression"] := __n9;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "verifyConfigurable";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Math";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "cos";
__n19["raw"] := "\"cos\"";
__n17 := [ __n18, __n19 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n1 := [ __n2, __n8, __n14 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n20 := [  ];
__n0["variableDeclarations"] := __n20;
__n21 := [  ];
__n0["functionDeclarations"] := __n21;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}