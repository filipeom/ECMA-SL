function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "/";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := 1.;
__n5["raw"] := "1";
__n4["left"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Math";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "round";
__n9["raw"] := "\"round\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "UnaryExpression";
__n11["operator"] := "-";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 0.5;
__n12["raw"] := "0.5";
__n11["argument"] := __n12;
__n11["prefix"] := true;
__n10 := [ __n11 ];
__n6["arguments"] := __n10;
__n4["right"] := __n6;
__n3["left"] := __n4;
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "/";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 1.;
__n14["raw"] := "1";
__n13["left"] := __n14;
__n15 := {  };
__n15["type"] := "UnaryExpression";
__n15["operator"] := "-";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 0.;
__n16["raw"] := "0";
__n15["argument"] := __n16;
__n15["prefix"] := true;
__n13["right"] := __n15;
__n3["right"] := __n13;
__n2["test"] := __n3;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "$ERROR";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "#1: '1 / Math.round(-0.5) !== 1 / -0'";
__n23["raw"] := "\"#1: '1 / Math.round(-0.5) !== 1 / -0'\"";
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n2["consequent"] := __n17;
__n2["alternate"] := null;
__n24 := {  };
__n24["type"] := "IfStatement";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "!==";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "/";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 1.;
__n27["raw"] := "1";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Math";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "round";
__n31["raw"] := "\"round\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "UnaryExpression";
__n33["operator"] := "-";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 0.25;
__n34["raw"] := "0.25";
__n33["argument"] := __n34;
__n33["prefix"] := true;
__n32 := [ __n33 ];
__n28["arguments"] := __n32;
__n26["right"] := __n28;
__n25["left"] := __n26;
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "/";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 1.;
__n36["raw"] := "1";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "-";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 0.;
__n38["raw"] := "0";
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n35["right"] := __n37;
__n25["right"] := __n35;
__n24["test"] := __n25;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "$ERROR";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "#2: '1 / Math.round(-0.25) !== 1 / -0'";
__n45["raw"] := "\"#2: '1 / Math.round(-0.25) !== 1 / -0'\"";
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n41["expression"] := __n42;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n24["consequent"] := __n39;
__n24["alternate"] := null;
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "!==";
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "/";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.;
__n49["raw"] := "1";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Math";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "round";
__n53["raw"] := "\"round\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["callee"] := __n51;
__n55 := {  };
__n55["type"] := "UnaryExpression";
__n55["operator"] := "-";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 0.;
__n56["raw"] := "0";
__n55["argument"] := __n56;
__n55["prefix"] := true;
__n54 := [ __n55 ];
__n50["arguments"] := __n54;
__n48["right"] := __n50;
__n47["left"] := __n48;
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "/";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 1.;
__n58["raw"] := "1";
__n57["left"] := __n58;
__n59 := {  };
__n59["type"] := "UnaryExpression";
__n59["operator"] := "-";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 0.;
__n60["raw"] := "0";
__n59["argument"] := __n60;
__n59["prefix"] := true;
__n57["right"] := __n59;
__n47["right"] := __n57;
__n46["test"] := __n47;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$ERROR";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "#3: '1 / Math.round(-0) !== 1 / -0'";
__n67["raw"] := "\"#3: '1 / Math.round(-0) !== 1 / -0'\"";
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n46["consequent"] := __n61;
__n46["alternate"] := null;
__n68 := {  };
__n68["type"] := "VariableDeclaration";
__n70 := {  };
__n70["type"] := "VariableDeclarator";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "x";
__n70["id"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 0.;
__n72["raw"] := "0";
__n70["init"] := __n72;
__n69 := [ __n70 ];
__n68["declarations"] := __n69;
__n68["kind"] := "var";
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "AssignmentExpression";
__n74["operator"] := "=";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "x";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "BinaryExpression";
__n76["operator"] := "-";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 0.5;
__n77["raw"] := "0.5";
__n76["left"] := __n77;
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "/";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "Number";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "EPSILON";
__n81["raw"] := "\"EPSILON\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n78["left"] := __n79;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 4.;
__n82["raw"] := "4";
__n78["right"] := __n82;
__n76["right"] := __n78;
__n74["right"] := __n76;
__n73["expression"] := __n74;
__n83 := {  };
__n83["type"] := "IfStatement";
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "!==";
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "/";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 1.;
__n86["raw"] := "1";
__n85["left"] := __n86;
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "Math";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "round";
__n90["raw"] := "\"round\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n87["callee"] := __n88;
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "x";
__n91 := [ __n92 ];
__n87["arguments"] := __n91;
__n85["right"] := __n87;
__n84["left"] := __n85;
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "/";
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := 1.;
__n94["raw"] := "1";
__n93["left"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 0.;
__n95["raw"] := "0";
__n93["right"] := __n95;
__n84["right"] := __n93;
__n83["test"] := __n84;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "$ERROR";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "+";
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "+";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "#4: '1 / Math.round(";
__n104["raw"] := "\"#4: '1 / Math.round(\"";
__n103["left"] := __n104;
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "x";
__n103["right"] := __n105;
__n102["left"] := __n103;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := ") !== 1 / 0'";
__n106["raw"] := "\") !== 1 / 0'\"";
__n102["right"] := __n106;
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n83["consequent"] := __n96;
__n83["alternate"] := null;
__n107 := {  };
__n107["type"] := "ExpressionStatement";
__n108 := {  };
__n108["type"] := "AssignmentExpression";
__n108["operator"] := "=";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "x";
__n108["left"] := __n109;
__n110 := {  };
__n110["type"] := "UnaryExpression";
__n110["operator"] := "-";
__n111 := {  };
__n111["type"] := "BinaryExpression";
__n111["operator"] := "-";
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "/";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 2.;
__n113["raw"] := "2";
__n112["left"] := __n113;
__n114 := {  };
__n114["type"] := "MemberExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "Number";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "EPSILON";
__n116["raw"] := "\"EPSILON\"";
__n114["property"] := __n116;
__n114["computed"] := true;
__n112["right"] := __n114;
__n111["left"] := __n112;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 1.;
__n117["raw"] := "1";
__n111["right"] := __n117;
__n110["argument"] := __n111;
__n110["prefix"] := true;
__n108["right"] := __n110;
__n107["expression"] := __n108;
__n118 := {  };
__n118["type"] := "IfStatement";
__n119 := {  };
__n119["type"] := "BinaryExpression";
__n119["operator"] := "!==";
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "MemberExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "Math";
__n121["object"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "round";
__n123["raw"] := "\"round\"";
__n121["property"] := __n123;
__n121["computed"] := true;
__n120["callee"] := __n121;
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "x";
__n124 := [ __n125 ];
__n120["arguments"] := __n124;
__n119["left"] := __n120;
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "x";
__n119["right"] := __n126;
__n118["test"] := __n119;
__n127 := {  };
__n127["type"] := "BlockStatement";
__n129 := {  };
__n129["type"] := "ExpressionStatement";
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "$ERROR";
__n130["callee"] := __n131;
__n133 := {  };
__n133["type"] := "BinaryExpression";
__n133["operator"] := "+";
__n134 := {  };
__n134["type"] := "BinaryExpression";
__n134["operator"] := "+";
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "+";
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "+";
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "#5: 'Math.round(";
__n137["raw"] := "\"#5: 'Math.round(\"";
__n136["left"] := __n137;
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "x";
__n136["right"] := __n138;
__n135["left"] := __n136;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := ") !== ";
__n139["raw"] := "\") !== \"";
__n135["right"] := __n139;
__n134["left"] := __n135;
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "x";
__n134["right"] := __n140;
__n133["left"] := __n134;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "'";
__n141["raw"] := "\"'\"";
__n133["right"] := __n141;
__n132 := [ __n133 ];
__n130["arguments"] := __n132;
__n129["expression"] := __n130;
__n128 := [ __n129 ];
__n127["body"] := __n128;
__n118["consequent"] := __n127;
__n118["alternate"] := null;
__n142 := {  };
__n142["type"] := "ExpressionStatement";
__n143 := {  };
__n143["type"] := "AssignmentExpression";
__n143["operator"] := "=";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "x";
__n143["left"] := __n144;
__n145 := {  };
__n145["type"] := "UnaryExpression";
__n145["operator"] := "-";
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "-";
__n147 := {  };
__n147["type"] := "BinaryExpression";
__n147["operator"] := "/";
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := 1.5;
__n148["raw"] := "1.5";
__n147["left"] := __n148;
__n149 := {  };
__n149["type"] := "MemberExpression";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "Number";
__n149["object"] := __n150;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "EPSILON";
__n151["raw"] := "\"EPSILON\"";
__n149["property"] := __n151;
__n149["computed"] := true;
__n147["right"] := __n149;
__n146["left"] := __n147;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := 1.;
__n152["raw"] := "1";
__n146["right"] := __n152;
__n145["argument"] := __n146;
__n145["prefix"] := true;
__n143["right"] := __n145;
__n142["expression"] := __n143;
__n153 := {  };
__n153["type"] := "IfStatement";
__n154 := {  };
__n154["type"] := "BinaryExpression";
__n154["operator"] := "!==";
__n155 := {  };
__n155["type"] := "CallExpression";
__n156 := {  };
__n156["type"] := "MemberExpression";
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "Math";
__n156["object"] := __n157;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := "round";
__n158["raw"] := "\"round\"";
__n156["property"] := __n158;
__n156["computed"] := true;
__n155["callee"] := __n156;
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "x";
__n159 := [ __n160 ];
__n155["arguments"] := __n159;
__n154["left"] := __n155;
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "x";
__n154["right"] := __n161;
__n153["test"] := __n154;
__n162 := {  };
__n162["type"] := "BlockStatement";
__n164 := {  };
__n164["type"] := "ExpressionStatement";
__n165 := {  };
__n165["type"] := "CallExpression";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "$ERROR";
__n165["callee"] := __n166;
__n168 := {  };
__n168["type"] := "BinaryExpression";
__n168["operator"] := "+";
__n169 := {  };
__n169["type"] := "BinaryExpression";
__n169["operator"] := "+";
__n170 := {  };
__n170["type"] := "BinaryExpression";
__n170["operator"] := "+";
__n171 := {  };
__n171["type"] := "BinaryExpression";
__n171["operator"] := "+";
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := "#6: 'Math.round(";
__n172["raw"] := "\"#6: 'Math.round(\"";
__n171["left"] := __n172;
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "x";
__n171["right"] := __n173;
__n170["left"] := __n171;
__n174 := {  };
__n174["type"] := "Literal";
__n174["value"] := ") !== ";
__n174["raw"] := "\") !== \"";
__n170["right"] := __n174;
__n169["left"] := __n170;
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "x";
__n169["right"] := __n175;
__n168["left"] := __n169;
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := "'";
__n176["raw"] := "\"'\"";
__n168["right"] := __n176;
__n167 := [ __n168 ];
__n165["arguments"] := __n167;
__n164["expression"] := __n165;
__n163 := [ __n164 ];
__n162["body"] := __n163;
__n153["consequent"] := __n162;
__n153["alternate"] := null;
__n177 := {  };
__n177["type"] := "ExpressionStatement";
__n178 := {  };
__n178["type"] := "AssignmentExpression";
__n178["operator"] := "=";
__n179 := {  };
__n179["type"] := "Identifier";
__n179["name"] := "x";
__n178["left"] := __n179;
__n180 := {  };
__n180["type"] := "UnaryExpression";
__n180["operator"] := "-";
__n181 := {  };
__n181["type"] := "BinaryExpression";
__n181["operator"] := "+";
__n182 := {  };
__n182["type"] := "BinaryExpression";
__n182["operator"] := "/";
__n183 := {  };
__n183["type"] := "Literal";
__n183["value"] := 1.;
__n183["raw"] := "1";
__n182["left"] := __n183;
__n184 := {  };
__n184["type"] := "MemberExpression";
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "Number";
__n184["object"] := __n185;
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := "EPSILON";
__n186["raw"] := "\"EPSILON\"";
__n184["property"] := __n186;
__n184["computed"] := true;
__n182["right"] := __n184;
__n181["left"] := __n182;
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := 1.;
__n187["raw"] := "1";
__n181["right"] := __n187;
__n180["argument"] := __n181;
__n180["prefix"] := true;
__n178["right"] := __n180;
__n177["expression"] := __n178;
__n188 := {  };
__n188["type"] := "IfStatement";
__n189 := {  };
__n189["type"] := "BinaryExpression";
__n189["operator"] := "!==";
__n190 := {  };
__n190["type"] := "CallExpression";
__n191 := {  };
__n191["type"] := "MemberExpression";
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "Math";
__n191["object"] := __n192;
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := "round";
__n193["raw"] := "\"round\"";
__n191["property"] := __n193;
__n191["computed"] := true;
__n190["callee"] := __n191;
__n195 := {  };
__n195["type"] := "Identifier";
__n195["name"] := "x";
__n194 := [ __n195 ];
__n190["arguments"] := __n194;
__n189["left"] := __n190;
__n196 := {  };
__n196["type"] := "Identifier";
__n196["name"] := "x";
__n189["right"] := __n196;
__n188["test"] := __n189;
__n197 := {  };
__n197["type"] := "BlockStatement";
__n199 := {  };
__n199["type"] := "ExpressionStatement";
__n200 := {  };
__n200["type"] := "CallExpression";
__n201 := {  };
__n201["type"] := "Identifier";
__n201["name"] := "$ERROR";
__n200["callee"] := __n201;
__n203 := {  };
__n203["type"] := "BinaryExpression";
__n203["operator"] := "+";
__n204 := {  };
__n204["type"] := "BinaryExpression";
__n204["operator"] := "+";
__n205 := {  };
__n205["type"] := "BinaryExpression";
__n205["operator"] := "+";
__n206 := {  };
__n206["type"] := "BinaryExpression";
__n206["operator"] := "+";
__n207 := {  };
__n207["type"] := "Literal";
__n207["value"] := "#7: 'Math.round(";
__n207["raw"] := "\"#7: 'Math.round(\"";
__n206["left"] := __n207;
__n208 := {  };
__n208["type"] := "Identifier";
__n208["name"] := "x";
__n206["right"] := __n208;
__n205["left"] := __n206;
__n209 := {  };
__n209["type"] := "Literal";
__n209["value"] := ") !== ";
__n209["raw"] := "\") !== \"";
__n205["right"] := __n209;
__n204["left"] := __n205;
__n210 := {  };
__n210["type"] := "Identifier";
__n210["name"] := "x";
__n204["right"] := __n210;
__n203["left"] := __n204;
__n211 := {  };
__n211["type"] := "Literal";
__n211["value"] := "'";
__n211["raw"] := "\"'\"";
__n203["right"] := __n211;
__n202 := [ __n203 ];
__n200["arguments"] := __n202;
__n199["expression"] := __n200;
__n198 := [ __n199 ];
__n197["body"] := __n198;
__n188["consequent"] := __n197;
__n188["alternate"] := null;
__n212 := {  };
__n212["type"] := "ExpressionStatement";
__n213 := {  };
__n213["type"] := "AssignmentExpression";
__n213["operator"] := "=";
__n214 := {  };
__n214["type"] := "Identifier";
__n214["name"] := "x";
__n213["left"] := __n214;
__n215 := {  };
__n215["type"] := "BinaryExpression";
__n215["operator"] := "+";
__n216 := {  };
__n216["type"] := "BinaryExpression";
__n216["operator"] := "/";
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := 1.;
__n217["raw"] := "1";
__n216["left"] := __n217;
__n218 := {  };
__n218["type"] := "MemberExpression";
__n219 := {  };
__n219["type"] := "Identifier";
__n219["name"] := "Number";
__n218["object"] := __n219;
__n220 := {  };
__n220["type"] := "Literal";
__n220["value"] := "EPSILON";
__n220["raw"] := "\"EPSILON\"";
__n218["property"] := __n220;
__n218["computed"] := true;
__n216["right"] := __n218;
__n215["left"] := __n216;
__n221 := {  };
__n221["type"] := "Literal";
__n221["value"] := 1.;
__n221["raw"] := "1";
__n215["right"] := __n221;
__n213["right"] := __n215;
__n212["expression"] := __n213;
__n222 := {  };
__n222["type"] := "IfStatement";
__n223 := {  };
__n223["type"] := "BinaryExpression";
__n223["operator"] := "!==";
__n224 := {  };
__n224["type"] := "CallExpression";
__n225 := {  };
__n225["type"] := "MemberExpression";
__n226 := {  };
__n226["type"] := "Identifier";
__n226["name"] := "Math";
__n225["object"] := __n226;
__n227 := {  };
__n227["type"] := "Literal";
__n227["value"] := "round";
__n227["raw"] := "\"round\"";
__n225["property"] := __n227;
__n225["computed"] := true;
__n224["callee"] := __n225;
__n229 := {  };
__n229["type"] := "Identifier";
__n229["name"] := "x";
__n228 := [ __n229 ];
__n224["arguments"] := __n228;
__n223["left"] := __n224;
__n230 := {  };
__n230["type"] := "Identifier";
__n230["name"] := "x";
__n223["right"] := __n230;
__n222["test"] := __n223;
__n231 := {  };
__n231["type"] := "BlockStatement";
__n233 := {  };
__n233["type"] := "ExpressionStatement";
__n234 := {  };
__n234["type"] := "CallExpression";
__n235 := {  };
__n235["type"] := "Identifier";
__n235["name"] := "$ERROR";
__n234["callee"] := __n235;
__n237 := {  };
__n237["type"] := "BinaryExpression";
__n237["operator"] := "+";
__n238 := {  };
__n238["type"] := "BinaryExpression";
__n238["operator"] := "+";
__n239 := {  };
__n239["type"] := "BinaryExpression";
__n239["operator"] := "+";
__n240 := {  };
__n240["type"] := "BinaryExpression";
__n240["operator"] := "+";
__n241 := {  };
__n241["type"] := "Literal";
__n241["value"] := "#8: 'Math.round(";
__n241["raw"] := "\"#8: 'Math.round(\"";
__n240["left"] := __n241;
__n242 := {  };
__n242["type"] := "Identifier";
__n242["name"] := "x";
__n240["right"] := __n242;
__n239["left"] := __n240;
__n243 := {  };
__n243["type"] := "Literal";
__n243["value"] := ") !== ";
__n243["raw"] := "\") !== \"";
__n239["right"] := __n243;
__n238["left"] := __n239;
__n244 := {  };
__n244["type"] := "Identifier";
__n244["name"] := "x";
__n238["right"] := __n244;
__n237["left"] := __n238;
__n245 := {  };
__n245["type"] := "Literal";
__n245["value"] := "'";
__n245["raw"] := "\"'\"";
__n237["right"] := __n245;
__n236 := [ __n237 ];
__n234["arguments"] := __n236;
__n233["expression"] := __n234;
__n232 := [ __n233 ];
__n231["body"] := __n232;
__n222["consequent"] := __n231;
__n222["alternate"] := null;
__n246 := {  };
__n246["type"] := "ExpressionStatement";
__n247 := {  };
__n247["type"] := "AssignmentExpression";
__n247["operator"] := "=";
__n248 := {  };
__n248["type"] := "Identifier";
__n248["name"] := "x";
__n247["left"] := __n248;
__n249 := {  };
__n249["type"] := "BinaryExpression";
__n249["operator"] := "-";
__n250 := {  };
__n250["type"] := "BinaryExpression";
__n250["operator"] := "/";
__n251 := {  };
__n251["type"] := "Literal";
__n251["value"] := 1.5;
__n251["raw"] := "1.5";
__n250["left"] := __n251;
__n252 := {  };
__n252["type"] := "MemberExpression";
__n253 := {  };
__n253["type"] := "Identifier";
__n253["name"] := "Number";
__n252["object"] := __n253;
__n254 := {  };
__n254["type"] := "Literal";
__n254["value"] := "EPSILON";
__n254["raw"] := "\"EPSILON\"";
__n252["property"] := __n254;
__n252["computed"] := true;
__n250["right"] := __n252;
__n249["left"] := __n250;
__n255 := {  };
__n255["type"] := "Literal";
__n255["value"] := 1.;
__n255["raw"] := "1";
__n249["right"] := __n255;
__n247["right"] := __n249;
__n246["expression"] := __n247;
__n256 := {  };
__n256["type"] := "IfStatement";
__n257 := {  };
__n257["type"] := "BinaryExpression";
__n257["operator"] := "!==";
__n258 := {  };
__n258["type"] := "CallExpression";
__n259 := {  };
__n259["type"] := "MemberExpression";
__n260 := {  };
__n260["type"] := "Identifier";
__n260["name"] := "Math";
__n259["object"] := __n260;
__n261 := {  };
__n261["type"] := "Literal";
__n261["value"] := "round";
__n261["raw"] := "\"round\"";
__n259["property"] := __n261;
__n259["computed"] := true;
__n258["callee"] := __n259;
__n263 := {  };
__n263["type"] := "Identifier";
__n263["name"] := "x";
__n262 := [ __n263 ];
__n258["arguments"] := __n262;
__n257["left"] := __n258;
__n264 := {  };
__n264["type"] := "Identifier";
__n264["name"] := "x";
__n257["right"] := __n264;
__n256["test"] := __n257;
__n265 := {  };
__n265["type"] := "BlockStatement";
__n267 := {  };
__n267["type"] := "ExpressionStatement";
__n268 := {  };
__n268["type"] := "CallExpression";
__n269 := {  };
__n269["type"] := "Identifier";
__n269["name"] := "$ERROR";
__n268["callee"] := __n269;
__n271 := {  };
__n271["type"] := "BinaryExpression";
__n271["operator"] := "+";
__n272 := {  };
__n272["type"] := "BinaryExpression";
__n272["operator"] := "+";
__n273 := {  };
__n273["type"] := "BinaryExpression";
__n273["operator"] := "+";
__n274 := {  };
__n274["type"] := "BinaryExpression";
__n274["operator"] := "+";
__n275 := {  };
__n275["type"] := "Literal";
__n275["value"] := "#9: 'Math.round(";
__n275["raw"] := "\"#9: 'Math.round(\"";
__n274["left"] := __n275;
__n276 := {  };
__n276["type"] := "Identifier";
__n276["name"] := "x";
__n274["right"] := __n276;
__n273["left"] := __n274;
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := ") !== ";
__n277["raw"] := "\") !== \"";
__n273["right"] := __n277;
__n272["left"] := __n273;
__n278 := {  };
__n278["type"] := "Identifier";
__n278["name"] := "x";
__n272["right"] := __n278;
__n271["left"] := __n272;
__n279 := {  };
__n279["type"] := "Literal";
__n279["value"] := "'";
__n279["raw"] := "\"'\"";
__n271["right"] := __n279;
__n270 := [ __n271 ];
__n268["arguments"] := __n270;
__n267["expression"] := __n268;
__n266 := [ __n267 ];
__n265["body"] := __n266;
__n256["consequent"] := __n265;
__n256["alternate"] := null;
__n280 := {  };
__n280["type"] := "ExpressionStatement";
__n281 := {  };
__n281["type"] := "AssignmentExpression";
__n281["operator"] := "=";
__n282 := {  };
__n282["type"] := "Identifier";
__n282["name"] := "x";
__n281["left"] := __n282;
__n283 := {  };
__n283["type"] := "BinaryExpression";
__n283["operator"] := "-";
__n284 := {  };
__n284["type"] := "BinaryExpression";
__n284["operator"] := "/";
__n285 := {  };
__n285["type"] := "Literal";
__n285["value"] := 2.;
__n285["raw"] := "2";
__n284["left"] := __n285;
__n286 := {  };
__n286["type"] := "MemberExpression";
__n287 := {  };
__n287["type"] := "Identifier";
__n287["name"] := "Number";
__n286["object"] := __n287;
__n288 := {  };
__n288["type"] := "Literal";
__n288["value"] := "EPSILON";
__n288["raw"] := "\"EPSILON\"";
__n286["property"] := __n288;
__n286["computed"] := true;
__n284["right"] := __n286;
__n283["left"] := __n284;
__n289 := {  };
__n289["type"] := "Literal";
__n289["value"] := 1.;
__n289["raw"] := "1";
__n283["right"] := __n289;
__n281["right"] := __n283;
__n280["expression"] := __n281;
__n290 := {  };
__n290["type"] := "IfStatement";
__n291 := {  };
__n291["type"] := "BinaryExpression";
__n291["operator"] := "!==";
__n292 := {  };
__n292["type"] := "CallExpression";
__n293 := {  };
__n293["type"] := "MemberExpression";
__n294 := {  };
__n294["type"] := "Identifier";
__n294["name"] := "Math";
__n293["object"] := __n294;
__n295 := {  };
__n295["type"] := "Literal";
__n295["value"] := "round";
__n295["raw"] := "\"round\"";
__n293["property"] := __n295;
__n293["computed"] := true;
__n292["callee"] := __n293;
__n297 := {  };
__n297["type"] := "Identifier";
__n297["name"] := "x";
__n296 := [ __n297 ];
__n292["arguments"] := __n296;
__n291["left"] := __n292;
__n298 := {  };
__n298["type"] := "Identifier";
__n298["name"] := "x";
__n291["right"] := __n298;
__n290["test"] := __n291;
__n299 := {  };
__n299["type"] := "BlockStatement";
__n301 := {  };
__n301["type"] := "ExpressionStatement";
__n302 := {  };
__n302["type"] := "CallExpression";
__n303 := {  };
__n303["type"] := "Identifier";
__n303["name"] := "$ERROR";
__n302["callee"] := __n303;
__n305 := {  };
__n305["type"] := "BinaryExpression";
__n305["operator"] := "+";
__n306 := {  };
__n306["type"] := "BinaryExpression";
__n306["operator"] := "+";
__n307 := {  };
__n307["type"] := "BinaryExpression";
__n307["operator"] := "+";
__n308 := {  };
__n308["type"] := "BinaryExpression";
__n308["operator"] := "+";
__n309 := {  };
__n309["type"] := "Literal";
__n309["value"] := "#10: 'Math.round(";
__n309["raw"] := "\"#10: 'Math.round(\"";
__n308["left"] := __n309;
__n310 := {  };
__n310["type"] := "Identifier";
__n310["name"] := "x";
__n308["right"] := __n310;
__n307["left"] := __n308;
__n311 := {  };
__n311["type"] := "Literal";
__n311["value"] := ") !== ";
__n311["raw"] := "\") !== \"";
__n307["right"] := __n311;
__n306["left"] := __n307;
__n312 := {  };
__n312["type"] := "Identifier";
__n312["name"] := "x";
__n306["right"] := __n312;
__n305["left"] := __n306;
__n313 := {  };
__n313["type"] := "Literal";
__n313["value"] := "'";
__n313["raw"] := "\"'\"";
__n305["right"] := __n313;
__n304 := [ __n305 ];
__n302["arguments"] := __n304;
__n301["expression"] := __n302;
__n300 := [ __n301 ];
__n299["body"] := __n300;
__n290["consequent"] := __n299;
__n290["alternate"] := null;
__n1 := [ __n2, __n24, __n46, __n68, __n73, __n83, __n107, __n118, __n142, __n153, __n177, __n188, __n212, __n222, __n246, __n256, __n280, __n290 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n314 := [ "x" ];
__n0["variableDeclarations"] := __n314;
__n315 := [  ];
__n0["functionDeclarations"] := __n315;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}