function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "UnaryExpression";
__n6["operator"] := "-";
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 1e-15;
__n7["raw"] := "0.000000000000001";
__n6["argument"] := __n7;
__n6["prefix"] := true;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "IfStatement";
__n9 := {  };
__n9["type"] := "UnaryExpression";
__n9["operator"] := "!";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "isNaN";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Math";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "sqrt";
__n16["raw"] := "\"sqrt\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "x";
__n17 := [ __n18 ];
__n13["arguments"] := __n17;
__n12 := [ __n13 ];
__n10["arguments"] := __n12;
__n9["argument"] := __n10;
__n9["prefix"] := true;
__n8["test"] := __n9;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "$ERROR";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "#1: 'var x=-0.000000000000001; isNaN(Math.sqrt(x)) === false'";
__n25["raw"] := "\"#1: 'var x=-0.000000000000001; isNaN(Math.sqrt(x)) === false'\"";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n8["consequent"] := __n19;
__n8["alternate"] := null;
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "x";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "UnaryExpression";
__n30["operator"] := "-";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 1.;
__n31["raw"] := "1";
__n30["argument"] := __n31;
__n30["prefix"] := true;
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n32 := {  };
__n32["type"] := "IfStatement";
__n33 := {  };
__n33["type"] := "UnaryExpression";
__n33["operator"] := "!";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "isNaN";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "Math";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "sqrt";
__n40["raw"] := "\"sqrt\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "x";
__n41 := [ __n42 ];
__n37["arguments"] := __n41;
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33["argument"] := __n34;
__n33["prefix"] := true;
__n32["test"] := __n33;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "#2: 'var x=-1; isNaN(Math.sqrt(x)) === false'";
__n49["raw"] := "\"#2: 'var x=-1; isNaN(Math.sqrt(x)) === false'\"";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n32["consequent"] := __n43;
__n32["alternate"] := null;
__n50 := {  };
__n50["type"] := "VariableDeclaration";
__n52 := {  };
__n52["type"] := "VariableDeclarator";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "x";
__n52["id"] := __n53;
__n54 := {  };
__n54["type"] := "UnaryExpression";
__n54["operator"] := "-";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Infinity";
__n54["argument"] := __n55;
__n54["prefix"] := true;
__n52["init"] := __n54;
__n51 := [ __n52 ];
__n50["declarations"] := __n51;
__n50["kind"] := "var";
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "UnaryExpression";
__n57["operator"] := "!";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "isNaN";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Math";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "sqrt";
__n64["raw"] := "\"sqrt\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "x";
__n65 := [ __n66 ];
__n61["arguments"] := __n65;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["argument"] := __n58;
__n57["prefix"] := true;
__n56["test"] := __n57;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#3: 'var x=-Infinity; isNaN(Math.sqrt(x)) === false'";
__n73["raw"] := "\"#3: 'var x=-Infinity; isNaN(Math.sqrt(x)) === false'\"";
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n56["consequent"] := __n67;
__n56["alternate"] := null;
__n1 := [ __n2, __n8, __n26, __n32, __n50, __n56 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n74 := [ "x" ];
__n0["variableDeclarations"] := __n74;
__n75 := [  ];
__n0["functionDeclarations"] := __n75;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}