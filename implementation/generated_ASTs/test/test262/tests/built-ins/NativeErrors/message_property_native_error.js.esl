function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "nativeErrors";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "EvalError";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "RangeError";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "ReferenceError";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "SyntaxError";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "TypeError";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "URIError";
__n7 := [ __n8, __n9, __n10, __n11, __n12, __n13 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n14 := {  };
__n14["type"] := "ForStatement";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "i";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 0.;
__n19["raw"] := "0";
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n14["init"] := __n15;
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "<";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "i";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "nativeErrors";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "length";
__n24["raw"] := "\"length\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n20["right"] := __n22;
__n14["test"] := __n20;
__n25 := {  };
__n25["type"] := "UpdateExpression";
__n25["operator"] := "++";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "i";
__n25["argument"] := __n26;
__n25["prefix"] := true;
__n14["update"] := __n25;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "nativeError";
__n31["id"] := __n32;
__n33 := {  };
__n33["type"] := "MemberExpression";
__n33["computed"] := true;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "nativeErrors";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "i";
__n33["property"] := __n35;
__n31["init"] := __n33;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n36 := {  };
__n36["type"] := "VariableDeclaration";
__n38 := {  };
__n38["type"] := "VariableDeclarator";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "message";
__n38["id"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "my-message";
__n40["raw"] := "\"my-message\"";
__n38["init"] := __n40;
__n37 := [ __n38 ];
__n36["declarations"] := __n37;
__n36["kind"] := "var";
__n41 := {  };
__n41["type"] := "VariableDeclaration";
__n43 := {  };
__n43["type"] := "VariableDeclarator";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "error";
__n43["id"] := __n44;
__n45 := {  };
__n45["type"] := "NewExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "nativeError";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "message";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n43["init"] := __n45;
__n42 := [ __n43 ];
__n41["declarations"] := __n42;
__n41["kind"] := "var";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "verifyEqualTo";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "error";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "message";
__n54["raw"] := "\"message\"";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "message";
__n52 := [ __n53, __n54, __n55 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "verifyNotEnumerable";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "error";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "message";
__n61["raw"] := "\"message\"";
__n59 := [ __n60, __n61 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "verifyWritable";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "error";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "message";
__n67["raw"] := "\"message\"";
__n65 := [ __n66, __n67 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "verifyConfigurable";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "error";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "message";
__n73["raw"] := "\"message\"";
__n71 := [ __n72, __n73 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n28 := [ __n29, __n36, __n41, __n49, __n56, __n62, __n68 ];
__n27["body"] := __n28;
__n14["body"] := __n27;
__n1 := [ __n2, __n14 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n74 := [ "nativeErrors", "i", "nativeError", "message", "error" ];
__n0["variableDeclarations"] := __n74;
__n75 := [  ];
__n0["functionDeclarations"] := __n75;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}