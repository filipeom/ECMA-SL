function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Number";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "-0";
__n7["raw"] := "\"-0\"";
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "UnaryExpression";
__n8["operator"] := "-";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Number";
__n9["callee"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "0";
__n12["raw"] := "\"0\"";
__n11 := [ __n12 ];
__n9["arguments"] := __n11;
__n8["argument"] := __n9;
__n8["prefix"] := true;
__n3["right"] := __n8;
__n2["test"] := __n3;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "$ERROR";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "#1: Number(\"-0\") === -Number(\"0\")";
__n19["raw"] := "'#1: Number(\"-0\") === -Number(\"0\")'";
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n15["expression"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n2["consequent"] := __n13;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "IfStatement";
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "!==";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "/";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 1.;
__n25["raw"] := "1";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Number";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "-0";
__n29["raw"] := "\"-0\"";
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n24["right"] := __n26;
__n23["left"] := __n24;
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "/";
__n31 := {  };
__n31["type"] := "UnaryExpression";
__n31["operator"] := "-";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 1.;
__n32["raw"] := "1";
__n31["argument"] := __n32;
__n31["prefix"] := true;
__n30["left"] := __n31;
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Number";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "0";
__n36["raw"] := "\"0\"";
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n30["right"] := __n33;
__n23["right"] := __n30;
__n22["test"] := __n23;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$ERROR";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "#2: 1/Number(\"-0\") === -1/Number(\"0\")";
__n43["raw"] := "'#2: 1/Number(\"-0\") === -1/Number(\"0\")'";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n22["consequent"] := __n37;
__n22["alternate"] := null;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n2["alternate"] := __n20;
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "Number";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "-Infinity";
__n49["raw"] := "\"-Infinity\"";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["left"] := __n46;
__n50 := {  };
__n50["type"] := "UnaryExpression";
__n50["operator"] := "-";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Number";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "Infinity";
__n54["raw"] := "\"Infinity\"";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["argument"] := __n51;
__n50["prefix"] := true;
__n45["right"] := __n50;
__n44["test"] := __n45;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#3: Number(\"-Infinity\") === -Number(\"Infinity\")";
__n61["raw"] := "'#3: Number(\"-Infinity\") === -Number(\"Infinity\")'";
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n44["consequent"] := __n55;
__n44["alternate"] := null;
__n62 := {  };
__n62["type"] := "IfStatement";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "!==";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Number";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "-1234567890";
__n67["raw"] := "\"-1234567890\"";
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["left"] := __n64;
__n68 := {  };
__n68["type"] := "UnaryExpression";
__n68["operator"] := "-";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "Number";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "1234567890";
__n72["raw"] := "\"1234567890\"";
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["argument"] := __n69;
__n68["prefix"] := true;
__n63["right"] := __n68;
__n62["test"] := __n63;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "$ERROR";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "#4: Number(\"-1234567890\") === -Number(\"1234567890\")";
__n79["raw"] := "'#4: Number(\"-1234567890\") === -Number(\"1234567890\")'";
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["expression"] := __n76;
__n74 := [ __n75 ];
__n73["body"] := __n74;
__n62["consequent"] := __n73;
__n62["alternate"] := null;
__n80 := {  };
__n80["type"] := "IfStatement";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "!==";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "Number";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "-1234.5678";
__n85["raw"] := "\"-1234.5678\"";
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["left"] := __n82;
__n86 := {  };
__n86["type"] := "UnaryExpression";
__n86["operator"] := "-";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "Number";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "1234.5678";
__n90["raw"] := "\"1234.5678\"";
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86["argument"] := __n87;
__n86["prefix"] := true;
__n81["right"] := __n86;
__n80["test"] := __n81;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "#5: Number(\"-1234.5678\") === -Number(\"1234.5678\")";
__n97["raw"] := "'#5: Number(\"-1234.5678\") === -Number(\"1234.5678\")'";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n80["consequent"] := __n91;
__n80["alternate"] := null;
__n98 := {  };
__n98["type"] := "IfStatement";
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "!==";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "Number";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "-1234.5678e90";
__n103["raw"] := "\"-1234.5678e90\"";
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["left"] := __n100;
__n104 := {  };
__n104["type"] := "UnaryExpression";
__n104["operator"] := "-";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "Number";
__n105["callee"] := __n106;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "1234.5678e90";
__n108["raw"] := "\"1234.5678e90\"";
__n107 := [ __n108 ];
__n105["arguments"] := __n107;
__n104["argument"] := __n105;
__n104["prefix"] := true;
__n99["right"] := __n104;
__n98["test"] := __n99;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "ExpressionStatement";
__n112 := {  };
__n112["type"] := "CallExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "$ERROR";
__n112["callee"] := __n113;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "#6: Number(\"-1234.5678e90\") === -Number(\"1234.5678e90\")";
__n115["raw"] := "'#6: Number(\"-1234.5678e90\") === -Number(\"1234.5678e90\")'";
__n114 := [ __n115 ];
__n112["arguments"] := __n114;
__n111["expression"] := __n112;
__n110 := [ __n111 ];
__n109["body"] := __n110;
__n98["consequent"] := __n109;
__n98["alternate"] := null;
__n116 := {  };
__n116["type"] := "IfStatement";
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "!==";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "Number";
__n118["callee"] := __n119;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "-1234.5678E90";
__n121["raw"] := "\"-1234.5678E90\"";
__n120 := [ __n121 ];
__n118["arguments"] := __n120;
__n117["left"] := __n118;
__n122 := {  };
__n122["type"] := "UnaryExpression";
__n122["operator"] := "-";
__n123 := {  };
__n123["type"] := "CallExpression";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "Number";
__n123["callee"] := __n124;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "1234.5678E90";
__n126["raw"] := "\"1234.5678E90\"";
__n125 := [ __n126 ];
__n123["arguments"] := __n125;
__n122["argument"] := __n123;
__n122["prefix"] := true;
__n117["right"] := __n122;
__n116["test"] := __n117;
__n127 := {  };
__n127["type"] := "BlockStatement";
__n129 := {  };
__n129["type"] := "ExpressionStatement";
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "$ERROR";
__n130["callee"] := __n131;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "#6: Number(\"-1234.5678E90\") === -Number(\"1234.5678E90\")";
__n133["raw"] := "'#6: Number(\"-1234.5678E90\") === -Number(\"1234.5678E90\")'";
__n132 := [ __n133 ];
__n130["arguments"] := __n132;
__n129["expression"] := __n130;
__n128 := [ __n129 ];
__n127["body"] := __n128;
__n116["consequent"] := __n127;
__n116["alternate"] := null;
__n134 := {  };
__n134["type"] := "IfStatement";
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "!==";
__n136 := {  };
__n136["type"] := "CallExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "Number";
__n136["callee"] := __n137;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "-1234.5678e-90";
__n139["raw"] := "\"-1234.5678e-90\"";
__n138 := [ __n139 ];
__n136["arguments"] := __n138;
__n135["left"] := __n136;
__n140 := {  };
__n140["type"] := "UnaryExpression";
__n140["operator"] := "-";
__n141 := {  };
__n141["type"] := "CallExpression";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "Number";
__n141["callee"] := __n142;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "1234.5678e-90";
__n144["raw"] := "\"1234.5678e-90\"";
__n143 := [ __n144 ];
__n141["arguments"] := __n143;
__n140["argument"] := __n141;
__n140["prefix"] := true;
__n135["right"] := __n140;
__n134["test"] := __n135;
__n145 := {  };
__n145["type"] := "BlockStatement";
__n147 := {  };
__n147["type"] := "ExpressionStatement";
__n148 := {  };
__n148["type"] := "CallExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "$ERROR";
__n148["callee"] := __n149;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "#6: Number(\"-1234.5678e-90\") === -Number(\"1234.5678e-90\")";
__n151["raw"] := "'#6: Number(\"-1234.5678e-90\") === -Number(\"1234.5678e-90\")'";
__n150 := [ __n151 ];
__n148["arguments"] := __n150;
__n147["expression"] := __n148;
__n146 := [ __n147 ];
__n145["body"] := __n146;
__n134["consequent"] := __n145;
__n134["alternate"] := null;
__n152 := {  };
__n152["type"] := "IfStatement";
__n153 := {  };
__n153["type"] := "BinaryExpression";
__n153["operator"] := "!==";
__n154 := {  };
__n154["type"] := "CallExpression";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "Number";
__n154["callee"] := __n155;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := "-1234.5678E-90";
__n157["raw"] := "\"-1234.5678E-90\"";
__n156 := [ __n157 ];
__n154["arguments"] := __n156;
__n153["left"] := __n154;
__n158 := {  };
__n158["type"] := "UnaryExpression";
__n158["operator"] := "-";
__n159 := {  };
__n159["type"] := "CallExpression";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "Number";
__n159["callee"] := __n160;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := "1234.5678E-90";
__n162["raw"] := "\"1234.5678E-90\"";
__n161 := [ __n162 ];
__n159["arguments"] := __n161;
__n158["argument"] := __n159;
__n158["prefix"] := true;
__n153["right"] := __n158;
__n152["test"] := __n153;
__n163 := {  };
__n163["type"] := "BlockStatement";
__n165 := {  };
__n165["type"] := "ExpressionStatement";
__n166 := {  };
__n166["type"] := "CallExpression";
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "$ERROR";
__n166["callee"] := __n167;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := "#6: Number(\"-1234.5678E-90\") === -Number(\"1234.5678E-90\")";
__n169["raw"] := "'#6: Number(\"-1234.5678E-90\") === -Number(\"1234.5678E-90\")'";
__n168 := [ __n169 ];
__n166["arguments"] := __n168;
__n165["expression"] := __n166;
__n164 := [ __n165 ];
__n163["body"] := __n164;
__n152["consequent"] := __n163;
__n152["alternate"] := null;
__n170 := {  };
__n170["type"] := "IfStatement";
__n171 := {  };
__n171["type"] := "BinaryExpression";
__n171["operator"] := "!==";
__n172 := {  };
__n172["type"] := "CallExpression";
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "Number";
__n172["callee"] := __n173;
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := "-Infinity";
__n175["raw"] := "\"-Infinity\"";
__n174 := [ __n175 ];
__n172["arguments"] := __n174;
__n171["left"] := __n172;
__n176 := {  };
__n176["type"] := "MemberExpression";
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "Number";
__n176["object"] := __n177;
__n178 := {  };
__n178["type"] := "Literal";
__n178["value"] := "NEGATIVE_INFINITY";
__n178["raw"] := "\"NEGATIVE_INFINITY\"";
__n176["property"] := __n178;
__n176["computed"] := true;
__n171["right"] := __n176;
__n170["test"] := __n171;
__n179 := {  };
__n179["type"] := "BlockStatement";
__n181 := {  };
__n181["type"] := "ExpressionStatement";
__n182 := {  };
__n182["type"] := "CallExpression";
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "$ERROR";
__n182["callee"] := __n183;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "#3: Number(\"-Infinity\") === Number.NEGATIVE_INFINITY";
__n185["raw"] := "'#3: Number(\"-Infinity\") === Number.NEGATIVE_INFINITY'";
__n184 := [ __n185 ];
__n182["arguments"] := __n184;
__n181["expression"] := __n182;
__n180 := [ __n181 ];
__n179["body"] := __n180;
__n170["consequent"] := __n179;
__n170["alternate"] := null;
__n1 := [ __n2, __n44, __n62, __n80, __n98, __n116, __n134, __n152, __n170 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n186 := [  ];
__n0["variableDeclarations"] := __n186;
__n187 := [  ];
__n0["functionDeclarations"] := __n187;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}