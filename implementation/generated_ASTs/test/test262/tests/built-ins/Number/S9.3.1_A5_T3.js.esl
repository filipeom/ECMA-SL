function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "dynaString";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "IfStatement";
__n5 := {  };
__n5["type"] := "BinaryExpression";
__n5["operator"] := "!==";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Number";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "dynaString";
__n9["callee"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "-";
__n12["raw"] := "\"-\"";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "0";
__n13["raw"] := "\"0\"";
__n11 := [ __n12, __n13 ];
__n9["arguments"] := __n11;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n5["left"] := __n6;
__n14 := {  };
__n14["type"] := "UnaryExpression";
__n14["operator"] := "-";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Number";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "0";
__n18["raw"] := "\"0\"";
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["argument"] := __n15;
__n14["prefix"] := true;
__n5["right"] := __n14;
__n4["test"] := __n5;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "$ERROR";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "#1: Number(\"-\"+\"0\") === -Number(\"0\")";
__n25["raw"] := "'#1: Number(\"-\"+\"0\") === -Number(\"0\")'";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n4["consequent"] := __n19;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "IfStatement";
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "!==";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "/";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 1.;
__n31["raw"] := "1";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "Number";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "dynaString";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "-";
__n38["raw"] := "\"-\"";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "0";
__n39["raw"] := "\"0\"";
__n37 := [ __n38, __n39 ];
__n35["arguments"] := __n37;
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n30["right"] := __n32;
__n29["left"] := __n30;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "/";
__n41 := {  };
__n41["type"] := "UnaryExpression";
__n41["operator"] := "-";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 1.;
__n42["raw"] := "1";
__n41["argument"] := __n42;
__n41["prefix"] := true;
__n40["left"] := __n41;
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Number";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "0";
__n46["raw"] := "\"0\"";
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n40["right"] := __n43;
__n29["right"] := __n40;
__n28["test"] := __n29;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#2: 1/Number(\"-\"+\"0\") === -1/Number(\"0\")";
__n53["raw"] := "'#2: 1/Number(\"-\"+\"0\") === -1/Number(\"0\")'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n28["consequent"] := __n47;
__n28["alternate"] := null;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n4["alternate"] := __n26;
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "Number";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "dynaString";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "-Infi";
__n62["raw"] := "\"-Infi\"";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "nity";
__n63["raw"] := "\"nity\"";
__n61 := [ __n62, __n63 ];
__n59["arguments"] := __n61;
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["left"] := __n56;
__n64 := {  };
__n64["type"] := "UnaryExpression";
__n64["operator"] := "-";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "Number";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "Infinity";
__n68["raw"] := "\"Infinity\"";
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["argument"] := __n65;
__n64["prefix"] := true;
__n55["right"] := __n64;
__n54["test"] := __n55;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "$ERROR";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "#3: Number(\"-Infi\"+\"nity\") === -Number(\"Infinity\")";
__n75["raw"] := "'#3: Number(\"-Infi\"+\"nity\") === -Number(\"Infinity\")'";
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n54["consequent"] := __n69;
__n54["alternate"] := null;
__n76 := {  };
__n76["type"] := "IfStatement";
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "!==";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "Number";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "dynaString";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "-12345";
__n84["raw"] := "\"-12345\"";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "67890";
__n85["raw"] := "\"67890\"";
__n83 := [ __n84, __n85 ];
__n81["arguments"] := __n83;
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["left"] := __n78;
__n86 := {  };
__n86["type"] := "UnaryExpression";
__n86["operator"] := "-";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "Number";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "1234567890";
__n90["raw"] := "\"1234567890\"";
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86["argument"] := __n87;
__n86["prefix"] := true;
__n77["right"] := __n86;
__n76["test"] := __n77;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "#4: Number(\"-12345\"+\"67890\") === -Number(\"1234567890\")";
__n97["raw"] := "'#4: Number(\"-12345\"+\"67890\") === -Number(\"1234567890\")'";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n76["consequent"] := __n91;
__n76["alternate"] := null;
__n98 := {  };
__n98["type"] := "IfStatement";
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "!==";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "Number";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "dynaString";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "-1234.";
__n106["raw"] := "\"-1234.\"";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "5678";
__n107["raw"] := "\"5678\"";
__n105 := [ __n106, __n107 ];
__n103["arguments"] := __n105;
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["left"] := __n100;
__n108 := {  };
__n108["type"] := "UnaryExpression";
__n108["operator"] := "-";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "Number";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "1234.5678";
__n112["raw"] := "\"1234.5678\"";
__n111 := [ __n112 ];
__n109["arguments"] := __n111;
__n108["argument"] := __n109;
__n108["prefix"] := true;
__n99["right"] := __n108;
__n98["test"] := __n99;
__n113 := {  };
__n113["type"] := "BlockStatement";
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "$ERROR";
__n116["callee"] := __n117;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "#5: Number(\"-1234.\"+\"5678\") === -Number(\"1234.5678\")";
__n119["raw"] := "'#5: Number(\"-1234.\"+\"5678\") === -Number(\"1234.5678\")'";
__n118 := [ __n119 ];
__n116["arguments"] := __n118;
__n115["expression"] := __n116;
__n114 := [ __n115 ];
__n113["body"] := __n114;
__n98["consequent"] := __n113;
__n98["alternate"] := null;
__n120 := {  };
__n120["type"] := "IfStatement";
__n121 := {  };
__n121["type"] := "BinaryExpression";
__n121["operator"] := "!==";
__n122 := {  };
__n122["type"] := "CallExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "Number";
__n122["callee"] := __n123;
__n125 := {  };
__n125["type"] := "CallExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "dynaString";
__n125["callee"] := __n126;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := "-1234.";
__n128["raw"] := "\"-1234.\"";
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "5678e90";
__n129["raw"] := "\"5678e90\"";
__n127 := [ __n128, __n129 ];
__n125["arguments"] := __n127;
__n124 := [ __n125 ];
__n122["arguments"] := __n124;
__n121["left"] := __n122;
__n130 := {  };
__n130["type"] := "UnaryExpression";
__n130["operator"] := "-";
__n131 := {  };
__n131["type"] := "CallExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "Number";
__n131["callee"] := __n132;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "1234.5678e90";
__n134["raw"] := "\"1234.5678e90\"";
__n133 := [ __n134 ];
__n131["arguments"] := __n133;
__n130["argument"] := __n131;
__n130["prefix"] := true;
__n121["right"] := __n130;
__n120["test"] := __n121;
__n135 := {  };
__n135["type"] := "BlockStatement";
__n137 := {  };
__n137["type"] := "ExpressionStatement";
__n138 := {  };
__n138["type"] := "CallExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "$ERROR";
__n138["callee"] := __n139;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "#6: Number(\"-1234.\"+\"5678e90\") === -Number(\"1234.5678e90\")";
__n141["raw"] := "'#6: Number(\"-1234.\"+\"5678e90\") === -Number(\"1234.5678e90\")'";
__n140 := [ __n141 ];
__n138["arguments"] := __n140;
__n137["expression"] := __n138;
__n136 := [ __n137 ];
__n135["body"] := __n136;
__n120["consequent"] := __n135;
__n120["alternate"] := null;
__n142 := {  };
__n142["type"] := "IfStatement";
__n143 := {  };
__n143["type"] := "BinaryExpression";
__n143["operator"] := "!==";
__n144 := {  };
__n144["type"] := "CallExpression";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "Number";
__n144["callee"] := __n145;
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "dynaString";
__n147["callee"] := __n148;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "-1234.";
__n150["raw"] := "\"-1234.\"";
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "5678E90";
__n151["raw"] := "\"5678E90\"";
__n149 := [ __n150, __n151 ];
__n147["arguments"] := __n149;
__n146 := [ __n147 ];
__n144["arguments"] := __n146;
__n143["left"] := __n144;
__n152 := {  };
__n152["type"] := "UnaryExpression";
__n152["operator"] := "-";
__n153 := {  };
__n153["type"] := "CallExpression";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "Number";
__n153["callee"] := __n154;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := "1234.5678E90";
__n156["raw"] := "\"1234.5678E90\"";
__n155 := [ __n156 ];
__n153["arguments"] := __n155;
__n152["argument"] := __n153;
__n152["prefix"] := true;
__n143["right"] := __n152;
__n142["test"] := __n143;
__n157 := {  };
__n157["type"] := "BlockStatement";
__n159 := {  };
__n159["type"] := "ExpressionStatement";
__n160 := {  };
__n160["type"] := "CallExpression";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "$ERROR";
__n160["callee"] := __n161;
__n163 := {  };
__n163["type"] := "Literal";
__n163["value"] := "#6: Number(\"-1234.\"+\"5678E90\") === -Number(\"1234.5678E90\")";
__n163["raw"] := "'#6: Number(\"-1234.\"+\"5678E90\") === -Number(\"1234.5678E90\")'";
__n162 := [ __n163 ];
__n160["arguments"] := __n162;
__n159["expression"] := __n160;
__n158 := [ __n159 ];
__n157["body"] := __n158;
__n142["consequent"] := __n157;
__n142["alternate"] := null;
__n164 := {  };
__n164["type"] := "IfStatement";
__n165 := {  };
__n165["type"] := "BinaryExpression";
__n165["operator"] := "!==";
__n166 := {  };
__n166["type"] := "CallExpression";
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "Number";
__n166["callee"] := __n167;
__n169 := {  };
__n169["type"] := "CallExpression";
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "dynaString";
__n169["callee"] := __n170;
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := "-1234.";
__n172["raw"] := "\"-1234.\"";
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := "5678e-90";
__n173["raw"] := "\"5678e-90\"";
__n171 := [ __n172, __n173 ];
__n169["arguments"] := __n171;
__n168 := [ __n169 ];
__n166["arguments"] := __n168;
__n165["left"] := __n166;
__n174 := {  };
__n174["type"] := "UnaryExpression";
__n174["operator"] := "-";
__n175 := {  };
__n175["type"] := "CallExpression";
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "Number";
__n175["callee"] := __n176;
__n178 := {  };
__n178["type"] := "Literal";
__n178["value"] := "1234.5678e-90";
__n178["raw"] := "\"1234.5678e-90\"";
__n177 := [ __n178 ];
__n175["arguments"] := __n177;
__n174["argument"] := __n175;
__n174["prefix"] := true;
__n165["right"] := __n174;
__n164["test"] := __n165;
__n179 := {  };
__n179["type"] := "BlockStatement";
__n181 := {  };
__n181["type"] := "ExpressionStatement";
__n182 := {  };
__n182["type"] := "CallExpression";
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "$ERROR";
__n182["callee"] := __n183;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "#6: Number(\"-1234.\"+\"5678e-90\") === -Number(\"1234.5678e-90\")";
__n185["raw"] := "'#6: Number(\"-1234.\"+\"5678e-90\") === -Number(\"1234.5678e-90\")'";
__n184 := [ __n185 ];
__n182["arguments"] := __n184;
__n181["expression"] := __n182;
__n180 := [ __n181 ];
__n179["body"] := __n180;
__n164["consequent"] := __n179;
__n164["alternate"] := null;
__n186 := {  };
__n186["type"] := "IfStatement";
__n187 := {  };
__n187["type"] := "BinaryExpression";
__n187["operator"] := "!==";
__n188 := {  };
__n188["type"] := "CallExpression";
__n189 := {  };
__n189["type"] := "Identifier";
__n189["name"] := "Number";
__n188["callee"] := __n189;
__n191 := {  };
__n191["type"] := "CallExpression";
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "dynaString";
__n191["callee"] := __n192;
__n194 := {  };
__n194["type"] := "Literal";
__n194["value"] := "-1234.";
__n194["raw"] := "\"-1234.\"";
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "5678E-90";
__n195["raw"] := "\"5678E-90\"";
__n193 := [ __n194, __n195 ];
__n191["arguments"] := __n193;
__n190 := [ __n191 ];
__n188["arguments"] := __n190;
__n187["left"] := __n188;
__n196 := {  };
__n196["type"] := "UnaryExpression";
__n196["operator"] := "-";
__n197 := {  };
__n197["type"] := "CallExpression";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "Number";
__n197["callee"] := __n198;
__n200 := {  };
__n200["type"] := "Literal";
__n200["value"] := "1234.5678E-90";
__n200["raw"] := "\"1234.5678E-90\"";
__n199 := [ __n200 ];
__n197["arguments"] := __n199;
__n196["argument"] := __n197;
__n196["prefix"] := true;
__n187["right"] := __n196;
__n186["test"] := __n187;
__n201 := {  };
__n201["type"] := "BlockStatement";
__n203 := {  };
__n203["type"] := "ExpressionStatement";
__n204 := {  };
__n204["type"] := "CallExpression";
__n205 := {  };
__n205["type"] := "Identifier";
__n205["name"] := "$ERROR";
__n204["callee"] := __n205;
__n207 := {  };
__n207["type"] := "Literal";
__n207["value"] := "#6: Number(\"-1234.\"+\"5678E-90\") === -Number(\"1234.5678E-90\")";
__n207["raw"] := "'#6: Number(\"-1234.\"+\"5678E-90\") === -Number(\"1234.5678E-90\")'";
__n206 := [ __n207 ];
__n204["arguments"] := __n206;
__n203["expression"] := __n204;
__n202 := [ __n203 ];
__n201["body"] := __n202;
__n186["consequent"] := __n201;
__n186["alternate"] := null;
__n208 := {  };
__n208["type"] := "IfStatement";
__n209 := {  };
__n209["type"] := "BinaryExpression";
__n209["operator"] := "!==";
__n210 := {  };
__n210["type"] := "CallExpression";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "Number";
__n210["callee"] := __n211;
__n213 := {  };
__n213["type"] := "CallExpression";
__n214 := {  };
__n214["type"] := "Identifier";
__n214["name"] := "dynaString";
__n213["callee"] := __n214;
__n216 := {  };
__n216["type"] := "Literal";
__n216["value"] := "-Infi";
__n216["raw"] := "\"-Infi\"";
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := "nity";
__n217["raw"] := "\"nity\"";
__n215 := [ __n216, __n217 ];
__n213["arguments"] := __n215;
__n212 := [ __n213 ];
__n210["arguments"] := __n212;
__n209["left"] := __n210;
__n218 := {  };
__n218["type"] := "MemberExpression";
__n219 := {  };
__n219["type"] := "Identifier";
__n219["name"] := "Number";
__n218["object"] := __n219;
__n220 := {  };
__n220["type"] := "Literal";
__n220["value"] := "NEGATIVE_INFINITY";
__n220["raw"] := "\"NEGATIVE_INFINITY\"";
__n218["property"] := __n220;
__n218["computed"] := true;
__n209["right"] := __n218;
__n208["test"] := __n209;
__n221 := {  };
__n221["type"] := "BlockStatement";
__n223 := {  };
__n223["type"] := "ExpressionStatement";
__n224 := {  };
__n224["type"] := "CallExpression";
__n225 := {  };
__n225["type"] := "Identifier";
__n225["name"] := "$ERROR";
__n224["callee"] := __n225;
__n227 := {  };
__n227["type"] := "Literal";
__n227["value"] := "#3: Number(\"-Infi\"+\"nity\") === Number.NEGATIVE_INFINITY";
__n227["raw"] := "'#3: Number(\"-Infi\"+\"nity\") === Number.NEGATIVE_INFINITY'";
__n226 := [ __n227 ];
__n224["arguments"] := __n226;
__n223["expression"] := __n224;
__n222 := [ __n223 ];
__n221["body"] := __n222;
__n208["consequent"] := __n221;
__n208["alternate"] := null;
__n1 := [ __n2, __n4, __n54, __n76, __n98, __n120, __n142, __n164, __n186, __n208 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n228 := [  ];
__n0["variableDeclarations"] := __n228;
__n230 := {  };
__n230["type"] := "FunctionDeclaration";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "dynaString";
__n230["id"] := __n231;
__n232 := [ "s1", "s2" ];
__n230["params"] := __n232;
__n233 := {  };
__n233["type"] := "BlockStatement";
__n235 := {  };
__n235["type"] := "ReturnStatement";
__n236 := {  };
__n236["type"] := "BinaryExpression";
__n236["operator"] := "+";
__n237 := {  };
__n237["type"] := "CallExpression";
__n238 := {  };
__n238["type"] := "Identifier";
__n238["name"] := "String";
__n237["callee"] := __n238;
__n240 := {  };
__n240["type"] := "Identifier";
__n240["name"] := "s1";
__n239 := [ __n240 ];
__n237["arguments"] := __n239;
__n236["left"] := __n237;
__n241 := {  };
__n241["type"] := "CallExpression";
__n242 := {  };
__n242["type"] := "Identifier";
__n242["name"] := "String";
__n241["callee"] := __n242;
__n244 := {  };
__n244["type"] := "Identifier";
__n244["name"] := "s2";
__n243 := [ __n244 ];
__n241["arguments"] := __n243;
__n236["right"] := __n241;
__n235["argument"] := __n236;
__n234 := [ __n235 ];
__n233["body"] := __n234;
__n245 := [  ];
__n233["variableDeclarations"] := __n245;
__n246 := [  ];
__n233["functionDeclarations"] := __n246;
__n233["codeType"] := "function";
__n233["strict"] := false;
__n230["body"] := __n233;
__n230["generator"] := false;
__n230["expression"] := false;
__n230["async"] := false;
__n229 := [ __n230 ];
__n0["functionDeclarations"] := __n229;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}