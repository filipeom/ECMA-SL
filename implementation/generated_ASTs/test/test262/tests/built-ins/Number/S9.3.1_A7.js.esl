function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Number";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "1234.5678";
__n7["raw"] := "\"1234.5678\"";
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "BinaryExpression";
__n8["operator"] := "+";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Number";
__n9["callee"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "1234";
__n12["raw"] := "\"1234\"";
__n11 := [ __n12 ];
__n9["arguments"] := __n11;
__n8["left"] := __n9;
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "*";
__n14 := {  };
__n14["type"] := "UnaryExpression";
__n14["operator"] := "+";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "5678";
__n15["raw"] := "\"5678\"";
__n14["argument"] := __n15;
__n14["prefix"] := true;
__n13["left"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 0.0001;
__n16["raw"] := "1e-4";
__n13["right"] := __n16;
__n8["right"] := __n13;
__n3["right"] := __n8;
__n2["test"] := __n3;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "$ERROR";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "#1: Number(\"1234.5678\") === Number(\"1234\")+(+(\"5678\")*1e-4)";
__n23["raw"] := "'#1: Number(\"1234.5678\") === Number(\"1234\")+(+(\"5678\")*1e-4)'";
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n2["consequent"] := __n17;
__n2["alternate"] := null;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n24 := [  ];
__n0["variableDeclarations"] := __n24;
__n25 := [  ];
__n0["functionDeclarations"] := __n25;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}