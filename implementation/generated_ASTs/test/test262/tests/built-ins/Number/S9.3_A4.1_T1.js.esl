function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Number";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 13.;
__n7["raw"] := "13";
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 13.;
__n8["raw"] := "13";
__n3["right"] := __n8;
__n2["test"] := __n3;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "$ERROR";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "+";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "#1: Number(13) === 13. Actual: ";
__n16["raw"] := "'#1: Number(13) === 13. Actual: '";
__n15["left"] := __n16;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Number";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 13.;
__n20["raw"] := "13";
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n15["right"] := __n17;
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n2["consequent"] := __n9;
__n2["alternate"] := null;
__n21 := {  };
__n21["type"] := "IfStatement";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "!==";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Number";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "UnaryExpression";
__n26["operator"] := "-";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 13.;
__n27["raw"] := "13";
__n26["argument"] := __n27;
__n26["prefix"] := true;
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["left"] := __n23;
__n28 := {  };
__n28["type"] := "UnaryExpression";
__n28["operator"] := "-";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 13.;
__n29["raw"] := "13";
__n28["argument"] := __n29;
__n28["prefix"] := true;
__n22["right"] := __n28;
__n21["test"] := __n22;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "$ERROR";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "+";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "#2: Number(-13) === -13. Actual: ";
__n37["raw"] := "'#2: Number(-13) === -13. Actual: '";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "Number";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "UnaryExpression";
__n41["operator"] := "-";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 13.;
__n42["raw"] := "13";
__n41["argument"] := __n42;
__n41["prefix"] := true;
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n36["right"] := __n38;
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n21["consequent"] := __n30;
__n21["alternate"] := null;
__n43 := {  };
__n43["type"] := "IfStatement";
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "!==";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "Number";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1.3;
__n48["raw"] := "1.3";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["left"] := __n45;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.3;
__n49["raw"] := "1.3";
__n44["right"] := __n49;
__n43["test"] := __n44;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "$ERROR";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "+";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "#3: Number(1.3) === 1.3. Actual: ";
__n57["raw"] := "'#3: Number(1.3) === 1.3. Actual: '";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Number";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 1.3;
__n61["raw"] := "1.3";
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n56["right"] := __n58;
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n43["consequent"] := __n50;
__n43["alternate"] := null;
__n62 := {  };
__n62["type"] := "IfStatement";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "!==";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Number";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "UnaryExpression";
__n67["operator"] := "-";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 1.3;
__n68["raw"] := "1.3";
__n67["argument"] := __n68;
__n67["prefix"] := true;
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["left"] := __n64;
__n69 := {  };
__n69["type"] := "UnaryExpression";
__n69["operator"] := "-";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 1.3;
__n70["raw"] := "1.3";
__n69["argument"] := __n70;
__n69["prefix"] := true;
__n63["right"] := __n69;
__n62["test"] := __n63;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "$ERROR";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "#4: Number(-1.3) === -1.3. Actual: ";
__n78["raw"] := "'#4: Number(-1.3) === -1.3. Actual: '";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "Number";
__n79["callee"] := __n80;
__n82 := {  };
__n82["type"] := "UnaryExpression";
__n82["operator"] := "-";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 1.3;
__n83["raw"] := "1.3";
__n82["argument"] := __n83;
__n82["prefix"] := true;
__n81 := [ __n82 ];
__n79["arguments"] := __n81;
__n77["right"] := __n79;
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n62["consequent"] := __n71;
__n62["alternate"] := null;
__n1 := [ __n2, __n21, __n43, __n62 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n84 := [  ];
__n0["variableDeclarations"] := __n84;
__n85 := [  ];
__n0["functionDeclarations"] := __n85;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}