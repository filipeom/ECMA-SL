function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Number";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "NewExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Number";
__n7["callee"] := __n8;
__n9 := [  ];
__n7["arguments"] := __n9;
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n3["right"] := __n10;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: Number(new Number()) === 0. Actual: ";
__n18["raw"] := "'#1: Number(new Number()) === 0. Actual: '";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Number";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "NewExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Number";
__n22["callee"] := __n23;
__n24 := [  ];
__n22["arguments"] := __n24;
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n17["right"] := __n19;
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n2["alternate"] := null;
__n25 := {  };
__n25["type"] := "IfStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "!==";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Number";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "NewExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Number";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["left"] := __n27;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 0.;
__n34["raw"] := "0";
__n26["right"] := __n34;
__n25["test"] := __n26;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#2: Number(new Number(0)) === 0. Actual: ";
__n42["raw"] := "'#2: Number(new Number(0)) === 0. Actual: '";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Number";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "NewExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "Number";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 0.;
__n49["raw"] := "0";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n41["right"] := __n43;
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n25["consequent"] := __n35;
__n25["alternate"] := null;
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "isNaN";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "!==";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Number";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "NewExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Number";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "Number";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "NaN";
__n63["raw"] := "\"NaN\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["left"] := __n55;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := true;
__n64["raw"] := "true";
__n54["right"] := __n64;
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["test"] := __n51;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "$ERROR";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "+";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "#3: Number(new Number(Number.NaN)) === Not-a-Number. Actual: ";
__n72["raw"] := "'#3: Number(new Number(Number.NaN)) === Not-a-Number. Actual: '";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "Number";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "NewExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "Number";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "Number";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "NaN";
__n81["raw"] := "\"NaN\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75 := [ __n76 ];
__n73["arguments"] := __n75;
__n71["right"] := __n73;
__n70 := [ __n71 ];
__n68["arguments"] := __n70;
__n67["expression"] := __n68;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n50["consequent"] := __n65;
__n50["alternate"] := null;
__n82 := {  };
__n82["type"] := "IfStatement";
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "!==";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "Number";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "NewExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "Number";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 'null;
__n90["raw"] := "\"'null\"";
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["left"] := __n84;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 0.;
__n91["raw"] := "0";
__n83["right"] := __n91;
__n82["test"] := __n83;
__n92 := {  };
__n92["type"] := "BlockStatement";
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "$ERROR";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "+";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "#4.1: Number(new Number(null)) === 0. Actual: ";
__n99["raw"] := "'#4.1: Number(new Number(null)) === 0. Actual: '";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "Number";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "NewExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "Number";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 'null;
__n106["raw"] := "\"'null\"";
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n98["right"] := __n100;
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n94["expression"] := __n95;
__n93 := [ __n94 ];
__n92["body"] := __n93;
__n82["consequent"] := __n92;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "IfStatement";
__n110 := {  };
__n110["type"] := "BinaryExpression";
__n110["operator"] := "!==";
__n111 := {  };
__n111["type"] := "BinaryExpression";
__n111["operator"] := "/";
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 1.;
__n112["raw"] := "1";
__n111["left"] := __n112;
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "Number";
__n113["callee"] := __n114;
__n116 := {  };
__n116["type"] := "NewExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "Number";
__n116["callee"] := __n117;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 'null;
__n119["raw"] := "\"'null\"";
__n118 := [ __n119 ];
__n116["arguments"] := __n118;
__n115 := [ __n116 ];
__n113["arguments"] := __n115;
__n111["right"] := __n113;
__n110["left"] := __n111;
__n120 := {  };
__n120["type"] := "MemberExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "Number";
__n120["object"] := __n121;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "POSITIVE_INFINITY";
__n122["raw"] := "\"POSITIVE_INFINITY\"";
__n120["property"] := __n122;
__n120["computed"] := true;
__n110["right"] := __n120;
__n109["test"] := __n110;
__n123 := {  };
__n123["type"] := "BlockStatement";
__n125 := {  };
__n125["type"] := "ExpressionStatement";
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "$ERROR";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "#4.2: Number(new Number(null)) === +0. Actual: -0";
__n129["raw"] := "'#4.2: Number(new Number(null)) === +0. Actual: -0'";
__n128 := [ __n129 ];
__n126["arguments"] := __n128;
__n125["expression"] := __n126;
__n124 := [ __n125 ];
__n123["body"] := __n124;
__n109["consequent"] := __n123;
__n109["alternate"] := null;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n82["alternate"] := __n107;
__n130 := {  };
__n130["type"] := "IfStatement";
__n131 := {  };
__n131["type"] := "CallExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "isNaN";
__n131["callee"] := __n132;
__n134 := {  };
__n134["type"] := "BinaryExpression";
__n134["operator"] := "!==";
__n135 := {  };
__n135["type"] := "CallExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "Number";
__n135["callee"] := __n136;
__n138 := {  };
__n138["type"] := "NewExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "Number";
__n138["callee"] := __n139;
__n141 := {  };
__n141["type"] := "UnaryExpression";
__n141["operator"] := "void";
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := 0.;
__n142["raw"] := "0";
__n141["argument"] := __n142;
__n141["prefix"] := true;
__n140 := [ __n141 ];
__n138["arguments"] := __n140;
__n137 := [ __n138 ];
__n135["arguments"] := __n137;
__n134["left"] := __n135;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := true;
__n143["raw"] := "true";
__n134["right"] := __n143;
__n133 := [ __n134 ];
__n131["arguments"] := __n133;
__n130["test"] := __n131;
__n144 := {  };
__n144["type"] := "BlockStatement";
__n146 := {  };
__n146["type"] := "ExpressionStatement";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "$ERROR";
__n147["callee"] := __n148;
__n150 := {  };
__n150["type"] := "BinaryExpression";
__n150["operator"] := "+";
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "#5: Number(new Number(void 0)) === Not-a-Number. Actual: ";
__n151["raw"] := "'#5: Number(new Number(void 0)) === Not-a-Number. Actual: '";
__n150["left"] := __n151;
__n152 := {  };
__n152["type"] := "CallExpression";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "Number";
__n152["callee"] := __n153;
__n155 := {  };
__n155["type"] := "NewExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "Number";
__n155["callee"] := __n156;
__n158 := {  };
__n158["type"] := "UnaryExpression";
__n158["operator"] := "void";
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := 0.;
__n159["raw"] := "0";
__n158["argument"] := __n159;
__n158["prefix"] := true;
__n157 := [ __n158 ];
__n155["arguments"] := __n157;
__n154 := [ __n155 ];
__n152["arguments"] := __n154;
__n150["right"] := __n152;
__n149 := [ __n150 ];
__n147["arguments"] := __n149;
__n146["expression"] := __n147;
__n145 := [ __n146 ];
__n144["body"] := __n145;
__n130["consequent"] := __n144;
__n130["alternate"] := null;
__n160 := {  };
__n160["type"] := "IfStatement";
__n161 := {  };
__n161["type"] := "BinaryExpression";
__n161["operator"] := "!==";
__n162 := {  };
__n162["type"] := "CallExpression";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "Number";
__n162["callee"] := __n163;
__n165 := {  };
__n165["type"] := "NewExpression";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "Number";
__n165["callee"] := __n166;
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := true;
__n168["raw"] := "true";
__n167 := [ __n168 ];
__n165["arguments"] := __n167;
__n164 := [ __n165 ];
__n162["arguments"] := __n164;
__n161["left"] := __n162;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := 1.;
__n169["raw"] := "1";
__n161["right"] := __n169;
__n160["test"] := __n161;
__n170 := {  };
__n170["type"] := "BlockStatement";
__n172 := {  };
__n172["type"] := "ExpressionStatement";
__n173 := {  };
__n173["type"] := "CallExpression";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "$ERROR";
__n173["callee"] := __n174;
__n176 := {  };
__n176["type"] := "BinaryExpression";
__n176["operator"] := "+";
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "#6: Number(new Number(true)) === 1. Actual: ";
__n177["raw"] := "'#6: Number(new Number(true)) === 1. Actual: '";
__n176["left"] := __n177;
__n178 := {  };
__n178["type"] := "CallExpression";
__n179 := {  };
__n179["type"] := "Identifier";
__n179["name"] := "Number";
__n178["callee"] := __n179;
__n181 := {  };
__n181["type"] := "NewExpression";
__n182 := {  };
__n182["type"] := "Identifier";
__n182["name"] := "Number";
__n181["callee"] := __n182;
__n184 := {  };
__n184["type"] := "Literal";
__n184["value"] := true;
__n184["raw"] := "true";
__n183 := [ __n184 ];
__n181["arguments"] := __n183;
__n180 := [ __n181 ];
__n178["arguments"] := __n180;
__n176["right"] := __n178;
__n175 := [ __n176 ];
__n173["arguments"] := __n175;
__n172["expression"] := __n173;
__n171 := [ __n172 ];
__n170["body"] := __n171;
__n160["consequent"] := __n170;
__n160["alternate"] := null;
__n185 := {  };
__n185["type"] := "IfStatement";
__n186 := {  };
__n186["type"] := "BinaryExpression";
__n186["operator"] := "!==";
__n187 := {  };
__n187["type"] := "CallExpression";
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "Number";
__n187["callee"] := __n188;
__n190 := {  };
__n190["type"] := "NewExpression";
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "Number";
__n190["callee"] := __n191;
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := false;
__n193["raw"] := "false";
__n192 := [ __n193 ];
__n190["arguments"] := __n192;
__n189 := [ __n190 ];
__n187["arguments"] := __n189;
__n186["left"] := __n187;
__n194 := {  };
__n194["type"] := "UnaryExpression";
__n194["operator"] := "+";
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := 0.;
__n195["raw"] := "0";
__n194["argument"] := __n195;
__n194["prefix"] := true;
__n186["right"] := __n194;
__n185["test"] := __n186;
__n196 := {  };
__n196["type"] := "BlockStatement";
__n198 := {  };
__n198["type"] := "ExpressionStatement";
__n199 := {  };
__n199["type"] := "CallExpression";
__n200 := {  };
__n200["type"] := "Identifier";
__n200["name"] := "$ERROR";
__n199["callee"] := __n200;
__n202 := {  };
__n202["type"] := "BinaryExpression";
__n202["operator"] := "+";
__n203 := {  };
__n203["type"] := "Literal";
__n203["value"] := "#7.1: Number(new Number(false)) === 0. Actual: ";
__n203["raw"] := "'#7.1: Number(new Number(false)) === 0. Actual: '";
__n202["left"] := __n203;
__n204 := {  };
__n204["type"] := "CallExpression";
__n205 := {  };
__n205["type"] := "Identifier";
__n205["name"] := "Number";
__n204["callee"] := __n205;
__n207 := {  };
__n207["type"] := "NewExpression";
__n208 := {  };
__n208["type"] := "Identifier";
__n208["name"] := "Number";
__n207["callee"] := __n208;
__n210 := {  };
__n210["type"] := "Literal";
__n210["value"] := false;
__n210["raw"] := "false";
__n209 := [ __n210 ];
__n207["arguments"] := __n209;
__n206 := [ __n207 ];
__n204["arguments"] := __n206;
__n202["right"] := __n204;
__n201 := [ __n202 ];
__n199["arguments"] := __n201;
__n198["expression"] := __n199;
__n197 := [ __n198 ];
__n196["body"] := __n197;
__n185["consequent"] := __n196;
__n211 := {  };
__n211["type"] := "BlockStatement";
__n213 := {  };
__n213["type"] := "IfStatement";
__n214 := {  };
__n214["type"] := "BinaryExpression";
__n214["operator"] := "!==";
__n215 := {  };
__n215["type"] := "BinaryExpression";
__n215["operator"] := "/";
__n216 := {  };
__n216["type"] := "Literal";
__n216["value"] := 1.;
__n216["raw"] := "1";
__n215["left"] := __n216;
__n217 := {  };
__n217["type"] := "CallExpression";
__n218 := {  };
__n218["type"] := "Identifier";
__n218["name"] := "Number";
__n217["callee"] := __n218;
__n220 := {  };
__n220["type"] := "NewExpression";
__n221 := {  };
__n221["type"] := "Identifier";
__n221["name"] := "Number";
__n220["callee"] := __n221;
__n223 := {  };
__n223["type"] := "Literal";
__n223["value"] := false;
__n223["raw"] := "false";
__n222 := [ __n223 ];
__n220["arguments"] := __n222;
__n219 := [ __n220 ];
__n217["arguments"] := __n219;
__n215["right"] := __n217;
__n214["left"] := __n215;
__n224 := {  };
__n224["type"] := "MemberExpression";
__n225 := {  };
__n225["type"] := "Identifier";
__n225["name"] := "Number";
__n224["object"] := __n225;
__n226 := {  };
__n226["type"] := "Literal";
__n226["value"] := "POSITIVE_INFINITY";
__n226["raw"] := "\"POSITIVE_INFINITY\"";
__n224["property"] := __n226;
__n224["computed"] := true;
__n214["right"] := __n224;
__n213["test"] := __n214;
__n227 := {  };
__n227["type"] := "BlockStatement";
__n229 := {  };
__n229["type"] := "ExpressionStatement";
__n230 := {  };
__n230["type"] := "CallExpression";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "$ERROR";
__n230["callee"] := __n231;
__n233 := {  };
__n233["type"] := "Literal";
__n233["value"] := "#7.2: Number(new Number(false)) === +0. Actual: -0";
__n233["raw"] := "'#7.2: Number(new Number(false)) === +0. Actual: -0'";
__n232 := [ __n233 ];
__n230["arguments"] := __n232;
__n229["expression"] := __n230;
__n228 := [ __n229 ];
__n227["body"] := __n228;
__n213["consequent"] := __n227;
__n213["alternate"] := null;
__n212 := [ __n213 ];
__n211["body"] := __n212;
__n185["alternate"] := __n211;
__n234 := {  };
__n234["type"] := "IfStatement";
__n235 := {  };
__n235["type"] := "BinaryExpression";
__n235["operator"] := "!==";
__n236 := {  };
__n236["type"] := "CallExpression";
__n237 := {  };
__n237["type"] := "Identifier";
__n237["name"] := "Number";
__n236["callee"] := __n237;
__n239 := {  };
__n239["type"] := "NewExpression";
__n240 := {  };
__n240["type"] := "Identifier";
__n240["name"] := "Boolean";
__n239["callee"] := __n240;
__n242 := {  };
__n242["type"] := "Literal";
__n242["value"] := true;
__n242["raw"] := "true";
__n241 := [ __n242 ];
__n239["arguments"] := __n241;
__n238 := [ __n239 ];
__n236["arguments"] := __n238;
__n235["left"] := __n236;
__n243 := {  };
__n243["type"] := "Literal";
__n243["value"] := 1.;
__n243["raw"] := "1";
__n235["right"] := __n243;
__n234["test"] := __n235;
__n244 := {  };
__n244["type"] := "BlockStatement";
__n246 := {  };
__n246["type"] := "ExpressionStatement";
__n247 := {  };
__n247["type"] := "CallExpression";
__n248 := {  };
__n248["type"] := "Identifier";
__n248["name"] := "$ERROR";
__n247["callee"] := __n248;
__n250 := {  };
__n250["type"] := "BinaryExpression";
__n250["operator"] := "+";
__n251 := {  };
__n251["type"] := "Literal";
__n251["value"] := "#8: Number(new Boolean(true)) === 1. Actual: ";
__n251["raw"] := "'#8: Number(new Boolean(true)) === 1. Actual: '";
__n250["left"] := __n251;
__n252 := {  };
__n252["type"] := "CallExpression";
__n253 := {  };
__n253["type"] := "Identifier";
__n253["name"] := "Number";
__n252["callee"] := __n253;
__n255 := {  };
__n255["type"] := "NewExpression";
__n256 := {  };
__n256["type"] := "Identifier";
__n256["name"] := "Boolean";
__n255["callee"] := __n256;
__n258 := {  };
__n258["type"] := "Literal";
__n258["value"] := true;
__n258["raw"] := "true";
__n257 := [ __n258 ];
__n255["arguments"] := __n257;
__n254 := [ __n255 ];
__n252["arguments"] := __n254;
__n250["right"] := __n252;
__n249 := [ __n250 ];
__n247["arguments"] := __n249;
__n246["expression"] := __n247;
__n245 := [ __n246 ];
__n244["body"] := __n245;
__n234["consequent"] := __n244;
__n234["alternate"] := null;
__n259 := {  };
__n259["type"] := "IfStatement";
__n260 := {  };
__n260["type"] := "BinaryExpression";
__n260["operator"] := "!==";
__n261 := {  };
__n261["type"] := "CallExpression";
__n262 := {  };
__n262["type"] := "Identifier";
__n262["name"] := "Number";
__n261["callee"] := __n262;
__n264 := {  };
__n264["type"] := "NewExpression";
__n265 := {  };
__n265["type"] := "Identifier";
__n265["name"] := "Boolean";
__n264["callee"] := __n265;
__n267 := {  };
__n267["type"] := "Literal";
__n267["value"] := false;
__n267["raw"] := "false";
__n266 := [ __n267 ];
__n264["arguments"] := __n266;
__n263 := [ __n264 ];
__n261["arguments"] := __n263;
__n260["left"] := __n261;
__n268 := {  };
__n268["type"] := "UnaryExpression";
__n268["operator"] := "+";
__n269 := {  };
__n269["type"] := "Literal";
__n269["value"] := 0.;
__n269["raw"] := "0";
__n268["argument"] := __n269;
__n268["prefix"] := true;
__n260["right"] := __n268;
__n259["test"] := __n260;
__n270 := {  };
__n270["type"] := "BlockStatement";
__n272 := {  };
__n272["type"] := "ExpressionStatement";
__n273 := {  };
__n273["type"] := "CallExpression";
__n274 := {  };
__n274["type"] := "Identifier";
__n274["name"] := "$ERROR";
__n273["callee"] := __n274;
__n276 := {  };
__n276["type"] := "BinaryExpression";
__n276["operator"] := "+";
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := "#9.1: Number(new Boolean(false)) === 0. Actual: ";
__n277["raw"] := "'#9.1: Number(new Boolean(false)) === 0. Actual: '";
__n276["left"] := __n277;
__n278 := {  };
__n278["type"] := "CallExpression";
__n279 := {  };
__n279["type"] := "Identifier";
__n279["name"] := "Number";
__n278["callee"] := __n279;
__n281 := {  };
__n281["type"] := "NewExpression";
__n282 := {  };
__n282["type"] := "Identifier";
__n282["name"] := "Boolean";
__n281["callee"] := __n282;
__n284 := {  };
__n284["type"] := "Literal";
__n284["value"] := false;
__n284["raw"] := "false";
__n283 := [ __n284 ];
__n281["arguments"] := __n283;
__n280 := [ __n281 ];
__n278["arguments"] := __n280;
__n276["right"] := __n278;
__n275 := [ __n276 ];
__n273["arguments"] := __n275;
__n272["expression"] := __n273;
__n271 := [ __n272 ];
__n270["body"] := __n271;
__n259["consequent"] := __n270;
__n285 := {  };
__n285["type"] := "BlockStatement";
__n287 := {  };
__n287["type"] := "IfStatement";
__n288 := {  };
__n288["type"] := "BinaryExpression";
__n288["operator"] := "!==";
__n289 := {  };
__n289["type"] := "BinaryExpression";
__n289["operator"] := "/";
__n290 := {  };
__n290["type"] := "Literal";
__n290["value"] := 1.;
__n290["raw"] := "1";
__n289["left"] := __n290;
__n291 := {  };
__n291["type"] := "CallExpression";
__n292 := {  };
__n292["type"] := "Identifier";
__n292["name"] := "Number";
__n291["callee"] := __n292;
__n294 := {  };
__n294["type"] := "NewExpression";
__n295 := {  };
__n295["type"] := "Identifier";
__n295["name"] := "Boolean";
__n294["callee"] := __n295;
__n297 := {  };
__n297["type"] := "Literal";
__n297["value"] := false;
__n297["raw"] := "false";
__n296 := [ __n297 ];
__n294["arguments"] := __n296;
__n293 := [ __n294 ];
__n291["arguments"] := __n293;
__n289["right"] := __n291;
__n288["left"] := __n289;
__n298 := {  };
__n298["type"] := "MemberExpression";
__n299 := {  };
__n299["type"] := "Identifier";
__n299["name"] := "Number";
__n298["object"] := __n299;
__n300 := {  };
__n300["type"] := "Literal";
__n300["value"] := "POSITIVE_INFINITY";
__n300["raw"] := "\"POSITIVE_INFINITY\"";
__n298["property"] := __n300;
__n298["computed"] := true;
__n288["right"] := __n298;
__n287["test"] := __n288;
__n301 := {  };
__n301["type"] := "BlockStatement";
__n303 := {  };
__n303["type"] := "ExpressionStatement";
__n304 := {  };
__n304["type"] := "CallExpression";
__n305 := {  };
__n305["type"] := "Identifier";
__n305["name"] := "$ERROR";
__n304["callee"] := __n305;
__n307 := {  };
__n307["type"] := "Literal";
__n307["value"] := "#9.2: Number(new Boolean(false)) === +0. Actual: -0";
__n307["raw"] := "'#9.2: Number(new Boolean(false)) === +0. Actual: -0'";
__n306 := [ __n307 ];
__n304["arguments"] := __n306;
__n303["expression"] := __n304;
__n302 := [ __n303 ];
__n301["body"] := __n302;
__n287["consequent"] := __n301;
__n287["alternate"] := null;
__n286 := [ __n287 ];
__n285["body"] := __n286;
__n259["alternate"] := __n285;
__n308 := {  };
__n308["type"] := "IfStatement";
__n309 := {  };
__n309["type"] := "BinaryExpression";
__n309["operator"] := "!==";
__n310 := {  };
__n310["type"] := "CallExpression";
__n311 := {  };
__n311["type"] := "Identifier";
__n311["name"] := "isNaN";
__n310["callee"] := __n311;
__n313 := {  };
__n313["type"] := "CallExpression";
__n314 := {  };
__n314["type"] := "Identifier";
__n314["name"] := "Number";
__n313["callee"] := __n314;
__n316 := {  };
__n316["type"] := "NewExpression";
__n317 := {  };
__n317["type"] := "Identifier";
__n317["name"] := "Array";
__n316["callee"] := __n317;
__n319 := {  };
__n319["type"] := "Literal";
__n319["value"] := 2.;
__n319["raw"] := "2";
__n320 := {  };
__n320["type"] := "Literal";
__n320["value"] := 4.;
__n320["raw"] := "4";
__n321 := {  };
__n321["type"] := "Literal";
__n321["value"] := 8.;
__n321["raw"] := "8";
__n322 := {  };
__n322["type"] := "Literal";
__n322["value"] := 16.;
__n322["raw"] := "16";
__n323 := {  };
__n323["type"] := "Literal";
__n323["value"] := 32.;
__n323["raw"] := "32";
__n318 := [ __n319, __n320, __n321, __n322, __n323 ];
__n316["arguments"] := __n318;
__n315 := [ __n316 ];
__n313["arguments"] := __n315;
__n312 := [ __n313 ];
__n310["arguments"] := __n312;
__n309["left"] := __n310;
__n324 := {  };
__n324["type"] := "Literal";
__n324["value"] := true;
__n324["raw"] := "true";
__n309["right"] := __n324;
__n308["test"] := __n309;
__n325 := {  };
__n325["type"] := "BlockStatement";
__n327 := {  };
__n327["type"] := "ExpressionStatement";
__n328 := {  };
__n328["type"] := "CallExpression";
__n329 := {  };
__n329["type"] := "Identifier";
__n329["name"] := "$ERROR";
__n328["callee"] := __n329;
__n331 := {  };
__n331["type"] := "BinaryExpression";
__n331["operator"] := "+";
__n332 := {  };
__n332["type"] := "Literal";
__n332["value"] := "#10: Number(new Array(2,4,8,16,32)) === Not-a-Number. Actual: ";
__n332["raw"] := "'#10: Number(new Array(2,4,8,16,32)) === Not-a-Number. Actual: '";
__n331["left"] := __n332;
__n333 := {  };
__n333["type"] := "CallExpression";
__n334 := {  };
__n334["type"] := "Identifier";
__n334["name"] := "Number";
__n333["callee"] := __n334;
__n336 := {  };
__n336["type"] := "NewExpression";
__n337 := {  };
__n337["type"] := "Identifier";
__n337["name"] := "Array";
__n336["callee"] := __n337;
__n339 := {  };
__n339["type"] := "Literal";
__n339["value"] := 2.;
__n339["raw"] := "2";
__n340 := {  };
__n340["type"] := "Literal";
__n340["value"] := 4.;
__n340["raw"] := "4";
__n341 := {  };
__n341["type"] := "Literal";
__n341["value"] := 8.;
__n341["raw"] := "8";
__n342 := {  };
__n342["type"] := "Literal";
__n342["value"] := 16.;
__n342["raw"] := "16";
__n343 := {  };
__n343["type"] := "Literal";
__n343["value"] := 32.;
__n343["raw"] := "32";
__n338 := [ __n339, __n340, __n341, __n342, __n343 ];
__n336["arguments"] := __n338;
__n335 := [ __n336 ];
__n333["arguments"] := __n335;
__n331["right"] := __n333;
__n330 := [ __n331 ];
__n328["arguments"] := __n330;
__n327["expression"] := __n328;
__n326 := [ __n327 ];
__n325["body"] := __n326;
__n308["consequent"] := __n325;
__n308["alternate"] := null;
__n344 := {  };
__n344["type"] := "VariableDeclaration";
__n346 := {  };
__n346["type"] := "VariableDeclarator";
__n347 := {  };
__n347["type"] := "Identifier";
__n347["name"] := "myobj1";
__n346["id"] := __n347;
__n348 := {  };
__n348["type"] := "ObjectExpression";
__n350 := {  };
__n350["type"] := "Property";
__n351 := {  };
__n351["type"] := "Identifier";
__n351["name"] := "ToNumber";
__n350["key"] := __n351;
__n352 := {  };
__n352["type"] := "FunctionExpression";
__n352["id"] := null;
__n353 := [  ];
__n352["params"] := __n353;
__n354 := {  };
__n354["type"] := "BlockStatement";
__n356 := {  };
__n356["type"] := "ReturnStatement";
__n357 := {  };
__n357["type"] := "Literal";
__n357["value"] := 12345.;
__n357["raw"] := "12345";
__n356["argument"] := __n357;
__n355 := [ __n356 ];
__n354["body"] := __n355;
__n358 := [  ];
__n354["variableDeclarations"] := __n358;
__n359 := [  ];
__n354["functionDeclarations"] := __n359;
__n354["codeType"] := "function";
__n354["strict"] := false;
__n352["body"] := __n354;
__n352["generator"] := false;
__n352["expression"] := false;
__n352["async"] := false;
__n350["value"] := __n352;
__n350["computed"] := false;
__n350["kind"] := "init";
__n350["shorthand"] := false;
__n360 := {  };
__n360["type"] := "Property";
__n361 := {  };
__n361["type"] := "Identifier";
__n361["name"] := "toString";
__n360["key"] := __n361;
__n362 := {  };
__n362["type"] := "FunctionExpression";
__n362["id"] := null;
__n363 := [  ];
__n362["params"] := __n363;
__n364 := {  };
__n364["type"] := "BlockStatement";
__n366 := {  };
__n366["type"] := "ReturnStatement";
__n367 := {  };
__n367["type"] := "Literal";
__n367["value"] := "67890";
__n367["raw"] := "\"67890\"";
__n366["argument"] := __n367;
__n365 := [ __n366 ];
__n364["body"] := __n365;
__n368 := [  ];
__n364["variableDeclarations"] := __n368;
__n369 := [  ];
__n364["functionDeclarations"] := __n369;
__n364["codeType"] := "function";
__n364["strict"] := false;
__n362["body"] := __n364;
__n362["generator"] := false;
__n362["expression"] := false;
__n362["async"] := false;
__n360["value"] := __n362;
__n360["computed"] := false;
__n360["kind"] := "init";
__n360["shorthand"] := false;
__n370 := {  };
__n370["type"] := "Property";
__n371 := {  };
__n371["type"] := "Identifier";
__n371["name"] := "valueOf";
__n370["key"] := __n371;
__n372 := {  };
__n372["type"] := "FunctionExpression";
__n372["id"] := null;
__n373 := [  ];
__n372["params"] := __n373;
__n374 := {  };
__n374["type"] := "BlockStatement";
__n376 := {  };
__n376["type"] := "ReturnStatement";
__n377 := {  };
__n377["type"] := "Literal";
__n377["value"] := "[object MyObj]";
__n377["raw"] := "\"[object MyObj]\"";
__n376["argument"] := __n377;
__n375 := [ __n376 ];
__n374["body"] := __n375;
__n378 := [  ];
__n374["variableDeclarations"] := __n378;
__n379 := [  ];
__n374["functionDeclarations"] := __n379;
__n374["codeType"] := "function";
__n374["strict"] := false;
__n372["body"] := __n374;
__n372["generator"] := false;
__n372["expression"] := false;
__n372["async"] := false;
__n370["value"] := __n372;
__n370["computed"] := false;
__n370["kind"] := "init";
__n370["shorthand"] := false;
__n349 := [ __n350, __n360, __n370 ];
__n348["properties"] := __n349;
__n346["init"] := __n348;
__n345 := [ __n346 ];
__n344["declarations"] := __n345;
__n344["kind"] := "var";
__n380 := {  };
__n380["type"] := "IfStatement";
__n381 := {  };
__n381["type"] := "BinaryExpression";
__n381["operator"] := "!==";
__n382 := {  };
__n382["type"] := "CallExpression";
__n383 := {  };
__n383["type"] := "Identifier";
__n383["name"] := "isNaN";
__n382["callee"] := __n383;
__n385 := {  };
__n385["type"] := "CallExpression";
__n386 := {  };
__n386["type"] := "Identifier";
__n386["name"] := "Number";
__n385["callee"] := __n386;
__n388 := {  };
__n388["type"] := "Identifier";
__n388["name"] := "myobj1";
__n387 := [ __n388 ];
__n385["arguments"] := __n387;
__n384 := [ __n385 ];
__n382["arguments"] := __n384;
__n381["left"] := __n382;
__n389 := {  };
__n389["type"] := "Literal";
__n389["value"] := true;
__n389["raw"] := "true";
__n381["right"] := __n389;
__n380["test"] := __n381;
__n390 := {  };
__n390["type"] := "BlockStatement";
__n392 := {  };
__n392["type"] := "ExpressionStatement";
__n393 := {  };
__n393["type"] := "CallExpression";
__n394 := {  };
__n394["type"] := "Identifier";
__n394["name"] := "$ERROR";
__n393["callee"] := __n394;
__n396 := {  };
__n396["type"] := "BinaryExpression";
__n396["operator"] := "+";
__n397 := {  };
__n397["type"] := "Literal";
__n397["value"] := "#11: Number(myobj1) calls ToPrimitive with hint Number. Actual: ";
__n397["raw"] := "\"#11: Number(myobj1) calls ToPrimitive with hint Number. Actual: \"";
__n396["left"] := __n397;
__n398 := {  };
__n398["type"] := "CallExpression";
__n399 := {  };
__n399["type"] := "Identifier";
__n399["name"] := "Number";
__n398["callee"] := __n399;
__n401 := {  };
__n401["type"] := "Identifier";
__n401["name"] := "myobj1";
__n400 := [ __n401 ];
__n398["arguments"] := __n400;
__n396["right"] := __n398;
__n395 := [ __n396 ];
__n393["arguments"] := __n395;
__n392["expression"] := __n393;
__n391 := [ __n392 ];
__n390["body"] := __n391;
__n380["consequent"] := __n390;
__n380["alternate"] := null;
__n402 := {  };
__n402["type"] := "VariableDeclaration";
__n404 := {  };
__n404["type"] := "VariableDeclarator";
__n405 := {  };
__n405["type"] := "Identifier";
__n405["name"] := "myobj2";
__n404["id"] := __n405;
__n406 := {  };
__n406["type"] := "ObjectExpression";
__n408 := {  };
__n408["type"] := "Property";
__n409 := {  };
__n409["type"] := "Identifier";
__n409["name"] := "ToNumber";
__n408["key"] := __n409;
__n410 := {  };
__n410["type"] := "FunctionExpression";
__n410["id"] := null;
__n411 := [  ];
__n410["params"] := __n411;
__n412 := {  };
__n412["type"] := "BlockStatement";
__n414 := {  };
__n414["type"] := "ReturnStatement";
__n415 := {  };
__n415["type"] := "Literal";
__n415["value"] := 12345.;
__n415["raw"] := "12345";
__n414["argument"] := __n415;
__n413 := [ __n414 ];
__n412["body"] := __n413;
__n416 := [  ];
__n412["variableDeclarations"] := __n416;
__n417 := [  ];
__n412["functionDeclarations"] := __n417;
__n412["codeType"] := "function";
__n412["strict"] := false;
__n410["body"] := __n412;
__n410["generator"] := false;
__n410["expression"] := false;
__n410["async"] := false;
__n408["value"] := __n410;
__n408["computed"] := false;
__n408["kind"] := "init";
__n408["shorthand"] := false;
__n418 := {  };
__n418["type"] := "Property";
__n419 := {  };
__n419["type"] := "Identifier";
__n419["name"] := "toString";
__n418["key"] := __n419;
__n420 := {  };
__n420["type"] := "FunctionExpression";
__n420["id"] := null;
__n421 := [  ];
__n420["params"] := __n421;
__n422 := {  };
__n422["type"] := "BlockStatement";
__n424 := {  };
__n424["type"] := "ReturnStatement";
__n425 := {  };
__n425["type"] := "Literal";
__n425["value"] := "67890";
__n425["raw"] := "\"67890\"";
__n424["argument"] := __n425;
__n423 := [ __n424 ];
__n422["body"] := __n423;
__n426 := [  ];
__n422["variableDeclarations"] := __n426;
__n427 := [  ];
__n422["functionDeclarations"] := __n427;
__n422["codeType"] := "function";
__n422["strict"] := false;
__n420["body"] := __n422;
__n420["generator"] := false;
__n420["expression"] := false;
__n420["async"] := false;
__n418["value"] := __n420;
__n418["computed"] := false;
__n418["kind"] := "init";
__n418["shorthand"] := false;
__n428 := {  };
__n428["type"] := "Property";
__n429 := {  };
__n429["type"] := "Identifier";
__n429["name"] := "valueOf";
__n428["key"] := __n429;
__n430 := {  };
__n430["type"] := "FunctionExpression";
__n430["id"] := null;
__n431 := [  ];
__n430["params"] := __n431;
__n432 := {  };
__n432["type"] := "BlockStatement";
__n434 := {  };
__n434["type"] := "ReturnStatement";
__n435 := {  };
__n435["type"] := "Literal";
__n435["value"] := "9876543210";
__n435["raw"] := "\"9876543210\"";
__n434["argument"] := __n435;
__n433 := [ __n434 ];
__n432["body"] := __n433;
__n436 := [  ];
__n432["variableDeclarations"] := __n436;
__n437 := [  ];
__n432["functionDeclarations"] := __n437;
__n432["codeType"] := "function";
__n432["strict"] := false;
__n430["body"] := __n432;
__n430["generator"] := false;
__n430["expression"] := false;
__n430["async"] := false;
__n428["value"] := __n430;
__n428["computed"] := false;
__n428["kind"] := "init";
__n428["shorthand"] := false;
__n407 := [ __n408, __n418, __n428 ];
__n406["properties"] := __n407;
__n404["init"] := __n406;
__n403 := [ __n404 ];
__n402["declarations"] := __n403;
__n402["kind"] := "var";
__n438 := {  };
__n438["type"] := "IfStatement";
__n439 := {  };
__n439["type"] := "BinaryExpression";
__n439["operator"] := "!==";
__n440 := {  };
__n440["type"] := "CallExpression";
__n441 := {  };
__n441["type"] := "Identifier";
__n441["name"] := "Number";
__n440["callee"] := __n441;
__n443 := {  };
__n443["type"] := "Identifier";
__n443["name"] := "myobj2";
__n442 := [ __n443 ];
__n440["arguments"] := __n442;
__n439["left"] := __n440;
__n444 := {  };
__n444["type"] := "Literal";
__n444["value"] := 9876543210.;
__n444["raw"] := "9876543210";
__n439["right"] := __n444;
__n438["test"] := __n439;
__n445 := {  };
__n445["type"] := "BlockStatement";
__n447 := {  };
__n447["type"] := "ExpressionStatement";
__n448 := {  };
__n448["type"] := "CallExpression";
__n449 := {  };
__n449["type"] := "Identifier";
__n449["name"] := "$ERROR";
__n448["callee"] := __n449;
__n451 := {  };
__n451["type"] := "BinaryExpression";
__n451["operator"] := "+";
__n452 := {  };
__n452["type"] := "Literal";
__n452["value"] := "#12: Number(myobj2) calls ToPrimitive with hint Number. Exptected: 9876543210. Actual: ";
__n452["raw"] := "\"#12: Number(myobj2) calls ToPrimitive with hint Number. Exptected: 9876543210. Actual: \"";
__n451["left"] := __n452;
__n453 := {  };
__n453["type"] := "CallExpression";
__n454 := {  };
__n454["type"] := "Identifier";
__n454["name"] := "Number";
__n453["callee"] := __n454;
__n456 := {  };
__n456["type"] := "Identifier";
__n456["name"] := "myobj2";
__n455 := [ __n456 ];
__n453["arguments"] := __n455;
__n451["right"] := __n453;
__n450 := [ __n451 ];
__n448["arguments"] := __n450;
__n447["expression"] := __n448;
__n446 := [ __n447 ];
__n445["body"] := __n446;
__n438["consequent"] := __n445;
__n438["alternate"] := null;
__n457 := {  };
__n457["type"] := "VariableDeclaration";
__n459 := {  };
__n459["type"] := "VariableDeclarator";
__n460 := {  };
__n460["type"] := "Identifier";
__n460["name"] := "myobj3";
__n459["id"] := __n460;
__n461 := {  };
__n461["type"] := "ObjectExpression";
__n463 := {  };
__n463["type"] := "Property";
__n464 := {  };
__n464["type"] := "Identifier";
__n464["name"] := "ToNumber";
__n463["key"] := __n464;
__n465 := {  };
__n465["type"] := "FunctionExpression";
__n465["id"] := null;
__n466 := [  ];
__n465["params"] := __n466;
__n467 := {  };
__n467["type"] := "BlockStatement";
__n469 := {  };
__n469["type"] := "ReturnStatement";
__n470 := {  };
__n470["type"] := "Literal";
__n470["value"] := 12345.;
__n470["raw"] := "12345";
__n469["argument"] := __n470;
__n468 := [ __n469 ];
__n467["body"] := __n468;
__n471 := [  ];
__n467["variableDeclarations"] := __n471;
__n472 := [  ];
__n467["functionDeclarations"] := __n472;
__n467["codeType"] := "function";
__n467["strict"] := false;
__n465["body"] := __n467;
__n465["generator"] := false;
__n465["expression"] := false;
__n465["async"] := false;
__n463["value"] := __n465;
__n463["computed"] := false;
__n463["kind"] := "init";
__n463["shorthand"] := false;
__n473 := {  };
__n473["type"] := "Property";
__n474 := {  };
__n474["type"] := "Identifier";
__n474["name"] := "toString";
__n473["key"] := __n474;
__n475 := {  };
__n475["type"] := "FunctionExpression";
__n475["id"] := null;
__n476 := [  ];
__n475["params"] := __n476;
__n477 := {  };
__n477["type"] := "BlockStatement";
__n479 := {  };
__n479["type"] := "ReturnStatement";
__n480 := {  };
__n480["type"] := "Literal";
__n480["value"] := "[object MyObj]";
__n480["raw"] := "\"[object MyObj]\"";
__n479["argument"] := __n480;
__n478 := [ __n479 ];
__n477["body"] := __n478;
__n481 := [  ];
__n477["variableDeclarations"] := __n481;
__n482 := [  ];
__n477["functionDeclarations"] := __n482;
__n477["codeType"] := "function";
__n477["strict"] := false;
__n475["body"] := __n477;
__n475["generator"] := false;
__n475["expression"] := false;
__n475["async"] := false;
__n473["value"] := __n475;
__n473["computed"] := false;
__n473["kind"] := "init";
__n473["shorthand"] := false;
__n462 := [ __n463, __n473 ];
__n461["properties"] := __n462;
__n459["init"] := __n461;
__n458 := [ __n459 ];
__n457["declarations"] := __n458;
__n457["kind"] := "var";
__n483 := {  };
__n483["type"] := "IfStatement";
__n484 := {  };
__n484["type"] := "BinaryExpression";
__n484["operator"] := "!==";
__n485 := {  };
__n485["type"] := "CallExpression";
__n486 := {  };
__n486["type"] := "Identifier";
__n486["name"] := "isNaN";
__n485["callee"] := __n486;
__n488 := {  };
__n488["type"] := "CallExpression";
__n489 := {  };
__n489["type"] := "Identifier";
__n489["name"] := "Number";
__n488["callee"] := __n489;
__n491 := {  };
__n491["type"] := "Identifier";
__n491["name"] := "myobj3";
__n490 := [ __n491 ];
__n488["arguments"] := __n490;
__n487 := [ __n488 ];
__n485["arguments"] := __n487;
__n484["left"] := __n485;
__n492 := {  };
__n492["type"] := "Literal";
__n492["value"] := true;
__n492["raw"] := "true";
__n484["right"] := __n492;
__n483["test"] := __n484;
__n493 := {  };
__n493["type"] := "BlockStatement";
__n495 := {  };
__n495["type"] := "ExpressionStatement";
__n496 := {  };
__n496["type"] := "CallExpression";
__n497 := {  };
__n497["type"] := "Identifier";
__n497["name"] := "$ERROR";
__n496["callee"] := __n497;
__n499 := {  };
__n499["type"] := "BinaryExpression";
__n499["operator"] := "+";
__n500 := {  };
__n500["type"] := "Literal";
__n500["value"] := "#13: Number(myobj3) calls ToPrimitive with hint Number. Exptected: Not-a-Number.  Actual: ";
__n500["raw"] := "\"#13: Number(myobj3) calls ToPrimitive with hint Number. Exptected: Not-a-Number.  Actual: \"";
__n499["left"] := __n500;
__n501 := {  };
__n501["type"] := "CallExpression";
__n502 := {  };
__n502["type"] := "Identifier";
__n502["name"] := "Number";
__n501["callee"] := __n502;
__n504 := {  };
__n504["type"] := "Identifier";
__n504["name"] := "myobj3";
__n503 := [ __n504 ];
__n501["arguments"] := __n503;
__n499["right"] := __n501;
__n498 := [ __n499 ];
__n496["arguments"] := __n498;
__n495["expression"] := __n496;
__n494 := [ __n495 ];
__n493["body"] := __n494;
__n483["consequent"] := __n493;
__n483["alternate"] := null;
__n505 := {  };
__n505["type"] := "VariableDeclaration";
__n507 := {  };
__n507["type"] := "VariableDeclarator";
__n508 := {  };
__n508["type"] := "Identifier";
__n508["name"] := "myobj4";
__n507["id"] := __n508;
__n509 := {  };
__n509["type"] := "ObjectExpression";
__n511 := {  };
__n511["type"] := "Property";
__n512 := {  };
__n512["type"] := "Identifier";
__n512["name"] := "ToNumber";
__n511["key"] := __n512;
__n513 := {  };
__n513["type"] := "FunctionExpression";
__n513["id"] := null;
__n514 := [  ];
__n513["params"] := __n514;
__n515 := {  };
__n515["type"] := "BlockStatement";
__n517 := {  };
__n517["type"] := "ReturnStatement";
__n518 := {  };
__n518["type"] := "Literal";
__n518["value"] := 12345.;
__n518["raw"] := "12345";
__n517["argument"] := __n518;
__n516 := [ __n517 ];
__n515["body"] := __n516;
__n519 := [  ];
__n515["variableDeclarations"] := __n519;
__n520 := [  ];
__n515["functionDeclarations"] := __n520;
__n515["codeType"] := "function";
__n515["strict"] := false;
__n513["body"] := __n515;
__n513["generator"] := false;
__n513["expression"] := false;
__n513["async"] := false;
__n511["value"] := __n513;
__n511["computed"] := false;
__n511["kind"] := "init";
__n511["shorthand"] := false;
__n521 := {  };
__n521["type"] := "Property";
__n522 := {  };
__n522["type"] := "Identifier";
__n522["name"] := "toString";
__n521["key"] := __n522;
__n523 := {  };
__n523["type"] := "FunctionExpression";
__n523["id"] := null;
__n524 := [  ];
__n523["params"] := __n524;
__n525 := {  };
__n525["type"] := "BlockStatement";
__n527 := {  };
__n527["type"] := "ReturnStatement";
__n528 := {  };
__n528["type"] := "Literal";
__n528["value"] := "67890";
__n528["raw"] := "\"67890\"";
__n527["argument"] := __n528;
__n526 := [ __n527 ];
__n525["body"] := __n526;
__n529 := [  ];
__n525["variableDeclarations"] := __n529;
__n530 := [  ];
__n525["functionDeclarations"] := __n530;
__n525["codeType"] := "function";
__n525["strict"] := false;
__n523["body"] := __n525;
__n523["generator"] := false;
__n523["expression"] := false;
__n523["async"] := false;
__n521["value"] := __n523;
__n521["computed"] := false;
__n521["kind"] := "init";
__n521["shorthand"] := false;
__n510 := [ __n511, __n521 ];
__n509["properties"] := __n510;
__n507["init"] := __n509;
__n506 := [ __n507 ];
__n505["declarations"] := __n506;
__n505["kind"] := "var";
__n531 := {  };
__n531["type"] := "IfStatement";
__n532 := {  };
__n532["type"] := "BinaryExpression";
__n532["operator"] := "!==";
__n533 := {  };
__n533["type"] := "CallExpression";
__n534 := {  };
__n534["type"] := "Identifier";
__n534["name"] := "Number";
__n533["callee"] := __n534;
__n536 := {  };
__n536["type"] := "Identifier";
__n536["name"] := "myobj4";
__n535 := [ __n536 ];
__n533["arguments"] := __n535;
__n532["left"] := __n533;
__n537 := {  };
__n537["type"] := "Literal";
__n537["value"] := 67890.;
__n537["raw"] := "67890";
__n532["right"] := __n537;
__n531["test"] := __n532;
__n538 := {  };
__n538["type"] := "BlockStatement";
__n540 := {  };
__n540["type"] := "ExpressionStatement";
__n541 := {  };
__n541["type"] := "CallExpression";
__n542 := {  };
__n542["type"] := "Identifier";
__n542["name"] := "$ERROR";
__n541["callee"] := __n542;
__n544 := {  };
__n544["type"] := "BinaryExpression";
__n544["operator"] := "+";
__n545 := {  };
__n545["type"] := "Literal";
__n545["value"] := "#14: Number(myobj4) calls ToPrimitive with hint Number. Exptected: 67890.  Actual: ";
__n545["raw"] := "\"#14: Number(myobj4) calls ToPrimitive with hint Number. Exptected: 67890.  Actual: \"";
__n544["left"] := __n545;
__n546 := {  };
__n546["type"] := "CallExpression";
__n547 := {  };
__n547["type"] := "Identifier";
__n547["name"] := "Number";
__n546["callee"] := __n547;
__n549 := {  };
__n549["type"] := "Identifier";
__n549["name"] := "myobj4";
__n548 := [ __n549 ];
__n546["arguments"] := __n548;
__n544["right"] := __n546;
__n543 := [ __n544 ];
__n541["arguments"] := __n543;
__n540["expression"] := __n541;
__n539 := [ __n540 ];
__n538["body"] := __n539;
__n531["consequent"] := __n538;
__n531["alternate"] := null;
__n550 := {  };
__n550["type"] := "VariableDeclaration";
__n552 := {  };
__n552["type"] := "VariableDeclarator";
__n553 := {  };
__n553["type"] := "Identifier";
__n553["name"] := "myobj5";
__n552["id"] := __n553;
__n554 := {  };
__n554["type"] := "ObjectExpression";
__n556 := {  };
__n556["type"] := "Property";
__n557 := {  };
__n557["type"] := "Identifier";
__n557["name"] := "ToNumber";
__n556["key"] := __n557;
__n558 := {  };
__n558["type"] := "FunctionExpression";
__n558["id"] := null;
__n559 := [  ];
__n558["params"] := __n559;
__n560 := {  };
__n560["type"] := "BlockStatement";
__n562 := {  };
__n562["type"] := "ReturnStatement";
__n563 := {  };
__n563["type"] := "Literal";
__n563["value"] := 12345.;
__n563["raw"] := "12345";
__n562["argument"] := __n563;
__n561 := [ __n562 ];
__n560["body"] := __n561;
__n564 := [  ];
__n560["variableDeclarations"] := __n564;
__n565 := [  ];
__n560["functionDeclarations"] := __n565;
__n560["codeType"] := "function";
__n560["strict"] := false;
__n558["body"] := __n560;
__n558["generator"] := false;
__n558["expression"] := false;
__n558["async"] := false;
__n556["value"] := __n558;
__n556["computed"] := false;
__n556["kind"] := "init";
__n556["shorthand"] := false;
__n555 := [ __n556 ];
__n554["properties"] := __n555;
__n552["init"] := __n554;
__n551 := [ __n552 ];
__n550["declarations"] := __n551;
__n550["kind"] := "var";
__n566 := {  };
__n566["type"] := "IfStatement";
__n567 := {  };
__n567["type"] := "BinaryExpression";
__n567["operator"] := "!==";
__n568 := {  };
__n568["type"] := "CallExpression";
__n569 := {  };
__n569["type"] := "Identifier";
__n569["name"] := "isNaN";
__n568["callee"] := __n569;
__n571 := {  };
__n571["type"] := "CallExpression";
__n572 := {  };
__n572["type"] := "Identifier";
__n572["name"] := "Number";
__n571["callee"] := __n572;
__n574 := {  };
__n574["type"] := "Identifier";
__n574["name"] := "myobj5";
__n573 := [ __n574 ];
__n571["arguments"] := __n573;
__n570 := [ __n571 ];
__n568["arguments"] := __n570;
__n567["left"] := __n568;
__n575 := {  };
__n575["type"] := "Literal";
__n575["value"] := true;
__n575["raw"] := "true";
__n567["right"] := __n575;
__n566["test"] := __n567;
__n576 := {  };
__n576["type"] := "BlockStatement";
__n578 := {  };
__n578["type"] := "ExpressionStatement";
__n579 := {  };
__n579["type"] := "CallExpression";
__n580 := {  };
__n580["type"] := "Identifier";
__n580["name"] := "$ERROR";
__n579["callee"] := __n580;
__n582 := {  };
__n582["type"] := "BinaryExpression";
__n582["operator"] := "+";
__n583 := {  };
__n583["type"] := "Literal";
__n583["value"] := "#15: Number(myobj5) calls ToPrimitive with hint Number. Exptected: Not-a-Number.  Actual: ";
__n583["raw"] := "\"#15: Number(myobj5) calls ToPrimitive with hint Number. Exptected: Not-a-Number.  Actual: \"";
__n582["left"] := __n583;
__n584 := {  };
__n584["type"] := "CallExpression";
__n585 := {  };
__n585["type"] := "Identifier";
__n585["name"] := "Number";
__n584["callee"] := __n585;
__n587 := {  };
__n587["type"] := "Identifier";
__n587["name"] := "myobj5";
__n586 := [ __n587 ];
__n584["arguments"] := __n586;
__n582["right"] := __n584;
__n581 := [ __n582 ];
__n579["arguments"] := __n581;
__n578["expression"] := __n579;
__n577 := [ __n578 ];
__n576["body"] := __n577;
__n566["consequent"] := __n576;
__n566["alternate"] := null;
__n1 := [ __n2, __n25, __n50, __n82, __n130, __n160, __n185, __n234, __n259, __n308, __n344, __n380, __n402, __n438, __n457, __n483, __n505, __n531, __n550, __n566 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n588 := [ "myobj1", "myobj2", "myobj3", "myobj4", "myobj5" ];
__n0["variableDeclarations"] := __n588;
__n589 := [  ];
__n0["functionDeclarations"] := __n589;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}