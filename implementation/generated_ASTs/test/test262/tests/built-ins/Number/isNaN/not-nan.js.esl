function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Number";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "isNaN";
__n11["raw"] := "\"isNaN\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 0.;
__n13["raw"] := "0";
__n12 := [ __n13 ];
__n8["arguments"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := false;
__n14["raw"] := "false";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "0";
__n15["raw"] := "\"0\"";
__n7 := [ __n8, __n14, __n15 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "assert";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "sameValue";
__n20["raw"] := "\"sameValue\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Number";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "isNaN";
__n25["raw"] := "\"isNaN\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n27 := {  };
__n27["type"] := "UnaryExpression";
__n27["operator"] := "-";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 0.;
__n28["raw"] := "0";
__n27["argument"] := __n28;
__n27["prefix"] := true;
__n26 := [ __n27 ];
__n22["arguments"] := __n26;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := false;
__n29["raw"] := "false";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "-0";
__n30["raw"] := "\"-0\"";
__n21 := [ __n22, __n29, __n30 ];
__n17["arguments"] := __n21;
__n16["expression"] := __n17;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "assert";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "sameValue";
__n35["raw"] := "\"sameValue\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "Number";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "isNaN";
__n40["raw"] := "\"isNaN\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 1.;
__n42["raw"] := "1";
__n41 := [ __n42 ];
__n37["arguments"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := false;
__n43["raw"] := "false";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "1";
__n44["raw"] := "\"1\"";
__n36 := [ __n37, __n43, __n44 ];
__n32["arguments"] := __n36;
__n31["expression"] := __n32;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "assert";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "sameValue";
__n49["raw"] := "\"sameValue\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "Number";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "isNaN";
__n54["raw"] := "\"isNaN\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n56 := {  };
__n56["type"] := "UnaryExpression";
__n56["operator"] := "-";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 1.;
__n57["raw"] := "1";
__n56["argument"] := __n57;
__n56["prefix"] := true;
__n55 := [ __n56 ];
__n51["arguments"] := __n55;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := false;
__n58["raw"] := "false";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "-1";
__n59["raw"] := "\"-1\"";
__n50 := [ __n51, __n58, __n59 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "assert";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "sameValue";
__n64["raw"] := "\"sameValue\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "Number";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "isNaN";
__n69["raw"] := "\"isNaN\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["callee"] := __n67;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 1.1;
__n71["raw"] := "1.1";
__n70 := [ __n71 ];
__n66["arguments"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := false;
__n72["raw"] := "false";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "1.1";
__n73["raw"] := "\"1.1\"";
__n65 := [ __n66, __n72, __n73 ];
__n61["arguments"] := __n65;
__n60["expression"] := __n61;
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "assert";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "sameValue";
__n78["raw"] := "\"sameValue\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["callee"] := __n76;
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "Number";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "isNaN";
__n83["raw"] := "\"isNaN\"";
__n81["property"] := __n83;
__n81["computed"] := true;
__n80["callee"] := __n81;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := 10000000000.;
__n85["raw"] := "1e10";
__n84 := [ __n85 ];
__n80["arguments"] := __n84;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := false;
__n86["raw"] := "false";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "1e10";
__n87["raw"] := "\"1e10\"";
__n79 := [ __n80, __n86, __n87 ];
__n75["arguments"] := __n79;
__n74["expression"] := __n75;
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "assert";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "sameValue";
__n92["raw"] := "\"sameValue\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n89["callee"] := __n90;
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "Number";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "isNaN";
__n97["raw"] := "\"isNaN\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["callee"] := __n95;
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "Infinity";
__n98 := [ __n99 ];
__n94["arguments"] := __n98;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := false;
__n100["raw"] := "false";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "Infinity";
__n101["raw"] := "\"Infinity\"";
__n93 := [ __n94, __n100, __n101 ];
__n89["arguments"] := __n93;
__n88["expression"] := __n89;
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "assert";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "sameValue";
__n106["raw"] := "\"sameValue\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n103["callee"] := __n104;
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "Number";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "isNaN";
__n111["raw"] := "\"isNaN\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n108["callee"] := __n109;
__n113 := {  };
__n113["type"] := "UnaryExpression";
__n113["operator"] := "-";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "Infinity";
__n113["argument"] := __n114;
__n113["prefix"] := true;
__n112 := [ __n113 ];
__n108["arguments"] := __n112;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := false;
__n115["raw"] := "false";
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "-Infinity";
__n116["raw"] := "\"-Infinity\"";
__n107 := [ __n108, __n115, __n116 ];
__n103["arguments"] := __n107;
__n102["expression"] := __n103;
__n1 := [ __n2, __n16, __n31, __n45, __n60, __n74, __n88, __n102 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n117 := [  ];
__n0["variableDeclarations"] := __n117;
__n118 := [  ];
__n0["functionDeclarations"] := __n118;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}