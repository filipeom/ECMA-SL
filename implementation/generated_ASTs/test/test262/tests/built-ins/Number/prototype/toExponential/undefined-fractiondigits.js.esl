function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 123.456;
__n10["raw"] := "123.456";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "toExponential";
__n11["raw"] := "\"toExponential\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "undefined";
__n12 := [ __n13 ];
__n8["arguments"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "1.23456e+2";
__n14["raw"] := "\"1.23456e+2\"";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "undefined";
__n15["raw"] := "\"undefined\"";
__n7 := [ __n8, __n14, __n15 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "assert";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "sameValue";
__n20["raw"] := "\"sameValue\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 123.456;
__n24["raw"] := "123.456";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "toExponential";
__n25["raw"] := "\"toExponential\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n26 := [  ];
__n22["arguments"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "1.23456e+2";
__n27["raw"] := "\"1.23456e+2\"";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "no arg";
__n28["raw"] := "\"no arg\"";
__n21 := [ __n22, __n27, __n28 ];
__n17["arguments"] := __n21;
__n16["expression"] := __n17;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "assert";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "sameValue";
__n33["raw"] := "\"sameValue\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 123.456;
__n37["raw"] := "123.456";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "toExponential";
__n38["raw"] := "\"toExponential\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 0.;
__n40["raw"] := "0";
__n39 := [ __n40 ];
__n35["arguments"] := __n39;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "1e+2";
__n41["raw"] := "\"1e+2\"";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "0";
__n42["raw"] := "\"0\"";
__n34 := [ __n35, __n41, __n42 ];
__n30["arguments"] := __n34;
__n29["expression"] := __n30;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "assert";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "sameValue";
__n47["raw"] := "\"sameValue\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["callee"] := __n45;
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 1.1e-32;
__n51["raw"] := "1.1e-32";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "toExponential";
__n52["raw"] := "\"toExponential\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "undefined";
__n53 := [ __n54 ];
__n49["arguments"] := __n53;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "1.1e-32";
__n55["raw"] := "\"1.1e-32\"";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "undefined";
__n56["raw"] := "\"undefined\"";
__n48 := [ __n49, __n55, __n56 ];
__n44["arguments"] := __n48;
__n43["expression"] := __n44;
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "assert";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "sameValue";
__n61["raw"] := "\"sameValue\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n58["callee"] := __n59;
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 1.1e-32;
__n65["raw"] := "1.1e-32";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "toExponential";
__n66["raw"] := "\"toExponential\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n67 := [  ];
__n63["arguments"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "1.1e-32";
__n68["raw"] := "\"1.1e-32\"";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "no arg";
__n69["raw"] := "\"no arg\"";
__n62 := [ __n63, __n68, __n69 ];
__n58["arguments"] := __n62;
__n57["expression"] := __n58;
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "assert";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "sameValue";
__n74["raw"] := "\"sameValue\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 1.1e-32;
__n78["raw"] := "1.1e-32";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "toExponential";
__n79["raw"] := "\"toExponential\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n76["callee"] := __n77;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 0.;
__n81["raw"] := "0";
__n80 := [ __n81 ];
__n76["arguments"] := __n80;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "1e-32";
__n82["raw"] := "\"1e-32\"";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "0";
__n83["raw"] := "\"0\"";
__n75 := [ __n76, __n82, __n83 ];
__n71["arguments"] := __n75;
__n70["expression"] := __n71;
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "assert";
__n86["object"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "sameValue";
__n88["raw"] := "\"sameValue\"";
__n86["property"] := __n88;
__n86["computed"] := true;
__n85["callee"] := __n86;
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 100.;
__n92["raw"] := "100";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "toExponential";
__n93["raw"] := "\"toExponential\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n90["callee"] := __n91;
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "undefined";
__n94 := [ __n95 ];
__n90["arguments"] := __n94;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "1e+2";
__n96["raw"] := "\"1e+2\"";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "undefined";
__n97["raw"] := "\"undefined\"";
__n89 := [ __n90, __n96, __n97 ];
__n85["arguments"] := __n89;
__n84["expression"] := __n85;
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "assert";
__n100["object"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "sameValue";
__n102["raw"] := "\"sameValue\"";
__n100["property"] := __n102;
__n100["computed"] := true;
__n99["callee"] := __n100;
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "MemberExpression";
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 100.;
__n106["raw"] := "100";
__n105["object"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "toExponential";
__n107["raw"] := "\"toExponential\"";
__n105["property"] := __n107;
__n105["computed"] := true;
__n104["callee"] := __n105;
__n108 := [  ];
__n104["arguments"] := __n108;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "1e+2";
__n109["raw"] := "\"1e+2\"";
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "no arg";
__n110["raw"] := "\"no arg\"";
__n103 := [ __n104, __n109, __n110 ];
__n99["arguments"] := __n103;
__n98["expression"] := __n99;
__n111 := {  };
__n111["type"] := "ExpressionStatement";
__n112 := {  };
__n112["type"] := "CallExpression";
__n113 := {  };
__n113["type"] := "MemberExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "assert";
__n113["object"] := __n114;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "sameValue";
__n115["raw"] := "\"sameValue\"";
__n113["property"] := __n115;
__n113["computed"] := true;
__n112["callee"] := __n113;
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "MemberExpression";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 100.;
__n119["raw"] := "100";
__n118["object"] := __n119;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "toExponential";
__n120["raw"] := "\"toExponential\"";
__n118["property"] := __n120;
__n118["computed"] := true;
__n117["callee"] := __n118;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := 0.;
__n122["raw"] := "0";
__n121 := [ __n122 ];
__n117["arguments"] := __n121;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "1e+2";
__n123["raw"] := "\"1e+2\"";
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "0";
__n124["raw"] := "\"0\"";
__n116 := [ __n117, __n123, __n124 ];
__n112["arguments"] := __n116;
__n111["expression"] := __n112;
__n1 := [ __n2, __n16, __n29, __n43, __n57, __n70, __n84, __n98, __n111 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n125 := [  ];
__n0["variableDeclarations"] := __n125;
__n126 := [  ];
__n0["functionDeclarations"] := __n126;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}