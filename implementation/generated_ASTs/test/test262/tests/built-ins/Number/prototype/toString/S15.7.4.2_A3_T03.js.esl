function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "VariableDeclaration";
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "n";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Number";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "prototype";
__n13["raw"] := "\"prototype\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["object"] := __n11;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "toString";
__n14["raw"] := "\"toString\"";
__n10["property"] := __n14;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 'null;
__n16["raw"] := "\"'null\"";
__n15 := [ __n16 ];
__n9["arguments"] := __n15;
__n7["init"] := __n9;
__n6 := [ __n7 ];
__n5["declarations"] := __n6;
__n5["kind"] := "var";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "$ERROR";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "#1: Number.prototype.toString(null) should throw an Error";
__n21["raw"] := "'#1: Number.prototype.toString(null) should throw an Error'";
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n17["expression"] := __n18;
__n4 := [ __n5, __n17 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n22 := {  };
__n22["type"] := "CatchClause";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "e";
__n22["param"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n25 := [  ];
__n24["body"] := __n25;
__n22["body"] := __n24;
__n2["handler"] := __n22;
__n2["finalizer"] := null;
__n26 := {  };
__n26["type"] := "TryStatement";
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "n";
__n31["id"] := __n32;
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "NewExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Number";
__n35["callee"] := __n36;
__n37 := [  ];
__n35["arguments"] := __n37;
__n34["object"] := __n35;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "toString";
__n38["raw"] := "\"toString\"";
__n34["property"] := __n38;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 'null;
__n40["raw"] := "\"'null\"";
__n39 := [ __n40 ];
__n33["arguments"] := __n39;
__n31["init"] := __n33;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "$ERROR";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "#2: (new Number()).toString(null) should throw an Error";
__n45["raw"] := "'#2: (new Number()).toString(null) should throw an Error'";
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n41["expression"] := __n42;
__n28 := [ __n29, __n41 ];
__n27["body"] := __n28;
__n26["block"] := __n27;
__n46 := {  };
__n46["type"] := "CatchClause";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "e";
__n46["param"] := __n47;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n49 := [  ];
__n48["body"] := __n49;
__n46["body"] := __n48;
__n26["handler"] := __n46;
__n26["finalizer"] := null;
__n50 := {  };
__n50["type"] := "TryStatement";
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "VariableDeclaration";
__n55 := {  };
__n55["type"] := "VariableDeclarator";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "n";
__n55["id"] := __n56;
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "NewExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Number";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 0.;
__n62["raw"] := "0";
__n61 := [ __n62 ];
__n59["arguments"] := __n61;
__n58["object"] := __n59;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "toString";
__n63["raw"] := "\"toString\"";
__n58["property"] := __n63;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 'null;
__n65["raw"] := "\"'null\"";
__n64 := [ __n65 ];
__n57["arguments"] := __n64;
__n55["init"] := __n57;
__n54 := [ __n55 ];
__n53["declarations"] := __n54;
__n53["kind"] := "var";
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$ERROR";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "#3: (new Number(0)).toString(null) should throw an Error";
__n70["raw"] := "'#3: (new Number(0)).toString(null) should throw an Error'";
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n52 := [ __n53, __n66 ];
__n51["body"] := __n52;
__n50["block"] := __n51;
__n71 := {  };
__n71["type"] := "CatchClause";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "e";
__n71["param"] := __n72;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n74 := [  ];
__n73["body"] := __n74;
__n71["body"] := __n73;
__n50["handler"] := __n71;
__n50["finalizer"] := null;
__n75 := {  };
__n75["type"] := "TryStatement";
__n76 := {  };
__n76["type"] := "BlockStatement";
__n78 := {  };
__n78["type"] := "VariableDeclaration";
__n80 := {  };
__n80["type"] := "VariableDeclarator";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "n";
__n80["id"] := __n81;
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "NewExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "Number";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "UnaryExpression";
__n87["operator"] := "-";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 1.;
__n88["raw"] := "1";
__n87["argument"] := __n88;
__n87["prefix"] := true;
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["object"] := __n84;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "toString";
__n89["raw"] := "\"toString\"";
__n83["property"] := __n89;
__n83["computed"] := true;
__n82["callee"] := __n83;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 'null;
__n91["raw"] := "\"'null\"";
__n90 := [ __n91 ];
__n82["arguments"] := __n90;
__n80["init"] := __n82;
__n79 := [ __n80 ];
__n78["declarations"] := __n79;
__n78["kind"] := "var";
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "$ERROR";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "#4: (new Number(-1)).toString(null) should throw an Error";
__n96["raw"] := "'#4: (new Number(-1)).toString(null) should throw an Error'";
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n77 := [ __n78, __n92 ];
__n76["body"] := __n77;
__n75["block"] := __n76;
__n97 := {  };
__n97["type"] := "CatchClause";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "e";
__n97["param"] := __n98;
__n99 := {  };
__n99["type"] := "BlockStatement";
__n100 := [  ];
__n99["body"] := __n100;
__n97["body"] := __n99;
__n75["handler"] := __n97;
__n75["finalizer"] := null;
__n101 := {  };
__n101["type"] := "TryStatement";
__n102 := {  };
__n102["type"] := "BlockStatement";
__n104 := {  };
__n104["type"] := "VariableDeclaration";
__n106 := {  };
__n106["type"] := "VariableDeclarator";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "n";
__n106["id"] := __n107;
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "NewExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "Number";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 1.;
__n113["raw"] := "1";
__n112 := [ __n113 ];
__n110["arguments"] := __n112;
__n109["object"] := __n110;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "toString";
__n114["raw"] := "\"toString\"";
__n109["property"] := __n114;
__n109["computed"] := true;
__n108["callee"] := __n109;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 'null;
__n116["raw"] := "\"'null\"";
__n115 := [ __n116 ];
__n108["arguments"] := __n115;
__n106["init"] := __n108;
__n105 := [ __n106 ];
__n104["declarations"] := __n105;
__n104["kind"] := "var";
__n117 := {  };
__n117["type"] := "ExpressionStatement";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "$ERROR";
__n118["callee"] := __n119;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "#5: (new Number(1)).toString(null) should throw an Error";
__n121["raw"] := "'#5: (new Number(1)).toString(null) should throw an Error'";
__n120 := [ __n121 ];
__n118["arguments"] := __n120;
__n117["expression"] := __n118;
__n103 := [ __n104, __n117 ];
__n102["body"] := __n103;
__n101["block"] := __n102;
__n122 := {  };
__n122["type"] := "CatchClause";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "e";
__n122["param"] := __n123;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n125 := [  ];
__n124["body"] := __n125;
__n122["body"] := __n124;
__n101["handler"] := __n122;
__n101["finalizer"] := null;
__n126 := {  };
__n126["type"] := "TryStatement";
__n127 := {  };
__n127["type"] := "BlockStatement";
__n129 := {  };
__n129["type"] := "VariableDeclaration";
__n131 := {  };
__n131["type"] := "VariableDeclarator";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "n";
__n131["id"] := __n132;
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "MemberExpression";
__n135 := {  };
__n135["type"] := "NewExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "Number";
__n135["callee"] := __n136;
__n138 := {  };
__n138["type"] := "MemberExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "Number";
__n138["object"] := __n139;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "NaN";
__n140["raw"] := "\"NaN\"";
__n138["property"] := __n140;
__n138["computed"] := true;
__n137 := [ __n138 ];
__n135["arguments"] := __n137;
__n134["object"] := __n135;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "toString";
__n141["raw"] := "\"toString\"";
__n134["property"] := __n141;
__n134["computed"] := true;
__n133["callee"] := __n134;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := 'null;
__n143["raw"] := "\"'null\"";
__n142 := [ __n143 ];
__n133["arguments"] := __n142;
__n131["init"] := __n133;
__n130 := [ __n131 ];
__n129["declarations"] := __n130;
__n129["kind"] := "var";
__n144 := {  };
__n144["type"] := "ExpressionStatement";
__n145 := {  };
__n145["type"] := "CallExpression";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "$ERROR";
__n145["callee"] := __n146;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "#6: (new Number(Number.NaN)).toString(null) should throw an Error";
__n148["raw"] := "'#6: (new Number(Number.NaN)).toString(null) should throw an Error'";
__n147 := [ __n148 ];
__n145["arguments"] := __n147;
__n144["expression"] := __n145;
__n128 := [ __n129, __n144 ];
__n127["body"] := __n128;
__n126["block"] := __n127;
__n149 := {  };
__n149["type"] := "CatchClause";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "e";
__n149["param"] := __n150;
__n151 := {  };
__n151["type"] := "BlockStatement";
__n152 := [  ];
__n151["body"] := __n152;
__n149["body"] := __n151;
__n126["handler"] := __n149;
__n126["finalizer"] := null;
__n153 := {  };
__n153["type"] := "TryStatement";
__n154 := {  };
__n154["type"] := "BlockStatement";
__n156 := {  };
__n156["type"] := "VariableDeclaration";
__n158 := {  };
__n158["type"] := "VariableDeclarator";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "n";
__n158["id"] := __n159;
__n160 := {  };
__n160["type"] := "CallExpression";
__n161 := {  };
__n161["type"] := "MemberExpression";
__n162 := {  };
__n162["type"] := "NewExpression";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "Number";
__n162["callee"] := __n163;
__n165 := {  };
__n165["type"] := "MemberExpression";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "Number";
__n165["object"] := __n166;
__n167 := {  };
__n167["type"] := "Literal";
__n167["value"] := "POSITIVE_INFINITY";
__n167["raw"] := "\"POSITIVE_INFINITY\"";
__n165["property"] := __n167;
__n165["computed"] := true;
__n164 := [ __n165 ];
__n162["arguments"] := __n164;
__n161["object"] := __n162;
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := "toString";
__n168["raw"] := "\"toString\"";
__n161["property"] := __n168;
__n161["computed"] := true;
__n160["callee"] := __n161;
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := 'null;
__n170["raw"] := "\"'null\"";
__n169 := [ __n170 ];
__n160["arguments"] := __n169;
__n158["init"] := __n160;
__n157 := [ __n158 ];
__n156["declarations"] := __n157;
__n156["kind"] := "var";
__n171 := {  };
__n171["type"] := "ExpressionStatement";
__n172 := {  };
__n172["type"] := "CallExpression";
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "$ERROR";
__n172["callee"] := __n173;
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := "#7: (new Number(Number.POSITIVE_INFINITY)).toString(null) should throw an Error";
__n175["raw"] := "'#7: (new Number(Number.POSITIVE_INFINITY)).toString(null) should throw an Error'";
__n174 := [ __n175 ];
__n172["arguments"] := __n174;
__n171["expression"] := __n172;
__n155 := [ __n156, __n171 ];
__n154["body"] := __n155;
__n153["block"] := __n154;
__n176 := {  };
__n176["type"] := "CatchClause";
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "e";
__n176["param"] := __n177;
__n178 := {  };
__n178["type"] := "BlockStatement";
__n179 := [  ];
__n178["body"] := __n179;
__n176["body"] := __n178;
__n153["handler"] := __n176;
__n153["finalizer"] := null;
__n180 := {  };
__n180["type"] := "TryStatement";
__n181 := {  };
__n181["type"] := "BlockStatement";
__n183 := {  };
__n183["type"] := "VariableDeclaration";
__n185 := {  };
__n185["type"] := "VariableDeclarator";
__n186 := {  };
__n186["type"] := "Identifier";
__n186["name"] := "n";
__n185["id"] := __n186;
__n187 := {  };
__n187["type"] := "CallExpression";
__n188 := {  };
__n188["type"] := "MemberExpression";
__n189 := {  };
__n189["type"] := "NewExpression";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "Number";
__n189["callee"] := __n190;
__n192 := {  };
__n192["type"] := "MemberExpression";
__n193 := {  };
__n193["type"] := "Identifier";
__n193["name"] := "Number";
__n192["object"] := __n193;
__n194 := {  };
__n194["type"] := "Literal";
__n194["value"] := "NEGATIVE_INFINITY";
__n194["raw"] := "\"NEGATIVE_INFINITY\"";
__n192["property"] := __n194;
__n192["computed"] := true;
__n191 := [ __n192 ];
__n189["arguments"] := __n191;
__n188["object"] := __n189;
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "toString";
__n195["raw"] := "\"toString\"";
__n188["property"] := __n195;
__n188["computed"] := true;
__n187["callee"] := __n188;
__n197 := {  };
__n197["type"] := "Literal";
__n197["value"] := 'null;
__n197["raw"] := "\"'null\"";
__n196 := [ __n197 ];
__n187["arguments"] := __n196;
__n185["init"] := __n187;
__n184 := [ __n185 ];
__n183["declarations"] := __n184;
__n183["kind"] := "var";
__n198 := {  };
__n198["type"] := "ExpressionStatement";
__n199 := {  };
__n199["type"] := "CallExpression";
__n200 := {  };
__n200["type"] := "Identifier";
__n200["name"] := "$ERROR";
__n199["callee"] := __n200;
__n202 := {  };
__n202["type"] := "Literal";
__n202["value"] := "#8: (new Number(Number.NEGATIVE_INFINITY)).toString(null) should throw an Error";
__n202["raw"] := "'#8: (new Number(Number.NEGATIVE_INFINITY)).toString(null) should throw an Error'";
__n201 := [ __n202 ];
__n199["arguments"] := __n201;
__n198["expression"] := __n199;
__n182 := [ __n183, __n198 ];
__n181["body"] := __n182;
__n180["block"] := __n181;
__n203 := {  };
__n203["type"] := "CatchClause";
__n204 := {  };
__n204["type"] := "Identifier";
__n204["name"] := "e";
__n203["param"] := __n204;
__n205 := {  };
__n205["type"] := "BlockStatement";
__n206 := [  ];
__n205["body"] := __n206;
__n203["body"] := __n205;
__n180["handler"] := __n203;
__n180["finalizer"] := null;
__n1 := [ __n2, __n26, __n50, __n75, __n101, __n126, __n153, __n180 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n207 := [ "n" ];
__n0["variableDeclarations"] := __n207;
__n208 := [  ];
__n0["functionDeclarations"] := __n208;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}