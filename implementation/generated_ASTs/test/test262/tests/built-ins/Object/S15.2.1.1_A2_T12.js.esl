function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Object";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "BinaryExpression";
__n9["operator"] := "*";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.1;
__n10["raw"] := "1.1";
__n9["left"] := __n10;
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "+";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "ArrayExpression";
__n14 := [  ];
__n13["elements"] := __n14;
__n12["object"] := __n13;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "length";
__n15["raw"] := "\"length\"";
__n12["property"] := __n15;
__n12["computed"] := true;
__n11["left"] := __n12;
__n16 := {  };
__n16["type"] := "MemberExpression";
__n16["computed"] := true;
__n17 := {  };
__n17["type"] := "ObjectExpression";
__n19 := {  };
__n19["type"] := "Property";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "q";
__n19["key"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 1.;
__n21["raw"] := "1";
__n19["value"] := __n21;
__n19["computed"] := false;
__n19["kind"] := "init";
__n19["shorthand"] := false;
__n18 := [ __n19 ];
__n17["properties"] := __n18;
__n16["object"] := __n17;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "q";
__n22["raw"] := "\"q\"";
__n16["property"] := __n22;
__n11["right"] := __n16;
__n9["right"] := __n11;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n23 := {  };
__n23["type"] := "IfStatement";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "!==";
__n25 := {  };
__n25["type"] := "UnaryExpression";
__n25["operator"] := "typeof";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "obj";
__n25["argument"] := __n26;
__n25["prefix"] := true;
__n24["left"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "object";
__n27["raw"] := "\"object\"";
__n24["right"] := __n27;
__n23["test"] := __n24;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "$ERROR";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "#2: Object(expression) returns ToObject(expression)";
__n34["raw"] := "'#2: Object(expression) returns ToObject(expression)'";
__n33 := [ __n34 ];
__n31["arguments"] := __n33;
__n30["expression"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n23["consequent"] := __n28;
__n23["alternate"] := null;
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "obj";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "constructor";
__n39["raw"] := "\"constructor\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Number";
__n36["right"] := __n40;
__n35["test"] := __n36;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "$ERROR";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#3: Object(expression) returns ToObject(expression)";
__n47["raw"] := "'#3: Object(expression) returns ToObject(expression)'";
__n46 := [ __n47 ];
__n44["arguments"] := __n46;
__n43["expression"] := __n44;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n35["consequent"] := __n41;
__n35["alternate"] := null;
__n48 := {  };
__n48["type"] := "IfStatement";
__n49 := {  };
__n49["type"] := "LogicalExpression";
__n49["operator"] := "||";
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "!=";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "obj";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 1.1;
__n52["raw"] := "1.1";
__n50["right"] := __n52;
__n49["left"] := __n50;
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "===";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "obj";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 1.1;
__n55["raw"] := "1.1";
__n53["right"] := __n55;
__n49["right"] := __n53;
__n48["test"] := __n49;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "$ERROR";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "#4: Object(expression) returns ToObject(expression)";
__n62["raw"] := "'#4: Object(expression) returns ToObject(expression)'";
__n61 := [ __n62 ];
__n59["arguments"] := __n61;
__n58["expression"] := __n59;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n48["consequent"] := __n56;
__n48["alternate"] := null;
__n1 := [ __n2, __n23, __n35, __n48 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n63 := [ "obj" ];
__n0["variableDeclarations"] := __n63;
__n64 := [  ];
__n0["functionDeclarations"] := __n64;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}