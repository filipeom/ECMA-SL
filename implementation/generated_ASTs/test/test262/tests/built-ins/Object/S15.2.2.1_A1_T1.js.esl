function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Object";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "IfStatement";
__n10 := {  };
__n10["type"] := "BinaryExpression";
__n10["operator"] := "===";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "obj";
__n10["left"] := __n11;
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "undefined";
__n10["right"] := __n12;
__n9["test"] := __n10;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "$ERROR";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "#0: new Object() return the newly created native object.";
__n19["raw"] := "'#0: new Object() return the newly created native object.'";
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n15["expression"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n9["consequent"] := __n13;
__n9["alternate"] := null;
__n20 := {  };
__n20["type"] := "IfStatement";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "!==";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "obj";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "constructor";
__n24["raw"] := "\"constructor\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["left"] := __n22;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Object";
__n21["right"] := __n25;
__n20["test"] := __n21;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "$ERROR";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "#1: new Object() create a new native ECMAScript object";
__n32["raw"] := "'#1: new Object() create a new native ECMAScript object'";
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n20["consequent"] := __n26;
__n20["alternate"] := null;
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "UnaryExpression";
__n34["operator"] := "!";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Object";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "prototype";
__n39["raw"] := "\"prototype\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["object"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "isPrototypeOf";
__n40["raw"] := "\"isPrototypeOf\"";
__n36["property"] := __n40;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "obj";
__n41 := [ __n42 ];
__n35["arguments"] := __n41;
__n34["argument"] := __n35;
__n34["prefix"] := true;
__n33["test"] := __n34;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "#2: when new Object() calls the [[Prototype]] property of the newly constructed object is set to the Object prototype object.";
__n49["raw"] := "'#2: when new Object() calls the [[Prototype]] property of the newly constructed object is set to the Object prototype object.'";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n33["consequent"] := __n43;
__n33["alternate"] := null;
__n50 := {  };
__n50["type"] := "VariableDeclaration";
__n52 := {  };
__n52["type"] := "VariableDeclarator";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "to_string_result";
__n52["id"] := __n53;
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "+";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "+";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "[object ";
__n56["raw"] := "'[object '";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "Object";
__n57["raw"] := "'Object'";
__n55["right"] := __n57;
__n54["left"] := __n55;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "]";
__n58["raw"] := "']'";
__n54["right"] := __n58;
__n52["init"] := __n54;
__n51 := [ __n52 ];
__n50["declarations"] := __n51;
__n50["kind"] := "var";
__n59 := {  };
__n59["type"] := "IfStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "!==";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "obj";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "toString";
__n64["raw"] := "\"toString\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n65 := [  ];
__n61["arguments"] := __n65;
__n60["left"] := __n61;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "to_string_result";
__n60["right"] := __n66;
__n59["test"] := __n60;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#3: when new Object() calls the [[Class]] property of the newly constructed object is set to \"Object\".";
__n73["raw"] := "'#3: when new Object() calls the [[Class]] property of the newly constructed object is set to \"Object\".'";
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n59["consequent"] := __n67;
__n59["alternate"] := null;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "!==";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "obj";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "valueOf";
__n81["raw"] := "\"valueOf\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n78["callee"] := __n79;
__n82 := [  ];
__n78["arguments"] := __n82;
__n77["object"] := __n78;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "toString";
__n83["raw"] := "\"toString\"";
__n77["property"] := __n83;
__n77["computed"] := true;
__n76["callee"] := __n77;
__n84 := [  ];
__n76["arguments"] := __n84;
__n75["left"] := __n76;
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "to_string_result";
__n86["object"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "toString";
__n88["raw"] := "\"toString\"";
__n86["property"] := __n88;
__n86["computed"] := true;
__n85["callee"] := __n86;
__n89 := [  ];
__n85["arguments"] := __n89;
__n75["right"] := __n85;
__n74["test"] := __n75;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "$ERROR";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "#4: when new Object() calls the newly constructed object has no [[Value]] property.";
__n96["raw"] := "'#4: when new Object() calls the newly constructed object has no [[Value]] property.'";
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n74["consequent"] := __n90;
__n74["alternate"] := null;
__n1 := [ __n2, __n9, __n20, __n33, __n50, __n59, __n74 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n97 := [ "obj", "to_string_result" ];
__n0["variableDeclarations"] := __n97;
__n98 := [  ];
__n0["functionDeclarations"] := __n98;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}