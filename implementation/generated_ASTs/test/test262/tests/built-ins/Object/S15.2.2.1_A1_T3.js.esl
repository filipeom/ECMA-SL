function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Object";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 'null;
__n9["raw"] := "\"'null\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "IfStatement";
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "===";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "obj";
__n11["left"] := __n12;
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "undefined";
__n11["right"] := __n13;
__n10["test"] := __n11;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "$ERROR";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "#0: new Object(null) return the newly created native object.";
__n20["raw"] := "'#0: new Object(null) return the newly created native object.'";
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n16["expression"] := __n17;
__n15 := [ __n16 ];
__n14["body"] := __n15;
__n10["consequent"] := __n14;
__n10["alternate"] := null;
__n21 := {  };
__n21["type"] := "IfStatement";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "!==";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "obj";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "constructor";
__n25["raw"] := "\"constructor\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["left"] := __n23;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Object";
__n22["right"] := __n26;
__n21["test"] := __n22;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "$ERROR";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "#1: new Object(null) create a new native ECMAScript object";
__n33["raw"] := "'#1: new Object(null) create a new native ECMAScript object'";
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n29["expression"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n21["consequent"] := __n27;
__n21["alternate"] := null;
__n34 := {  };
__n34["type"] := "IfStatement";
__n35 := {  };
__n35["type"] := "UnaryExpression";
__n35["operator"] := "!";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "Object";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "prototype";
__n40["raw"] := "\"prototype\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["object"] := __n38;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "isPrototypeOf";
__n41["raw"] := "\"isPrototypeOf\"";
__n37["property"] := __n41;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "obj";
__n42 := [ __n43 ];
__n36["arguments"] := __n42;
__n35["argument"] := __n36;
__n35["prefix"] := true;
__n34["test"] := __n35;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$ERROR";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "#2: when new Object(null) calls the [[Prototype]] property of the newly constructed object is set to the Object prototype object.";
__n50["raw"] := "'#2: when new Object(null) calls the [[Prototype]] property of the newly constructed object is set to the Object prototype object.'";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n34["consequent"] := __n44;
__n34["alternate"] := null;
__n51 := {  };
__n51["type"] := "VariableDeclaration";
__n53 := {  };
__n53["type"] := "VariableDeclarator";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "to_string_result";
__n53["id"] := __n54;
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "+";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "+";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "[object ";
__n57["raw"] := "'[object '";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "Object";
__n58["raw"] := "'Object'";
__n56["right"] := __n58;
__n55["left"] := __n56;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "]";
__n59["raw"] := "']'";
__n55["right"] := __n59;
__n53["init"] := __n55;
__n52 := [ __n53 ];
__n51["declarations"] := __n52;
__n51["kind"] := "var";
__n60 := {  };
__n60["type"] := "IfStatement";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "!==";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "obj";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "toString";
__n65["raw"] := "\"toString\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n66 := [  ];
__n62["arguments"] := __n66;
__n61["left"] := __n62;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "to_string_result";
__n61["right"] := __n67;
__n60["test"] := __n61;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "$ERROR";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "#3: when new Object(null) calls the [[Class]] property of the newly constructed object is set to \"Object\".";
__n74["raw"] := "'#3: when new Object(null) calls the [[Class]] property of the newly constructed object is set to \"Object\".'";
__n73 := [ __n74 ];
__n71["arguments"] := __n73;
__n70["expression"] := __n71;
__n69 := [ __n70 ];
__n68["body"] := __n69;
__n60["consequent"] := __n68;
__n60["alternate"] := null;
__n75 := {  };
__n75["type"] := "IfStatement";
__n76 := {  };
__n76["type"] := "BinaryExpression";
__n76["operator"] := "!==";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "MemberExpression";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "obj";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "valueOf";
__n82["raw"] := "\"valueOf\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n79["callee"] := __n80;
__n83 := [  ];
__n79["arguments"] := __n83;
__n78["object"] := __n79;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "toString";
__n84["raw"] := "\"toString\"";
__n78["property"] := __n84;
__n78["computed"] := true;
__n77["callee"] := __n78;
__n85 := [  ];
__n77["arguments"] := __n85;
__n76["left"] := __n77;
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "to_string_result";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "toString";
__n89["raw"] := "\"toString\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n86["callee"] := __n87;
__n90 := [  ];
__n86["arguments"] := __n90;
__n76["right"] := __n86;
__n75["test"] := __n76;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "#4: when new Object(null) calls the newly constructed object has no [[Value]] property.";
__n97["raw"] := "'#4: when new Object(null) calls the newly constructed object has no [[Value]] property.'";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n75["consequent"] := __n91;
__n75["alternate"] := null;
__n1 := [ __n2, __n10, __n21, __n34, __n51, __n60, __n75 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n98 := [ "obj", "to_string_result" ];
__n0["variableDeclarations"] := __n98;
__n99 := [  ];
__n0["functionDeclarations"] := __n99;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}