function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "bool";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "IfStatement";
__n8 := {  };
__n8["type"] := "BinaryExpression";
__n8["operator"] := "!==";
__n9 := {  };
__n9["type"] := "UnaryExpression";
__n9["operator"] := "typeof";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "bool";
__n9["argument"] := __n10;
__n9["prefix"] := true;
__n8["left"] := __n9;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "boolean";
__n11["raw"] := "'boolean'";
__n8["right"] := __n11;
__n7["test"] := __n8;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "$ERROR";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: false is NOT a boolean";
__n18["raw"] := "'#1: false is NOT a boolean'";
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n7["consequent"] := __n12;
__n7["alternate"] := null;
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "n_obj";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "NewExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Object";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "bool";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n27 := {  };
__n27["type"] := "IfStatement";
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "!==";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "n_obj";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "constructor";
__n31["raw"] := "\"constructor\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["left"] := __n29;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Boolean";
__n28["right"] := __n32;
__n27["test"] := __n28;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "$ERROR";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "#2: When the Object constructor is called with Boolean argument return ToObject(boolean)";
__n39["raw"] := "'#2: When the Object constructor is called with Boolean argument return ToObject(boolean)'";
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["expression"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n27["consequent"] := __n33;
__n27["alternate"] := null;
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "!==";
__n42 := {  };
__n42["type"] := "UnaryExpression";
__n42["operator"] := "typeof";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "n_obj";
__n42["argument"] := __n43;
__n42["prefix"] := true;
__n41["left"] := __n42;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "object";
__n44["raw"] := "'object'";
__n41["right"] := __n44;
__n40["test"] := __n41;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "$ERROR";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "#3: When the Object constructor is called with Boolean argument return ToObject(boolean)";
__n51["raw"] := "'#3: When the Object constructor is called with Boolean argument return ToObject(boolean)'";
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n40["consequent"] := __n45;
__n40["alternate"] := null;
__n52 := {  };
__n52["type"] := "IfStatement";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "!=";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "n_obj";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "bool";
__n53["right"] := __n55;
__n52["test"] := __n53;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "$ERROR";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "#4: When the Object constructor is called with Boolean argument return ToObject(boolean)";
__n62["raw"] := "'#4: When the Object constructor is called with Boolean argument return ToObject(boolean)'";
__n61 := [ __n62 ];
__n59["arguments"] := __n61;
__n58["expression"] := __n59;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n52["consequent"] := __n56;
__n52["alternate"] := null;
__n63 := {  };
__n63["type"] := "IfStatement";
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "===";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "n_obj";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "bool";
__n64["right"] := __n66;
__n63["test"] := __n64;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#5: When the Object constructor is called with Boolean argument return ToObject(boolean)";
__n73["raw"] := "'#5: When the Object constructor is called with Boolean argument return ToObject(boolean)'";
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n63["consequent"] := __n67;
__n63["alternate"] := null;
__n1 := [ __n2, __n7, __n19, __n27, __n40, __n52, __n63 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n74 := [ "bool", "n_obj" ];
__n0["variableDeclarations"] := __n74;
__n75 := [  ];
__n0["functionDeclarations"] := __n75;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}