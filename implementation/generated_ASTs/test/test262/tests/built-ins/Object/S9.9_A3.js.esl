function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Object";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := true;
__n9["raw"] := "true";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n5["object"] := __n6;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "valueOf";
__n10["raw"] := "\"valueOf\"";
__n5["property"] := __n10;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n11 := [  ];
__n4["arguments"] := __n11;
__n3["left"] := __n4;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := true;
__n12["raw"] := "true";
__n3["right"] := __n12;
__n2["test"] := __n3;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "$ERROR";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "+";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "#1: Object(true).valueOf() === true. Actual: ";
__n20["raw"] := "'#1: Object(true).valueOf() === true. Actual: '";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Object";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := true;
__n26["raw"] := "true";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["object"] := __n23;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "valueOf";
__n27["raw"] := "\"valueOf\"";
__n22["property"] := __n27;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n28 := [  ];
__n21["arguments"] := __n28;
__n19["right"] := __n21;
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n15["expression"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n2["consequent"] := __n13;
__n2["alternate"] := null;
__n29 := {  };
__n29["type"] := "IfStatement";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "!==";
__n31 := {  };
__n31["type"] := "UnaryExpression";
__n31["operator"] := "typeof";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "Object";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := true;
__n35["raw"] := "true";
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["argument"] := __n32;
__n31["prefix"] := true;
__n30["left"] := __n31;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "object";
__n36["raw"] := "\"object\"";
__n30["right"] := __n36;
__n29["test"] := __n30;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$ERROR";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "#2: typeof Object(true) === \"object\". Actual: ";
__n44["raw"] := "'#2: typeof Object(true) === \"object\". Actual: '";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "UnaryExpression";
__n45["operator"] := "typeof";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "Object";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := true;
__n49["raw"] := "true";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["argument"] := __n46;
__n45["prefix"] := true;
__n43["right"] := __n45;
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n29["consequent"] := __n37;
__n29["alternate"] := null;
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Object";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := true;
__n57["raw"] := "true";
__n56 := [ __n57 ];
__n54["arguments"] := __n56;
__n53["object"] := __n54;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "constructor";
__n58["raw"] := "\"constructor\"";
__n53["property"] := __n58;
__n53["computed"] := true;
__n52["object"] := __n53;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "prototype";
__n59["raw"] := "\"prototype\"";
__n52["property"] := __n59;
__n52["computed"] := true;
__n51["left"] := __n52;
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "Boolean";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "prototype";
__n62["raw"] := "\"prototype\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n51["right"] := __n60;
__n50["test"] := __n51;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$ERROR";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "+";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "#3: Object(true).constructor.prototype === Boolean.prototype. Actual: ";
__n70["raw"] := "'#3: Object(true).constructor.prototype === Boolean.prototype. Actual: '";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "MemberExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "Object";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := true;
__n76["raw"] := "true";
__n75 := [ __n76 ];
__n73["arguments"] := __n75;
__n72["object"] := __n73;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "constructor";
__n77["raw"] := "\"constructor\"";
__n72["property"] := __n77;
__n72["computed"] := true;
__n71["object"] := __n72;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "prototype";
__n78["raw"] := "\"prototype\"";
__n71["property"] := __n78;
__n71["computed"] := true;
__n69["right"] := __n71;
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n50["consequent"] := __n63;
__n50["alternate"] := null;
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!==";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "MemberExpression";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "Object";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := false;
__n86["raw"] := "false";
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["object"] := __n83;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "valueOf";
__n87["raw"] := "\"valueOf\"";
__n82["property"] := __n87;
__n82["computed"] := true;
__n81["callee"] := __n82;
__n88 := [  ];
__n81["arguments"] := __n88;
__n80["left"] := __n81;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := false;
__n89["raw"] := "false";
__n80["right"] := __n89;
__n79["test"] := __n80;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "$ERROR";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "+";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "#4: Object(false).valueOf() === false. Actual: ";
__n97["raw"] := "'#4: Object(false).valueOf() === false. Actual: '";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "CallExpression";
__n99 := {  };
__n99["type"] := "MemberExpression";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "Object";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := false;
__n103["raw"] := "false";
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["object"] := __n100;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "valueOf";
__n104["raw"] := "\"valueOf\"";
__n99["property"] := __n104;
__n99["computed"] := true;
__n98["callee"] := __n99;
__n105 := [  ];
__n98["arguments"] := __n105;
__n96["right"] := __n98;
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n79["consequent"] := __n90;
__n79["alternate"] := null;
__n106 := {  };
__n106["type"] := "IfStatement";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "!==";
__n108 := {  };
__n108["type"] := "UnaryExpression";
__n108["operator"] := "typeof";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "Object";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := false;
__n112["raw"] := "false";
__n111 := [ __n112 ];
__n109["arguments"] := __n111;
__n108["argument"] := __n109;
__n108["prefix"] := true;
__n107["left"] := __n108;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "object";
__n113["raw"] := "\"object\"";
__n107["right"] := __n113;
__n106["test"] := __n107;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n116 := {  };
__n116["type"] := "ExpressionStatement";
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "$ERROR";
__n117["callee"] := __n118;
__n120 := {  };
__n120["type"] := "BinaryExpression";
__n120["operator"] := "+";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "#5: typeof Object(false) === \"object\". Actual: ";
__n121["raw"] := "'#5: typeof Object(false) === \"object\". Actual: '";
__n120["left"] := __n121;
__n122 := {  };
__n122["type"] := "UnaryExpression";
__n122["operator"] := "typeof";
__n123 := {  };
__n123["type"] := "CallExpression";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "Object";
__n123["callee"] := __n124;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := false;
__n126["raw"] := "false";
__n125 := [ __n126 ];
__n123["arguments"] := __n125;
__n122["argument"] := __n123;
__n122["prefix"] := true;
__n120["right"] := __n122;
__n119 := [ __n120 ];
__n117["arguments"] := __n119;
__n116["expression"] := __n117;
__n115 := [ __n116 ];
__n114["body"] := __n115;
__n106["consequent"] := __n114;
__n106["alternate"] := null;
__n127 := {  };
__n127["type"] := "IfStatement";
__n128 := {  };
__n128["type"] := "BinaryExpression";
__n128["operator"] := "!==";
__n129 := {  };
__n129["type"] := "MemberExpression";
__n130 := {  };
__n130["type"] := "MemberExpression";
__n131 := {  };
__n131["type"] := "CallExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "Object";
__n131["callee"] := __n132;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := false;
__n134["raw"] := "false";
__n133 := [ __n134 ];
__n131["arguments"] := __n133;
__n130["object"] := __n131;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "constructor";
__n135["raw"] := "\"constructor\"";
__n130["property"] := __n135;
__n130["computed"] := true;
__n129["object"] := __n130;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "prototype";
__n136["raw"] := "\"prototype\"";
__n129["property"] := __n136;
__n129["computed"] := true;
__n128["left"] := __n129;
__n137 := {  };
__n137["type"] := "MemberExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "Boolean";
__n137["object"] := __n138;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "prototype";
__n139["raw"] := "\"prototype\"";
__n137["property"] := __n139;
__n137["computed"] := true;
__n128["right"] := __n137;
__n127["test"] := __n128;
__n140 := {  };
__n140["type"] := "BlockStatement";
__n142 := {  };
__n142["type"] := "ExpressionStatement";
__n143 := {  };
__n143["type"] := "CallExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "$ERROR";
__n143["callee"] := __n144;
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "+";
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "#6: Object(false).constructor.prototype === Boolean.prototype. Actual: ";
__n147["raw"] := "'#6: Object(false).constructor.prototype === Boolean.prototype. Actual: '";
__n146["left"] := __n147;
__n148 := {  };
__n148["type"] := "MemberExpression";
__n149 := {  };
__n149["type"] := "MemberExpression";
__n150 := {  };
__n150["type"] := "CallExpression";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "Object";
__n150["callee"] := __n151;
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := false;
__n153["raw"] := "false";
__n152 := [ __n153 ];
__n150["arguments"] := __n152;
__n149["object"] := __n150;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "constructor";
__n154["raw"] := "\"constructor\"";
__n149["property"] := __n154;
__n149["computed"] := true;
__n148["object"] := __n149;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := "prototype";
__n155["raw"] := "\"prototype\"";
__n148["property"] := __n155;
__n148["computed"] := true;
__n146["right"] := __n148;
__n145 := [ __n146 ];
__n143["arguments"] := __n145;
__n142["expression"] := __n143;
__n141 := [ __n142 ];
__n140["body"] := __n141;
__n127["consequent"] := __n140;
__n127["alternate"] := null;
__n1 := [ __n2, __n29, __n50, __n79, __n106, __n127 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n156 := [  ];
__n0["variableDeclarations"] := __n156;
__n157 := [  ];
__n0["functionDeclarations"] := __n157;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}