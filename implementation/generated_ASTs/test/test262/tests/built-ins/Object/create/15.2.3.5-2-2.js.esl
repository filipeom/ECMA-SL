function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "newObj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Object";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "create";
__n9["raw"] := "\"create\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n12 := [  ];
__n11["properties"] := __n12;
__n10 := [ __n11 ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "assert";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "instanceof";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "newObj";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Object";
__n17["right"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "newObj instanceof Object !== true";
__n20["raw"] := "'newObj instanceof Object !== true'";
__n16 := [ __n17, __n20 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n1 := [ __n2, __n13 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n21 := [ "newObj" ];
__n0["variableDeclarations"] := __n21;
__n22 := [  ];
__n0["functionDeclarations"] := __n22;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}