function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "newObj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Object";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "create";
__n9["raw"] := "\"create\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n12 := [  ];
__n11["properties"] := __n12;
__n13 := {  };
__n13["type"] := "ObjectExpression";
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "prop";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "ObjectExpression";
__n19 := {  };
__n19["type"] := "Property";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "writable";
__n19["key"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := false;
__n21["raw"] := "false";
__n19["value"] := __n21;
__n19["computed"] := false;
__n19["kind"] := "init";
__n19["shorthand"] := false;
__n18 := [ __n19 ];
__n17["properties"] := __n18;
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n14 := [ __n15 ];
__n13["properties"] := __n14;
__n10 := [ __n11, __n13 ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "assert";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "newObj";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "hasOwnProperty";
__n29["raw"] := "\"hasOwnProperty\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "prop";
__n31["raw"] := "\"prop\"";
__n30 := [ __n31 ];
__n26["arguments"] := __n30;
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "assert";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "sameValue";
__n36["raw"] := "\"sameValue\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n38 := {  };
__n38["type"] := "UnaryExpression";
__n38["operator"] := "typeof";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "newObj";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "prop";
__n41["raw"] := "\"prop\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["argument"] := __n39;
__n38["prefix"] := true;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "undefined";
__n42["raw"] := "\"undefined\"";
__n37 := [ __n38, __n42 ];
__n33["arguments"] := __n37;
__n32["expression"] := __n33;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "verifyNotWritable";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "newObj";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "prop";
__n48["raw"] := "\"prop\"";
__n46 := [ __n47, __n48 ];
__n44["arguments"] := __n46;
__n43["expression"] := __n44;
__n1 := [ __n2, __n22, __n32, __n43 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n49 := [ "newObj" ];
__n0["variableDeclarations"] := __n49;
__n50 := [  ];
__n0["functionDeclarations"] := __n50;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}