function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "descObj";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "NewExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Number";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "UnaryExpression";
__n14["operator"] := "-";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 9.;
__n15["raw"] := "9";
__n14["argument"] := __n15;
__n14["prefix"] := true;
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "AssignmentExpression";
__n17["operator"] := "=";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "descObj";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "enumerable";
__n20["raw"] := "\"enumerable\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["left"] := __n18;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := true;
__n21["raw"] := "true";
__n17["right"] := __n21;
__n16["expression"] := __n17;
__n22 := {  };
__n22["type"] := "VariableDeclaration";
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "newObj";
__n24["id"] := __n25;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Object";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "create";
__n29["raw"] := "\"create\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "ObjectExpression";
__n32 := [  ];
__n31["properties"] := __n32;
__n33 := {  };
__n33["type"] := "ObjectExpression";
__n35 := {  };
__n35["type"] := "Property";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "prop";
__n35["key"] := __n36;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "descObj";
__n35["value"] := __n37;
__n35["computed"] := false;
__n35["kind"] := "init";
__n35["shorthand"] := false;
__n34 := [ __n35 ];
__n33["properties"] := __n34;
__n30 := [ __n31, __n33 ];
__n26["arguments"] := __n30;
__n24["init"] := __n26;
__n23 := [ __n24 ];
__n22["declarations"] := __n23;
__n22["kind"] := "var";
__n38 := {  };
__n38["type"] := "ForInStatement";
__n39 := {  };
__n39["type"] := "VariableDeclarator";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "property";
__n39["id"] := __n40;
__n39["init"] := null;
__n38["left"] := __n39;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "newObj";
__n38["right"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "===";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "property";
__n45["left"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "prop";
__n47["raw"] := "\"prop\"";
__n45["right"] := __n47;
__n44["test"] := __n45;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "AssignmentExpression";
__n51["operator"] := "=";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "accessed";
__n51["left"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := true;
__n53["raw"] := "true";
__n51["right"] := __n53;
__n50["expression"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n44["consequent"] := __n48;
__n44["alternate"] := null;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n38["body"] := __n42;
__n38["each"] := false;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "assert";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "accessed";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "accessed !== true";
__n59["raw"] := "'accessed !== true'";
__n57 := [ __n58, __n59 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n1 := [ __n2, __n7, __n16, __n22, __n38, __n54 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n60 := [ "accessed", "descObj", "newObj", "property" ];
__n0["variableDeclarations"] := __n60;
__n61 := [  ];
__n0["functionDeclarations"] := __n61;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}