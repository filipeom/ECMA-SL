function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "defineProperties";
__n12["raw"] := "\"defineProperties\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "obj";
__n15 := {  };
__n15["type"] := "ObjectExpression";
__n17 := {  };
__n17["type"] := "Property";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "property";
__n17["key"] := __n18;
__n19 := {  };
__n19["type"] := "ObjectExpression";
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "writable";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := true;
__n23["raw"] := "true";
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n20 := [ __n21 ];
__n19["properties"] := __n20;
__n17["value"] := __n19;
__n17["computed"] := false;
__n17["kind"] := "init";
__n17["shorthand"] := false;
__n16 := [ __n17 ];
__n15["properties"] := __n16;
__n13 := [ __n14, __n15 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "assert";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "obj";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "hasOwnProperty";
__n31["raw"] := "\"hasOwnProperty\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "property";
__n33["raw"] := "\"property\"";
__n32 := [ __n33 ];
__n28["arguments"] := __n32;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "obj.hasOwnProperty(\"property\") !== true";
__n34["raw"] := "'obj.hasOwnProperty(\"property\") !== true'";
__n27 := [ __n28, __n34 ];
__n25["arguments"] := __n27;
__n24["expression"] := __n25;
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "assert";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "sameValue";
__n39["raw"] := "\"sameValue\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n41 := {  };
__n41["type"] := "UnaryExpression";
__n41["operator"] := "typeof";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "obj";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "property";
__n44["raw"] := "\"property\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["argument"] := __n42;
__n41["prefix"] := true;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "undefined";
__n45["raw"] := "\"undefined\"";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "typeof (obj.property)";
__n46["raw"] := "'typeof (obj.property)'";
__n40 := [ __n41, __n45, __n46 ];
__n36["arguments"] := __n40;
__n35["expression"] := __n36;
__n1 := [ __n2, __n8, __n24, __n35 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n47 := [ "obj" ];
__n0["variableDeclarations"] := __n47;
__n48 := [  ];
__n0["functionDeclarations"] := __n48;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}