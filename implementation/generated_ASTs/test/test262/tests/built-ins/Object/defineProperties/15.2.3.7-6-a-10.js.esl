function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "proto";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "defineProperty";
__n12["raw"] := "\"defineProperty\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "proto";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "prop";
__n15["raw"] := "\"prop\"";
__n16 := {  };
__n16["type"] := "ObjectExpression";
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "get";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "FunctionExpression";
__n20["id"] := null;
__n21 := [  ];
__n20["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ReturnStatement";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 11.;
__n25["raw"] := "11";
__n24["argument"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n26 := [  ];
__n22["variableDeclarations"] := __n26;
__n27 := [  ];
__n22["functionDeclarations"] := __n27;
__n22["codeType"] := "function";
__n22["strict"] := false;
__n20["body"] := __n22;
__n20["generator"] := false;
__n20["expression"] := false;
__n20["async"] := false;
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n28 := {  };
__n28["type"] := "Property";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "set";
__n28["key"] := __n29;
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [  ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n33 := [  ];
__n32["body"] := __n33;
__n34 := [  ];
__n32["variableDeclarations"] := __n34;
__n35 := [  ];
__n32["functionDeclarations"] := __n35;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["expression"] := false;
__n30["async"] := false;
__n28["value"] := __n30;
__n28["computed"] := false;
__n28["kind"] := "init";
__n28["shorthand"] := false;
__n36 := {  };
__n36["type"] := "Property";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "configurable";
__n36["key"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := true;
__n38["raw"] := "true";
__n36["value"] := __n38;
__n36["computed"] := false;
__n36["kind"] := "init";
__n36["shorthand"] := false;
__n17 := [ __n18, __n28, __n36 ];
__n16["properties"] := __n17;
__n13 := [ __n14, __n15, __n16 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n39 := {  };
__n39["type"] := "VariableDeclaration";
__n41 := {  };
__n41["type"] := "VariableDeclarator";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Con";
__n41["id"] := __n42;
__n43 := {  };
__n43["type"] := "FunctionExpression";
__n43["id"] := null;
__n44 := [  ];
__n43["params"] := __n44;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n46 := [  ];
__n45["body"] := __n46;
__n47 := [  ];
__n45["variableDeclarations"] := __n47;
__n48 := [  ];
__n45["functionDeclarations"] := __n48;
__n45["codeType"] := "function";
__n45["strict"] := false;
__n43["body"] := __n45;
__n43["generator"] := false;
__n43["expression"] := false;
__n43["async"] := false;
__n41["init"] := __n43;
__n40 := [ __n41 ];
__n39["declarations"] := __n40;
__n39["kind"] := "var";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "AssignmentExpression";
__n50["operator"] := "=";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Con";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "prototype";
__n53["raw"] := "\"prototype\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["left"] := __n51;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "proto";
__n50["right"] := __n54;
__n49["expression"] := __n50;
__n55 := {  };
__n55["type"] := "VariableDeclaration";
__n57 := {  };
__n57["type"] := "VariableDeclarator";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "obj";
__n57["id"] := __n58;
__n59 := {  };
__n59["type"] := "NewExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Con";
__n59["callee"] := __n60;
__n61 := [  ];
__n59["arguments"] := __n61;
__n57["init"] := __n59;
__n56 := [ __n57 ];
__n55["declarations"] := __n56;
__n55["kind"] := "var";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Object";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "defineProperty";
__n66["raw"] := "\"defineProperty\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "obj";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "prop";
__n69["raw"] := "\"prop\"";
__n70 := {  };
__n70["type"] := "ObjectExpression";
__n72 := {  };
__n72["type"] := "Property";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "set";
__n72["key"] := __n73;
__n74 := {  };
__n74["type"] := "FunctionExpression";
__n74["id"] := null;
__n75 := [  ];
__n74["params"] := __n75;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n77 := [  ];
__n76["body"] := __n77;
__n78 := [  ];
__n76["variableDeclarations"] := __n78;
__n79 := [  ];
__n76["functionDeclarations"] := __n79;
__n76["codeType"] := "function";
__n76["strict"] := false;
__n74["body"] := __n76;
__n74["generator"] := false;
__n74["expression"] := false;
__n74["async"] := false;
__n72["value"] := __n74;
__n72["computed"] := false;
__n72["kind"] := "init";
__n72["shorthand"] := false;
__n80 := {  };
__n80["type"] := "Property";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "configurable";
__n80["key"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := false;
__n82["raw"] := "false";
__n80["value"] := __n82;
__n80["computed"] := false;
__n80["kind"] := "init";
__n80["shorthand"] := false;
__n71 := [ __n72, __n80 ];
__n70["properties"] := __n71;
__n67 := [ __n68, __n69, __n70 ];
__n63["arguments"] := __n67;
__n62["expression"] := __n63;
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "assert";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "throws";
__n87["raw"] := "\"throws\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n84["callee"] := __n85;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "TypeError";
__n90 := {  };
__n90["type"] := "FunctionExpression";
__n90["id"] := null;
__n91 := [  ];
__n90["params"] := __n91;
__n92 := {  };
__n92["type"] := "BlockStatement";
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "Object";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "defineProperties";
__n98["raw"] := "\"defineProperties\"";
__n96["property"] := __n98;
__n96["computed"] := true;
__n95["callee"] := __n96;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "obj";
__n101 := {  };
__n101["type"] := "ObjectExpression";
__n103 := {  };
__n103["type"] := "Property";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "prop";
__n103["key"] := __n104;
__n105 := {  };
__n105["type"] := "ObjectExpression";
__n107 := {  };
__n107["type"] := "Property";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "value";
__n107["key"] := __n108;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := 12.;
__n109["raw"] := "12";
__n107["value"] := __n109;
__n107["computed"] := false;
__n107["kind"] := "init";
__n107["shorthand"] := false;
__n110 := {  };
__n110["type"] := "Property";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "configurable";
__n110["key"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := true;
__n112["raw"] := "true";
__n110["value"] := __n112;
__n110["computed"] := false;
__n110["kind"] := "init";
__n110["shorthand"] := false;
__n106 := [ __n107, __n110 ];
__n105["properties"] := __n106;
__n103["value"] := __n105;
__n103["computed"] := false;
__n103["kind"] := "init";
__n103["shorthand"] := false;
__n102 := [ __n103 ];
__n101["properties"] := __n102;
__n99 := [ __n100, __n101 ];
__n95["arguments"] := __n99;
__n94["expression"] := __n95;
__n93 := [ __n94 ];
__n92["body"] := __n93;
__n113 := [  ];
__n92["variableDeclarations"] := __n113;
__n114 := [  ];
__n92["functionDeclarations"] := __n114;
__n92["codeType"] := "function";
__n92["strict"] := false;
__n90["body"] := __n92;
__n90["generator"] := false;
__n90["expression"] := false;
__n90["async"] := false;
__n88 := [ __n89, __n90 ];
__n84["arguments"] := __n88;
__n83["expression"] := __n84;
__n1 := [ __n2, __n8, __n39, __n49, __n55, __n62, __n83 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n115 := [ "proto", "Con", "obj" ];
__n0["variableDeclarations"] := __n115;
__n116 := [  ];
__n0["functionDeclarations"] := __n116;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}