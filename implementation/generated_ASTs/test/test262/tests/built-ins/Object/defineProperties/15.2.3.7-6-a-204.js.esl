function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arr";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "arr";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "verifySetter";
__n12["raw"] := "\"verifySetter\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["left"] := __n10;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 100.;
__n13["raw"] := "100";
__n9["right"] := __n13;
__n8["expression"] := __n9;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Object";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "defineProperties";
__n18["raw"] := "\"defineProperties\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "arr";
__n21 := {  };
__n21["type"] := "ObjectExpression";
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "0";
__n24["raw"] := "\"0\"";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "ObjectExpression";
__n27 := {  };
__n27["type"] := "Property";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "set";
__n27["key"] := __n28;
__n29 := {  };
__n29["type"] := "FunctionExpression";
__n29["id"] := null;
__n30 := [ "value" ];
__n29["params"] := __n30;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "AssignmentExpression";
__n34["operator"] := "=";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "arr";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "verifySetter";
__n37["raw"] := "\"verifySetter\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["left"] := __n35;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "value";
__n34["right"] := __n38;
__n33["expression"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n39 := [  ];
__n31["variableDeclarations"] := __n39;
__n40 := [  ];
__n31["functionDeclarations"] := __n40;
__n31["codeType"] := "function";
__n31["strict"] := false;
__n29["body"] := __n31;
__n29["generator"] := false;
__n29["expression"] := false;
__n29["async"] := false;
__n27["value"] := __n29;
__n27["computed"] := false;
__n27["kind"] := "init";
__n27["shorthand"] := false;
__n41 := {  };
__n41["type"] := "Property";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "get";
__n41["key"] := __n42;
__n43 := {  };
__n43["type"] := "FunctionExpression";
__n43["id"] := null;
__n44 := [  ];
__n43["params"] := __n44;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ReturnStatement";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "arr";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "verifySetter";
__n50["raw"] := "\"verifySetter\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["argument"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n51 := [  ];
__n45["variableDeclarations"] := __n51;
__n52 := [  ];
__n45["functionDeclarations"] := __n52;
__n45["codeType"] := "function";
__n45["strict"] := false;
__n43["body"] := __n45;
__n43["generator"] := false;
__n43["expression"] := false;
__n43["async"] := false;
__n41["value"] := __n43;
__n41["computed"] := false;
__n41["kind"] := "init";
__n41["shorthand"] := false;
__n53 := {  };
__n53["type"] := "Property";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "enumerable";
__n53["key"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := true;
__n55["raw"] := "true";
__n53["value"] := __n55;
__n53["computed"] := false;
__n53["kind"] := "init";
__n53["shorthand"] := false;
__n26 := [ __n27, __n41, __n53 ];
__n25["properties"] := __n26;
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n22 := [ __n23 ];
__n21["properties"] := __n22;
__n19 := [ __n20, __n21 ];
__n15["arguments"] := __n19;
__n14["expression"] := __n15;
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "UnaryExpression";
__n57["operator"] := "!";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "Object";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "prototype";
__n63["raw"] := "\"prototype\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["object"] := __n61;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "hasOwnProperty";
__n64["raw"] := "\"hasOwnProperty\"";
__n60["property"] := __n64;
__n60["computed"] := true;
__n59["object"] := __n60;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "call";
__n65["raw"] := "\"call\"";
__n59["property"] := __n65;
__n59["computed"] := true;
__n58["callee"] := __n59;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "arr";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "0";
__n68["raw"] := "\"0\"";
__n66 := [ __n67, __n68 ];
__n58["arguments"] := __n66;
__n57["argument"] := __n58;
__n57["prefix"] := true;
__n56["test"] := __n57;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "$ERROR";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "Expected hasOwnProperty to return true.";
__n75["raw"] := "\"Expected hasOwnProperty to return true.\"";
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n56["consequent"] := __n69;
__n56["alternate"] := null;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "AssignmentExpression";
__n77["operator"] := "=";
__n78 := {  };
__n78["type"] := "MemberExpression";
__n78["computed"] := true;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "arr";
__n78["object"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 0.;
__n80["raw"] := "0";
__n78["property"] := __n80;
__n77["left"] := __n78;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 101.;
__n81["raw"] := "101";
__n77["right"] := __n81;
__n76["expression"] := __n77;
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "verifyEqualTo";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "arr";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 0.;
__n87["raw"] := "0";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 101.;
__n88["raw"] := "101";
__n85 := [ __n86, __n87, __n88 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "!==";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "arr";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "verifySetter";
__n93["raw"] := "\"verifySetter\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n90["left"] := __n91;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := 101.;
__n94["raw"] := "101";
__n90["right"] := __n94;
__n89["test"] := __n90;
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "CallExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "$ERROR";
__n98["callee"] := __n99;
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "+";
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "Expected arr.verifySetter === 101, actually ";
__n102["raw"] := "'Expected arr.verifySetter === 101, actually '";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "arr";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "verifySetter";
__n105["raw"] := "\"verifySetter\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n101["right"] := __n103;
__n100 := [ __n101 ];
__n98["arguments"] := __n100;
__n97["expression"] := __n98;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n89["consequent"] := __n95;
__n89["alternate"] := null;
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "verifyNotConfigurable";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "arr";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 0.;
__n111["raw"] := "0";
__n109 := [ __n110, __n111 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n1 := [ __n2, __n8, __n14, __n56, __n76, __n82, __n89, __n106 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n112 := [ "arr" ];
__n0["variableDeclarations"] := __n112;
__n113 := [  ];
__n0["functionDeclarations"] := __n113;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}