function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arr";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "get_fun";
__n8["expression"] := __n9;
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Object";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "defineProperty";
__n14["raw"] := "\"defineProperty\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arr";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "0";
__n17["raw"] := "\"0\"";
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "get";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "FunctionExpression";
__n22["id"] := null;
__n23 := [  ];
__n22["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ReturnStatement";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 12.;
__n27["raw"] := "12";
__n26["argument"] := __n27;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n28 := [  ];
__n24["variableDeclarations"] := __n28;
__n29 := [  ];
__n24["functionDeclarations"] := __n29;
__n24["codeType"] := "function";
__n24["strict"] := false;
__n22["body"] := __n24;
__n22["generator"] := false;
__n22["expression"] := false;
__n22["async"] := false;
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "configurable";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := true;
__n32["raw"] := "true";
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n19 := [ __n20, __n30 ];
__n18["properties"] := __n19;
__n15 := [ __n16, __n17, __n18 ];
__n11["arguments"] := __n15;
__n10["expression"] := __n11;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Object";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "defineProperties";
__n37["raw"] := "\"defineProperties\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "arr";
__n40 := {  };
__n40["type"] := "ObjectExpression";
__n42 := {  };
__n42["type"] := "Property";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "0";
__n43["raw"] := "\"0\"";
__n42["key"] := __n43;
__n44 := {  };
__n44["type"] := "ObjectExpression";
__n46 := {  };
__n46["type"] := "Property";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "get";
__n46["key"] := __n47;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "get_fun";
__n46["value"] := __n48;
__n46["computed"] := false;
__n46["kind"] := "init";
__n46["shorthand"] := false;
__n45 := [ __n46 ];
__n44["properties"] := __n45;
__n42["value"] := __n44;
__n42["computed"] := false;
__n42["kind"] := "init";
__n42["shorthand"] := false;
__n41 := [ __n42 ];
__n40["properties"] := __n41;
__n38 := [ __n39, __n40 ];
__n34["arguments"] := __n38;
__n33["expression"] := __n34;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "verifyEqualTo";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "arr";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "0";
__n54["raw"] := "\"0\"";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "get_fun";
__n55["callee"] := __n56;
__n57 := [  ];
__n55["arguments"] := __n57;
__n52 := [ __n53, __n54, __n55 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "verifyNotEnumerable";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "arr";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "0";
__n63["raw"] := "\"0\"";
__n61 := [ __n62, __n63 ];
__n59["arguments"] := __n61;
__n58["expression"] := __n59;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "verifyConfigurable";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "arr";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "0";
__n69["raw"] := "\"0\"";
__n67 := [ __n68, __n69 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n1 := [ __n2, __n8, __n10, __n33, __n49, __n58, __n64 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n70 := [ "arr" ];
__n0["variableDeclarations"] := __n70;
__n72 := {  };
__n72["type"] := "FunctionDeclaration";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "get_fun";
__n72["id"] := __n73;
__n74 := [  ];
__n72["params"] := __n74;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ReturnStatement";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 36.;
__n78["raw"] := "36";
__n77["argument"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n79 := [  ];
__n75["variableDeclarations"] := __n79;
__n80 := [  ];
__n75["functionDeclarations"] := __n80;
__n75["codeType"] := "function";
__n75["strict"] := false;
__n72["body"] := __n75;
__n72["generator"] := false;
__n72["expression"] := false;
__n72["async"] := false;
__n71 := [ __n72 ];
__n0["functionDeclarations"] := __n71;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}