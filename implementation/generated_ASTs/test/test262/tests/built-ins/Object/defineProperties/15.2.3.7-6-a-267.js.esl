function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arr";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "get_fun";
__n8["expression"] := __n9;
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "set_fun";
__n10["expression"] := __n11;
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Object";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "defineProperties";
__n16["raw"] := "\"defineProperties\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "arr";
__n19 := {  };
__n19["type"] := "ObjectExpression";
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "property";
__n22["raw"] := "\"property\"";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "ObjectExpression";
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "get";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "get_fun";
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n28 := {  };
__n28["type"] := "Property";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "set";
__n28["key"] := __n29;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "set_fun";
__n28["value"] := __n30;
__n28["computed"] := false;
__n28["kind"] := "init";
__n28["shorthand"] := false;
__n31 := {  };
__n31["type"] := "Property";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "enumerable";
__n31["key"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := true;
__n33["raw"] := "true";
__n31["value"] := __n33;
__n31["computed"] := false;
__n31["kind"] := "init";
__n31["shorthand"] := false;
__n34 := {  };
__n34["type"] := "Property";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "configurable";
__n34["key"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := true;
__n36["raw"] := "true";
__n34["value"] := __n36;
__n34["computed"] := false;
__n34["kind"] := "init";
__n34["shorthand"] := false;
__n24 := [ __n25, __n28, __n31, __n34 ];
__n23["properties"] := __n24;
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n20 := [ __n21 ];
__n19["properties"] := __n20;
__n17 := [ __n18, __n19 ];
__n13["arguments"] := __n17;
__n12["expression"] := __n13;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "verifyEqualTo";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "arr";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "property";
__n42["raw"] := "\"property\"";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "get_fun";
__n43["callee"] := __n44;
__n45 := [  ];
__n43["arguments"] := __n45;
__n40 := [ __n41, __n42, __n43 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "verifyWritable";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "arr";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "property";
__n51["raw"] := "\"property\"";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "setVerifyHelpProp";
__n52["raw"] := "\"setVerifyHelpProp\"";
__n49 := [ __n50, __n51, __n52 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "verifyEnumerable";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "arr";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "property";
__n58["raw"] := "\"property\"";
__n56 := [ __n57, __n58 ];
__n54["arguments"] := __n56;
__n53["expression"] := __n54;
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "verifyConfigurable";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "arr";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "property";
__n64["raw"] := "\"property\"";
__n62 := [ __n63, __n64 ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n65 := {  };
__n65["type"] := "IfStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "arr";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "length";
__n69["raw"] := "\"length\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["left"] := __n67;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 0.;
__n70["raw"] := "0";
__n66["right"] := __n70;
__n65["test"] := __n66;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "$ERROR";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "Expected arr.length === 0, actually ";
__n78["raw"] := "'Expected arr.length === 0, actually '";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "arr";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "length";
__n81["raw"] := "\"length\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n77["right"] := __n79;
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n65["consequent"] := __n71;
__n65["alternate"] := null;
__n1 := [ __n2, __n8, __n10, __n12, __n37, __n46, __n53, __n59, __n65 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n82 := [ "arr" ];
__n0["variableDeclarations"] := __n82;
__n84 := {  };
__n84["type"] := "FunctionDeclaration";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "get_fun";
__n84["id"] := __n85;
__n86 := [  ];
__n84["params"] := __n86;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ReturnStatement";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 12.;
__n90["raw"] := "12";
__n89["argument"] := __n90;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n91 := [  ];
__n87["variableDeclarations"] := __n91;
__n92 := [  ];
__n87["functionDeclarations"] := __n92;
__n87["codeType"] := "function";
__n87["strict"] := false;
__n84["body"] := __n87;
__n84["generator"] := false;
__n84["expression"] := false;
__n84["async"] := false;
__n93 := {  };
__n93["type"] := "FunctionDeclaration";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "set_fun";
__n93["id"] := __n94;
__n95 := [ "value" ];
__n93["params"] := __n95;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "AssignmentExpression";
__n99["operator"] := "=";
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "arr";
__n100["object"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "setVerifyHelpProp";
__n102["raw"] := "\"setVerifyHelpProp\"";
__n100["property"] := __n102;
__n100["computed"] := true;
__n99["left"] := __n100;
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "value";
__n99["right"] := __n103;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n104 := [  ];
__n96["variableDeclarations"] := __n104;
__n105 := [  ];
__n96["functionDeclarations"] := __n105;
__n96["codeType"] := "function";
__n96["strict"] := false;
__n93["body"] := __n96;
__n93["generator"] := false;
__n93["expression"] := false;
__n93["async"] := false;
__n83 := [ __n84, __n93 ];
__n0["functionDeclarations"] := __n83;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}