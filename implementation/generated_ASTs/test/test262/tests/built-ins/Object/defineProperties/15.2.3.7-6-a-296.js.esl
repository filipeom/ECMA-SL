function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arg";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "FunctionExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "fun";
__n8["id"] := __n9;
__n10 := [  ];
__n8["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "AssignmentExpression";
__n14["operator"] := "=";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "arg";
__n14["left"] := __n15;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arguments";
__n14["right"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n17 := [  ];
__n11["variableDeclarations"] := __n17;
__n18 := [  ];
__n11["functionDeclarations"] := __n18;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n8["body"] := __n11;
__n8["generator"] := false;
__n8["expression"] := false;
__n8["async"] := false;
__n7["callee"] := __n8;
__n19 := [  ];
__n7["arguments"] := __n19;
__n6["expression"] := __n7;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Object";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "defineProperty";
__n24["raw"] := "\"defineProperty\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "arg";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "0";
__n27["raw"] := "\"0\"";
__n28 := {  };
__n28["type"] := "ObjectExpression";
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "value";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 0.;
__n32["raw"] := "0";
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n33 := {  };
__n33["type"] := "Property";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "writable";
__n33["key"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := false;
__n35["raw"] := "false";
__n33["value"] := __n35;
__n33["computed"] := false;
__n33["kind"] := "init";
__n33["shorthand"] := false;
__n36 := {  };
__n36["type"] := "Property";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "enumerable";
__n36["key"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := true;
__n38["raw"] := "true";
__n36["value"] := __n38;
__n36["computed"] := false;
__n36["kind"] := "init";
__n36["shorthand"] := false;
__n39 := {  };
__n39["type"] := "Property";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "configurable";
__n39["key"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := false;
__n41["raw"] := "false";
__n39["value"] := __n41;
__n39["computed"] := false;
__n39["kind"] := "init";
__n39["shorthand"] := false;
__n29 := [ __n30, __n33, __n36, __n39 ];
__n28["properties"] := __n29;
__n25 := [ __n26, __n27, __n28 ];
__n21["arguments"] := __n25;
__n20["expression"] := __n21;
__n42 := {  };
__n42["type"] := "TryStatement";
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "Object";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "defineProperties";
__n49["raw"] := "\"defineProperties\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "arg";
__n52 := {  };
__n52["type"] := "ObjectExpression";
__n54 := {  };
__n54["type"] := "Property";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "0";
__n55["raw"] := "\"0\"";
__n54["key"] := __n55;
__n56 := {  };
__n56["type"] := "ObjectExpression";
__n58 := {  };
__n58["type"] := "Property";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "enumerable";
__n58["key"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := false;
__n60["raw"] := "false";
__n58["value"] := __n60;
__n58["computed"] := false;
__n58["kind"] := "init";
__n58["shorthand"] := false;
__n57 := [ __n58 ];
__n56["properties"] := __n57;
__n54["value"] := __n56;
__n54["computed"] := false;
__n54["kind"] := "init";
__n54["shorthand"] := false;
__n53 := [ __n54 ];
__n52["properties"] := __n53;
__n50 := [ __n51, __n52 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "Expected an exception.";
__n65["raw"] := "\"Expected an exception.\"";
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n44 := [ __n45, __n61 ];
__n43["body"] := __n44;
__n42["block"] := __n43;
__n66 := {  };
__n66["type"] := "CatchClause";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "e";
__n66["param"] := __n67;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "verifyEqualTo";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "arg";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "0";
__n75["raw"] := "\"0\"";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 0.;
__n76["raw"] := "0";
__n73 := [ __n74, __n75, __n76 ];
__n71["arguments"] := __n73;
__n70["expression"] := __n71;
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "verifyNotWritable";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "arg";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "0";
__n82["raw"] := "\"0\"";
__n80 := [ __n81, __n82 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "verifyEnumerable";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "arg";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "0";
__n88["raw"] := "\"0\"";
__n86 := [ __n87, __n88 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "verifyNotConfigurable";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "arg";
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "0";
__n94["raw"] := "\"0\"";
__n92 := [ __n93, __n94 ];
__n90["arguments"] := __n92;
__n89["expression"] := __n90;
__n95 := {  };
__n95["type"] := "IfStatement";
__n96 := {  };
__n96["type"] := "UnaryExpression";
__n96["operator"] := "!";
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "instanceof";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "e";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "TypeError";
__n97["right"] := __n99;
__n96["argument"] := __n97;
__n96["prefix"] := true;
__n95["test"] := __n96;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "$ERROR";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "+";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "Expected TypeError, got ";
__n107["raw"] := "\"Expected TypeError, got \"";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "e";
__n106["right"] := __n108;
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n102["expression"] := __n103;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n95["consequent"] := __n100;
__n95["alternate"] := null;
__n69 := [ __n70, __n77, __n83, __n89, __n95 ];
__n68["body"] := __n69;
__n66["body"] := __n68;
__n42["handler"] := __n66;
__n42["finalizer"] := null;
__n1 := [ __n2, __n6, __n20, __n42 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n109 := [ "arg" ];
__n0["variableDeclarations"] := __n109;
__n110 := [  ];
__n0["functionDeclarations"] := __n110;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}