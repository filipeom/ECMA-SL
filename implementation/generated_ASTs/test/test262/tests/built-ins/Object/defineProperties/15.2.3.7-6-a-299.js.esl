function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arg";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "FunctionExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "fun";
__n8["id"] := __n9;
__n10 := [  ];
__n8["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "AssignmentExpression";
__n14["operator"] := "=";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "arg";
__n14["left"] := __n15;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arguments";
__n14["right"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n17 := [  ];
__n11["variableDeclarations"] := __n17;
__n18 := [  ];
__n11["functionDeclarations"] := __n18;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n8["body"] := __n11;
__n8["generator"] := false;
__n8["expression"] := false;
__n8["async"] := false;
__n7["callee"] := __n8;
__n19 := [  ];
__n7["arguments"] := __n19;
__n6["expression"] := __n7;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "get_func";
__n20["expression"] := __n21;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Object";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "defineProperty";
__n26["raw"] := "\"defineProperty\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "arg";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "0";
__n29["raw"] := "\"0\"";
__n30 := {  };
__n30["type"] := "ObjectExpression";
__n32 := {  };
__n32["type"] := "Property";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "get";
__n32["key"] := __n33;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "get_func";
__n32["value"] := __n34;
__n32["computed"] := false;
__n32["kind"] := "init";
__n32["shorthand"] := false;
__n35 := {  };
__n35["type"] := "Property";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "set";
__n35["key"] := __n36;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "undefined";
__n35["value"] := __n37;
__n35["computed"] := false;
__n35["kind"] := "init";
__n35["shorthand"] := false;
__n38 := {  };
__n38["type"] := "Property";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "enumerable";
__n38["key"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := false;
__n40["raw"] := "false";
__n38["value"] := __n40;
__n38["computed"] := false;
__n38["kind"] := "init";
__n38["shorthand"] := false;
__n41 := {  };
__n41["type"] := "Property";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "configurable";
__n41["key"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := false;
__n43["raw"] := "false";
__n41["value"] := __n43;
__n41["computed"] := false;
__n41["kind"] := "init";
__n41["shorthand"] := false;
__n31 := [ __n32, __n35, __n38, __n41 ];
__n30["properties"] := __n31;
__n27 := [ __n28, __n29, __n30 ];
__n23["arguments"] := __n27;
__n22["expression"] := __n23;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "set_func";
__n44["expression"] := __n45;
__n46 := {  };
__n46["type"] := "TryStatement";
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Object";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "defineProperties";
__n53["raw"] := "\"defineProperties\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["callee"] := __n51;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "arg";
__n56 := {  };
__n56["type"] := "ObjectExpression";
__n58 := {  };
__n58["type"] := "Property";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "0";
__n59["raw"] := "\"0\"";
__n58["key"] := __n59;
__n60 := {  };
__n60["type"] := "ObjectExpression";
__n62 := {  };
__n62["type"] := "Property";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "set";
__n62["key"] := __n63;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "set_func";
__n62["value"] := __n64;
__n62["computed"] := false;
__n62["kind"] := "init";
__n62["shorthand"] := false;
__n61 := [ __n62 ];
__n60["properties"] := __n61;
__n58["value"] := __n60;
__n58["computed"] := false;
__n58["kind"] := "init";
__n58["shorthand"] := false;
__n57 := [ __n58 ];
__n56["properties"] := __n57;
__n54 := [ __n55, __n56 ];
__n50["arguments"] := __n54;
__n49["expression"] := __n50;
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$ERROR";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "Expected an exception.";
__n69["raw"] := "\"Expected an exception.\"";
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n48 := [ __n49, __n65 ];
__n47["body"] := __n48;
__n46["block"] := __n47;
__n70 := {  };
__n70["type"] := "CatchClause";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "e";
__n70["param"] := __n71;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "verifyEqualTo";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "arg";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "0";
__n79["raw"] := "\"0\"";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "get_func";
__n80["callee"] := __n81;
__n82 := [  ];
__n80["arguments"] := __n82;
__n77 := [ __n78, __n79, __n80 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "verifyNotEnumerable";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "arg";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "0";
__n88["raw"] := "\"0\"";
__n86 := [ __n87, __n88 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "verifyNotConfigurable";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "arg";
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "0";
__n94["raw"] := "\"0\"";
__n92 := [ __n93, __n94 ];
__n90["arguments"] := __n92;
__n89["expression"] := __n90;
__n95 := {  };
__n95["type"] := "IfStatement";
__n96 := {  };
__n96["type"] := "UnaryExpression";
__n96["operator"] := "!";
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "instanceof";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "e";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "TypeError";
__n97["right"] := __n99;
__n96["argument"] := __n97;
__n96["prefix"] := true;
__n95["test"] := __n96;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "$ERROR";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "+";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "Expected TypeError, got ";
__n107["raw"] := "\"Expected TypeError, got \"";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "e";
__n106["right"] := __n108;
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n102["expression"] := __n103;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n95["consequent"] := __n100;
__n95["alternate"] := null;
__n73 := [ __n74, __n83, __n89, __n95 ];
__n72["body"] := __n73;
__n70["body"] := __n72;
__n46["handler"] := __n70;
__n46["finalizer"] := null;
__n1 := [ __n2, __n6, __n20, __n22, __n44, __n46 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n109 := [ "arg" ];
__n0["variableDeclarations"] := __n109;
__n111 := {  };
__n111["type"] := "FunctionDeclaration";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "get_func";
__n111["id"] := __n112;
__n113 := [  ];
__n111["params"] := __n113;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n116 := {  };
__n116["type"] := "ReturnStatement";
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 0.;
__n117["raw"] := "0";
__n116["argument"] := __n117;
__n115 := [ __n116 ];
__n114["body"] := __n115;
__n118 := [  ];
__n114["variableDeclarations"] := __n118;
__n119 := [  ];
__n114["functionDeclarations"] := __n119;
__n114["codeType"] := "function";
__n114["strict"] := false;
__n111["body"] := __n114;
__n111["generator"] := false;
__n111["expression"] := false;
__n111["async"] := false;
__n120 := {  };
__n120["type"] := "FunctionDeclaration";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "set_func";
__n120["id"] := __n121;
__n122 := [ "value" ];
__n120["params"] := __n122;
__n123 := {  };
__n123["type"] := "BlockStatement";
__n125 := {  };
__n125["type"] := "ExpressionStatement";
__n126 := {  };
__n126["type"] := "AssignmentExpression";
__n126["operator"] := "=";
__n127 := {  };
__n127["type"] := "MemberExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "arg";
__n127["object"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "setVerifyHelpProp";
__n129["raw"] := "\"setVerifyHelpProp\"";
__n127["property"] := __n129;
__n127["computed"] := true;
__n126["left"] := __n127;
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "value";
__n126["right"] := __n130;
__n125["expression"] := __n126;
__n124 := [ __n125 ];
__n123["body"] := __n124;
__n131 := [  ];
__n123["variableDeclarations"] := __n131;
__n132 := [  ];
__n123["functionDeclarations"] := __n132;
__n123["codeType"] := "function";
__n123["strict"] := false;
__n120["body"] := __n123;
__n120["generator"] := false;
__n120["expression"] := false;
__n120["async"] := false;
__n110 := [ __n111, __n120 ];
__n0["functionDeclarations"] := __n110;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}