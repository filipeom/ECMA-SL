function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arg";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "FunctionExpression";
__n7["id"] := null;
__n8 := [  ];
__n7["params"] := __n8;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ReturnStatement";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arguments";
__n11["argument"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n13 := [  ];
__n9["variableDeclarations"] := __n13;
__n14 := [  ];
__n9["functionDeclarations"] := __n14;
__n9["codeType"] := "function";
__n9["strict"] := false;
__n7["body"] := __n9;
__n7["generator"] := false;
__n7["expression"] := false;
__n7["async"] := false;
__n6["callee"] := __n7;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 2.;
__n17["raw"] := "2";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 3.;
__n18["raw"] := "3";
__n15 := [ __n16, __n17, __n18 ];
__n6["arguments"] := __n15;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Object";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "defineProperty";
__n23["raw"] := "\"defineProperty\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "arg";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "genericProperty";
__n26["raw"] := "\"genericProperty\"";
__n27 := {  };
__n27["type"] := "ObjectExpression";
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "value";
__n29["key"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 1001.;
__n31["raw"] := "1001";
__n29["value"] := __n31;
__n29["computed"] := false;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n32 := {  };
__n32["type"] := "Property";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "writable";
__n32["key"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := false;
__n34["raw"] := "false";
__n32["value"] := __n34;
__n32["computed"] := false;
__n32["kind"] := "init";
__n32["shorthand"] := false;
__n35 := {  };
__n35["type"] := "Property";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "configurable";
__n35["key"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := false;
__n37["raw"] := "false";
__n35["value"] := __n37;
__n35["computed"] := false;
__n35["kind"] := "init";
__n35["shorthand"] := false;
__n28 := [ __n29, __n32, __n35 ];
__n27["properties"] := __n28;
__n24 := [ __n25, __n26, __n27 ];
__n20["arguments"] := __n24;
__n19["expression"] := __n20;
__n38 := {  };
__n38["type"] := "TryStatement";
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Object";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "defineProperties";
__n45["raw"] := "\"defineProperties\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "arg";
__n48 := {  };
__n48["type"] := "ObjectExpression";
__n50 := {  };
__n50["type"] := "Property";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "genericProperty";
__n51["raw"] := "\"genericProperty\"";
__n50["key"] := __n51;
__n52 := {  };
__n52["type"] := "ObjectExpression";
__n54 := {  };
__n54["type"] := "Property";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "value";
__n54["key"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 1002.;
__n56["raw"] := "1002";
__n54["value"] := __n56;
__n54["computed"] := false;
__n54["kind"] := "init";
__n54["shorthand"] := false;
__n53 := [ __n54 ];
__n52["properties"] := __n53;
__n50["value"] := __n52;
__n50["computed"] := false;
__n50["kind"] := "init";
__n50["shorthand"] := false;
__n49 := [ __n50 ];
__n48["properties"] := __n49;
__n46 := [ __n47, __n48 ];
__n42["arguments"] := __n46;
__n41["expression"] := __n42;
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "Expected an exception.";
__n61["raw"] := "\"Expected an exception.\"";
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n40 := [ __n41, __n57 ];
__n39["body"] := __n40;
__n38["block"] := __n39;
__n62 := {  };
__n62["type"] := "CatchClause";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "e";
__n62["param"] := __n63;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "verifyEqualTo";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "arg";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "genericProperty";
__n71["raw"] := "\"genericProperty\"";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1001.;
__n72["raw"] := "1001";
__n69 := [ __n70, __n71, __n72 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "verifyNotWritable";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "arg";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "genericProperty";
__n78["raw"] := "\"genericProperty\"";
__n76 := [ __n77, __n78 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "verifyNotEnumerable";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "arg";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "genericProperty";
__n84["raw"] := "\"genericProperty\"";
__n82 := [ __n83, __n84 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "verifyNotConfigurable";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "arg";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "genericProperty";
__n90["raw"] := "\"genericProperty\"";
__n88 := [ __n89, __n90 ];
__n86["arguments"] := __n88;
__n85["expression"] := __n86;
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "UnaryExpression";
__n92["operator"] := "!";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "instanceof";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "e";
__n93["left"] := __n94;
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "TypeError";
__n93["right"] := __n95;
__n92["argument"] := __n93;
__n92["prefix"] := true;
__n91["test"] := __n92;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "$ERROR";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "+";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "Expected TypeError, got ";
__n103["raw"] := "\"Expected TypeError, got \"";
__n102["left"] := __n103;
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "e";
__n102["right"] := __n104;
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n91["consequent"] := __n96;
__n91["alternate"] := null;
__n65 := [ __n66, __n73, __n79, __n85, __n91 ];
__n64["body"] := __n65;
__n62["body"] := __n64;
__n38["handler"] := __n62;
__n38["finalizer"] := null;
__n1 := [ __n2, __n19, __n38 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n105 := [ "arg" ];
__n0["variableDeclarations"] := __n105;
__n106 := [  ];
__n0["functionDeclarations"] := __n106;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}