function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arg";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "FunctionExpression";
__n7["id"] := null;
__n8 := [  ];
__n7["params"] := __n8;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ReturnStatement";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arguments";
__n11["argument"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n13 := [  ];
__n9["variableDeclarations"] := __n13;
__n14 := [  ];
__n9["functionDeclarations"] := __n14;
__n9["codeType"] := "function";
__n9["strict"] := false;
__n7["body"] := __n9;
__n7["generator"] := false;
__n7["expression"] := false;
__n7["async"] := false;
__n6["callee"] := __n7;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 2.;
__n17["raw"] := "2";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 3.;
__n18["raw"] := "3";
__n15 := [ __n16, __n17, __n18 ];
__n6["arguments"] := __n15;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Object";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "defineProperty";
__n23["raw"] := "\"defineProperty\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "arg";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "genericProperty";
__n26["raw"] := "\"genericProperty\"";
__n27 := {  };
__n27["type"] := "ObjectExpression";
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "writable";
__n29["key"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := false;
__n31["raw"] := "false";
__n29["value"] := __n31;
__n29["computed"] := false;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n32 := {  };
__n32["type"] := "Property";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "configurable";
__n32["key"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := false;
__n34["raw"] := "false";
__n32["value"] := __n34;
__n32["computed"] := false;
__n32["kind"] := "init";
__n32["shorthand"] := false;
__n28 := [ __n29, __n32 ];
__n27["properties"] := __n28;
__n24 := [ __n25, __n26, __n27 ];
__n20["arguments"] := __n24;
__n19["expression"] := __n20;
__n35 := {  };
__n35["type"] := "TryStatement";
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Object";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "defineProperties";
__n42["raw"] := "\"defineProperties\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "arg";
__n45 := {  };
__n45["type"] := "ObjectExpression";
__n47 := {  };
__n47["type"] := "Property";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "genericProperty";
__n48["raw"] := "\"genericProperty\"";
__n47["key"] := __n48;
__n49 := {  };
__n49["type"] := "ObjectExpression";
__n51 := {  };
__n51["type"] := "Property";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "writable";
__n51["key"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := true;
__n53["raw"] := "true";
__n51["value"] := __n53;
__n51["computed"] := false;
__n51["kind"] := "init";
__n51["shorthand"] := false;
__n50 := [ __n51 ];
__n49["properties"] := __n50;
__n47["value"] := __n49;
__n47["computed"] := false;
__n47["kind"] := "init";
__n47["shorthand"] := false;
__n46 := [ __n47 ];
__n45["properties"] := __n46;
__n43 := [ __n44, __n45 ];
__n39["arguments"] := __n43;
__n38["expression"] := __n39;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "Expected an exception.";
__n58["raw"] := "\"Expected an exception.\"";
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n37 := [ __n38, __n54 ];
__n36["body"] := __n37;
__n35["block"] := __n36;
__n59 := {  };
__n59["type"] := "CatchClause";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "e";
__n59["param"] := __n60;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "verifyEqualTo";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "arg";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "genericProperty";
__n68["raw"] := "\"genericProperty\"";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "undefined";
__n66 := [ __n67, __n68, __n69 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "verifyNotWritable";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "arg";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "genericProperty";
__n75["raw"] := "\"genericProperty\"";
__n73 := [ __n74, __n75 ];
__n71["arguments"] := __n73;
__n70["expression"] := __n71;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "verifyNotEnumerable";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "arg";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "genericProperty";
__n81["raw"] := "\"genericProperty\"";
__n79 := [ __n80, __n81 ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "verifyNotConfigurable";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "arg";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "genericProperty";
__n87["raw"] := "\"genericProperty\"";
__n85 := [ __n86, __n87 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n88 := {  };
__n88["type"] := "IfStatement";
__n89 := {  };
__n89["type"] := "UnaryExpression";
__n89["operator"] := "!";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "instanceof";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "e";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "TypeError";
__n90["right"] := __n92;
__n89["argument"] := __n90;
__n89["prefix"] := true;
__n88["test"] := __n89;
__n93 := {  };
__n93["type"] := "BlockStatement";
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "CallExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "$ERROR";
__n96["callee"] := __n97;
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "+";
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "Expected TypeError, got ";
__n100["raw"] := "\"Expected TypeError, got \"";
__n99["left"] := __n100;
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "e";
__n99["right"] := __n101;
__n98 := [ __n99 ];
__n96["arguments"] := __n98;
__n95["expression"] := __n96;
__n94 := [ __n95 ];
__n93["body"] := __n94;
__n88["consequent"] := __n93;
__n88["alternate"] := null;
__n62 := [ __n63, __n70, __n76, __n82, __n88 ];
__n61["body"] := __n62;
__n59["body"] := __n61;
__n35["handler"] := __n59;
__n35["finalizer"] := null;
__n1 := [ __n2, __n19, __n35 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n102 := [ "arg" ];
__n0["variableDeclarations"] := __n102;
__n103 := [  ];
__n0["functionDeclarations"] := __n103;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}