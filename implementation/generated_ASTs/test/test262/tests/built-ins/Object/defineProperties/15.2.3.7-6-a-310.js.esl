function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arg";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "FunctionExpression";
__n7["id"] := null;
__n8 := [  ];
__n7["params"] := __n8;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ReturnStatement";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arguments";
__n11["argument"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n13 := [  ];
__n9["variableDeclarations"] := __n13;
__n14 := [  ];
__n9["functionDeclarations"] := __n14;
__n9["codeType"] := "function";
__n9["strict"] := false;
__n7["body"] := __n9;
__n7["generator"] := false;
__n7["expression"] := false;
__n7["async"] := false;
__n6["callee"] := __n7;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 2.;
__n17["raw"] := "2";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 3.;
__n18["raw"] := "3";
__n15 := [ __n16, __n17, __n18 ];
__n6["arguments"] := __n15;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "getFun";
__n19["expression"] := __n20;
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "setFun";
__n21["expression"] := __n22;
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Object";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "defineProperty";
__n27["raw"] := "\"defineProperty\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "arg";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "genericProperty";
__n30["raw"] := "\"genericProperty\"";
__n31 := {  };
__n31["type"] := "ObjectExpression";
__n33 := {  };
__n33["type"] := "Property";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "get";
__n33["key"] := __n34;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "getFun";
__n33["value"] := __n35;
__n33["computed"] := false;
__n33["kind"] := "init";
__n33["shorthand"] := false;
__n36 := {  };
__n36["type"] := "Property";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "set";
__n36["key"] := __n37;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "setFun";
__n36["value"] := __n38;
__n36["computed"] := false;
__n36["kind"] := "init";
__n36["shorthand"] := false;
__n39 := {  };
__n39["type"] := "Property";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "configurable";
__n39["key"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := false;
__n41["raw"] := "false";
__n39["value"] := __n41;
__n39["computed"] := false;
__n39["kind"] := "init";
__n39["shorthand"] := false;
__n32 := [ __n33, __n36, __n39 ];
__n31["properties"] := __n32;
__n28 := [ __n29, __n30, __n31 ];
__n24["arguments"] := __n28;
__n23["expression"] := __n24;
__n42 := {  };
__n42["type"] := "TryStatement";
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "Object";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "defineProperties";
__n49["raw"] := "\"defineProperties\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "arg";
__n52 := {  };
__n52["type"] := "ObjectExpression";
__n54 := {  };
__n54["type"] := "Property";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "genericProperty";
__n55["raw"] := "\"genericProperty\"";
__n54["key"] := __n55;
__n56 := {  };
__n56["type"] := "ObjectExpression";
__n58 := {  };
__n58["type"] := "Property";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "get";
__n58["key"] := __n59;
__n60 := {  };
__n60["type"] := "FunctionExpression";
__n60["id"] := null;
__n61 := [  ];
__n60["params"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ReturnStatement";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "overideGenericPropertyString";
__n65["raw"] := "\"overideGenericPropertyString\"";
__n64["argument"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n66 := [  ];
__n62["variableDeclarations"] := __n66;
__n67 := [  ];
__n62["functionDeclarations"] := __n67;
__n62["codeType"] := "function";
__n62["strict"] := false;
__n60["body"] := __n62;
__n60["generator"] := false;
__n60["expression"] := false;
__n60["async"] := false;
__n58["value"] := __n60;
__n58["computed"] := false;
__n58["kind"] := "init";
__n58["shorthand"] := false;
__n57 := [ __n58 ];
__n56["properties"] := __n57;
__n54["value"] := __n56;
__n54["computed"] := false;
__n54["kind"] := "init";
__n54["shorthand"] := false;
__n53 := [ __n54 ];
__n52["properties"] := __n53;
__n50 := [ __n51, __n52 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "Expected an exception.";
__n72["raw"] := "\"Expected an exception.\"";
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n44 := [ __n45, __n68 ];
__n43["body"] := __n44;
__n42["block"] := __n43;
__n73 := {  };
__n73["type"] := "CatchClause";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "e";
__n73["param"] := __n74;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "verifyEqualTo";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "arg";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "genericProperty";
__n82["raw"] := "\"genericProperty\"";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "getFun";
__n83["callee"] := __n84;
__n85 := [  ];
__n83["arguments"] := __n85;
__n80 := [ __n81, __n82, __n83 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "verifyWritable";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "arg";
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "genericProperty";
__n91["raw"] := "\"genericProperty\"";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "verifySetFun";
__n92["raw"] := "\"verifySetFun\"";
__n89 := [ __n90, __n91, __n92 ];
__n87["arguments"] := __n89;
__n86["expression"] := __n87;
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "verifyNotEnumerable";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "arg";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "genericProperty";
__n98["raw"] := "\"genericProperty\"";
__n96 := [ __n97, __n98 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "verifyNotConfigurable";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "arg";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "genericProperty";
__n104["raw"] := "\"genericProperty\"";
__n102 := [ __n103, __n104 ];
__n100["arguments"] := __n102;
__n99["expression"] := __n100;
__n105 := {  };
__n105["type"] := "IfStatement";
__n106 := {  };
__n106["type"] := "UnaryExpression";
__n106["operator"] := "!";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "instanceof";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "e";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "TypeError";
__n107["right"] := __n109;
__n106["argument"] := __n107;
__n106["prefix"] := true;
__n105["test"] := __n106;
__n110 := {  };
__n110["type"] := "BlockStatement";
__n112 := {  };
__n112["type"] := "ExpressionStatement";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "$ERROR";
__n113["callee"] := __n114;
__n116 := {  };
__n116["type"] := "BinaryExpression";
__n116["operator"] := "+";
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "Expected TypeError, got ";
__n117["raw"] := "\"Expected TypeError, got \"";
__n116["left"] := __n117;
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "e";
__n116["right"] := __n118;
__n115 := [ __n116 ];
__n113["arguments"] := __n115;
__n112["expression"] := __n113;
__n111 := [ __n112 ];
__n110["body"] := __n111;
__n105["consequent"] := __n110;
__n105["alternate"] := null;
__n76 := [ __n77, __n86, __n93, __n99, __n105 ];
__n75["body"] := __n76;
__n73["body"] := __n75;
__n42["handler"] := __n73;
__n42["finalizer"] := null;
__n1 := [ __n2, __n19, __n21, __n23, __n42 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n119 := [ "arg" ];
__n0["variableDeclarations"] := __n119;
__n121 := {  };
__n121["type"] := "FunctionDeclaration";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "getFun";
__n121["id"] := __n122;
__n123 := [  ];
__n121["params"] := __n123;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "ReturnStatement";
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "genericPropertyString";
__n127["raw"] := "\"genericPropertyString\"";
__n126["argument"] := __n127;
__n125 := [ __n126 ];
__n124["body"] := __n125;
__n128 := [  ];
__n124["variableDeclarations"] := __n128;
__n129 := [  ];
__n124["functionDeclarations"] := __n129;
__n124["codeType"] := "function";
__n124["strict"] := false;
__n121["body"] := __n124;
__n121["generator"] := false;
__n121["expression"] := false;
__n121["async"] := false;
__n130 := {  };
__n130["type"] := "FunctionDeclaration";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "setFun";
__n130["id"] := __n131;
__n132 := [ "value" ];
__n130["params"] := __n132;
__n133 := {  };
__n133["type"] := "BlockStatement";
__n135 := {  };
__n135["type"] := "ExpressionStatement";
__n136 := {  };
__n136["type"] := "AssignmentExpression";
__n136["operator"] := "=";
__n137 := {  };
__n137["type"] := "MemberExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "arg";
__n137["object"] := __n138;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "verifySetFun";
__n139["raw"] := "\"verifySetFun\"";
__n137["property"] := __n139;
__n137["computed"] := true;
__n136["left"] := __n137;
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "value";
__n136["right"] := __n140;
__n135["expression"] := __n136;
__n134 := [ __n135 ];
__n133["body"] := __n134;
__n141 := [  ];
__n133["variableDeclarations"] := __n141;
__n142 := [  ];
__n133["functionDeclarations"] := __n142;
__n133["codeType"] := "function";
__n133["strict"] := false;
__n130["body"] := __n133;
__n130["generator"] := false;
__n130["expression"] := false;
__n130["async"] := false;
__n120 := [ __n121, __n130 ];
__n0["functionDeclarations"] := __n120;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}