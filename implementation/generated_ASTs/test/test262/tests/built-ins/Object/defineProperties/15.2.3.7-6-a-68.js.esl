function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "defineProperty";
__n12["raw"] := "\"defineProperty\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "obj";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "foo";
__n15["raw"] := "\"foo\"";
__n16 := {  };
__n16["type"] := "ObjectExpression";
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "value";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 10.;
__n20["raw"] := "10";
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "configurable";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := false;
__n23["raw"] := "false";
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n17 := [ __n18, __n21 ];
__n16["properties"] := __n17;
__n13 := [ __n14, __n15, __n16 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "get_func";
__n24["expression"] := __n25;
__n26 := {  };
__n26["type"] := "TryStatement";
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Object";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "defineProperties";
__n33["raw"] := "\"defineProperties\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "obj";
__n36 := {  };
__n36["type"] := "ObjectExpression";
__n38 := {  };
__n38["type"] := "Property";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "foo";
__n38["key"] := __n39;
__n40 := {  };
__n40["type"] := "ObjectExpression";
__n42 := {  };
__n42["type"] := "Property";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "get";
__n42["key"] := __n43;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "get_func";
__n42["value"] := __n44;
__n42["computed"] := false;
__n42["kind"] := "init";
__n42["shorthand"] := false;
__n41 := [ __n42 ];
__n40["properties"] := __n41;
__n38["value"] := __n40;
__n38["computed"] := false;
__n38["kind"] := "init";
__n38["shorthand"] := false;
__n37 := [ __n38 ];
__n36["properties"] := __n37;
__n34 := [ __n35, __n36 ];
__n30["arguments"] := __n34;
__n29["expression"] := __n30;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "Expected an exception.";
__n49["raw"] := "\"Expected an exception.\"";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n28 := [ __n29, __n45 ];
__n27["body"] := __n28;
__n26["block"] := __n27;
__n50 := {  };
__n50["type"] := "CatchClause";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "e";
__n50["param"] := __n51;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "verifyEqualTo";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "obj";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "foo";
__n59["raw"] := "\"foo\"";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 10.;
__n60["raw"] := "10";
__n57 := [ __n58, __n59, __n60 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "verifyNotWritable";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "obj";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "foo";
__n66["raw"] := "\"foo\"";
__n64 := [ __n65, __n66 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "verifyNotEnumerable";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "obj";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "foo";
__n72["raw"] := "\"foo\"";
__n70 := [ __n71, __n72 ];
__n68["arguments"] := __n70;
__n67["expression"] := __n68;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "verifyNotConfigurable";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "obj";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "foo";
__n78["raw"] := "\"foo\"";
__n76 := [ __n77, __n78 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "UnaryExpression";
__n80["operator"] := "!";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "instanceof";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "e";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "TypeError";
__n81["right"] := __n83;
__n80["argument"] := __n81;
__n80["prefix"] := true;
__n79["test"] := __n80;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "$ERROR";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "+";
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "Expected TypeError, got ";
__n91["raw"] := "\"Expected TypeError, got \"";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "e";
__n90["right"] := __n92;
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86["expression"] := __n87;
__n85 := [ __n86 ];
__n84["body"] := __n85;
__n79["consequent"] := __n84;
__n79["alternate"] := null;
__n53 := [ __n54, __n61, __n67, __n73, __n79 ];
__n52["body"] := __n53;
__n50["body"] := __n52;
__n26["handler"] := __n50;
__n26["finalizer"] := null;
__n1 := [ __n2, __n8, __n24, __n26 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n93 := [ "obj" ];
__n0["variableDeclarations"] := __n93;
__n95 := {  };
__n95["type"] := "FunctionDeclaration";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "get_func";
__n95["id"] := __n96;
__n97 := [  ];
__n95["params"] := __n97;
__n98 := {  };
__n98["type"] := "BlockStatement";
__n100 := {  };
__n100["type"] := "ReturnStatement";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 11.;
__n101["raw"] := "11";
__n100["argument"] := __n101;
__n99 := [ __n100 ];
__n98["body"] := __n99;
__n102 := [  ];
__n98["variableDeclarations"] := __n102;
__n103 := [  ];
__n98["functionDeclarations"] := __n103;
__n98["codeType"] := "function";
__n98["strict"] := false;
__n95["body"] := __n98;
__n95["generator"] := false;
__n95["expression"] := false;
__n95["async"] := false;
__n94 := [ __n95 ];
__n0["functionDeclarations"] := __n94;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}