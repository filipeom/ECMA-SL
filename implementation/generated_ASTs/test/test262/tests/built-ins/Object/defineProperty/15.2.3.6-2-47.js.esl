function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "toStringAccessed";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := false;
__n12["raw"] := "false";
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "valueOfAccessed";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := false;
__n17["raw"] := "false";
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "ownProp";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "ObjectExpression";
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "toString";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "FunctionExpression";
__n26["id"] := null;
__n27 := [  ];
__n26["params"] := __n27;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "AssignmentExpression";
__n31["operator"] := "=";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "toStringAccessed";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := true;
__n33["raw"] := "true";
__n31["right"] := __n33;
__n30["expression"] := __n31;
__n34 := {  };
__n34["type"] := "ReturnStatement";
__n35 := {  };
__n35["type"] := "ObjectExpression";
__n36 := [  ];
__n35["properties"] := __n36;
__n34["argument"] := __n35;
__n29 := [ __n30, __n34 ];
__n28["body"] := __n29;
__n37 := [  ];
__n28["variableDeclarations"] := __n37;
__n38 := [  ];
__n28["functionDeclarations"] := __n38;
__n28["codeType"] := "function";
__n28["strict"] := false;
__n26["body"] := __n28;
__n26["generator"] := false;
__n26["async"] := false;
__n26["expression"] := false;
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n39 := {  };
__n39["type"] := "Property";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "valueOf";
__n39["key"] := __n40;
__n41 := {  };
__n41["type"] := "FunctionExpression";
__n41["id"] := null;
__n42 := [  ];
__n41["params"] := __n42;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "AssignmentExpression";
__n46["operator"] := "=";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "valueOfAccessed";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := true;
__n48["raw"] := "true";
__n46["right"] := __n48;
__n45["expression"] := __n46;
__n49 := {  };
__n49["type"] := "ReturnStatement";
__n50 := {  };
__n50["type"] := "ObjectExpression";
__n51 := [  ];
__n50["properties"] := __n51;
__n49["argument"] := __n50;
__n44 := [ __n45, __n49 ];
__n43["body"] := __n44;
__n52 := [  ];
__n43["variableDeclarations"] := __n52;
__n53 := [  ];
__n43["functionDeclarations"] := __n53;
__n43["codeType"] := "function";
__n43["strict"] := false;
__n41["body"] := __n43;
__n41["generator"] := false;
__n41["async"] := false;
__n41["expression"] := false;
__n39["value"] := __n41;
__n39["computed"] := false;
__n39["kind"] := "init";
__n39["shorthand"] := false;
__n23 := [ __n24, __n39 ];
__n22["properties"] := __n23;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "assert";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "throws";
__n58["raw"] := "\"throws\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "TypeError";
__n61 := {  };
__n61["type"] := "FunctionExpression";
__n61["id"] := null;
__n62 := [  ];
__n61["params"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "Object";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "defineProperty";
__n69["raw"] := "\"defineProperty\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["callee"] := __n67;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "obj";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "ownProp";
__n73 := {  };
__n73["type"] := "ObjectExpression";
__n74 := [  ];
__n73["properties"] := __n74;
__n70 := [ __n71, __n72, __n73 ];
__n66["arguments"] := __n70;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n75 := [  ];
__n63["variableDeclarations"] := __n75;
__n76 := [  ];
__n63["functionDeclarations"] := __n76;
__n63["codeType"] := "function";
__n63["strict"] := false;
__n61["body"] := __n63;
__n61["generator"] := false;
__n61["async"] := false;
__n61["expression"] := false;
__n59 := [ __n60, __n61 ];
__n55["arguments"] := __n59;
__n54["expression"] := __n55;
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "assert";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "valueOfAccessed";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "valueOfAccessed !== true";
__n82["raw"] := "'valueOfAccessed !== true'";
__n80 := [ __n81, __n82 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "assert";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "toStringAccessed";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "toStringAccessed !== true";
__n88["raw"] := "'toStringAccessed !== true'";
__n86 := [ __n87, __n88 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n1 := [ __n2, __n8, __n13, __n18, __n54, __n77, __n83 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n89 := [ "obj", "toStringAccessed", "valueOfAccessed", "ownProp" ];
__n0["variableDeclarations"] := __n89;
__n90 := [  ];
__n0["functionDeclarations"] := __n90;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}