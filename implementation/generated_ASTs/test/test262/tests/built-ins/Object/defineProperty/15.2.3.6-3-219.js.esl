function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "arrObj";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "ArrayExpression";
__n13 := [  ];
__n12["elements"] := __n13;
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "AssignmentExpression";
__n15["operator"] := "=";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "arrObj";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "get";
__n18["raw"] := "\"get\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["left"] := __n16;
__n19 := {  };
__n19["type"] := "FunctionExpression";
__n19["id"] := null;
__n20 := [  ];
__n19["params"] := __n20;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ReturnStatement";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "arrayGetProperty";
__n24["raw"] := "\"arrayGetProperty\"";
__n23["argument"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n25 := [  ];
__n21["variableDeclarations"] := __n25;
__n26 := [  ];
__n21["functionDeclarations"] := __n26;
__n21["codeType"] := "function";
__n21["strict"] := false;
__n19["body"] := __n21;
__n19["generator"] := false;
__n19["expression"] := false;
__n19["async"] := false;
__n15["right"] := __n19;
__n14["expression"] := __n15;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Object";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "defineProperty";
__n31["raw"] := "\"defineProperty\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "obj";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "property";
__n34["raw"] := "\"property\"";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "arrObj";
__n32 := [ __n33, __n34, __n35 ];
__n28["arguments"] := __n32;
__n27["expression"] := __n28;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "assert";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "sameValue";
__n40["raw"] := "\"sameValue\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "obj";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "property";
__n44["raw"] := "\"property\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "arrayGetProperty";
__n45["raw"] := "\"arrayGetProperty\"";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "obj.property";
__n46["raw"] := "'obj.property'";
__n41 := [ __n42, __n45, __n46 ];
__n37["arguments"] := __n41;
__n36["expression"] := __n37;
__n1 := [ __n2, __n8, __n14, __n27, __n36 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n47 := [ "obj", "arrObj" ];
__n0["variableDeclarations"] := __n47;
__n48 := [  ];
__n0["functionDeclarations"] := __n48;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}