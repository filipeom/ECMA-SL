function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "accessed";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := false;
__n12["raw"] := "false";
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "proto";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "ObjectExpression";
__n18 := [  ];
__n17["properties"] := __n18;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Object";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "defineProperty";
__n23["raw"] := "\"defineProperty\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "proto";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "enumerable";
__n26["raw"] := "\"enumerable\"";
__n27 := {  };
__n27["type"] := "ObjectExpression";
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "value";
__n29["key"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := false;
__n31["raw"] := "false";
__n29["value"] := __n31;
__n29["computed"] := false;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n28 := [ __n29 ];
__n27["properties"] := __n28;
__n24 := [ __n25, __n26, __n27 ];
__n20["arguments"] := __n24;
__n19["expression"] := __n20;
__n32 := {  };
__n32["type"] := "VariableDeclaration";
__n34 := {  };
__n34["type"] := "VariableDeclarator";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "ConstructFun";
__n34["id"] := __n35;
__n36 := {  };
__n36["type"] := "FunctionExpression";
__n36["id"] := null;
__n37 := [  ];
__n36["params"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n39 := [  ];
__n38["body"] := __n39;
__n40 := [  ];
__n38["variableDeclarations"] := __n40;
__n41 := [  ];
__n38["functionDeclarations"] := __n41;
__n38["codeType"] := "function";
__n38["strict"] := false;
__n36["body"] := __n38;
__n36["generator"] := false;
__n36["expression"] := false;
__n36["async"] := false;
__n34["init"] := __n36;
__n33 := [ __n34 ];
__n32["declarations"] := __n33;
__n32["kind"] := "var";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "ConstructFun";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "prototype";
__n46["raw"] := "\"prototype\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["left"] := __n44;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "proto";
__n43["right"] := __n47;
__n42["expression"] := __n43;
__n48 := {  };
__n48["type"] := "VariableDeclaration";
__n50 := {  };
__n50["type"] := "VariableDeclarator";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "child";
__n50["id"] := __n51;
__n52 := {  };
__n52["type"] := "NewExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "ConstructFun";
__n52["callee"] := __n53;
__n54 := [  ];
__n52["arguments"] := __n54;
__n50["init"] := __n52;
__n49 := [ __n50 ];
__n48["declarations"] := __n49;
__n48["kind"] := "var";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "Object";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "defineProperty";
__n59["raw"] := "\"defineProperty\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "child";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "enumerable";
__n62["raw"] := "\"enumerable\"";
__n63 := {  };
__n63["type"] := "ObjectExpression";
__n65 := {  };
__n65["type"] := "Property";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "value";
__n65["key"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := true;
__n67["raw"] := "true";
__n65["value"] := __n67;
__n65["computed"] := false;
__n65["kind"] := "init";
__n65["shorthand"] := false;
__n64 := [ __n65 ];
__n63["properties"] := __n64;
__n60 := [ __n61, __n62, __n63 ];
__n56["arguments"] := __n60;
__n55["expression"] := __n56;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "Object";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "defineProperty";
__n72["raw"] := "\"defineProperty\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n69["callee"] := __n70;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "obj";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "property";
__n75["raw"] := "\"property\"";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "child";
__n73 := [ __n74, __n75, __n76 ];
__n69["arguments"] := __n73;
__n68["expression"] := __n69;
__n77 := {  };
__n77["type"] := "ForInStatement";
__n78 := {  };
__n78["type"] := "VariableDeclaration";
__n80 := {  };
__n80["type"] := "VariableDeclarator";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "prop";
__n80["id"] := __n81;
__n80["init"] := null;
__n79 := [ __n80 ];
__n78["declarations"] := __n79;
__n78["kind"] := "var";
__n77["left"] := __n78;
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "obj";
__n77["right"] := __n82;
__n83 := {  };
__n83["type"] := "BlockStatement";
__n85 := {  };
__n85["type"] := "IfStatement";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "===";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "prop";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "property";
__n88["raw"] := "\"property\"";
__n86["right"] := __n88;
__n85["test"] := __n86;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "AssignmentExpression";
__n92["operator"] := "=";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "accessed";
__n92["left"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := true;
__n94["raw"] := "true";
__n92["right"] := __n94;
__n91["expression"] := __n92;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n85["consequent"] := __n89;
__n85["alternate"] := null;
__n84 := [ __n85 ];
__n83["body"] := __n84;
__n77["body"] := __n83;
__n77["each"] := false;
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "CallExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "assert";
__n96["callee"] := __n97;
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "accessed";
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "accessed !== true";
__n100["raw"] := "'accessed !== true'";
__n98 := [ __n99, __n100 ];
__n96["arguments"] := __n98;
__n95["expression"] := __n96;
__n1 := [ __n2, __n8, __n13, __n19, __n32, __n42, __n48, __n55, __n68, __n77, __n95 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n101 := [ "obj", "accessed", "proto", "ConstructFun", "child", "prop" ];
__n0["variableDeclarations"] := __n101;
__n102 := [  ];
__n0["functionDeclarations"] := __n102;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}