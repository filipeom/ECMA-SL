function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "accessed";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := false;
__n12["raw"] := "false";
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arrObj";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "ArrayExpression";
__n18 := [  ];
__n17["elements"] := __n18;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "AssignmentExpression";
__n20["operator"] := "=";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "arrObj";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "enumerable";
__n23["raw"] := "\"enumerable\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["left"] := __n21;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := true;
__n24["raw"] := "true";
__n20["right"] := __n24;
__n19["expression"] := __n20;
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Object";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "defineProperty";
__n29["raw"] := "\"defineProperty\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "obj";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "property";
__n32["raw"] := "\"property\"";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "arrObj";
__n30 := [ __n31, __n32, __n33 ];
__n26["arguments"] := __n30;
__n25["expression"] := __n26;
__n34 := {  };
__n34["type"] := "ForInStatement";
__n35 := {  };
__n35["type"] := "VariableDeclaration";
__n37 := {  };
__n37["type"] := "VariableDeclarator";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "prop";
__n37["id"] := __n38;
__n37["init"] := null;
__n36 := [ __n37 ];
__n35["declarations"] := __n36;
__n35["kind"] := "var";
__n34["left"] := __n35;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "obj";
__n34["right"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "===";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "prop";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "property";
__n45["raw"] := "\"property\"";
__n43["right"] := __n45;
__n42["test"] := __n43;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "AssignmentExpression";
__n49["operator"] := "=";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "accessed";
__n49["left"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := true;
__n51["raw"] := "true";
__n49["right"] := __n51;
__n48["expression"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n42["consequent"] := __n46;
__n42["alternate"] := null;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n34["body"] := __n40;
__n34["each"] := false;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "assert";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "accessed";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "accessed !== true";
__n57["raw"] := "'accessed !== true'";
__n55 := [ __n56, __n57 ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n1 := [ __n2, __n8, __n13, __n19, __n25, __n34, __n52 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n58 := [ "obj", "accessed", "arrObj", "prop" ];
__n0["variableDeclarations"] := __n58;
__n59 := [  ];
__n0["functionDeclarations"] := __n59;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}