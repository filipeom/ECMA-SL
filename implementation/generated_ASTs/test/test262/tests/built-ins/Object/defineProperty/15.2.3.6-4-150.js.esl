function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arrObj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "toStringAccessed";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := false;
__n12["raw"] := "false";
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "valueOfAccessed";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := false;
__n17["raw"] := "false";
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "assert";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "throws";
__n22["raw"] := "\"throws\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "TypeError";
__n25 := {  };
__n25["type"] := "FunctionExpression";
__n25["id"] := null;
__n26 := [  ];
__n25["params"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Object";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "defineProperty";
__n33["raw"] := "\"defineProperty\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "arrObj";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "length";
__n36["raw"] := "\"length\"";
__n37 := {  };
__n37["type"] := "ObjectExpression";
__n39 := {  };
__n39["type"] := "Property";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "value";
__n39["key"] := __n40;
__n41 := {  };
__n41["type"] := "ObjectExpression";
__n43 := {  };
__n43["type"] := "Property";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "toString";
__n43["key"] := __n44;
__n45 := {  };
__n45["type"] := "FunctionExpression";
__n45["id"] := null;
__n46 := [  ];
__n45["params"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "AssignmentExpression";
__n50["operator"] := "=";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "toStringAccessed";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := true;
__n52["raw"] := "true";
__n50["right"] := __n52;
__n49["expression"] := __n50;
__n53 := {  };
__n53["type"] := "ReturnStatement";
__n54 := {  };
__n54["type"] := "ObjectExpression";
__n55 := [  ];
__n54["properties"] := __n55;
__n53["argument"] := __n54;
__n48 := [ __n49, __n53 ];
__n47["body"] := __n48;
__n56 := [  ];
__n47["variableDeclarations"] := __n56;
__n57 := [  ];
__n47["functionDeclarations"] := __n57;
__n47["codeType"] := "function";
__n47["strict"] := false;
__n45["body"] := __n47;
__n45["generator"] := false;
__n45["expression"] := false;
__n45["async"] := false;
__n43["value"] := __n45;
__n43["computed"] := false;
__n43["kind"] := "init";
__n43["shorthand"] := false;
__n58 := {  };
__n58["type"] := "Property";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "valueOf";
__n58["key"] := __n59;
__n60 := {  };
__n60["type"] := "FunctionExpression";
__n60["id"] := null;
__n61 := [  ];
__n60["params"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "AssignmentExpression";
__n65["operator"] := "=";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "valueOfAccessed";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := true;
__n67["raw"] := "true";
__n65["right"] := __n67;
__n64["expression"] := __n65;
__n68 := {  };
__n68["type"] := "ReturnStatement";
__n69 := {  };
__n69["type"] := "ObjectExpression";
__n70 := [  ];
__n69["properties"] := __n70;
__n68["argument"] := __n69;
__n63 := [ __n64, __n68 ];
__n62["body"] := __n63;
__n71 := [  ];
__n62["variableDeclarations"] := __n71;
__n72 := [  ];
__n62["functionDeclarations"] := __n72;
__n62["codeType"] := "function";
__n62["strict"] := false;
__n60["body"] := __n62;
__n60["generator"] := false;
__n60["expression"] := false;
__n60["async"] := false;
__n58["value"] := __n60;
__n58["computed"] := false;
__n58["kind"] := "init";
__n58["shorthand"] := false;
__n42 := [ __n43, __n58 ];
__n41["properties"] := __n42;
__n39["value"] := __n41;
__n39["computed"] := false;
__n39["kind"] := "init";
__n39["shorthand"] := false;
__n38 := [ __n39 ];
__n37["properties"] := __n38;
__n34 := [ __n35, __n36, __n37 ];
__n30["arguments"] := __n34;
__n29["expression"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n73 := [  ];
__n27["variableDeclarations"] := __n73;
__n74 := [  ];
__n27["functionDeclarations"] := __n74;
__n27["codeType"] := "function";
__n27["strict"] := false;
__n25["body"] := __n27;
__n25["generator"] := false;
__n25["expression"] := false;
__n25["async"] := false;
__n23 := [ __n24, __n25 ];
__n19["arguments"] := __n23;
__n18["expression"] := __n19;
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "assert";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "toStringAccessed";
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "toStringAccessed !== true";
__n80["raw"] := "'toStringAccessed !== true'";
__n78 := [ __n79, __n80 ];
__n76["arguments"] := __n78;
__n75["expression"] := __n76;
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "assert";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "valueOfAccessed";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "valueOfAccessed !== true";
__n86["raw"] := "'valueOfAccessed !== true'";
__n84 := [ __n85, __n86 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n1 := [ __n2, __n8, __n13, __n18, __n75, __n81 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n87 := [ "arrObj", "toStringAccessed", "valueOfAccessed" ];
__n0["variableDeclarations"] := __n87;
__n88 := [  ];
__n0["functionDeclarations"] := __n88;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}