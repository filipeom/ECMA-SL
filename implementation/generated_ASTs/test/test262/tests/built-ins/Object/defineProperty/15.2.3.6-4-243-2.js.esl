function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := "use strict";
__n3["raw"] := "\"use strict\"";
__n2["expression"] := __n3;
__n2["directive"] := "use strict";
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "arrObj";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ArrayExpression";
__n9 := [  ];
__n8["elements"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "getFunc";
__n10["expression"] := __n11;
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Object";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "defineProperty";
__n16["raw"] := "\"defineProperty\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "arrObj";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "1";
__n19["raw"] := "\"1\"";
__n20 := {  };
__n20["type"] := "ObjectExpression";
__n22 := {  };
__n22["type"] := "Property";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "get";
__n22["key"] := __n23;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "getFunc";
__n22["value"] := __n24;
__n22["computed"] := false;
__n22["kind"] := "init";
__n22["shorthand"] := false;
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "configurable";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := true;
__n27["raw"] := "true";
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n21 := [ __n22, __n25 ];
__n20["properties"] := __n21;
__n17 := [ __n18, __n19, __n20 ];
__n13["arguments"] := __n17;
__n12["expression"] := __n13;
__n28 := {  };
__n28["type"] := "TryStatement";
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n33["computed"] := true;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "arrObj";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 1.;
__n35["raw"] := "1";
__n33["property"] := __n35;
__n32["left"] := __n33;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 4.;
__n36["raw"] := "4";
__n32["right"] := __n36;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n28["block"] := __n29;
__n37 := {  };
__n37["type"] := "CatchClause";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "e";
__n37["param"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "verifyEqualTo";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "arrObj";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "1";
__n46["raw"] := "\"1\"";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "getFunc";
__n47["callee"] := __n48;
__n49 := [  ];
__n47["arguments"] := __n49;
__n44 := [ __n45, __n46, __n47 ];
__n42["arguments"] := __n44;
__n41["expression"] := __n42;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "verifyNotEnumerable";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "arrObj";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "1";
__n55["raw"] := "\"1\"";
__n53 := [ __n54, __n55 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "verifyConfigurable";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "arrObj";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "1";
__n61["raw"] := "\"1\"";
__n59 := [ __n60, __n61 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n62 := {  };
__n62["type"] := "IfStatement";
__n63 := {  };
__n63["type"] := "UnaryExpression";
__n63["operator"] := "!";
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "instanceof";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "e";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "TypeError";
__n64["right"] := __n66;
__n63["argument"] := __n64;
__n63["prefix"] := true;
__n62["test"] := __n63;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "+";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "Expected TypeError, got ";
__n74["raw"] := "\"Expected TypeError, got \"";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "e";
__n73["right"] := __n75;
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n62["consequent"] := __n67;
__n62["alternate"] := null;
__n40 := [ __n41, __n50, __n56, __n62 ];
__n39["body"] := __n40;
__n37["body"] := __n39;
__n28["handler"] := __n37;
__n28["finalizer"] := null;
__n1 := [ __n2, __n4, __n10, __n12, __n28 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n76 := [ "arrObj" ];
__n0["variableDeclarations"] := __n76;
__n78 := {  };
__n78["type"] := "FunctionDeclaration";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "getFunc";
__n78["id"] := __n79;
__n80 := [  ];
__n78["params"] := __n80;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "ReturnStatement";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := 3.;
__n84["raw"] := "3";
__n83["argument"] := __n84;
__n82 := [ __n83 ];
__n81["body"] := __n82;
__n85 := [  ];
__n81["variableDeclarations"] := __n85;
__n86 := [  ];
__n81["functionDeclarations"] := __n86;
__n81["codeType"] := "function";
__n81["strict"] := false;
__n78["body"] := __n81;
__n78["generator"] := false;
__n78["expression"] := false;
__n78["async"] := false;
__n77 := [ __n78 ];
__n0["functionDeclarations"] := __n77;
__n0["codeType"] := "global";
__n0["strict"] := true;
return __n0
}