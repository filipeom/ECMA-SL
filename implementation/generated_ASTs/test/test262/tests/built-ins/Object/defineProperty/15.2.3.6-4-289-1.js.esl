function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "EmptyStatement";
__n3 := {  };
__n3["type"] := "ExpressionStatement";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "FunctionExpression";
__n5["id"] := null;
__n6 := [ "a", "b", "c" ];
__n5["params"] := __n6;
__n7 := {  };
__n7["type"] := "BlockStatement";
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "UnaryExpression";
__n10["operator"] := "delete";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n11["computed"] := true;
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arguments";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 0.;
__n13["raw"] := "0";
__n11["property"] := __n13;
__n10["argument"] := __n11;
__n10["prefix"] := true;
__n9["expression"] := __n10;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Object";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "defineProperty";
__n18["raw"] := "\"defineProperty\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "arguments";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "0";
__n21["raw"] := "\"0\"";
__n22 := {  };
__n22["type"] := "ObjectExpression";
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "value";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 10.;
__n26["raw"] := "10";
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n27 := {  };
__n27["type"] := "Property";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "writable";
__n27["key"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := true;
__n29["raw"] := "true";
__n27["value"] := __n29;
__n27["computed"] := false;
__n27["kind"] := "init";
__n27["shorthand"] := false;
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "enumerable";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := true;
__n32["raw"] := "true";
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n33 := {  };
__n33["type"] := "Property";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "configurable";
__n33["key"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := true;
__n35["raw"] := "true";
__n33["value"] := __n35;
__n33["computed"] := false;
__n33["kind"] := "init";
__n33["shorthand"] := false;
__n23 := [ __n24, __n27, __n30, __n33 ];
__n22["properties"] := __n23;
__n19 := [ __n20, __n21, __n22 ];
__n15["arguments"] := __n19;
__n14["expression"] := __n15;
__n36 := {  };
__n36["type"] := "IfStatement";
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "!==";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "a";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 0.;
__n39["raw"] := "0";
__n37["right"] := __n39;
__n36["test"] := __n37;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "+";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "Expected a === 0, actually ";
__n47["raw"] := "\"Expected a === 0, actually \"";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "a";
__n46["right"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n36["consequent"] := __n40;
__n36["alternate"] := null;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "verifyEqualTo";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "arguments";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "0";
__n54["raw"] := "\"0\"";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 10.;
__n55["raw"] := "10";
__n52 := [ __n53, __n54, __n55 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "verifyWritable";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "arguments";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "0";
__n61["raw"] := "\"0\"";
__n59 := [ __n60, __n61 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "verifyEnumerable";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "arguments";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "0";
__n67["raw"] := "\"0\"";
__n65 := [ __n66, __n67 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "verifyConfigurable";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "arguments";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "0";
__n73["raw"] := "\"0\"";
__n71 := [ __n72, __n73 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n8 := [ __n9, __n14, __n36, __n49, __n56, __n62, __n68 ];
__n7["body"] := __n8;
__n74 := [  ];
__n7["variableDeclarations"] := __n74;
__n75 := [  ];
__n7["functionDeclarations"] := __n75;
__n7["codeType"] := "function";
__n7["strict"] := false;
__n5["body"] := __n7;
__n5["generator"] := false;
__n5["expression"] := false;
__n5["async"] := false;
__n4["callee"] := __n5;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 0.;
__n77["raw"] := "0";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 1.;
__n78["raw"] := "1";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 2.;
__n79["raw"] := "2";
__n76 := [ __n77, __n78, __n79 ];
__n4["arguments"] := __n76;
__n3["expression"] := __n4;
__n1 := [ __n2, __n3 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n80 := [  ];
__n0["variableDeclarations"] := __n80;
__n81 := [  ];
__n0["functionDeclarations"] := __n81;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}