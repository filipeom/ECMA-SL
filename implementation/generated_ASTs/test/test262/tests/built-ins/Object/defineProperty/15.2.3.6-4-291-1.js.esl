function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "FunctionExpression";
__n4["id"] := null;
__n5 := [ "a", "b", "c" ];
__n4["params"] := __n5;
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "getFunc1";
__n8["expression"] := __n9;
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Object";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "defineProperty";
__n14["raw"] := "\"defineProperty\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arguments";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "0";
__n17["raw"] := "\"0\"";
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "get";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "getFunc1";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "enumerable";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := true;
__n25["raw"] := "true";
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n26 := {  };
__n26["type"] := "Property";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "configurable";
__n26["key"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := true;
__n28["raw"] := "true";
__n26["value"] := __n28;
__n26["computed"] := false;
__n26["kind"] := "init";
__n26["shorthand"] := false;
__n19 := [ __n20, __n23, __n26 ];
__n18["properties"] := __n19;
__n15 := [ __n16, __n17, __n18 ];
__n11["arguments"] := __n15;
__n10["expression"] := __n11;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "getFunc2";
__n29["expression"] := __n30;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Object";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "defineProperty";
__n35["raw"] := "\"defineProperty\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "arguments";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "0";
__n38["raw"] := "\"0\"";
__n39 := {  };
__n39["type"] := "ObjectExpression";
__n41 := {  };
__n41["type"] := "Property";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "get";
__n41["key"] := __n42;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "getFunc2";
__n41["value"] := __n43;
__n41["computed"] := false;
__n41["kind"] := "init";
__n41["shorthand"] := false;
__n44 := {  };
__n44["type"] := "Property";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "enumerable";
__n44["key"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := false;
__n46["raw"] := "false";
__n44["value"] := __n46;
__n44["computed"] := false;
__n44["kind"] := "init";
__n44["shorthand"] := false;
__n47 := {  };
__n47["type"] := "Property";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "configurable";
__n47["key"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := false;
__n49["raw"] := "false";
__n47["value"] := __n49;
__n47["computed"] := false;
__n47["kind"] := "init";
__n47["shorthand"] := false;
__n40 := [ __n41, __n44, __n47 ];
__n39["properties"] := __n40;
__n36 := [ __n37, __n38, __n39 ];
__n32["arguments"] := __n36;
__n31["expression"] := __n32;
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "a";
__n51["left"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 0.;
__n53["raw"] := "0";
__n51["right"] := __n53;
__n50["test"] := __n51;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "$ERROR";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "+";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "Expected a === 0, actually ";
__n61["raw"] := "'Expected a === 0, actually '";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "a";
__n60["right"] := __n62;
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n50["consequent"] := __n54;
__n50["alternate"] := null;
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "verifyEqualTo";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "arguments";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "0";
__n68["raw"] := "\"0\"";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "getFunc2";
__n69["callee"] := __n70;
__n71 := [  ];
__n69["arguments"] := __n71;
__n66 := [ __n67, __n68, __n69 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "verifyNotEnumerable";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "arguments";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "0";
__n77["raw"] := "\"0\"";
__n75 := [ __n76, __n77 ];
__n73["arguments"] := __n75;
__n72["expression"] := __n73;
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "verifyNotConfigurable";
__n79["callee"] := __n80;
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "arguments";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "0";
__n83["raw"] := "\"0\"";
__n81 := [ __n82, __n83 ];
__n79["arguments"] := __n81;
__n78["expression"] := __n79;
__n7 := [ __n8, __n10, __n29, __n31, __n50, __n63, __n72, __n78 ];
__n6["body"] := __n7;
__n84 := [  ];
__n6["variableDeclarations"] := __n84;
__n86 := {  };
__n86["type"] := "FunctionDeclaration";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "getFunc1";
__n86["id"] := __n87;
__n88 := [  ];
__n86["params"] := __n88;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "ReturnStatement";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 10.;
__n92["raw"] := "10";
__n91["argument"] := __n92;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n93 := [  ];
__n89["variableDeclarations"] := __n93;
__n94 := [  ];
__n89["functionDeclarations"] := __n94;
__n89["codeType"] := "function";
__n89["strict"] := false;
__n86["body"] := __n89;
__n86["generator"] := false;
__n86["expression"] := false;
__n86["async"] := false;
__n95 := {  };
__n95["type"] := "FunctionDeclaration";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "getFunc2";
__n95["id"] := __n96;
__n97 := [  ];
__n95["params"] := __n97;
__n98 := {  };
__n98["type"] := "BlockStatement";
__n100 := {  };
__n100["type"] := "ReturnStatement";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 20.;
__n101["raw"] := "20";
__n100["argument"] := __n101;
__n99 := [ __n100 ];
__n98["body"] := __n99;
__n102 := [  ];
__n98["variableDeclarations"] := __n102;
__n103 := [  ];
__n98["functionDeclarations"] := __n103;
__n98["codeType"] := "function";
__n98["strict"] := false;
__n95["body"] := __n98;
__n95["generator"] := false;
__n95["expression"] := false;
__n95["async"] := false;
__n85 := [ __n86, __n95 ];
__n6["functionDeclarations"] := __n85;
__n6["codeType"] := "function";
__n6["strict"] := false;
__n4["body"] := __n6;
__n4["generator"] := false;
__n4["expression"] := false;
__n4["async"] := false;
__n3["callee"] := __n4;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 0.;
__n105["raw"] := "0";
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 1.;
__n106["raw"] := "1";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 2.;
__n107["raw"] := "2";
__n104 := [ __n105, __n106, __n107 ];
__n3["arguments"] := __n104;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n108 := [  ];
__n0["variableDeclarations"] := __n108;
__n109 := [  ];
__n0["functionDeclarations"] := __n109;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}