function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "FunctionExpression";
__n4["id"] := null;
__n5 := [ "a", "b", "c" ];
__n4["params"] := __n5;
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "defineProperty";
__n12["raw"] := "\"defineProperty\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "arguments";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "0";
__n15["raw"] := "\"0\"";
__n16 := {  };
__n16["type"] := "ObjectExpression";
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "value";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 20.;
__n20["raw"] := "20";
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "writable";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := false;
__n23["raw"] := "false";
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "enumerable";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := false;
__n26["raw"] := "false";
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n27 := {  };
__n27["type"] := "Property";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "configurable";
__n27["key"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := false;
__n29["raw"] := "false";
__n27["value"] := __n29;
__n27["computed"] := false;
__n27["kind"] := "init";
__n27["shorthand"] := false;
__n17 := [ __n18, __n21, __n24, __n27 ];
__n16["properties"] := __n17;
__n13 := [ __n14, __n15, __n16 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n30 := {  };
__n30["type"] := "IfStatement";
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "!==";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "a";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 20.;
__n33["raw"] := "20";
__n31["right"] := __n33;
__n30["test"] := __n31;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "+";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "Expected a === 20, actually ";
__n41["raw"] := "'Expected a === 20, actually '";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "a";
__n40["right"] := __n42;
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n30["consequent"] := __n34;
__n30["alternate"] := null;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "verifyEqualTo";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "arguments";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "0";
__n48["raw"] := "\"0\"";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 20.;
__n49["raw"] := "20";
__n46 := [ __n47, __n48, __n49 ];
__n44["arguments"] := __n46;
__n43["expression"] := __n44;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "verifyNotWritable";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "arguments";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "0";
__n55["raw"] := "\"0\"";
__n53 := [ __n54, __n55 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "verifyNotEnumerable";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "arguments";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "0";
__n61["raw"] := "\"0\"";
__n59 := [ __n60, __n61 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "verifyNotConfigurable";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "arguments";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "0";
__n67["raw"] := "\"0\"";
__n65 := [ __n66, __n67 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n7 := [ __n8, __n30, __n43, __n50, __n56, __n62 ];
__n6["body"] := __n7;
__n68 := [  ];
__n6["variableDeclarations"] := __n68;
__n69 := [  ];
__n6["functionDeclarations"] := __n69;
__n6["codeType"] := "function";
__n6["strict"] := false;
__n4["body"] := __n6;
__n4["generator"] := false;
__n4["async"] := false;
__n4["expression"] := false;
__n3["callee"] := __n4;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 0.;
__n71["raw"] := "0";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.;
__n72["raw"] := "1";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 2.;
__n73["raw"] := "2";
__n70 := [ __n71, __n72, __n73 ];
__n3["arguments"] := __n70;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n74 := [  ];
__n0["variableDeclarations"] := __n74;
__n75 := [  ];
__n0["functionDeclarations"] := __n75;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}