function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "FunctionExpression";
__n4["id"] := null;
__n5 := [ "a", "b", "c" ];
__n4["params"] := __n5;
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "getFunc";
__n8["expression"] := __n9;
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Object";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "defineProperty";
__n14["raw"] := "\"defineProperty\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arguments";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "0";
__n17["raw"] := "\"0\"";
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "get";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "getFunc";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "set";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "undefined";
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n26 := {  };
__n26["type"] := "Property";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "enumerable";
__n26["key"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := false;
__n28["raw"] := "false";
__n26["value"] := __n28;
__n26["computed"] := false;
__n26["kind"] := "init";
__n26["shorthand"] := false;
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "configurable";
__n29["key"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := false;
__n31["raw"] := "false";
__n29["value"] := __n31;
__n29["computed"] := false;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n19 := [ __n20, __n23, __n26, __n29 ];
__n18["properties"] := __n19;
__n15 := [ __n16, __n17, __n18 ];
__n11["arguments"] := __n15;
__n10["expression"] := __n11;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "setFunc";
__n32["expression"] := __n33;
__n34 := {  };
__n34["type"] := "TryStatement";
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Object";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "defineProperty";
__n41["raw"] := "\"defineProperty\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "arguments";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "0";
__n44["raw"] := "\"0\"";
__n45 := {  };
__n45["type"] := "ObjectExpression";
__n47 := {  };
__n47["type"] := "Property";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "set";
__n47["key"] := __n48;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "setFunc";
__n47["value"] := __n49;
__n47["computed"] := false;
__n47["kind"] := "init";
__n47["shorthand"] := false;
__n46 := [ __n47 ];
__n45["properties"] := __n46;
__n42 := [ __n43, __n44, __n45 ];
__n38["arguments"] := __n42;
__n37["expression"] := __n38;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "$ERROR";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "Expected an exception.";
__n54["raw"] := "\"Expected an exception.\"";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n36 := [ __n37, __n50 ];
__n35["body"] := __n36;
__n34["block"] := __n35;
__n55 := {  };
__n55["type"] := "CatchClause";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "e";
__n55["param"] := __n56;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "IfStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "!==";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "a";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 0.;
__n62["raw"] := "0";
__n60["right"] := __n62;
__n59["test"] := __n60;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$ERROR";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "+";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "Expected a === 0, actually ";
__n70["raw"] := "'Expected a === 0, actually '";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "a";
__n69["right"] := __n71;
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n59["consequent"] := __n63;
__n59["alternate"] := null;
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "verifyEqualTo";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "arguments";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "0";
__n77["raw"] := "\"0\"";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "getFunc";
__n78["callee"] := __n79;
__n80 := [  ];
__n78["arguments"] := __n80;
__n75 := [ __n76, __n77, __n78 ];
__n73["arguments"] := __n75;
__n72["expression"] := __n73;
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "verifyNotEnumerable";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "arguments";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "0";
__n86["raw"] := "\"0\"";
__n84 := [ __n85, __n86 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "verifyNotConfigurable";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "arguments";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "0";
__n92["raw"] := "\"0\"";
__n90 := [ __n91, __n92 ];
__n88["arguments"] := __n90;
__n87["expression"] := __n88;
__n93 := {  };
__n93["type"] := "IfStatement";
__n94 := {  };
__n94["type"] := "UnaryExpression";
__n94["operator"] := "!";
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "instanceof";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "e";
__n95["left"] := __n96;
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "TypeError";
__n95["right"] := __n97;
__n94["argument"] := __n95;
__n94["prefix"] := true;
__n93["test"] := __n94;
__n98 := {  };
__n98["type"] := "BlockStatement";
__n100 := {  };
__n100["type"] := "ExpressionStatement";
__n101 := {  };
__n101["type"] := "CallExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "$ERROR";
__n101["callee"] := __n102;
__n104 := {  };
__n104["type"] := "BinaryExpression";
__n104["operator"] := "+";
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "Expected TypeError, got ";
__n105["raw"] := "\"Expected TypeError, got \"";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "e";
__n104["right"] := __n106;
__n103 := [ __n104 ];
__n101["arguments"] := __n103;
__n100["expression"] := __n101;
__n99 := [ __n100 ];
__n98["body"] := __n99;
__n93["consequent"] := __n98;
__n93["alternate"] := null;
__n58 := [ __n59, __n72, __n81, __n87, __n93 ];
__n57["body"] := __n58;
__n55["body"] := __n57;
__n34["handler"] := __n55;
__n34["finalizer"] := null;
__n7 := [ __n8, __n10, __n32, __n34 ];
__n6["body"] := __n7;
__n107 := [  ];
__n6["variableDeclarations"] := __n107;
__n109 := {  };
__n109["type"] := "FunctionDeclaration";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "getFunc";
__n109["id"] := __n110;
__n111 := [  ];
__n109["params"] := __n111;
__n112 := {  };
__n112["type"] := "BlockStatement";
__n114 := {  };
__n114["type"] := "ReturnStatement";
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := 10.;
__n115["raw"] := "10";
__n114["argument"] := __n115;
__n113 := [ __n114 ];
__n112["body"] := __n113;
__n116 := [  ];
__n112["variableDeclarations"] := __n116;
__n117 := [  ];
__n112["functionDeclarations"] := __n117;
__n112["codeType"] := "function";
__n112["strict"] := false;
__n109["body"] := __n112;
__n109["generator"] := false;
__n109["expression"] := false;
__n109["async"] := false;
__n118 := {  };
__n118["type"] := "FunctionDeclaration";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "setFunc";
__n118["id"] := __n119;
__n120 := [ "value" ];
__n118["params"] := __n120;
__n121 := {  };
__n121["type"] := "BlockStatement";
__n123 := {  };
__n123["type"] := "ExpressionStatement";
__n124 := {  };
__n124["type"] := "AssignmentExpression";
__n124["operator"] := "=";
__n125 := {  };
__n125["type"] := "MemberExpression";
__n126 := {  };
__n126["type"] := "ThisExpression";
__n125["object"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "setVerifyHelpProp";
__n127["raw"] := "\"setVerifyHelpProp\"";
__n125["property"] := __n127;
__n125["computed"] := true;
__n124["left"] := __n125;
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "value";
__n124["right"] := __n128;
__n123["expression"] := __n124;
__n122 := [ __n123 ];
__n121["body"] := __n122;
__n129 := [  ];
__n121["variableDeclarations"] := __n129;
__n130 := [  ];
__n121["functionDeclarations"] := __n130;
__n121["codeType"] := "function";
__n121["strict"] := false;
__n118["body"] := __n121;
__n118["generator"] := false;
__n118["expression"] := false;
__n118["async"] := false;
__n108 := [ __n109, __n118 ];
__n6["functionDeclarations"] := __n108;
__n6["codeType"] := "function";
__n6["strict"] := false;
__n4["body"] := __n6;
__n4["generator"] := false;
__n4["expression"] := false;
__n4["async"] := false;
__n3["callee"] := __n4;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := 0.;
__n132["raw"] := "0";
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := 1.;
__n133["raw"] := "1";
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 2.;
__n134["raw"] := "2";
__n131 := [ __n132, __n133, __n134 ];
__n3["arguments"] := __n131;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n135 := [  ];
__n0["variableDeclarations"] := __n135;
__n136 := [  ];
__n0["functionDeclarations"] := __n136;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}