function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "FunctionExpression";
__n4["id"] := null;
__n5 := [ "a", "b", "c" ];
__n4["params"] := __n5;
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "defineProperty";
__n12["raw"] := "\"defineProperty\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "arguments";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "genericProperty";
__n15["raw"] := "\"genericProperty\"";
__n16 := {  };
__n16["type"] := "ObjectExpression";
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "get";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "FunctionExpression";
__n20["id"] := null;
__n21 := [  ];
__n20["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ReturnStatement";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 1001.;
__n25["raw"] := "1001";
__n24["argument"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n26 := [  ];
__n22["variableDeclarations"] := __n26;
__n27 := [  ];
__n22["functionDeclarations"] := __n27;
__n22["codeType"] := "function";
__n22["strict"] := false;
__n20["body"] := __n22;
__n20["generator"] := false;
__n20["expression"] := false;
__n20["async"] := false;
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n28 := {  };
__n28["type"] := "Property";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "set";
__n28["key"] := __n29;
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [ "value" ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "AssignmentExpression";
__n35["operator"] := "=";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "ThisExpression";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "testgetFunction1";
__n38["raw"] := "\"testgetFunction1\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["left"] := __n36;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "value";
__n35["right"] := __n39;
__n34["expression"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n40 := [  ];
__n32["variableDeclarations"] := __n40;
__n41 := [  ];
__n32["functionDeclarations"] := __n41;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["expression"] := false;
__n30["async"] := false;
__n28["value"] := __n30;
__n28["computed"] := false;
__n28["kind"] := "init";
__n28["shorthand"] := false;
__n42 := {  };
__n42["type"] := "Property";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "enumerable";
__n42["key"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := true;
__n44["raw"] := "true";
__n42["value"] := __n44;
__n42["computed"] := false;
__n42["kind"] := "init";
__n42["shorthand"] := false;
__n45 := {  };
__n45["type"] := "Property";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "configurable";
__n45["key"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := true;
__n47["raw"] := "true";
__n45["value"] := __n47;
__n45["computed"] := false;
__n45["kind"] := "init";
__n45["shorthand"] := false;
__n17 := [ __n18, __n28, __n42, __n45 ];
__n16["properties"] := __n17;
__n13 := [ __n14, __n15, __n16 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "getFunc";
__n48["expression"] := __n49;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "setFunc";
__n50["expression"] := __n51;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Object";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "defineProperty";
__n56["raw"] := "\"defineProperty\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["callee"] := __n54;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "arguments";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "genericProperty";
__n59["raw"] := "\"genericProperty\"";
__n60 := {  };
__n60["type"] := "ObjectExpression";
__n62 := {  };
__n62["type"] := "Property";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "get";
__n62["key"] := __n63;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "getFunc";
__n62["value"] := __n64;
__n62["computed"] := false;
__n62["kind"] := "init";
__n62["shorthand"] := false;
__n65 := {  };
__n65["type"] := "Property";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "set";
__n65["key"] := __n66;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "setFunc";
__n65["value"] := __n67;
__n65["computed"] := false;
__n65["kind"] := "init";
__n65["shorthand"] := false;
__n68 := {  };
__n68["type"] := "Property";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "enumerable";
__n68["key"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := false;
__n70["raw"] := "false";
__n68["value"] := __n70;
__n68["computed"] := false;
__n68["kind"] := "init";
__n68["shorthand"] := false;
__n71 := {  };
__n71["type"] := "Property";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "configurable";
__n71["key"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := false;
__n73["raw"] := "false";
__n71["value"] := __n73;
__n71["computed"] := false;
__n71["kind"] := "init";
__n71["shorthand"] := false;
__n61 := [ __n62, __n65, __n68, __n71 ];
__n60["properties"] := __n61;
__n57 := [ __n58, __n59, __n60 ];
__n53["arguments"] := __n57;
__n52["expression"] := __n53;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "!==";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "c";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 3.;
__n77["raw"] := "3";
__n75["right"] := __n77;
__n74["test"] := __n75;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "$ERROR";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "+";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "Expected c === 3, actually ";
__n85["raw"] := "'Expected c === 3, actually '";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "c";
__n84["right"] := __n86;
__n83 := [ __n84 ];
__n81["arguments"] := __n83;
__n80["expression"] := __n81;
__n79 := [ __n80 ];
__n78["body"] := __n79;
__n74["consequent"] := __n78;
__n74["alternate"] := null;
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "verifyEqualTo";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "arguments";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "genericProperty";
__n92["raw"] := "\"genericProperty\"";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "getFunc";
__n93["callee"] := __n94;
__n95 := [  ];
__n93["arguments"] := __n95;
__n90 := [ __n91, __n92, __n93 ];
__n88["arguments"] := __n90;
__n87["expression"] := __n88;
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "verifyWritable";
__n97["callee"] := __n98;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "arguments";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "genericProperty";
__n101["raw"] := "\"genericProperty\"";
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "testgetFunction";
__n102["raw"] := "\"testgetFunction\"";
__n99 := [ __n100, __n101, __n102 ];
__n97["arguments"] := __n99;
__n96["expression"] := __n97;
__n103 := {  };
__n103["type"] := "ExpressionStatement";
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "verifyNotEnumerable";
__n104["callee"] := __n105;
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "arguments";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "genericProperty";
__n108["raw"] := "\"genericProperty\"";
__n106 := [ __n107, __n108 ];
__n104["arguments"] := __n106;
__n103["expression"] := __n104;
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "verifyNotConfigurable";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "arguments";
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "genericProperty";
__n114["raw"] := "\"genericProperty\"";
__n112 := [ __n113, __n114 ];
__n110["arguments"] := __n112;
__n109["expression"] := __n110;
__n7 := [ __n8, __n48, __n50, __n52, __n74, __n87, __n96, __n103, __n109 ];
__n6["body"] := __n7;
__n115 := [  ];
__n6["variableDeclarations"] := __n115;
__n117 := {  };
__n117["type"] := "FunctionDeclaration";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "getFunc";
__n117["id"] := __n118;
__n119 := [  ];
__n117["params"] := __n119;
__n120 := {  };
__n120["type"] := "BlockStatement";
__n122 := {  };
__n122["type"] := "ReturnStatement";
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "getFunctionString";
__n123["raw"] := "\"getFunctionString\"";
__n122["argument"] := __n123;
__n121 := [ __n122 ];
__n120["body"] := __n121;
__n124 := [  ];
__n120["variableDeclarations"] := __n124;
__n125 := [  ];
__n120["functionDeclarations"] := __n125;
__n120["codeType"] := "function";
__n120["strict"] := false;
__n117["body"] := __n120;
__n117["generator"] := false;
__n117["expression"] := false;
__n117["async"] := false;
__n126 := {  };
__n126["type"] := "FunctionDeclaration";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "setFunc";
__n126["id"] := __n127;
__n128 := [ "value" ];
__n126["params"] := __n128;
__n129 := {  };
__n129["type"] := "BlockStatement";
__n131 := {  };
__n131["type"] := "ExpressionStatement";
__n132 := {  };
__n132["type"] := "AssignmentExpression";
__n132["operator"] := "=";
__n133 := {  };
__n133["type"] := "MemberExpression";
__n134 := {  };
__n134["type"] := "ThisExpression";
__n133["object"] := __n134;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "testgetFunction";
__n135["raw"] := "\"testgetFunction\"";
__n133["property"] := __n135;
__n133["computed"] := true;
__n132["left"] := __n133;
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "value";
__n132["right"] := __n136;
__n131["expression"] := __n132;
__n130 := [ __n131 ];
__n129["body"] := __n130;
__n137 := [  ];
__n129["variableDeclarations"] := __n137;
__n138 := [  ];
__n129["functionDeclarations"] := __n138;
__n129["codeType"] := "function";
__n129["strict"] := false;
__n126["body"] := __n129;
__n126["generator"] := false;
__n126["expression"] := false;
__n126["async"] := false;
__n116 := [ __n117, __n126 ];
__n6["functionDeclarations"] := __n116;
__n6["codeType"] := "function";
__n6["strict"] := false;
__n4["body"] := __n6;
__n4["generator"] := false;
__n4["expression"] := false;
__n4["async"] := false;
__n3["callee"] := __n4;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := 1.;
__n140["raw"] := "1";
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := 2.;
__n141["raw"] := "2";
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := 3.;
__n142["raw"] := "3";
__n139 := [ __n140, __n141, __n142 ];
__n3["arguments"] := __n139;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n143 := [  ];
__n0["variableDeclarations"] := __n143;
__n144 := [  ];
__n0["functionDeclarations"] := __n144;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}