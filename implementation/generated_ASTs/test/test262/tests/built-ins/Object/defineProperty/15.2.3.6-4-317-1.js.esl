function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "FunctionExpression";
__n4["id"] := null;
__n5 := [ "a", "b", "c" ];
__n4["params"] := __n5;
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "defineProperty";
__n12["raw"] := "\"defineProperty\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "arguments";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "genericProperty";
__n15["raw"] := "\"genericProperty\"";
__n16 := {  };
__n16["type"] := "ObjectExpression";
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "value";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 1001.;
__n20["raw"] := "1001";
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "writable";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := false;
__n23["raw"] := "false";
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "configurable";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := false;
__n26["raw"] := "false";
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n17 := [ __n18, __n21, __n24 ];
__n16["properties"] := __n17;
__n13 := [ __n14, __n15, __n16 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n27 := {  };
__n27["type"] := "TryStatement";
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "Object";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "defineProperty";
__n34["raw"] := "\"defineProperty\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "arguments";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "genericProperty";
__n37["raw"] := "\"genericProperty\"";
__n38 := {  };
__n38["type"] := "ObjectExpression";
__n40 := {  };
__n40["type"] := "Property";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "value";
__n40["key"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 1002.;
__n42["raw"] := "1002";
__n40["value"] := __n42;
__n40["computed"] := false;
__n40["kind"] := "init";
__n40["shorthand"] := false;
__n39 := [ __n40 ];
__n38["properties"] := __n39;
__n35 := [ __n36, __n37, __n38 ];
__n31["arguments"] := __n35;
__n30["expression"] := __n31;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "$ERROR";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "Expected an exception.";
__n47["raw"] := "\"Expected an exception.\"";
__n46 := [ __n47 ];
__n44["arguments"] := __n46;
__n43["expression"] := __n44;
__n29 := [ __n30, __n43 ];
__n28["body"] := __n29;
__n27["block"] := __n28;
__n48 := {  };
__n48["type"] := "CatchClause";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "e";
__n48["param"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "IfStatement";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "!==";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "b";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 2.;
__n55["raw"] := "2";
__n53["right"] := __n55;
__n52["test"] := __n53;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "$ERROR";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "+";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "Expected \"b === 2;\", actually ";
__n63["raw"] := "'Expected \"b === 2;\", actually '";
__n62["left"] := __n63;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "b";
__n62["right"] := __n64;
__n61 := [ __n62 ];
__n59["arguments"] := __n61;
__n58["expression"] := __n59;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n52["consequent"] := __n56;
__n52["alternate"] := null;
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "verifyEqualTo";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "arguments";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "genericProperty";
__n70["raw"] := "\"genericProperty\"";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 1001.;
__n71["raw"] := "1001";
__n68 := [ __n69, __n70, __n71 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "verifyNotWritable";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "arguments";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "genericProperty";
__n77["raw"] := "\"genericProperty\"";
__n75 := [ __n76, __n77 ];
__n73["arguments"] := __n75;
__n72["expression"] := __n73;
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "verifyNotEnumerable";
__n79["callee"] := __n80;
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "arguments";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "genericProperty";
__n83["raw"] := "\"genericProperty\"";
__n81 := [ __n82, __n83 ];
__n79["arguments"] := __n81;
__n78["expression"] := __n79;
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "verifyNotConfigurable";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "arguments";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "genericProperty";
__n89["raw"] := "\"genericProperty\"";
__n87 := [ __n88, __n89 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n90 := {  };
__n90["type"] := "IfStatement";
__n91 := {  };
__n91["type"] := "UnaryExpression";
__n91["operator"] := "!";
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "instanceof";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "e";
__n92["left"] := __n93;
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "TypeError";
__n92["right"] := __n94;
__n91["argument"] := __n92;
__n91["prefix"] := true;
__n90["test"] := __n91;
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "CallExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "$ERROR";
__n98["callee"] := __n99;
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "+";
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "Expected TypeError, got ";
__n102["raw"] := "\"Expected TypeError, got \"";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "e";
__n101["right"] := __n103;
__n100 := [ __n101 ];
__n98["arguments"] := __n100;
__n97["expression"] := __n98;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n90["consequent"] := __n95;
__n90["alternate"] := null;
__n51 := [ __n52, __n65, __n72, __n78, __n84, __n90 ];
__n50["body"] := __n51;
__n48["body"] := __n50;
__n27["handler"] := __n48;
__n27["finalizer"] := null;
__n7 := [ __n8, __n27 ];
__n6["body"] := __n7;
__n104 := [  ];
__n6["variableDeclarations"] := __n104;
__n105 := [  ];
__n6["functionDeclarations"] := __n105;
__n6["codeType"] := "function";
__n6["strict"] := false;
__n4["body"] := __n6;
__n4["generator"] := false;
__n4["async"] := false;
__n4["expression"] := false;
__n3["callee"] := __n4;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 1.;
__n107["raw"] := "1";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := 2.;
__n108["raw"] := "2";
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := 3.;
__n109["raw"] := "3";
__n106 := [ __n107, __n108, __n109 ];
__n3["arguments"] := __n106;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n110 := [  ];
__n0["variableDeclarations"] := __n110;
__n111 := [  ];
__n0["functionDeclarations"] := __n111;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}