function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "FunctionExpression";
__n4["id"] := null;
__n5 := [ "a", "b", "c" ];
__n4["params"] := __n5;
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "setFunc";
__n8["expression"] := __n9;
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Object";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "defineProperty";
__n14["raw"] := "\"defineProperty\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arguments";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "genericProperty";
__n17["raw"] := "\"genericProperty\"";
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "set";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "setFunc";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "enumerable";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := true;
__n25["raw"] := "true";
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n26 := {  };
__n26["type"] := "Property";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "configurable";
__n26["key"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := false;
__n28["raw"] := "false";
__n26["value"] := __n28;
__n26["computed"] := false;
__n26["kind"] := "init";
__n26["shorthand"] := false;
__n19 := [ __n20, __n23, __n26 ];
__n18["properties"] := __n19;
__n15 := [ __n16, __n17, __n18 ];
__n11["arguments"] := __n15;
__n10["expression"] := __n11;
__n29 := {  };
__n29["type"] := "TryStatement";
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "Object";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "defineProperty";
__n36["raw"] := "\"defineProperty\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "arguments";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "genericProperty";
__n39["raw"] := "\"genericProperty\"";
__n40 := {  };
__n40["type"] := "ObjectExpression";
__n42 := {  };
__n42["type"] := "Property";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "enumerable";
__n42["key"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := false;
__n44["raw"] := "false";
__n42["value"] := __n44;
__n42["computed"] := false;
__n42["kind"] := "init";
__n42["shorthand"] := false;
__n41 := [ __n42 ];
__n40["properties"] := __n41;
__n37 := [ __n38, __n39, __n40 ];
__n33["arguments"] := __n37;
__n32["expression"] := __n33;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "Expected an exception.";
__n49["raw"] := "\"Expected an exception.\"";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n31 := [ __n32, __n45 ];
__n30["body"] := __n31;
__n29["block"] := __n30;
__n50 := {  };
__n50["type"] := "CatchClause";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "e";
__n50["param"] := __n51;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "c";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 3.;
__n57["raw"] := "3";
__n55["right"] := __n57;
__n54["test"] := __n55;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$ERROR";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "+";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "Expected c === 3, actually ";
__n65["raw"] := "'Expected c === 3, actually '";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "c";
__n64["right"] := __n66;
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n54["consequent"] := __n58;
__n54["alternate"] := null;
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "verifyWritable";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "arguments";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "genericProperty";
__n72["raw"] := "\"genericProperty\"";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "genericPropertyString";
__n73["raw"] := "\"genericPropertyString\"";
__n70 := [ __n71, __n72, __n73 ];
__n68["arguments"] := __n70;
__n67["expression"] := __n68;
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "verifyEnumerable";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "arguments";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "genericProperty";
__n79["raw"] := "\"genericProperty\"";
__n77 := [ __n78, __n79 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "verifyNotConfigurable";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "arguments";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "genericProperty";
__n85["raw"] := "\"genericProperty\"";
__n83 := [ __n84, __n85 ];
__n81["arguments"] := __n83;
__n80["expression"] := __n81;
__n86 := {  };
__n86["type"] := "IfStatement";
__n87 := {  };
__n87["type"] := "UnaryExpression";
__n87["operator"] := "!";
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "instanceof";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "e";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "TypeError";
__n88["right"] := __n90;
__n87["argument"] := __n88;
__n87["prefix"] := true;
__n86["test"] := __n87;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "Expected TypeError, got ";
__n98["raw"] := "\"Expected TypeError, got \"";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "e";
__n97["right"] := __n99;
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n86["consequent"] := __n91;
__n86["alternate"] := null;
__n53 := [ __n54, __n67, __n74, __n80, __n86 ];
__n52["body"] := __n53;
__n50["body"] := __n52;
__n29["handler"] := __n50;
__n29["finalizer"] := null;
__n7 := [ __n8, __n10, __n29 ];
__n6["body"] := __n7;
__n100 := [  ];
__n6["variableDeclarations"] := __n100;
__n102 := {  };
__n102["type"] := "FunctionDeclaration";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "setFunc";
__n102["id"] := __n103;
__n104 := [ "value" ];
__n102["params"] := __n104;
__n105 := {  };
__n105["type"] := "BlockStatement";
__n107 := {  };
__n107["type"] := "ExpressionStatement";
__n108 := {  };
__n108["type"] := "AssignmentExpression";
__n108["operator"] := "=";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "ThisExpression";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "genericPropertyString";
__n111["raw"] := "\"genericPropertyString\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n108["left"] := __n109;
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "value";
__n108["right"] := __n112;
__n107["expression"] := __n108;
__n106 := [ __n107 ];
__n105["body"] := __n106;
__n113 := [  ];
__n105["variableDeclarations"] := __n113;
__n114 := [  ];
__n105["functionDeclarations"] := __n114;
__n105["codeType"] := "function";
__n105["strict"] := false;
__n102["body"] := __n105;
__n102["generator"] := false;
__n102["async"] := false;
__n102["expression"] := false;
__n101 := [ __n102 ];
__n6["functionDeclarations"] := __n101;
__n6["codeType"] := "function";
__n6["strict"] := false;
__n4["body"] := __n6;
__n4["generator"] := false;
__n4["async"] := false;
__n4["expression"] := false;
__n3["callee"] := __n4;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 1.;
__n116["raw"] := "1";
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 2.;
__n117["raw"] := "2";
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 3.;
__n118["raw"] := "3";
__n115 := [ __n116, __n117, __n118 ];
__n3["arguments"] := __n115;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n119 := [  ];
__n0["variableDeclarations"] := __n119;
__n120 := [  ];
__n0["functionDeclarations"] := __n120;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}