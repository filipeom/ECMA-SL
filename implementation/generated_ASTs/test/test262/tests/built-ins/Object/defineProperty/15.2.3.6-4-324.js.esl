function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "FunctionExpression";
__n4["id"] := null;
__n5 := [  ];
__n4["params"] := __n5;
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "setFunc";
__n8["expression"] := __n9;
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Object";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "defineProperty";
__n14["raw"] := "\"defineProperty\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arguments";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "genericProperty";
__n17["raw"] := "\"genericProperty\"";
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "set";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "setFunc";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "configurable";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := false;
__n25["raw"] := "false";
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n19 := [ __n20, __n23 ];
__n18["properties"] := __n19;
__n15 := [ __n16, __n17, __n18 ];
__n11["arguments"] := __n15;
__n10["expression"] := __n11;
__n26 := {  };
__n26["type"] := "TryStatement";
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Object";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "defineProperty";
__n33["raw"] := "\"defineProperty\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "arguments";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "genericProperty";
__n36["raw"] := "\"genericProperty\"";
__n37 := {  };
__n37["type"] := "ObjectExpression";
__n39 := {  };
__n39["type"] := "Property";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "configurable";
__n39["key"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := true;
__n41["raw"] := "true";
__n39["value"] := __n41;
__n39["computed"] := false;
__n39["kind"] := "init";
__n39["shorthand"] := false;
__n38 := [ __n39 ];
__n37["properties"] := __n38;
__n34 := [ __n35, __n36, __n37 ];
__n30["arguments"] := __n34;
__n29["expression"] := __n30;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "Expected an exception.";
__n46["raw"] := "\"Expected an exception.\"";
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n28 := [ __n29, __n42 ];
__n27["body"] := __n28;
__n26["block"] := __n27;
__n47 := {  };
__n47["type"] := "CatchClause";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "e";
__n47["param"] := __n48;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "verifyWritable";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "arguments";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "genericProperty";
__n56["raw"] := "\"genericProperty\"";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "genericPropertyString";
__n57["raw"] := "\"genericPropertyString\"";
__n54 := [ __n55, __n56, __n57 ];
__n52["arguments"] := __n54;
__n51["expression"] := __n52;
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "verifyNotEnumerable";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "arguments";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "genericProperty";
__n63["raw"] := "\"genericProperty\"";
__n61 := [ __n62, __n63 ];
__n59["arguments"] := __n61;
__n58["expression"] := __n59;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "verifyNotConfigurable";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "arguments";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "genericProperty";
__n69["raw"] := "\"genericProperty\"";
__n67 := [ __n68, __n69 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n70 := {  };
__n70["type"] := "IfStatement";
__n71 := {  };
__n71["type"] := "UnaryExpression";
__n71["operator"] := "!";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "instanceof";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "e";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "TypeError";
__n72["right"] := __n74;
__n71["argument"] := __n72;
__n71["prefix"] := true;
__n70["test"] := __n71;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "$ERROR";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "+";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "Expected TypeError, got ";
__n82["raw"] := "\"Expected TypeError, got \"";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "e";
__n81["right"] := __n83;
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n70["consequent"] := __n75;
__n70["alternate"] := null;
__n50 := [ __n51, __n58, __n64, __n70 ];
__n49["body"] := __n50;
__n47["body"] := __n49;
__n26["handler"] := __n47;
__n26["finalizer"] := null;
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := false;
__n85["raw"] := "false";
__n84["expression"] := __n85;
__n7 := [ __n8, __n10, __n26, __n84 ];
__n6["body"] := __n7;
__n86 := [  ];
__n6["variableDeclarations"] := __n86;
__n88 := {  };
__n88["type"] := "FunctionDeclaration";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "setFunc";
__n88["id"] := __n89;
__n90 := [ "value" ];
__n88["params"] := __n90;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "AssignmentExpression";
__n94["operator"] := "=";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "ThisExpression";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "genericPropertyString";
__n97["raw"] := "\"genericPropertyString\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["left"] := __n95;
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "value";
__n94["right"] := __n98;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n99 := [  ];
__n91["variableDeclarations"] := __n99;
__n100 := [  ];
__n91["functionDeclarations"] := __n100;
__n91["codeType"] := "function";
__n91["strict"] := false;
__n88["body"] := __n91;
__n88["generator"] := false;
__n88["expression"] := false;
__n88["async"] := false;
__n87 := [ __n88 ];
__n6["functionDeclarations"] := __n87;
__n6["codeType"] := "function";
__n6["strict"] := false;
__n4["body"] := __n6;
__n4["generator"] := false;
__n4["expression"] := false;
__n4["async"] := false;
__n3["callee"] := __n4;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 1.;
__n102["raw"] := "1";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := 2.;
__n103["raw"] := "2";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := 3.;
__n104["raw"] := "3";
__n101 := [ __n102, __n103, __n104 ];
__n3["arguments"] := __n101;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n105 := [  ];
__n0["variableDeclarations"] := __n105;
__n106 := [  ];
__n0["functionDeclarations"] := __n106;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}