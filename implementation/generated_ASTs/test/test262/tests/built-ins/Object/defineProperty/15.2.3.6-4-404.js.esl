function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Object";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "defineProperty";
__n6["raw"] := "\"defineProperty\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Boolean";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "prototype";
__n10["raw"] := "\"prototype\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "prop";
__n11["raw"] := "\"prop\"";
__n12 := {  };
__n12["type"] := "ObjectExpression";
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "value";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1001.;
__n16["raw"] := "1001";
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n17 := {  };
__n17["type"] := "Property";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "writable";
__n17["key"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := true;
__n19["raw"] := "true";
__n17["value"] := __n19;
__n17["computed"] := false;
__n17["kind"] := "init";
__n17["shorthand"] := false;
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "enumerable";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := true;
__n22["raw"] := "true";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "configurable";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := true;
__n25["raw"] := "true";
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n13 := [ __n14, __n17, __n20, __n23 ];
__n12["properties"] := __n13;
__n7 := [ __n8, __n11, __n12 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "boolObj";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "NewExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Boolean";
__n30["callee"] := __n31;
__n32 := [  ];
__n30["arguments"] := __n32;
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n33 := {  };
__n33["type"] := "VariableDeclaration";
__n35 := {  };
__n35["type"] := "VariableDeclarator";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "verifyEnumerable";
__n35["id"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := false;
__n37["raw"] := "false";
__n35["init"] := __n37;
__n34 := [ __n35 ];
__n33["declarations"] := __n34;
__n33["kind"] := "var";
__n38 := {  };
__n38["type"] := "ForInStatement";
__n39 := {  };
__n39["type"] := "VariableDeclaration";
__n41 := {  };
__n41["type"] := "VariableDeclarator";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "p";
__n41["id"] := __n42;
__n41["init"] := null;
__n40 := [ __n41 ];
__n39["declarations"] := __n40;
__n39["kind"] := "var";
__n38["left"] := __n39;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "boolObj";
__n38["right"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "===";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "p";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "prop";
__n49["raw"] := "\"prop\"";
__n47["right"] := __n49;
__n46["test"] := __n47;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "AssignmentExpression";
__n53["operator"] := "=";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "verifyEnumerable";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := true;
__n55["raw"] := "true";
__n53["right"] := __n55;
__n52["expression"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n46["consequent"] := __n50;
__n46["alternate"] := null;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n38["body"] := __n44;
__n38["each"] := false;
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "assert";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "sameValue";
__n60["raw"] := "\"sameValue\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "boolObj";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "hasOwnProperty";
__n65["raw"] := "\"hasOwnProperty\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "prop";
__n67["raw"] := "\"prop\"";
__n66 := [ __n67 ];
__n62["arguments"] := __n66;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := false;
__n68["raw"] := "false";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "boolObj.hasOwnProperty(\"prop\")";
__n69["raw"] := "'boolObj.hasOwnProperty(\"prop\")'";
__n61 := [ __n62, __n68, __n69 ];
__n57["arguments"] := __n61;
__n56["expression"] := __n57;
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "assert";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "verifyEnumerable";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "verifyEnumerable !== true";
__n75["raw"] := "'verifyEnumerable !== true'";
__n73 := [ __n74, __n75 ];
__n71["arguments"] := __n73;
__n70["expression"] := __n71;
__n1 := [ __n2, __n26, __n33, __n38, __n56, __n70 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n76 := [ "boolObj", "verifyEnumerable", "p" ];
__n0["variableDeclarations"] := __n76;
__n77 := [  ];
__n0["functionDeclarations"] := __n77;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}