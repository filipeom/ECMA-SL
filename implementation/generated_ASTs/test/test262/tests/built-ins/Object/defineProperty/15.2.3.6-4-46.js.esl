function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "defineProperty";
__n12["raw"] := "\"defineProperty\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "obj";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "property";
__n15["raw"] := "\"property\"";
__n16 := {  };
__n16["type"] := "ObjectExpression";
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "enumerable";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := true;
__n20["raw"] := "true";
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n17 := [ __n18 ];
__n16["properties"] := __n17;
__n13 := [ __n14, __n15, __n16 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n21 := {  };
__n21["type"] := "VariableDeclaration";
__n23 := {  };
__n23["type"] := "VariableDeclarator";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "isEnumerable";
__n23["id"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := false;
__n25["raw"] := "false";
__n23["init"] := __n25;
__n22 := [ __n23 ];
__n21["declarations"] := __n22;
__n21["kind"] := "var";
__n26 := {  };
__n26["type"] := "ForInStatement";
__n27 := {  };
__n27["type"] := "VariableDeclarator";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "item";
__n27["id"] := __n28;
__n27["init"] := null;
__n26["left"] := __n27;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "obj";
__n26["right"] := __n29;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "IfStatement";
__n33 := {  };
__n33["type"] := "LogicalExpression";
__n33["operator"] := "&&";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "obj";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "hasOwnProperty";
__n37["raw"] := "\"hasOwnProperty\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "item";
__n38 := [ __n39 ];
__n34["arguments"] := __n38;
__n33["left"] := __n34;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "===";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "item";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "property";
__n42["raw"] := "\"property\"";
__n40["right"] := __n42;
__n33["right"] := __n40;
__n32["test"] := __n33;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "AssignmentExpression";
__n46["operator"] := "=";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "isEnumerable";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := true;
__n48["raw"] := "true";
__n46["right"] := __n48;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n32["consequent"] := __n43;
__n32["alternate"] := null;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n26["body"] := __n30;
__n26["each"] := false;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "assert";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "obj";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "hasOwnProperty";
__n56["raw"] := "\"hasOwnProperty\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["callee"] := __n54;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "property";
__n58["raw"] := "\"property\"";
__n57 := [ __n58 ];
__n53["arguments"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "obj.hasOwnProperty(\"property\") !== true";
__n59["raw"] := "'obj.hasOwnProperty(\"property\") !== true'";
__n52 := [ __n53, __n59 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "assert";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "isEnumerable";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "isEnumerable !== true";
__n65["raw"] := "'isEnumerable !== true'";
__n63 := [ __n64, __n65 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n1 := [ __n2, __n8, __n21, __n26, __n49, __n60 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n66 := [ "obj", "isEnumerable", "item" ];
__n0["variableDeclarations"] := __n66;
__n67 := [  ];
__n0["functionDeclarations"] := __n67;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}