function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "propertyFound";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "obj";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n12 := [  ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "verifySetFunc";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "data";
__n17["raw"] := "\"data\"";
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "setFunc";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "FunctionExpression";
__n22["id"] := null;
__n23 := [ "value" ];
__n22["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "AssignmentExpression";
__n27["operator"] := "=";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "verifySetFunc";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "value";
__n27["right"] := __n29;
__n26["expression"] := __n27;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n30 := [  ];
__n24["variableDeclarations"] := __n30;
__n31 := [  ];
__n24["functionDeclarations"] := __n31;
__n24["codeType"] := "function";
__n24["strict"] := false;
__n22["body"] := __n24;
__n22["generator"] := false;
__n22["async"] := false;
__n22["expression"] := false;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "Object";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "defineProperty";
__n36["raw"] := "\"defineProperty\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "obj";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "prop";
__n39["raw"] := "\"prop\"";
__n40 := {  };
__n40["type"] := "ObjectExpression";
__n42 := {  };
__n42["type"] := "Property";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "get";
__n42["key"] := __n43;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "undefined";
__n42["value"] := __n44;
__n42["computed"] := false;
__n42["kind"] := "init";
__n42["shorthand"] := false;
__n45 := {  };
__n45["type"] := "Property";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "set";
__n45["key"] := __n46;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "setFunc";
__n45["value"] := __n47;
__n45["computed"] := false;
__n45["kind"] := "init";
__n45["shorthand"] := false;
__n48 := {  };
__n48["type"] := "Property";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "enumerable";
__n48["key"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := true;
__n50["raw"] := "true";
__n48["value"] := __n50;
__n48["computed"] := false;
__n48["kind"] := "init";
__n48["shorthand"] := false;
__n51 := {  };
__n51["type"] := "Property";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "configurable";
__n51["key"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := false;
__n53["raw"] := "false";
__n51["value"] := __n53;
__n51["computed"] := false;
__n51["kind"] := "init";
__n51["shorthand"] := false;
__n41 := [ __n42, __n45, __n48, __n51 ];
__n40["properties"] := __n41;
__n37 := [ __n38, __n39, __n40 ];
__n33["arguments"] := __n37;
__n32["expression"] := __n33;
__n54 := {  };
__n54["type"] := "VariableDeclaration";
__n56 := {  };
__n56["type"] := "VariableDeclarator";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "propertyDefineCorrect";
__n56["id"] := __n57;
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "obj";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "hasOwnProperty";
__n61["raw"] := "\"hasOwnProperty\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n58["callee"] := __n59;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "prop";
__n63["raw"] := "\"prop\"";
__n62 := [ __n63 ];
__n58["arguments"] := __n62;
__n56["init"] := __n58;
__n55 := [ __n56 ];
__n54["declarations"] := __n55;
__n54["kind"] := "var";
__n64 := {  };
__n64["type"] := "VariableDeclaration";
__n66 := {  };
__n66["type"] := "VariableDeclarator";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "desc";
__n66["id"] := __n67;
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "Object";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "getOwnPropertyDescriptor";
__n71["raw"] := "\"getOwnPropertyDescriptor\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "obj";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "prop";
__n74["raw"] := "\"prop\"";
__n72 := [ __n73, __n74 ];
__n68["arguments"] := __n72;
__n66["init"] := __n68;
__n65 := [ __n66 ];
__n64["declarations"] := __n65;
__n64["kind"] := "var";
__n75 := {  };
__n75["type"] := "ForInStatement";
__n76 := {  };
__n76["type"] := "VariableDeclarator";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "p";
__n76["id"] := __n77;
__n76["init"] := null;
__n75["left"] := __n76;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "obj";
__n75["right"] := __n78;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "IfStatement";
__n82 := {  };
__n82["type"] := "BinaryExpression";
__n82["operator"] := "===";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "p";
__n82["left"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "prop";
__n84["raw"] := "\"prop\"";
__n82["right"] := __n84;
__n81["test"] := __n82;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "AssignmentExpression";
__n88["operator"] := "=";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "propertyFound";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := true;
__n90["raw"] := "true";
__n88["right"] := __n90;
__n87["expression"] := __n88;
__n91 := {  };
__n91["type"] := "BreakStatement";
__n91["label"] := null;
__n86 := [ __n87, __n91 ];
__n85["body"] := __n86;
__n81["consequent"] := __n85;
__n81["alternate"] := null;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n75["body"] := __n79;
__n75["each"] := false;
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "assert";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "propertyFound";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "Property not found";
__n97["raw"] := "'Property not found'";
__n95 := [ __n96, __n97 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "assert";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "propertyDefineCorrect";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "propertyDefineCorrect !== true";
__n103["raw"] := "'propertyDefineCorrect !== true'";
__n101 := [ __n102, __n103 ];
__n99["arguments"] := __n101;
__n98["expression"] := __n99;
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "MemberExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "assert";
__n106["object"] := __n107;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "sameValue";
__n108["raw"] := "\"sameValue\"";
__n106["property"] := __n108;
__n106["computed"] := true;
__n105["callee"] := __n106;
__n110 := {  };
__n110["type"] := "MemberExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "desc";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "enumerable";
__n112["raw"] := "\"enumerable\"";
__n110["property"] := __n112;
__n110["computed"] := true;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := true;
__n113["raw"] := "true";
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "desc.enumerable";
__n114["raw"] := "'desc.enumerable'";
__n109 := [ __n110, __n113, __n114 ];
__n105["arguments"] := __n109;
__n104["expression"] := __n105;
__n1 := [ __n2, __n7, __n13, __n18, __n32, __n54, __n64, __n75, __n92, __n98, __n104 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n115 := [ "propertyFound", "obj", "verifySetFunc", "setFunc", "propertyDefineCorrect", "desc", "p" ];
__n0["variableDeclarations"] := __n115;
__n116 := [  ];
__n0["functionDeclarations"] := __n116;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}