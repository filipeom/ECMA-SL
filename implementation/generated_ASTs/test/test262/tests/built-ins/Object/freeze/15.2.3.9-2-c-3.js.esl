function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "resultSetFun";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := false;
__n12["raw"] := "false";
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Object";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "defineProperty";
__n17["raw"] := "\"defineProperty\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "obj";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "foo1";
__n20["raw"] := "\"foo1\"";
__n21 := {  };
__n21["type"] := "ObjectExpression";
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "value";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 10.;
__n25["raw"] := "10";
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n26 := {  };
__n26["type"] := "Property";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "writable";
__n26["key"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := false;
__n28["raw"] := "false";
__n26["value"] := __n28;
__n26["computed"] := false;
__n26["kind"] := "init";
__n26["shorthand"] := false;
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "enumerable";
__n29["key"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := true;
__n31["raw"] := "true";
__n29["value"] := __n31;
__n29["computed"] := false;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n32 := {  };
__n32["type"] := "Property";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "configurable";
__n32["key"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := true;
__n34["raw"] := "true";
__n32["value"] := __n34;
__n32["computed"] := false;
__n32["kind"] := "init";
__n32["shorthand"] := false;
__n22 := [ __n23, __n26, __n29, __n32 ];
__n21["properties"] := __n22;
__n18 := [ __n19, __n20, __n21 ];
__n14["arguments"] := __n18;
__n13["expression"] := __n14;
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "get_func";
__n35["expression"] := __n36;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "set_func";
__n37["expression"] := __n38;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Object";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "defineProperty";
__n43["raw"] := "\"defineProperty\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "obj";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "foo2";
__n46["raw"] := "\"foo2\"";
__n47 := {  };
__n47["type"] := "ObjectExpression";
__n49 := {  };
__n49["type"] := "Property";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "get";
__n49["key"] := __n50;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "get_func";
__n49["value"] := __n51;
__n49["computed"] := false;
__n49["kind"] := "init";
__n49["shorthand"] := false;
__n52 := {  };
__n52["type"] := "Property";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "set";
__n52["key"] := __n53;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "set_func";
__n52["value"] := __n54;
__n52["computed"] := false;
__n52["kind"] := "init";
__n52["shorthand"] := false;
__n55 := {  };
__n55["type"] := "Property";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "enumerable";
__n55["key"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := true;
__n57["raw"] := "true";
__n55["value"] := __n57;
__n55["computed"] := false;
__n55["kind"] := "init";
__n55["shorthand"] := false;
__n58 := {  };
__n58["type"] := "Property";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "configurable";
__n58["key"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := true;
__n60["raw"] := "true";
__n58["value"] := __n60;
__n58["computed"] := false;
__n58["kind"] := "init";
__n58["shorthand"] := false;
__n48 := [ __n49, __n52, __n55, __n58 ];
__n47["properties"] := __n48;
__n44 := [ __n45, __n46, __n47 ];
__n40["arguments"] := __n44;
__n39["expression"] := __n40;
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "Object";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "freeze";
__n65["raw"] := "\"freeze\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "obj";
__n66 := [ __n67 ];
__n62["arguments"] := __n66;
__n61["expression"] := __n62;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "verifyNotConfigurable";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "obj";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "foo2";
__n73["raw"] := "\"foo2\"";
__n71 := [ __n72, __n73 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "verifyEqualTo";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "obj";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "foo2";
__n79["raw"] := "\"foo2\"";
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 10.;
__n80["raw"] := "10";
__n77 := [ __n78, __n79, __n80 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "AssignmentExpression";
__n82["operator"] := "=";
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "obj";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "foo2";
__n85["raw"] := "\"foo2\"";
__n83["property"] := __n85;
__n83["computed"] := true;
__n82["left"] := __n83;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 12.;
__n86["raw"] := "12";
__n82["right"] := __n86;
__n81["expression"] := __n82;
__n87 := {  };
__n87["type"] := "IfStatement";
__n88 := {  };
__n88["type"] := "UnaryExpression";
__n88["operator"] := "!";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "resultSetFun";
__n88["argument"] := __n89;
__n88["prefix"] := true;
__n87["test"] := __n88;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "$ERROR";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "Expected obj[\"foo2\"] set() to be called, but was not.";
__n96["raw"] := "'Expected obj[\"foo2\"] set() to be called, but was not.'";
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n87["consequent"] := __n90;
__n87["alternate"] := null;
__n97 := {  };
__n97["type"] := "IfStatement";
__n98 := {  };
__n98["type"] := "UnaryExpression";
__n98["operator"] := "!";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "isEnumerable";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "obj";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "foo2";
__n103["raw"] := "\"foo2\"";
__n101 := [ __n102, __n103 ];
__n99["arguments"] := __n101;
__n98["argument"] := __n99;
__n98["prefix"] := true;
__n97["test"] := __n98;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "$ERROR";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "Expected obj[\"foo2\"] to be enumerable.";
__n110["raw"] := "'Expected obj[\"foo2\"] to be enumerable.'";
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n105 := [ __n106 ];
__n104["body"] := __n105;
__n97["consequent"] := __n104;
__n97["alternate"] := null;
__n111 := {  };
__n111["type"] := "VariableDeclaration";
__n113 := {  };
__n113["type"] := "VariableDeclarator";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "desc1";
__n113["id"] := __n114;
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "MemberExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "Object";
__n116["object"] := __n117;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "getOwnPropertyDescriptor";
__n118["raw"] := "\"getOwnPropertyDescriptor\"";
__n116["property"] := __n118;
__n116["computed"] := true;
__n115["callee"] := __n116;
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "obj";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "foo1";
__n121["raw"] := "\"foo1\"";
__n119 := [ __n120, __n121 ];
__n115["arguments"] := __n119;
__n113["init"] := __n115;
__n112 := [ __n113 ];
__n111["declarations"] := __n112;
__n111["kind"] := "var";
__n122 := {  };
__n122["type"] := "IfStatement";
__n123 := {  };
__n123["type"] := "LogicalExpression";
__n123["operator"] := "||";
__n124 := {  };
__n124["type"] := "MemberExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "desc1";
__n124["object"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "configurable";
__n126["raw"] := "\"configurable\"";
__n124["property"] := __n126;
__n124["computed"] := true;
__n123["left"] := __n124;
__n127 := {  };
__n127["type"] := "MemberExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "desc1";
__n127["object"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "writable";
__n129["raw"] := "\"writable\"";
__n127["property"] := __n129;
__n127["computed"] := true;
__n123["right"] := __n127;
__n122["test"] := __n123;
__n130 := {  };
__n130["type"] := "BlockStatement";
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "$ERROR";
__n133["callee"] := __n134;
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "+";
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "Expected obj[\"foo1\"] to be non-writable, non-configurable; actually ";
__n137["raw"] := "'Expected obj[\"foo1\"] to be non-writable, non-configurable; actually '";
__n136["left"] := __n137;
__n138 := {  };
__n138["type"] := "CallExpression";
__n139 := {  };
__n139["type"] := "MemberExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "JSON";
__n139["object"] := __n140;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "stringify";
__n141["raw"] := "\"stringify\"";
__n139["property"] := __n141;
__n139["computed"] := true;
__n138["callee"] := __n139;
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "desc1";
__n142 := [ __n143 ];
__n138["arguments"] := __n142;
__n136["right"] := __n138;
__n135 := [ __n136 ];
__n133["arguments"] := __n135;
__n132["expression"] := __n133;
__n131 := [ __n132 ];
__n130["body"] := __n131;
__n122["consequent"] := __n130;
__n122["alternate"] := null;
__n144 := {  };
__n144["type"] := "VariableDeclaration";
__n146 := {  };
__n146["type"] := "VariableDeclarator";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "desc2";
__n146["id"] := __n147;
__n148 := {  };
__n148["type"] := "CallExpression";
__n149 := {  };
__n149["type"] := "MemberExpression";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "Object";
__n149["object"] := __n150;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "getOwnPropertyDescriptor";
__n151["raw"] := "\"getOwnPropertyDescriptor\"";
__n149["property"] := __n151;
__n149["computed"] := true;
__n148["callee"] := __n149;
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "obj";
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "foo2";
__n154["raw"] := "\"foo2\"";
__n152 := [ __n153, __n154 ];
__n148["arguments"] := __n152;
__n146["init"] := __n148;
__n145 := [ __n146 ];
__n144["declarations"] := __n145;
__n144["kind"] := "var";
__n155 := {  };
__n155["type"] := "IfStatement";
__n156 := {  };
__n156["type"] := "LogicalExpression";
__n156["operator"] := "||";
__n157 := {  };
__n157["type"] := "MemberExpression";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "desc2";
__n157["object"] := __n158;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "configurable";
__n159["raw"] := "\"configurable\"";
__n157["property"] := __n159;
__n157["computed"] := true;
__n156["left"] := __n157;
__n160 := {  };
__n160["type"] := "MemberExpression";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "desc2";
__n160["object"] := __n161;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := "writable";
__n162["raw"] := "\"writable\"";
__n160["property"] := __n162;
__n160["computed"] := true;
__n156["right"] := __n160;
__n155["test"] := __n156;
__n163 := {  };
__n163["type"] := "BlockStatement";
__n165 := {  };
__n165["type"] := "ExpressionStatement";
__n166 := {  };
__n166["type"] := "CallExpression";
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "$ERROR";
__n166["callee"] := __n167;
__n169 := {  };
__n169["type"] := "BinaryExpression";
__n169["operator"] := "+";
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := "Expected obj[\"foo2\"] to be non-writable, non-configurable; actually ";
__n170["raw"] := "'Expected obj[\"foo2\"] to be non-writable, non-configurable; actually '";
__n169["left"] := __n170;
__n171 := {  };
__n171["type"] := "CallExpression";
__n172 := {  };
__n172["type"] := "MemberExpression";
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "JSON";
__n172["object"] := __n173;
__n174 := {  };
__n174["type"] := "Literal";
__n174["value"] := "stringify";
__n174["raw"] := "\"stringify\"";
__n172["property"] := __n174;
__n172["computed"] := true;
__n171["callee"] := __n172;
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "desc2";
__n175 := [ __n176 ];
__n171["arguments"] := __n175;
__n169["right"] := __n171;
__n168 := [ __n169 ];
__n166["arguments"] := __n168;
__n165["expression"] := __n166;
__n164 := [ __n165 ];
__n163["body"] := __n164;
__n155["consequent"] := __n163;
__n155["alternate"] := null;
__n177 := {  };
__n177["type"] := "ExpressionStatement";
__n178 := {  };
__n178["type"] := "CallExpression";
__n179 := {  };
__n179["type"] := "Identifier";
__n179["name"] := "verifyEqualTo";
__n178["callee"] := __n179;
__n181 := {  };
__n181["type"] := "Identifier";
__n181["name"] := "obj";
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := "foo1";
__n182["raw"] := "\"foo1\"";
__n183 := {  };
__n183["type"] := "Literal";
__n183["value"] := 10.;
__n183["raw"] := "10";
__n180 := [ __n181, __n182, __n183 ];
__n178["arguments"] := __n180;
__n177["expression"] := __n178;
__n184 := {  };
__n184["type"] := "ExpressionStatement";
__n185 := {  };
__n185["type"] := "CallExpression";
__n186 := {  };
__n186["type"] := "Identifier";
__n186["name"] := "verifyNotWritable";
__n185["callee"] := __n186;
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "obj";
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := "foo1";
__n189["raw"] := "\"foo1\"";
__n187 := [ __n188, __n189 ];
__n185["arguments"] := __n187;
__n184["expression"] := __n185;
__n190 := {  };
__n190["type"] := "ExpressionStatement";
__n191 := {  };
__n191["type"] := "CallExpression";
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "verifyEnumerable";
__n191["callee"] := __n192;
__n194 := {  };
__n194["type"] := "Identifier";
__n194["name"] := "obj";
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "foo1";
__n195["raw"] := "\"foo1\"";
__n193 := [ __n194, __n195 ];
__n191["arguments"] := __n193;
__n190["expression"] := __n191;
__n196 := {  };
__n196["type"] := "ExpressionStatement";
__n197 := {  };
__n197["type"] := "CallExpression";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "verifyNotConfigurable";
__n197["callee"] := __n198;
__n200 := {  };
__n200["type"] := "Identifier";
__n200["name"] := "obj";
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := "foo1";
__n201["raw"] := "\"foo1\"";
__n199 := [ __n200, __n201 ];
__n197["arguments"] := __n199;
__n196["expression"] := __n197;
__n1 := [ __n2, __n8, __n13, __n35, __n37, __n39, __n61, __n68, __n74, __n81, __n87, __n97, __n111, __n122, __n144, __n155, __n177, __n184, __n190, __n196 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n202 := [ "obj", "resultSetFun", "desc1", "desc2" ];
__n0["variableDeclarations"] := __n202;
__n204 := {  };
__n204["type"] := "FunctionDeclaration";
__n205 := {  };
__n205["type"] := "Identifier";
__n205["name"] := "get_func";
__n204["id"] := __n205;
__n206 := [  ];
__n204["params"] := __n206;
__n207 := {  };
__n207["type"] := "BlockStatement";
__n209 := {  };
__n209["type"] := "ReturnStatement";
__n210 := {  };
__n210["type"] := "Literal";
__n210["value"] := 10.;
__n210["raw"] := "10";
__n209["argument"] := __n210;
__n208 := [ __n209 ];
__n207["body"] := __n208;
__n211 := [  ];
__n207["variableDeclarations"] := __n211;
__n212 := [  ];
__n207["functionDeclarations"] := __n212;
__n207["codeType"] := "function";
__n207["strict"] := false;
__n204["body"] := __n207;
__n204["generator"] := false;
__n204["expression"] := false;
__n204["async"] := false;
__n213 := {  };
__n213["type"] := "FunctionDeclaration";
__n214 := {  };
__n214["type"] := "Identifier";
__n214["name"] := "set_func";
__n213["id"] := __n214;
__n215 := [  ];
__n213["params"] := __n215;
__n216 := {  };
__n216["type"] := "BlockStatement";
__n218 := {  };
__n218["type"] := "ExpressionStatement";
__n219 := {  };
__n219["type"] := "AssignmentExpression";
__n219["operator"] := "=";
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "resultSetFun";
__n219["left"] := __n220;
__n221 := {  };
__n221["type"] := "Literal";
__n221["value"] := true;
__n221["raw"] := "true";
__n219["right"] := __n221;
__n218["expression"] := __n219;
__n217 := [ __n218 ];
__n216["body"] := __n217;
__n222 := [  ];
__n216["variableDeclarations"] := __n222;
__n223 := [  ];
__n216["functionDeclarations"] := __n223;
__n216["codeType"] := "function";
__n216["strict"] := false;
__n213["body"] := __n216;
__n213["generator"] := false;
__n213["expression"] := false;
__n213["async"] := false;
__n203 := [ __n204, __n213 ];
__n0["functionDeclarations"] := __n203;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}