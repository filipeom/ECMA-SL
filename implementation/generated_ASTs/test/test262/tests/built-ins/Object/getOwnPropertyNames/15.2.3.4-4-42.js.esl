function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "propertyFound";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "str";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "NewExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "String";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "abc";
__n14["raw"] := "\"abc\"";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Object";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "defineProperty";
__n19["raw"] := "\"defineProperty\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "str";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "ownProperty";
__n22["raw"] := "\"ownProperty\"";
__n23 := {  };
__n23["type"] := "ObjectExpression";
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "value";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "ownString";
__n27["raw"] := "\"ownString\"";
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n28 := {  };
__n28["type"] := "Property";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "configurable";
__n28["key"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := true;
__n30["raw"] := "true";
__n28["value"] := __n30;
__n28["computed"] := false;
__n28["kind"] := "init";
__n28["shorthand"] := false;
__n24 := [ __n25, __n28 ];
__n23["properties"] := __n24;
__n20 := [ __n21, __n22, __n23 ];
__n16["arguments"] := __n20;
__n15["expression"] := __n16;
__n31 := {  };
__n31["type"] := "VariableDeclaration";
__n33 := {  };
__n33["type"] := "VariableDeclarator";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "result";
__n33["id"] := __n34;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Object";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "getOwnPropertyNames";
__n38["raw"] := "\"getOwnPropertyNames\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "str";
__n39 := [ __n40 ];
__n35["arguments"] := __n39;
__n33["init"] := __n35;
__n32 := [ __n33 ];
__n31["declarations"] := __n32;
__n31["kind"] := "var";
__n41 := {  };
__n41["type"] := "ForInStatement";
__n42 := {  };
__n42["type"] := "VariableDeclaration";
__n44 := {  };
__n44["type"] := "VariableDeclarator";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "p";
__n44["id"] := __n45;
__n44["init"] := null;
__n43 := [ __n44 ];
__n42["declarations"] := __n43;
__n42["kind"] := "var";
__n41["left"] := __n42;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "result";
__n41["right"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "IfStatement";
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "===";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n51["computed"] := true;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "result";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "p";
__n51["property"] := __n53;
__n50["left"] := __n51;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "ownProperty";
__n54["raw"] := "\"ownProperty\"";
__n50["right"] := __n54;
__n49["test"] := __n50;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "AssignmentExpression";
__n58["operator"] := "=";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "propertyFound";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := true;
__n60["raw"] := "true";
__n58["right"] := __n60;
__n57["expression"] := __n58;
__n61 := {  };
__n61["type"] := "BreakStatement";
__n61["label"] := null;
__n56 := [ __n57, __n61 ];
__n55["body"] := __n56;
__n49["consequent"] := __n55;
__n49["alternate"] := null;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n41["body"] := __n47;
__n41["each"] := false;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "assert";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "propertyFound";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "Property not found";
__n67["raw"] := "'Property not found'";
__n65 := [ __n66, __n67 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n1 := [ __n2, __n7, __n15, __n31, __n41, __n62 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n68 := [ "propertyFound", "str", "result", "p" ];
__n0["variableDeclarations"] := __n68;
__n69 := [  ];
__n0["functionDeclarations"] := __n69;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}