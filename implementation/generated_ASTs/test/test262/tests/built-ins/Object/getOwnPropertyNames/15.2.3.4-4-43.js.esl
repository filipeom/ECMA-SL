function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "propertyFound";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "str";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "NewExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "String";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "abc";
__n14["raw"] := "\"abc\"";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Object";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "defineProperty";
__n19["raw"] := "\"defineProperty\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "str";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "ownProperty";
__n22["raw"] := "\"ownProperty\"";
__n23 := {  };
__n23["type"] := "ObjectExpression";
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "get";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "FunctionExpression";
__n27["id"] := null;
__n28 := [  ];
__n27["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ReturnStatement";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "ownString";
__n32["raw"] := "\"ownString\"";
__n31["argument"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n33 := [  ];
__n29["variableDeclarations"] := __n33;
__n34 := [  ];
__n29["functionDeclarations"] := __n34;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n27["body"] := __n29;
__n27["generator"] := false;
__n27["expression"] := false;
__n27["async"] := false;
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n35 := {  };
__n35["type"] := "Property";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "configurable";
__n35["key"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := true;
__n37["raw"] := "true";
__n35["value"] := __n37;
__n35["computed"] := false;
__n35["kind"] := "init";
__n35["shorthand"] := false;
__n24 := [ __n25, __n35 ];
__n23["properties"] := __n24;
__n20 := [ __n21, __n22, __n23 ];
__n16["arguments"] := __n20;
__n15["expression"] := __n16;
__n38 := {  };
__n38["type"] := "VariableDeclaration";
__n40 := {  };
__n40["type"] := "VariableDeclarator";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "result";
__n40["id"] := __n41;
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Object";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "getOwnPropertyNames";
__n45["raw"] := "\"getOwnPropertyNames\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "str";
__n46 := [ __n47 ];
__n42["arguments"] := __n46;
__n40["init"] := __n42;
__n39 := [ __n40 ];
__n38["declarations"] := __n39;
__n38["kind"] := "var";
__n48 := {  };
__n48["type"] := "ForInStatement";
__n49 := {  };
__n49["type"] := "VariableDeclaration";
__n51 := {  };
__n51["type"] := "VariableDeclarator";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "p";
__n51["id"] := __n52;
__n51["init"] := null;
__n50 := [ __n51 ];
__n49["declarations"] := __n50;
__n49["kind"] := "var";
__n48["left"] := __n49;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "result";
__n48["right"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "===";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n58["computed"] := true;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "result";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "p";
__n58["property"] := __n60;
__n57["left"] := __n58;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "ownProperty";
__n61["raw"] := "\"ownProperty\"";
__n57["right"] := __n61;
__n56["test"] := __n57;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "AssignmentExpression";
__n65["operator"] := "=";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "propertyFound";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := true;
__n67["raw"] := "true";
__n65["right"] := __n67;
__n64["expression"] := __n65;
__n68 := {  };
__n68["type"] := "BreakStatement";
__n68["label"] := null;
__n63 := [ __n64, __n68 ];
__n62["body"] := __n63;
__n56["consequent"] := __n62;
__n56["alternate"] := null;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n48["body"] := __n54;
__n48["each"] := false;
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "assert";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "propertyFound";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "Property not found";
__n74["raw"] := "'Property not found'";
__n72 := [ __n73, __n74 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n1 := [ __n2, __n7, __n15, __n38, __n48, __n69 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n75 := [ "propertyFound", "str", "result", "p" ];
__n0["variableDeclarations"] := __n75;
__n76 := [  ];
__n0["functionDeclarations"] := __n76;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}