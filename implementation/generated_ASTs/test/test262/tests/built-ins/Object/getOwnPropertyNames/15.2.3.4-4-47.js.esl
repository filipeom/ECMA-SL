function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "propertyFound";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "arr";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ArrayExpression";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 0.;
__n13["raw"] := "0";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 1.;
__n14["raw"] := "1";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 2.;
__n15["raw"] := "2";
__n12 := [ __n13, __n14, __n15 ];
__n11["elements"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "AssignmentExpression";
__n17["operator"] := "=";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "arr";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "ownProperty";
__n20["raw"] := "\"ownProperty\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["left"] := __n18;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "ownArray";
__n21["raw"] := "\"ownArray\"";
__n17["right"] := __n21;
__n16["expression"] := __n17;
__n22 := {  };
__n22["type"] := "VariableDeclaration";
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "result";
__n24["id"] := __n25;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Object";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "getOwnPropertyNames";
__n29["raw"] := "\"getOwnPropertyNames\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "arr";
__n30 := [ __n31 ];
__n26["arguments"] := __n30;
__n24["init"] := __n26;
__n23 := [ __n24 ];
__n22["declarations"] := __n23;
__n22["kind"] := "var";
__n32 := {  };
__n32["type"] := "ForInStatement";
__n33 := {  };
__n33["type"] := "VariableDeclarator";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "p";
__n33["id"] := __n34;
__n33["init"] := null;
__n32["left"] := __n33;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "result";
__n32["right"] := __n35;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "IfStatement";
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "===";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n40["computed"] := true;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "result";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "p";
__n40["property"] := __n42;
__n39["left"] := __n40;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "ownProperty";
__n43["raw"] := "\"ownProperty\"";
__n39["right"] := __n43;
__n38["test"] := __n39;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "AssignmentExpression";
__n47["operator"] := "=";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "propertyFound";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := true;
__n49["raw"] := "true";
__n47["right"] := __n49;
__n46["expression"] := __n47;
__n50 := {  };
__n50["type"] := "BreakStatement";
__n50["label"] := null;
__n45 := [ __n46, __n50 ];
__n44["body"] := __n45;
__n38["consequent"] := __n44;
__n38["alternate"] := null;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n32["body"] := __n36;
__n32["each"] := false;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "assert";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "propertyFound";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "Property not found";
__n56["raw"] := "'Property not found'";
__n54 := [ __n55, __n56 ];
__n52["arguments"] := __n54;
__n51["expression"] := __n52;
__n1 := [ __n2, __n7, __n16, __n22, __n32, __n51 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n57 := [ "propertyFound", "arr", "result", "p" ];
__n0["variableDeclarations"] := __n57;
__n58 := [  ];
__n0["functionDeclarations"] := __n58;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}