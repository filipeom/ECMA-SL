function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "propertyFound";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "obj";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "a";
__n14["raw"] := "\"a\"";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "a";
__n15["raw"] := "\"a\"";
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "init";
__n13["shorthand"] := false;
__n12 := [ __n13 ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n16 := {  };
__n16["type"] := "VariableDeclaration";
__n18 := {  };
__n18["type"] := "VariableDeclarator";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "result";
__n18["id"] := __n19;
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Object";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "getOwnPropertyNames";
__n23["raw"] := "\"getOwnPropertyNames\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "obj";
__n24 := [ __n25 ];
__n20["arguments"] := __n24;
__n18["init"] := __n20;
__n17 := [ __n18 ];
__n16["declarations"] := __n17;
__n16["kind"] := "var";
__n26 := {  };
__n26["type"] := "ForInStatement";
__n27 := {  };
__n27["type"] := "VariableDeclarator";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "p";
__n27["id"] := __n28;
__n27["init"] := null;
__n26["left"] := __n27;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "result";
__n26["right"] := __n29;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "IfStatement";
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "===";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n34["computed"] := true;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "result";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "p";
__n34["property"] := __n36;
__n33["left"] := __n34;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "a";
__n37["raw"] := "\"a\"";
__n33["right"] := __n37;
__n32["test"] := __n33;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "AssignmentExpression";
__n41["operator"] := "=";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "propertyFound";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := true;
__n43["raw"] := "true";
__n41["right"] := __n43;
__n40["expression"] := __n41;
__n44 := {  };
__n44["type"] := "BreakStatement";
__n44["label"] := null;
__n39 := [ __n40, __n44 ];
__n38["body"] := __n39;
__n32["consequent"] := __n38;
__n32["alternate"] := null;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n26["body"] := __n30;
__n26["each"] := false;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "assert";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "propertyFound";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "Property not found";
__n50["raw"] := "'Property not found'";
__n48 := [ __n49, __n50 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n1 := [ __n2, __n7, __n16, __n26, __n45 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n51 := [ "propertyFound", "obj", "result", "p" ];
__n0["variableDeclarations"] := __n51;
__n52 := [  ];
__n0["functionDeclarations"] := __n52;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}