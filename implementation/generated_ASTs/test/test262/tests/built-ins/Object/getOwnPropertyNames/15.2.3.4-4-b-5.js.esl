function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "propertyFound";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "obj";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "a";
__n14["raw"] := "\"a\"";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "a";
__n15["raw"] := "\"a\"";
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "init";
__n13["shorthand"] := false;
__n12 := [ __n13 ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n16 := {  };
__n16["type"] := "VariableDeclaration";
__n18 := {  };
__n18["type"] := "VariableDeclarator";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "result";
__n18["id"] := __n19;
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Object";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "getOwnPropertyNames";
__n23["raw"] := "\"getOwnPropertyNames\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "obj";
__n24 := [ __n25 ];
__n20["arguments"] := __n24;
__n18["init"] := __n20;
__n17 := [ __n18 ];
__n16["declarations"] := __n17;
__n16["kind"] := "var";
__n26 := {  };
__n26["type"] := "ForInStatement";
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "p";
__n29["id"] := __n30;
__n29["init"] := null;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n26["left"] := __n27;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "result";
__n26["right"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "IfStatement";
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "===";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n36["computed"] := true;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "result";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "p";
__n36["property"] := __n38;
__n35["left"] := __n36;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "a";
__n39["raw"] := "\"a\"";
__n35["right"] := __n39;
__n34["test"] := __n35;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "propertyFound";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := true;
__n45["raw"] := "true";
__n43["right"] := __n45;
__n42["expression"] := __n43;
__n46 := {  };
__n46["type"] := "BreakStatement";
__n46["label"] := null;
__n41 := [ __n42, __n46 ];
__n40["body"] := __n41;
__n34["consequent"] := __n40;
__n34["alternate"] := null;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n26["body"] := __n32;
__n26["each"] := false;
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "assert";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "propertyFound";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "Property not found";
__n52["raw"] := "'Property not found'";
__n50 := [ __n51, __n52 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n1 := [ __n2, __n7, __n16, __n26, __n47 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n53 := [ "propertyFound", "obj", "result", "p" ];
__n0["variableDeclarations"] := __n53;
__n54 := [  ];
__n0["functionDeclarations"] := __n54;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}