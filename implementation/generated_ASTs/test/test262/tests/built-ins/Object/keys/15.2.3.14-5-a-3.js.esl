function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "prop1";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 100.;
__n10["raw"] := "100";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "array";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Object";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "keys";
__n18["raw"] := "\"keys\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "obj";
__n19 := [ __n20 ];
__n15["arguments"] := __n19;
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n21 := {  };
__n21["type"] := "VariableDeclaration";
__n23 := {  };
__n23["type"] := "VariableDeclarator";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "desc";
__n23["id"] := __n24;
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Object";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "getOwnPropertyDescriptor";
__n28["raw"] := "\"getOwnPropertyDescriptor\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "array";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "0";
__n31["raw"] := "\"0\"";
__n29 := [ __n30, __n31 ];
__n25["arguments"] := __n29;
__n23["init"] := __n25;
__n22 := [ __n23 ];
__n21["declarations"] := __n22;
__n21["kind"] := "var";
__n32 := {  };
__n32["type"] := "VariableDeclaration";
__n34 := {  };
__n34["type"] := "VariableDeclarator";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "result";
__n34["id"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := false;
__n36["raw"] := "false";
__n34["init"] := __n36;
__n33 := [ __n34 ];
__n32["declarations"] := __n33;
__n32["kind"] := "var";
__n37 := {  };
__n37["type"] := "ForInStatement";
__n38 := {  };
__n38["type"] := "VariableDeclarator";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "index";
__n38["id"] := __n39;
__n38["init"] := null;
__n37["left"] := __n38;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "array";
__n37["right"] := __n40;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "IfStatement";
__n44 := {  };
__n44["type"] := "LogicalExpression";
__n44["operator"] := "&&";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "obj";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "hasOwnProperty";
__n48["raw"] := "\"hasOwnProperty\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "MemberExpression";
__n50["computed"] := true;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "array";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "index";
__n50["property"] := __n52;
__n49 := [ __n50 ];
__n45["arguments"] := __n49;
__n44["left"] := __n45;
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "===";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n54["computed"] := true;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "array";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "index";
__n54["property"] := __n56;
__n53["left"] := __n54;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "prop1";
__n57["raw"] := "\"prop1\"";
__n53["right"] := __n57;
__n44["right"] := __n53;
__n43["test"] := __n44;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "AssignmentExpression";
__n61["operator"] := "=";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "result";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := true;
__n63["raw"] := "true";
__n61["right"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n43["consequent"] := __n58;
__n43["alternate"] := null;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n37["body"] := __n41;
__n37["each"] := false;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "assert";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "result";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "result !== true";
__n69["raw"] := "'result !== true'";
__n67 := [ __n68, __n69 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "assert";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "desc";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "hasOwnProperty";
__n77["raw"] := "\"hasOwnProperty\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "enumerable";
__n79["raw"] := "\"enumerable\"";
__n78 := [ __n79 ];
__n74["arguments"] := __n78;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "desc.hasOwnProperty(\"enumerable\") !== true";
__n80["raw"] := "'desc.hasOwnProperty(\"enumerable\") !== true'";
__n73 := [ __n74, __n80 ];
__n71["arguments"] := __n73;
__n70["expression"] := __n71;
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "assert";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "sameValue";
__n85["raw"] := "\"sameValue\"";
__n83["property"] := __n85;
__n83["computed"] := true;
__n82["callee"] := __n83;
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "desc";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "enumerable";
__n89["raw"] := "\"enumerable\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := true;
__n90["raw"] := "true";
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "desc.enumerable";
__n91["raw"] := "'desc.enumerable'";
__n86 := [ __n87, __n90, __n91 ];
__n82["arguments"] := __n86;
__n81["expression"] := __n82;
__n1 := [ __n2, __n11, __n21, __n32, __n37, __n64, __n70, __n81 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n92 := [ "obj", "array", "desc", "result", "index" ];
__n0["variableDeclarations"] := __n92;
__n93 := [  ];
__n0["functionDeclarations"] := __n93;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}