function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "constr";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Object";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "prototype";
__n9["raw"] := "\"prototype\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["object"] := __n7;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "constructor";
__n10["raw"] := "\"constructor\"";
__n6["property"] := __n10;
__n6["computed"] := true;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "obj";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "NewExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "constr";
__n15["callee"] := __n16;
__n17 := [  ];
__n15["arguments"] := __n17;
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n18 := {  };
__n18["type"] := "IfStatement";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "===";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "obj";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "undefined";
__n19["right"] := __n21;
__n18["test"] := __n19;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "$ERROR";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "#0: new Object() return the newly created native object.";
__n28["raw"] := "'#0: new Object() return the newly created native object.'";
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n24["expression"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n18["consequent"] := __n22;
__n18["alternate"] := null;
__n29 := {  };
__n29["type"] := "IfStatement";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "!==";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "obj";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "constructor";
__n33["raw"] := "\"constructor\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["left"] := __n31;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Object";
__n30["right"] := __n34;
__n29["test"] := __n30;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "#1: new Object() create a new native ECMAScript object";
__n41["raw"] := "'#1: new Object() create a new native ECMAScript object'";
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n29["consequent"] := __n35;
__n29["alternate"] := null;
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "UnaryExpression";
__n43["operator"] := "!";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "Object";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "prototype";
__n48["raw"] := "\"prototype\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["object"] := __n46;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "isPrototypeOf";
__n49["raw"] := "\"isPrototypeOf\"";
__n45["property"] := __n49;
__n45["computed"] := true;
__n44["callee"] := __n45;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "obj";
__n50 := [ __n51 ];
__n44["arguments"] := __n50;
__n43["argument"] := __n44;
__n43["prefix"] := true;
__n42["test"] := __n43;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "#2: when new Object() calls the [[Prototype]] property of the newly constructed object is set to the Object prototype object.";
__n58["raw"] := "'#2: when new Object() calls the [[Prototype]] property of the newly constructed object is set to the Object prototype object.'";
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n42["consequent"] := __n52;
__n42["alternate"] := null;
__n59 := {  };
__n59["type"] := "VariableDeclaration";
__n61 := {  };
__n61["type"] := "VariableDeclarator";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "to_string_result";
__n61["id"] := __n62;
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "+";
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "+";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "[object ";
__n65["raw"] := "'[object '";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "Object";
__n66["raw"] := "'Object'";
__n64["right"] := __n66;
__n63["left"] := __n64;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "]";
__n67["raw"] := "']'";
__n63["right"] := __n67;
__n61["init"] := __n63;
__n60 := [ __n61 ];
__n59["declarations"] := __n60;
__n59["kind"] := "var";
__n68 := {  };
__n68["type"] := "IfStatement";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "!==";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "MemberExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "obj";
__n71["object"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "toString";
__n73["raw"] := "\"toString\"";
__n71["property"] := __n73;
__n71["computed"] := true;
__n70["callee"] := __n71;
__n74 := [  ];
__n70["arguments"] := __n74;
__n69["left"] := __n70;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "to_string_result";
__n69["right"] := __n75;
__n68["test"] := __n69;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "$ERROR";
__n79["callee"] := __n80;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "#3: when new Object() calls the [[Class]] property of the newly constructed object is set to \"Object\".";
__n82["raw"] := "'#3: when new Object() calls the [[Class]] property of the newly constructed object is set to \"Object\".'";
__n81 := [ __n82 ];
__n79["arguments"] := __n81;
__n78["expression"] := __n79;
__n77 := [ __n78 ];
__n76["body"] := __n77;
__n68["consequent"] := __n76;
__n68["alternate"] := null;
__n83 := {  };
__n83["type"] := "IfStatement";
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "!==";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "obj";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "valueOf";
__n90["raw"] := "\"valueOf\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n87["callee"] := __n88;
__n91 := [  ];
__n87["arguments"] := __n91;
__n86["object"] := __n87;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "toString";
__n92["raw"] := "\"toString\"";
__n86["property"] := __n92;
__n86["computed"] := true;
__n85["callee"] := __n86;
__n93 := [  ];
__n85["arguments"] := __n93;
__n84["left"] := __n85;
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "to_string_result";
__n84["right"] := __n94;
__n83["test"] := __n84;
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "CallExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "$ERROR";
__n98["callee"] := __n99;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "#4: when new Object() calls the newly constructed object has no [[Value]] property.";
__n101["raw"] := "'#4: when new Object() calls the newly constructed object has no [[Value]] property.'";
__n100 := [ __n101 ];
__n98["arguments"] := __n100;
__n97["expression"] := __n98;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n83["consequent"] := __n95;
__n83["alternate"] := null;
__n1 := [ __n2, __n11, __n18, __n29, __n42, __n59, __n68, __n83 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n102 := [ "constr", "obj", "to_string_result" ];
__n0["variableDeclarations"] := __n102;
__n103 := [  ];
__n0["functionDeclarations"] := __n103;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}