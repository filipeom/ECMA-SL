function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "o";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "assert";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "sameValue";
__n12["raw"] := "\"sameValue\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "o";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "hasOwnProperty";
__n17["raw"] := "\"hasOwnProperty\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "foo";
__n19["raw"] := "\"foo\"";
__n18 := [ __n19 ];
__n14["arguments"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := false;
__n20["raw"] := "false";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "o.hasOwnProperty(\"foo\")";
__n21["raw"] := "'o.hasOwnProperty(\"foo\")'";
__n13 := [ __n14, __n20, __n21 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n1 := [ __n2, __n8 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n22 := [ "o" ];
__n0["variableDeclarations"] := __n22;
__n23 := [  ];
__n0["functionDeclarations"] := __n23;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}