function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "FACTORY";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "FunctionExpression";
__n6["id"] := null;
__n7 := [  ];
__n6["params"] := __n7;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "AssignmentExpression";
__n11["operator"] := "=";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "ThisExpression";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "aproperty";
__n14["raw"] := "\"aproperty\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["left"] := __n12;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n11["right"] := __n15;
__n10["expression"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n16 := [  ];
__n8["variableDeclarations"] := __n16;
__n17 := [  ];
__n8["functionDeclarations"] := __n17;
__n8["codeType"] := "function";
__n8["strict"] := false;
__n6["body"] := __n8;
__n6["generator"] := false;
__n6["expression"] := false;
__n6["async"] := false;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "instance";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "NewExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "FACTORY";
__n22["callee"] := __n23;
__n24 := [  ];
__n22["arguments"] := __n24;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n25 := {  };
__n25["type"] := "IfStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "!==";
__n27 := {  };
__n27["type"] := "UnaryExpression";
__n27["operator"] := "typeof";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Object";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "prototype";
__n31["raw"] := "\"prototype\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["object"] := __n29;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "hasOwnProperty";
__n32["raw"] := "\"hasOwnProperty\"";
__n28["property"] := __n32;
__n28["computed"] := true;
__n27["argument"] := __n28;
__n27["prefix"] := true;
__n26["left"] := __n27;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "function";
__n33["raw"] := "\"function\"";
__n26["right"] := __n33;
__n25["test"] := __n26;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "#1: hasOwnProperty method is defined";
__n40["raw"] := "'#1: hasOwnProperty method is defined'";
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n25["consequent"] := __n34;
__n25["alternate"] := null;
__n41 := {  };
__n41["type"] := "IfStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "!==";
__n43 := {  };
__n43["type"] := "UnaryExpression";
__n43["operator"] := "typeof";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "instance";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "hasOwnProperty";
__n46["raw"] := "\"hasOwnProperty\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["argument"] := __n44;
__n43["prefix"] := true;
__n42["left"] := __n43;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "function";
__n47["raw"] := "\"function\"";
__n42["right"] := __n47;
__n41["test"] := __n42;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "$ERROR";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#2: hasOwnProperty method is accessed";
__n54["raw"] := "'#2: hasOwnProperty method is accessed'";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n41["consequent"] := __n48;
__n41["alternate"] := null;
__n55 := {  };
__n55["type"] := "IfStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "instance";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "hasOwnProperty";
__n59["raw"] := "\"hasOwnProperty\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "toString";
__n61["raw"] := "\"toString\"";
__n60 := [ __n61 ];
__n56["arguments"] := __n60;
__n55["test"] := __n56;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "$ERROR";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "#3: hasOwnProperty method works properly";
__n68["raw"] := "'#3: hasOwnProperty method works properly'";
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n55["consequent"] := __n62;
__n55["alternate"] := null;
__n69 := {  };
__n69["type"] := "IfStatement";
__n70 := {  };
__n70["type"] := "UnaryExpression";
__n70["operator"] := "!";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "instance";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "hasOwnProperty";
__n74["raw"] := "\"hasOwnProperty\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "aproperty";
__n76["raw"] := "\"aproperty\"";
__n75 := [ __n76 ];
__n71["arguments"] := __n75;
__n70["argument"] := __n71;
__n70["prefix"] := true;
__n69["test"] := __n70;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "$ERROR";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "#4: hasOwnProperty method works properly";
__n83["raw"] := "'#4: hasOwnProperty method works properly'";
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n78 := [ __n79 ];
__n77["body"] := __n78;
__n69["consequent"] := __n77;
__n69["alternate"] := null;
__n1 := [ __n2, __n18, __n25, __n41, __n55, __n69 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n84 := [ "FACTORY", "instance" ];
__n0["variableDeclarations"] := __n84;
__n85 := [  ];
__n0["functionDeclarations"] := __n85;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}