function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "USER_FACTORY";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "FORCEDUSER_FACTORY";
__n4["expression"] := __n5;
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "proto";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "NewExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "USER_FACTORY";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "noname";
__n13["raw"] := "\"noname\"";
__n12 := [ __n13 ];
__n10["arguments"] := __n12;
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "AssignmentExpression";
__n15["operator"] := "=";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "FORCEDUSER_FACTORY";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "prototype";
__n18["raw"] := "\"prototype\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["left"] := __n16;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "proto";
__n15["right"] := __n19;
__n14["expression"] := __n15;
__n20 := {  };
__n20["type"] := "VariableDeclaration";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "luke";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "NewExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "FORCEDUSER_FACTORY";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "Luke Skywalker";
__n27["raw"] := "\"Luke Skywalker\"";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 12.;
__n28["raw"] := "12";
__n26 := [ __n27, __n28 ];
__n24["arguments"] := __n26;
__n22["init"] := __n24;
__n21 := [ __n22 ];
__n20["declarations"] := __n21;
__n20["kind"] := "var";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "assert";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "sameValue";
__n33["raw"] := "\"sameValue\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "proto";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "isPrototypeOf";
__n38["raw"] := "\"isPrototypeOf\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "luke";
__n39 := [ __n40 ];
__n35["arguments"] := __n39;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := true;
__n41["raw"] := "true";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#1: native ECMAScript objects have an internal property called [[Prototype]].";
__n42["raw"] := "'#1: native ECMAScript objects have an internal property called [[Prototype]].'";
__n34 := [ __n35, __n41, __n42 ];
__n30["arguments"] := __n34;
__n29["expression"] := __n30;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "assert";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "sameValue";
__n47["raw"] := "\"sameValue\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["callee"] := __n45;
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "USER_FACTORY";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "prototype";
__n53["raw"] := "\"prototype\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["object"] := __n51;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "isPrototypeOf";
__n54["raw"] := "\"isPrototypeOf\"";
__n50["property"] := __n54;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "luke";
__n55 := [ __n56 ];
__n49["arguments"] := __n55;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := true;
__n57["raw"] := "true";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "#2: native ECMAScript objects have an internal property called [[Prototype]].";
__n58["raw"] := "'#2: native ECMAScript objects have an internal property called [[Prototype]].'";
__n48 := [ __n49, __n57, __n58 ];
__n44["arguments"] := __n48;
__n43["expression"] := __n44;
__n59 := {  };
__n59["type"] := "IfStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "Number";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "isPrototypeOf";
__n63["raw"] := "\"isPrototypeOf\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "luke";
__n64 := [ __n65 ];
__n60["arguments"] := __n64;
__n59["test"] := __n60;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "#2: Native ECMAScript objects have an internal property called [[Prototype]].";
__n72["raw"] := "'#2: Native ECMAScript objects have an internal property called [[Prototype]].'";
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n59["consequent"] := __n66;
__n59["alternate"] := null;
__n1 := [ __n2, __n4, __n6, __n14, __n20, __n29, __n43, __n59 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n73 := [ "proto", "luke" ];
__n0["variableDeclarations"] := __n73;
__n75 := {  };
__n75["type"] := "FunctionDeclaration";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "USER_FACTORY";
__n75["id"] := __n76;
__n77 := [ "name" ];
__n75["params"] := __n77;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "AssignmentExpression";
__n81["operator"] := "=";
__n82 := {  };
__n82["type"] := "MemberExpression";
__n83 := {  };
__n83["type"] := "ThisExpression";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "name";
__n84["raw"] := "\"name\"";
__n82["property"] := __n84;
__n82["computed"] := true;
__n81["left"] := __n82;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "name";
__n81["right"] := __n85;
__n80["expression"] := __n81;
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "AssignmentExpression";
__n87["operator"] := "=";
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "ThisExpression";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "getName";
__n90["raw"] := "\"getName\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n87["left"] := __n88;
__n91 := {  };
__n91["type"] := "FunctionExpression";
__n91["id"] := null;
__n92 := [  ];
__n91["params"] := __n92;
__n93 := {  };
__n93["type"] := "BlockStatement";
__n95 := {  };
__n95["type"] := "ReturnStatement";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "name";
__n95["argument"] := __n96;
__n94 := [ __n95 ];
__n93["body"] := __n94;
__n97 := [  ];
__n93["variableDeclarations"] := __n97;
__n98 := [  ];
__n93["functionDeclarations"] := __n98;
__n93["codeType"] := "function";
__n93["strict"] := false;
__n91["body"] := __n93;
__n91["generator"] := false;
__n91["expression"] := false;
__n91["async"] := false;
__n87["right"] := __n91;
__n86["expression"] := __n87;
__n79 := [ __n80, __n86 ];
__n78["body"] := __n79;
__n99 := [  ];
__n78["variableDeclarations"] := __n99;
__n100 := [  ];
__n78["functionDeclarations"] := __n100;
__n78["codeType"] := "function";
__n78["strict"] := false;
__n75["body"] := __n78;
__n75["generator"] := false;
__n75["expression"] := false;
__n75["async"] := false;
__n101 := {  };
__n101["type"] := "FunctionDeclaration";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "FORCEDUSER_FACTORY";
__n101["id"] := __n102;
__n103 := [ "name", "grade" ];
__n101["params"] := __n103;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "AssignmentExpression";
__n107["operator"] := "=";
__n108 := {  };
__n108["type"] := "MemberExpression";
__n109 := {  };
__n109["type"] := "ThisExpression";
__n108["object"] := __n109;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "name";
__n110["raw"] := "\"name\"";
__n108["property"] := __n110;
__n108["computed"] := true;
__n107["left"] := __n108;
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "name";
__n107["right"] := __n111;
__n106["expression"] := __n107;
__n112 := {  };
__n112["type"] := "ExpressionStatement";
__n113 := {  };
__n113["type"] := "AssignmentExpression";
__n113["operator"] := "=";
__n114 := {  };
__n114["type"] := "MemberExpression";
__n115 := {  };
__n115["type"] := "ThisExpression";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "grade";
__n116["raw"] := "\"grade\"";
__n114["property"] := __n116;
__n114["computed"] := true;
__n113["left"] := __n114;
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "grade";
__n113["right"] := __n117;
__n112["expression"] := __n113;
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "AssignmentExpression";
__n119["operator"] := "=";
__n120 := {  };
__n120["type"] := "MemberExpression";
__n121 := {  };
__n121["type"] := "ThisExpression";
__n120["object"] := __n121;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "getGrade";
__n122["raw"] := "\"getGrade\"";
__n120["property"] := __n122;
__n120["computed"] := true;
__n119["left"] := __n120;
__n123 := {  };
__n123["type"] := "FunctionExpression";
__n123["id"] := null;
__n124 := [  ];
__n123["params"] := __n124;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "ReturnStatement";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "grade";
__n127["argument"] := __n128;
__n126 := [ __n127 ];
__n125["body"] := __n126;
__n129 := [  ];
__n125["variableDeclarations"] := __n129;
__n130 := [  ];
__n125["functionDeclarations"] := __n130;
__n125["codeType"] := "function";
__n125["strict"] := false;
__n123["body"] := __n125;
__n123["generator"] := false;
__n123["expression"] := false;
__n123["async"] := false;
__n119["right"] := __n123;
__n118["expression"] := __n119;
__n105 := [ __n106, __n112, __n118 ];
__n104["body"] := __n105;
__n131 := [  ];
__n104["variableDeclarations"] := __n131;
__n132 := [  ];
__n104["functionDeclarations"] := __n132;
__n104["codeType"] := "function";
__n104["strict"] := false;
__n101["body"] := __n104;
__n101["generator"] := false;
__n101["expression"] := false;
__n101["async"] := false;
__n74 := [ __n75, __n101 ];
__n0["functionDeclarations"] := __n74;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}