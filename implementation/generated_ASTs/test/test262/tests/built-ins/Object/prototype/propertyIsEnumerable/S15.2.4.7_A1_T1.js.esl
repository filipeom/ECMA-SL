function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "UnaryExpression";
__n4["operator"] := "typeof";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Object";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "prototype";
__n8["raw"] := "\"prototype\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["object"] := __n6;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "propertyIsEnumerable";
__n9["raw"] := "\"propertyIsEnumerable\"";
__n5["property"] := __n9;
__n5["computed"] := true;
__n4["argument"] := __n5;
__n4["prefix"] := true;
__n3["left"] := __n4;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "function";
__n10["raw"] := "\"function\"";
__n3["right"] := __n10;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "#1: propertyIsEnumerable method is defined";
__n17["raw"] := "'#1: propertyIsEnumerable method is defined'";
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n2["alternate"] := null;
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "proto";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "ObjectExpression";
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "rootprop";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "avis";
__n26["raw"] := "\"avis\"";
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n23 := [ __n24 ];
__n22["properties"] := __n23;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "AVISFACTORY";
__n27["expression"] := __n28;
__n29 := {  };
__n29["type"] := "EmptyStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "AssignmentExpression";
__n31["operator"] := "=";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "AVISFACTORY";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "prototype";
__n34["raw"] := "\"prototype\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["left"] := __n32;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "proto";
__n31["right"] := __n35;
__n30["expression"] := __n31;
__n36 := {  };
__n36["type"] := "VariableDeclaration";
__n38 := {  };
__n38["type"] := "VariableDeclarator";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "seagull";
__n38["id"] := __n39;
__n40 := {  };
__n40["type"] := "NewExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "AVISFACTORY";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "seagull";
__n43["raw"] := "\"seagull\"";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n38["init"] := __n40;
__n37 := [ __n38 ];
__n36["declarations"] := __n37;
__n36["kind"] := "var";
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "UnaryExpression";
__n46["operator"] := "typeof";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "seagull";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "propertyIsEnumerable";
__n49["raw"] := "\"propertyIsEnumerable\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["argument"] := __n47;
__n46["prefix"] := true;
__n45["left"] := __n46;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "function";
__n50["raw"] := "\"function\"";
__n45["right"] := __n50;
__n44["test"] := __n45;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "$ERROR";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "#2: propertyIsEnumerable method is accessed";
__n57["raw"] := "'#2: propertyIsEnumerable method is accessed'";
__n56 := [ __n57 ];
__n54["arguments"] := __n56;
__n53["expression"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n44["consequent"] := __n51;
__n44["alternate"] := null;
__n58 := {  };
__n58["type"] := "IfStatement";
__n59 := {  };
__n59["type"] := "UnaryExpression";
__n59["operator"] := "!";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "seagull";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "propertyIsEnumerable";
__n63["raw"] := "\"propertyIsEnumerable\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "name";
__n65["raw"] := "\"name\"";
__n64 := [ __n65 ];
__n60["arguments"] := __n64;
__n59["argument"] := __n60;
__n59["prefix"] := true;
__n58["test"] := __n59;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "#3: propertyIsEnumerable method works properly";
__n72["raw"] := "'#3: propertyIsEnumerable method works properly'";
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n58["consequent"] := __n66;
__n58["alternate"] := null;
__n73 := {  };
__n73["type"] := "IfStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "seagull";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "propertyIsEnumerable";
__n77["raw"] := "\"propertyIsEnumerable\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "rootprop";
__n79["raw"] := "\"rootprop\"";
__n78 := [ __n79 ];
__n74["arguments"] := __n78;
__n73["test"] := __n74;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "#4: propertyIsEnumerable method does not consider objects in the prototype chain";
__n86["raw"] := "'#4: propertyIsEnumerable method does not consider objects in the prototype chain'";
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n73["consequent"] := __n80;
__n73["alternate"] := null;
__n1 := [ __n2, __n18, __n27, __n29, __n30, __n36, __n44, __n58, __n73 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n87 := [ "proto", "seagull" ];
__n0["variableDeclarations"] := __n87;
__n89 := {  };
__n89["type"] := "FunctionDeclaration";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "AVISFACTORY";
__n89["id"] := __n90;
__n91 := [ "name" ];
__n89["params"] := __n91;
__n92 := {  };
__n92["type"] := "BlockStatement";
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "AssignmentExpression";
__n95["operator"] := "=";
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "ThisExpression";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "name";
__n98["raw"] := "\"name\"";
__n96["property"] := __n98;
__n96["computed"] := true;
__n95["left"] := __n96;
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "name";
__n95["right"] := __n99;
__n94["expression"] := __n95;
__n93 := [ __n94 ];
__n92["body"] := __n93;
__n100 := [  ];
__n92["variableDeclarations"] := __n100;
__n101 := [  ];
__n92["functionDeclarations"] := __n101;
__n92["codeType"] := "function";
__n92["strict"] := false;
__n89["body"] := __n92;
__n89["generator"] := false;
__n89["async"] := false;
__n89["expression"] := false;
__n88 := [ __n89 ];
__n0["functionDeclarations"] := __n88;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}