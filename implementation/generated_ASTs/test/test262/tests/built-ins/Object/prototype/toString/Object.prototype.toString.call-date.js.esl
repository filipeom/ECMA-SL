function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Object";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "prototype";
__n13["raw"] := "\"prototype\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["object"] := __n11;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "toString";
__n14["raw"] := "\"toString\"";
__n10["property"] := __n14;
__n10["computed"] := true;
__n9["object"] := __n10;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "call";
__n15["raw"] := "\"call\"";
__n9["property"] := __n15;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n17 := {  };
__n17["type"] := "NewExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Date";
__n17["callee"] := __n18;
__n19 := [  ];
__n17["arguments"] := __n19;
__n16 := [ __n17 ];
__n8["arguments"] := __n16;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "[object Date]";
__n20["raw"] := "\"[object Date]\"";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "Object.prototype.toString.call(new Date()) returns [object Date]";
__n21["raw"] := "\"Object.prototype.toString.call(new Date()) returns [object Date]\"";
__n7 := [ __n8, __n20, __n21 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "assert";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "sameValue";
__n26["raw"] := "\"sameValue\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Object";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "prototype";
__n33["raw"] := "\"prototype\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["object"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "toString";
__n34["raw"] := "\"toString\"";
__n30["property"] := __n34;
__n30["computed"] := true;
__n29["object"] := __n30;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "call";
__n35["raw"] := "\"call\"";
__n29["property"] := __n35;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Object";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "NewExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Date";
__n40["callee"] := __n41;
__n42 := [  ];
__n40["arguments"] := __n42;
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36 := [ __n37 ];
__n28["arguments"] := __n36;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "[object Date]";
__n43["raw"] := "\"[object Date]\"";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "Object.prototype.toString.call(Object(new Date())) returns [object Date]";
__n44["raw"] := "\"Object.prototype.toString.call(Object(new Date())) returns [object Date]\"";
__n27 := [ __n28, __n43, __n44 ];
__n23["arguments"] := __n27;
__n22["expression"] := __n23;
__n1 := [ __n2, __n22 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n45 := [  ];
__n0["variableDeclarations"] := __n45;
__n46 := [  ];
__n0["functionDeclarations"] := __n46;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}