function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Object";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "prototype";
__n13["raw"] := "\"prototype\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["object"] := __n11;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "toString";
__n14["raw"] := "\"toString\"";
__n10["property"] := __n14;
__n10["computed"] := true;
__n9["object"] := __n10;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "call";
__n15["raw"] := "\"call\"";
__n9["property"] := __n15;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n17 := {  };
__n17["type"] := "ObjectExpression";
__n18 := [  ];
__n17["properties"] := __n18;
__n16 := [ __n17 ];
__n8["arguments"] := __n16;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "[object Object]";
__n19["raw"] := "\"[object Object]\"";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "Object.prototype.toString.call({}) returns [object Object]";
__n20["raw"] := "\"Object.prototype.toString.call({}) returns [object Object]\"";
__n7 := [ __n8, __n19, __n20 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "assert";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "sameValue";
__n25["raw"] := "\"sameValue\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Object";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "prototype";
__n32["raw"] := "\"prototype\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["object"] := __n30;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "toString";
__n33["raw"] := "\"toString\"";
__n29["property"] := __n33;
__n29["computed"] := true;
__n28["object"] := __n29;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "call";
__n34["raw"] := "\"call\"";
__n28["property"] := __n34;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Object";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "ObjectExpression";
__n40 := [  ];
__n39["properties"] := __n40;
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35 := [ __n36 ];
__n27["arguments"] := __n35;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "[object Object]";
__n41["raw"] := "\"[object Object]\"";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "Object.prototype.toString.call(Object({})) returns [object Object]";
__n42["raw"] := "\"Object.prototype.toString.call(Object({})) returns [object Object]\"";
__n26 := [ __n27, __n41, __n42 ];
__n22["arguments"] := __n26;
__n21["expression"] := __n22;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "assert";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "sameValue";
__n47["raw"] := "\"sameValue\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["callee"] := __n45;
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "Object";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "prototype";
__n54["raw"] := "\"prototype\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["object"] := __n52;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "toString";
__n55["raw"] := "\"toString\"";
__n51["property"] := __n55;
__n51["computed"] := true;
__n50["object"] := __n51;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "call";
__n56["raw"] := "\"call\"";
__n50["property"] := __n56;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n58 := {  };
__n58["type"] := "NewExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Object";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "ObjectExpression";
__n62 := [  ];
__n61["properties"] := __n62;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57 := [ __n58 ];
__n49["arguments"] := __n57;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "[object Object]";
__n63["raw"] := "\"[object Object]\"";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "Object.prototype.toString.call(new Object({})) returns [object Object]";
__n64["raw"] := "\"Object.prototype.toString.call(new Object({})) returns [object Object]\"";
__n48 := [ __n49, __n63, __n64 ];
__n44["arguments"] := __n48;
__n43["expression"] := __n44;
__n1 := [ __n2, __n21, __n43 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n65 := [  ];
__n0["variableDeclarations"] := __n65;
__n66 := [  ];
__n0["functionDeclarations"] := __n66;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}