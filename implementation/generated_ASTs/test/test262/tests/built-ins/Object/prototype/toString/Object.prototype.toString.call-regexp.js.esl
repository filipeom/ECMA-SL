function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Object";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "prototype";
__n13["raw"] := "\"prototype\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["object"] := __n11;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "toString";
__n14["raw"] := "\"toString\"";
__n10["property"] := __n14;
__n10["computed"] := true;
__n9["object"] := __n10;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "call";
__n15["raw"] := "\"call\"";
__n9["property"] := __n15;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "/./";
__n17["raw"] := "/./";
__n17["source"] := ".";
__n18 := {  };
__n18["type"] := "RegExp";
__n19 := {  };
__n19["type"] := "Char";
__n19["value"] := ".";
__n19["kind"] := "meta";
__n19["symbol"] := ".";
__n19["codePoint"] := nan;
__n18["body"] := __n19;
__n18["flags"] := "";
__n18["nCaps"] := 0.;
__n17["regex"] := __n18;
__n16 := [ __n17 ];
__n8["arguments"] := __n16;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "[object RegExp]";
__n20["raw"] := "\"[object RegExp]\"";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "Object.prototype.toString.call(/./) returns [object RegExp]";
__n21["raw"] := "\"Object.prototype.toString.call(/./) returns [object RegExp]\"";
__n7 := [ __n8, __n20, __n21 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "assert";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "sameValue";
__n26["raw"] := "\"sameValue\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Object";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "prototype";
__n33["raw"] := "\"prototype\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["object"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "toString";
__n34["raw"] := "\"toString\"";
__n30["property"] := __n34;
__n30["computed"] := true;
__n29["object"] := __n30;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "call";
__n35["raw"] := "\"call\"";
__n29["property"] := __n35;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Object";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "/./";
__n40["raw"] := "/./";
__n40["source"] := ".";
__n41 := {  };
__n41["type"] := "RegExp";
__n42 := {  };
__n42["type"] := "Char";
__n42["value"] := ".";
__n42["kind"] := "meta";
__n42["symbol"] := ".";
__n42["codePoint"] := nan;
__n41["body"] := __n42;
__n41["flags"] := "";
__n41["nCaps"] := 0.;
__n40["regex"] := __n41;
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36 := [ __n37 ];
__n28["arguments"] := __n36;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "[object RegExp]";
__n43["raw"] := "\"[object RegExp]\"";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "Object.prototype.toString.call(Object(/./)) returns [object RegExp]";
__n44["raw"] := "\"Object.prototype.toString.call(Object(/./)) returns [object RegExp]\"";
__n27 := [ __n28, __n43, __n44 ];
__n23["arguments"] := __n27;
__n22["expression"] := __n23;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "assert";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "sameValue";
__n49["raw"] := "\"sameValue\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Object";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "prototype";
__n56["raw"] := "\"prototype\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["object"] := __n54;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "toString";
__n57["raw"] := "\"toString\"";
__n53["property"] := __n57;
__n53["computed"] := true;
__n52["object"] := __n53;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "call";
__n58["raw"] := "\"call\"";
__n52["property"] := __n58;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n60 := {  };
__n60["type"] := "NewExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "RegExp";
__n60["callee"] := __n61;
__n62 := [  ];
__n60["arguments"] := __n62;
__n59 := [ __n60 ];
__n51["arguments"] := __n59;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "[object RegExp]";
__n63["raw"] := "\"[object RegExp]\"";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "Object.prototype.toString.call(new RegExp()) returns [object RegExp]";
__n64["raw"] := "\"Object.prototype.toString.call(new RegExp()) returns [object RegExp]\"";
__n50 := [ __n51, __n63, __n64 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "assert";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "sameValue";
__n69["raw"] := "\"sameValue\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["callee"] := __n67;
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "Object";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "prototype";
__n76["raw"] := "\"prototype\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["object"] := __n74;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "toString";
__n77["raw"] := "\"toString\"";
__n73["property"] := __n77;
__n73["computed"] := true;
__n72["object"] := __n73;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "call";
__n78["raw"] := "\"call\"";
__n72["property"] := __n78;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "Object";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "NewExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "RegExp";
__n83["callee"] := __n84;
__n85 := [  ];
__n83["arguments"] := __n85;
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n79 := [ __n80 ];
__n71["arguments"] := __n79;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "[object RegExp]";
__n86["raw"] := "\"[object RegExp]\"";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "Object.prototype.toString.call(Object(new RegExp())) returns [object RegExp]";
__n87["raw"] := "\"Object.prototype.toString.call(Object(new RegExp())) returns [object RegExp]\"";
__n70 := [ __n71, __n86, __n87 ];
__n66["arguments"] := __n70;
__n65["expression"] := __n66;
__n1 := [ __n2, __n22, __n45, __n65 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n88 := [  ];
__n0["variableDeclarations"] := __n88;
__n89 := [  ];
__n0["functionDeclarations"] := __n89;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}