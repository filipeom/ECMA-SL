function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "obj";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "variableForHelpVerify";
__n12["raw"] := "\"variableForHelpVerify\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["left"] := __n10;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "data";
__n13["raw"] := "\"data\"";
__n9["right"] := __n13;
__n8["expression"] := __n9;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Object";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "defineProperty";
__n18["raw"] := "\"defineProperty\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "obj";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "foo1";
__n21["raw"] := "\"foo1\"";
__n22 := {  };
__n22["type"] := "ObjectExpression";
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "value";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 10.;
__n26["raw"] := "10";
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n27 := {  };
__n27["type"] := "Property";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "writable";
__n27["key"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := true;
__n29["raw"] := "true";
__n27["value"] := __n29;
__n27["computed"] := false;
__n27["kind"] := "init";
__n27["shorthand"] := false;
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "enumerable";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := true;
__n32["raw"] := "true";
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n33 := {  };
__n33["type"] := "Property";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "configurable";
__n33["key"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := true;
__n35["raw"] := "true";
__n33["value"] := __n35;
__n33["computed"] := false;
__n33["kind"] := "init";
__n33["shorthand"] := false;
__n23 := [ __n24, __n27, __n30, __n33 ];
__n22["properties"] := __n23;
__n19 := [ __n20, __n21, __n22 ];
__n15["arguments"] := __n19;
__n14["expression"] := __n15;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "set_func";
__n36["expression"] := __n37;
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "get_func";
__n38["expression"] := __n39;
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Object";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "defineProperty";
__n44["raw"] := "\"defineProperty\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["callee"] := __n42;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "obj";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "foo2";
__n47["raw"] := "\"foo2\"";
__n48 := {  };
__n48["type"] := "ObjectExpression";
__n50 := {  };
__n50["type"] := "Property";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "get";
__n50["key"] := __n51;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "get_func";
__n50["value"] := __n52;
__n50["computed"] := false;
__n50["kind"] := "init";
__n50["shorthand"] := false;
__n53 := {  };
__n53["type"] := "Property";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "set";
__n53["key"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "set_func";
__n53["value"] := __n55;
__n53["computed"] := false;
__n53["kind"] := "init";
__n53["shorthand"] := false;
__n56 := {  };
__n56["type"] := "Property";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "enumerable";
__n56["key"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := true;
__n58["raw"] := "true";
__n56["value"] := __n58;
__n56["computed"] := false;
__n56["kind"] := "init";
__n56["shorthand"] := false;
__n59 := {  };
__n59["type"] := "Property";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "configurable";
__n59["key"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := true;
__n61["raw"] := "true";
__n59["value"] := __n61;
__n59["computed"] := false;
__n59["kind"] := "init";
__n59["shorthand"] := false;
__n49 := [ __n50, __n53, __n56, __n59 ];
__n48["properties"] := __n49;
__n45 := [ __n46, __n47, __n48 ];
__n41["arguments"] := __n45;
__n40["expression"] := __n41;
__n62 := {  };
__n62["type"] := "VariableDeclaration";
__n64 := {  };
__n64["type"] := "VariableDeclarator";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "preCheck";
__n64["id"] := __n65;
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "Object";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "isExtensible";
__n69["raw"] := "\"isExtensible\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["callee"] := __n67;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "obj";
__n70 := [ __n71 ];
__n66["arguments"] := __n70;
__n64["init"] := __n66;
__n63 := [ __n64 ];
__n62["declarations"] := __n63;
__n62["kind"] := "var";
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "Object";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "seal";
__n76["raw"] := "\"seal\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["callee"] := __n74;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "obj";
__n77 := [ __n78 ];
__n73["arguments"] := __n77;
__n72["expression"] := __n73;
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "UnaryExpression";
__n80["operator"] := "!";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "preCheck";
__n80["argument"] := __n81;
__n80["prefix"] := true;
__n79["test"] := __n80;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$ERROR";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "+";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "Expected preCheck to be true, actually ";
__n89["raw"] := "'Expected preCheck to be true, actually '";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "preCheck";
__n88["right"] := __n90;
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n79["consequent"] := __n82;
__n79["alternate"] := null;
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "verifyEqualTo";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "obj";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "foo1";
__n96["raw"] := "\"foo1\"";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 10.;
__n97["raw"] := "10";
__n94 := [ __n95, __n96, __n97 ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "verifyWritable";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "obj";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "foo1";
__n103["raw"] := "\"foo1\"";
__n101 := [ __n102, __n103 ];
__n99["arguments"] := __n101;
__n98["expression"] := __n99;
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "verifyEnumerable";
__n105["callee"] := __n106;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "obj";
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "foo1";
__n109["raw"] := "\"foo1\"";
__n107 := [ __n108, __n109 ];
__n105["arguments"] := __n107;
__n104["expression"] := __n105;
__n110 := {  };
__n110["type"] := "ExpressionStatement";
__n111 := {  };
__n111["type"] := "CallExpression";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "verifyNotConfigurable";
__n111["callee"] := __n112;
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "obj";
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "foo1";
__n115["raw"] := "\"foo1\"";
__n113 := [ __n114, __n115 ];
__n111["arguments"] := __n113;
__n110["expression"] := __n111;
__n116 := {  };
__n116["type"] := "ExpressionStatement";
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "verifyEqualTo";
__n117["callee"] := __n118;
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "obj";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "foo2";
__n121["raw"] := "\"foo2\"";
__n122 := {  };
__n122["type"] := "CallExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "get_func";
__n122["callee"] := __n123;
__n124 := [  ];
__n122["arguments"] := __n124;
__n119 := [ __n120, __n121, __n122 ];
__n117["arguments"] := __n119;
__n116["expression"] := __n117;
__n125 := {  };
__n125["type"] := "ExpressionStatement";
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "verifyWritable";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "obj";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "foo2";
__n130["raw"] := "\"foo2\"";
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "variableForHelpVerify";
__n131["raw"] := "\"variableForHelpVerify\"";
__n128 := [ __n129, __n130, __n131 ];
__n126["arguments"] := __n128;
__n125["expression"] := __n126;
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "verifyEnumerable";
__n133["callee"] := __n134;
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "obj";
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "foo2";
__n137["raw"] := "\"foo2\"";
__n135 := [ __n136, __n137 ];
__n133["arguments"] := __n135;
__n132["expression"] := __n133;
__n138 := {  };
__n138["type"] := "ExpressionStatement";
__n139 := {  };
__n139["type"] := "CallExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "verifyNotConfigurable";
__n139["callee"] := __n140;
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "obj";
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := "foo2";
__n143["raw"] := "\"foo2\"";
__n141 := [ __n142, __n143 ];
__n139["arguments"] := __n141;
__n138["expression"] := __n139;
__n1 := [ __n2, __n8, __n14, __n36, __n38, __n40, __n62, __n72, __n79, __n91, __n98, __n104, __n110, __n116, __n125, __n132, __n138 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n144 := [ "obj", "preCheck" ];
__n0["variableDeclarations"] := __n144;
__n146 := {  };
__n146["type"] := "FunctionDeclaration";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "set_func";
__n146["id"] := __n147;
__n148 := [ "value" ];
__n146["params"] := __n148;
__n149 := {  };
__n149["type"] := "BlockStatement";
__n151 := {  };
__n151["type"] := "ExpressionStatement";
__n152 := {  };
__n152["type"] := "AssignmentExpression";
__n152["operator"] := "=";
__n153 := {  };
__n153["type"] := "MemberExpression";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "obj";
__n153["object"] := __n154;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := "variableForHelpVerify";
__n155["raw"] := "\"variableForHelpVerify\"";
__n153["property"] := __n155;
__n153["computed"] := true;
__n152["left"] := __n153;
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "value";
__n152["right"] := __n156;
__n151["expression"] := __n152;
__n150 := [ __n151 ];
__n149["body"] := __n150;
__n157 := [  ];
__n149["variableDeclarations"] := __n157;
__n158 := [  ];
__n149["functionDeclarations"] := __n158;
__n149["codeType"] := "function";
__n149["strict"] := false;
__n146["body"] := __n149;
__n146["generator"] := false;
__n146["expression"] := false;
__n146["async"] := false;
__n159 := {  };
__n159["type"] := "FunctionDeclaration";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "get_func";
__n159["id"] := __n160;
__n161 := [  ];
__n159["params"] := __n161;
__n162 := {  };
__n162["type"] := "BlockStatement";
__n164 := {  };
__n164["type"] := "ReturnStatement";
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := 10.;
__n165["raw"] := "10";
__n164["argument"] := __n165;
__n163 := [ __n164 ];
__n162["body"] := __n163;
__n166 := [  ];
__n162["variableDeclarations"] := __n166;
__n167 := [  ];
__n162["functionDeclarations"] := __n167;
__n162["codeType"] := "function";
__n162["strict"] := false;
__n159["body"] := __n162;
__n159["generator"] := false;
__n159["expression"] := false;
__n159["async"] := false;
__n145 := [ __n146, __n159 ];
__n0["functionDeclarations"] := __n145;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}