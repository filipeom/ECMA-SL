function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callCount";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Constructor";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "AssignmentExpression";
__n10["operator"] := "=";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Constructor";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "resolve";
__n13["raw"] := "\"resolve\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["left"] := __n11;
__n14 := {  };
__n14["type"] := "FunctionExpression";
__n14["id"] := null;
__n15 := [ "v" ];
__n14["params"] := __n15;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ReturnStatement";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "v";
__n18["argument"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n20 := [  ];
__n16["variableDeclarations"] := __n20;
__n21 := [  ];
__n16["functionDeclarations"] := __n21;
__n16["codeType"] := "function";
__n16["strict"] := false;
__n14["body"] := __n16;
__n14["generator"] := false;
__n14["async"] := false;
__n14["expression"] := false;
__n10["right"] := __n14;
__n9["expression"] := __n10;
__n22 := {  };
__n22["type"] := "VariableDeclaration";
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "p1";
__n24["id"] := __n25;
__n26 := {  };
__n26["type"] := "ObjectExpression";
__n28 := {  };
__n28["type"] := "Property";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "then";
__n28["key"] := __n29;
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [ "onFulfilled", "onRejected" ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "onFulfilled";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "expectedValue";
__n38["raw"] := "\"expectedValue\"";
__n37 := [ __n38 ];
__n35["arguments"] := __n37;
__n34["expression"] := __n35;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "onFulfilled";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "unexpectedValue";
__n43["raw"] := "\"unexpectedValue\"";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n33 := [ __n34, __n39 ];
__n32["body"] := __n33;
__n44 := [  ];
__n32["variableDeclarations"] := __n44;
__n45 := [  ];
__n32["functionDeclarations"] := __n45;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["async"] := false;
__n30["expression"] := false;
__n28["value"] := __n30;
__n28["computed"] := false;
__n28["kind"] := "init";
__n28["shorthand"] := false;
__n27 := [ __n28 ];
__n26["properties"] := __n27;
__n24["init"] := __n26;
__n23 := [ __n24 ];
__n22["declarations"] := __n23;
__n22["kind"] := "var";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "assert";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "sameValue";
__n50["raw"] := "\"sameValue\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "callCount";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 0.;
__n53["raw"] := "0";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "callCount before call to all()";
__n54["raw"] := "\"callCount before call to all()\"";
__n51 := [ __n52, __n53, __n54 ];
__n47["arguments"] := __n51;
__n46["expression"] := __n47;
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Promise";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "all";
__n60["raw"] := "\"all\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["object"] := __n58;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "call";
__n61["raw"] := "\"call\"";
__n57["property"] := __n61;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Constructor";
__n64 := {  };
__n64["type"] := "ArrayExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "p1";
__n65 := [ __n66 ];
__n64["elements"] := __n65;
__n62 := [ __n63, __n64 ];
__n56["arguments"] := __n62;
__n55["expression"] := __n56;
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "assert";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "sameValue";
__n71["raw"] := "\"sameValue\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "callCount";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 1.;
__n74["raw"] := "1";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "callCount after call to all()";
__n75["raw"] := "\"callCount after call to all()\"";
__n72 := [ __n73, __n74, __n75 ];
__n68["arguments"] := __n72;
__n67["expression"] := __n68;
__n1 := [ __n2, __n7, __n9, __n22, __n46, __n55, __n67 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n76 := [ "callCount", "p1" ];
__n0["variableDeclarations"] := __n76;
__n78 := {  };
__n78["type"] := "FunctionDeclaration";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "Constructor";
__n78["id"] := __n79;
__n80 := [ "executor" ];
__n78["params"] := __n80;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "resolve";
__n83["expression"] := __n84;
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "executor";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "resolve";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "Test262Error";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "thrower";
__n92["raw"] := "\"thrower\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n88 := [ __n89, __n90 ];
__n86["arguments"] := __n88;
__n85["expression"] := __n86;
__n82 := [ __n83, __n85 ];
__n81["body"] := __n82;
__n93 := [  ];
__n81["variableDeclarations"] := __n93;
__n95 := {  };
__n95["type"] := "FunctionDeclaration";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "resolve";
__n95["id"] := __n96;
__n97 := [ "values" ];
__n95["params"] := __n97;
__n98 := {  };
__n98["type"] := "BlockStatement";
__n100 := {  };
__n100["type"] := "ExpressionStatement";
__n101 := {  };
__n101["type"] := "AssignmentExpression";
__n101["operator"] := "+=";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "callCount";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := 1.;
__n103["raw"] := "1";
__n101["right"] := __n103;
__n100["expression"] := __n101;
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "assert";
__n105["callee"] := __n106;
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "Array";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "isArray";
__n111["raw"] := "\"isArray\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n108["callee"] := __n109;
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "values";
__n112 := [ __n113 ];
__n108["arguments"] := __n112;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "values is array";
__n114["raw"] := "\"values is array\"";
__n107 := [ __n108, __n114 ];
__n105["arguments"] := __n107;
__n104["expression"] := __n105;
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "MemberExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "assert";
__n117["object"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "sameValue";
__n119["raw"] := "\"sameValue\"";
__n117["property"] := __n119;
__n117["computed"] := true;
__n116["callee"] := __n117;
__n121 := {  };
__n121["type"] := "MemberExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "values";
__n121["object"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "length";
__n123["raw"] := "\"length\"";
__n121["property"] := __n123;
__n121["computed"] := true;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 1.;
__n124["raw"] := "1";
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := "values length";
__n125["raw"] := "\"values length\"";
__n120 := [ __n121, __n124, __n125 ];
__n116["arguments"] := __n120;
__n115["expression"] := __n116;
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "MemberExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "assert";
__n128["object"] := __n129;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "sameValue";
__n130["raw"] := "\"sameValue\"";
__n128["property"] := __n130;
__n128["computed"] := true;
__n127["callee"] := __n128;
__n132 := {  };
__n132["type"] := "MemberExpression";
__n132["computed"] := true;
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "values";
__n132["object"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 0.;
__n134["raw"] := "0";
__n132["property"] := __n134;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "expectedValue";
__n135["raw"] := "\"expectedValue\"";
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "values[0]";
__n136["raw"] := "\"values[0]\"";
__n131 := [ __n132, __n135, __n136 ];
__n127["arguments"] := __n131;
__n126["expression"] := __n127;
__n99 := [ __n100, __n104, __n115, __n126 ];
__n98["body"] := __n99;
__n137 := [  ];
__n98["variableDeclarations"] := __n137;
__n138 := [  ];
__n98["functionDeclarations"] := __n138;
__n98["codeType"] := "function";
__n98["strict"] := false;
__n95["body"] := __n98;
__n95["generator"] := false;
__n95["async"] := false;
__n95["expression"] := false;
__n94 := [ __n95 ];
__n81["functionDeclarations"] := __n94;
__n81["codeType"] := "function";
__n81["strict"] := false;
__n78["body"] := __n81;
__n78["generator"] := false;
__n78["async"] := false;
__n78["expression"] := false;
__n77 := [ __n78 ];
__n0["functionDeclarations"] := __n77;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}