function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "iter";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Symbol";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "iterator";
__n11["raw"] := "\"iterator\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["key"] := __n9;
__n12 := {  };
__n12["type"] := "FunctionExpression";
__n12["id"] := null;
__n13 := [  ];
__n12["params"] := __n13;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "ThrowStatement";
__n17 := {  };
__n17["type"] := "NewExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Test262Error";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "unreachable";
__n20["raw"] := "\"unreachable\"";
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n16["argument"] := __n17;
__n15 := [ __n16 ];
__n14["body"] := __n15;
__n21 := [  ];
__n14["variableDeclarations"] := __n21;
__n22 := [  ];
__n14["functionDeclarations"] := __n22;
__n14["codeType"] := "function";
__n14["strict"] := false;
__n12["body"] := __n14;
__n12["generator"] := false;
__n12["async"] := false;
__n12["expression"] := false;
__n8["value"] := __n12;
__n8["computed"] := true;
__n8["kind"] := "get";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "const";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "AssignmentExpression";
__n24["operator"] := "=";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Promise";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "resolve";
__n27["raw"] := "\"resolve\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["left"] := __n25;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "certainly not callable";
__n28["raw"] := "\"certainly not callable\"";
__n24["right"] := __n28;
__n23["expression"] := __n24;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Promise";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "all";
__n37["raw"] := "\"all\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "iter";
__n38 := [ __n39 ];
__n34["arguments"] := __n38;
__n33["object"] := __n34;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "then";
__n40["raw"] := "\"then\"";
__n33["property"] := __n40;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n42 := {  };
__n42["type"] := "ArrowFunctionExpression";
__n42["id"] := null;
__n43 := [  ];
__n42["params"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ThrowStatement";
__n47 := {  };
__n47["type"] := "NewExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "Test262Error";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "The promise should be rejected, but it was resolved";
__n50["raw"] := "\"The promise should be rejected, but it was resolved\"";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["argument"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n42["body"] := __n44;
__n42["generator"] := false;
__n42["expression"] := false;
__n42["async"] := false;
__n51 := {  };
__n51["type"] := "ArrowFunctionExpression";
__n51["id"] := null;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "reason";
__n52 := [ __n53 ];
__n51["params"] := __n52;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "assert";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "instanceof";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "reason";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "TypeError";
__n60["right"] := __n62;
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n51["body"] := __n54;
__n51["generator"] := false;
__n51["expression"] := false;
__n51["async"] := false;
__n41 := [ __n42, __n51 ];
__n32["arguments"] := __n41;
__n31["object"] := __n32;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "then";
__n63["raw"] := "\"then\"";
__n31["property"] := __n63;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$DONE";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "$DONE";
__n64 := [ __n65, __n66 ];
__n30["arguments"] := __n64;
__n29["expression"] := __n30;
__n1 := [ __n2, __n23, __n29 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n67 := [ "iter" ];
__n0["variableDeclarations"] := __n67;
__n68 := [  ];
__n0["functionDeclarations"] := __n68;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}