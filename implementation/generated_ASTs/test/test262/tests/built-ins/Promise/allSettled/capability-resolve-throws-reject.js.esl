function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "thrown";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Test262Error";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "P";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "FunctionExpression";
__n13["id"] := null;
__n14 := [ "executor" ];
__n13["params"] := __n14;
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "ReturnStatement";
__n18 := {  };
__n18["type"] := "NewExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Promise";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "FunctionExpression";
__n21["id"] := null;
__n22 := [ "_", "reject" ];
__n21["params"] := __n22;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "executor";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "FunctionExpression";
__n29["id"] := null;
__n30 := [  ];
__n29["params"] := __n30;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ThrowStatement";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "thrown";
__n33["argument"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n35 := [  ];
__n31["variableDeclarations"] := __n35;
__n36 := [  ];
__n31["functionDeclarations"] := __n36;
__n31["codeType"] := "function";
__n31["strict"] := false;
__n29["body"] := __n31;
__n29["generator"] := false;
__n29["async"] := false;
__n29["expression"] := false;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "reject";
__n28 := [ __n29, __n37 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n38 := [  ];
__n23["variableDeclarations"] := __n38;
__n39 := [  ];
__n23["functionDeclarations"] := __n39;
__n23["codeType"] := "function";
__n23["strict"] := false;
__n21["body"] := __n23;
__n21["generator"] := false;
__n21["async"] := false;
__n21["expression"] := false;
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n17["argument"] := __n18;
__n16 := [ __n17 ];
__n15["body"] := __n16;
__n40 := [  ];
__n15["variableDeclarations"] := __n40;
__n41 := [  ];
__n15["functionDeclarations"] := __n41;
__n15["codeType"] := "function";
__n15["strict"] := false;
__n13["body"] := __n15;
__n13["generator"] := false;
__n13["async"] := false;
__n13["expression"] := false;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "P";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "resolve";
__n46["raw"] := "\"resolve\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["left"] := __n44;
__n47 := {  };
__n47["type"] := "FunctionExpression";
__n47["id"] := null;
__n48 := [  ];
__n47["params"] := __n48;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ThrowStatement";
__n52 := {  };
__n52["type"] := "NewExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "Test262Error";
__n52["callee"] := __n53;
__n54 := [  ];
__n52["arguments"] := __n54;
__n51["argument"] := __n52;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n55 := [  ];
__n49["variableDeclarations"] := __n55;
__n56 := [  ];
__n49["functionDeclarations"] := __n56;
__n49["codeType"] := "function";
__n49["strict"] := false;
__n47["body"] := __n49;
__n47["generator"] := false;
__n47["async"] := false;
__n47["expression"] := false;
__n43["right"] := __n47;
__n42["expression"] := __n43;
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Promise";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "allSettled";
__n64["raw"] := "\"allSettled\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["object"] := __n62;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "call";
__n65["raw"] := "\"call\"";
__n61["property"] := __n65;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "P";
__n68 := {  };
__n68["type"] := "ArrayExpression";
__n69 := [  ];
__n68["elements"] := __n69;
__n66 := [ __n67, __n68 ];
__n60["arguments"] := __n66;
__n59["object"] := __n60;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "then";
__n70["raw"] := "\"then\"";
__n59["property"] := __n70;
__n59["computed"] := true;
__n58["callee"] := __n59;
__n72 := {  };
__n72["type"] := "FunctionExpression";
__n72["id"] := null;
__n73 := [  ];
__n72["params"] := __n73;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "$DONE";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "Promise incorrectly fulfilled.";
__n80["raw"] := "'Promise incorrectly fulfilled.'";
__n79 := [ __n80 ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n81 := [  ];
__n74["variableDeclarations"] := __n81;
__n82 := [  ];
__n74["functionDeclarations"] := __n82;
__n74["codeType"] := "function";
__n74["strict"] := false;
__n72["body"] := __n74;
__n72["generator"] := false;
__n72["async"] := false;
__n72["expression"] := false;
__n83 := {  };
__n83["type"] := "FunctionExpression";
__n83["id"] := null;
__n84 := [ "reason" ];
__n83["params"] := __n84;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "IfStatement";
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "!==";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "reason";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "thrown";
__n88["right"] := __n90;
__n87["test"] := __n88;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$DONE";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "Promise rejected with incorrect \"reason.\"";
__n97["raw"] := "'Promise rejected with incorrect \"reason.\"'";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n98 := {  };
__n98["type"] := "ReturnStatement";
__n98["argument"] := null;
__n92 := [ __n93, __n98 ];
__n91["body"] := __n92;
__n87["consequent"] := __n91;
__n87["alternate"] := null;
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "$DONE";
__n100["callee"] := __n101;
__n102 := [  ];
__n100["arguments"] := __n102;
__n99["expression"] := __n100;
__n86 := [ __n87, __n99 ];
__n85["body"] := __n86;
__n103 := [  ];
__n85["variableDeclarations"] := __n103;
__n104 := [  ];
__n85["functionDeclarations"] := __n104;
__n85["codeType"] := "function";
__n85["strict"] := false;
__n83["body"] := __n85;
__n83["generator"] := false;
__n83["async"] := false;
__n83["expression"] := false;
__n71 := [ __n72, __n83 ];
__n58["arguments"] := __n71;
__n57["expression"] := __n58;
__n1 := [ __n2, __n9, __n42, __n57 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n105 := [ "thrown", "P" ];
__n0["variableDeclarations"] := __n105;
__n106 := [  ];
__n0["functionDeclarations"] := __n106;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}