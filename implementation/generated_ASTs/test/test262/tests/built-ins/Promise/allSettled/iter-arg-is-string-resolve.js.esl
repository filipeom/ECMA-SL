function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "ExpressionStatement";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Promise";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "allSettled";
__n13["raw"] := "\"allSettled\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["callee"] := __n11;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "";
__n15["raw"] := "''";
__n14 := [ __n15 ];
__n10["arguments"] := __n14;
__n9["object"] := __n10;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "then";
__n16["raw"] := "\"then\"";
__n9["property"] := __n16;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n18 := {  };
__n18["type"] := "FunctionExpression";
__n18["id"] := null;
__n19 := [ "v" ];
__n18["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "assert";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "sameValue";
__n26["raw"] := "\"sameValue\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "v";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "length";
__n30["raw"] := "\"length\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 0.;
__n31["raw"] := "0";
__n27 := [ __n28, __n31 ];
__n23["arguments"] := __n27;
__n22["expression"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n32 := [  ];
__n20["variableDeclarations"] := __n32;
__n33 := [  ];
__n20["functionDeclarations"] := __n33;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n18["body"] := __n20;
__n18["generator"] := false;
__n18["async"] := false;
__n18["expression"] := false;
__n34 := {  };
__n34["type"] := "FunctionExpression";
__n34["id"] := null;
__n35 := [  ];
__n34["params"] := __n35;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "$DONE";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "The promise should be resolved, but was rejected";
__n42["raw"] := "'The promise should be resolved, but was rejected'";
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n43 := [  ];
__n36["variableDeclarations"] := __n43;
__n44 := [  ];
__n36["functionDeclarations"] := __n44;
__n36["codeType"] := "function";
__n36["strict"] := false;
__n34["body"] := __n36;
__n34["generator"] := false;
__n34["async"] := false;
__n34["expression"] := false;
__n17 := [ __n18, __n34 ];
__n8["arguments"] := __n17;
__n7["object"] := __n8;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "then";
__n45["raw"] := "\"then\"";
__n7["property"] := __n45;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$DONE";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$DONE";
__n46 := [ __n47, __n48 ];
__n6["arguments"] := __n46;
__n5["expression"] := __n6;
__n4 := [ __n5 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n49 := {  };
__n49["type"] := "CatchClause";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "error";
__n49["param"] := __n50;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "$DONE";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "TemplateLiteral";
__n59 := {  };
__n59["type"] := "TemplateElement";
__n60 := {  };
__n60["raw"] := "The promise should be resolved, but threw an exception: ";
__n60["cooked"] := "The promise should be resolved, but threw an exception: ";
__n59["value"] := __n60;
__n59["tail"] := false;
__n61 := {  };
__n61["type"] := "TemplateElement";
__n62 := {  };
__n62["raw"] := "";
__n62["cooked"] := "";
__n61["value"] := __n62;
__n61["tail"] := true;
__n58 := [ __n59, __n61 ];
__n57["quasis"] := __n58;
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "error";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "message";
__n66["raw"] := "\"message\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63 := [ __n64 ];
__n57["expressions"] := __n63;
__n56 := [ __n57 ];
__n54["arguments"] := __n56;
__n53["expression"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n49["body"] := __n51;
__n2["handler"] := __n49;
__n2["finalizer"] := null;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n67 := [  ];
__n0["variableDeclarations"] := __n67;
__n68 := [  ];
__n0["functionDeclarations"] := __n68;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}