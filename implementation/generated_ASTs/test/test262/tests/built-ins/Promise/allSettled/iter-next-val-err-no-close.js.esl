function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "iterNextValThrows";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "returnCount";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 0.;
__n12["raw"] := "0";
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "nextCount";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "poisonedVal";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "ObjectExpression";
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "done";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := false;
__n26["raw"] := "false";
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n23 := [ __n24 ];
__n22["properties"] := __n23;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "error";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "NewExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Test262Error";
__n31["callee"] := __n32;
__n33 := [  ];
__n31["arguments"] := __n33;
__n29["init"] := __n31;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Object";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "defineProperty";
__n38["raw"] := "\"defineProperty\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "poisonedVal";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "value";
__n41["raw"] := "'value'";
__n42 := {  };
__n42["type"] := "ObjectExpression";
__n44 := {  };
__n44["type"] := "Property";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "get";
__n44["key"] := __n45;
__n46 := {  };
__n46["type"] := "FunctionExpression";
__n46["id"] := null;
__n47 := [  ];
__n46["params"] := __n47;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ThrowStatement";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "error";
__n50["argument"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n52 := [  ];
__n48["variableDeclarations"] := __n52;
__n53 := [  ];
__n48["functionDeclarations"] := __n53;
__n48["codeType"] := "function";
__n48["strict"] := false;
__n46["body"] := __n48;
__n46["generator"] := false;
__n46["async"] := false;
__n46["expression"] := false;
__n44["value"] := __n46;
__n44["computed"] := false;
__n44["kind"] := "init";
__n44["shorthand"] := false;
__n43 := [ __n44 ];
__n42["properties"] := __n43;
__n39 := [ __n40, __n41, __n42 ];
__n35["arguments"] := __n39;
__n34["expression"] := __n35;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "AssignmentExpression";
__n55["operator"] := "=";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n56["computed"] := true;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "iterNextValThrows";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Symbol";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "iterator";
__n60["raw"] := "\"iterator\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n56["property"] := __n58;
__n55["left"] := __n56;
__n61 := {  };
__n61["type"] := "FunctionExpression";
__n61["id"] := null;
__n62 := [  ];
__n61["params"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ReturnStatement";
__n66 := {  };
__n66["type"] := "ObjectExpression";
__n68 := {  };
__n68["type"] := "Property";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "next";
__n68["key"] := __n69;
__n70 := {  };
__n70["type"] := "FunctionExpression";
__n70["id"] := null;
__n71 := [  ];
__n70["params"] := __n71;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "AssignmentExpression";
__n75["operator"] := "+=";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "nextCount";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 1.;
__n77["raw"] := "1";
__n75["right"] := __n77;
__n74["expression"] := __n75;
__n78 := {  };
__n78["type"] := "ReturnStatement";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "poisonedVal";
__n78["argument"] := __n79;
__n73 := [ __n74, __n78 ];
__n72["body"] := __n73;
__n80 := [  ];
__n72["variableDeclarations"] := __n80;
__n81 := [  ];
__n72["functionDeclarations"] := __n81;
__n72["codeType"] := "function";
__n72["strict"] := false;
__n70["body"] := __n72;
__n70["generator"] := false;
__n70["async"] := false;
__n70["expression"] := false;
__n68["value"] := __n70;
__n68["computed"] := false;
__n68["kind"] := "init";
__n68["shorthand"] := false;
__n82 := {  };
__n82["type"] := "Property";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "return";
__n82["key"] := __n83;
__n84 := {  };
__n84["type"] := "FunctionExpression";
__n84["id"] := null;
__n85 := [  ];
__n84["params"] := __n85;
__n86 := {  };
__n86["type"] := "BlockStatement";
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "AssignmentExpression";
__n89["operator"] := "+=";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "returnCount";
__n89["left"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 1.;
__n91["raw"] := "1";
__n89["right"] := __n91;
__n88["expression"] := __n89;
__n92 := {  };
__n92["type"] := "ReturnStatement";
__n93 := {  };
__n93["type"] := "ObjectExpression";
__n94 := [  ];
__n93["properties"] := __n94;
__n92["argument"] := __n93;
__n87 := [ __n88, __n92 ];
__n86["body"] := __n87;
__n95 := [  ];
__n86["variableDeclarations"] := __n95;
__n96 := [  ];
__n86["functionDeclarations"] := __n96;
__n86["codeType"] := "function";
__n86["strict"] := false;
__n84["body"] := __n86;
__n84["generator"] := false;
__n84["async"] := false;
__n84["expression"] := false;
__n82["value"] := __n84;
__n82["computed"] := false;
__n82["kind"] := "init";
__n82["shorthand"] := false;
__n67 := [ __n68, __n82 ];
__n66["properties"] := __n67;
__n65["argument"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n97 := [  ];
__n63["variableDeclarations"] := __n97;
__n98 := [  ];
__n63["functionDeclarations"] := __n98;
__n63["codeType"] := "function";
__n63["strict"] := false;
__n61["body"] := __n63;
__n61["generator"] := false;
__n61["async"] := false;
__n61["expression"] := false;
__n55["right"] := __n61;
__n54["expression"] := __n55;
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "MemberExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "Promise";
__n101["object"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "allSettled";
__n103["raw"] := "\"allSettled\"";
__n101["property"] := __n103;
__n101["computed"] := true;
__n100["callee"] := __n101;
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "iterNextValThrows";
__n104 := [ __n105 ];
__n100["arguments"] := __n104;
__n99["expression"] := __n100;
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "MemberExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "assert";
__n108["object"] := __n109;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "sameValue";
__n110["raw"] := "\"sameValue\"";
__n108["property"] := __n110;
__n108["computed"] := true;
__n107["callee"] := __n108;
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "returnCount";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 0.;
__n113["raw"] := "0";
__n111 := [ __n112, __n113 ];
__n107["arguments"] := __n111;
__n106["expression"] := __n107;
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "MemberExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "assert";
__n116["object"] := __n117;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "sameValue";
__n118["raw"] := "\"sameValue\"";
__n116["property"] := __n118;
__n116["computed"] := true;
__n115["callee"] := __n116;
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "nextCount";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := 1.;
__n121["raw"] := "1";
__n119 := [ __n120, __n121 ];
__n115["arguments"] := __n119;
__n114["expression"] := __n115;
__n1 := [ __n2, __n8, __n13, __n18, __n27, __n34, __n54, __n99, __n106, __n114 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n122 := [ "iterNextValThrows", "returnCount", "nextCount", "poisonedVal", "error" ];
__n0["variableDeclarations"] := __n122;
__n123 := [  ];
__n0["functionDeclarations"] := __n123;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}