function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "simulation";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "thenable";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "ObjectExpression";
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "then";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "FunctionExpression";
__n16["id"] := null;
__n17 := [ "_", "reject" ];
__n16["params"] := __n17;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "NewExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Promise";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "FunctionExpression";
__n26["id"] := null;
__n27 := [ "resolve" ];
__n26["params"] := __n27;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "resolve";
__n31["callee"] := __n32;
__n33 := [  ];
__n31["arguments"] := __n33;
__n30["expression"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n34 := [  ];
__n28["variableDeclarations"] := __n34;
__n35 := [  ];
__n28["functionDeclarations"] := __n35;
__n28["codeType"] := "function";
__n28["strict"] := false;
__n26["body"] := __n28;
__n26["generator"] := false;
__n26["async"] := false;
__n26["expression"] := false;
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["object"] := __n23;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "then";
__n36["raw"] := "\"then\"";
__n22["property"] := __n36;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n38 := {  };
__n38["type"] := "FunctionExpression";
__n38["id"] := null;
__n39 := [  ];
__n38["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "reject";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "simulation";
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n47 := [  ];
__n40["variableDeclarations"] := __n47;
__n48 := [  ];
__n40["functionDeclarations"] := __n48;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n38["body"] := __n40;
__n38["generator"] := false;
__n38["async"] := false;
__n38["expression"] := false;
__n37 := [ __n38 ];
__n21["arguments"] := __n37;
__n20["expression"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n49 := [  ];
__n18["variableDeclarations"] := __n49;
__n50 := [  ];
__n18["functionDeclarations"] := __n50;
__n18["codeType"] := "function";
__n18["strict"] := false;
__n16["body"] := __n18;
__n16["generator"] := false;
__n16["async"] := false;
__n16["expression"] := false;
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n13 := [ __n14 ];
__n12["properties"] := __n13;
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "Promise";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "allSettled";
__n59["raw"] := "\"allSettled\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n61 := {  };
__n61["type"] := "ArrayExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "thenable";
__n62 := [ __n63 ];
__n61["elements"] := __n62;
__n60 := [ __n61 ];
__n56["arguments"] := __n60;
__n55["object"] := __n56;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "then";
__n64["raw"] := "\"then\"";
__n55["property"] := __n64;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n66 := {  };
__n66["type"] := "ArrowFunctionExpression";
__n66["id"] := null;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "settleds";
__n67 := [ __n68 ];
__n66["params"] := __n67;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "assert";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "sameValue";
__n75["raw"] := "\"sameValue\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n72["callee"] := __n73;
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "settleds";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "length";
__n79["raw"] := "\"length\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 1.;
__n80["raw"] := "1";
__n76 := [ __n77, __n80 ];
__n72["arguments"] := __n76;
__n71["expression"] := __n72;
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "assert";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "sameValue";
__n85["raw"] := "\"sameValue\"";
__n83["property"] := __n85;
__n83["computed"] := true;
__n82["callee"] := __n83;
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "MemberExpression";
__n88["computed"] := true;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "settleds";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 0.;
__n90["raw"] := "0";
__n88["property"] := __n90;
__n87["object"] := __n88;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "status";
__n91["raw"] := "\"status\"";
__n87["property"] := __n91;
__n87["computed"] := true;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "rejected";
__n92["raw"] := "'rejected'";
__n86 := [ __n87, __n92 ];
__n82["arguments"] := __n86;
__n81["expression"] := __n82;
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "assert";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "sameValue";
__n97["raw"] := "\"sameValue\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["callee"] := __n95;
__n99 := {  };
__n99["type"] := "MemberExpression";
__n100 := {  };
__n100["type"] := "MemberExpression";
__n100["computed"] := true;
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "settleds";
__n100["object"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 0.;
__n102["raw"] := "0";
__n100["property"] := __n102;
__n99["object"] := __n100;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "reason";
__n103["raw"] := "\"reason\"";
__n99["property"] := __n103;
__n99["computed"] := true;
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "simulation";
__n98 := [ __n99, __n104 ];
__n94["arguments"] := __n98;
__n93["expression"] := __n94;
__n70 := [ __n71, __n81, __n93 ];
__n69["body"] := __n70;
__n66["body"] := __n69;
__n66["generator"] := false;
__n66["expression"] := false;
__n66["async"] := false;
__n65 := [ __n66 ];
__n54["arguments"] := __n65;
__n53["object"] := __n54;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "then";
__n105["raw"] := "\"then\"";
__n53["property"] := __n105;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "$DONE";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "$DONE";
__n106 := [ __n107, __n108 ];
__n52["arguments"] := __n106;
__n51["expression"] := __n52;
__n1 := [ __n2, __n8, __n51 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n109 := [ "simulation", "thenable" ];
__n0["variableDeclarations"] := __n109;
__n110 := [  ];
__n0["functionDeclarations"] := __n110;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}