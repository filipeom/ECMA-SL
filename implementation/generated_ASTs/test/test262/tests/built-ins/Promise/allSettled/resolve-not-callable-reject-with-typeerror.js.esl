function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Promise";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "resolve";
__n6["raw"] := "\"resolve\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 'null;
__n7["raw"] := "\"'null\"";
__n3["right"] := __n7;
__n2["expression"] := __n3;
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Promise";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "allSettled";
__n16["raw"] := "\"allSettled\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "ArrayExpression";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 1.;
__n20["raw"] := "1";
__n19 := [ __n20 ];
__n18["elements"] := __n19;
__n17 := [ __n18 ];
__n13["arguments"] := __n17;
__n12["object"] := __n13;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "then";
__n21["raw"] := "\"then\"";
__n12["property"] := __n21;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n23 := {  };
__n23["type"] := "ArrowFunctionExpression";
__n23["id"] := null;
__n24 := [  ];
__n23["params"] := __n24;
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "$DONE";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "The promise should not be resolved.";
__n28["raw"] := "'The promise should not be resolved.'";
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n23["body"] := __n25;
__n23["generator"] := false;
__n23["expression"] := true;
__n23["async"] := false;
__n29 := {  };
__n29["type"] := "ArrowFunctionExpression";
__n29["id"] := null;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "error";
__n30 := [ __n31 ];
__n29["params"] := __n30;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "assert";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "instanceof";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "error";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "TypeError";
__n38["right"] := __n40;
__n37 := [ __n38 ];
__n35["arguments"] := __n37;
__n34["expression"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n29["body"] := __n32;
__n29["generator"] := false;
__n29["expression"] := false;
__n29["async"] := false;
__n22 := [ __n23, __n29 ];
__n11["arguments"] := __n22;
__n10["object"] := __n11;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "then";
__n41["raw"] := "\"then\"";
__n10["property"] := __n41;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "$DONE";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$DONE";
__n42 := [ __n43, __n44 ];
__n9["arguments"] := __n42;
__n8["expression"] := __n9;
__n1 := [ __n2, __n8 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n45 := [  ];
__n0["variableDeclarations"] := __n45;
__n46 := [  ];
__n0["functionDeclarations"] := __n46;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}