function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callCount";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "let";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "errorArray";
__n9["id"] := __n10;
__n9["init"] := null;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "let";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Constructor";
__n11["expression"] := __n12;
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "AssignmentExpression";
__n14["operator"] := "=";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Constructor";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "resolve";
__n17["raw"] := "\"resolve\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["left"] := __n15;
__n18 := {  };
__n18["type"] := "FunctionExpression";
__n18["id"] := null;
__n19 := [ "v" ];
__n18["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ReturnStatement";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "v";
__n22["argument"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n24 := [  ];
__n20["variableDeclarations"] := __n24;
__n25 := [  ];
__n20["functionDeclarations"] := __n25;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n18["body"] := __n20;
__n18["generator"] := false;
__n18["async"] := false;
__n18["expression"] := false;
__n14["right"] := __n18;
__n13["expression"] := __n14;
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "p1OnRejected";
__n28["id"] := __n29;
__n28["init"] := null;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "let";
__n30 := {  };
__n30["type"] := "VariableDeclaration";
__n32 := {  };
__n32["type"] := "VariableDeclarator";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "p1";
__n32["id"] := __n33;
__n34 := {  };
__n34["type"] := "ObjectExpression";
__n36 := {  };
__n36["type"] := "Property";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "then";
__n36["key"] := __n37;
__n38 := {  };
__n38["type"] := "FunctionExpression";
__n38["id"] := null;
__n39 := [ "onFulfilled", "onRejected" ];
__n38["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "p1OnRejected";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "onRejected";
__n43["right"] := __n45;
__n42["expression"] := __n43;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "onRejected";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "onRejectedValue";
__n50["raw"] := "\"onRejectedValue\"";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n41 := [ __n42, __n46 ];
__n40["body"] := __n41;
__n51 := [  ];
__n40["variableDeclarations"] := __n51;
__n52 := [  ];
__n40["functionDeclarations"] := __n52;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n38["body"] := __n40;
__n38["generator"] := false;
__n38["async"] := false;
__n38["expression"] := false;
__n36["value"] := __n38;
__n36["computed"] := false;
__n36["kind"] := "init";
__n36["shorthand"] := false;
__n35 := [ __n36 ];
__n34["properties"] := __n35;
__n32["init"] := __n34;
__n31 := [ __n32 ];
__n30["declarations"] := __n31;
__n30["kind"] := "let";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "assert";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "sameValue";
__n57["raw"] := "\"sameValue\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "callCount";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 0.;
__n60["raw"] := "0";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "callCount before call to any()";
__n61["raw"] := "\"callCount before call to any()\"";
__n58 := [ __n59, __n60, __n61 ];
__n54["arguments"] := __n58;
__n53["expression"] := __n54;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "MemberExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "Promise";
__n65["object"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "any";
__n67["raw"] := "\"any\"";
__n65["property"] := __n67;
__n65["computed"] := true;
__n64["object"] := __n65;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "call";
__n68["raw"] := "\"call\"";
__n64["property"] := __n68;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "Constructor";
__n71 := {  };
__n71["type"] := "ArrayExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "p1";
__n72 := [ __n73 ];
__n71["elements"] := __n72;
__n69 := [ __n70, __n71 ];
__n63["arguments"] := __n69;
__n62["expression"] := __n63;
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "assert";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "sameValue";
__n78["raw"] := "\"sameValue\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["callee"] := __n76;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "callCount";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 1.;
__n81["raw"] := "1";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "callCount after call to any()";
__n82["raw"] := "\"callCount after call to any()\"";
__n79 := [ __n80, __n81, __n82 ];
__n75["arguments"] := __n79;
__n74["expression"] := __n75;
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "assert";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "sameValue";
__n87["raw"] := "\"sameValue\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n84["callee"] := __n85;
__n89 := {  };
__n89["type"] := "MemberExpression";
__n89["computed"] := true;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "errorArray";
__n89["object"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 0.;
__n91["raw"] := "0";
__n89["property"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "onRejectedValue";
__n92["raw"] := "\"onRejectedValue\"";
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "errorArray after call to any()";
__n93["raw"] := "\"errorArray after call to any()\"";
__n88 := [ __n89, __n92, __n93 ];
__n84["arguments"] := __n88;
__n83["expression"] := __n84;
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "p1OnRejected";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "unexpectedonRejectedValue";
__n98["raw"] := "\"unexpectedonRejectedValue\"";
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n94["expression"] := __n95;
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "MemberExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "assert";
__n101["object"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "sameValue";
__n103["raw"] := "\"sameValue\"";
__n101["property"] := __n103;
__n101["computed"] := true;
__n100["callee"] := __n101;
__n105 := {  };
__n105["type"] := "MemberExpression";
__n105["computed"] := true;
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "errorArray";
__n105["object"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 0.;
__n107["raw"] := "0";
__n105["property"] := __n107;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "onRejectedValue";
__n108["raw"] := "\"onRejectedValue\"";
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "errorArray[0] === 'onRejectedValue', after call to p1OnRejected()";
__n109["raw"] := "\"errorArray[0] === 'onRejectedValue', after call to p1OnRejected()\"";
__n104 := [ __n105, __n108, __n109 ];
__n100["arguments"] := __n104;
__n99["expression"] := __n100;
__n1 := [ __n2, __n7, __n11, __n13, __n26, __n30, __n53, __n62, __n74, __n83, __n94, __n99 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n110 := [ "callCount", "errorArray", "p1OnRejected", "p1" ];
__n0["variableDeclarations"] := __n110;
__n112 := {  };
__n112["type"] := "FunctionDeclaration";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "Constructor";
__n112["id"] := __n113;
__n114 := [ "executor" ];
__n112["params"] := __n114;
__n115 := {  };
__n115["type"] := "BlockStatement";
__n117 := {  };
__n117["type"] := "ExpressionStatement";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "executor";
__n118["callee"] := __n119;
__n121 := {  };
__n121["type"] := "MemberExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "Test262Error";
__n121["object"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "thrower";
__n123["raw"] := "\"thrower\"";
__n121["property"] := __n123;
__n121["computed"] := true;
__n124 := {  };
__n124["type"] := "ArrowFunctionExpression";
__n124["id"] := null;
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "error";
__n125 := [ __n126 ];
__n124["params"] := __n125;
__n127 := {  };
__n127["type"] := "BlockStatement";
__n129 := {  };
__n129["type"] := "ExpressionStatement";
__n130 := {  };
__n130["type"] := "UpdateExpression";
__n130["operator"] := "++";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "callCount";
__n130["argument"] := __n131;
__n130["prefix"] := false;
__n129["expression"] := __n130;
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "AssignmentExpression";
__n133["operator"] := "=";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "errorArray";
__n133["left"] := __n134;
__n135 := {  };
__n135["type"] := "MemberExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "error";
__n135["object"] := __n136;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "errors";
__n137["raw"] := "\"errors\"";
__n135["property"] := __n137;
__n135["computed"] := true;
__n133["right"] := __n135;
__n132["expression"] := __n133;
__n128 := [ __n129, __n132 ];
__n127["body"] := __n128;
__n124["body"] := __n127;
__n124["generator"] := false;
__n124["expression"] := false;
__n124["async"] := false;
__n120 := [ __n121, __n124 ];
__n118["arguments"] := __n120;
__n117["expression"] := __n118;
__n116 := [ __n117 ];
__n115["body"] := __n116;
__n138 := [  ];
__n115["variableDeclarations"] := __n138;
__n139 := [  ];
__n115["functionDeclarations"] := __n139;
__n115["codeType"] := "function";
__n115["strict"] := false;
__n112["body"] := __n115;
__n112["generator"] := false;
__n112["async"] := false;
__n112["expression"] := false;
__n111 := [ __n112 ];
__n0["functionDeclarations"] := __n111;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}