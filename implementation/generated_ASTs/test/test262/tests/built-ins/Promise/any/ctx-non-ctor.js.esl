function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "UnaryExpression";
__n8["operator"] := "typeof";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Promise";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "any";
__n11["raw"] := "\"any\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["argument"] := __n9;
__n8["prefix"] := true;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "function";
__n12["raw"] := "'function'";
__n7 := [ __n8, __n12 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "assert";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "throws";
__n17["raw"] := "\"throws\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "TypeError";
__n20 := {  };
__n20["type"] := "FunctionExpression";
__n20["id"] := null;
__n21 := [  ];
__n20["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Promise";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "any";
__n29["raw"] := "\"any\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["object"] := __n27;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "call";
__n30["raw"] := "\"call\"";
__n26["property"] := __n30;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "eval";
__n31 := [ __n32 ];
__n25["arguments"] := __n31;
__n24["expression"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n33 := [  ];
__n22["variableDeclarations"] := __n33;
__n34 := [  ];
__n22["functionDeclarations"] := __n34;
__n22["codeType"] := "function";
__n22["strict"] := false;
__n20["body"] := __n22;
__n20["generator"] := false;
__n20["async"] := false;
__n20["expression"] := false;
__n18 := [ __n19, __n20 ];
__n14["arguments"] := __n18;
__n13["expression"] := __n14;
__n1 := [ __n2, __n13 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n35 := [  ];
__n0["variableDeclarations"] := __n35;
__n36 := [  ];
__n0["functionDeclarations"] := __n36;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}