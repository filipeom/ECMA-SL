function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "poison";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "defineProperty";
__n12["raw"] := "\"defineProperty\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "poison";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Symbol";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "iterator";
__n17["raw"] := "\"iterator\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "get";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "FunctionExpression";
__n22["id"] := null;
__n23 := [  ];
__n22["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ThrowStatement";
__n27 := {  };
__n27["type"] := "NewExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Test262Error";
__n27["callee"] := __n28;
__n29 := [  ];
__n27["arguments"] := __n29;
__n26["argument"] := __n27;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n30 := [  ];
__n24["variableDeclarations"] := __n30;
__n31 := [  ];
__n24["functionDeclarations"] := __n31;
__n24["codeType"] := "function";
__n24["strict"] := false;
__n22["body"] := __n24;
__n22["generator"] := false;
__n22["async"] := false;
__n22["expression"] := false;
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n19 := [ __n20 ];
__n18["properties"] := __n19;
__n13 := [ __n14, __n15, __n18 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n32 := {  };
__n32["type"] := "TryStatement";
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Promise";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "any";
__n43["raw"] := "\"any\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "poison";
__n44 := [ __n45 ];
__n40["arguments"] := __n44;
__n39["object"] := __n40;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "then";
__n46["raw"] := "\"then\"";
__n39["property"] := __n46;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n48 := {  };
__n48["type"] := "ArrowFunctionExpression";
__n48["id"] := null;
__n49 := [  ];
__n48["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "$DONE";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "The promise should be rejected, but was resolved";
__n56["raw"] := "'The promise should be rejected, but was resolved'";
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n48["body"] := __n50;
__n48["generator"] := false;
__n48["expression"] := false;
__n48["async"] := false;
__n57 := {  };
__n57["type"] := "ArrowFunctionExpression";
__n57["id"] := null;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "error";
__n58 := [ __n59 ];
__n57["params"] := __n58;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "assert";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "sameValue";
__n66["raw"] := "\"sameValue\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "Object";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "getPrototypeOf";
__n71["raw"] := "\"getPrototypeOf\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "error";
__n72 := [ __n73 ];
__n68["arguments"] := __n72;
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "Test262Error";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "prototype";
__n76["raw"] := "\"prototype\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n67 := [ __n68, __n74 ];
__n63["arguments"] := __n67;
__n62["expression"] := __n63;
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "assert";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "instanceof";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "error";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "Test262Error";
__n81["right"] := __n83;
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n61 := [ __n62, __n77 ];
__n60["body"] := __n61;
__n57["body"] := __n60;
__n57["generator"] := false;
__n57["expression"] := false;
__n57["async"] := false;
__n47 := [ __n48, __n57 ];
__n38["arguments"] := __n47;
__n37["object"] := __n38;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "then";
__n84["raw"] := "\"then\"";
__n37["property"] := __n84;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$DONE";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "$DONE";
__n85 := [ __n86, __n87 ];
__n36["arguments"] := __n85;
__n35["expression"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n32["block"] := __n33;
__n88 := {  };
__n88["type"] := "CatchClause";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "error";
__n88["param"] := __n89;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "$DONE";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "TemplateLiteral";
__n98 := {  };
__n98["type"] := "TemplateElement";
__n99 := {  };
__n99["raw"] := "The promise should be rejected, but threw an exception: ";
__n99["cooked"] := "The promise should be rejected, but threw an exception: ";
__n98["value"] := __n99;
__n98["tail"] := false;
__n100 := {  };
__n100["type"] := "TemplateElement";
__n101 := {  };
__n101["raw"] := "";
__n101["cooked"] := "";
__n100["value"] := __n101;
__n100["tail"] := true;
__n97 := [ __n98, __n100 ];
__n96["quasis"] := __n97;
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "error";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "message";
__n105["raw"] := "\"message\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n102 := [ __n103 ];
__n96["expressions"] := __n102;
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n88["body"] := __n90;
__n32["handler"] := __n88;
__n32["finalizer"] := null;
__n1 := [ __n2, __n8, __n32 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n106 := [ "poison" ];
__n0["variableDeclarations"] := __n106;
__n107 := [  ];
__n0["functionDeclarations"] := __n107;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}