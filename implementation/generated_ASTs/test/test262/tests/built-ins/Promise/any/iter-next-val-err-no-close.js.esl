function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callCount";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "let";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "returnCount";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 0.;
__n11["raw"] := "0";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "let";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "error";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "NewExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Test262Error";
__n16["callee"] := __n17;
__n18 := [  ];
__n16["arguments"] := __n18;
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "let";
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "poisoned";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "ObjectExpression";
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "done";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := false;
__n27["raw"] := "false";
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n24 := [ __n25 ];
__n23["properties"] := __n24;
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "let";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Object";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "defineProperty";
__n32["raw"] := "\"defineProperty\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "poisoned";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "value";
__n35["raw"] := "'value'";
__n36 := {  };
__n36["type"] := "ObjectExpression";
__n38 := {  };
__n38["type"] := "Property";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "get";
__n38["key"] := __n39;
__n40 := {  };
__n40["type"] := "FunctionExpression";
__n40["id"] := null;
__n41 := [  ];
__n40["params"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "UpdateExpression";
__n45["operator"] := "++";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "callCount";
__n45["argument"] := __n46;
__n45["prefix"] := false;
__n44["expression"] := __n45;
__n47 := {  };
__n47["type"] := "ThrowStatement";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "error";
__n47["argument"] := __n48;
__n43 := [ __n44, __n47 ];
__n42["body"] := __n43;
__n49 := [  ];
__n42["variableDeclarations"] := __n49;
__n50 := [  ];
__n42["functionDeclarations"] := __n50;
__n42["codeType"] := "function";
__n42["strict"] := false;
__n40["body"] := __n42;
__n40["generator"] := false;
__n40["async"] := false;
__n40["expression"] := false;
__n38["value"] := __n40;
__n38["computed"] := false;
__n38["kind"] := "init";
__n38["shorthand"] := false;
__n37 := [ __n38 ];
__n36["properties"] := __n37;
__n33 := [ __n34, __n35, __n36 ];
__n29["arguments"] := __n33;
__n28["expression"] := __n29;
__n51 := {  };
__n51["type"] := "VariableDeclaration";
__n53 := {  };
__n53["type"] := "VariableDeclarator";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "iterNextValThrows";
__n53["id"] := __n54;
__n55 := {  };
__n55["type"] := "ObjectExpression";
__n57 := {  };
__n57["type"] := "Property";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Symbol";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "iterator";
__n60["raw"] := "\"iterator\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["key"] := __n58;
__n61 := {  };
__n61["type"] := "FunctionExpression";
__n61["id"] := null;
__n62 := [  ];
__n61["params"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "UpdateExpression";
__n66["operator"] := "++";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "callCount";
__n66["argument"] := __n67;
__n66["prefix"] := false;
__n65["expression"] := __n66;
__n68 := {  };
__n68["type"] := "ReturnStatement";
__n69 := {  };
__n69["type"] := "ObjectExpression";
__n71 := {  };
__n71["type"] := "Property";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "next";
__n71["key"] := __n72;
__n73 := {  };
__n73["type"] := "FunctionExpression";
__n73["id"] := null;
__n74 := [  ];
__n73["params"] := __n74;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "UpdateExpression";
__n78["operator"] := "++";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "callCount";
__n78["argument"] := __n79;
__n78["prefix"] := false;
__n77["expression"] := __n78;
__n80 := {  };
__n80["type"] := "ReturnStatement";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "poisoned";
__n80["argument"] := __n81;
__n76 := [ __n77, __n80 ];
__n75["body"] := __n76;
__n82 := [  ];
__n75["variableDeclarations"] := __n82;
__n83 := [  ];
__n75["functionDeclarations"] := __n83;
__n75["codeType"] := "function";
__n75["strict"] := false;
__n73["body"] := __n75;
__n73["generator"] := false;
__n73["async"] := false;
__n73["expression"] := false;
__n71["value"] := __n73;
__n71["computed"] := false;
__n71["kind"] := "init";
__n71["shorthand"] := false;
__n84 := {  };
__n84["type"] := "Property";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "return";
__n84["key"] := __n85;
__n86 := {  };
__n86["type"] := "FunctionExpression";
__n86["id"] := null;
__n87 := [  ];
__n86["params"] := __n87;
__n88 := {  };
__n88["type"] := "BlockStatement";
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "UpdateExpression";
__n91["operator"] := "++";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "returnCount";
__n91["argument"] := __n92;
__n91["prefix"] := false;
__n90["expression"] := __n91;
__n93 := {  };
__n93["type"] := "ReturnStatement";
__n94 := {  };
__n94["type"] := "ObjectExpression";
__n95 := [  ];
__n94["properties"] := __n95;
__n93["argument"] := __n94;
__n89 := [ __n90, __n93 ];
__n88["body"] := __n89;
__n96 := [  ];
__n88["variableDeclarations"] := __n96;
__n97 := [  ];
__n88["functionDeclarations"] := __n97;
__n88["codeType"] := "function";
__n88["strict"] := false;
__n86["body"] := __n88;
__n86["generator"] := false;
__n86["async"] := false;
__n86["expression"] := false;
__n84["value"] := __n86;
__n84["computed"] := false;
__n84["kind"] := "init";
__n84["shorthand"] := false;
__n70 := [ __n71, __n84 ];
__n69["properties"] := __n70;
__n68["argument"] := __n69;
__n64 := [ __n65, __n68 ];
__n63["body"] := __n64;
__n98 := [  ];
__n63["variableDeclarations"] := __n98;
__n99 := [  ];
__n63["functionDeclarations"] := __n99;
__n63["codeType"] := "function";
__n63["strict"] := false;
__n61["body"] := __n63;
__n61["generator"] := false;
__n61["async"] := false;
__n61["expression"] := false;
__n57["value"] := __n61;
__n57["computed"] := true;
__n57["kind"] := "init";
__n57["shorthand"] := false;
__n56 := [ __n57 ];
__n55["properties"] := __n56;
__n53["init"] := __n55;
__n52 := [ __n53 ];
__n51["declarations"] := __n52;
__n51["kind"] := "let";
__n100 := {  };
__n100["type"] := "ExpressionStatement";
__n101 := {  };
__n101["type"] := "CallExpression";
__n102 := {  };
__n102["type"] := "MemberExpression";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "MemberExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "Promise";
__n106["object"] := __n107;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "any";
__n108["raw"] := "\"any\"";
__n106["property"] := __n108;
__n106["computed"] := true;
__n105["callee"] := __n106;
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "iterNextValThrows";
__n109 := [ __n110 ];
__n105["arguments"] := __n109;
__n104["object"] := __n105;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "then";
__n111["raw"] := "\"then\"";
__n104["property"] := __n111;
__n104["computed"] := true;
__n103["callee"] := __n104;
__n113 := {  };
__n113["type"] := "ArrowFunctionExpression";
__n113["id"] := null;
__n114 := [  ];
__n113["params"] := __n114;
__n115 := {  };
__n115["type"] := "BlockStatement";
__n117 := {  };
__n117["type"] := "ExpressionStatement";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "$DONE";
__n118["callee"] := __n119;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "The promise should be rejected, but was resolved";
__n121["raw"] := "'The promise should be rejected, but was resolved'";
__n120 := [ __n121 ];
__n118["arguments"] := __n120;
__n117["expression"] := __n118;
__n116 := [ __n117 ];
__n115["body"] := __n116;
__n113["body"] := __n115;
__n113["generator"] := false;
__n113["expression"] := false;
__n113["async"] := false;
__n122 := {  };
__n122["type"] := "ArrowFunctionExpression";
__n122["id"] := null;
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "reason";
__n123 := [ __n124 ];
__n122["params"] := __n123;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "assert";
__n128["callee"] := __n129;
__n131 := {  };
__n131["type"] := "BinaryExpression";
__n131["operator"] := "instanceof";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "error";
__n131["left"] := __n132;
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "Test262Error";
__n131["right"] := __n133;
__n130 := [ __n131 ];
__n128["arguments"] := __n130;
__n127["expression"] := __n128;
__n134 := {  };
__n134["type"] := "ExpressionStatement";
__n135 := {  };
__n135["type"] := "CallExpression";
__n136 := {  };
__n136["type"] := "MemberExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "assert";
__n136["object"] := __n137;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := "sameValue";
__n138["raw"] := "\"sameValue\"";
__n136["property"] := __n138;
__n136["computed"] := true;
__n135["callee"] := __n136;
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "reason";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "error";
__n139 := [ __n140, __n141 ];
__n135["arguments"] := __n139;
__n134["expression"] := __n135;
__n142 := {  };
__n142["type"] := "ExpressionStatement";
__n143 := {  };
__n143["type"] := "CallExpression";
__n144 := {  };
__n144["type"] := "MemberExpression";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "assert";
__n144["object"] := __n145;
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := "sameValue";
__n146["raw"] := "\"sameValue\"";
__n144["property"] := __n146;
__n144["computed"] := true;
__n143["callee"] := __n144;
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "callCount";
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := 3.;
__n149["raw"] := "3";
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "callCount === 3";
__n150["raw"] := "'callCount === 3'";
__n147 := [ __n148, __n149, __n150 ];
__n143["arguments"] := __n147;
__n142["expression"] := __n143;
__n151 := {  };
__n151["type"] := "ExpressionStatement";
__n152 := {  };
__n152["type"] := "CallExpression";
__n153 := {  };
__n153["type"] := "MemberExpression";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "assert";
__n153["object"] := __n154;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := "sameValue";
__n155["raw"] := "\"sameValue\"";
__n153["property"] := __n155;
__n153["computed"] := true;
__n152["callee"] := __n153;
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "returnCount";
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := 0.;
__n158["raw"] := "0";
__n156 := [ __n157, __n158 ];
__n152["arguments"] := __n156;
__n151["expression"] := __n152;
__n126 := [ __n127, __n134, __n142, __n151 ];
__n125["body"] := __n126;
__n122["body"] := __n125;
__n122["generator"] := false;
__n122["expression"] := false;
__n122["async"] := false;
__n112 := [ __n113, __n122 ];
__n103["arguments"] := __n112;
__n102["object"] := __n103;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "then";
__n159["raw"] := "\"then\"";
__n102["property"] := __n159;
__n102["computed"] := true;
__n101["callee"] := __n102;
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "$DONE";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "$DONE";
__n160 := [ __n161, __n162 ];
__n101["arguments"] := __n160;
__n100["expression"] := __n101;
__n1 := [ __n2, __n7, __n12, __n19, __n28, __n51, __n100 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n163 := [ "callCount", "returnCount", "error", "poisoned", "iterNextValThrows" ];
__n0["variableDeclarations"] := __n163;
__n164 := [  ];
__n0["functionDeclarations"] := __n164;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}