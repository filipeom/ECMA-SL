function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "returnCount";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "let";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "poisonedDone";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n12 := [  ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "let";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "error";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "NewExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Test262Error";
__n17["callee"] := __n18;
__n19 := [  ];
__n17["arguments"] := __n19;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "let";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Object";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "defineProperties";
__n24["raw"] := "\"defineProperties\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "poisonedDone";
__n27 := {  };
__n27["type"] := "ObjectExpression";
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "done";
__n29["key"] := __n30;
__n31 := {  };
__n31["type"] := "ObjectExpression";
__n33 := {  };
__n33["type"] := "Property";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "get";
__n33["key"] := __n34;
__n35 := {  };
__n35["type"] := "FunctionExpression";
__n35["id"] := null;
__n36 := [  ];
__n35["params"] := __n36;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ThrowStatement";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "error";
__n39["argument"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n41 := [  ];
__n37["variableDeclarations"] := __n41;
__n42 := [  ];
__n37["functionDeclarations"] := __n42;
__n37["codeType"] := "function";
__n37["strict"] := false;
__n35["body"] := __n37;
__n35["generator"] := false;
__n35["async"] := false;
__n35["expression"] := false;
__n33["value"] := __n35;
__n33["computed"] := false;
__n33["kind"] := "init";
__n33["shorthand"] := false;
__n32 := [ __n33 ];
__n31["properties"] := __n32;
__n29["value"] := __n31;
__n29["computed"] := false;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n43 := {  };
__n43["type"] := "Property";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "value";
__n43["key"] := __n44;
__n45 := {  };
__n45["type"] := "ObjectExpression";
__n47 := {  };
__n47["type"] := "Property";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "get";
__n47["key"] := __n48;
__n49 := {  };
__n49["type"] := "FunctionExpression";
__n49["id"] := null;
__n50 := [  ];
__n49["params"] := __n50;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n52 := [  ];
__n51["body"] := __n52;
__n53 := [  ];
__n51["variableDeclarations"] := __n53;
__n54 := [  ];
__n51["functionDeclarations"] := __n54;
__n51["codeType"] := "function";
__n51["strict"] := false;
__n49["body"] := __n51;
__n49["generator"] := false;
__n49["async"] := false;
__n49["expression"] := false;
__n47["value"] := __n49;
__n47["computed"] := false;
__n47["kind"] := "init";
__n47["shorthand"] := false;
__n46 := [ __n47 ];
__n45["properties"] := __n46;
__n43["value"] := __n45;
__n43["computed"] := false;
__n43["kind"] := "init";
__n43["shorthand"] := false;
__n28 := [ __n29, __n43 ];
__n27["properties"] := __n28;
__n25 := [ __n26, __n27 ];
__n21["arguments"] := __n25;
__n20["expression"] := __n21;
__n55 := {  };
__n55["type"] := "VariableDeclaration";
__n57 := {  };
__n57["type"] := "VariableDeclarator";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "iterStepThrows";
__n57["id"] := __n58;
__n59 := {  };
__n59["type"] := "ObjectExpression";
__n61 := {  };
__n61["type"] := "Property";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Symbol";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "iterator";
__n64["raw"] := "\"iterator\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["key"] := __n62;
__n65 := {  };
__n65["type"] := "FunctionExpression";
__n65["id"] := null;
__n66 := [  ];
__n65["params"] := __n66;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ReturnStatement";
__n70 := {  };
__n70["type"] := "ObjectExpression";
__n72 := {  };
__n72["type"] := "Property";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "next";
__n72["key"] := __n73;
__n74 := {  };
__n74["type"] := "FunctionExpression";
__n74["id"] := null;
__n75 := [  ];
__n74["params"] := __n75;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n78 := {  };
__n78["type"] := "ReturnStatement";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "poisonedDone";
__n78["argument"] := __n79;
__n77 := [ __n78 ];
__n76["body"] := __n77;
__n80 := [  ];
__n76["variableDeclarations"] := __n80;
__n81 := [  ];
__n76["functionDeclarations"] := __n81;
__n76["codeType"] := "function";
__n76["strict"] := false;
__n74["body"] := __n76;
__n74["generator"] := false;
__n74["async"] := false;
__n74["expression"] := false;
__n72["value"] := __n74;
__n72["computed"] := false;
__n72["kind"] := "init";
__n72["shorthand"] := false;
__n82 := {  };
__n82["type"] := "Property";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "return";
__n82["key"] := __n83;
__n84 := {  };
__n84["type"] := "FunctionExpression";
__n84["id"] := null;
__n85 := [  ];
__n84["params"] := __n85;
__n86 := {  };
__n86["type"] := "BlockStatement";
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "AssignmentExpression";
__n89["operator"] := "+=";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "returnCount";
__n89["left"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 1.;
__n91["raw"] := "1";
__n89["right"] := __n91;
__n88["expression"] := __n89;
__n92 := {  };
__n92["type"] := "ReturnStatement";
__n93 := {  };
__n93["type"] := "ObjectExpression";
__n94 := [  ];
__n93["properties"] := __n94;
__n92["argument"] := __n93;
__n87 := [ __n88, __n92 ];
__n86["body"] := __n87;
__n95 := [  ];
__n86["variableDeclarations"] := __n95;
__n96 := [  ];
__n86["functionDeclarations"] := __n96;
__n86["codeType"] := "function";
__n86["strict"] := false;
__n84["body"] := __n86;
__n84["generator"] := false;
__n84["async"] := false;
__n84["expression"] := false;
__n82["value"] := __n84;
__n82["computed"] := false;
__n82["kind"] := "init";
__n82["shorthand"] := false;
__n71 := [ __n72, __n82 ];
__n70["properties"] := __n71;
__n69["argument"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n97 := [  ];
__n67["variableDeclarations"] := __n97;
__n98 := [  ];
__n67["functionDeclarations"] := __n98;
__n67["codeType"] := "function";
__n67["strict"] := false;
__n65["body"] := __n67;
__n65["generator"] := false;
__n65["async"] := false;
__n65["expression"] := false;
__n61["value"] := __n65;
__n61["computed"] := true;
__n61["kind"] := "init";
__n61["shorthand"] := false;
__n60 := [ __n61 ];
__n59["properties"] := __n60;
__n57["init"] := __n59;
__n56 := [ __n57 ];
__n55["declarations"] := __n56;
__n55["kind"] := "let";
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "MemberExpression";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "MemberExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "Promise";
__n105["object"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "any";
__n107["raw"] := "\"any\"";
__n105["property"] := __n107;
__n105["computed"] := true;
__n104["callee"] := __n105;
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "iterStepThrows";
__n108 := [ __n109 ];
__n104["arguments"] := __n108;
__n103["object"] := __n104;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "then";
__n110["raw"] := "\"then\"";
__n103["property"] := __n110;
__n103["computed"] := true;
__n102["callee"] := __n103;
__n112 := {  };
__n112["type"] := "ArrowFunctionExpression";
__n112["id"] := null;
__n113 := [  ];
__n112["params"] := __n113;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n116 := {  };
__n116["type"] := "ExpressionStatement";
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "$DONE";
__n117["callee"] := __n118;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "The promise should be rejected.";
__n120["raw"] := "'The promise should be rejected.'";
__n119 := [ __n120 ];
__n117["arguments"] := __n119;
__n116["expression"] := __n117;
__n115 := [ __n116 ];
__n114["body"] := __n115;
__n112["body"] := __n114;
__n112["generator"] := false;
__n112["expression"] := false;
__n112["async"] := false;
__n121 := {  };
__n121["type"] := "ArrowFunctionExpression";
__n121["id"] := null;
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "reason";
__n122 := [ __n123 ];
__n121["params"] := __n122;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "MemberExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "assert";
__n128["object"] := __n129;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "sameValue";
__n130["raw"] := "\"sameValue\"";
__n128["property"] := __n130;
__n128["computed"] := true;
__n127["callee"] := __n128;
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "reason";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "error";
__n131 := [ __n132, __n133 ];
__n127["arguments"] := __n131;
__n126["expression"] := __n127;
__n134 := {  };
__n134["type"] := "ExpressionStatement";
__n135 := {  };
__n135["type"] := "CallExpression";
__n136 := {  };
__n136["type"] := "MemberExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "assert";
__n136["object"] := __n137;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := "sameValue";
__n138["raw"] := "\"sameValue\"";
__n136["property"] := __n138;
__n136["computed"] := true;
__n135["callee"] := __n136;
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "returnCount";
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := 0.;
__n141["raw"] := "0";
__n139 := [ __n140, __n141 ];
__n135["arguments"] := __n139;
__n134["expression"] := __n135;
__n125 := [ __n126, __n134 ];
__n124["body"] := __n125;
__n121["body"] := __n124;
__n121["generator"] := false;
__n121["expression"] := false;
__n121["async"] := false;
__n111 := [ __n112, __n121 ];
__n102["arguments"] := __n111;
__n101["object"] := __n102;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := "then";
__n142["raw"] := "\"then\"";
__n101["property"] := __n142;
__n101["computed"] := true;
__n100["callee"] := __n101;
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "$DONE";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "$DONE";
__n143 := [ __n144, __n145 ];
__n100["arguments"] := __n143;
__n99["expression"] := __n100;
__n1 := [ __n2, __n7, __n13, __n20, __n55, __n99 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n146 := [ "returnCount", "poisonedDone", "error", "iterStepThrows" ];
__n0["variableDeclarations"] := __n146;
__n147 := [  ];
__n0["functionDeclarations"] := __n147;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}