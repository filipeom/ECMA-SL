function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "rejectFunction";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Constructor";
__n4["expression"] := __n5;
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "AssignmentExpression";
__n7["operator"] := "=";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Constructor";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "resolve";
__n10["raw"] := "\"resolve\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["left"] := __n8;
__n11 := {  };
__n11["type"] := "FunctionExpression";
__n11["id"] := null;
__n12 := [ "v" ];
__n11["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ReturnStatement";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "v";
__n15["argument"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n17 := [  ];
__n13["variableDeclarations"] := __n17;
__n18 := [  ];
__n13["functionDeclarations"] := __n18;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n11["body"] := __n13;
__n11["generator"] := false;
__n11["async"] := false;
__n11["expression"] := false;
__n7["right"] := __n11;
__n6["expression"] := __n7;
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "callCount1";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 0.;
__n23["raw"] := "0";
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n24 := {  };
__n24["type"] := "VariableDeclaration";
__n26 := {  };
__n26["type"] := "VariableDeclarator";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "callCount2";
__n26["id"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 0.;
__n28["raw"] := "0";
__n26["init"] := __n28;
__n25 := [ __n26 ];
__n24["declarations"] := __n25;
__n24["kind"] := "var";
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "p1OnRejected";
__n31["id"] := __n32;
__n31["init"] := null;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n33 := {  };
__n33["type"] := "VariableDeclaration";
__n35 := {  };
__n35["type"] := "VariableDeclarator";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "p1";
__n35["id"] := __n36;
__n37 := {  };
__n37["type"] := "ObjectExpression";
__n39 := {  };
__n39["type"] := "Property";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "then";
__n39["key"] := __n40;
__n41 := {  };
__n41["type"] := "FunctionExpression";
__n41["id"] := null;
__n42 := [ "_", "onRejected" ];
__n41["params"] := __n42;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "AssignmentExpression";
__n46["operator"] := "+=";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "callCount1";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1.;
__n48["raw"] := "1";
__n46["right"] := __n48;
__n45["expression"] := __n46;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "AssignmentExpression";
__n50["operator"] := "=";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "p1OnRejected";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "onRejected";
__n50["right"] := __n52;
__n49["expression"] := __n50;
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "assert";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "notSameValue";
__n57["raw"] := "\"notSameValue\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "onRejected";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "rejectFunction";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "p1.then";
__n61["raw"] := "'p1.then'";
__n58 := [ __n59, __n60, __n61 ];
__n54["arguments"] := __n58;
__n53["expression"] := __n54;
__n44 := [ __n45, __n49, __n53 ];
__n43["body"] := __n44;
__n62 := [  ];
__n43["variableDeclarations"] := __n62;
__n63 := [  ];
__n43["functionDeclarations"] := __n63;
__n43["codeType"] := "function";
__n43["strict"] := false;
__n41["body"] := __n43;
__n41["generator"] := false;
__n41["async"] := false;
__n41["expression"] := false;
__n39["value"] := __n41;
__n39["computed"] := false;
__n39["kind"] := "init";
__n39["shorthand"] := false;
__n38 := [ __n39 ];
__n37["properties"] := __n38;
__n35["init"] := __n37;
__n34 := [ __n35 ];
__n33["declarations"] := __n34;
__n33["kind"] := "var";
__n64 := {  };
__n64["type"] := "VariableDeclaration";
__n66 := {  };
__n66["type"] := "VariableDeclarator";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "p2";
__n66["id"] := __n67;
__n68 := {  };
__n68["type"] := "ObjectExpression";
__n70 := {  };
__n70["type"] := "Property";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "then";
__n70["key"] := __n71;
__n72 := {  };
__n72["type"] := "FunctionExpression";
__n72["id"] := null;
__n73 := [ "_", "onRejected" ];
__n72["params"] := __n73;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "AssignmentExpression";
__n77["operator"] := "+=";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "callCount2";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 1.;
__n79["raw"] := "1";
__n77["right"] := __n79;
__n76["expression"] := __n77;
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "MemberExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "assert";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "notSameValue";
__n84["raw"] := "\"notSameValue\"";
__n82["property"] := __n84;
__n82["computed"] := true;
__n81["callee"] := __n82;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "onRejected";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "rejectFunction";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "p2.then";
__n88["raw"] := "'p2.then'";
__n85 := [ __n86, __n87, __n88 ];
__n81["arguments"] := __n85;
__n80["expression"] := __n81;
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "assert";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "notSameValue";
__n93["raw"] := "\"notSameValue\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n90["callee"] := __n91;
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "onRejected";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "p1OnRejected";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "p1.onRejected != p2.onRejected";
__n97["raw"] := "'p1.onRejected != p2.onRejected'";
__n94 := [ __n95, __n96, __n97 ];
__n90["arguments"] := __n94;
__n89["expression"] := __n90;
__n75 := [ __n76, __n80, __n89 ];
__n74["body"] := __n75;
__n98 := [  ];
__n74["variableDeclarations"] := __n98;
__n99 := [  ];
__n74["functionDeclarations"] := __n99;
__n74["codeType"] := "function";
__n74["strict"] := false;
__n72["body"] := __n74;
__n72["generator"] := false;
__n72["async"] := false;
__n72["expression"] := false;
__n70["value"] := __n72;
__n70["computed"] := false;
__n70["kind"] := "init";
__n70["shorthand"] := false;
__n69 := [ __n70 ];
__n68["properties"] := __n69;
__n66["init"] := __n68;
__n65 := [ __n66 ];
__n64["declarations"] := __n65;
__n64["kind"] := "var";
__n100 := {  };
__n100["type"] := "ExpressionStatement";
__n101 := {  };
__n101["type"] := "CallExpression";
__n102 := {  };
__n102["type"] := "MemberExpression";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "Promise";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "any";
__n105["raw"] := "\"any\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n102["object"] := __n103;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "call";
__n106["raw"] := "\"call\"";
__n102["property"] := __n106;
__n102["computed"] := true;
__n101["callee"] := __n102;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "Constructor";
__n109 := {  };
__n109["type"] := "ArrayExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "p1";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "p2";
__n110 := [ __n111, __n112 ];
__n109["elements"] := __n110;
__n107 := [ __n108, __n109 ];
__n101["arguments"] := __n107;
__n100["expression"] := __n101;
__n113 := {  };
__n113["type"] := "ExpressionStatement";
__n114 := {  };
__n114["type"] := "CallExpression";
__n115 := {  };
__n115["type"] := "MemberExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "assert";
__n115["object"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "sameValue";
__n117["raw"] := "\"sameValue\"";
__n115["property"] := __n117;
__n115["computed"] := true;
__n114["callee"] := __n115;
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "callCount1";
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := 1.;
__n120["raw"] := "1";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "p1.then call count";
__n121["raw"] := "'p1.then call count'";
__n118 := [ __n119, __n120, __n121 ];
__n114["arguments"] := __n118;
__n113["expression"] := __n114;
__n122 := {  };
__n122["type"] := "ExpressionStatement";
__n123 := {  };
__n123["type"] := "CallExpression";
__n124 := {  };
__n124["type"] := "MemberExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "assert";
__n124["object"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "sameValue";
__n126["raw"] := "\"sameValue\"";
__n124["property"] := __n126;
__n124["computed"] := true;
__n123["callee"] := __n124;
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "callCount2";
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := 1.;
__n129["raw"] := "1";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "p2.then call count";
__n130["raw"] := "'p2.then call count'";
__n127 := [ __n128, __n129, __n130 ];
__n123["arguments"] := __n127;
__n122["expression"] := __n123;
__n1 := [ __n2, __n4, __n6, __n19, __n24, __n29, __n33, __n64, __n100, __n113, __n122 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n131 := [ "callCount1", "callCount2", "p1OnRejected", "p1", "p2" ];
__n0["variableDeclarations"] := __n131;
__n133 := {  };
__n133["type"] := "FunctionDeclaration";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "rejectFunction";
__n133["id"] := __n134;
__n135 := [  ];
__n133["params"] := __n135;
__n136 := {  };
__n136["type"] := "BlockStatement";
__n137 := [  ];
__n136["body"] := __n137;
__n138 := [  ];
__n136["variableDeclarations"] := __n138;
__n139 := [  ];
__n136["functionDeclarations"] := __n139;
__n136["codeType"] := "function";
__n136["strict"] := false;
__n133["body"] := __n136;
__n133["generator"] := false;
__n133["async"] := false;
__n133["expression"] := false;
__n140 := {  };
__n140["type"] := "FunctionDeclaration";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "Constructor";
__n140["id"] := __n141;
__n142 := [ "executor" ];
__n140["params"] := __n142;
__n143 := {  };
__n143["type"] := "BlockStatement";
__n145 := {  };
__n145["type"] := "ExpressionStatement";
__n146 := {  };
__n146["type"] := "CallExpression";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "executor";
__n146["callee"] := __n147;
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "rejectFunction";
__n150 := {  };
__n150["type"] := "MemberExpression";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "Test262Error";
__n150["object"] := __n151;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := "thrower";
__n152["raw"] := "\"thrower\"";
__n150["property"] := __n152;
__n150["computed"] := true;
__n148 := [ __n149, __n150 ];
__n146["arguments"] := __n148;
__n145["expression"] := __n146;
__n144 := [ __n145 ];
__n143["body"] := __n144;
__n153 := [  ];
__n143["variableDeclarations"] := __n153;
__n154 := [  ];
__n143["functionDeclarations"] := __n154;
__n143["codeType"] := "function";
__n143["strict"] := false;
__n140["body"] := __n143;
__n140["generator"] := false;
__n140["async"] := false;
__n140["expression"] := false;
__n132 := [ __n133, __n140 ];
__n0["functionDeclarations"] := __n132;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}