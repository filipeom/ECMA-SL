function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callCount";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "let";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "fulfiller";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "then";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [ "resolve" ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "NewExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Promise";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "ArrowFunctionExpression";
__n25["id"] := null;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "resolve";
__n26 := [ __n27 ];
__n25["params"] := __n26;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "UpdateExpression";
__n31["operator"] := "++";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "callCount";
__n31["argument"] := __n32;
__n31["prefix"] := false;
__n30["expression"] := __n31;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "resolve";
__n34["callee"] := __n35;
__n36 := [  ];
__n34["arguments"] := __n36;
__n33["expression"] := __n34;
__n29 := [ __n30, __n33 ];
__n28["body"] := __n29;
__n25["body"] := __n28;
__n25["generator"] := false;
__n25["expression"] := false;
__n25["async"] := false;
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["object"] := __n22;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "then";
__n37["raw"] := "\"then\"";
__n21["property"] := __n37;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n39 := {  };
__n39["type"] := "ArrowFunctionExpression";
__n39["id"] := null;
__n40 := [  ];
__n39["params"] := __n40;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "UpdateExpression";
__n44["operator"] := "++";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "callCount";
__n44["argument"] := __n45;
__n44["prefix"] := false;
__n43["expression"] := __n44;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "resolve";
__n47["callee"] := __n48;
__n49 := [  ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n42 := [ __n43, __n46 ];
__n41["body"] := __n42;
__n39["body"] := __n41;
__n39["generator"] := false;
__n39["expression"] := false;
__n39["async"] := false;
__n38 := [ __n39 ];
__n20["arguments"] := __n38;
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n50 := [  ];
__n17["variableDeclarations"] := __n50;
__n51 := [  ];
__n17["functionDeclarations"] := __n51;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["async"] := false;
__n15["expression"] := false;
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "init";
__n13["shorthand"] := false;
__n12 := [ __n13 ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "let";
__n52 := {  };
__n52["type"] := "VariableDeclaration";
__n54 := {  };
__n54["type"] := "VariableDeclarator";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "rejector";
__n54["id"] := __n55;
__n56 := {  };
__n56["type"] := "ObjectExpression";
__n58 := {  };
__n58["type"] := "Property";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "then";
__n58["key"] := __n59;
__n60 := {  };
__n60["type"] := "FunctionExpression";
__n60["id"] := null;
__n61 := [ "resolve", "reject" ];
__n60["params"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "NewExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "Promise";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "ArrowFunctionExpression";
__n70["id"] := null;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "resolve";
__n71 := [ __n72 ];
__n70["params"] := __n71;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "UpdateExpression";
__n76["operator"] := "++";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "callCount";
__n76["argument"] := __n77;
__n76["prefix"] := false;
__n75["expression"] := __n76;
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "resolve";
__n79["callee"] := __n80;
__n81 := [  ];
__n79["arguments"] := __n81;
__n78["expression"] := __n79;
__n74 := [ __n75, __n78 ];
__n73["body"] := __n74;
__n70["body"] := __n73;
__n70["generator"] := false;
__n70["expression"] := false;
__n70["async"] := false;
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["object"] := __n67;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "then";
__n82["raw"] := "\"then\"";
__n66["property"] := __n82;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n84 := {  };
__n84["type"] := "ArrowFunctionExpression";
__n84["id"] := null;
__n85 := [  ];
__n84["params"] := __n85;
__n86 := {  };
__n86["type"] := "BlockStatement";
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "UpdateExpression";
__n89["operator"] := "++";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "callCount";
__n89["argument"] := __n90;
__n89["prefix"] := false;
__n88["expression"] := __n89;
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "resolve";
__n92["callee"] := __n93;
__n94 := [  ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "CallExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "reject";
__n96["callee"] := __n97;
__n98 := [  ];
__n96["arguments"] := __n98;
__n95["expression"] := __n96;
__n87 := [ __n88, __n91, __n95 ];
__n86["body"] := __n87;
__n84["body"] := __n86;
__n84["generator"] := false;
__n84["expression"] := false;
__n84["async"] := false;
__n83 := [ __n84 ];
__n65["arguments"] := __n83;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n99 := [  ];
__n62["variableDeclarations"] := __n99;
__n100 := [  ];
__n62["functionDeclarations"] := __n100;
__n62["codeType"] := "function";
__n62["strict"] := false;
__n60["body"] := __n62;
__n60["generator"] := false;
__n60["async"] := false;
__n60["expression"] := false;
__n58["value"] := __n60;
__n58["computed"] := false;
__n58["kind"] := "init";
__n58["shorthand"] := false;
__n57 := [ __n58 ];
__n56["properties"] := __n57;
__n54["init"] := __n56;
__n53 := [ __n54 ];
__n52["declarations"] := __n53;
__n52["kind"] := "let";
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "MemberExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "Promise";
__n105["object"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "all";
__n107["raw"] := "\"all\"";
__n105["property"] := __n107;
__n105["computed"] := true;
__n104["callee"] := __n105;
__n109 := {  };
__n109["type"] := "ArrayExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "fulfiller";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "rejector";
__n110 := [ __n111, __n112 ];
__n109["elements"] := __n110;
__n108 := [ __n109 ];
__n104["arguments"] := __n108;
__n103["object"] := __n104;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "then";
__n113["raw"] := "\"then\"";
__n103["property"] := __n113;
__n103["computed"] := true;
__n102["callee"] := __n103;
__n115 := {  };
__n115["type"] := "ArrowFunctionExpression";
__n115["id"] := null;
__n116 := [  ];
__n115["params"] := __n116;
__n117 := {  };
__n117["type"] := "BlockStatement";
__n119 := {  };
__n119["type"] := "ExpressionStatement";
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "MemberExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "assert";
__n121["object"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "sameValue";
__n123["raw"] := "\"sameValue\"";
__n121["property"] := __n123;
__n121["computed"] := true;
__n120["callee"] := __n121;
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "callCount";
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := 4.;
__n126["raw"] := "4";
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "callCount === 4";
__n127["raw"] := "\"callCount === 4\"";
__n124 := [ __n125, __n126, __n127 ];
__n120["arguments"] := __n124;
__n119["expression"] := __n120;
__n128 := {  };
__n128["type"] := "ExpressionStatement";
__n129 := {  };
__n129["type"] := "CallExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "$DONE";
__n129["callee"] := __n130;
__n131 := [  ];
__n129["arguments"] := __n131;
__n128["expression"] := __n129;
__n118 := [ __n119, __n128 ];
__n117["body"] := __n118;
__n115["body"] := __n117;
__n115["generator"] := false;
__n115["expression"] := false;
__n115["async"] := false;
__n132 := {  };
__n132["type"] := "ArrowFunctionExpression";
__n132["id"] := null;
__n133 := [  ];
__n132["params"] := __n133;
__n134 := {  };
__n134["type"] := "BlockStatement";
__n136 := {  };
__n136["type"] := "ExpressionStatement";
__n137 := {  };
__n137["type"] := "CallExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "$DONE";
__n137["callee"] := __n138;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "The promise should not be rejected.";
__n140["raw"] := "\"The promise should not be rejected.\"";
__n139 := [ __n140 ];
__n137["arguments"] := __n139;
__n136["expression"] := __n137;
__n135 := [ __n136 ];
__n134["body"] := __n135;
__n132["body"] := __n134;
__n132["generator"] := false;
__n132["expression"] := false;
__n132["async"] := false;
__n114 := [ __n115, __n132 ];
__n102["arguments"] := __n114;
__n101["expression"] := __n102;
__n1 := [ __n2, __n7, __n52, __n101 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n141 := [ "callCount", "fulfiller", "rejector" ];
__n0["variableDeclarations"] := __n141;
__n142 := [  ];
__n0["functionDeclarations"] := __n142;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}