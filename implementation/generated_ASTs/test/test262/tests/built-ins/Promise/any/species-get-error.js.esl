function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "C";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Object";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "defineProperty";
__n8["raw"] := "\"defineProperty\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "C";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Symbol";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "species";
__n13["raw"] := "\"species\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n14 := {  };
__n14["type"] := "ObjectExpression";
__n16 := {  };
__n16["type"] := "Property";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "get";
__n16["key"] := __n17;
__n18 := {  };
__n18["type"] := "FunctionExpression";
__n18["id"] := null;
__n19 := [  ];
__n18["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ThrowStatement";
__n23 := {  };
__n23["type"] := "NewExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Test262Error";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "Getter for Symbol.species called";
__n26["raw"] := "\"Getter for Symbol.species called\"";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["argument"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n27 := [  ];
__n20["variableDeclarations"] := __n27;
__n28 := [  ];
__n20["functionDeclarations"] := __n28;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n18["body"] := __n20;
__n18["generator"] := false;
__n18["async"] := false;
__n18["expression"] := false;
__n16["value"] := __n18;
__n16["computed"] := false;
__n16["kind"] := "init";
__n16["shorthand"] := false;
__n15 := [ __n16 ];
__n14["properties"] := __n15;
__n9 := [ __n10, __n11, __n14 ];
__n5["arguments"] := __n9;
__n4["expression"] := __n5;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "AssignmentExpression";
__n30["operator"] := "=";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "C";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "resolve";
__n33["raw"] := "\"resolve\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["left"] := __n31;
__n34 := {  };
__n34["type"] := "FunctionExpression";
__n34["id"] := null;
__n35 := [  ];
__n34["params"] := __n35;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ThrowStatement";
__n39 := {  };
__n39["type"] := "NewExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Test262Error";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "C.resolve called unexpectedly";
__n42["raw"] := "\"C.resolve called unexpectedly\"";
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["argument"] := __n39;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n43 := [  ];
__n36["variableDeclarations"] := __n43;
__n44 := [  ];
__n36["functionDeclarations"] := __n44;
__n36["codeType"] := "function";
__n36["strict"] := false;
__n34["body"] := __n36;
__n34["generator"] := false;
__n34["async"] := false;
__n34["expression"] := false;
__n30["right"] := __n34;
__n29["expression"] := __n30;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "Promise";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "any";
__n50["raw"] := "\"any\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["object"] := __n48;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "call";
__n51["raw"] := "\"call\"";
__n47["property"] := __n51;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "C";
__n54 := {  };
__n54["type"] := "ArrayExpression";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 1.;
__n56["raw"] := "1";
__n55 := [ __n56 ];
__n54["elements"] := __n55;
__n52 := [ __n53, __n54 ];
__n46["arguments"] := __n52;
__n45["expression"] := __n46;
__n1 := [ __n2, __n4, __n29, __n45 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n57 := [  ];
__n0["variableDeclarations"] := __n57;
__n59 := {  };
__n59["type"] := "FunctionDeclaration";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "C";
__n59["id"] := __n60;
__n61 := [ "executor" ];
__n59["params"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "executor";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "ArrowFunctionExpression";
__n68["id"] := null;
__n69 := [  ];
__n68["params"] := __n69;
__n70 := {  };
__n70["type"] := "BlockStatement";
__n71 := [  ];
__n70["body"] := __n71;
__n68["body"] := __n70;
__n68["generator"] := false;
__n68["expression"] := false;
__n68["async"] := false;
__n72 := {  };
__n72["type"] := "ArrowFunctionExpression";
__n72["id"] := null;
__n73 := [  ];
__n72["params"] := __n73;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n75 := [  ];
__n74["body"] := __n75;
__n72["body"] := __n74;
__n72["generator"] := false;
__n72["expression"] := false;
__n72["async"] := false;
__n67 := [ __n68, __n72 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n76 := [  ];
__n62["variableDeclarations"] := __n76;
__n77 := [  ];
__n62["functionDeclarations"] := __n77;
__n62["codeType"] := "function";
__n62["strict"] := false;
__n59["body"] := __n62;
__n59["generator"] := false;
__n59["async"] := false;
__n59["expression"] := false;
__n58 := [ __n59 ];
__n0["functionDeclarations"] := __n58;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}