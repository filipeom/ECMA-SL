function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Promise";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "resolve";
__n10["raw"] := "\"resolve\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["callee"] := __n8;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 1.;
__n12["raw"] := "1";
__n11 := [ __n12 ];
__n7["arguments"] := __n11;
__n6["object"] := __n7;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "then";
__n13["raw"] := "\"then\"";
__n6["property"] := __n13;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [  ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ReturnStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Promise";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "resolve";
__n23["raw"] := "\"resolve\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n24 := [  ];
__n20["arguments"] := __n24;
__n19["argument"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n25 := [  ];
__n17["variableDeclarations"] := __n25;
__n26 := [  ];
__n17["functionDeclarations"] := __n26;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["async"] := false;
__n15["expression"] := false;
__n14 := [ __n15 ];
__n5["arguments"] := __n14;
__n4["object"] := __n5;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "then";
__n27["raw"] := "\"then\"";
__n4["property"] := __n27;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "$DONE";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "$DONE";
__n28 := [ __n29, __n30 ];
__n3["arguments"] := __n28;
__n2["expression"] := __n3;
__n31 := {  };
__n31["type"] := "VariableDeclaration";
__n33 := {  };
__n33["type"] := "VariableDeclarator";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "then";
__n33["id"] := __n34;
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Promise";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "prototype";
__n38["raw"] := "\"prototype\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["object"] := __n36;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "then";
__n39["raw"] := "\"then\"";
__n35["property"] := __n39;
__n35["computed"] := true;
__n33["init"] := __n35;
__n32 := [ __n33 ];
__n31["declarations"] := __n32;
__n31["kind"] := "var";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "AssignmentExpression";
__n41["operator"] := "=";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Promise";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "prototype";
__n45["raw"] := "\"prototype\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["object"] := __n43;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "then";
__n46["raw"] := "\"then\"";
__n42["property"] := __n46;
__n42["computed"] := true;
__n41["left"] := __n42;
__n47 := {  };
__n47["type"] := "FunctionExpression";
__n47["id"] := null;
__n48 := [ "resolve", "reject" ];
__n47["params"] := __n48;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "assert";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "sameValue";
__n55["raw"] := "\"sameValue\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "isConstructor";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "resolve";
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := false;
__n61["raw"] := "false";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "isConstructor(resolve) must return false";
__n62["raw"] := "'isConstructor(resolve) must return false'";
__n56 := [ __n57, __n61, __n62 ];
__n52["arguments"] := __n56;
__n51["expression"] := __n52;
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "MemberExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "assert";
__n65["object"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "throws";
__n67["raw"] := "\"throws\"";
__n65["property"] := __n67;
__n65["computed"] := true;
__n64["callee"] := __n65;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "TypeError";
__n70 := {  };
__n70["type"] := "ArrowFunctionExpression";
__n70["id"] := null;
__n71 := [  ];
__n70["params"] := __n71;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "NewExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "resolve";
__n75["callee"] := __n76;
__n77 := [  ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n70["body"] := __n72;
__n70["generator"] := false;
__n70["expression"] := false;
__n70["async"] := false;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "`new resolve()` throws TypeError";
__n78["raw"] := "'`new resolve()` throws TypeError'";
__n68 := [ __n69, __n70, __n78 ];
__n64["arguments"] := __n68;
__n63["expression"] := __n64;
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "assert";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "sameValue";
__n83["raw"] := "\"sameValue\"";
__n81["property"] := __n83;
__n81["computed"] := true;
__n80["callee"] := __n81;
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "resolve";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "length";
__n87["raw"] := "\"length\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 1.;
__n88["raw"] := "1";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "The value of resolve.length is 1";
__n89["raw"] := "'The value of resolve.length is 1'";
__n84 := [ __n85, __n88, __n89 ];
__n80["arguments"] := __n84;
__n79["expression"] := __n80;
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "MemberExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "assert";
__n92["object"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "sameValue";
__n94["raw"] := "\"sameValue\"";
__n92["property"] := __n94;
__n92["computed"] := true;
__n91["callee"] := __n92;
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "resolve";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "name";
__n98["raw"] := "\"name\"";
__n96["property"] := __n98;
__n96["computed"] := true;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "";
__n99["raw"] := "''";
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "The value of resolve.name is \"\"";
__n100["raw"] := "'The value of resolve.name is \"\"'";
__n95 := [ __n96, __n99, __n100 ];
__n91["arguments"] := __n95;
__n90["expression"] := __n91;
__n101 := {  };
__n101["type"] := "ReturnStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "then";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "call";
__n105["raw"] := "\"call\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n102["callee"] := __n103;
__n107 := {  };
__n107["type"] := "ThisExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "resolve";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "reject";
__n106 := [ __n107, __n108, __n109 ];
__n102["arguments"] := __n106;
__n101["argument"] := __n102;
__n50 := [ __n51, __n63, __n79, __n90, __n101 ];
__n49["body"] := __n50;
__n110 := [  ];
__n49["variableDeclarations"] := __n110;
__n111 := [  ];
__n49["functionDeclarations"] := __n111;
__n49["codeType"] := "function";
__n49["strict"] := false;
__n47["body"] := __n49;
__n47["generator"] := false;
__n47["async"] := false;
__n47["expression"] := false;
__n41["right"] := __n47;
__n40["expression"] := __n41;
__n1 := [ __n2, __n31, __n40 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n112 := [ "then" ];
__n0["variableDeclarations"] := __n112;
__n113 := [  ];
__n0["functionDeclarations"] := __n113;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}