function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "executorFunction";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "NotPromise";
__n6["expression"] := __n7;
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Promise";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "resolve";
__n13["raw"] := "\"resolve\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["object"] := __n11;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "call";
__n14["raw"] := "\"call\"";
__n10["property"] := __n14;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "NotPromise";
__n15 := [ __n16 ];
__n9["arguments"] := __n15;
__n8["expression"] := __n9;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "verifyProperty";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "executorFunction";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "name";
__n22["raw"] := "\"name\"";
__n23 := {  };
__n23["type"] := "ObjectExpression";
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "value";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "";
__n27["raw"] := "\"\"";
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n28 := {  };
__n28["type"] := "Property";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "writable";
__n28["key"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := false;
__n30["raw"] := "false";
__n28["value"] := __n30;
__n28["computed"] := false;
__n28["kind"] := "init";
__n28["shorthand"] := false;
__n31 := {  };
__n31["type"] := "Property";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "enumerable";
__n31["key"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := false;
__n33["raw"] := "false";
__n31["value"] := __n33;
__n31["computed"] := false;
__n31["kind"] := "init";
__n31["shorthand"] := false;
__n34 := {  };
__n34["type"] := "Property";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "configurable";
__n34["key"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := true;
__n36["raw"] := "true";
__n34["value"] := __n36;
__n34["computed"] := false;
__n34["kind"] := "init";
__n34["shorthand"] := false;
__n24 := [ __n25, __n28, __n31, __n34 ];
__n23["properties"] := __n24;
__n20 := [ __n21, __n22, __n23 ];
__n18["arguments"] := __n20;
__n17["expression"] := __n18;
__n1 := [ __n2, __n6, __n8, __n17 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n37 := [ "executorFunction" ];
__n0["variableDeclarations"] := __n37;
__n39 := {  };
__n39["type"] := "FunctionDeclaration";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "NotPromise";
__n39["id"] := __n40;
__n41 := [ "executor" ];
__n39["params"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "AssignmentExpression";
__n45["operator"] := "=";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "executorFunction";
__n45["left"] := __n46;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "executor";
__n45["right"] := __n47;
__n44["expression"] := __n45;
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "executor";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "FunctionExpression";
__n52["id"] := null;
__n53 := [  ];
__n52["params"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n55 := [  ];
__n54["body"] := __n55;
__n56 := [  ];
__n54["variableDeclarations"] := __n56;
__n57 := [  ];
__n54["functionDeclarations"] := __n57;
__n54["codeType"] := "function";
__n54["strict"] := false;
__n52["body"] := __n54;
__n52["generator"] := false;
__n52["async"] := false;
__n52["expression"] := false;
__n58 := {  };
__n58["type"] := "FunctionExpression";
__n58["id"] := null;
__n59 := [  ];
__n58["params"] := __n59;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n61 := [  ];
__n60["body"] := __n61;
__n62 := [  ];
__n60["variableDeclarations"] := __n62;
__n63 := [  ];
__n60["functionDeclarations"] := __n63;
__n60["codeType"] := "function";
__n60["strict"] := false;
__n58["body"] := __n60;
__n58["generator"] := false;
__n58["async"] := false;
__n58["expression"] := false;
__n51 := [ __n52, __n58 ];
__n49["arguments"] := __n51;
__n48["expression"] := __n49;
__n43 := [ __n44, __n48 ];
__n42["body"] := __n43;
__n64 := [  ];
__n42["variableDeclarations"] := __n64;
__n65 := [  ];
__n42["functionDeclarations"] := __n65;
__n42["codeType"] := "function";
__n42["strict"] := false;
__n39["body"] := __n42;
__n39["generator"] := false;
__n39["async"] := false;
__n39["expression"] := false;
__n38 := [ __n39 ];
__n0["functionDeclarations"] := __n38;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}