function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "executorFunction";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "NotPromise";
__n6["expression"] := __n7;
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Promise";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "resolve";
__n13["raw"] := "\"resolve\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["object"] := __n11;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "call";
__n14["raw"] := "\"call\"";
__n10["property"] := __n14;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "NotPromise";
__n15 := [ __n16 ];
__n9["arguments"] := __n15;
__n8["expression"] := __n9;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "assert";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "sameValue";
__n21["raw"] := "\"sameValue\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Object";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "prototype";
__n28["raw"] := "\"prototype\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["object"] := __n26;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "hasOwnProperty";
__n29["raw"] := "\"hasOwnProperty\"";
__n25["property"] := __n29;
__n25["computed"] := true;
__n24["object"] := __n25;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "call";
__n30["raw"] := "\"call\"";
__n24["property"] := __n30;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "executorFunction";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "prototype";
__n33["raw"] := "\"prototype\"";
__n31 := [ __n32, __n33 ];
__n23["arguments"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := false;
__n34["raw"] := "false";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "Object.prototype.hasOwnProperty.call(executorFunction, \"prototype\") must return false";
__n35["raw"] := "'Object.prototype.hasOwnProperty.call(executorFunction, \"prototype\") must return false'";
__n22 := [ __n23, __n34, __n35 ];
__n18["arguments"] := __n22;
__n17["expression"] := __n18;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "assert";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "sameValue";
__n40["raw"] := "\"sameValue\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "isConstructor";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "executorFunction";
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := false;
__n46["raw"] := "false";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "isConstructor(executorFunction) must return false";
__n47["raw"] := "'isConstructor(executorFunction) must return false'";
__n41 := [ __n42, __n46, __n47 ];
__n37["arguments"] := __n41;
__n36["expression"] := __n37;
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "assert";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "throws";
__n52["raw"] := "\"throws\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "TypeError";
__n55 := {  };
__n55["type"] := "ArrowFunctionExpression";
__n55["id"] := null;
__n56 := [  ];
__n55["params"] := __n56;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "NewExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "executorFunction";
__n60["callee"] := __n61;
__n62 := [  ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n55["body"] := __n57;
__n55["generator"] := false;
__n55["expression"] := false;
__n55["async"] := false;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "`new executorFunction()` throws TypeError";
__n63["raw"] := "'`new executorFunction()` throws TypeError'";
__n53 := [ __n54, __n55, __n63 ];
__n49["arguments"] := __n53;
__n48["expression"] := __n49;
__n1 := [ __n2, __n6, __n8, __n17, __n36, __n48 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n64 := [ "executorFunction" ];
__n0["variableDeclarations"] := __n64;
__n66 := {  };
__n66["type"] := "FunctionDeclaration";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "NotPromise";
__n66["id"] := __n67;
__n68 := [ "executor" ];
__n66["params"] := __n68;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "AssignmentExpression";
__n72["operator"] := "=";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "executorFunction";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "executor";
__n72["right"] := __n74;
__n71["expression"] := __n72;
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "executor";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "FunctionExpression";
__n79["id"] := null;
__n80 := [  ];
__n79["params"] := __n80;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n82 := [  ];
__n81["body"] := __n82;
__n83 := [  ];
__n81["variableDeclarations"] := __n83;
__n84 := [  ];
__n81["functionDeclarations"] := __n84;
__n81["codeType"] := "function";
__n81["strict"] := false;
__n79["body"] := __n81;
__n79["generator"] := false;
__n79["async"] := false;
__n79["expression"] := false;
__n85 := {  };
__n85["type"] := "FunctionExpression";
__n85["id"] := null;
__n86 := [  ];
__n85["params"] := __n86;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n88 := [  ];
__n87["body"] := __n88;
__n89 := [  ];
__n87["variableDeclarations"] := __n89;
__n90 := [  ];
__n87["functionDeclarations"] := __n90;
__n87["codeType"] := "function";
__n87["strict"] := false;
__n85["body"] := __n87;
__n85["generator"] := false;
__n85["async"] := false;
__n85["expression"] := false;
__n78 := [ __n79, __n85 ];
__n76["arguments"] := __n78;
__n75["expression"] := __n76;
__n70 := [ __n71, __n75 ];
__n69["body"] := __n70;
__n91 := [  ];
__n69["variableDeclarations"] := __n91;
__n92 := [  ];
__n69["functionDeclarations"] := __n92;
__n69["codeType"] := "function";
__n69["strict"] := false;
__n66["body"] := __n69;
__n66["generator"] := false;
__n66["async"] := false;
__n66["expression"] := false;
__n65 := [ __n66 ];
__n0["functionDeclarations"] := __n65;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}