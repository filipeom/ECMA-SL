function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "BinaryExpression";
__n8["operator"] := "instanceof";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Promise";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "prototype";
__n12["raw"] := "\"prototype\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["object"] := __n10;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "finally";
__n13["raw"] := "\"finally\"";
__n9["property"] := __n13;
__n9["computed"] := true;
__n8["left"] := __n9;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "Function";
__n8["right"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := true;
__n15["raw"] := "true";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "Expected Promise.prototype.finally to be instanceof Function";
__n16["raw"] := "'Expected Promise.prototype.finally to be instanceof Function'";
__n7 := [ __n8, __n15, __n16 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "assert";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "sameValue";
__n21["raw"] := "\"sameValue\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "UnaryExpression";
__n23["operator"] := "typeof";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Promise";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "prototype";
__n27["raw"] := "\"prototype\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["object"] := __n25;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "finally";
__n28["raw"] := "\"finally\"";
__n24["property"] := __n28;
__n24["computed"] := true;
__n23["argument"] := __n24;
__n23["prefix"] := true;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "function";
__n29["raw"] := "'function'";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "Expected Promise.prototype.finally to be a function";
__n30["raw"] := "'Expected Promise.prototype.finally to be a function'";
__n22 := [ __n23, __n29, __n30 ];
__n18["arguments"] := __n22;
__n17["expression"] := __n18;
__n1 := [ __n2, __n17 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n31 := [  ];
__n0["variableDeclarations"] := __n31;
__n32 := [  ];
__n0["functionDeclarations"] := __n32;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}