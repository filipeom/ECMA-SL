function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "sequence";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "original";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "ObjectExpression";
__n13 := [  ];
__n12["properties"] := __n13;
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "replacement";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n19 := [  ];
__n18["properties"] := __n19;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n20 := {  };
__n20["type"] := "VariableDeclaration";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "p";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Promise";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "reject";
__n27["raw"] := "\"reject\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "original";
__n28 := [ __n29 ];
__n24["arguments"] := __n28;
__n22["init"] := __n24;
__n21 := [ __n22 ];
__n20["declarations"] := __n21;
__n20["kind"] := "var";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "p";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "finally";
__n42["raw"] := "\"finally\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "FunctionExpression";
__n44["id"] := null;
__n45 := [  ];
__n44["params"] := __n45;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "sequence";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "push";
__n52["raw"] := "\"push\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 1.;
__n54["raw"] := "1";
__n53 := [ __n54 ];
__n49["arguments"] := __n53;
__n48["expression"] := __n49;
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "assert";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "sameValue";
__n59["raw"] := "\"sameValue\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "arguments";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "length";
__n63["raw"] := "\"length\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 0.;
__n64["raw"] := "0";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "onFinally receives zero args";
__n65["raw"] := "'onFinally receives zero args'";
__n60 := [ __n61, __n64, __n65 ];
__n56["arguments"] := __n60;
__n55["expression"] := __n56;
__n66 := {  };
__n66["type"] := "ReturnStatement";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "replacement";
__n66["argument"] := __n67;
__n47 := [ __n48, __n55, __n66 ];
__n46["body"] := __n47;
__n68 := [  ];
__n46["variableDeclarations"] := __n68;
__n69 := [  ];
__n46["functionDeclarations"] := __n69;
__n46["codeType"] := "function";
__n46["strict"] := false;
__n44["body"] := __n46;
__n44["generator"] := false;
__n44["async"] := false;
__n44["expression"] := false;
__n43 := [ __n44 ];
__n39["arguments"] := __n43;
__n38["object"] := __n39;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "then";
__n70["raw"] := "\"then\"";
__n38["property"] := __n70;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n72 := {  };
__n72["type"] := "FunctionExpression";
__n72["id"] := null;
__n73 := [  ];
__n72["params"] := __n73;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ThrowStatement";
__n77 := {  };
__n77["type"] := "NewExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "Test262Error";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "promise is rejected pre-finally; onFulfill should not be called";
__n80["raw"] := "'promise is rejected pre-finally; onFulfill should not be called'";
__n79 := [ __n80 ];
__n77["arguments"] := __n79;
__n76["argument"] := __n77;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n81 := [  ];
__n74["variableDeclarations"] := __n81;
__n82 := [  ];
__n74["functionDeclarations"] := __n82;
__n74["codeType"] := "function";
__n74["strict"] := false;
__n72["body"] := __n74;
__n72["generator"] := false;
__n72["async"] := false;
__n72["expression"] := false;
__n71 := [ __n72 ];
__n37["arguments"] := __n71;
__n36["object"] := __n37;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "catch";
__n83["raw"] := "\"catch\"";
__n36["property"] := __n83;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n85 := {  };
__n85["type"] := "FunctionExpression";
__n85["id"] := null;
__n86 := [ "reason" ];
__n85["params"] := __n86;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "sequence";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "push";
__n93["raw"] := "\"push\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n90["callee"] := __n91;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 2.;
__n95["raw"] := "2";
__n94 := [ __n95 ];
__n90["arguments"] := __n94;
__n89["expression"] := __n90;
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "MemberExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "assert";
__n98["object"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "sameValue";
__n100["raw"] := "\"sameValue\"";
__n98["property"] := __n100;
__n98["computed"] := true;
__n97["callee"] := __n98;
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "reason";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "original";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "onFinally can not override the rejection value by returning";
__n104["raw"] := "'onFinally can not override the rejection value by returning'";
__n101 := [ __n102, __n103, __n104 ];
__n97["arguments"] := __n101;
__n96["expression"] := __n97;
__n88 := [ __n89, __n96 ];
__n87["body"] := __n88;
__n105 := [  ];
__n87["variableDeclarations"] := __n105;
__n106 := [  ];
__n87["functionDeclarations"] := __n106;
__n87["codeType"] := "function";
__n87["strict"] := false;
__n85["body"] := __n87;
__n85["generator"] := false;
__n85["async"] := false;
__n85["expression"] := false;
__n84 := [ __n85 ];
__n35["arguments"] := __n84;
__n34["object"] := __n35;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "then";
__n107["raw"] := "\"then\"";
__n34["property"] := __n107;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n109 := {  };
__n109["type"] := "FunctionExpression";
__n109["id"] := null;
__n110 := [  ];
__n109["params"] := __n110;
__n111 := {  };
__n111["type"] := "BlockStatement";
__n113 := {  };
__n113["type"] := "ExpressionStatement";
__n114 := {  };
__n114["type"] := "CallExpression";
__n115 := {  };
__n115["type"] := "MemberExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "assert";
__n115["object"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "sameValue";
__n117["raw"] := "\"sameValue\"";
__n115["property"] := __n117;
__n115["computed"] := true;
__n114["callee"] := __n115;
__n119 := {  };
__n119["type"] := "MemberExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "sequence";
__n119["object"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "length";
__n121["raw"] := "\"length\"";
__n119["property"] := __n121;
__n119["computed"] := true;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := 2.;
__n122["raw"] := "2";
__n118 := [ __n119, __n122 ];
__n114["arguments"] := __n118;
__n113["expression"] := __n114;
__n123 := {  };
__n123["type"] := "ExpressionStatement";
__n124 := {  };
__n124["type"] := "CallExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "checkSequence";
__n124["callee"] := __n125;
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "sequence";
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := "All expected callbacks called in correct order";
__n128["raw"] := "\"All expected callbacks called in correct order\"";
__n126 := [ __n127, __n128 ];
__n124["arguments"] := __n126;
__n123["expression"] := __n124;
__n112 := [ __n113, __n123 ];
__n111["body"] := __n112;
__n129 := [  ];
__n111["variableDeclarations"] := __n129;
__n130 := [  ];
__n111["functionDeclarations"] := __n130;
__n111["codeType"] := "function";
__n111["strict"] := false;
__n109["body"] := __n111;
__n109["generator"] := false;
__n109["async"] := false;
__n109["expression"] := false;
__n108 := [ __n109 ];
__n33["arguments"] := __n108;
__n32["object"] := __n33;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "then";
__n131["raw"] := "\"then\"";
__n32["property"] := __n131;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "$DONE";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "$DONE";
__n132 := [ __n133, __n134 ];
__n31["arguments"] := __n132;
__n30["expression"] := __n31;
__n1 := [ __n2, __n8, __n14, __n20, __n30 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n135 := [ "sequence", "original", "replacement", "p" ];
__n0["variableDeclarations"] := __n135;
__n136 := [  ];
__n0["functionDeclarations"] := __n136;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}