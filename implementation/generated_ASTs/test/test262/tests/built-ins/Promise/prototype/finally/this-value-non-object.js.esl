function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "UnaryExpression";
__n8["operator"] := "typeof";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Promise";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "prototype";
__n12["raw"] := "\"prototype\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["object"] := __n10;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "finally";
__n13["raw"] := "\"finally\"";
__n9["property"] := __n13;
__n9["computed"] := true;
__n8["argument"] := __n9;
__n8["prefix"] := true;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "function";
__n14["raw"] := "'function'";
__n7 := [ __n8, __n14 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "assert";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "throws";
__n19["raw"] := "\"throws\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "TypeError";
__n22 := {  };
__n22["type"] := "FunctionExpression";
__n22["id"] := null;
__n23 := [  ];
__n22["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Promise";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "prototype";
__n32["raw"] := "\"prototype\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["object"] := __n30;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "finally";
__n33["raw"] := "\"finally\"";
__n29["property"] := __n33;
__n29["computed"] := true;
__n28["object"] := __n29;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "call";
__n34["raw"] := "\"call\"";
__n28["property"] := __n34;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "undefined";
__n35 := [ __n36 ];
__n27["arguments"] := __n35;
__n26["expression"] := __n27;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n37 := [  ];
__n24["variableDeclarations"] := __n37;
__n38 := [  ];
__n24["functionDeclarations"] := __n38;
__n24["codeType"] := "function";
__n24["strict"] := false;
__n22["body"] := __n24;
__n22["generator"] := false;
__n22["async"] := false;
__n22["expression"] := false;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "undefined";
__n39["raw"] := "'undefined'";
__n20 := [ __n21, __n22, __n39 ];
__n16["arguments"] := __n20;
__n15["expression"] := __n16;
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "assert";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "throws";
__n44["raw"] := "\"throws\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["callee"] := __n42;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "TypeError";
__n47 := {  };
__n47["type"] := "FunctionExpression";
__n47["id"] := null;
__n48 := [  ];
__n47["params"] := __n48;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Promise";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "prototype";
__n57["raw"] := "\"prototype\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["object"] := __n55;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "finally";
__n58["raw"] := "\"finally\"";
__n54["property"] := __n58;
__n54["computed"] := true;
__n53["object"] := __n54;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "call";
__n59["raw"] := "\"call\"";
__n53["property"] := __n59;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 'null;
__n61["raw"] := "\"'null\"";
__n60 := [ __n61 ];
__n52["arguments"] := __n60;
__n51["expression"] := __n52;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n62 := [  ];
__n49["variableDeclarations"] := __n62;
__n63 := [  ];
__n49["functionDeclarations"] := __n63;
__n49["codeType"] := "function";
__n49["strict"] := false;
__n47["body"] := __n49;
__n47["generator"] := false;
__n47["async"] := false;
__n47["expression"] := false;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "null";
__n64["raw"] := "'null'";
__n45 := [ __n46, __n47, __n64 ];
__n41["arguments"] := __n45;
__n40["expression"] := __n41;
__n1 := [ __n2, __n15, __n40 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n65 := [  ];
__n0["variableDeclarations"] := __n65;
__n66 := [  ];
__n0["functionDeclarations"] := __n66;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}