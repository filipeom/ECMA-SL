function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "poisonedThen";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Object";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "defineProperty";
__n9["raw"] := "\"defineProperty\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "NewExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Promise";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "FunctionExpression";
__n14["id"] := null;
__n15 := [  ];
__n14["params"] := __n15;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n17 := [  ];
__n16["body"] := __n17;
__n18 := [  ];
__n16["variableDeclarations"] := __n18;
__n19 := [  ];
__n16["functionDeclarations"] := __n19;
__n16["codeType"] := "function";
__n16["strict"] := false;
__n14["body"] := __n16;
__n14["generator"] := false;
__n14["async"] := false;
__n14["expression"] := false;
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "then";
__n20["raw"] := "'then'";
__n21 := {  };
__n21["type"] := "ObjectExpression";
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "get";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "FunctionExpression";
__n25["id"] := null;
__n26 := [  ];
__n25["params"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ThrowStatement";
__n30 := {  };
__n30["type"] := "NewExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Test262Error";
__n30["callee"] := __n31;
__n32 := [  ];
__n30["arguments"] := __n32;
__n29["argument"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n33 := [  ];
__n27["variableDeclarations"] := __n33;
__n34 := [  ];
__n27["functionDeclarations"] := __n34;
__n27["codeType"] := "function";
__n27["strict"] := false;
__n25["body"] := __n27;
__n25["generator"] := false;
__n25["async"] := false;
__n25["expression"] := false;
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n22 := [ __n23 ];
__n21["properties"] := __n22;
__n10 := [ __n11, __n20, __n21 ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "assert";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "throws";
__n39["raw"] := "\"throws\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Test262Error";
__n42 := {  };
__n42["type"] := "FunctionExpression";
__n42["id"] := null;
__n43 := [  ];
__n42["params"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "Promise";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "prototype";
__n52["raw"] := "\"prototype\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["object"] := __n50;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "finally";
__n53["raw"] := "\"finally\"";
__n49["property"] := __n53;
__n49["computed"] := true;
__n48["object"] := __n49;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "call";
__n54["raw"] := "\"call\"";
__n48["property"] := __n54;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "poisonedThen";
__n55 := [ __n56 ];
__n47["arguments"] := __n55;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n57 := [  ];
__n44["variableDeclarations"] := __n57;
__n58 := [  ];
__n44["functionDeclarations"] := __n58;
__n44["codeType"] := "function";
__n44["strict"] := false;
__n42["body"] := __n44;
__n42["generator"] := false;
__n42["async"] := false;
__n42["expression"] := false;
__n40 := [ __n41, __n42 ];
__n36["arguments"] := __n40;
__n35["expression"] := __n36;
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "assert";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "throws";
__n63["raw"] := "\"throws\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Test262Error";
__n66 := {  };
__n66["type"] := "FunctionExpression";
__n66["id"] := null;
__n67 := [  ];
__n66["params"] := __n67;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "poisonedThen";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "finally";
__n74["raw"] := "\"finally\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n75 := [  ];
__n71["arguments"] := __n75;
__n70["expression"] := __n71;
__n69 := [ __n70 ];
__n68["body"] := __n69;
__n76 := [  ];
__n68["variableDeclarations"] := __n76;
__n77 := [  ];
__n68["functionDeclarations"] := __n77;
__n68["codeType"] := "function";
__n68["strict"] := false;
__n66["body"] := __n68;
__n66["generator"] := false;
__n66["async"] := false;
__n66["expression"] := false;
__n64 := [ __n65, __n66 ];
__n60["arguments"] := __n64;
__n59["expression"] := __n60;
__n1 := [ __n2, __n35, __n59 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n78 := [ "poisonedThen" ];
__n0["variableDeclarations"] := __n78;
__n79 := [  ];
__n0["functionDeclarations"] := __n79;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}