function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "p";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Promise";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "resolve";
__n9["raw"] := "\"resolve\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "foo";
__n11["raw"] := "\"foo\"";
__n10 := [ __n11 ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Object";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "defineProperty";
__n16["raw"] := "\"defineProperty\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "p";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "constructor";
__n19["raw"] := "\"constructor\"";
__n20 := {  };
__n20["type"] := "ObjectExpression";
__n22 := {  };
__n22["type"] := "Property";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "get";
__n22["key"] := __n23;
__n24 := {  };
__n24["type"] := "FunctionExpression";
__n24["id"] := null;
__n25 := [  ];
__n24["params"] := __n25;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ThrowStatement";
__n29 := {  };
__n29["type"] := "NewExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Test262Error";
__n29["callee"] := __n30;
__n31 := [  ];
__n29["arguments"] := __n31;
__n28["argument"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n32 := [  ];
__n26["variableDeclarations"] := __n32;
__n33 := [  ];
__n26["functionDeclarations"] := __n33;
__n26["codeType"] := "function";
__n26["strict"] := false;
__n24["body"] := __n26;
__n24["generator"] := false;
__n24["async"] := false;
__n24["expression"] := false;
__n22["value"] := __n24;
__n22["computed"] := false;
__n22["kind"] := "init";
__n22["shorthand"] := false;
__n21 := [ __n22 ];
__n20["properties"] := __n21;
__n17 := [ __n18, __n19, __n20 ];
__n13["arguments"] := __n17;
__n12["expression"] := __n13;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "assert";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "throws";
__n38["raw"] := "\"throws\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Test262Error";
__n41 := {  };
__n41["type"] := "FunctionExpression";
__n41["id"] := null;
__n42 := [  ];
__n41["params"] := __n42;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "p";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "then";
__n49["raw"] := "\"then\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "FunctionExpression";
__n51["id"] := null;
__n52 := [  ];
__n51["params"] := __n52;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ThrowStatement";
__n56 := {  };
__n56["type"] := "NewExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "Test262Error";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "Should never be called.";
__n59["raw"] := "\"Should never be called.\"";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["argument"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n60 := [  ];
__n53["variableDeclarations"] := __n60;
__n61 := [  ];
__n53["functionDeclarations"] := __n61;
__n53["codeType"] := "function";
__n53["strict"] := false;
__n51["body"] := __n53;
__n51["generator"] := false;
__n51["async"] := false;
__n51["expression"] := false;
__n62 := {  };
__n62["type"] := "FunctionExpression";
__n62["id"] := null;
__n63 := [  ];
__n62["params"] := __n63;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ThrowStatement";
__n67 := {  };
__n67["type"] := "NewExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "Test262Error";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "Should never be called.";
__n70["raw"] := "\"Should never be called.\"";
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["argument"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n71 := [  ];
__n64["variableDeclarations"] := __n71;
__n72 := [  ];
__n64["functionDeclarations"] := __n72;
__n64["codeType"] := "function";
__n64["strict"] := false;
__n62["body"] := __n64;
__n62["generator"] := false;
__n62["async"] := false;
__n62["expression"] := false;
__n50 := [ __n51, __n62 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n73 := [  ];
__n43["variableDeclarations"] := __n73;
__n74 := [  ];
__n43["functionDeclarations"] := __n74;
__n43["codeType"] := "function";
__n43["strict"] := false;
__n41["body"] := __n43;
__n41["generator"] := false;
__n41["async"] := false;
__n41["expression"] := false;
__n39 := [ __n40, __n41 ];
__n35["arguments"] := __n39;
__n34["expression"] := __n35;
__n1 := [ __n2, __n12, __n34 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n75 := [ "p" ];
__n0["variableDeclarations"] := __n75;
__n76 := [  ];
__n0["functionDeclarations"] := __n76;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}