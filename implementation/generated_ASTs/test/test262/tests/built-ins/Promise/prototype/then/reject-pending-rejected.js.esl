function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "reject";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "thenable";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "NewExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Promise";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "FunctionExpression";
__n13["id"] := null;
__n14 := [ "resolve" ];
__n13["params"] := __n14;
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "resolve";
__n18["callee"] := __n19;
__n20 := [  ];
__n18["arguments"] := __n20;
__n17["expression"] := __n18;
__n16 := [ __n17 ];
__n15["body"] := __n16;
__n21 := [  ];
__n15["variableDeclarations"] := __n21;
__n22 := [  ];
__n15["functionDeclarations"] := __n22;
__n15["codeType"] := "function";
__n15["strict"] := false;
__n13["body"] := __n15;
__n13["generator"] := false;
__n13["async"] := false;
__n13["expression"] := false;
__n12 := [ __n13 ];
__n10["arguments"] := __n12;
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n23 := {  };
__n23["type"] := "VariableDeclaration";
__n25 := {  };
__n25["type"] := "VariableDeclarator";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "p1";
__n25["id"] := __n26;
__n27 := {  };
__n27["type"] := "NewExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Promise";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [ "_", "_reject" ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "AssignmentExpression";
__n35["operator"] := "=";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "reject";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "_reject";
__n35["right"] := __n37;
__n34["expression"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n38 := [  ];
__n32["variableDeclarations"] := __n38;
__n39 := [  ];
__n32["functionDeclarations"] := __n39;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["async"] := false;
__n30["expression"] := false;
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n25["init"] := __n27;
__n24 := [ __n25 ];
__n23["declarations"] := __n24;
__n23["kind"] := "var";
__n40 := {  };
__n40["type"] := "VariableDeclaration";
__n42 := {  };
__n42["type"] := "VariableDeclarator";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "p2";
__n42["id"] := __n43;
__n42["init"] := null;
__n41 := [ __n42 ];
__n40["declarations"] := __n41;
__n40["kind"] := "var";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "AssignmentExpression";
__n45["operator"] := "=";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "p2";
__n45["left"] := __n46;
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "p1";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "then";
__n50["raw"] := "\"then\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "FunctionExpression";
__n52["id"] := null;
__n53 := [  ];
__n52["params"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n55 := [  ];
__n54["body"] := __n55;
__n56 := [  ];
__n54["variableDeclarations"] := __n56;
__n57 := [  ];
__n54["functionDeclarations"] := __n57;
__n54["codeType"] := "function";
__n54["strict"] := false;
__n52["body"] := __n54;
__n52["generator"] := false;
__n52["async"] := false;
__n52["expression"] := false;
__n58 := {  };
__n58["type"] := "FunctionExpression";
__n58["id"] := null;
__n59 := [  ];
__n58["params"] := __n59;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ThrowStatement";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "thenable";
__n62["argument"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n64 := [  ];
__n60["variableDeclarations"] := __n64;
__n65 := [  ];
__n60["functionDeclarations"] := __n65;
__n60["codeType"] := "function";
__n60["strict"] := false;
__n58["body"] := __n60;
__n58["generator"] := false;
__n58["async"] := false;
__n58["expression"] := false;
__n51 := [ __n52, __n58 ];
__n47["arguments"] := __n51;
__n45["right"] := __n47;
__n44["expression"] := __n45;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "p2";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "then";
__n70["raw"] := "\"then\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n72 := {  };
__n72["type"] := "FunctionExpression";
__n72["id"] := null;
__n73 := [  ];
__n72["params"] := __n73;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "$DONE";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "The promise should not be fulfilled.";
__n80["raw"] := "'The promise should not be fulfilled.'";
__n79 := [ __n80 ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n81 := [  ];
__n74["variableDeclarations"] := __n81;
__n82 := [  ];
__n74["functionDeclarations"] := __n82;
__n74["codeType"] := "function";
__n74["strict"] := false;
__n72["body"] := __n74;
__n72["generator"] := false;
__n72["async"] := false;
__n72["expression"] := false;
__n83 := {  };
__n83["type"] := "FunctionExpression";
__n83["id"] := null;
__n84 := [ "x" ];
__n83["params"] := __n84;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "IfStatement";
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "!==";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "x";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "thenable";
__n88["right"] := __n90;
__n87["test"] := __n88;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$DONE";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "The promise should be rejected with the resolution value of the provided promise.";
__n97["raw"] := "'The promise should be rejected with the resolution value of the provided promise.'";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n98 := {  };
__n98["type"] := "ReturnStatement";
__n98["argument"] := null;
__n92 := [ __n93, __n98 ];
__n91["body"] := __n92;
__n87["consequent"] := __n91;
__n87["alternate"] := null;
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "$DONE";
__n100["callee"] := __n101;
__n102 := [  ];
__n100["arguments"] := __n102;
__n99["expression"] := __n100;
__n86 := [ __n87, __n99 ];
__n85["body"] := __n86;
__n103 := [  ];
__n85["variableDeclarations"] := __n103;
__n104 := [  ];
__n85["functionDeclarations"] := __n104;
__n85["codeType"] := "function";
__n85["strict"] := false;
__n83["body"] := __n85;
__n83["generator"] := false;
__n83["async"] := false;
__n83["expression"] := false;
__n71 := [ __n72, __n83 ];
__n67["arguments"] := __n71;
__n66["expression"] := __n67;
__n105 := {  };
__n105["type"] := "ExpressionStatement";
__n106 := {  };
__n106["type"] := "CallExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "reject";
__n106["callee"] := __n107;
__n108 := [  ];
__n106["arguments"] := __n108;
__n105["expression"] := __n106;
__n1 := [ __n2, __n6, __n23, __n40, __n44, __n66, __n105 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n109 := [ "reject", "thenable", "p1", "p2" ];
__n0["variableDeclarations"] := __n109;
__n110 := [  ];
__n0["functionDeclarations"] := __n110;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}