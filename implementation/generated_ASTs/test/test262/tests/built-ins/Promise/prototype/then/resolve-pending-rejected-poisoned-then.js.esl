function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "value";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "reject";
__n10["id"] := __n11;
__n10["init"] := null;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "poisonedThen";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Object";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "defineProperty";
__n19["raw"] := "\"defineProperty\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n21 := {  };
__n21["type"] := "ObjectExpression";
__n22 := [  ];
__n21["properties"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "then";
__n23["raw"] := "'then'";
__n24 := {  };
__n24["type"] := "ObjectExpression";
__n26 := {  };
__n26["type"] := "Property";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "get";
__n26["key"] := __n27;
__n28 := {  };
__n28["type"] := "FunctionExpression";
__n28["id"] := null;
__n29 := [  ];
__n28["params"] := __n29;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ThrowStatement";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "value";
__n32["argument"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n34 := [  ];
__n30["variableDeclarations"] := __n34;
__n35 := [  ];
__n30["functionDeclarations"] := __n35;
__n30["codeType"] := "function";
__n30["strict"] := false;
__n28["body"] := __n30;
__n28["generator"] := false;
__n28["async"] := false;
__n28["expression"] := false;
__n26["value"] := __n28;
__n26["computed"] := false;
__n26["kind"] := "init";
__n26["shorthand"] := false;
__n25 := [ __n26 ];
__n24["properties"] := __n25;
__n20 := [ __n21, __n23, __n24 ];
__n16["arguments"] := __n20;
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n36 := {  };
__n36["type"] := "VariableDeclaration";
__n38 := {  };
__n38["type"] := "VariableDeclarator";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "p1";
__n38["id"] := __n39;
__n40 := {  };
__n40["type"] := "NewExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Promise";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "FunctionExpression";
__n43["id"] := null;
__n44 := [ "_", "_reject" ];
__n43["params"] := __n44;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "AssignmentExpression";
__n48["operator"] := "=";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "reject";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "_reject";
__n48["right"] := __n50;
__n47["expression"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n51 := [  ];
__n45["variableDeclarations"] := __n51;
__n52 := [  ];
__n45["functionDeclarations"] := __n52;
__n45["codeType"] := "function";
__n45["strict"] := false;
__n43["body"] := __n45;
__n43["generator"] := false;
__n43["async"] := false;
__n43["expression"] := false;
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n38["init"] := __n40;
__n37 := [ __n38 ];
__n36["declarations"] := __n37;
__n36["kind"] := "var";
__n53 := {  };
__n53["type"] := "VariableDeclaration";
__n55 := {  };
__n55["type"] := "VariableDeclarator";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "p2";
__n55["id"] := __n56;
__n55["init"] := null;
__n54 := [ __n55 ];
__n53["declarations"] := __n54;
__n53["kind"] := "var";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "AssignmentExpression";
__n58["operator"] := "=";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "p2";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "p1";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "then";
__n63["raw"] := "\"then\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n65 := {  };
__n65["type"] := "FunctionExpression";
__n65["id"] := null;
__n66 := [  ];
__n65["params"] := __n66;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n68 := [  ];
__n67["body"] := __n68;
__n69 := [  ];
__n67["variableDeclarations"] := __n69;
__n70 := [  ];
__n67["functionDeclarations"] := __n70;
__n67["codeType"] := "function";
__n67["strict"] := false;
__n65["body"] := __n67;
__n65["generator"] := false;
__n65["async"] := false;
__n65["expression"] := false;
__n71 := {  };
__n71["type"] := "FunctionExpression";
__n71["id"] := null;
__n72 := [  ];
__n71["params"] := __n72;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ReturnStatement";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "poisonedThen";
__n75["argument"] := __n76;
__n74 := [ __n75 ];
__n73["body"] := __n74;
__n77 := [  ];
__n73["variableDeclarations"] := __n77;
__n78 := [  ];
__n73["functionDeclarations"] := __n78;
__n73["codeType"] := "function";
__n73["strict"] := false;
__n71["body"] := __n73;
__n71["generator"] := false;
__n71["async"] := false;
__n71["expression"] := false;
__n64 := [ __n65, __n71 ];
__n60["arguments"] := __n64;
__n58["right"] := __n60;
__n57["expression"] := __n58;
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "p2";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "then";
__n83["raw"] := "\"then\"";
__n81["property"] := __n83;
__n81["computed"] := true;
__n80["callee"] := __n81;
__n85 := {  };
__n85["type"] := "FunctionExpression";
__n85["id"] := null;
__n86 := [ "x" ];
__n85["params"] := __n86;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "$DONE";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "The promise should not be fulfilled.";
__n93["raw"] := "'The promise should not be fulfilled.'";
__n92 := [ __n93 ];
__n90["arguments"] := __n92;
__n89["expression"] := __n90;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n94 := [  ];
__n87["variableDeclarations"] := __n94;
__n95 := [  ];
__n87["functionDeclarations"] := __n95;
__n87["codeType"] := "function";
__n87["strict"] := false;
__n85["body"] := __n87;
__n85["generator"] := false;
__n85["async"] := false;
__n85["expression"] := false;
__n96 := {  };
__n96["type"] := "FunctionExpression";
__n96["id"] := null;
__n97 := [ "x" ];
__n96["params"] := __n97;
__n98 := {  };
__n98["type"] := "BlockStatement";
__n100 := {  };
__n100["type"] := "IfStatement";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "!==";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "x";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "value";
__n101["right"] := __n103;
__n100["test"] := __n101;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "$DONE";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "The promise should be rejected with the thrown exception.";
__n110["raw"] := "'The promise should be rejected with the thrown exception.'";
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n111 := {  };
__n111["type"] := "ReturnStatement";
__n111["argument"] := null;
__n105 := [ __n106, __n111 ];
__n104["body"] := __n105;
__n100["consequent"] := __n104;
__n100["alternate"] := null;
__n112 := {  };
__n112["type"] := "ExpressionStatement";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "$DONE";
__n113["callee"] := __n114;
__n115 := [  ];
__n113["arguments"] := __n115;
__n112["expression"] := __n113;
__n99 := [ __n100, __n112 ];
__n98["body"] := __n99;
__n116 := [  ];
__n98["variableDeclarations"] := __n116;
__n117 := [  ];
__n98["functionDeclarations"] := __n117;
__n98["codeType"] := "function";
__n98["strict"] := false;
__n96["body"] := __n98;
__n96["generator"] := false;
__n96["async"] := false;
__n96["expression"] := false;
__n84 := [ __n85, __n96 ];
__n80["arguments"] := __n84;
__n79["expression"] := __n80;
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "reject";
__n119["callee"] := __n120;
__n121 := [  ];
__n119["arguments"] := __n121;
__n118["expression"] := __n119;
__n1 := [ __n2, __n8, __n12, __n36, __n53, __n57, __n79, __n118 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n122 := [ "value", "reject", "poisonedThen", "p1", "p2" ];
__n0["variableDeclarations"] := __n122;
__n123 := [  ];
__n0["functionDeclarations"] := __n123;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}