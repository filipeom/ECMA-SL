function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "a";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Promise";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "ArrowFunctionExpression";
__n9["id"] := null;
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "resolve";
__n10 := [ __n11 ];
__n9["params"] := __n10;
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "resolve";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "ObjectExpression";
__n16 := [  ];
__n15["properties"] := __n16;
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n9["body"] := __n12;
__n9["generator"] := false;
__n9["expression"] := true;
__n9["async"] := false;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "let";
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "sequence";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "ArrayExpression";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 1.;
__n23["raw"] := "1";
__n22 := [ __n23 ];
__n21["elements"] := __n22;
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "let";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Promise";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "all";
__n32["raw"] := "\"all\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "ArrayExpression";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Promise";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "race";
__n41["raw"] := "\"race\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "ArrayExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "a";
__n44 := [ __n45 ];
__n43["elements"] := __n44;
__n42 := [ __n43 ];
__n38["arguments"] := __n42;
__n37["object"] := __n38;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "then";
__n46["raw"] := "\"then\"";
__n37["property"] := __n46;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n48 := {  };
__n48["type"] := "ArrowFunctionExpression";
__n48["id"] := null;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "resolved";
__n49 := [ __n50 ];
__n48["params"] := __n49;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "sequence";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "push";
__n57["raw"] := "\"push\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 4.;
__n59["raw"] := "4";
__n58 := [ __n59 ];
__n54["arguments"] := __n58;
__n53["expression"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n48["body"] := __n51;
__n48["generator"] := false;
__n48["expression"] := false;
__n48["async"] := false;
__n47 := [ __n48 ];
__n36["arguments"] := __n47;
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "a";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "then";
__n65["raw"] := "\"then\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n67 := {  };
__n67["type"] := "ArrowFunctionExpression";
__n67["id"] := null;
__n68 := [  ];
__n67["params"] := __n68;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "sequence";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "push";
__n75["raw"] := "\"push\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n72["callee"] := __n73;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 3.;
__n77["raw"] := "3";
__n76 := [ __n77 ];
__n72["arguments"] := __n76;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n67["body"] := __n69;
__n67["generator"] := false;
__n67["expression"] := false;
__n67["async"] := false;
__n66 := [ __n67 ];
__n62["arguments"] := __n66;
__n61["object"] := __n62;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "then";
__n78["raw"] := "\"then\"";
__n61["property"] := __n78;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n80 := {  };
__n80["type"] := "ArrowFunctionExpression";
__n80["id"] := null;
__n81 := [  ];
__n80["params"] := __n81;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "sequence";
__n86["object"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "push";
__n88["raw"] := "\"push\"";
__n86["property"] := __n88;
__n86["computed"] := true;
__n85["callee"] := __n86;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 5.;
__n90["raw"] := "5";
__n89 := [ __n90 ];
__n85["arguments"] := __n89;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n80["body"] := __n82;
__n80["generator"] := false;
__n80["expression"] := false;
__n80["async"] := false;
__n79 := [ __n80 ];
__n60["arguments"] := __n79;
__n35 := [ __n36, __n60 ];
__n34["elements"] := __n35;
__n33 := [ __n34 ];
__n29["arguments"] := __n33;
__n28["object"] := __n29;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "then";
__n91["raw"] := "\"then\"";
__n28["property"] := __n91;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n93 := {  };
__n93["type"] := "ArrowFunctionExpression";
__n93["id"] := null;
__n94 := [  ];
__n93["params"] := __n94;
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "CallExpression";
__n99 := {  };
__n99["type"] := "MemberExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "assert";
__n99["object"] := __n100;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "sameValue";
__n101["raw"] := "\"sameValue\"";
__n99["property"] := __n101;
__n99["computed"] := true;
__n98["callee"] := __n99;
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "sequence";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "length";
__n105["raw"] := "\"length\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 5.;
__n106["raw"] := "5";
__n102 := [ __n103, __n106 ];
__n98["arguments"] := __n102;
__n97["expression"] := __n98;
__n107 := {  };
__n107["type"] := "ExpressionStatement";
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "checkSequence";
__n108["callee"] := __n109;
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "sequence";
__n110 := [ __n111 ];
__n108["arguments"] := __n110;
__n107["expression"] := __n108;
__n96 := [ __n97, __n107 ];
__n95["body"] := __n96;
__n93["body"] := __n95;
__n93["generator"] := false;
__n93["expression"] := false;
__n93["async"] := false;
__n92 := [ __n93 ];
__n27["arguments"] := __n92;
__n26["object"] := __n27;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "then";
__n112["raw"] := "\"then\"";
__n26["property"] := __n112;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "$DONE";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "$DONE";
__n113 := [ __n114, __n115 ];
__n25["arguments"] := __n113;
__n24["expression"] := __n25;
__n116 := {  };
__n116["type"] := "ExpressionStatement";
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "MemberExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "sequence";
__n118["object"] := __n119;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "push";
__n120["raw"] := "\"push\"";
__n118["property"] := __n120;
__n118["computed"] := true;
__n117["callee"] := __n118;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := 2.;
__n122["raw"] := "2";
__n121 := [ __n122 ];
__n117["arguments"] := __n121;
__n116["expression"] := __n117;
__n1 := [ __n2, __n17, __n24, __n116 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n123 := [ "a", "sequence" ];
__n0["variableDeclarations"] := __n123;
__n124 := [  ];
__n0["functionDeclarations"] := __n124;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}