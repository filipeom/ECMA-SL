function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "resolveFunction";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Constructor";
__n4["expression"] := __n5;
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "AssignmentExpression";
__n7["operator"] := "=";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Constructor";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "resolve";
__n10["raw"] := "\"resolve\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["left"] := __n8;
__n11 := {  };
__n11["type"] := "FunctionExpression";
__n11["id"] := null;
__n12 := [ "v" ];
__n11["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ReturnStatement";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "v";
__n15["argument"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n17 := [  ];
__n13["variableDeclarations"] := __n17;
__n18 := [  ];
__n13["functionDeclarations"] := __n18;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n11["body"] := __n13;
__n11["generator"] := false;
__n11["async"] := false;
__n11["expression"] := false;
__n7["right"] := __n11;
__n6["expression"] := __n7;
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "callCount1";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 0.;
__n23["raw"] := "0";
__n21["init"] := __n23;
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "callCount2";
__n24["id"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 0.;
__n26["raw"] := "0";
__n24["init"] := __n26;
__n20 := [ __n21, __n24 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "p1";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "ObjectExpression";
__n33 := {  };
__n33["type"] := "Property";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "then";
__n33["key"] := __n34;
__n35 := {  };
__n35["type"] := "FunctionExpression";
__n35["id"] := null;
__n36 := [ "onFulfilled", "onRejected" ];
__n35["params"] := __n36;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "AssignmentExpression";
__n40["operator"] := "+=";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "callCount1";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 1.;
__n42["raw"] := "1";
__n40["right"] := __n42;
__n39["expression"] := __n40;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "assert";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "sameValue";
__n47["raw"] := "\"sameValue\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["callee"] := __n45;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "onFulfilled";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "resolveFunction";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "p1.then";
__n51["raw"] := "\"p1.then\"";
__n48 := [ __n49, __n50, __n51 ];
__n44["arguments"] := __n48;
__n43["expression"] := __n44;
__n38 := [ __n39, __n43 ];
__n37["body"] := __n38;
__n52 := [  ];
__n37["variableDeclarations"] := __n52;
__n53 := [  ];
__n37["functionDeclarations"] := __n53;
__n37["codeType"] := "function";
__n37["strict"] := false;
__n35["body"] := __n37;
__n35["generator"] := false;
__n35["async"] := false;
__n35["expression"] := false;
__n33["value"] := __n35;
__n33["computed"] := false;
__n33["kind"] := "init";
__n33["shorthand"] := false;
__n32 := [ __n33 ];
__n31["properties"] := __n32;
__n29["init"] := __n31;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n54 := {  };
__n54["type"] := "VariableDeclaration";
__n56 := {  };
__n56["type"] := "VariableDeclarator";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "p2";
__n56["id"] := __n57;
__n58 := {  };
__n58["type"] := "ObjectExpression";
__n60 := {  };
__n60["type"] := "Property";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "then";
__n60["key"] := __n61;
__n62 := {  };
__n62["type"] := "FunctionExpression";
__n62["id"] := null;
__n63 := [ "onFulfilled", "onRejected" ];
__n62["params"] := __n63;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "AssignmentExpression";
__n67["operator"] := "+=";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "callCount2";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 1.;
__n69["raw"] := "1";
__n67["right"] := __n69;
__n66["expression"] := __n67;
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "assert";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "sameValue";
__n74["raw"] := "\"sameValue\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "onFulfilled";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "resolveFunction";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "p2.then";
__n78["raw"] := "\"p2.then\"";
__n75 := [ __n76, __n77, __n78 ];
__n71["arguments"] := __n75;
__n70["expression"] := __n71;
__n65 := [ __n66, __n70 ];
__n64["body"] := __n65;
__n79 := [  ];
__n64["variableDeclarations"] := __n79;
__n80 := [  ];
__n64["functionDeclarations"] := __n80;
__n64["codeType"] := "function";
__n64["strict"] := false;
__n62["body"] := __n64;
__n62["generator"] := false;
__n62["async"] := false;
__n62["expression"] := false;
__n60["value"] := __n62;
__n60["computed"] := false;
__n60["kind"] := "init";
__n60["shorthand"] := false;
__n59 := [ __n60 ];
__n58["properties"] := __n59;
__n56["init"] := __n58;
__n55 := [ __n56 ];
__n54["declarations"] := __n55;
__n54["kind"] := "var";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "Promise";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "race";
__n86["raw"] := "\"race\"";
__n84["property"] := __n86;
__n84["computed"] := true;
__n83["object"] := __n84;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "call";
__n87["raw"] := "\"call\"";
__n83["property"] := __n87;
__n83["computed"] := true;
__n82["callee"] := __n83;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "Constructor";
__n90 := {  };
__n90["type"] := "ArrayExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "p1";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "p2";
__n91 := [ __n92, __n93 ];
__n90["elements"] := __n91;
__n88 := [ __n89, __n90 ];
__n82["arguments"] := __n88;
__n81["expression"] := __n82;
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "assert";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "sameValue";
__n98["raw"] := "\"sameValue\"";
__n96["property"] := __n98;
__n96["computed"] := true;
__n95["callee"] := __n96;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "callCount1";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 1.;
__n101["raw"] := "1";
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "p1.then call count";
__n102["raw"] := "\"p1.then call count\"";
__n99 := [ __n100, __n101, __n102 ];
__n95["arguments"] := __n99;
__n94["expression"] := __n95;
__n103 := {  };
__n103["type"] := "ExpressionStatement";
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "MemberExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "assert";
__n105["object"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "sameValue";
__n107["raw"] := "\"sameValue\"";
__n105["property"] := __n107;
__n105["computed"] := true;
__n104["callee"] := __n105;
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "callCount2";
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 1.;
__n110["raw"] := "1";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "p2.then call count";
__n111["raw"] := "\"p2.then call count\"";
__n108 := [ __n109, __n110, __n111 ];
__n104["arguments"] := __n108;
__n103["expression"] := __n104;
__n1 := [ __n2, __n4, __n6, __n19, __n27, __n54, __n81, __n94, __n103 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n112 := [ "callCount1", "callCount2", "p1", "p2" ];
__n0["variableDeclarations"] := __n112;
__n114 := {  };
__n114["type"] := "FunctionDeclaration";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "resolveFunction";
__n114["id"] := __n115;
__n116 := [  ];
__n114["params"] := __n116;
__n117 := {  };
__n117["type"] := "BlockStatement";
__n118 := [  ];
__n117["body"] := __n118;
__n119 := [  ];
__n117["variableDeclarations"] := __n119;
__n120 := [  ];
__n117["functionDeclarations"] := __n120;
__n117["codeType"] := "function";
__n117["strict"] := false;
__n114["body"] := __n117;
__n114["generator"] := false;
__n114["async"] := false;
__n114["expression"] := false;
__n121 := {  };
__n121["type"] := "FunctionDeclaration";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "Constructor";
__n121["id"] := __n122;
__n123 := [ "executor" ];
__n121["params"] := __n123;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "executor";
__n127["callee"] := __n128;
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "resolveFunction";
__n131 := {  };
__n131["type"] := "MemberExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "Test262Error";
__n131["object"] := __n132;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "thrower";
__n133["raw"] := "\"thrower\"";
__n131["property"] := __n133;
__n131["computed"] := true;
__n129 := [ __n130, __n131 ];
__n127["arguments"] := __n129;
__n126["expression"] := __n127;
__n125 := [ __n126 ];
__n124["body"] := __n125;
__n134 := [  ];
__n124["variableDeclarations"] := __n134;
__n135 := [  ];
__n124["functionDeclarations"] := __n135;
__n124["codeType"] := "function";
__n124["strict"] := false;
__n121["body"] := __n124;
__n121["generator"] := false;
__n121["async"] := false;
__n121["expression"] := false;
__n113 := [ __n114, __n121 ];
__n0["functionDeclarations"] := __n113;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}