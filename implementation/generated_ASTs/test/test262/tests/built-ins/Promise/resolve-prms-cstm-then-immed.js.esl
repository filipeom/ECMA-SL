function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "returnValue";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 'null;
__n6["raw"] := "\"'null\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "value";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n12 := [  ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "lateCallCount";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "thenable";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "NewExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Promise";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "FunctionExpression";
__n25["id"] := null;
__n26 := [ "resolve" ];
__n25["params"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "resolve";
__n30["callee"] := __n31;
__n32 := [  ];
__n30["arguments"] := __n32;
__n29["expression"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n33 := [  ];
__n27["variableDeclarations"] := __n33;
__n34 := [  ];
__n27["functionDeclarations"] := __n34;
__n27["codeType"] := "function";
__n27["strict"] := false;
__n25["body"] := __n27;
__n25["generator"] := false;
__n25["async"] := false;
__n25["expression"] := false;
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "AssignmentExpression";
__n36["operator"] := "=";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "thenable";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "then";
__n39["raw"] := "\"then\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "FunctionExpression";
__n40["id"] := null;
__n41 := [ "resolve" ];
__n40["params"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "resolve";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "value";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n49 := [  ];
__n42["variableDeclarations"] := __n49;
__n50 := [  ];
__n42["functionDeclarations"] := __n50;
__n42["codeType"] := "function";
__n42["strict"] := false;
__n40["body"] := __n42;
__n40["generator"] := false;
__n40["async"] := false;
__n40["expression"] := false;
__n36["right"] := __n40;
__n35["expression"] := __n36;
__n51 := {  };
__n51["type"] := "VariableDeclaration";
__n53 := {  };
__n53["type"] := "VariableDeclarator";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "promise";
__n53["id"] := __n54;
__n55 := {  };
__n55["type"] := "NewExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Promise";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "FunctionExpression";
__n58["id"] := null;
__n59 := [ "resolve" ];
__n58["params"] := __n59;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "AssignmentExpression";
__n63["operator"] := "=";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "returnValue";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "resolve";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "thenable";
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n63["right"] := __n65;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n69 := [  ];
__n60["variableDeclarations"] := __n69;
__n70 := [  ];
__n60["functionDeclarations"] := __n70;
__n60["codeType"] := "function";
__n60["strict"] := false;
__n58["body"] := __n60;
__n58["generator"] := false;
__n58["async"] := false;
__n58["expression"] := false;
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n53["init"] := __n55;
__n52 := [ __n53 ];
__n51["declarations"] := __n52;
__n51["kind"] := "var";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "assert";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "sameValue";
__n75["raw"] := "\"sameValue\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n72["callee"] := __n73;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "returnValue";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "undefined";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "\"resolve\" return value";
__n79["raw"] := "'\"resolve\" return value'";
__n76 := [ __n77, __n78, __n79 ];
__n72["arguments"] := __n76;
__n71["expression"] := __n72;
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "AssignmentExpression";
__n81["operator"] := "=";
__n82 := {  };
__n82["type"] := "MemberExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "thenable";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "then";
__n84["raw"] := "\"then\"";
__n82["property"] := __n84;
__n82["computed"] := true;
__n81["left"] := __n82;
__n85 := {  };
__n85["type"] := "FunctionExpression";
__n85["id"] := null;
__n86 := [  ];
__n85["params"] := __n86;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "AssignmentExpression";
__n90["operator"] := "+=";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "lateCallCount";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 1.;
__n92["raw"] := "1";
__n90["right"] := __n92;
__n89["expression"] := __n90;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n93 := [  ];
__n87["variableDeclarations"] := __n93;
__n94 := [  ];
__n87["functionDeclarations"] := __n94;
__n87["codeType"] := "function";
__n87["strict"] := false;
__n85["body"] := __n87;
__n85["generator"] := false;
__n85["async"] := false;
__n85["expression"] := false;
__n81["right"] := __n85;
__n80["expression"] := __n81;
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "CallExpression";
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "promise";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "then";
__n99["raw"] := "\"then\"";
__n97["property"] := __n99;
__n97["computed"] := true;
__n96["callee"] := __n97;
__n101 := {  };
__n101["type"] := "FunctionExpression";
__n101["id"] := null;
__n102 := [ "val" ];
__n101["params"] := __n102;
__n103 := {  };
__n103["type"] := "BlockStatement";
__n105 := {  };
__n105["type"] := "IfStatement";
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "!==";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "val";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "value";
__n106["right"] := __n108;
__n105["test"] := __n106;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "ExpressionStatement";
__n112 := {  };
__n112["type"] := "CallExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "$DONE";
__n112["callee"] := __n113;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "The promise should be fulfilled with the provided value.";
__n115["raw"] := "'The promise should be fulfilled with the provided value.'";
__n114 := [ __n115 ];
__n112["arguments"] := __n114;
__n111["expression"] := __n112;
__n116 := {  };
__n116["type"] := "ReturnStatement";
__n116["argument"] := null;
__n110 := [ __n111, __n116 ];
__n109["body"] := __n110;
__n105["consequent"] := __n109;
__n105["alternate"] := null;
__n117 := {  };
__n117["type"] := "IfStatement";
__n118 := {  };
__n118["type"] := "BinaryExpression";
__n118["operator"] := ">";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "lateCallCount";
__n118["left"] := __n119;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := 0.;
__n120["raw"] := "0";
__n118["right"] := __n120;
__n117["test"] := __n118;
__n121 := {  };
__n121["type"] := "BlockStatement";
__n123 := {  };
__n123["type"] := "ExpressionStatement";
__n124 := {  };
__n124["type"] := "CallExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "$DONE";
__n124["callee"] := __n125;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "The `then` method should be executed synchronously.";
__n127["raw"] := "'The `then` method should be executed synchronously.'";
__n126 := [ __n127 ];
__n124["arguments"] := __n126;
__n123["expression"] := __n124;
__n122 := [ __n123 ];
__n121["body"] := __n122;
__n117["consequent"] := __n121;
__n117["alternate"] := null;
__n128 := {  };
__n128["type"] := "ExpressionStatement";
__n129 := {  };
__n129["type"] := "CallExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "$DONE";
__n129["callee"] := __n130;
__n131 := [  ];
__n129["arguments"] := __n131;
__n128["expression"] := __n129;
__n104 := [ __n105, __n117, __n128 ];
__n103["body"] := __n104;
__n132 := [  ];
__n103["variableDeclarations"] := __n132;
__n133 := [  ];
__n103["functionDeclarations"] := __n133;
__n103["codeType"] := "function";
__n103["strict"] := false;
__n101["body"] := __n103;
__n101["generator"] := false;
__n101["async"] := false;
__n101["expression"] := false;
__n134 := {  };
__n134["type"] := "FunctionExpression";
__n134["id"] := null;
__n135 := [  ];
__n134["params"] := __n135;
__n136 := {  };
__n136["type"] := "BlockStatement";
__n138 := {  };
__n138["type"] := "ExpressionStatement";
__n139 := {  };
__n139["type"] := "CallExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "$DONE";
__n139["callee"] := __n140;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := "The promise should not be rejected.";
__n142["raw"] := "'The promise should not be rejected.'";
__n141 := [ __n142 ];
__n139["arguments"] := __n141;
__n138["expression"] := __n139;
__n137 := [ __n138 ];
__n136["body"] := __n137;
__n143 := [  ];
__n136["variableDeclarations"] := __n143;
__n144 := [  ];
__n136["functionDeclarations"] := __n144;
__n136["codeType"] := "function";
__n136["strict"] := false;
__n134["body"] := __n136;
__n134["generator"] := false;
__n134["async"] := false;
__n134["expression"] := false;
__n100 := [ __n101, __n134 ];
__n96["arguments"] := __n100;
__n95["expression"] := __n96;
__n1 := [ __n2, __n7, __n13, __n18, __n35, __n51, __n71, __n80, __n95 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n145 := [ "returnValue", "value", "lateCallCount", "thenable", "promise" ];
__n0["variableDeclarations"] := __n145;
__n146 := [  ];
__n0["functionDeclarations"] := __n146;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}