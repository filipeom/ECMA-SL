function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "resolveP";
__n4["id"] := __n5;
__n4["init"] := null;
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "p";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "NewExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Promise";
__n8["callee"] := __n9;
__n11 := {  };
__n11["type"] := "FunctionExpression";
__n11["id"] := null;
__n12 := [ "resolve" ];
__n11["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "AssignmentExpression";
__n16["operator"] := "=";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "resolveP";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "resolve";
__n16["right"] := __n18;
__n15["expression"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n19 := [  ];
__n13["variableDeclarations"] := __n19;
__n20 := [  ];
__n13["functionDeclarations"] := __n20;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n11["body"] := __n13;
__n11["generator"] := false;
__n11["async"] := false;
__n11["expression"] := false;
__n10 := [ __n11 ];
__n8["arguments"] := __n10;
__n6["init"] := __n8;
__n3 := [ __n4, __n6 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "resolveP";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "p";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "p";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "then";
__n32["raw"] := "\"then\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "FunctionExpression";
__n34["id"] := null;
__n35 := [  ];
__n34["params"] := __n35;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ThrowStatement";
__n39 := {  };
__n39["type"] := "NewExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Test262Error";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "Should not fulfill: should reject with TypeError.";
__n42["raw"] := "\"Should not fulfill: should reject with TypeError.\"";
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["argument"] := __n39;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n43 := [  ];
__n36["variableDeclarations"] := __n43;
__n44 := [  ];
__n36["functionDeclarations"] := __n44;
__n36["codeType"] := "function";
__n36["strict"] := false;
__n34["body"] := __n36;
__n34["generator"] := false;
__n34["async"] := false;
__n34["expression"] := false;
__n45 := {  };
__n45["type"] := "FunctionExpression";
__n45["id"] := null;
__n46 := [ "err" ];
__n45["params"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "IfStatement";
__n50 := {  };
__n50["type"] := "UnaryExpression";
__n50["operator"] := "!";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "instanceof";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "err";
__n51["left"] := __n52;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "TypeError";
__n51["right"] := __n53;
__n50["argument"] := __n51;
__n50["prefix"] := true;
__n49["test"] := __n50;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ThrowStatement";
__n57 := {  };
__n57["type"] := "NewExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "Test262Error";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "+";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "Expected TypeError, got ";
__n61["raw"] := "\"Expected TypeError, got \"";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "err";
__n60["right"] := __n62;
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["argument"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n49["consequent"] := __n54;
__n49["alternate"] := null;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n63 := [  ];
__n47["variableDeclarations"] := __n63;
__n64 := [  ];
__n47["functionDeclarations"] := __n64;
__n47["codeType"] := "function";
__n47["strict"] := false;
__n45["body"] := __n47;
__n45["generator"] := false;
__n45["async"] := false;
__n45["expression"] := false;
__n33 := [ __n34, __n45 ];
__n29["arguments"] := __n33;
__n28["object"] := __n29;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "then";
__n65["raw"] := "\"then\"";
__n28["property"] := __n65;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$DONE";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$DONE";
__n66 := [ __n67, __n68 ];
__n27["arguments"] := __n66;
__n26["expression"] := __n27;
__n1 := [ __n2, __n21, __n26 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n69 := [ "resolveP", "p" ];
__n0["variableDeclarations"] := __n69;
__n70 := [  ];
__n0["functionDeclarations"] := __n70;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}