function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "sequence";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "thenable";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "ObjectExpression";
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "then";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "FunctionExpression";
__n16["id"] := null;
__n17 := [ "onResolve", "onReject" ];
__n16["params"] := __n17;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "sequence";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "push";
__n24["raw"] := "\"push\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 3.;
__n26["raw"] := "3";
__n25 := [ __n26 ];
__n21["arguments"] := __n25;
__n20["expression"] := __n21;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "assert";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "sameValue";
__n31["raw"] := "\"sameValue\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "sequence";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "length";
__n35["raw"] := "\"length\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 3.;
__n36["raw"] := "3";
__n32 := [ __n33, __n36 ];
__n28["arguments"] := __n32;
__n27["expression"] := __n28;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "checkSequence";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "sequence";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "thenable.then called";
__n42["raw"] := "\"thenable.then called\"";
__n40 := [ __n41, __n42 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "assert";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "sameValue";
__n47["raw"] := "\"sameValue\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["callee"] := __n45;
__n49 := {  };
__n49["type"] := "ThisExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "thenable";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "thenable.then called with `thenable` as `this`";
__n51["raw"] := "\"thenable.then called with `thenable` as `this`\"";
__n48 := [ __n49, __n50, __n51 ];
__n44["arguments"] := __n48;
__n43["expression"] := __n44;
__n52 := {  };
__n52["type"] := "ReturnStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "onResolve";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "resolved";
__n56["raw"] := "'resolved'";
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n52["argument"] := __n53;
__n19 := [ __n20, __n27, __n37, __n43, __n52 ];
__n18["body"] := __n19;
__n57 := [  ];
__n18["variableDeclarations"] := __n57;
__n58 := [  ];
__n18["functionDeclarations"] := __n58;
__n18["codeType"] := "function";
__n18["strict"] := false;
__n16["body"] := __n18;
__n16["generator"] := false;
__n16["async"] := false;
__n16["expression"] := false;
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n13 := [ __n14 ];
__n12["properties"] := __n13;
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "sequence";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "push";
__n63["raw"] := "\"push\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 1.;
__n65["raw"] := "1";
__n64 := [ __n65 ];
__n60["arguments"] := __n64;
__n59["expression"] := __n60;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "assert";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "sameValue";
__n70["raw"] := "\"sameValue\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "sequence";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "length";
__n74["raw"] := "\"length\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 1.;
__n75["raw"] := "1";
__n71 := [ __n72, __n75 ];
__n67["arguments"] := __n71;
__n66["expression"] := __n67;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "checkSequence";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "sequence";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "no async calls yet";
__n81["raw"] := "\"no async calls yet\"";
__n79 := [ __n80, __n81 ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n82 := {  };
__n82["type"] := "VariableDeclaration";
__n84 := {  };
__n84["type"] := "VariableDeclarator";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "p";
__n84["id"] := __n85;
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "Promise";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "resolve";
__n89["raw"] := "\"resolve\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n86["callee"] := __n87;
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "thenable";
__n90 := [ __n91 ];
__n86["arguments"] := __n90;
__n84["init"] := __n86;
__n83 := [ __n84 ];
__n82["declarations"] := __n83;
__n82["kind"] := "var";
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "MemberExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "sequence";
__n94["object"] := __n95;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "push";
__n96["raw"] := "\"push\"";
__n94["property"] := __n96;
__n94["computed"] := true;
__n93["callee"] := __n94;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 2.;
__n98["raw"] := "2";
__n97 := [ __n98 ];
__n93["arguments"] := __n97;
__n92["expression"] := __n93;
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "MemberExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "assert";
__n101["object"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "sameValue";
__n103["raw"] := "\"sameValue\"";
__n101["property"] := __n103;
__n101["computed"] := true;
__n100["callee"] := __n101;
__n105 := {  };
__n105["type"] := "MemberExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "sequence";
__n105["object"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "length";
__n107["raw"] := "\"length\"";
__n105["property"] := __n107;
__n105["computed"] := true;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := 2.;
__n108["raw"] := "2";
__n104 := [ __n105, __n108 ];
__n100["arguments"] := __n104;
__n99["expression"] := __n100;
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "checkSequence";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "sequence";
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "thenable.then queued but not yet called";
__n114["raw"] := "\"thenable.then queued but not yet called\"";
__n112 := [ __n113, __n114 ];
__n110["arguments"] := __n112;
__n109["expression"] := __n110;
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "MemberExpression";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "MemberExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "p";
__n119["object"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "then";
__n121["raw"] := "\"then\"";
__n119["property"] := __n121;
__n119["computed"] := true;
__n118["callee"] := __n119;
__n123 := {  };
__n123["type"] := "FunctionExpression";
__n123["id"] := null;
__n124 := [ "r" ];
__n123["params"] := __n124;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "MemberExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "sequence";
__n129["object"] := __n130;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "push";
__n131["raw"] := "\"push\"";
__n129["property"] := __n131;
__n129["computed"] := true;
__n128["callee"] := __n129;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := 4.;
__n133["raw"] := "4";
__n132 := [ __n133 ];
__n128["arguments"] := __n132;
__n127["expression"] := __n128;
__n134 := {  };
__n134["type"] := "ExpressionStatement";
__n135 := {  };
__n135["type"] := "CallExpression";
__n136 := {  };
__n136["type"] := "MemberExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "assert";
__n136["object"] := __n137;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := "sameValue";
__n138["raw"] := "\"sameValue\"";
__n136["property"] := __n138;
__n136["computed"] := true;
__n135["callee"] := __n136;
__n140 := {  };
__n140["type"] := "MemberExpression";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "sequence";
__n140["object"] := __n141;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := "length";
__n142["raw"] := "\"length\"";
__n140["property"] := __n142;
__n140["computed"] := true;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := 4.;
__n143["raw"] := "4";
__n139 := [ __n140, __n143 ];
__n135["arguments"] := __n139;
__n134["expression"] := __n135;
__n144 := {  };
__n144["type"] := "ExpressionStatement";
__n145 := {  };
__n145["type"] := "CallExpression";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "checkSequence";
__n145["callee"] := __n146;
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "sequence";
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := "all done";
__n149["raw"] := "\"all done\"";
__n147 := [ __n148, __n149 ];
__n145["arguments"] := __n147;
__n144["expression"] := __n145;
__n150 := {  };
__n150["type"] := "ExpressionStatement";
__n151 := {  };
__n151["type"] := "CallExpression";
__n152 := {  };
__n152["type"] := "MemberExpression";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "assert";
__n152["object"] := __n153;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "sameValue";
__n154["raw"] := "\"sameValue\"";
__n152["property"] := __n154;
__n152["computed"] := true;
__n151["callee"] := __n152;
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "r";
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := "resolved";
__n157["raw"] := "'resolved'";
__n155 := [ __n156, __n157 ];
__n151["arguments"] := __n155;
__n150["expression"] := __n151;
__n126 := [ __n127, __n134, __n144, __n150 ];
__n125["body"] := __n126;
__n158 := [  ];
__n125["variableDeclarations"] := __n158;
__n159 := [  ];
__n125["functionDeclarations"] := __n159;
__n125["codeType"] := "function";
__n125["strict"] := false;
__n123["body"] := __n125;
__n123["generator"] := false;
__n123["async"] := false;
__n123["expression"] := false;
__n122 := [ __n123 ];
__n118["arguments"] := __n122;
__n117["object"] := __n118;
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := "then";
__n160["raw"] := "\"then\"";
__n117["property"] := __n160;
__n117["computed"] := true;
__n116["callee"] := __n117;
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "$DONE";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "$DONE";
__n161 := [ __n162, __n163 ];
__n116["arguments"] := __n161;
__n115["expression"] := __n116;
__n1 := [ __n2, __n8, __n59, __n66, __n76, __n82, __n92, __n99, __n109, __n115 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n164 := [ "sequence", "thenable", "p" ];
__n0["variableDeclarations"] := __n164;
__n165 := [  ];
__n0["functionDeclarations"] := __n165;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}