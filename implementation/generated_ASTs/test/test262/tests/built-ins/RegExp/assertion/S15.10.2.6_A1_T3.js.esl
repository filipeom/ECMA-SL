function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__executed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "/s$/m";
__n8["raw"] := "/s$/m";
__n8["source"] := "s$";
__n9 := {  };
__n9["type"] := "RegExp";
__n10 := {  };
__n10["type"] := "Alternative";
__n12 := {  };
__n12["type"] := "Char";
__n12["value"] := "s";
__n12["kind"] := "simple";
__n12["symbol"] := "s";
__n12["codePoint"] := 115.;
__n13 := {  };
__n13["type"] := "Assertion";
__n13["kind"] := "$";
__n11 := [ __n12, __n13 ];
__n10["expressions"] := __n11;
__n9["body"] := __n10;
__n9["flags"] := "m";
__n9["nCaps"] := 0.;
__n8["regex"] := __n9;
__n7["object"] := __n8;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "exec";
__n14["raw"] := "\"exec\"";
__n7["property"] := __n14;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "pairs
makes	double";
__n16["raw"] := "\"pairs\\nmakes\\tdouble\"";
__n15 := [ __n16 ];
__n6["arguments"] := __n15;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "__expected";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "ArrayExpression";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "s";
__n23["raw"] := "\"s\"";
__n22 := [ __n23 ];
__n21["elements"] := __n22;
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "AssignmentExpression";
__n25["operator"] := "=";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "__expected";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "index";
__n28["raw"] := "\"index\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["left"] := __n26;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 4.;
__n29["raw"] := "4";
__n25["right"] := __n29;
__n24["expression"] := __n25;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "AssignmentExpression";
__n31["operator"] := "=";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "__expected";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "input";
__n34["raw"] := "\"input\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["left"] := __n32;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "pairs
makes	double";
__n35["raw"] := "\"pairs\\nmakes\\tdouble\"";
__n31["right"] := __n35;
__n30["expression"] := __n31;
__n36 := {  };
__n36["type"] := "IfStatement";
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "!==";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "__executed";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "length";
__n40["raw"] := "\"length\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["left"] := __n38;
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "__expected";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "length";
__n43["raw"] := "\"length\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n37["right"] := __n41;
__n36["test"] := __n37;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$ERROR";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "+";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "+";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#1: __executed = /s$/m.exec(\"pairs\\nmakes\\tdouble\"); __executed.length === ";
__n53["raw"] := "'#1: __executed = /s$/m.exec(\"pairs\\\\nmakes\\\\tdouble\"); __executed.length === '";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "__expected";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "length";
__n56["raw"] := "\"length\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n52["right"] := __n54;
__n51["left"] := __n52;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := ". Actual: ";
__n57["raw"] := "'. Actual: '";
__n51["right"] := __n57;
__n50["left"] := __n51;
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "__executed";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "length";
__n60["raw"] := "\"length\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n50["right"] := __n58;
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n36["consequent"] := __n44;
__n36["alternate"] := null;
__n61 := {  };
__n61["type"] := "IfStatement";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "!==";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "__executed";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "index";
__n65["raw"] := "\"index\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "__expected";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "index";
__n68["raw"] := "\"index\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n62["right"] := __n66;
__n61["test"] := __n62;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "$ERROR";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "+";
__n76 := {  };
__n76["type"] := "BinaryExpression";
__n76["operator"] := "+";
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "#2: __executed = /s$/m.exec(\"pairs\\nmakes\\tdouble\"); __executed.index === ";
__n78["raw"] := "'#2: __executed = /s$/m.exec(\"pairs\\\\nmakes\\\\tdouble\"); __executed.index === '";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "__expected";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "index";
__n81["raw"] := "\"index\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n77["right"] := __n79;
__n76["left"] := __n77;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := ". Actual: ";
__n82["raw"] := "'. Actual: '";
__n76["right"] := __n82;
__n75["left"] := __n76;
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "__executed";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "index";
__n85["raw"] := "\"index\"";
__n83["property"] := __n85;
__n83["computed"] := true;
__n75["right"] := __n83;
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n61["consequent"] := __n69;
__n61["alternate"] := null;
__n86 := {  };
__n86["type"] := "IfStatement";
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "!==";
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "__executed";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "input";
__n90["raw"] := "\"input\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n87["left"] := __n88;
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "__expected";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "input";
__n93["raw"] := "\"input\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n87["right"] := __n91;
__n86["test"] := __n87;
__n94 := {  };
__n94["type"] := "BlockStatement";
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "$ERROR";
__n97["callee"] := __n98;
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "+";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "+";
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "+";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "#3: __executed = /s$/m.exec(\"pairs\\nmakes\\tdouble\"); __executed.input === ";
__n103["raw"] := "'#3: __executed = /s$/m.exec(\"pairs\\\\nmakes\\\\tdouble\"); __executed.input === '";
__n102["left"] := __n103;
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "__expected";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "input";
__n106["raw"] := "\"input\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n102["right"] := __n104;
__n101["left"] := __n102;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := ". Actual: ";
__n107["raw"] := "'. Actual: '";
__n101["right"] := __n107;
__n100["left"] := __n101;
__n108 := {  };
__n108["type"] := "MemberExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "__executed";
__n108["object"] := __n109;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "input";
__n110["raw"] := "\"input\"";
__n108["property"] := __n110;
__n108["computed"] := true;
__n100["right"] := __n108;
__n99 := [ __n100 ];
__n97["arguments"] := __n99;
__n96["expression"] := __n97;
__n95 := [ __n96 ];
__n94["body"] := __n95;
__n86["consequent"] := __n94;
__n86["alternate"] := null;
__n111 := {  };
__n111["type"] := "ForStatement";
__n112 := {  };
__n112["type"] := "VariableDeclaration";
__n114 := {  };
__n114["type"] := "VariableDeclarator";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "index";
__n114["id"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 0.;
__n116["raw"] := "0";
__n114["init"] := __n116;
__n113 := [ __n114 ];
__n112["declarations"] := __n113;
__n112["kind"] := "var";
__n111["init"] := __n112;
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "<";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "index";
__n117["left"] := __n118;
__n119 := {  };
__n119["type"] := "MemberExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "__expected";
__n119["object"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "length";
__n121["raw"] := "\"length\"";
__n119["property"] := __n121;
__n119["computed"] := true;
__n117["right"] := __n119;
__n111["test"] := __n117;
__n122 := {  };
__n122["type"] := "UpdateExpression";
__n122["operator"] := "++";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "index";
__n122["argument"] := __n123;
__n122["prefix"] := false;
__n111["update"] := __n122;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "IfStatement";
__n127 := {  };
__n127["type"] := "BinaryExpression";
__n127["operator"] := "!==";
__n128 := {  };
__n128["type"] := "MemberExpression";
__n128["computed"] := true;
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "__executed";
__n128["object"] := __n129;
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "index";
__n128["property"] := __n130;
__n127["left"] := __n128;
__n131 := {  };
__n131["type"] := "MemberExpression";
__n131["computed"] := true;
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "__expected";
__n131["object"] := __n132;
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "index";
__n131["property"] := __n133;
__n127["right"] := __n131;
__n126["test"] := __n127;
__n134 := {  };
__n134["type"] := "BlockStatement";
__n136 := {  };
__n136["type"] := "ExpressionStatement";
__n137 := {  };
__n137["type"] := "CallExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "$ERROR";
__n137["callee"] := __n138;
__n140 := {  };
__n140["type"] := "BinaryExpression";
__n140["operator"] := "+";
__n141 := {  };
__n141["type"] := "BinaryExpression";
__n141["operator"] := "+";
__n142 := {  };
__n142["type"] := "BinaryExpression";
__n142["operator"] := "+";
__n143 := {  };
__n143["type"] := "BinaryExpression";
__n143["operator"] := "+";
__n144 := {  };
__n144["type"] := "BinaryExpression";
__n144["operator"] := "+";
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "#4: __executed = /s$/m.exec(\"pairs\\nmakes\\tdouble\"); __executed[";
__n145["raw"] := "'#4: __executed = /s$/m.exec(\"pairs\\\\nmakes\\\\tdouble\"); __executed['";
__n144["left"] := __n145;
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "index";
__n144["right"] := __n146;
__n143["left"] := __n144;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "] === ";
__n147["raw"] := "'] === '";
__n143["right"] := __n147;
__n142["left"] := __n143;
__n148 := {  };
__n148["type"] := "MemberExpression";
__n148["computed"] := true;
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "__expected";
__n148["object"] := __n149;
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "index";
__n148["property"] := __n150;
__n142["right"] := __n148;
__n141["left"] := __n142;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := ". Actual: ";
__n151["raw"] := "'. Actual: '";
__n141["right"] := __n151;
__n140["left"] := __n141;
__n152 := {  };
__n152["type"] := "MemberExpression";
__n152["computed"] := true;
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "__executed";
__n152["object"] := __n153;
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "index";
__n152["property"] := __n154;
__n140["right"] := __n152;
__n139 := [ __n140 ];
__n137["arguments"] := __n139;
__n136["expression"] := __n137;
__n135 := [ __n136 ];
__n134["body"] := __n135;
__n126["consequent"] := __n134;
__n126["alternate"] := null;
__n125 := [ __n126 ];
__n124["body"] := __n125;
__n111["body"] := __n124;
__n1 := [ __n2, __n17, __n24, __n30, __n36, __n61, __n86, __n111 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n155 := [ "__executed", "__expected", "index" ];
__n0["variableDeclarations"] := __n155;
__n156 := [  ];
__n0["functionDeclarations"] := __n156;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}