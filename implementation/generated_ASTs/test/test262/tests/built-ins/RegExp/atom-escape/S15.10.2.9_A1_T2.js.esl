function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__executed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "/([xu]\\d{2}([A-H]{2})?)\\1/";
__n8["raw"] := "/([xu]\\d{2}([A-H]{2})?)\\1/";
__n8["source"] := "([xu]\\d{2}([A-H]{2})?)\\1";
__n9 := {  };
__n9["type"] := "RegExp";
__n10 := {  };
__n10["type"] := "Alternative";
__n12 := {  };
__n12["type"] := "Group";
__n12["capturing"] := true;
__n12["number"] := 1.;
__n13 := {  };
__n13["type"] := "Alternative";
__n15 := {  };
__n15["type"] := "CharacterClass";
__n17 := {  };
__n17["type"] := "Char";
__n17["value"] := "x";
__n17["kind"] := "simple";
__n17["symbol"] := "x";
__n17["codePoint"] := 120.;
__n18 := {  };
__n18["type"] := "Char";
__n18["value"] := "u";
__n18["kind"] := "simple";
__n18["symbol"] := "u";
__n18["codePoint"] := 117.;
__n16 := [ __n17, __n18 ];
__n15["expressions"] := __n16;
__n19 := {  };
__n19["type"] := "Repetition";
__n20 := {  };
__n20["type"] := "Char";
__n20["value"] := "\\d";
__n20["kind"] := "meta";
__n20["symbol"] := 'undefined;
__n20["codePoint"] := nan;
__n19["expression"] := __n20;
__n21 := {  };
__n21["type"] := "Quantifier";
__n21["kind"] := "Range";
__n21["from"] := 2.;
__n21["to"] := 2.;
__n21["greedy"] := true;
__n19["quantifier"] := __n21;
__n19["parenIndex"] := 1.;
__n19["parenCount"] := 1.;
__n22 := {  };
__n22["type"] := "Repetition";
__n23 := {  };
__n23["type"] := "Group";
__n23["capturing"] := true;
__n23["number"] := 2.;
__n24 := {  };
__n24["type"] := "Repetition";
__n25 := {  };
__n25["type"] := "CharacterClass";
__n27 := {  };
__n27["type"] := "ClassRange";
__n28 := {  };
__n28["type"] := "Char";
__n28["value"] := "A";
__n28["kind"] := "simple";
__n28["symbol"] := "A";
__n28["codePoint"] := 65.;
__n27["from"] := __n28;
__n29 := {  };
__n29["type"] := "Char";
__n29["value"] := "H";
__n29["kind"] := "simple";
__n29["symbol"] := "H";
__n29["codePoint"] := 72.;
__n27["to"] := __n29;
__n26 := [ __n27 ];
__n25["expressions"] := __n26;
__n24["expression"] := __n25;
__n30 := {  };
__n30["type"] := "Quantifier";
__n30["kind"] := "Range";
__n30["from"] := 2.;
__n30["to"] := 2.;
__n30["greedy"] := true;
__n24["quantifier"] := __n30;
__n24["parenIndex"] := 2.;
__n24["parenCount"] := 2.;
__n23["expression"] := __n24;
__n22["expression"] := __n23;
__n31 := {  };
__n31["type"] := "Quantifier";
__n31["kind"] := "?";
__n31["greedy"] := true;
__n22["quantifier"] := __n31;
__n22["parenIndex"] := 2.;
__n22["parenCount"] := 1.;
__n14 := [ __n15, __n19, __n22 ];
__n13["expressions"] := __n14;
__n12["expression"] := __n13;
__n32 := {  };
__n32["type"] := "Backreference";
__n32["kind"] := "number";
__n32["number"] := 1.;
__n32["reference"] := 1.;
__n11 := [ __n12, __n32 ];
__n10["expressions"] := __n11;
__n9["body"] := __n10;
__n9["flags"] := "";
__n9["nCaps"] := 2.;
__n8["regex"] := __n9;
__n7["object"] := __n8;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "exec";
__n33["raw"] := "\"exec\"";
__n7["property"] := __n33;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "x09x12x01x01u00FFu00FFx04x04x23";
__n35["raw"] := "\"x09x12x01x01u00FFu00FFx04x04x23\"";
__n34 := [ __n35 ];
__n6["arguments"] := __n34;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n36 := {  };
__n36["type"] := "VariableDeclaration";
__n38 := {  };
__n38["type"] := "VariableDeclarator";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "__expected";
__n38["id"] := __n39;
__n40 := {  };
__n40["type"] := "ArrayExpression";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "x01x01";
__n42["raw"] := "\"x01x01\"";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "x01";
__n43["raw"] := "\"x01\"";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "undefined";
__n41 := [ __n42, __n43, __n44 ];
__n40["elements"] := __n41;
__n38["init"] := __n40;
__n37 := [ __n38 ];
__n36["declarations"] := __n37;
__n36["kind"] := "var";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "AssignmentExpression";
__n46["operator"] := "=";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "__expected";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "index";
__n49["raw"] := "\"index\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["left"] := __n47;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 6.;
__n50["raw"] := "6";
__n46["right"] := __n50;
__n45["expression"] := __n46;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "AssignmentExpression";
__n52["operator"] := "=";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "__expected";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "input";
__n55["raw"] := "\"input\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["left"] := __n53;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "x09x12x01x01u00FFu00FFx04x04x23";
__n56["raw"] := "\"x09x12x01x01u00FFu00FFx04x04x23\"";
__n52["right"] := __n56;
__n51["expression"] := __n52;
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "__executed";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "length";
__n61["raw"] := "\"length\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n58["left"] := __n59;
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "__expected";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "length";
__n64["raw"] := "\"length\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n58["right"] := __n62;
__n57["test"] := __n58;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "$ERROR";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "+";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "+";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "+";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "#1: __executed = /([xu]\\d{2}([A-H]{2})?)\\1/.exec(\"x09x12x01x01u00FFu00FFx04x04x23\"); __executed.length === ";
__n74["raw"] := "'#1: __executed = /([xu]\\\\d{2}([A-H]{2})?)\\\\1/.exec(\"x09x12x01x01u00FFu00FFx04x04x23\"); __executed.length === '";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "__expected";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "length";
__n77["raw"] := "\"length\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n73["right"] := __n75;
__n72["left"] := __n73;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := ". Actual: ";
__n78["raw"] := "'. Actual: '";
__n72["right"] := __n78;
__n71["left"] := __n72;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "__executed";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "length";
__n81["raw"] := "\"length\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n71["right"] := __n79;
__n70 := [ __n71 ];
__n68["arguments"] := __n70;
__n67["expression"] := __n68;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n57["consequent"] := __n65;
__n57["alternate"] := null;
__n82 := {  };
__n82["type"] := "IfStatement";
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "!==";
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "__executed";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "index";
__n86["raw"] := "\"index\"";
__n84["property"] := __n86;
__n84["computed"] := true;
__n83["left"] := __n84;
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "__expected";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "index";
__n89["raw"] := "\"index\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n83["right"] := __n87;
__n82["test"] := __n83;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "$ERROR";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "+";
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "+";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "#2: __executed = /([xu]\\d{2}([A-H]{2})?)\\1/.exec(\"x09x12x01x01u00FFu00FFx04x04x23\"); __executed.index === ";
__n99["raw"] := "'#2: __executed = /([xu]\\\\d{2}([A-H]{2})?)\\\\1/.exec(\"x09x12x01x01u00FFu00FFx04x04x23\"); __executed.index === '";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "__expected";
__n100["object"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "index";
__n102["raw"] := "\"index\"";
__n100["property"] := __n102;
__n100["computed"] := true;
__n98["right"] := __n100;
__n97["left"] := __n98;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := ". Actual: ";
__n103["raw"] := "'. Actual: '";
__n97["right"] := __n103;
__n96["left"] := __n97;
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "__executed";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "index";
__n106["raw"] := "\"index\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n96["right"] := __n104;
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n82["consequent"] := __n90;
__n82["alternate"] := null;
__n107 := {  };
__n107["type"] := "IfStatement";
__n108 := {  };
__n108["type"] := "BinaryExpression";
__n108["operator"] := "!==";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "__executed";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "input";
__n111["raw"] := "\"input\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n108["left"] := __n109;
__n112 := {  };
__n112["type"] := "MemberExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "__expected";
__n112["object"] := __n113;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "input";
__n114["raw"] := "\"input\"";
__n112["property"] := __n114;
__n112["computed"] := true;
__n108["right"] := __n112;
__n107["test"] := __n108;
__n115 := {  };
__n115["type"] := "BlockStatement";
__n117 := {  };
__n117["type"] := "ExpressionStatement";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "$ERROR";
__n118["callee"] := __n119;
__n121 := {  };
__n121["type"] := "BinaryExpression";
__n121["operator"] := "+";
__n122 := {  };
__n122["type"] := "BinaryExpression";
__n122["operator"] := "+";
__n123 := {  };
__n123["type"] := "BinaryExpression";
__n123["operator"] := "+";
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "#3: __executed = /([xu]\\d{2}([A-H]{2})?)\\1/.exec(\"x09x12x01x01u00FFu00FFx04x04x23\"); __executed.input === ";
__n124["raw"] := "'#3: __executed = /([xu]\\\\d{2}([A-H]{2})?)\\\\1/.exec(\"x09x12x01x01u00FFu00FFx04x04x23\"); __executed.input === '";
__n123["left"] := __n124;
__n125 := {  };
__n125["type"] := "MemberExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "__expected";
__n125["object"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "input";
__n127["raw"] := "\"input\"";
__n125["property"] := __n127;
__n125["computed"] := true;
__n123["right"] := __n125;
__n122["left"] := __n123;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := ". Actual: ";
__n128["raw"] := "'. Actual: '";
__n122["right"] := __n128;
__n121["left"] := __n122;
__n129 := {  };
__n129["type"] := "MemberExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "__executed";
__n129["object"] := __n130;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "input";
__n131["raw"] := "\"input\"";
__n129["property"] := __n131;
__n129["computed"] := true;
__n121["right"] := __n129;
__n120 := [ __n121 ];
__n118["arguments"] := __n120;
__n117["expression"] := __n118;
__n116 := [ __n117 ];
__n115["body"] := __n116;
__n107["consequent"] := __n115;
__n107["alternate"] := null;
__n132 := {  };
__n132["type"] := "ForStatement";
__n133 := {  };
__n133["type"] := "VariableDeclaration";
__n135 := {  };
__n135["type"] := "VariableDeclarator";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "index";
__n135["id"] := __n136;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := 0.;
__n137["raw"] := "0";
__n135["init"] := __n137;
__n134 := [ __n135 ];
__n133["declarations"] := __n134;
__n133["kind"] := "var";
__n132["init"] := __n133;
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "<";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "index";
__n138["left"] := __n139;
__n140 := {  };
__n140["type"] := "MemberExpression";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "__expected";
__n140["object"] := __n141;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := "length";
__n142["raw"] := "\"length\"";
__n140["property"] := __n142;
__n140["computed"] := true;
__n138["right"] := __n140;
__n132["test"] := __n138;
__n143 := {  };
__n143["type"] := "UpdateExpression";
__n143["operator"] := "++";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "index";
__n143["argument"] := __n144;
__n143["prefix"] := false;
__n132["update"] := __n143;
__n145 := {  };
__n145["type"] := "BlockStatement";
__n147 := {  };
__n147["type"] := "IfStatement";
__n148 := {  };
__n148["type"] := "BinaryExpression";
__n148["operator"] := "!==";
__n149 := {  };
__n149["type"] := "MemberExpression";
__n149["computed"] := true;
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "__executed";
__n149["object"] := __n150;
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "index";
__n149["property"] := __n151;
__n148["left"] := __n149;
__n152 := {  };
__n152["type"] := "MemberExpression";
__n152["computed"] := true;
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "__expected";
__n152["object"] := __n153;
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "index";
__n152["property"] := __n154;
__n148["right"] := __n152;
__n147["test"] := __n148;
__n155 := {  };
__n155["type"] := "BlockStatement";
__n157 := {  };
__n157["type"] := "ExpressionStatement";
__n158 := {  };
__n158["type"] := "CallExpression";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "$ERROR";
__n158["callee"] := __n159;
__n161 := {  };
__n161["type"] := "BinaryExpression";
__n161["operator"] := "+";
__n162 := {  };
__n162["type"] := "BinaryExpression";
__n162["operator"] := "+";
__n163 := {  };
__n163["type"] := "BinaryExpression";
__n163["operator"] := "+";
__n164 := {  };
__n164["type"] := "BinaryExpression";
__n164["operator"] := "+";
__n165 := {  };
__n165["type"] := "BinaryExpression";
__n165["operator"] := "+";
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "#4: __executed = /([xu]\\d{2}([A-H]{2})?)\\1/.exec(\"x09x12x01x01u00FFu00FFx04x04x23\"); __executed[";
__n166["raw"] := "'#4: __executed = /([xu]\\\\d{2}([A-H]{2})?)\\\\1/.exec(\"x09x12x01x01u00FFu00FFx04x04x23\"); __executed['";
__n165["left"] := __n166;
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "index";
__n165["right"] := __n167;
__n164["left"] := __n165;
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := "] === ";
__n168["raw"] := "'] === '";
__n164["right"] := __n168;
__n163["left"] := __n164;
__n169 := {  };
__n169["type"] := "MemberExpression";
__n169["computed"] := true;
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "__expected";
__n169["object"] := __n170;
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "index";
__n169["property"] := __n171;
__n163["right"] := __n169;
__n162["left"] := __n163;
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := ". Actual: ";
__n172["raw"] := "'. Actual: '";
__n162["right"] := __n172;
__n161["left"] := __n162;
__n173 := {  };
__n173["type"] := "MemberExpression";
__n173["computed"] := true;
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "__executed";
__n173["object"] := __n174;
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "index";
__n173["property"] := __n175;
__n161["right"] := __n173;
__n160 := [ __n161 ];
__n158["arguments"] := __n160;
__n157["expression"] := __n158;
__n156 := [ __n157 ];
__n155["body"] := __n156;
__n147["consequent"] := __n155;
__n147["alternate"] := null;
__n146 := [ __n147 ];
__n145["body"] := __n146;
__n132["body"] := __n145;
__n1 := [ __n2, __n36, __n45, __n51, __n57, __n82, __n107, __n132 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n176 := [ "__executed", "__expected", "index" ];
__n0["variableDeclarations"] := __n176;
__n177 := [  ];
__n0["functionDeclarations"] := __n177;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}