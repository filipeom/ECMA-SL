function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__executed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "/([Jj]ava([Ss]cript)?)\\sis\\s(fun\\w*)/";
__n8["raw"] := "/([Jj]ava([Ss]cript)?)\\sis\\s(fun\\w*)/";
__n8["source"] := "([Jj]ava([Ss]cript)?)\\sis\\s(fun\\w*)";
__n9 := {  };
__n9["type"] := "RegExp";
__n10 := {  };
__n10["type"] := "Alternative";
__n12 := {  };
__n12["type"] := "Group";
__n12["capturing"] := true;
__n12["number"] := 1.;
__n13 := {  };
__n13["type"] := "Alternative";
__n15 := {  };
__n15["type"] := "CharacterClass";
__n17 := {  };
__n17["type"] := "Char";
__n17["value"] := "J";
__n17["kind"] := "simple";
__n17["symbol"] := "J";
__n17["codePoint"] := 74.;
__n18 := {  };
__n18["type"] := "Char";
__n18["value"] := "j";
__n18["kind"] := "simple";
__n18["symbol"] := "j";
__n18["codePoint"] := 106.;
__n16 := [ __n17, __n18 ];
__n15["expressions"] := __n16;
__n19 := {  };
__n19["type"] := "Char";
__n19["value"] := "a";
__n19["kind"] := "simple";
__n19["symbol"] := "a";
__n19["codePoint"] := 97.;
__n20 := {  };
__n20["type"] := "Char";
__n20["value"] := "v";
__n20["kind"] := "simple";
__n20["symbol"] := "v";
__n20["codePoint"] := 118.;
__n21 := {  };
__n21["type"] := "Char";
__n21["value"] := "a";
__n21["kind"] := "simple";
__n21["symbol"] := "a";
__n21["codePoint"] := 97.;
__n22 := {  };
__n22["type"] := "Repetition";
__n23 := {  };
__n23["type"] := "Group";
__n23["capturing"] := true;
__n23["number"] := 2.;
__n24 := {  };
__n24["type"] := "Alternative";
__n26 := {  };
__n26["type"] := "CharacterClass";
__n28 := {  };
__n28["type"] := "Char";
__n28["value"] := "S";
__n28["kind"] := "simple";
__n28["symbol"] := "S";
__n28["codePoint"] := 83.;
__n29 := {  };
__n29["type"] := "Char";
__n29["value"] := "s";
__n29["kind"] := "simple";
__n29["symbol"] := "s";
__n29["codePoint"] := 115.;
__n27 := [ __n28, __n29 ];
__n26["expressions"] := __n27;
__n30 := {  };
__n30["type"] := "Char";
__n30["value"] := "c";
__n30["kind"] := "simple";
__n30["symbol"] := "c";
__n30["codePoint"] := 99.;
__n31 := {  };
__n31["type"] := "Char";
__n31["value"] := "r";
__n31["kind"] := "simple";
__n31["symbol"] := "r";
__n31["codePoint"] := 114.;
__n32 := {  };
__n32["type"] := "Char";
__n32["value"] := "i";
__n32["kind"] := "simple";
__n32["symbol"] := "i";
__n32["codePoint"] := 105.;
__n33 := {  };
__n33["type"] := "Char";
__n33["value"] := "p";
__n33["kind"] := "simple";
__n33["symbol"] := "p";
__n33["codePoint"] := 112.;
__n34 := {  };
__n34["type"] := "Char";
__n34["value"] := "t";
__n34["kind"] := "simple";
__n34["symbol"] := "t";
__n34["codePoint"] := 116.;
__n25 := [ __n26, __n30, __n31, __n32, __n33, __n34 ];
__n24["expressions"] := __n25;
__n23["expression"] := __n24;
__n22["expression"] := __n23;
__n35 := {  };
__n35["type"] := "Quantifier";
__n35["kind"] := "?";
__n35["greedy"] := true;
__n22["quantifier"] := __n35;
__n22["parenIndex"] := 2.;
__n22["parenCount"] := 1.;
__n14 := [ __n15, __n19, __n20, __n21, __n22 ];
__n13["expressions"] := __n14;
__n12["expression"] := __n13;
__n36 := {  };
__n36["type"] := "Char";
__n36["value"] := "\\s";
__n36["kind"] := "meta";
__n36["symbol"] := 'undefined;
__n36["codePoint"] := nan;
__n37 := {  };
__n37["type"] := "Char";
__n37["value"] := "i";
__n37["kind"] := "simple";
__n37["symbol"] := "i";
__n37["codePoint"] := 105.;
__n38 := {  };
__n38["type"] := "Char";
__n38["value"] := "s";
__n38["kind"] := "simple";
__n38["symbol"] := "s";
__n38["codePoint"] := 115.;
__n39 := {  };
__n39["type"] := "Char";
__n39["value"] := "\\s";
__n39["kind"] := "meta";
__n39["symbol"] := 'undefined;
__n39["codePoint"] := nan;
__n40 := {  };
__n40["type"] := "Group";
__n40["capturing"] := true;
__n40["number"] := 3.;
__n41 := {  };
__n41["type"] := "Alternative";
__n43 := {  };
__n43["type"] := "Char";
__n43["value"] := "f";
__n43["kind"] := "simple";
__n43["symbol"] := "f";
__n43["codePoint"] := 102.;
__n44 := {  };
__n44["type"] := "Char";
__n44["value"] := "u";
__n44["kind"] := "simple";
__n44["symbol"] := "u";
__n44["codePoint"] := 117.;
__n45 := {  };
__n45["type"] := "Char";
__n45["value"] := "n";
__n45["kind"] := "simple";
__n45["symbol"] := "n";
__n45["codePoint"] := 110.;
__n46 := {  };
__n46["type"] := "Repetition";
__n47 := {  };
__n47["type"] := "Char";
__n47["value"] := "\\w";
__n47["kind"] := "meta";
__n47["symbol"] := 'undefined;
__n47["codePoint"] := nan;
__n46["expression"] := __n47;
__n48 := {  };
__n48["type"] := "Quantifier";
__n48["kind"] := "*";
__n48["greedy"] := true;
__n46["quantifier"] := __n48;
__n46["parenIndex"] := 3.;
__n46["parenCount"] := 1.;
__n42 := [ __n43, __n44, __n45, __n46 ];
__n41["expressions"] := __n42;
__n40["expression"] := __n41;
__n11 := [ __n12, __n36, __n37, __n38, __n39, __n40 ];
__n10["expressions"] := __n11;
__n9["body"] := __n10;
__n9["flags"] := "";
__n9["nCaps"] := 3.;
__n8["regex"] := __n9;
__n7["object"] := __n8;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "exec";
__n49["raw"] := "\"exec\"";
__n7["property"] := __n49;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "Learning javaScript is funny, really";
__n51["raw"] := "\"Learning javaScript is funny, really\"";
__n50 := [ __n51 ];
__n6["arguments"] := __n50;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n52 := {  };
__n52["type"] := "VariableDeclaration";
__n54 := {  };
__n54["type"] := "VariableDeclarator";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "__expected";
__n54["id"] := __n55;
__n56 := {  };
__n56["type"] := "ArrayExpression";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "javaScript is funny";
__n58["raw"] := "\"javaScript is funny\"";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "javaScript";
__n59["raw"] := "\"javaScript\"";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "Script";
__n60["raw"] := "\"Script\"";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "funny";
__n61["raw"] := "\"funny\"";
__n57 := [ __n58, __n59, __n60, __n61 ];
__n56["elements"] := __n57;
__n54["init"] := __n56;
__n53 := [ __n54 ];
__n52["declarations"] := __n53;
__n52["kind"] := "var";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "AssignmentExpression";
__n63["operator"] := "=";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "__expected";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "index";
__n66["raw"] := "\"index\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["left"] := __n64;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 9.;
__n67["raw"] := "9";
__n63["right"] := __n67;
__n62["expression"] := __n63;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "AssignmentExpression";
__n69["operator"] := "=";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "__expected";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "input";
__n72["raw"] := "\"input\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n69["left"] := __n70;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "Learning javaScript is funny, really";
__n73["raw"] := "\"Learning javaScript is funny, really\"";
__n69["right"] := __n73;
__n68["expression"] := __n69;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "!==";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "__executed";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "length";
__n78["raw"] := "\"length\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["left"] := __n76;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "__expected";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "length";
__n81["raw"] := "\"length\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n75["right"] := __n79;
__n74["test"] := __n75;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$ERROR";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "+";
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "+";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "+";
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "#1: __executed = /([Jj]ava([Ss]cript)?)\\sis\\s(fun\\w*)/.exec(\"Learning javaScript is funny, really\"); __executed.length === ";
__n91["raw"] := "'#1: __executed = /([Jj]ava([Ss]cript)?)\\\\sis\\\\s(fun\\\\w*)/.exec(\"Learning javaScript is funny, really\"); __executed.length === '";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "MemberExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "__expected";
__n92["object"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "length";
__n94["raw"] := "\"length\"";
__n92["property"] := __n94;
__n92["computed"] := true;
__n90["right"] := __n92;
__n89["left"] := __n90;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := ". Actual: ";
__n95["raw"] := "'. Actual: '";
__n89["right"] := __n95;
__n88["left"] := __n89;
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "__executed";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "length";
__n98["raw"] := "\"length\"";
__n96["property"] := __n98;
__n96["computed"] := true;
__n88["right"] := __n96;
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n74["consequent"] := __n82;
__n74["alternate"] := null;
__n99 := {  };
__n99["type"] := "IfStatement";
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "!==";
__n101 := {  };
__n101["type"] := "MemberExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "__executed";
__n101["object"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "index";
__n103["raw"] := "\"index\"";
__n101["property"] := __n103;
__n101["computed"] := true;
__n100["left"] := __n101;
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "__expected";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "index";
__n106["raw"] := "\"index\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n100["right"] := __n104;
__n99["test"] := __n100;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "$ERROR";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := "+";
__n114 := {  };
__n114["type"] := "BinaryExpression";
__n114["operator"] := "+";
__n115 := {  };
__n115["type"] := "BinaryExpression";
__n115["operator"] := "+";
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "#2: __executed = /([Jj]ava([Ss]cript)?)\\sis\\s(fun\\w*)/.exec(\"Learning javaScript is funny, really\"); __executed.index === ";
__n116["raw"] := "'#2: __executed = /([Jj]ava([Ss]cript)?)\\\\sis\\\\s(fun\\\\w*)/.exec(\"Learning javaScript is funny, really\"); __executed.index === '";
__n115["left"] := __n116;
__n117 := {  };
__n117["type"] := "MemberExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "__expected";
__n117["object"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "index";
__n119["raw"] := "\"index\"";
__n117["property"] := __n119;
__n117["computed"] := true;
__n115["right"] := __n117;
__n114["left"] := __n115;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := ". Actual: ";
__n120["raw"] := "'. Actual: '";
__n114["right"] := __n120;
__n113["left"] := __n114;
__n121 := {  };
__n121["type"] := "MemberExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "__executed";
__n121["object"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "index";
__n123["raw"] := "\"index\"";
__n121["property"] := __n123;
__n121["computed"] := true;
__n113["right"] := __n121;
__n112 := [ __n113 ];
__n110["arguments"] := __n112;
__n109["expression"] := __n110;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n99["consequent"] := __n107;
__n99["alternate"] := null;
__n124 := {  };
__n124["type"] := "IfStatement";
__n125 := {  };
__n125["type"] := "BinaryExpression";
__n125["operator"] := "!==";
__n126 := {  };
__n126["type"] := "MemberExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "__executed";
__n126["object"] := __n127;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := "input";
__n128["raw"] := "\"input\"";
__n126["property"] := __n128;
__n126["computed"] := true;
__n125["left"] := __n126;
__n129 := {  };
__n129["type"] := "MemberExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "__expected";
__n129["object"] := __n130;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "input";
__n131["raw"] := "\"input\"";
__n129["property"] := __n131;
__n129["computed"] := true;
__n125["right"] := __n129;
__n124["test"] := __n125;
__n132 := {  };
__n132["type"] := "BlockStatement";
__n134 := {  };
__n134["type"] := "ExpressionStatement";
__n135 := {  };
__n135["type"] := "CallExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "$ERROR";
__n135["callee"] := __n136;
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "+";
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "+";
__n140 := {  };
__n140["type"] := "BinaryExpression";
__n140["operator"] := "+";
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "#3: __executed = /([Jj]ava([Ss]cript)?)\\sis\\s(fun\\w*)/.exec(\"Learning javaScript is funny, really\"); __executed.input === ";
__n141["raw"] := "'#3: __executed = /([Jj]ava([Ss]cript)?)\\\\sis\\\\s(fun\\\\w*)/.exec(\"Learning javaScript is funny, really\"); __executed.input === '";
__n140["left"] := __n141;
__n142 := {  };
__n142["type"] := "MemberExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "__expected";
__n142["object"] := __n143;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "input";
__n144["raw"] := "\"input\"";
__n142["property"] := __n144;
__n142["computed"] := true;
__n140["right"] := __n142;
__n139["left"] := __n140;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := ". Actual: ";
__n145["raw"] := "'. Actual: '";
__n139["right"] := __n145;
__n138["left"] := __n139;
__n146 := {  };
__n146["type"] := "MemberExpression";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "__executed";
__n146["object"] := __n147;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "input";
__n148["raw"] := "\"input\"";
__n146["property"] := __n148;
__n146["computed"] := true;
__n138["right"] := __n146;
__n137 := [ __n138 ];
__n135["arguments"] := __n137;
__n134["expression"] := __n135;
__n133 := [ __n134 ];
__n132["body"] := __n133;
__n124["consequent"] := __n132;
__n124["alternate"] := null;
__n149 := {  };
__n149["type"] := "ForStatement";
__n150 := {  };
__n150["type"] := "VariableDeclaration";
__n152 := {  };
__n152["type"] := "VariableDeclarator";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "index";
__n152["id"] := __n153;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := 0.;
__n154["raw"] := "0";
__n152["init"] := __n154;
__n151 := [ __n152 ];
__n150["declarations"] := __n151;
__n150["kind"] := "var";
__n149["init"] := __n150;
__n155 := {  };
__n155["type"] := "BinaryExpression";
__n155["operator"] := "<";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "index";
__n155["left"] := __n156;
__n157 := {  };
__n157["type"] := "MemberExpression";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "__expected";
__n157["object"] := __n158;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "length";
__n159["raw"] := "\"length\"";
__n157["property"] := __n159;
__n157["computed"] := true;
__n155["right"] := __n157;
__n149["test"] := __n155;
__n160 := {  };
__n160["type"] := "UpdateExpression";
__n160["operator"] := "++";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "index";
__n160["argument"] := __n161;
__n160["prefix"] := false;
__n149["update"] := __n160;
__n162 := {  };
__n162["type"] := "BlockStatement";
__n164 := {  };
__n164["type"] := "IfStatement";
__n165 := {  };
__n165["type"] := "BinaryExpression";
__n165["operator"] := "!==";
__n166 := {  };
__n166["type"] := "MemberExpression";
__n166["computed"] := true;
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "__executed";
__n166["object"] := __n167;
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "index";
__n166["property"] := __n168;
__n165["left"] := __n166;
__n169 := {  };
__n169["type"] := "MemberExpression";
__n169["computed"] := true;
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "__expected";
__n169["object"] := __n170;
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "index";
__n169["property"] := __n171;
__n165["right"] := __n169;
__n164["test"] := __n165;
__n172 := {  };
__n172["type"] := "BlockStatement";
__n174 := {  };
__n174["type"] := "ExpressionStatement";
__n175 := {  };
__n175["type"] := "CallExpression";
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "$ERROR";
__n175["callee"] := __n176;
__n178 := {  };
__n178["type"] := "BinaryExpression";
__n178["operator"] := "+";
__n179 := {  };
__n179["type"] := "BinaryExpression";
__n179["operator"] := "+";
__n180 := {  };
__n180["type"] := "BinaryExpression";
__n180["operator"] := "+";
__n181 := {  };
__n181["type"] := "BinaryExpression";
__n181["operator"] := "+";
__n182 := {  };
__n182["type"] := "BinaryExpression";
__n182["operator"] := "+";
__n183 := {  };
__n183["type"] := "Literal";
__n183["value"] := "#4: __executed = /([Jj]ava([Ss]cript)?)\\sis\\s(fun\\w*)/.exec(\"Learning javaScript is funny, really\"); __executed[";
__n183["raw"] := "'#4: __executed = /([Jj]ava([Ss]cript)?)\\\\sis\\\\s(fun\\\\w*)/.exec(\"Learning javaScript is funny, really\"); __executed['";
__n182["left"] := __n183;
__n184 := {  };
__n184["type"] := "Identifier";
__n184["name"] := "index";
__n182["right"] := __n184;
__n181["left"] := __n182;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "] === ";
__n185["raw"] := "'] === '";
__n181["right"] := __n185;
__n180["left"] := __n181;
__n186 := {  };
__n186["type"] := "MemberExpression";
__n186["computed"] := true;
__n187 := {  };
__n187["type"] := "Identifier";
__n187["name"] := "__expected";
__n186["object"] := __n187;
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "index";
__n186["property"] := __n188;
__n180["right"] := __n186;
__n179["left"] := __n180;
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := ". Actual: ";
__n189["raw"] := "'. Actual: '";
__n179["right"] := __n189;
__n178["left"] := __n179;
__n190 := {  };
__n190["type"] := "MemberExpression";
__n190["computed"] := true;
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "__executed";
__n190["object"] := __n191;
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "index";
__n190["property"] := __n192;
__n178["right"] := __n190;
__n177 := [ __n178 ];
__n175["arguments"] := __n177;
__n174["expression"] := __n175;
__n173 := [ __n174 ];
__n172["body"] := __n173;
__n164["consequent"] := __n172;
__n164["alternate"] := null;
__n163 := [ __n164 ];
__n162["body"] := __n163;
__n149["body"] := __n162;
__n1 := [ __n2, __n52, __n62, __n68, __n74, __n99, __n124, __n149 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n193 := [ "__executed", "__expected", "index" ];
__n0["variableDeclarations"] := __n193;
__n194 := [  ];
__n0["functionDeclarations"] := __n194;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}