function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__executed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "/nd|ne/";
__n8["raw"] := "/nd|ne/";
__n8["source"] := "nd|ne";
__n9 := {  };
__n9["type"] := "RegExp";
__n10 := {  };
__n10["type"] := "Disjunction";
__n11 := {  };
__n11["type"] := "Alternative";
__n13 := {  };
__n13["type"] := "Char";
__n13["value"] := "n";
__n13["kind"] := "simple";
__n13["symbol"] := "n";
__n13["codePoint"] := 110.;
__n14 := {  };
__n14["type"] := "Char";
__n14["value"] := "d";
__n14["kind"] := "simple";
__n14["symbol"] := "d";
__n14["codePoint"] := 100.;
__n12 := [ __n13, __n14 ];
__n11["expressions"] := __n12;
__n10["left"] := __n11;
__n15 := {  };
__n15["type"] := "Alternative";
__n17 := {  };
__n17["type"] := "Char";
__n17["value"] := "n";
__n17["kind"] := "simple";
__n17["symbol"] := "n";
__n17["codePoint"] := 110.;
__n18 := {  };
__n18["type"] := "Char";
__n18["value"] := "e";
__n18["kind"] := "simple";
__n18["symbol"] := "e";
__n18["codePoint"] := 101.;
__n16 := [ __n17, __n18 ];
__n15["expressions"] := __n16;
__n10["right"] := __n15;
__n9["body"] := __n10;
__n9["flags"] := "";
__n9["nCaps"] := 0.;
__n8["regex"] := __n9;
__n7["object"] := __n8;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "exec";
__n19["raw"] := "\"exec\"";
__n7["property"] := __n19;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "undefined";
__n20 := [ __n21 ];
__n6["arguments"] := __n20;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n22 := {  };
__n22["type"] := "VariableDeclaration";
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "__expected";
__n24["id"] := __n25;
__n26 := {  };
__n26["type"] := "ArrayExpression";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "nd";
__n28["raw"] := "\"nd\"";
__n27 := [ __n28 ];
__n26["elements"] := __n27;
__n24["init"] := __n26;
__n23 := [ __n24 ];
__n22["declarations"] := __n23;
__n22["kind"] := "var";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "AssignmentExpression";
__n30["operator"] := "=";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "__expected";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "index";
__n33["raw"] := "\"index\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["left"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1.;
__n34["raw"] := "1";
__n30["right"] := __n34;
__n29["expression"] := __n30;
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "AssignmentExpression";
__n36["operator"] := "=";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "__expected";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "input";
__n39["raw"] := "\"input\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "undefined";
__n40["raw"] := "\"undefined\"";
__n36["right"] := __n40;
__n35["expression"] := __n36;
__n41 := {  };
__n41["type"] := "IfStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "!==";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "instanceof";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "__executed";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Array";
__n43["right"] := __n45;
__n42["left"] := __n43;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := true;
__n46["raw"] := "true";
__n42["right"] := __n46;
__n41["test"] := __n42;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#0: __executed = /nd|ne/.exec(undefined); (__executed instanceof Array) === true";
__n53["raw"] := "'#0: __executed = /nd|ne/.exec(undefined); (__executed instanceof Array) === true'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n41["consequent"] := __n47;
__n41["alternate"] := null;
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "__executed";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "length";
__n58["raw"] := "\"length\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["left"] := __n56;
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "__expected";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "length";
__n61["raw"] := "\"length\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n55["right"] := __n59;
__n54["test"] := __n55;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "$ERROR";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "+";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "+";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "+";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "#1: __executed = /nd|ne/.exec(undefined); __executed.length === ";
__n71["raw"] := "'#1: __executed = /nd|ne/.exec(undefined); __executed.length === '";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "__expected";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "length";
__n74["raw"] := "\"length\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n70["right"] := __n72;
__n69["left"] := __n70;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := ". Actual: ";
__n75["raw"] := "'. Actual: '";
__n69["right"] := __n75;
__n68["left"] := __n69;
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "__executed";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "length";
__n78["raw"] := "\"length\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n68["right"] := __n76;
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n54["consequent"] := __n62;
__n54["alternate"] := null;
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!==";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "__executed";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "index";
__n83["raw"] := "\"index\"";
__n81["property"] := __n83;
__n81["computed"] := true;
__n80["left"] := __n81;
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "__expected";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "index";
__n86["raw"] := "\"index\"";
__n84["property"] := __n86;
__n84["computed"] := true;
__n80["right"] := __n84;
__n79["test"] := __n80;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "$ERROR";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "+";
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "+";
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "+";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "#2: __executed = /nd|ne/.exec(undefined); __executed.index === ";
__n96["raw"] := "'#2: __executed = /nd|ne/.exec(undefined); __executed.index === '";
__n95["left"] := __n96;
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "__expected";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "index";
__n99["raw"] := "\"index\"";
__n97["property"] := __n99;
__n97["computed"] := true;
__n95["right"] := __n97;
__n94["left"] := __n95;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := ". Actual: ";
__n100["raw"] := "'. Actual: '";
__n94["right"] := __n100;
__n93["left"] := __n94;
__n101 := {  };
__n101["type"] := "MemberExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "__executed";
__n101["object"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "index";
__n103["raw"] := "\"index\"";
__n101["property"] := __n103;
__n101["computed"] := true;
__n93["right"] := __n101;
__n92 := [ __n93 ];
__n90["arguments"] := __n92;
__n89["expression"] := __n90;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n79["consequent"] := __n87;
__n79["alternate"] := null;
__n104 := {  };
__n104["type"] := "IfStatement";
__n105 := {  };
__n105["type"] := "BinaryExpression";
__n105["operator"] := "!==";
__n106 := {  };
__n106["type"] := "MemberExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "__executed";
__n106["object"] := __n107;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "input";
__n108["raw"] := "\"input\"";
__n106["property"] := __n108;
__n106["computed"] := true;
__n105["left"] := __n106;
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "__expected";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "input";
__n111["raw"] := "\"input\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n105["right"] := __n109;
__n104["test"] := __n105;
__n112 := {  };
__n112["type"] := "BlockStatement";
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "$ERROR";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "BinaryExpression";
__n118["operator"] := "+";
__n119 := {  };
__n119["type"] := "BinaryExpression";
__n119["operator"] := "+";
__n120 := {  };
__n120["type"] := "BinaryExpression";
__n120["operator"] := "+";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "#3: __executed = /nd|ne/.exec(undefined); __executed.input === ";
__n121["raw"] := "'#3: __executed = /nd|ne/.exec(undefined); __executed.input === '";
__n120["left"] := __n121;
__n122 := {  };
__n122["type"] := "MemberExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "__expected";
__n122["object"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "input";
__n124["raw"] := "\"input\"";
__n122["property"] := __n124;
__n122["computed"] := true;
__n120["right"] := __n122;
__n119["left"] := __n120;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := ". Actual: ";
__n125["raw"] := "'. Actual: '";
__n119["right"] := __n125;
__n118["left"] := __n119;
__n126 := {  };
__n126["type"] := "MemberExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "__executed";
__n126["object"] := __n127;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := "input";
__n128["raw"] := "\"input\"";
__n126["property"] := __n128;
__n126["computed"] := true;
__n118["right"] := __n126;
__n117 := [ __n118 ];
__n115["arguments"] := __n117;
__n114["expression"] := __n115;
__n113 := [ __n114 ];
__n112["body"] := __n113;
__n104["consequent"] := __n112;
__n104["alternate"] := null;
__n129 := {  };
__n129["type"] := "ForStatement";
__n130 := {  };
__n130["type"] := "VariableDeclaration";
__n132 := {  };
__n132["type"] := "VariableDeclarator";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "index";
__n132["id"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 0.;
__n134["raw"] := "0";
__n132["init"] := __n134;
__n131 := [ __n132 ];
__n130["declarations"] := __n131;
__n130["kind"] := "var";
__n129["init"] := __n130;
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "<";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "index";
__n135["left"] := __n136;
__n137 := {  };
__n137["type"] := "MemberExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "__expected";
__n137["object"] := __n138;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "length";
__n139["raw"] := "\"length\"";
__n137["property"] := __n139;
__n137["computed"] := true;
__n135["right"] := __n137;
__n129["test"] := __n135;
__n140 := {  };
__n140["type"] := "UpdateExpression";
__n140["operator"] := "++";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "index";
__n140["argument"] := __n141;
__n140["prefix"] := false;
__n129["update"] := __n140;
__n142 := {  };
__n142["type"] := "BlockStatement";
__n144 := {  };
__n144["type"] := "IfStatement";
__n145 := {  };
__n145["type"] := "BinaryExpression";
__n145["operator"] := "!==";
__n146 := {  };
__n146["type"] := "MemberExpression";
__n146["computed"] := true;
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "__executed";
__n146["object"] := __n147;
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "index";
__n146["property"] := __n148;
__n145["left"] := __n146;
__n149 := {  };
__n149["type"] := "MemberExpression";
__n149["computed"] := true;
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "__expected";
__n149["object"] := __n150;
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "index";
__n149["property"] := __n151;
__n145["right"] := __n149;
__n144["test"] := __n145;
__n152 := {  };
__n152["type"] := "BlockStatement";
__n154 := {  };
__n154["type"] := "ExpressionStatement";
__n155 := {  };
__n155["type"] := "CallExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "$ERROR";
__n155["callee"] := __n156;
__n158 := {  };
__n158["type"] := "BinaryExpression";
__n158["operator"] := "+";
__n159 := {  };
__n159["type"] := "BinaryExpression";
__n159["operator"] := "+";
__n160 := {  };
__n160["type"] := "BinaryExpression";
__n160["operator"] := "+";
__n161 := {  };
__n161["type"] := "BinaryExpression";
__n161["operator"] := "+";
__n162 := {  };
__n162["type"] := "BinaryExpression";
__n162["operator"] := "+";
__n163 := {  };
__n163["type"] := "Literal";
__n163["value"] := "#4: __executed = /nd|ne/.exec(undefined); __executed[";
__n163["raw"] := "'#4: __executed = /nd|ne/.exec(undefined); __executed['";
__n162["left"] := __n163;
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "index";
__n162["right"] := __n164;
__n161["left"] := __n162;
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := "] === ";
__n165["raw"] := "'] === '";
__n161["right"] := __n165;
__n160["left"] := __n161;
__n166 := {  };
__n166["type"] := "MemberExpression";
__n166["computed"] := true;
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "__expected";
__n166["object"] := __n167;
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "index";
__n166["property"] := __n168;
__n160["right"] := __n166;
__n159["left"] := __n160;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := ". Actual: ";
__n169["raw"] := "'. Actual: '";
__n159["right"] := __n169;
__n158["left"] := __n159;
__n170 := {  };
__n170["type"] := "MemberExpression";
__n170["computed"] := true;
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "__executed";
__n170["object"] := __n171;
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "index";
__n170["property"] := __n172;
__n158["right"] := __n170;
__n157 := [ __n158 ];
__n155["arguments"] := __n157;
__n154["expression"] := __n155;
__n153 := [ __n154 ];
__n152["body"] := __n153;
__n144["consequent"] := __n152;
__n144["alternate"] := null;
__n143 := [ __n144 ];
__n142["body"] := __n143;
__n129["body"] := __n142;
__n1 := [ __n2, __n22, __n29, __n35, __n41, __n54, __n79, __n104, __n129 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n173 := [ "__executed", "__expected", "index" ];
__n0["variableDeclarations"] := __n173;
__n174 := [  ];
__n0["functionDeclarations"] := __n174;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}