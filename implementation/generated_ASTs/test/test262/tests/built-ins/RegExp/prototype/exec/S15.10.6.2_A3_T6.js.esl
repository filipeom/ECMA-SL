function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__re";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "/(\\d+)/g";
__n6["raw"] := "/(\\d+)/g";
__n6["source"] := "(\\d+)";
__n7 := {  };
__n7["type"] := "RegExp";
__n8 := {  };
__n8["type"] := "Group";
__n8["capturing"] := true;
__n8["number"] := 1.;
__n9 := {  };
__n9["type"] := "Repetition";
__n10 := {  };
__n10["type"] := "Char";
__n10["value"] := "\\d";
__n10["kind"] := "meta";
__n10["symbol"] := 'undefined;
__n10["codePoint"] := nan;
__n9["expression"] := __n10;
__n11 := {  };
__n11["type"] := "Quantifier";
__n11["kind"] := "+";
__n11["greedy"] := true;
__n9["quantifier"] := __n11;
__n9["parenIndex"] := 1.;
__n9["parenCount"] := 1.;
__n8["expression"] := __n9;
__n7["body"] := __n8;
__n7["flags"] := "g";
__n7["nCaps"] := 1.;
__n6["regex"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "__matched";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "ArrayExpression";
__n17 := [  ];
__n16["elements"] := __n17;
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "__expected";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "ArrayExpression";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "123";
__n24["raw"] := "\"123\"";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "456";
__n25["raw"] := "\"456\"";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "789";
__n26["raw"] := "\"789\"";
__n23 := [ __n24, __n25, __n26 ];
__n22["elements"] := __n23;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n27 := {  };
__n27["type"] := "DoWhileStatement";
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "VariableDeclaration";
__n32 := {  };
__n32["type"] := "VariableDeclarator";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "__executed";
__n32["id"] := __n33;
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "__re";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "exec";
__n37["raw"] := "\"exec\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "123 456 789";
__n39["raw"] := "\"123 456 789\"";
__n38 := [ __n39 ];
__n34["arguments"] := __n38;
__n32["init"] := __n34;
__n31 := [ __n32 ];
__n30["declarations"] := __n31;
__n30["kind"] := "var";
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "!==";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "__executed";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 'null;
__n43["raw"] := "\"'null\"";
__n41["right"] := __n43;
__n40["test"] := __n41;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "__matched";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "push";
__n50["raw"] := "\"push\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "MemberExpression";
__n52["computed"] := true;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "__executed";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 0.;
__n54["raw"] := "0";
__n52["property"] := __n54;
__n51 := [ __n52 ];
__n47["arguments"] := __n51;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n40["consequent"] := __n44;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "BreakStatement";
__n57["label"] := null;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n40["alternate"] := __n55;
__n29 := [ __n30, __n40 ];
__n28["body"] := __n29;
__n27["body"] := __n28;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := true;
__n58["raw"] := "true";
__n27["test"] := __n58;
__n59 := {  };
__n59["type"] := "IfStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "!==";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "__expected";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "length";
__n63["raw"] := "\"length\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["left"] := __n61;
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "__matched";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "length";
__n66["raw"] := "\"length\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n60["right"] := __n64;
__n59["test"] := __n60;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "+";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "+";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "+";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "#1: __executed = /(\\d+)/g.exec(\"123 456 789\"); __matched.length === ";
__n76["raw"] := "'#1: __executed = /(\\\\d+)/g.exec(\"123 456 789\"); __matched.length === '";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "__expected";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "length";
__n79["raw"] := "\"length\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n75["right"] := __n77;
__n74["left"] := __n75;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := ".Actual: ";
__n80["raw"] := "'.Actual: '";
__n74["right"] := __n80;
__n73["left"] := __n74;
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "__matched";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "length";
__n83["raw"] := "\"length\"";
__n81["property"] := __n83;
__n81["computed"] := true;
__n73["right"] := __n81;
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n59["consequent"] := __n67;
__n59["alternate"] := null;
__n84 := {  };
__n84["type"] := "ForStatement";
__n85 := {  };
__n85["type"] := "VariableDeclaration";
__n87 := {  };
__n87["type"] := "VariableDeclarator";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "index";
__n87["id"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 0.;
__n89["raw"] := "0";
__n87["init"] := __n89;
__n86 := [ __n87 ];
__n85["declarations"] := __n86;
__n85["kind"] := "var";
__n84["init"] := __n85;
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "<";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "index";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "MemberExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "__expected";
__n92["object"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "length";
__n94["raw"] := "\"length\"";
__n92["property"] := __n94;
__n92["computed"] := true;
__n90["right"] := __n92;
__n84["test"] := __n90;
__n95 := {  };
__n95["type"] := "UpdateExpression";
__n95["operator"] := "++";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "index";
__n95["argument"] := __n96;
__n95["prefix"] := false;
__n84["update"] := __n95;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "IfStatement";
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "!==";
__n101 := {  };
__n101["type"] := "MemberExpression";
__n101["computed"] := true;
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "__expected";
__n101["object"] := __n102;
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "index";
__n101["property"] := __n103;
__n100["left"] := __n101;
__n104 := {  };
__n104["type"] := "MemberExpression";
__n104["computed"] := true;
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "__matched";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "index";
__n104["property"] := __n106;
__n100["right"] := __n104;
__n99["test"] := __n100;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "$ERROR";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := "+";
__n114 := {  };
__n114["type"] := "BinaryExpression";
__n114["operator"] := "+";
__n115 := {  };
__n115["type"] := "BinaryExpression";
__n115["operator"] := "+";
__n116 := {  };
__n116["type"] := "BinaryExpression";
__n116["operator"] := "+";
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "+";
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "#2: __executed = /(\\d+)/g.exec(\"123 456 789\"); __matched[";
__n118["raw"] := "'#2: __executed = /(\\\\d+)/g.exec(\"123 456 789\"); __matched['";
__n117["left"] := __n118;
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "index";
__n117["right"] := __n119;
__n116["left"] := __n117;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "] === ";
__n120["raw"] := "'] === '";
__n116["right"] := __n120;
__n115["left"] := __n116;
__n121 := {  };
__n121["type"] := "MemberExpression";
__n121["computed"] := true;
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "__expected";
__n121["object"] := __n122;
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "index";
__n121["property"] := __n123;
__n115["right"] := __n121;
__n114["left"] := __n115;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := ". Actual: ";
__n124["raw"] := "'. Actual: '";
__n114["right"] := __n124;
__n113["left"] := __n114;
__n125 := {  };
__n125["type"] := "MemberExpression";
__n125["computed"] := true;
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "__matched";
__n125["object"] := __n126;
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "index";
__n125["property"] := __n127;
__n113["right"] := __n125;
__n112 := [ __n113 ];
__n110["arguments"] := __n112;
__n109["expression"] := __n110;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n99["consequent"] := __n107;
__n99["alternate"] := null;
__n98 := [ __n99 ];
__n97["body"] := __n98;
__n84["body"] := __n97;
__n1 := [ __n2, __n12, __n18, __n27, __n59, __n84 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n128 := [ "__re", "__matched", "__expected", "__executed", "index" ];
__n0["variableDeclarations"] := __n128;
__n129 := [  ];
__n0["functionDeclarations"] := __n129;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}