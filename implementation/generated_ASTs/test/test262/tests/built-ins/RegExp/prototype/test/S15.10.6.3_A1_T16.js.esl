function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__re";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "/undefined/";
__n6["raw"] := "/undefined/";
__n6["source"] := "undefined";
__n7 := {  };
__n7["type"] := "RegExp";
__n8 := {  };
__n8["type"] := "Alternative";
__n10 := {  };
__n10["type"] := "Char";
__n10["value"] := "u";
__n10["kind"] := "simple";
__n10["symbol"] := "u";
__n10["codePoint"] := 117.;
__n11 := {  };
__n11["type"] := "Char";
__n11["value"] := "n";
__n11["kind"] := "simple";
__n11["symbol"] := "n";
__n11["codePoint"] := 110.;
__n12 := {  };
__n12["type"] := "Char";
__n12["value"] := "d";
__n12["kind"] := "simple";
__n12["symbol"] := "d";
__n12["codePoint"] := 100.;
__n13 := {  };
__n13["type"] := "Char";
__n13["value"] := "e";
__n13["kind"] := "simple";
__n13["symbol"] := "e";
__n13["codePoint"] := 101.;
__n14 := {  };
__n14["type"] := "Char";
__n14["value"] := "f";
__n14["kind"] := "simple";
__n14["symbol"] := "f";
__n14["codePoint"] := 102.;
__n15 := {  };
__n15["type"] := "Char";
__n15["value"] := "i";
__n15["kind"] := "simple";
__n15["symbol"] := "i";
__n15["codePoint"] := 105.;
__n16 := {  };
__n16["type"] := "Char";
__n16["value"] := "n";
__n16["kind"] := "simple";
__n16["symbol"] := "n";
__n16["codePoint"] := 110.;
__n17 := {  };
__n17["type"] := "Char";
__n17["value"] := "e";
__n17["kind"] := "simple";
__n17["symbol"] := "e";
__n17["codePoint"] := 101.;
__n18 := {  };
__n18["type"] := "Char";
__n18["value"] := "d";
__n18["kind"] := "simple";
__n18["symbol"] := "d";
__n18["codePoint"] := 100.;
__n9 := [ __n10, __n11, __n12, __n13, __n14, __n15, __n16, __n17, __n18 ];
__n8["expressions"] := __n9;
__n7["body"] := __n8;
__n7["flags"] := "";
__n7["nCaps"] := 0.;
__n6["regex"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!==";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__re";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "test";
__n24["raw"] := "\"test\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n25 := [  ];
__n21["arguments"] := __n25;
__n20["left"] := __n21;
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "!==";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "__re";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "exec";
__n30["raw"] := "\"exec\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n31 := [  ];
__n27["arguments"] := __n31;
__n26["left"] := __n27;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 'null;
__n32["raw"] := "\"'null\"";
__n26["right"] := __n32;
__n20["right"] := __n26;
__n19["test"] := __n20;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "$ERROR";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "#0: __re = /undefined/; __re.test() === (__re.exec() !== null)";
__n39["raw"] := "'#0: __re = /undefined/; __re.test() === (__re.exec() !== null)'";
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["expression"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n19["consequent"] := __n33;
__n19["alternate"] := null;
__n1 := [ __n2, __n19 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n40 := [ "__re" ];
__n0["variableDeclarations"] := __n40;
__n41 := [  ];
__n0["functionDeclarations"] := __n41;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}