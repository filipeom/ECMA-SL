function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "expects";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 1.;
__n8["raw"] := "1";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 3.;
__n9["raw"] := "3";
__n7 := [ __n8, __n9 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "s";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "NewExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Set";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "ArrayExpression";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 2.;
__n20["raw"] := "2";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 3.;
__n21["raw"] := "3";
__n18 := [ __n19, __n20, __n21 ];
__n17["elements"] := __n18;
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "s";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "delete";
__n26["raw"] := "\"delete\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 2.;
__n28["raw"] := "2";
__n27 := [ __n28 ];
__n23["arguments"] := __n27;
__n22["expression"] := __n23;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "s";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "forEach";
__n33["raw"] := "\"forEach\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "FunctionExpression";
__n35["id"] := null;
__n36 := [ "value", "entry", "set" ];
__n35["params"] := __n36;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "VariableDeclaration";
__n41 := {  };
__n41["type"] := "VariableDeclarator";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "expect";
__n41["id"] := __n42;
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "expects";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "shift";
__n46["raw"] := "\"shift\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n47 := [  ];
__n43["arguments"] := __n47;
__n41["init"] := __n43;
__n40 := [ __n41 ];
__n39["declarations"] := __n40;
__n39["kind"] := "var";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "assert";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "sameValue";
__n52["raw"] := "\"sameValue\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "value";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "expect";
__n53 := [ __n54, __n55 ];
__n49["arguments"] := __n53;
__n48["expression"] := __n49;
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "assert";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "sameValue";
__n60["raw"] := "\"sameValue\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "entry";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "expect";
__n61 := [ __n62, __n63 ];
__n57["arguments"] := __n61;
__n56["expression"] := __n57;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "assert";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "sameValue";
__n68["raw"] := "\"sameValue\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "set";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "s";
__n69 := [ __n70, __n71 ];
__n65["arguments"] := __n69;
__n64["expression"] := __n65;
__n38 := [ __n39, __n48, __n56, __n64 ];
__n37["body"] := __n38;
__n72 := [ "expect" ];
__n37["variableDeclarations"] := __n72;
__n73 := [  ];
__n37["functionDeclarations"] := __n73;
__n37["codeType"] := "function";
__n37["strict"] := false;
__n35["body"] := __n37;
__n35["generator"] := false;
__n35["async"] := false;
__n35["expression"] := false;
__n34 := [ __n35 ];
__n30["arguments"] := __n34;
__n29["expression"] := __n30;
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "assert";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "sameValue";
__n78["raw"] := "\"sameValue\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["callee"] := __n76;
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "expects";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "length";
__n82["raw"] := "\"length\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 0.;
__n83["raw"] := "0";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "`forEach` is not a no-op";
__n84["raw"] := "\"`forEach` is not a no-op\"";
__n79 := [ __n80, __n83, __n84 ];
__n75["arguments"] := __n79;
__n74["expression"] := __n75;
__n1 := [ __n2, __n10, __n22, __n29, __n74 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n85 := [ "expects", "s" ];
__n0["variableDeclarations"] := __n85;
__n86 := [  ];
__n0["functionDeclarations"] := __n86;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}