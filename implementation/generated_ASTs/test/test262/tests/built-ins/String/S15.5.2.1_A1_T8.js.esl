function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__stored__Function__prototype__toString";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Function";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "prototype";
__n9["raw"] := "\"prototype\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["object"] := __n7;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "toString";
__n10["raw"] := "\"toString\"";
__n6["property"] := __n10;
__n6["computed"] := true;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "AssignmentExpression";
__n12["operator"] := "=";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Function";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "prototype";
__n16["raw"] := "\"prototype\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["object"] := __n14;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "toString";
__n17["raw"] := "\"toString\"";
__n13["property"] := __n17;
__n13["computed"] := true;
__n12["left"] := __n13;
__n18 := {  };
__n18["type"] := "FunctionExpression";
__n18["id"] := null;
__n19 := [  ];
__n18["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ReturnStatement";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "SHIFTED";
__n23["raw"] := "\"SHIFTED\"";
__n22["argument"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n24 := [  ];
__n20["variableDeclarations"] := __n24;
__n25 := [  ];
__n20["functionDeclarations"] := __n25;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n18["body"] := __n20;
__n18["generator"] := false;
__n18["async"] := false;
__n18["expression"] := false;
__n12["right"] := __n18;
__n11["expression"] := __n12;
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "__str";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "NewExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "String";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "FunctionExpression";
__n33["id"] := null;
__n34 := [  ];
__n33["params"] := __n34;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n36 := [  ];
__n35["body"] := __n36;
__n37 := [  ];
__n35["variableDeclarations"] := __n37;
__n38 := [  ];
__n35["functionDeclarations"] := __n38;
__n35["codeType"] := "function";
__n35["strict"] := false;
__n33["body"] := __n35;
__n33["generator"] := false;
__n33["async"] := false;
__n33["expression"] := false;
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "AssignmentExpression";
__n40["operator"] := "=";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Function";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "prototype";
__n44["raw"] := "\"prototype\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["object"] := __n42;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "toString";
__n45["raw"] := "\"toString\"";
__n41["property"] := __n45;
__n41["computed"] := true;
__n40["left"] := __n41;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "__stored__Function__prototype__toString";
__n40["right"] := __n46;
__n39["expression"] := __n40;
__n47 := {  };
__n47["type"] := "IfStatement";
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "!==";
__n49 := {  };
__n49["type"] := "UnaryExpression";
__n49["operator"] := "typeof";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "__str";
__n49["argument"] := __n50;
__n49["prefix"] := true;
__n48["left"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "object";
__n51["raw"] := "\"object\"";
__n48["right"] := __n51;
__n47["test"] := __n48;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "+";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#1: __str = new String(function(){}); typeof __str === \"object\". Actual: typeof __str ===";
__n59["raw"] := "'#1: __str = new String(function(){}); typeof __str === \"object\". Actual: typeof __str ==='";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "UnaryExpression";
__n60["operator"] := "typeof";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "__str";
__n60["argument"] := __n61;
__n60["prefix"] := true;
__n58["right"] := __n60;
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n47["consequent"] := __n52;
__n47["alternate"] := null;
__n62 := {  };
__n62["type"] := "IfStatement";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "!==";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "__str";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "constructor";
__n66["raw"] := "\"constructor\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["left"] := __n64;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "String";
__n63["right"] := __n67;
__n62["test"] := __n63;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "$ERROR";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "+";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "#1.5: __str = new String(function(){}); __str.constructor === String. Actual: __str.constructor ===";
__n75["raw"] := "'#1.5: __str = new String(function(){}); __str.constructor === String. Actual: __str.constructor ==='";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "__str";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "constructor";
__n78["raw"] := "\"constructor\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n74["right"] := __n76;
__n73 := [ __n74 ];
__n71["arguments"] := __n73;
__n70["expression"] := __n71;
__n69 := [ __n70 ];
__n68["body"] := __n69;
__n62["consequent"] := __n68;
__n62["alternate"] := null;
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!=";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "__str";
__n80["left"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "SHIFTED";
__n82["raw"] := "\"SHIFTED\"";
__n80["right"] := __n82;
__n79["test"] := __n80;
__n83 := {  };
__n83["type"] := "BlockStatement";
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "$ERROR";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "+";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "#2: Function.prototype.toString=function(){return \"SHIFTED\"}; __str = new String(function(){}); __str ==\"SHIFTED\". Actual: __str ==";
__n90["raw"] := "'#2: Function.prototype.toString=function(){return \"SHIFTED\"}; __str = new String(function(){}); __str ==\"SHIFTED\". Actual: __str =='";
__n89["left"] := __n90;
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "__str";
__n89["right"] := __n91;
__n88 := [ __n89 ];
__n86["arguments"] := __n88;
__n85["expression"] := __n86;
__n84 := [ __n85 ];
__n83["body"] := __n84;
__n79["consequent"] := __n83;
__n79["alternate"] := null;
__n1 := [ __n2, __n11, __n26, __n39, __n47, __n62, __n79 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n92 := [ "__stored__Function__prototype__toString", "__str" ];
__n0["variableDeclarations"] := __n92;
__n93 := [  ];
__n0["functionDeclarations"] := __n93;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}