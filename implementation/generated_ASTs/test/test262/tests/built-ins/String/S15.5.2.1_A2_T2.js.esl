function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__str__obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "shocking blue";
__n9["raw"] := "\"shocking blue\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "IfStatement";
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "!==";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n12["computed"] := true;
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "__str__obj";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "__custom__prop";
__n14["raw"] := "\"__custom__prop\"";
__n12["property"] := __n14;
__n11["left"] := __n12;
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "undefined";
__n11["right"] := __n15;
__n10["test"] := __n11;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "$ERROR";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "+";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "#1: var __str__obj = new String(\"shocking blue\"); __str__obj[\"__custom__prop\"]===undefined. Actual: __str__obj[\"__custom__prop\"]===";
__n23["raw"] := "'#1: var __str__obj = new String(\"shocking blue\"); __str__obj[\"__custom__prop\"]===undefined. Actual: __str__obj[\"__custom__prop\"]==='";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "MemberExpression";
__n24["computed"] := true;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "__str__obj";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "__custom__prop";
__n26["raw"] := "\"__custom__prop\"";
__n24["property"] := __n26;
__n22["right"] := __n24;
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n18["expression"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n10["consequent"] := __n16;
__n10["alternate"] := null;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "AssignmentExpression";
__n28["operator"] := "=";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "String";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "prototype";
__n32["raw"] := "\"prototype\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["object"] := __n30;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "__custom__prop";
__n33["raw"] := "\"__custom__prop\"";
__n29["property"] := __n33;
__n29["computed"] := true;
__n28["left"] := __n29;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "bor";
__n34["raw"] := "\"bor\"";
__n28["right"] := __n34;
__n27["expression"] := __n28;
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n37["computed"] := true;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "__str__obj";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "__custom__prop";
__n39["raw"] := "\"__custom__prop\"";
__n37["property"] := __n39;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "bor";
__n40["raw"] := "\"bor\"";
__n36["right"] := __n40;
__n35["test"] := __n36;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "$ERROR";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "+";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "#2: var __str__obj = new String(\"shocking blue\"); String.prototype.__custom__prop = \"bor\"; __str__obj[\"__custom__prop\"]===\"bor\". Actual: __str__obj[\"__custom__prop\"]===";
__n48["raw"] := "'#2: var __str__obj = new String(\"shocking blue\"); String.prototype.__custom__prop = \"bor\"; __str__obj[\"__custom__prop\"]===\"bor\". Actual: __str__obj[\"__custom__prop\"]==='";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "MemberExpression";
__n49["computed"] := true;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "__str__obj";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "__custom__prop";
__n51["raw"] := "\"__custom__prop\"";
__n49["property"] := __n51;
__n47["right"] := __n49;
__n46 := [ __n47 ];
__n44["arguments"] := __n46;
__n43["expression"] := __n44;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n35["consequent"] := __n41;
__n35["alternate"] := null;
__n1 := [ __n2, __n10, __n27, __n35 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n52 := [ "__str__obj" ];
__n0["variableDeclarations"] := __n52;
__n53 := [  ];
__n0["functionDeclarations"] := __n53;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}