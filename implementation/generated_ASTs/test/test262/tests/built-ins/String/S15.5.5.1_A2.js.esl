function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__str__instance";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "globglob";
__n9["raw"] := "\"globglob\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "IfStatement";
__n11 := {  };
__n11["type"] := "UnaryExpression";
__n11["operator"] := "!";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "__str__instance";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "hasOwnProperty";
__n15["raw"] := "\"hasOwnProperty\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["callee"] := __n13;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "length";
__n17["raw"] := "\"length\"";
__n16 := [ __n17 ];
__n12["arguments"] := __n16;
__n11["argument"] := __n12;
__n11["prefix"] := true;
__n10["test"] := __n11;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "$ERROR";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "+";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "#1: var __str__instance = new String(\"globglob\"); __str__instance.hasOwnProperty(\"length\") return true. Actual: ";
__n25["raw"] := "'#1: var __str__instance = new String(\"globglob\"); __str__instance.hasOwnProperty(\"length\") return true. Actual: '";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "__str__instance";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "hasOwnProperty";
__n29["raw"] := "\"hasOwnProperty\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "length";
__n31["raw"] := "\"length\"";
__n30 := [ __n31 ];
__n26["arguments"] := __n30;
__n24["right"] := __n26;
__n23 := [ __n24 ];
__n21["arguments"] := __n23;
__n20["expression"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n10["consequent"] := __n18;
__n10["alternate"] := null;
__n32 := {  };
__n32["type"] := "ForInStatement";
__n33 := {  };
__n33["type"] := "VariableDeclaration";
__n35 := {  };
__n35["type"] := "VariableDeclarator";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "prop";
__n35["id"] := __n36;
__n35["init"] := null;
__n34 := [ __n35 ];
__n33["declarations"] := __n34;
__n33["kind"] := "var";
__n32["left"] := __n33;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "__str__instance";
__n32["right"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "===";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "prop";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "length";
__n43["raw"] := "\"length\"";
__n41["right"] := __n43;
__n40["test"] := __n41;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$ERROR";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "#2: length property has the attributes {DontEnum}";
__n50["raw"] := "'#2: length property has the attributes {DontEnum}'";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n40["consequent"] := __n44;
__n40["alternate"] := null;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n32["body"] := __n38;
__n32["each"] := false;
__n1 := [ __n2, __n10, __n32 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n51 := [ "__str__instance", "prop" ];
__n0["variableDeclarations"] := __n51;
__n52 := [  ];
__n0["functionDeclarations"] := __n52;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}