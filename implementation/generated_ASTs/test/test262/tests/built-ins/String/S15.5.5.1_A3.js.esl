function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__str__instance";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "globglob";
__n9["raw"] := "\"globglob\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "IfStatement";
__n11 := {  };
__n11["type"] := "UnaryExpression";
__n11["operator"] := "!";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "__str__instance";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "hasOwnProperty";
__n15["raw"] := "\"hasOwnProperty\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["callee"] := __n13;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "length";
__n17["raw"] := "\"length\"";
__n16 := [ __n17 ];
__n12["arguments"] := __n16;
__n11["argument"] := __n12;
__n11["prefix"] := true;
__n10["test"] := __n11;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "$ERROR";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "+";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "#1: var __str__instance = new String(\"globglob\"); __str__instance.hasOwnProperty(\"length\") return true. Actual: ";
__n25["raw"] := "'#1: var __str__instance = new String(\"globglob\"); __str__instance.hasOwnProperty(\"length\") return true. Actual: '";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "__str__instance";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "hasOwnProperty";
__n29["raw"] := "\"hasOwnProperty\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "length";
__n31["raw"] := "\"length\"";
__n30 := [ __n31 ];
__n26["arguments"] := __n30;
__n24["right"] := __n26;
__n23 := [ __n24 ];
__n21["arguments"] := __n23;
__n20["expression"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n10["consequent"] := __n18;
__n10["alternate"] := null;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "verifyNotConfigurable";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "__str__instance";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "length";
__n37["raw"] := "\"length\"";
__n35 := [ __n36, __n37 ];
__n33["arguments"] := __n35;
__n32["expression"] := __n33;
__n38 := {  };
__n38["type"] := "TryStatement";
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "IfStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "===";
__n43 := {  };
__n43["type"] := "UnaryExpression";
__n43["operator"] := "delete";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "__str__instance";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "length";
__n46["raw"] := "\"length\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["argument"] := __n44;
__n43["prefix"] := true;
__n42["left"] := __n43;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := true;
__n47["raw"] := "true";
__n42["right"] := __n47;
__n41["test"] := __n42;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "$ERROR";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#2: var __str__instance = new String(\"globglob\"); delete __str__instance.length !== true";
__n54["raw"] := "'#2: var __str__instance = new String(\"globglob\"); delete __str__instance.length !== true'";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n41["consequent"] := __n48;
__n41["alternate"] := null;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n38["block"] := __n39;
__n55 := {  };
__n55["type"] := "CatchClause";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "e";
__n55["param"] := __n56;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "IfStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "instanceof";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "e";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "Test262Error";
__n60["right"] := __n62;
__n59["test"] := __n60;
__n63 := {  };
__n63["type"] := "ThrowStatement";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "e";
__n63["argument"] := __n64;
__n59["consequent"] := __n63;
__n59["alternate"] := null;
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "assert";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "instanceof";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "e";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "TypeError";
__n69["right"] := __n71;
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n58 := [ __n59, __n65 ];
__n57["body"] := __n58;
__n55["body"] := __n57;
__n38["handler"] := __n55;
__n38["finalizer"] := null;
__n72 := {  };
__n72["type"] := "IfStatement";
__n73 := {  };
__n73["type"] := "UnaryExpression";
__n73["operator"] := "!";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "__str__instance";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "hasOwnProperty";
__n77["raw"] := "\"hasOwnProperty\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "length";
__n79["raw"] := "\"length\"";
__n78 := [ __n79 ];
__n74["arguments"] := __n78;
__n73["argument"] := __n74;
__n73["prefix"] := true;
__n72["test"] := __n73;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#3: var __str__instance = new String(\"globglob\"); delete __str__instance.length; __str__instance.hasOwnProperty(\"length\") return true. Actual: ";
__n87["raw"] := "'#3: var __str__instance = new String(\"globglob\"); delete __str__instance.length; __str__instance.hasOwnProperty(\"length\") return true. Actual: '";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "__str__instance";
__n89["object"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "hasOwnProperty";
__n91["raw"] := "\"hasOwnProperty\"";
__n89["property"] := __n91;
__n89["computed"] := true;
__n88["callee"] := __n89;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "length";
__n93["raw"] := "\"length\"";
__n92 := [ __n93 ];
__n88["arguments"] := __n92;
__n86["right"] := __n88;
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n72["consequent"] := __n80;
__n72["alternate"] := null;
__n1 := [ __n2, __n10, __n32, __n38, __n72 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n94 := [ "__str__instance" ];
__n0["variableDeclarations"] := __n94;
__n95 := [  ];
__n0["functionDeclarations"] := __n95;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}