function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__str";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Object";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "";
__n9["raw"] := "\"\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "TryStatement";
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "NewExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "__str";
__n14["callee"] := __n15;
__n16 := [  ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "$ERROR";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "#1: __str = new Object(\"\"); \"new __str\" lead to throwing exception";
__n21["raw"] := "'#1: __str = new Object(\"\"); \"new __str\" lead to throwing exception'";
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n17["expression"] := __n18;
__n12 := [ __n13, __n17 ];
__n11["body"] := __n12;
__n10["block"] := __n11;
__n22 := {  };
__n22["type"] := "CatchClause";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "e";
__n22["param"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "IfStatement";
__n27 := {  };
__n27["type"] := "UnaryExpression";
__n27["operator"] := "!";
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "instanceof";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "e";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "TypeError";
__n28["right"] := __n30;
__n27["argument"] := __n28;
__n27["prefix"] := true;
__n26["test"] := __n27;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "$ERROR";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "+";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "#1.1: Exception is instance of TypeError. Actual: exception is ";
__n38["raw"] := "'#1.1: Exception is instance of TypeError. Actual: exception is '";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "e";
__n37["right"] := __n39;
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33["expression"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n26["consequent"] := __n31;
__n26["alternate"] := null;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n22["body"] := __n24;
__n10["handler"] := __n22;
__n10["finalizer"] := null;
__n1 := [ __n2, __n10 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n40 := [ "__str" ];
__n0["variableDeclarations"] := __n40;
__n41 := [  ];
__n0["functionDeclarations"] := __n41;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}