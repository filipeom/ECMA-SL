function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "VariableDeclaration";
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "__obj";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "ObjectExpression";
__n11 := {  };
__n11["type"] := "Property";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "toString";
__n11["key"] := __n12;
__n13 := {  };
__n13["type"] := "FunctionExpression";
__n13["id"] := null;
__n14 := [  ];
__n13["params"] := __n14;
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "ReturnStatement";
__n18 := {  };
__n18["type"] := "NewExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Object";
__n18["callee"] := __n19;
__n20 := [  ];
__n18["arguments"] := __n20;
__n17["argument"] := __n18;
__n16 := [ __n17 ];
__n15["body"] := __n16;
__n21 := [  ];
__n15["variableDeclarations"] := __n21;
__n22 := [  ];
__n15["functionDeclarations"] := __n22;
__n15["codeType"] := "function";
__n15["strict"] := false;
__n13["body"] := __n15;
__n13["generator"] := false;
__n13["expression"] := false;
__n13["async"] := false;
__n11["value"] := __n13;
__n11["computed"] := false;
__n11["kind"] := "init";
__n11["shorthand"] := false;
__n10 := [ __n11 ];
__n9["properties"] := __n10;
__n7["init"] := __n9;
__n6 := [ __n7 ];
__n5["declarations"] := __n6;
__n5["kind"] := "var";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "String";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "__obj";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "$ERROR";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "+";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "#1.1: var __obj = {toString: function() {return new Object();}}; String(__obj) throw TypeError. Actual: ";
__n33["raw"] := "'#1.1: var __obj = {toString: function() {return new Object();}}; String(__obj) throw TypeError. Actual: '";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "String";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "__obj";
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n32["right"] := __n34;
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n4 := [ __n5, __n23, __n28 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n38 := {  };
__n38["type"] := "CatchClause";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "e";
__n38["param"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "!==";
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "instanceof";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "e";
__n44["left"] := __n45;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "TypeError";
__n44["right"] := __n46;
__n43["left"] := __n44;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := true;
__n47["raw"] := "true";
__n43["right"] := __n47;
__n42["test"] := __n43;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "$ERROR";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "+";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "#1.2: var __obj = {toString: function() {return new Object();}}; String(__obj) throw TypeError. Actual: ";
__n55["raw"] := "'#1.2: var __obj = {toString: function() {return new Object();}}; String(__obj) throw TypeError. Actual: '";
__n54["left"] := __n55;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "e";
__n54["right"] := __n56;
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n42["consequent"] := __n48;
__n42["alternate"] := null;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n38["body"] := __n40;
__n2["handler"] := __n38;
__n2["finalizer"] := null;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n57 := [ "__obj" ];
__n0["variableDeclarations"] := __n57;
__n58 := [  ];
__n0["functionDeclarations"] := __n58;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}