function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "String";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "undefined";
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "undefined";
__n8["raw"] := "\"undefined\"";
__n3["right"] := __n8;
__n2["test"] := __n3;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "$ERROR";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "+";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "#1: String(undefined) === \"undefined\". Actual: ";
__n16["raw"] := "'#1: String(undefined) === \"undefined\". Actual: '";
__n15["left"] := __n16;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "String";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "undefined";
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n15["right"] := __n17;
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n2["consequent"] := __n9;
__n2["alternate"] := null;
__n21 := {  };
__n21["type"] := "IfStatement";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "!==";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "String";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "UnaryExpression";
__n26["operator"] := "void";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 0.;
__n27["raw"] := "0";
__n26["argument"] := __n27;
__n26["prefix"] := true;
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["left"] := __n23;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "undefined";
__n28["raw"] := "\"undefined\"";
__n22["right"] := __n28;
__n21["test"] := __n22;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "$ERROR";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "+";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "#2: String(void 0) === \"undefined\". Actual: ";
__n36["raw"] := "'#2: String(void 0) === \"undefined\". Actual: '";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "String";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "UnaryExpression";
__n40["operator"] := "void";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 0.;
__n41["raw"] := "0";
__n40["argument"] := __n41;
__n40["prefix"] := true;
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n35["right"] := __n37;
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n21["consequent"] := __n29;
__n21["alternate"] := null;
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "!==";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "String";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "eval";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "var x";
__n50["raw"] := "\"var x\"";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46 := [ __n47 ];
__n44["arguments"] := __n46;
__n43["left"] := __n44;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "undefined";
__n51["raw"] := "\"undefined\"";
__n43["right"] := __n51;
__n42["test"] := __n43;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "+";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#3: String(eval(\"var x\")) === \"undefined\" . Actual: ";
__n59["raw"] := "'#3: String(eval(\"var x\")) === \"undefined\" . Actual: '";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "String";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "eval";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "var x";
__n66["raw"] := "\"var x\"";
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n58["right"] := __n60;
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n42["consequent"] := __n52;
__n42["alternate"] := null;
__n1 := [ __n2, __n21, __n42 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n67 := [  ];
__n0["variableDeclarations"] := __n67;
__n68 := [  ];
__n0["functionDeclarations"] := __n68;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}