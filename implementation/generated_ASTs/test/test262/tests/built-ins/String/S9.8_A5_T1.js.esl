function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "String";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "NewExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Number";
__n7["callee"] := __n8;
__n9 := [  ];
__n7["arguments"] := __n9;
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "0";
__n10["raw"] := "\"0\"";
__n3["right"] := __n10;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: String(new Number()) === \"0\". Actual: ";
__n18["raw"] := "'#1: String(new Number()) === \"0\". Actual: '";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "String";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "NewExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Number";
__n22["callee"] := __n23;
__n24 := [  ];
__n22["arguments"] := __n24;
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n17["right"] := __n19;
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n2["alternate"] := null;
__n25 := {  };
__n25["type"] := "IfStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "!==";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "String";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "NewExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Number";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["left"] := __n27;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "0";
__n34["raw"] := "\"0\"";
__n26["right"] := __n34;
__n25["test"] := __n26;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#2: String(new Number(0)) === \"0\". Actual: ";
__n42["raw"] := "'#2: String(new Number(0)) === \"0\". Actual: '";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "String";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "NewExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "Number";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 0.;
__n49["raw"] := "0";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n41["right"] := __n43;
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n25["consequent"] := __n35;
__n25["alternate"] := null;
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "String";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "NewExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Number";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Number";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "NaN";
__n60["raw"] := "\"NaN\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54 := [ __n55 ];
__n52["arguments"] := __n54;
__n51["left"] := __n52;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "NaN";
__n61["raw"] := "\"NaN\"";
__n51["right"] := __n61;
__n50["test"] := __n51;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "$ERROR";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "+";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "#3: String(new Number(Number.NaN)) === Not-a-Number. Actual: ";
__n69["raw"] := "'#3: String(new Number(Number.NaN)) === Not-a-Number. Actual: '";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "String";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "NewExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "Number";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "Number";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "NaN";
__n78["raw"] := "\"NaN\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75 := [ __n76 ];
__n73["arguments"] := __n75;
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n68["right"] := __n70;
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n50["consequent"] := __n62;
__n50["alternate"] := null;
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!==";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "String";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "NewExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "Number";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 'null;
__n87["raw"] := "\"'null\"";
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83 := [ __n84 ];
__n81["arguments"] := __n83;
__n80["left"] := __n81;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "0";
__n88["raw"] := "\"0\"";
__n80["right"] := __n88;
__n79["test"] := __n80;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "$ERROR";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "+";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "#4: String(new Number(null)) === \"0\". Actual: ";
__n96["raw"] := "'#4: String(new Number(null)) === \"0\". Actual: '";
__n95["left"] := __n96;
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "String";
__n97["callee"] := __n98;
__n100 := {  };
__n100["type"] := "NewExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "Number";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := 'null;
__n103["raw"] := "\"'null\"";
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99 := [ __n100 ];
__n97["arguments"] := __n99;
__n95["right"] := __n97;
__n94 := [ __n95 ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n79["consequent"] := __n89;
__n79["alternate"] := null;
__n104 := {  };
__n104["type"] := "IfStatement";
__n105 := {  };
__n105["type"] := "BinaryExpression";
__n105["operator"] := "!==";
__n106 := {  };
__n106["type"] := "CallExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "String";
__n106["callee"] := __n107;
__n109 := {  };
__n109["type"] := "NewExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "Number";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "UnaryExpression";
__n112["operator"] := "void";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 0.;
__n113["raw"] := "0";
__n112["argument"] := __n113;
__n112["prefix"] := true;
__n111 := [ __n112 ];
__n109["arguments"] := __n111;
__n108 := [ __n109 ];
__n106["arguments"] := __n108;
__n105["left"] := __n106;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "NaN";
__n114["raw"] := "\"NaN\"";
__n105["right"] := __n114;
__n104["test"] := __n105;
__n115 := {  };
__n115["type"] := "BlockStatement";
__n117 := {  };
__n117["type"] := "ExpressionStatement";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "$ERROR";
__n118["callee"] := __n119;
__n121 := {  };
__n121["type"] := "BinaryExpression";
__n121["operator"] := "+";
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "#5: String(new Number(void 0)) === Not-a-Number. Actual: ";
__n122["raw"] := "'#5: String(new Number(void 0)) === Not-a-Number. Actual: '";
__n121["left"] := __n122;
__n123 := {  };
__n123["type"] := "CallExpression";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "String";
__n123["callee"] := __n124;
__n126 := {  };
__n126["type"] := "NewExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "Number";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "UnaryExpression";
__n129["operator"] := "void";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := 0.;
__n130["raw"] := "0";
__n129["argument"] := __n130;
__n129["prefix"] := true;
__n128 := [ __n129 ];
__n126["arguments"] := __n128;
__n125 := [ __n126 ];
__n123["arguments"] := __n125;
__n121["right"] := __n123;
__n120 := [ __n121 ];
__n118["arguments"] := __n120;
__n117["expression"] := __n118;
__n116 := [ __n117 ];
__n115["body"] := __n116;
__n104["consequent"] := __n115;
__n104["alternate"] := null;
__n131 := {  };
__n131["type"] := "IfStatement";
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := "!==";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "String";
__n133["callee"] := __n134;
__n136 := {  };
__n136["type"] := "NewExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "Number";
__n136["callee"] := __n137;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := true;
__n139["raw"] := "true";
__n138 := [ __n139 ];
__n136["arguments"] := __n138;
__n135 := [ __n136 ];
__n133["arguments"] := __n135;
__n132["left"] := __n133;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "1";
__n140["raw"] := "\"1\"";
__n132["right"] := __n140;
__n131["test"] := __n132;
__n141 := {  };
__n141["type"] := "BlockStatement";
__n143 := {  };
__n143["type"] := "ExpressionStatement";
__n144 := {  };
__n144["type"] := "CallExpression";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "$ERROR";
__n144["callee"] := __n145;
__n147 := {  };
__n147["type"] := "BinaryExpression";
__n147["operator"] := "+";
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "#6: String(new Number(true)) === \"1\". Actual: ";
__n148["raw"] := "'#6: String(new Number(true)) === \"1\". Actual: '";
__n147["left"] := __n148;
__n149 := {  };
__n149["type"] := "CallExpression";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "String";
__n149["callee"] := __n150;
__n152 := {  };
__n152["type"] := "NewExpression";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "Number";
__n152["callee"] := __n153;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := true;
__n155["raw"] := "true";
__n154 := [ __n155 ];
__n152["arguments"] := __n154;
__n151 := [ __n152 ];
__n149["arguments"] := __n151;
__n147["right"] := __n149;
__n146 := [ __n147 ];
__n144["arguments"] := __n146;
__n143["expression"] := __n144;
__n142 := [ __n143 ];
__n141["body"] := __n142;
__n131["consequent"] := __n141;
__n131["alternate"] := null;
__n156 := {  };
__n156["type"] := "IfStatement";
__n157 := {  };
__n157["type"] := "BinaryExpression";
__n157["operator"] := "!==";
__n158 := {  };
__n158["type"] := "CallExpression";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "String";
__n158["callee"] := __n159;
__n161 := {  };
__n161["type"] := "NewExpression";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "Number";
__n161["callee"] := __n162;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := false;
__n164["raw"] := "false";
__n163 := [ __n164 ];
__n161["arguments"] := __n163;
__n160 := [ __n161 ];
__n158["arguments"] := __n160;
__n157["left"] := __n158;
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := "0";
__n165["raw"] := "\"0\"";
__n157["right"] := __n165;
__n156["test"] := __n157;
__n166 := {  };
__n166["type"] := "BlockStatement";
__n168 := {  };
__n168["type"] := "ExpressionStatement";
__n169 := {  };
__n169["type"] := "CallExpression";
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "$ERROR";
__n169["callee"] := __n170;
__n172 := {  };
__n172["type"] := "BinaryExpression";
__n172["operator"] := "+";
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := "#7: String(new Number(false)) === \"0\". Actual: ";
__n173["raw"] := "'#7: String(new Number(false)) === \"0\". Actual: '";
__n172["left"] := __n173;
__n174 := {  };
__n174["type"] := "CallExpression";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "String";
__n174["callee"] := __n175;
__n177 := {  };
__n177["type"] := "NewExpression";
__n178 := {  };
__n178["type"] := "Identifier";
__n178["name"] := "Number";
__n177["callee"] := __n178;
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := false;
__n180["raw"] := "false";
__n179 := [ __n180 ];
__n177["arguments"] := __n179;
__n176 := [ __n177 ];
__n174["arguments"] := __n176;
__n172["right"] := __n174;
__n171 := [ __n172 ];
__n169["arguments"] := __n171;
__n168["expression"] := __n169;
__n167 := [ __n168 ];
__n166["body"] := __n167;
__n156["consequent"] := __n166;
__n156["alternate"] := null;
__n181 := {  };
__n181["type"] := "IfStatement";
__n182 := {  };
__n182["type"] := "BinaryExpression";
__n182["operator"] := "!==";
__n183 := {  };
__n183["type"] := "CallExpression";
__n184 := {  };
__n184["type"] := "Identifier";
__n184["name"] := "String";
__n183["callee"] := __n184;
__n186 := {  };
__n186["type"] := "NewExpression";
__n187 := {  };
__n187["type"] := "Identifier";
__n187["name"] := "Boolean";
__n186["callee"] := __n187;
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := true;
__n189["raw"] := "true";
__n188 := [ __n189 ];
__n186["arguments"] := __n188;
__n185 := [ __n186 ];
__n183["arguments"] := __n185;
__n182["left"] := __n183;
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := "true";
__n190["raw"] := "\"true\"";
__n182["right"] := __n190;
__n181["test"] := __n182;
__n191 := {  };
__n191["type"] := "BlockStatement";
__n193 := {  };
__n193["type"] := "ExpressionStatement";
__n194 := {  };
__n194["type"] := "CallExpression";
__n195 := {  };
__n195["type"] := "Identifier";
__n195["name"] := "$ERROR";
__n194["callee"] := __n195;
__n197 := {  };
__n197["type"] := "BinaryExpression";
__n197["operator"] := "+";
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := "#8: String(new Boolean(true)) === \"true\". Actual: ";
__n198["raw"] := "'#8: String(new Boolean(true)) === \"true\". Actual: '";
__n197["left"] := __n198;
__n199 := {  };
__n199["type"] := "CallExpression";
__n200 := {  };
__n200["type"] := "Identifier";
__n200["name"] := "String";
__n199["callee"] := __n200;
__n202 := {  };
__n202["type"] := "NewExpression";
__n203 := {  };
__n203["type"] := "Identifier";
__n203["name"] := "Boolean";
__n202["callee"] := __n203;
__n205 := {  };
__n205["type"] := "Literal";
__n205["value"] := true;
__n205["raw"] := "true";
__n204 := [ __n205 ];
__n202["arguments"] := __n204;
__n201 := [ __n202 ];
__n199["arguments"] := __n201;
__n197["right"] := __n199;
__n196 := [ __n197 ];
__n194["arguments"] := __n196;
__n193["expression"] := __n194;
__n192 := [ __n193 ];
__n191["body"] := __n192;
__n181["consequent"] := __n191;
__n181["alternate"] := null;
__n206 := {  };
__n206["type"] := "IfStatement";
__n207 := {  };
__n207["type"] := "BinaryExpression";
__n207["operator"] := "!==";
__n208 := {  };
__n208["type"] := "CallExpression";
__n209 := {  };
__n209["type"] := "Identifier";
__n209["name"] := "String";
__n208["callee"] := __n209;
__n211 := {  };
__n211["type"] := "NewExpression";
__n212 := {  };
__n212["type"] := "Identifier";
__n212["name"] := "Boolean";
__n211["callee"] := __n212;
__n214 := {  };
__n214["type"] := "Literal";
__n214["value"] := false;
__n214["raw"] := "false";
__n213 := [ __n214 ];
__n211["arguments"] := __n213;
__n210 := [ __n211 ];
__n208["arguments"] := __n210;
__n207["left"] := __n208;
__n215 := {  };
__n215["type"] := "Literal";
__n215["value"] := "false";
__n215["raw"] := "\"false\"";
__n207["right"] := __n215;
__n206["test"] := __n207;
__n216 := {  };
__n216["type"] := "BlockStatement";
__n218 := {  };
__n218["type"] := "ExpressionStatement";
__n219 := {  };
__n219["type"] := "CallExpression";
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "$ERROR";
__n219["callee"] := __n220;
__n222 := {  };
__n222["type"] := "BinaryExpression";
__n222["operator"] := "+";
__n223 := {  };
__n223["type"] := "Literal";
__n223["value"] := "#9: Number(new Boolean(false)) === \"false\". Actual: ";
__n223["raw"] := "'#9: Number(new Boolean(false)) === \"false\". Actual: '";
__n222["left"] := __n223;
__n224 := {  };
__n224["type"] := "CallExpression";
__n225 := {  };
__n225["type"] := "Identifier";
__n225["name"] := "Number";
__n224["callee"] := __n225;
__n227 := {  };
__n227["type"] := "NewExpression";
__n228 := {  };
__n228["type"] := "Identifier";
__n228["name"] := "Boolean";
__n227["callee"] := __n228;
__n230 := {  };
__n230["type"] := "Literal";
__n230["value"] := false;
__n230["raw"] := "false";
__n229 := [ __n230 ];
__n227["arguments"] := __n229;
__n226 := [ __n227 ];
__n224["arguments"] := __n226;
__n222["right"] := __n224;
__n221 := [ __n222 ];
__n219["arguments"] := __n221;
__n218["expression"] := __n219;
__n217 := [ __n218 ];
__n216["body"] := __n217;
__n206["consequent"] := __n216;
__n206["alternate"] := null;
__n231 := {  };
__n231["type"] := "IfStatement";
__n232 := {  };
__n232["type"] := "BinaryExpression";
__n232["operator"] := "!==";
__n233 := {  };
__n233["type"] := "CallExpression";
__n234 := {  };
__n234["type"] := "Identifier";
__n234["name"] := "String";
__n233["callee"] := __n234;
__n236 := {  };
__n236["type"] := "NewExpression";
__n237 := {  };
__n237["type"] := "Identifier";
__n237["name"] := "Array";
__n236["callee"] := __n237;
__n239 := {  };
__n239["type"] := "Literal";
__n239["value"] := 2.;
__n239["raw"] := "2";
__n240 := {  };
__n240["type"] := "Literal";
__n240["value"] := 4.;
__n240["raw"] := "4";
__n241 := {  };
__n241["type"] := "Literal";
__n241["value"] := 8.;
__n241["raw"] := "8";
__n242 := {  };
__n242["type"] := "Literal";
__n242["value"] := 16.;
__n242["raw"] := "16";
__n243 := {  };
__n243["type"] := "Literal";
__n243["value"] := 32.;
__n243["raw"] := "32";
__n238 := [ __n239, __n240, __n241, __n242, __n243 ];
__n236["arguments"] := __n238;
__n235 := [ __n236 ];
__n233["arguments"] := __n235;
__n232["left"] := __n233;
__n244 := {  };
__n244["type"] := "Literal";
__n244["value"] := "2,4,8,16,32";
__n244["raw"] := "\"2,4,8,16,32\"";
__n232["right"] := __n244;
__n231["test"] := __n232;
__n245 := {  };
__n245["type"] := "BlockStatement";
__n247 := {  };
__n247["type"] := "ExpressionStatement";
__n248 := {  };
__n248["type"] := "CallExpression";
__n249 := {  };
__n249["type"] := "Identifier";
__n249["name"] := "$ERROR";
__n248["callee"] := __n249;
__n251 := {  };
__n251["type"] := "BinaryExpression";
__n251["operator"] := "+";
__n252 := {  };
__n252["type"] := "Literal";
__n252["value"] := "#10: String(new Array(2,4,8,16,32)) === \"2,4,8,16,32\". Actual: ";
__n252["raw"] := "'#10: String(new Array(2,4,8,16,32)) === \"2,4,8,16,32\". Actual: '";
__n251["left"] := __n252;
__n253 := {  };
__n253["type"] := "CallExpression";
__n254 := {  };
__n254["type"] := "Identifier";
__n254["name"] := "String";
__n253["callee"] := __n254;
__n256 := {  };
__n256["type"] := "NewExpression";
__n257 := {  };
__n257["type"] := "Identifier";
__n257["name"] := "Array";
__n256["callee"] := __n257;
__n259 := {  };
__n259["type"] := "Literal";
__n259["value"] := 2.;
__n259["raw"] := "2";
__n260 := {  };
__n260["type"] := "Literal";
__n260["value"] := 4.;
__n260["raw"] := "4";
__n261 := {  };
__n261["type"] := "Literal";
__n261["value"] := 8.;
__n261["raw"] := "8";
__n262 := {  };
__n262["type"] := "Literal";
__n262["value"] := 16.;
__n262["raw"] := "16";
__n263 := {  };
__n263["type"] := "Literal";
__n263["value"] := 32.;
__n263["raw"] := "32";
__n258 := [ __n259, __n260, __n261, __n262, __n263 ];
__n256["arguments"] := __n258;
__n255 := [ __n256 ];
__n253["arguments"] := __n255;
__n251["right"] := __n253;
__n250 := [ __n251 ];
__n248["arguments"] := __n250;
__n247["expression"] := __n248;
__n246 := [ __n247 ];
__n245["body"] := __n246;
__n231["consequent"] := __n245;
__n231["alternate"] := null;
__n264 := {  };
__n264["type"] := "VariableDeclaration";
__n266 := {  };
__n266["type"] := "VariableDeclarator";
__n267 := {  };
__n267["type"] := "Identifier";
__n267["name"] := "myobj1";
__n266["id"] := __n267;
__n268 := {  };
__n268["type"] := "ObjectExpression";
__n270 := {  };
__n270["type"] := "Property";
__n271 := {  };
__n271["type"] := "Identifier";
__n271["name"] := "toNumber";
__n270["key"] := __n271;
__n272 := {  };
__n272["type"] := "FunctionExpression";
__n272["id"] := null;
__n273 := [  ];
__n272["params"] := __n273;
__n274 := {  };
__n274["type"] := "BlockStatement";
__n276 := {  };
__n276["type"] := "ReturnStatement";
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := 12345.;
__n277["raw"] := "12345";
__n276["argument"] := __n277;
__n275 := [ __n276 ];
__n274["body"] := __n275;
__n278 := [  ];
__n274["variableDeclarations"] := __n278;
__n279 := [  ];
__n274["functionDeclarations"] := __n279;
__n274["codeType"] := "function";
__n274["strict"] := false;
__n272["body"] := __n274;
__n272["generator"] := false;
__n272["expression"] := false;
__n272["async"] := false;
__n270["value"] := __n272;
__n270["computed"] := false;
__n270["kind"] := "init";
__n270["shorthand"] := false;
__n280 := {  };
__n280["type"] := "Property";
__n281 := {  };
__n281["type"] := "Identifier";
__n281["name"] := "toString";
__n280["key"] := __n281;
__n282 := {  };
__n282["type"] := "FunctionExpression";
__n282["id"] := null;
__n283 := [  ];
__n282["params"] := __n283;
__n284 := {  };
__n284["type"] := "BlockStatement";
__n286 := {  };
__n286["type"] := "ReturnStatement";
__n287 := {  };
__n287["type"] := "Literal";
__n287["value"] := 67890.;
__n287["raw"] := "67890";
__n286["argument"] := __n287;
__n285 := [ __n286 ];
__n284["body"] := __n285;
__n288 := [  ];
__n284["variableDeclarations"] := __n288;
__n289 := [  ];
__n284["functionDeclarations"] := __n289;
__n284["codeType"] := "function";
__n284["strict"] := false;
__n282["body"] := __n284;
__n282["generator"] := false;
__n282["expression"] := false;
__n282["async"] := false;
__n280["value"] := __n282;
__n280["computed"] := false;
__n280["kind"] := "init";
__n280["shorthand"] := false;
__n290 := {  };
__n290["type"] := "Property";
__n291 := {  };
__n291["type"] := "Identifier";
__n291["name"] := "valueOf";
__n290["key"] := __n291;
__n292 := {  };
__n292["type"] := "FunctionExpression";
__n292["id"] := null;
__n293 := [  ];
__n292["params"] := __n293;
__n294 := {  };
__n294["type"] := "BlockStatement";
__n296 := {  };
__n296["type"] := "ReturnStatement";
__n297 := {  };
__n297["type"] := "Literal";
__n297["value"] := "[object MyObj]";
__n297["raw"] := "\"[object MyObj]\"";
__n296["argument"] := __n297;
__n295 := [ __n296 ];
__n294["body"] := __n295;
__n298 := [  ];
__n294["variableDeclarations"] := __n298;
__n299 := [  ];
__n294["functionDeclarations"] := __n299;
__n294["codeType"] := "function";
__n294["strict"] := false;
__n292["body"] := __n294;
__n292["generator"] := false;
__n292["expression"] := false;
__n292["async"] := false;
__n290["value"] := __n292;
__n290["computed"] := false;
__n290["kind"] := "init";
__n290["shorthand"] := false;
__n269 := [ __n270, __n280, __n290 ];
__n268["properties"] := __n269;
__n266["init"] := __n268;
__n265 := [ __n266 ];
__n264["declarations"] := __n265;
__n264["kind"] := "var";
__n300 := {  };
__n300["type"] := "IfStatement";
__n301 := {  };
__n301["type"] := "BinaryExpression";
__n301["operator"] := "!==";
__n302 := {  };
__n302["type"] := "CallExpression";
__n303 := {  };
__n303["type"] := "Identifier";
__n303["name"] := "String";
__n302["callee"] := __n303;
__n305 := {  };
__n305["type"] := "Identifier";
__n305["name"] := "myobj1";
__n304 := [ __n305 ];
__n302["arguments"] := __n304;
__n301["left"] := __n302;
__n306 := {  };
__n306["type"] := "Literal";
__n306["value"] := "67890";
__n306["raw"] := "\"67890\"";
__n301["right"] := __n306;
__n300["test"] := __n301;
__n307 := {  };
__n307["type"] := "BlockStatement";
__n309 := {  };
__n309["type"] := "ExpressionStatement";
__n310 := {  };
__n310["type"] := "CallExpression";
__n311 := {  };
__n311["type"] := "Identifier";
__n311["name"] := "$ERROR";
__n310["callee"] := __n311;
__n313 := {  };
__n313["type"] := "Literal";
__n313["value"] := "#11: String(myobj) calls ToPrimitive with hint String";
__n313["raw"] := "\"#11: String(myobj) calls ToPrimitive with hint String\"";
__n312 := [ __n313 ];
__n310["arguments"] := __n312;
__n309["expression"] := __n310;
__n308 := [ __n309 ];
__n307["body"] := __n308;
__n300["consequent"] := __n307;
__n300["alternate"] := null;
__n314 := {  };
__n314["type"] := "VariableDeclaration";
__n316 := {  };
__n316["type"] := "VariableDeclarator";
__n317 := {  };
__n317["type"] := "Identifier";
__n317["name"] := "myobj2";
__n316["id"] := __n317;
__n318 := {  };
__n318["type"] := "ObjectExpression";
__n320 := {  };
__n320["type"] := "Property";
__n321 := {  };
__n321["type"] := "Identifier";
__n321["name"] := "toNumber";
__n320["key"] := __n321;
__n322 := {  };
__n322["type"] := "FunctionExpression";
__n322["id"] := null;
__n323 := [  ];
__n322["params"] := __n323;
__n324 := {  };
__n324["type"] := "BlockStatement";
__n326 := {  };
__n326["type"] := "ReturnStatement";
__n327 := {  };
__n327["type"] := "Literal";
__n327["value"] := 12345.;
__n327["raw"] := "12345";
__n326["argument"] := __n327;
__n325 := [ __n326 ];
__n324["body"] := __n325;
__n328 := [  ];
__n324["variableDeclarations"] := __n328;
__n329 := [  ];
__n324["functionDeclarations"] := __n329;
__n324["codeType"] := "function";
__n324["strict"] := false;
__n322["body"] := __n324;
__n322["generator"] := false;
__n322["expression"] := false;
__n322["async"] := false;
__n320["value"] := __n322;
__n320["computed"] := false;
__n320["kind"] := "init";
__n320["shorthand"] := false;
__n330 := {  };
__n330["type"] := "Property";
__n331 := {  };
__n331["type"] := "Identifier";
__n331["name"] := "toString";
__n330["key"] := __n331;
__n332 := {  };
__n332["type"] := "FunctionExpression";
__n332["id"] := null;
__n333 := [  ];
__n332["params"] := __n333;
__n334 := {  };
__n334["type"] := "BlockStatement";
__n336 := {  };
__n336["type"] := "ReturnStatement";
__n337 := {  };
__n337["type"] := "ObjectExpression";
__n338 := [  ];
__n337["properties"] := __n338;
__n336["argument"] := __n337;
__n335 := [ __n336 ];
__n334["body"] := __n335;
__n339 := [  ];
__n334["variableDeclarations"] := __n339;
__n340 := [  ];
__n334["functionDeclarations"] := __n340;
__n334["codeType"] := "function";
__n334["strict"] := false;
__n332["body"] := __n334;
__n332["generator"] := false;
__n332["expression"] := false;
__n332["async"] := false;
__n330["value"] := __n332;
__n330["computed"] := false;
__n330["kind"] := "init";
__n330["shorthand"] := false;
__n341 := {  };
__n341["type"] := "Property";
__n342 := {  };
__n342["type"] := "Identifier";
__n342["name"] := "valueOf";
__n341["key"] := __n342;
__n343 := {  };
__n343["type"] := "FunctionExpression";
__n343["id"] := null;
__n344 := [  ];
__n343["params"] := __n344;
__n345 := {  };
__n345["type"] := "BlockStatement";
__n347 := {  };
__n347["type"] := "ReturnStatement";
__n348 := {  };
__n348["type"] := "Literal";
__n348["value"] := "[object MyObj]";
__n348["raw"] := "\"[object MyObj]\"";
__n347["argument"] := __n348;
__n346 := [ __n347 ];
__n345["body"] := __n346;
__n349 := [  ];
__n345["variableDeclarations"] := __n349;
__n350 := [  ];
__n345["functionDeclarations"] := __n350;
__n345["codeType"] := "function";
__n345["strict"] := false;
__n343["body"] := __n345;
__n343["generator"] := false;
__n343["expression"] := false;
__n343["async"] := false;
__n341["value"] := __n343;
__n341["computed"] := false;
__n341["kind"] := "init";
__n341["shorthand"] := false;
__n319 := [ __n320, __n330, __n341 ];
__n318["properties"] := __n319;
__n316["init"] := __n318;
__n315 := [ __n316 ];
__n314["declarations"] := __n315;
__n314["kind"] := "var";
__n351 := {  };
__n351["type"] := "IfStatement";
__n352 := {  };
__n352["type"] := "BinaryExpression";
__n352["operator"] := "!==";
__n353 := {  };
__n353["type"] := "CallExpression";
__n354 := {  };
__n354["type"] := "Identifier";
__n354["name"] := "String";
__n353["callee"] := __n354;
__n356 := {  };
__n356["type"] := "Identifier";
__n356["name"] := "myobj2";
__n355 := [ __n356 ];
__n353["arguments"] := __n355;
__n352["left"] := __n353;
__n357 := {  };
__n357["type"] := "Literal";
__n357["value"] := "[object MyObj]";
__n357["raw"] := "\"[object MyObj]\"";
__n352["right"] := __n357;
__n351["test"] := __n352;
__n358 := {  };
__n358["type"] := "BlockStatement";
__n360 := {  };
__n360["type"] := "ExpressionStatement";
__n361 := {  };
__n361["type"] := "CallExpression";
__n362 := {  };
__n362["type"] := "Identifier";
__n362["name"] := "$ERROR";
__n361["callee"] := __n362;
__n364 := {  };
__n364["type"] := "Literal";
__n364["value"] := "#12: String(myobj) calls ToPrimitive with hint String";
__n364["raw"] := "\"#12: String(myobj) calls ToPrimitive with hint String\"";
__n363 := [ __n364 ];
__n361["arguments"] := __n363;
__n360["expression"] := __n361;
__n359 := [ __n360 ];
__n358["body"] := __n359;
__n351["consequent"] := __n358;
__n351["alternate"] := null;
__n365 := {  };
__n365["type"] := "VariableDeclaration";
__n367 := {  };
__n367["type"] := "VariableDeclarator";
__n368 := {  };
__n368["type"] := "Identifier";
__n368["name"] := "myobj3";
__n367["id"] := __n368;
__n369 := {  };
__n369["type"] := "ObjectExpression";
__n371 := {  };
__n371["type"] := "Property";
__n372 := {  };
__n372["type"] := "Identifier";
__n372["name"] := "toNumber";
__n371["key"] := __n372;
__n373 := {  };
__n373["type"] := "FunctionExpression";
__n373["id"] := null;
__n374 := [  ];
__n373["params"] := __n374;
__n375 := {  };
__n375["type"] := "BlockStatement";
__n377 := {  };
__n377["type"] := "ReturnStatement";
__n378 := {  };
__n378["type"] := "Literal";
__n378["value"] := 12345.;
__n378["raw"] := "12345";
__n377["argument"] := __n378;
__n376 := [ __n377 ];
__n375["body"] := __n376;
__n379 := [  ];
__n375["variableDeclarations"] := __n379;
__n380 := [  ];
__n375["functionDeclarations"] := __n380;
__n375["codeType"] := "function";
__n375["strict"] := false;
__n373["body"] := __n375;
__n373["generator"] := false;
__n373["expression"] := false;
__n373["async"] := false;
__n371["value"] := __n373;
__n371["computed"] := false;
__n371["kind"] := "init";
__n371["shorthand"] := false;
__n381 := {  };
__n381["type"] := "Property";
__n382 := {  };
__n382["type"] := "Identifier";
__n382["name"] := "valueOf";
__n381["key"] := __n382;
__n383 := {  };
__n383["type"] := "FunctionExpression";
__n383["id"] := null;
__n384 := [  ];
__n383["params"] := __n384;
__n385 := {  };
__n385["type"] := "BlockStatement";
__n387 := {  };
__n387["type"] := "ReturnStatement";
__n388 := {  };
__n388["type"] := "Literal";
__n388["value"] := "[object MyObj]";
__n388["raw"] := "\"[object MyObj]\"";
__n387["argument"] := __n388;
__n386 := [ __n387 ];
__n385["body"] := __n386;
__n389 := [  ];
__n385["variableDeclarations"] := __n389;
__n390 := [  ];
__n385["functionDeclarations"] := __n390;
__n385["codeType"] := "function";
__n385["strict"] := false;
__n383["body"] := __n385;
__n383["generator"] := false;
__n383["expression"] := false;
__n383["async"] := false;
__n381["value"] := __n383;
__n381["computed"] := false;
__n381["kind"] := "init";
__n381["shorthand"] := false;
__n370 := [ __n371, __n381 ];
__n369["properties"] := __n370;
__n367["init"] := __n369;
__n366 := [ __n367 ];
__n365["declarations"] := __n366;
__n365["kind"] := "var";
__n391 := {  };
__n391["type"] := "IfStatement";
__n392 := {  };
__n392["type"] := "BinaryExpression";
__n392["operator"] := "!==";
__n393 := {  };
__n393["type"] := "CallExpression";
__n394 := {  };
__n394["type"] := "Identifier";
__n394["name"] := "String";
__n393["callee"] := __n394;
__n396 := {  };
__n396["type"] := "Identifier";
__n396["name"] := "myobj3";
__n395 := [ __n396 ];
__n393["arguments"] := __n395;
__n392["left"] := __n393;
__n397 := {  };
__n397["type"] := "Literal";
__n397["value"] := "[object Object]";
__n397["raw"] := "\"[object Object]\"";
__n392["right"] := __n397;
__n391["test"] := __n392;
__n398 := {  };
__n398["type"] := "BlockStatement";
__n400 := {  };
__n400["type"] := "ExpressionStatement";
__n401 := {  };
__n401["type"] := "CallExpression";
__n402 := {  };
__n402["type"] := "Identifier";
__n402["name"] := "$ERROR";
__n401["callee"] := __n402;
__n404 := {  };
__n404["type"] := "Literal";
__n404["value"] := "#13: String(myobj) calls ToPrimitive with hint String";
__n404["raw"] := "\"#13: String(myobj) calls ToPrimitive with hint String\"";
__n403 := [ __n404 ];
__n401["arguments"] := __n403;
__n400["expression"] := __n401;
__n399 := [ __n400 ];
__n398["body"] := __n399;
__n391["consequent"] := __n398;
__n391["alternate"] := null;
__n1 := [ __n2, __n25, __n50, __n79, __n104, __n131, __n156, __n181, __n206, __n231, __n264, __n300, __n314, __n351, __n365, __n391 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n405 := [ "myobj1", "myobj2", "myobj3" ];
__n0["variableDeclarations"] := __n405;
__n406 := [  ];
__n0["functionDeclarations"] := __n406;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}