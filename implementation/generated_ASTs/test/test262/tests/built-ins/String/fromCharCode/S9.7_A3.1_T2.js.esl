function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "String";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "fromCharCode";
__n9["raw"] := "\"fromCharCode\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "NewExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Number";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 1.;
__n14["raw"] := "1";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10 := [ __n11 ];
__n6["arguments"] := __n10;
__n5["object"] := __n6;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "charCodeAt";
__n15["raw"] := "\"charCodeAt\"";
__n5["property"] := __n15;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n16 := [ __n17 ];
__n4["arguments"] := __n16;
__n3["left"] := __n4;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.;
__n18["raw"] := "1";
__n3["right"] := __n18;
__n2["test"] := __n3;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "$ERROR";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "+";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "#1: String.fromCharCode(new Number(1)).charCodeAt(0) === 1. Actual: ";
__n26["raw"] := "'#1: String.fromCharCode(new Number(1)).charCodeAt(0) === 1. Actual: '";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "String";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "fromCharCode";
__n32["raw"] := "\"fromCharCode\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "NewExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "Number";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 1.;
__n37["raw"] := "1";
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33 := [ __n34 ];
__n29["arguments"] := __n33;
__n28["object"] := __n29;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "charCodeAt";
__n38["raw"] := "\"charCodeAt\"";
__n28["property"] := __n38;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 0.;
__n40["raw"] := "0";
__n39 := [ __n40 ];
__n27["arguments"] := __n39;
__n25["right"] := __n27;
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n2["consequent"] := __n19;
__n2["alternate"] := null;
__n41 := {  };
__n41["type"] := "IfStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "!==";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "String";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "fromCharCode";
__n48["raw"] := "\"fromCharCode\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "UnaryExpression";
__n50["operator"] := "-";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 1.234;
__n51["raw"] := "1.234";
__n50["argument"] := __n51;
__n50["prefix"] := true;
__n49 := [ __n50 ];
__n45["arguments"] := __n49;
__n44["object"] := __n45;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "charCodeAt";
__n52["raw"] := "\"charCodeAt\"";
__n44["property"] := __n52;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 0.;
__n54["raw"] := "0";
__n53 := [ __n54 ];
__n43["arguments"] := __n53;
__n42["left"] := __n43;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 65535.;
__n55["raw"] := "65535";
__n42["right"] := __n55;
__n41["test"] := __n42;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "$ERROR";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "+";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "#2: String.fromCharCode(-1.234).charCodeAt(0) === 65535. Actual: ";
__n63["raw"] := "'#2: String.fromCharCode(-1.234).charCodeAt(0) === 65535. Actual: '";
__n62["left"] := __n63;
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "MemberExpression";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "String";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "fromCharCode";
__n69["raw"] := "\"fromCharCode\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["callee"] := __n67;
__n71 := {  };
__n71["type"] := "UnaryExpression";
__n71["operator"] := "-";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.234;
__n72["raw"] := "1.234";
__n71["argument"] := __n72;
__n71["prefix"] := true;
__n70 := [ __n71 ];
__n66["arguments"] := __n70;
__n65["object"] := __n66;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "charCodeAt";
__n73["raw"] := "\"charCodeAt\"";
__n65["property"] := __n73;
__n65["computed"] := true;
__n64["callee"] := __n65;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 0.;
__n75["raw"] := "0";
__n74 := [ __n75 ];
__n64["arguments"] := __n74;
__n62["right"] := __n64;
__n61 := [ __n62 ];
__n59["arguments"] := __n61;
__n58["expression"] := __n59;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n41["consequent"] := __n56;
__n41["alternate"] := null;
__n1 := [ __n2, __n41 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n76 := [  ];
__n0["variableDeclarations"] := __n76;
__n77 := [  ];
__n0["functionDeclarations"] := __n77;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}