function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "str";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "";
__n9["raw"] := "''";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "verifyNotEnumerable";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "str";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "length";
__n15["raw"] := "'length'";
__n13 := [ __n14, __n15 ];
__n11["arguments"] := __n13;
__n10["expression"] := __n11;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "verifyNotWritable";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "str";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "length";
__n21["raw"] := "'length'";
__n19 := [ __n20, __n21 ];
__n17["arguments"] := __n19;
__n16["expression"] := __n17;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "verifyNotConfigurable";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "str";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "length";
__n27["raw"] := "'length'";
__n25 := [ __n26, __n27 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "assert";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "sameValue";
__n32["raw"] := "\"sameValue\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "str";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "length";
__n36["raw"] := "\"length\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 0.;
__n37["raw"] := "0";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "empty string";
__n38["raw"] := "'empty string'";
__n33 := [ __n34, __n37, __n38 ];
__n29["arguments"] := __n33;
__n28["expression"] := __n29;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "AssignmentExpression";
__n40["operator"] := "=";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "str";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "NewExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "String";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := " ";
__n45["raw"] := "' '";
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n40["right"] := __n42;
__n39["expression"] := __n40;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "assert";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "sameValue";
__n50["raw"] := "\"sameValue\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "str";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "length";
__n54["raw"] := "\"length\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 1.;
__n55["raw"] := "1";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "whitespace";
__n56["raw"] := "'whitespace'";
__n51 := [ __n52, __n55, __n56 ];
__n47["arguments"] := __n51;
__n46["expression"] := __n47;
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "AssignmentExpression";
__n58["operator"] := "=";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "str";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "NewExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "String";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "  ";
__n63["raw"] := "' \\b '";
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n58["right"] := __n60;
__n57["expression"] := __n58;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "assert";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "sameValue";
__n68["raw"] := "\"sameValue\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "str";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "length";
__n72["raw"] := "\"length\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 3.;
__n73["raw"] := "3";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "character escape (U+008, \"backspace\")";
__n74["raw"] := "'character escape (U+008, \"backspace\")'";
__n69 := [ __n70, __n73, __n74 ];
__n65["arguments"] := __n69;
__n64["expression"] := __n65;
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "AssignmentExpression";
__n76["operator"] := "=";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "str";
__n76["left"] := __n77;
__n78 := {  };
__n78["type"] := "NewExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "String";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "ùåÜ";
__n81["raw"] := "'\\ud834\\udf06'";
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n76["right"] := __n78;
__n75["expression"] := __n76;
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "assert";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "sameValue";
__n86["raw"] := "\"sameValue\"";
__n84["property"] := __n86;
__n84["computed"] := true;
__n83["callee"] := __n84;
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "str";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "length";
__n90["raw"] := "\"length\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 2.;
__n91["raw"] := "2";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "Unicode escape (surrogate pair)";
__n92["raw"] := "'Unicode escape (surrogate pair)'";
__n87 := [ __n88, __n91, __n92 ];
__n83["arguments"] := __n87;
__n82["expression"] := __n83;
__n1 := [ __n2, __n10, __n16, __n22, __n28, __n39, __n46, __n57, __n64, __n75, __n82 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n93 := [ "str" ];
__n0["variableDeclarations"] := __n93;
__n94 := [  ];
__n0["functionDeclarations"] := __n94;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}