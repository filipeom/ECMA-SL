function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__instance";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Boolean";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "AssignmentExpression";
__n10["operator"] := "=";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "__instance";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "charAt";
__n13["raw"] := "\"charAt\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["left"] := __n11;
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "String";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "prototype";
__n17["raw"] := "\"prototype\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["object"] := __n15;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "charAt";
__n18["raw"] := "\"charAt\"";
__n14["property"] := __n18;
__n14["computed"] := true;
__n10["right"] := __n14;
__n9["expression"] := __n10;
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!==";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "+";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "+";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "__instance";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "charAt";
__n26["raw"] := "\"charAt\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := false;
__n28["raw"] := "false";
__n27 := [ __n28 ];
__n23["arguments"] := __n27;
__n22["left"] := __n23;
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "__instance";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "charAt";
__n32["raw"] := "\"charAt\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := true;
__n34["raw"] := "true";
__n33 := [ __n34 ];
__n29["arguments"] := __n33;
__n22["right"] := __n29;
__n21["left"] := __n22;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "__instance";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "charAt";
__n38["raw"] := "\"charAt\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "+";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := true;
__n41["raw"] := "true";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 1.;
__n42["raw"] := "1";
__n40["right"] := __n42;
__n39 := [ __n40 ];
__n35["arguments"] := __n39;
__n21["right"] := __n35;
__n20["left"] := __n21;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "fal";
__n43["raw"] := "\"fal\"";
__n20["right"] := __n43;
__n19["test"] := __n20;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$ERROR";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "+";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "+";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#1: __instance = new Boolean; __instance.charAt = String.prototype.charAt;  __instance = new Boolean; __instance.charAt = String.prototype.charAt; __instance.charAt(false)+__instance.charAt(true)+__instance.charAt(true+1) === \"fal\". Actual: ";
__n53["raw"] := "'#1: __instance = new Boolean; __instance.charAt = String.prototype.charAt;  __instance = new Boolean; __instance.charAt = String.prototype.charAt; __instance.charAt(false)+__instance.charAt(true)+__instance.charAt(true+1) === \"fal\". Actual: '";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "__instance";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "charAt";
__n57["raw"] := "\"charAt\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := false;
__n59["raw"] := "false";
__n58 := [ __n59 ];
__n54["arguments"] := __n58;
__n52["right"] := __n54;
__n51["left"] := __n52;
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "__instance";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "charAt";
__n63["raw"] := "\"charAt\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := true;
__n65["raw"] := "true";
__n64 := [ __n65 ];
__n60["arguments"] := __n64;
__n51["right"] := __n60;
__n50["left"] := __n51;
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "__instance";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "charAt";
__n69["raw"] := "\"charAt\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["callee"] := __n67;
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "+";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := true;
__n72["raw"] := "true";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 1.;
__n73["raw"] := "1";
__n71["right"] := __n73;
__n70 := [ __n71 ];
__n66["arguments"] := __n70;
__n50["right"] := __n66;
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n19["consequent"] := __n44;
__n19["alternate"] := null;
__n1 := [ __n2, __n9, __n19 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n74 := [ "__instance" ];
__n0["variableDeclarations"] := __n74;
__n75 := [  ];
__n0["functionDeclarations"] := __n75;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}