function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "abc";
__n6["raw"] := "\"abc\"";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "charAt";
__n7["raw"] := "\"charAt\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0.0";
__n8 := [ __n9 ];
__n4["arguments"] := __n8;
__n3["left"] := __n4;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "a";
__n10["raw"] := "\"a\"";
__n3["right"] := __n10;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: \"abc\".charAt(0.0) === \"a\". Actual: ";
__n18["raw"] := "'#1: \"abc\".charAt(0.0) === \"a\". Actual: '";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "abc";
__n21["raw"] := "\"abc\"";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "charAt";
__n22["raw"] := "\"charAt\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 0.;
__n24["raw"] := "0.0";
__n23 := [ __n24 ];
__n19["arguments"] := __n23;
__n17["right"] := __n19;
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n2["alternate"] := null;
__n25 := {  };
__n25["type"] := "IfStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "!==";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "abc";
__n29["raw"] := "\"abc\"";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "charAt";
__n30["raw"] := "\"charAt\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "UnaryExpression";
__n32["operator"] := "-";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0.0";
__n32["argument"] := __n33;
__n32["prefix"] := true;
__n31 := [ __n32 ];
__n27["arguments"] := __n31;
__n26["left"] := __n27;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "a";
__n34["raw"] := "\"a\"";
__n26["right"] := __n34;
__n25["test"] := __n26;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#2: \"abc\".charAt(-0.0) === \"a\". Actual: ";
__n42["raw"] := "'#2: \"abc\".charAt(-0.0) === \"a\". Actual: '";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "abc";
__n45["raw"] := "\"abc\"";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "charAt";
__n46["raw"] := "\"charAt\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n48 := {  };
__n48["type"] := "UnaryExpression";
__n48["operator"] := "-";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 0.;
__n49["raw"] := "0.0";
__n48["argument"] := __n49;
__n48["prefix"] := true;
__n47 := [ __n48 ];
__n43["arguments"] := __n47;
__n41["right"] := __n43;
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n25["consequent"] := __n35;
__n25["alternate"] := null;
__n1 := [ __n2, __n25 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n50 := [  ];
__n0["variableDeclarations"] := __n50;
__n51 := [  ];
__n0["functionDeclarations"] := __n51;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}