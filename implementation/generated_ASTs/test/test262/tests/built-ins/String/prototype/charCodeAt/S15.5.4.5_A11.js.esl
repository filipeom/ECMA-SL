function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "UnaryExpression";
__n3["operator"] := "!";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "String";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "prototype";
__n9["raw"] := "\"prototype\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["object"] := __n7;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "charCodeAt";
__n10["raw"] := "\"charCodeAt\"";
__n6["property"] := __n10;
__n6["computed"] := true;
__n5["object"] := __n6;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "hasOwnProperty";
__n11["raw"] := "\"hasOwnProperty\"";
__n5["property"] := __n11;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "length";
__n13["raw"] := "\"length\"";
__n12 := [ __n13 ];
__n4["arguments"] := __n12;
__n3["argument"] := __n4;
__n3["prefix"] := true;
__n2["test"] := __n3;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "$ERROR";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "+";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "#1: String.prototype.charCodeAt.hasOwnProperty(\"length\") return true. Actual: ";
__n21["raw"] := "'#1: String.prototype.charCodeAt.hasOwnProperty(\"length\") return true. Actual: '";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "String";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "prototype";
__n27["raw"] := "\"prototype\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["object"] := __n25;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "charCodeAt";
__n28["raw"] := "\"charCodeAt\"";
__n24["property"] := __n28;
__n24["computed"] := true;
__n23["object"] := __n24;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "hasOwnProperty";
__n29["raw"] := "\"hasOwnProperty\"";
__n23["property"] := __n29;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "length";
__n31["raw"] := "\"length\"";
__n30 := [ __n31 ];
__n22["arguments"] := __n30;
__n20["right"] := __n22;
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n16["expression"] := __n17;
__n15 := [ __n16 ];
__n14["body"] := __n15;
__n2["consequent"] := __n14;
__n2["alternate"] := null;
__n32 := {  };
__n32["type"] := "IfStatement";
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "!==";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "String";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "prototype";
__n38["raw"] := "\"prototype\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["object"] := __n36;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "charCodeAt";
__n39["raw"] := "\"charCodeAt\"";
__n35["property"] := __n39;
__n35["computed"] := true;
__n34["object"] := __n35;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "length";
__n40["raw"] := "\"length\"";
__n34["property"] := __n40;
__n34["computed"] := true;
__n33["left"] := __n34;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 1.;
__n41["raw"] := "1";
__n33["right"] := __n41;
__n32["test"] := __n33;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$ERROR";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "+";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "#2: String.prototype.charCodeAt.length === 1. Actual: ";
__n49["raw"] := "'#2: String.prototype.charCodeAt.length === 1. Actual: '";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "String";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "prototype";
__n54["raw"] := "\"prototype\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["object"] := __n52;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "charCodeAt";
__n55["raw"] := "\"charCodeAt\"";
__n51["property"] := __n55;
__n51["computed"] := true;
__n50["object"] := __n51;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "length";
__n56["raw"] := "\"length\"";
__n50["property"] := __n56;
__n50["computed"] := true;
__n48["right"] := __n50;
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n32["consequent"] := __n42;
__n32["alternate"] := null;
__n1 := [ __n2, __n32 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n57 := [  ];
__n0["variableDeclarations"] := __n57;
__n58 := [  ];
__n0["functionDeclarations"] := __n58;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}