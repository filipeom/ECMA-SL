function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__constr";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "String";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "prototype";
__n9["raw"] := "\"prototype\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["object"] := __n7;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "constructor";
__n10["raw"] := "\"constructor\"";
__n6["property"] := __n10;
__n6["computed"] := true;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "__instance";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "NewExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "__constr";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "choosing one";
__n18["raw"] := "\"choosing one\"";
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!=";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "__instance";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "choosing one";
__n22["raw"] := "\"choosing one\"";
__n20["right"] := __n22;
__n19["test"] := __n20;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "$ERROR";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "+";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "#0: __constr = String.prototype.constructor; __instance = new __constr(\"choosing one\"); __instance ==\"choosing one\". Actual: __instance ==";
__n30["raw"] := "'#0: __constr = String.prototype.constructor; __instance = new __constr(\"choosing one\"); __instance ==\"choosing one\". Actual: __instance =='";
__n29["left"] := __n30;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "__instance";
__n29["right"] := __n31;
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n19["consequent"] := __n23;
__n19["alternate"] := null;
__n32 := {  };
__n32["type"] := "IfStatement";
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "!==";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "__instance";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "constructor";
__n36["raw"] := "\"constructor\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["left"] := __n34;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "String";
__n33["right"] := __n37;
__n32["test"] := __n33;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "$ERROR";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "+";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "#1: __constr = String.prototype.constructor; __instance = new __constr(\"choosing one\"); __instance.constructor === String. Actual: __instance.constructor ===";
__n45["raw"] := "'#1: __constr = String.prototype.constructor; __instance = new __constr(\"choosing one\"); __instance.constructor === String. Actual: __instance.constructor ==='";
__n44["left"] := __n45;
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "__instance";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "constructor";
__n48["raw"] := "\"constructor\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n44["right"] := __n46;
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n32["consequent"] := __n38;
__n32["alternate"] := null;
__n49 := {  };
__n49["type"] := "IfStatement";
__n50 := {  };
__n50["type"] := "UnaryExpression";
__n50["operator"] := "!";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "String";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "prototype";
__n55["raw"] := "\"prototype\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["object"] := __n53;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "isPrototypeOf";
__n56["raw"] := "\"isPrototypeOf\"";
__n52["property"] := __n56;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "__instance";
__n57 := [ __n58 ];
__n51["arguments"] := __n57;
__n50["argument"] := __n51;
__n50["prefix"] := true;
__n49["test"] := __n50;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "+";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "#2: __constr = String.prototype.constructor; __instance = new __constr(\"choosing one\"); String.prototype.isPrototypeOf(__instance) return true. Actual: ";
__n66["raw"] := "'#2: __constr = String.prototype.constructor; __instance = new __constr(\"choosing one\"); String.prototype.isPrototypeOf(__instance) return true. Actual: '";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "String";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "prototype";
__n71["raw"] := "\"prototype\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["object"] := __n69;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "isPrototypeOf";
__n72["raw"] := "\"isPrototypeOf\"";
__n68["property"] := __n72;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "__instance";
__n73 := [ __n74 ];
__n67["arguments"] := __n73;
__n65["right"] := __n67;
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n49["consequent"] := __n59;
__n49["alternate"] := null;
__n75 := {  };
__n75["type"] := "VariableDeclaration";
__n77 := {  };
__n77["type"] := "VariableDeclarator";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "__to_string_result";
__n77["id"] := __n78;
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "+";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "+";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "[object ";
__n81["raw"] := "'[object '";
__n80["left"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "String";
__n82["raw"] := "'String'";
__n80["right"] := __n82;
__n79["left"] := __n80;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "]";
__n83["raw"] := "']'";
__n79["right"] := __n83;
__n77["init"] := __n79;
__n76 := [ __n77 ];
__n75["declarations"] := __n76;
__n75["kind"] := "var";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "UnaryExpression";
__n85["operator"] := "delete";
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "String";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "prototype";
__n89["raw"] := "\"prototype\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n86["object"] := __n87;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "toString";
__n90["raw"] := "\"toString\"";
__n86["property"] := __n90;
__n86["computed"] := true;
__n85["argument"] := __n86;
__n85["prefix"] := true;
__n84["expression"] := __n85;
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "!==";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "MemberExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "__instance";
__n94["object"] := __n95;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "toString";
__n96["raw"] := "\"toString\"";
__n94["property"] := __n96;
__n94["computed"] := true;
__n93["callee"] := __n94;
__n97 := [  ];
__n93["arguments"] := __n97;
__n92["left"] := __n93;
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "__to_string_result";
__n92["right"] := __n98;
__n91["test"] := __n92;
__n99 := {  };
__n99["type"] := "BlockStatement";
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "$ERROR";
__n102["callee"] := __n103;
__n105 := {  };
__n105["type"] := "BinaryExpression";
__n105["operator"] := "+";
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "+";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "+";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "#3: __constr = String.prototype.constructor; __instance = new __constr(\"choosing one\"); delete String.prototype.toString; __instance.toString() === __to_string_result. Actual: __instance.toString() ===";
__n108["raw"] := "'#3: __constr = String.prototype.constructor; __instance = new __constr(\"choosing one\"); delete String.prototype.toString; __instance.toString() === __to_string_result. Actual: __instance.toString() ==='";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "MemberExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "__instance";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "toString";
__n112["raw"] := "\"toString\"";
__n110["property"] := __n112;
__n110["computed"] := true;
__n109["callee"] := __n110;
__n113 := [  ];
__n109["arguments"] := __n113;
__n107["right"] := __n109;
__n106["left"] := __n107;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := " __to_string_result ===";
__n114["raw"] := "' __to_string_result ==='";
__n106["right"] := __n114;
__n105["left"] := __n106;
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "__to_string_result";
__n105["right"] := __n115;
__n104 := [ __n105 ];
__n102["arguments"] := __n104;
__n101["expression"] := __n102;
__n100 := [ __n101 ];
__n99["body"] := __n100;
__n91["consequent"] := __n99;
__n91["alternate"] := null;
__n1 := [ __n2, __n11, __n19, __n32, __n49, __n75, __n84, __n91 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n116 := [ "__constr", "__instance", "__to_string_result" ];
__n0["variableDeclarations"] := __n116;
__n117 := [  ];
__n0["functionDeclarations"] := __n117;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}