function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "toString";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ReturnStatement";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "AB";
__n15["raw"] := "\"\\u0041B\"";
__n14["argument"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n16 := [  ];
__n12["variableDeclarations"] := __n16;
__n17 := [  ];
__n12["functionDeclarations"] := __n17;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["expression"] := false;
__n10["async"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "__obj2";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "ObjectExpression";
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "valueOf";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "FunctionExpression";
__n26["id"] := null;
__n27 := [  ];
__n26["params"] := __n27;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ReturnStatement";
__n31 := {  };
__n31["type"] := "ObjectExpression";
__n32 := [  ];
__n31["properties"] := __n32;
__n30["argument"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n33 := [  ];
__n28["variableDeclarations"] := __n33;
__n34 := [  ];
__n28["functionDeclarations"] := __n34;
__n28["codeType"] := "function";
__n28["strict"] := false;
__n26["body"] := __n28;
__n26["generator"] := false;
__n26["expression"] := false;
__n26["async"] := false;
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n35 := {  };
__n35["type"] := "Property";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "toString";
__n35["key"] := __n36;
__n37 := {  };
__n37["type"] := "FunctionExpression";
__n37["id"] := null;
__n38 := [  ];
__n37["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ReturnStatement";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "1";
__n42["raw"] := "\"1\"";
__n41["argument"] := __n42;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n43 := [  ];
__n39["variableDeclarations"] := __n43;
__n44 := [  ];
__n39["functionDeclarations"] := __n44;
__n39["codeType"] := "function";
__n39["strict"] := false;
__n37["body"] := __n39;
__n37["generator"] := false;
__n37["expression"] := false;
__n37["async"] := false;
__n35["value"] := __n37;
__n35["computed"] := false;
__n35["kind"] := "init";
__n35["shorthand"] := false;
__n23 := [ __n24, __n35 ];
__n22["properties"] := __n23;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n45 := {  };
__n45["type"] := "IfStatement";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "ABBABABAB";
__n49["raw"] := "\"ABB\\u0041BABAB\"";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "indexOf";
__n50["raw"] := "\"indexOf\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "__obj";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "__obj2";
__n51 := [ __n52, __n53 ];
__n47["arguments"] := __n51;
__n46["left"] := __n47;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 3.;
__n54["raw"] := "3";
__n46["right"] := __n54;
__n45["test"] := __n46;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "#1: var __obj = {toString:function(){return \"AB\";}}; var __obj2 = {valueOf:function(){return {};},toString:function(){return \"1\";}}; \"ABB\\u0041BABAB\".indexOf(__obj, __obj2)===3. Actual: ";
__n62["raw"] := "'#1: var __obj = {toString:function(){return \"\\u0041B\";}}; var __obj2 = {valueOf:function(){return {};},toString:function(){return \"1\";}}; \"ABB\\\\u0041BABAB\".indexOf(__obj, __obj2)===3. Actual: '";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "ABBABABAB";
__n65["raw"] := "\"ABB\\u0041BABAB\"";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "indexOf";
__n66["raw"] := "\"indexOf\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "__obj";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "__obj2";
__n67 := [ __n68, __n69 ];
__n63["arguments"] := __n67;
__n61["right"] := __n63;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n45["consequent"] := __n55;
__n45["alternate"] := null;
__n1 := [ __n2, __n18, __n45 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n70 := [ "__obj", "__obj2" ];
__n0["variableDeclarations"] := __n70;
__n71 := [  ];
__n0["functionDeclarations"] := __n71;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}