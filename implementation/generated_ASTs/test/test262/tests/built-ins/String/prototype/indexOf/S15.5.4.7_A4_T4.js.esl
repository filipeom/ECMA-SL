function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "toString";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ThrowStatement";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "intostr";
__n15["raw"] := "\"intostr\"";
__n14["argument"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n16 := [  ];
__n12["variableDeclarations"] := __n16;
__n17 := [  ];
__n12["functionDeclarations"] := __n17;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["expression"] := false;
__n10["async"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "__obj2";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "ObjectExpression";
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "valueOf";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "FunctionExpression";
__n26["id"] := null;
__n27 := [  ];
__n26["params"] := __n27;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ThrowStatement";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "intoint";
__n31["raw"] := "\"intoint\"";
__n30["argument"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n32 := [  ];
__n28["variableDeclarations"] := __n32;
__n33 := [  ];
__n28["functionDeclarations"] := __n33;
__n28["codeType"] := "function";
__n28["strict"] := false;
__n26["body"] := __n28;
__n26["generator"] := false;
__n26["expression"] := false;
__n26["async"] := false;
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n23 := [ __n24 ];
__n22["properties"] := __n23;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n34 := {  };
__n34["type"] := "VariableDeclaration";
__n36 := {  };
__n36["type"] := "VariableDeclarator";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "__instance";
__n36["id"] := __n37;
__n38 := {  };
__n38["type"] := "NewExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "Number";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 10001.10001;
__n41["raw"] := "10001.10001";
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n36["init"] := __n38;
__n35 := [ __n36 ];
__n34["declarations"] := __n35;
__n34["kind"] := "var";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "Number";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "prototype";
__n47["raw"] := "\"prototype\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["object"] := __n45;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "indexOf";
__n48["raw"] := "\"indexOf\"";
__n44["property"] := __n48;
__n44["computed"] := true;
__n43["left"] := __n44;
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "String";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "prototype";
__n52["raw"] := "\"prototype\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["object"] := __n50;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "indexOf";
__n53["raw"] := "\"indexOf\"";
__n49["property"] := __n53;
__n49["computed"] := true;
__n43["right"] := __n49;
__n42["expression"] := __n43;
__n54 := {  };
__n54["type"] := "TryStatement";
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "VariableDeclaration";
__n59 := {  };
__n59["type"] := "VariableDeclarator";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "x";
__n59["id"] := __n60;
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "__instance";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "indexOf";
__n64["raw"] := "\"indexOf\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "__obj";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "__obj2";
__n65 := [ __n66, __n67 ];
__n61["arguments"] := __n65;
__n59["init"] := __n61;
__n58 := [ __n59 ];
__n57["declarations"] := __n58;
__n57["kind"] := "var";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "#1: \"var x = __instance.indexOf(__obj, __obj2)\" lead to throwing exception";
__n72["raw"] := "'#1: \"var x = __instance.indexOf(__obj, __obj2)\" lead to throwing exception'";
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n56 := [ __n57, __n68 ];
__n55["body"] := __n56;
__n54["block"] := __n55;
__n73 := {  };
__n73["type"] := "CatchClause";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "e";
__n73["param"] := __n74;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "IfStatement";
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "!==";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "e";
__n78["left"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "intostr";
__n80["raw"] := "\"intostr\"";
__n78["right"] := __n80;
__n77["test"] := __n78;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "$ERROR";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "+";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "#1.1: Exception === \"intostr\". Actual: ";
__n88["raw"] := "'#1.1: Exception === \"intostr\". Actual: '";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "e";
__n87["right"] := __n89;
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n82 := [ __n83 ];
__n81["body"] := __n82;
__n77["consequent"] := __n81;
__n77["alternate"] := null;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n73["body"] := __n75;
__n54["handler"] := __n73;
__n54["finalizer"] := null;
__n1 := [ __n2, __n18, __n34, __n42, __n54 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n90 := [ "__obj", "__obj2", "__instance", "x" ];
__n0["variableDeclarations"] := __n90;
__n91 := [  ];
__n0["functionDeclarations"] := __n91;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}