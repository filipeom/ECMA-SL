function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "str1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "h";
__n9["raw"] := "\"h\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "str2";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "NewExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "String";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "h";
__n17["raw"] := "\"\\x68\"";
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n18 := {  };
__n18["type"] := "IfStatement";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "!==";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "str1";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "localeCompare";
__n23["raw"] := "\"localeCompare\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "str2";
__n24 := [ __n25 ];
__n20["arguments"] := __n24;
__n19["left"] := __n20;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 0.;
__n26["raw"] := "0";
__n19["right"] := __n26;
__n18["test"] := __n19;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "$ERROR";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "+";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "#1: var str1 = new String(\"h\"); var str2 = new String (\"\\x68\"); str1.localeCompare(str2)===0. Actual: ";
__n34["raw"] := "'#1: var str1 = new String(\"h\"); var str2 = new String (\"\\\\x68\"); str1.localeCompare(str2)===0. Actual: '";
__n33["left"] := __n34;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "str1";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "localeCompare";
__n38["raw"] := "\"localeCompare\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "str2";
__n39 := [ __n40 ];
__n35["arguments"] := __n39;
__n33["right"] := __n35;
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n29["expression"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n18["consequent"] := __n27;
__n18["alternate"] := null;
__n41 := {  };
__n41["type"] := "VariableDeclaration";
__n43 := {  };
__n43["type"] := "VariableDeclarator";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "str2";
__n43["id"] := __n44;
__n45 := {  };
__n45["type"] := "NewExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "String";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "h";
__n48["raw"] := "\"\\u0068\"";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n43["init"] := __n45;
__n42 := [ __n43 ];
__n41["declarations"] := __n42;
__n41["kind"] := "var";
__n49 := {  };
__n49["type"] := "IfStatement";
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "!==";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "str1";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "localeCompare";
__n54["raw"] := "\"localeCompare\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "str2";
__n55 := [ __n56 ];
__n51["arguments"] := __n55;
__n50["left"] := __n51;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 0.;
__n57["raw"] := "0";
__n50["right"] := __n57;
__n49["test"] := __n50;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$ERROR";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "+";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "#2: var str1 = new String(\"h\"); var str2 = new String (\"\\u0068\"); str1.localeCompare(str2)===0. Actual: ";
__n65["raw"] := "'#2: var str1 = new String(\"h\"); var str2 = new String (\"\\\\u0068\"); str1.localeCompare(str2)===0. Actual: '";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "str1";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "localeCompare";
__n69["raw"] := "\"localeCompare\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["callee"] := __n67;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "str2";
__n70 := [ __n71 ];
__n66["arguments"] := __n70;
__n64["right"] := __n66;
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n49["consequent"] := __n58;
__n49["alternate"] := null;
__n72 := {  };
__n72["type"] := "VariableDeclaration";
__n74 := {  };
__n74["type"] := "VariableDeclarator";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "str2";
__n74["id"] := __n75;
__n76 := {  };
__n76["type"] := "NewExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "String";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "h";
__n79["raw"] := "\"h\"";
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n74["init"] := __n76;
__n73 := [ __n74 ];
__n72["declarations"] := __n73;
__n72["kind"] := "var";
__n80 := {  };
__n80["type"] := "IfStatement";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "!==";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "str1";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "localeCompare";
__n85["raw"] := "\"localeCompare\"";
__n83["property"] := __n85;
__n83["computed"] := true;
__n82["callee"] := __n83;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "str2";
__n86 := [ __n87 ];
__n82["arguments"] := __n86;
__n81["left"] := __n82;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 0.;
__n88["raw"] := "0";
__n81["right"] := __n88;
__n80["test"] := __n81;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "$ERROR";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "+";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "#3: var str1 = new String(\"h\"); var str2 = new String (\"h\"); str1.localeCompare(str2)===0. Actual: ";
__n96["raw"] := "'#3: var str1 = new String(\"h\"); var str2 = new String (\"h\"); str1.localeCompare(str2)===0. Actual: '";
__n95["left"] := __n96;
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "MemberExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "str1";
__n98["object"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "localeCompare";
__n100["raw"] := "\"localeCompare\"";
__n98["property"] := __n100;
__n98["computed"] := true;
__n97["callee"] := __n98;
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "str2";
__n101 := [ __n102 ];
__n97["arguments"] := __n101;
__n95["right"] := __n97;
__n94 := [ __n95 ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n80["consequent"] := __n89;
__n80["alternate"] := null;
__n1 := [ __n2, __n10, __n18, __n41, __n49, __n72, __n80 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n103 := [ "str1", "str2" ];
__n0["variableDeclarations"] := __n103;
__n104 := [  ];
__n0["functionDeclarations"] := __n104;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}