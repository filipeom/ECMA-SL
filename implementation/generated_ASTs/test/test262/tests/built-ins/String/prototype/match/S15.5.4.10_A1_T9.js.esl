function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "valueOf";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n13 := [  ];
__n12["body"] := __n13;
__n14 := [  ];
__n12["variableDeclarations"] := __n14;
__n15 := [  ];
__n12["functionDeclarations"] := __n15;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n16 := {  };
__n16["type"] := "Property";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "toString";
__n16["key"] := __n17;
__n18 := {  };
__n18["type"] := "UnaryExpression";
__n18["operator"] := "void";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 0.;
__n19["raw"] := "0";
__n18["argument"] := __n19;
__n18["prefix"] := true;
__n16["value"] := __n18;
__n16["computed"] := false;
__n16["kind"] := "init";
__n16["shorthand"] := false;
__n7 := [ __n8, __n16 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n20 := {  };
__n20["type"] := "VariableDeclaration";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__matched";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "NewExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "String";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "__obj";
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["object"] := __n26;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "match";
__n30["raw"] := "\"match\"";
__n25["property"] := __n30;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "FunctionExpression";
__n33["id"] := null;
__n34 := [  ];
__n33["params"] := __n34;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n36 := [  ];
__n35["body"] := __n36;
__n37 := [  ];
__n35["variableDeclarations"] := __n37;
__n38 := [  ];
__n35["functionDeclarations"] := __n38;
__n35["codeType"] := "function";
__n35["strict"] := false;
__n33["body"] := __n35;
__n33["generator"] := false;
__n33["async"] := false;
__n33["expression"] := false;
__n32["callee"] := __n33;
__n39 := [  ];
__n32["arguments"] := __n39;
__n31 := [ __n32 ];
__n24["arguments"] := __n31;
__n22["init"] := __n24;
__n21 := [ __n22 ];
__n20["declarations"] := __n21;
__n20["kind"] := "var";
__n40 := {  };
__n40["type"] := "VariableDeclaration";
__n42 := {  };
__n42["type"] := "VariableDeclarator";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "__expected";
__n42["id"] := __n43;
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "RegExp";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "undefined";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["object"] := __n46;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "exec";
__n50["raw"] := "\"exec\"";
__n45["property"] := __n50;
__n45["computed"] := true;
__n44["callee"] := __n45;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "undefined";
__n52["raw"] := "\"undefined\"";
__n51 := [ __n52 ];
__n44["arguments"] := __n51;
__n42["init"] := __n44;
__n41 := [ __n42 ];
__n40["declarations"] := __n41;
__n40["kind"] := "var";
__n53 := {  };
__n53["type"] := "IfStatement";
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "!==";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "__matched";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "length";
__n57["raw"] := "\"length\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["left"] := __n55;
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "__expected";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "length";
__n60["raw"] := "\"length\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n54["right"] := __n58;
__n53["test"] := __n54;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$ERROR";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "+";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "#1: __obj = {valueOf:function(){}, toString:void 0}; __matched = new String(__obj).match(function(){}()); __expected = RegExp(undefined).exec(\"undefined\"); __matched.length === __expected.length. Actual: ";
__n68["raw"] := "'#1: __obj = {valueOf:function(){}, toString:void 0}; __matched = new String(__obj).match(function(){}()); __expected = RegExp(undefined).exec(\"undefined\"); __matched.length === __expected.length. Actual: '";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "__matched";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "length";
__n71["raw"] := "\"length\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n67["right"] := __n69;
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n53["consequent"] := __n61;
__n53["alternate"] := null;
__n72 := {  };
__n72["type"] := "IfStatement";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "!==";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "__matched";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "index";
__n76["raw"] := "\"index\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["left"] := __n74;
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "__expected";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "index";
__n79["raw"] := "\"index\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n73["right"] := __n77;
__n72["test"] := __n73;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#2: __obj = {valueOf:function(){}, toString:void 0}; __matched = new String(__obj).match(function(){}()); __expected = RegExp(undefined).exec(\"undefined\"); __matched.index === __expected.index. Actual: ";
__n87["raw"] := "'#2: __obj = {valueOf:function(){}, toString:void 0}; __matched = new String(__obj).match(function(){}()); __expected = RegExp(undefined).exec(\"undefined\"); __matched.index === __expected.index. Actual: '";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "__matched";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "index";
__n90["raw"] := "\"index\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n86["right"] := __n88;
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n72["consequent"] := __n80;
__n72["alternate"] := null;
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "!==";
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "__matched";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "input";
__n95["raw"] := "\"input\"";
__n93["property"] := __n95;
__n93["computed"] := true;
__n92["left"] := __n93;
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "__expected";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "input";
__n98["raw"] := "\"input\"";
__n96["property"] := __n98;
__n96["computed"] := true;
__n92["right"] := __n96;
__n91["test"] := __n92;
__n99 := {  };
__n99["type"] := "BlockStatement";
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "$ERROR";
__n102["callee"] := __n103;
__n105 := {  };
__n105["type"] := "BinaryExpression";
__n105["operator"] := "+";
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "#3: __obj = {valueOf:function(){}, toString:void 0}; __matched = new String(__obj).match(function(){}()); __expected = RegExp(undefined).exec(\"undefined\"); __matched.input === __expected.input. Actual: ";
__n106["raw"] := "'#3: __obj = {valueOf:function(){}, toString:void 0}; __matched = new String(__obj).match(function(){}()); __expected = RegExp(undefined).exec(\"undefined\"); __matched.input === __expected.input. Actual: '";
__n105["left"] := __n106;
__n107 := {  };
__n107["type"] := "MemberExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "__matched";
__n107["object"] := __n108;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "input";
__n109["raw"] := "\"input\"";
__n107["property"] := __n109;
__n107["computed"] := true;
__n105["right"] := __n107;
__n104 := [ __n105 ];
__n102["arguments"] := __n104;
__n101["expression"] := __n102;
__n100 := [ __n101 ];
__n99["body"] := __n100;
__n91["consequent"] := __n99;
__n91["alternate"] := null;
__n110 := {  };
__n110["type"] := "ForStatement";
__n111 := {  };
__n111["type"] := "VariableDeclaration";
__n113 := {  };
__n113["type"] := "VariableDeclarator";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "index";
__n113["id"] := __n114;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := 0.;
__n115["raw"] := "0";
__n113["init"] := __n115;
__n112 := [ __n113 ];
__n111["declarations"] := __n112;
__n111["kind"] := "var";
__n110["init"] := __n111;
__n116 := {  };
__n116["type"] := "BinaryExpression";
__n116["operator"] := "<";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "index";
__n116["left"] := __n117;
__n118 := {  };
__n118["type"] := "MemberExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "__expected";
__n118["object"] := __n119;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "length";
__n120["raw"] := "\"length\"";
__n118["property"] := __n120;
__n118["computed"] := true;
__n116["right"] := __n118;
__n110["test"] := __n116;
__n121 := {  };
__n121["type"] := "UpdateExpression";
__n121["operator"] := "++";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "index";
__n121["argument"] := __n122;
__n121["prefix"] := false;
__n110["update"] := __n121;
__n123 := {  };
__n123["type"] := "BlockStatement";
__n125 := {  };
__n125["type"] := "IfStatement";
__n126 := {  };
__n126["type"] := "BinaryExpression";
__n126["operator"] := "!==";
__n127 := {  };
__n127["type"] := "MemberExpression";
__n127["computed"] := true;
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "__matched";
__n127["object"] := __n128;
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "index";
__n127["property"] := __n129;
__n126["left"] := __n127;
__n130 := {  };
__n130["type"] := "MemberExpression";
__n130["computed"] := true;
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "__expected";
__n130["object"] := __n131;
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "index";
__n130["property"] := __n132;
__n126["right"] := __n130;
__n125["test"] := __n126;
__n133 := {  };
__n133["type"] := "BlockStatement";
__n135 := {  };
__n135["type"] := "ExpressionStatement";
__n136 := {  };
__n136["type"] := "CallExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "$ERROR";
__n136["callee"] := __n137;
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "+";
__n140 := {  };
__n140["type"] := "BinaryExpression";
__n140["operator"] := "+";
__n141 := {  };
__n141["type"] := "BinaryExpression";
__n141["operator"] := "+";
__n142 := {  };
__n142["type"] := "BinaryExpression";
__n142["operator"] := "+";
__n143 := {  };
__n143["type"] := "BinaryExpression";
__n143["operator"] := "+";
__n144 := {  };
__n144["type"] := "BinaryExpression";
__n144["operator"] := "+";
__n145 := {  };
__n145["type"] := "BinaryExpression";
__n145["operator"] := "+";
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := "#4.";
__n146["raw"] := "'#4.'";
__n145["left"] := __n146;
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "index";
__n145["right"] := __n147;
__n144["left"] := __n145;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := ": __obj = {valueOf:function(){}, toString:void 0}; __matched = new String(__obj).match(function(){}()); __expected = RegExp(undefined).exec(\"undefined\"); __matched[";
__n148["raw"] := "': __obj = {valueOf:function(){}, toString:void 0}; __matched = new String(__obj).match(function(){}()); __expected = RegExp(undefined).exec(\"undefined\"); __matched['";
__n144["right"] := __n148;
__n143["left"] := __n144;
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "index";
__n143["right"] := __n149;
__n142["left"] := __n143;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "]===__expected[";
__n150["raw"] := "']===__expected['";
__n142["right"] := __n150;
__n141["left"] := __n142;
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "index";
__n141["right"] := __n151;
__n140["left"] := __n141;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := "]. Actual: ";
__n152["raw"] := "']. Actual: '";
__n140["right"] := __n152;
__n139["left"] := __n140;
__n153 := {  };
__n153["type"] := "MemberExpression";
__n153["computed"] := true;
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "__matched";
__n153["object"] := __n154;
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "index";
__n153["property"] := __n155;
__n139["right"] := __n153;
__n138 := [ __n139 ];
__n136["arguments"] := __n138;
__n135["expression"] := __n136;
__n134 := [ __n135 ];
__n133["body"] := __n134;
__n125["consequent"] := __n133;
__n125["alternate"] := null;
__n124 := [ __n125 ];
__n123["body"] := __n124;
__n110["body"] := __n123;
__n1 := [ __n2, __n20, __n40, __n53, __n72, __n91, __n110 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n156 := [ "__obj", "__matched", "__expected", "index" ];
__n0["variableDeclarations"] := __n156;
__n157 := [  ];
__n0["functionDeclarations"] := __n157;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}