function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__string";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "Boston, MA 02134";
__n6["raw"] := "\"Boston, MA 02134\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "__matches";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ArrayExpression";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "02134";
__n13["raw"] := "\"02134\"";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "02134";
__n14["raw"] := "\"02134\"";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "undefined";
__n12 := [ __n13, __n14, __n15 ];
__n11["elements"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n16 := {  };
__n16["type"] := "VariableDeclaration";
__n18 := {  };
__n18["type"] := "VariableDeclarator";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "__re";
__n18["id"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "/([\\d]{5})([-\\ ]?[\\d]{4})?$/";
__n20["raw"] := "/([\\d]{5})([-\\ ]?[\\d]{4})?$/";
__n20["source"] := "([\\d]{5})([-\\ ]?[\\d]{4})?$";
__n21 := {  };
__n21["type"] := "RegExp";
__n22 := {  };
__n22["type"] := "Alternative";
__n24 := {  };
__n24["type"] := "Group";
__n24["capturing"] := true;
__n24["number"] := 1.;
__n25 := {  };
__n25["type"] := "Repetition";
__n26 := {  };
__n26["type"] := "CharacterClass";
__n28 := {  };
__n28["type"] := "Char";
__n28["value"] := "\\d";
__n28["kind"] := "meta";
__n28["symbol"] := 'undefined;
__n28["codePoint"] := nan;
__n27 := [ __n28 ];
__n26["expressions"] := __n27;
__n25["expression"] := __n26;
__n29 := {  };
__n29["type"] := "Quantifier";
__n29["kind"] := "Range";
__n29["from"] := 5.;
__n29["to"] := 5.;
__n29["greedy"] := true;
__n25["quantifier"] := __n29;
__n25["parenIndex"] := 1.;
__n25["parenCount"] := 1.;
__n24["expression"] := __n25;
__n30 := {  };
__n30["type"] := "Repetition";
__n31 := {  };
__n31["type"] := "Group";
__n31["capturing"] := true;
__n31["number"] := 2.;
__n32 := {  };
__n32["type"] := "Alternative";
__n34 := {  };
__n34["type"] := "Repetition";
__n35 := {  };
__n35["type"] := "CharacterClass";
__n37 := {  };
__n37["type"] := "Char";
__n37["value"] := "-";
__n37["kind"] := "simple";
__n37["symbol"] := "-";
__n37["codePoint"] := 45.;
__n38 := {  };
__n38["type"] := "Char";
__n38["value"] := " ";
__n38["kind"] := "simple";
__n38["symbol"] := " ";
__n38["codePoint"] := 32.;
__n38["escaped"] := true;
__n36 := [ __n37, __n38 ];
__n35["expressions"] := __n36;
__n34["expression"] := __n35;
__n39 := {  };
__n39["type"] := "Quantifier";
__n39["kind"] := "?";
__n39["greedy"] := true;
__n34["quantifier"] := __n39;
__n34["parenIndex"] := 2.;
__n34["parenCount"] := 1.;
__n40 := {  };
__n40["type"] := "Repetition";
__n41 := {  };
__n41["type"] := "CharacterClass";
__n43 := {  };
__n43["type"] := "Char";
__n43["value"] := "\\d";
__n43["kind"] := "meta";
__n43["symbol"] := 'undefined;
__n43["codePoint"] := nan;
__n42 := [ __n43 ];
__n41["expressions"] := __n42;
__n40["expression"] := __n41;
__n44 := {  };
__n44["type"] := "Quantifier";
__n44["kind"] := "Range";
__n44["from"] := 4.;
__n44["to"] := 4.;
__n44["greedy"] := true;
__n40["quantifier"] := __n44;
__n40["parenIndex"] := 2.;
__n40["parenCount"] := 1.;
__n33 := [ __n34, __n40 ];
__n32["expressions"] := __n33;
__n31["expression"] := __n32;
__n30["expression"] := __n31;
__n45 := {  };
__n45["type"] := "Quantifier";
__n45["kind"] := "?";
__n45["greedy"] := true;
__n30["quantifier"] := __n45;
__n30["parenIndex"] := 2.;
__n30["parenCount"] := 0.;
__n46 := {  };
__n46["type"] := "Assertion";
__n46["kind"] := "$";
__n23 := [ __n24, __n30, __n46 ];
__n22["expressions"] := __n23;
__n21["body"] := __n22;
__n21["flags"] := "";
__n21["nCaps"] := 2.;
__n20["regex"] := __n21;
__n18["init"] := __n20;
__n17 := [ __n18 ];
__n16["declarations"] := __n17;
__n16["kind"] := "var";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "AssignmentExpression";
__n48["operator"] := "=";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "__re";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "lastIndex";
__n51["raw"] := "\"lastIndex\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["left"] := __n49;
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "__string";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "lastIndexOf";
__n56["raw"] := "\"lastIndexOf\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["callee"] := __n54;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "0";
__n58["raw"] := "\"0\"";
__n57 := [ __n58 ];
__n53["arguments"] := __n57;
__n52["left"] := __n53;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 1.;
__n59["raw"] := "1";
__n52["right"] := __n59;
__n48["right"] := __n52;
__n47["expression"] := __n48;
__n60 := {  };
__n60["type"] := "IfStatement";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "!==";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "__string";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "match";
__n66["raw"] := "\"match\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "__re";
__n67 := [ __n68 ];
__n63["arguments"] := __n67;
__n62["object"] := __n63;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "length";
__n69["raw"] := "\"length\"";
__n62["property"] := __n69;
__n62["computed"] := true;
__n61["left"] := __n62;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 3.;
__n70["raw"] := "3";
__n61["right"] := __n70;
__n60["test"] := __n61;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "$ERROR";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "#1: __string.match(__re).length=== 3. Actual: ";
__n78["raw"] := "'#1: __string.match(__re).length=== 3. Actual: '";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "__string";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "match";
__n83["raw"] := "\"match\"";
__n81["property"] := __n83;
__n81["computed"] := true;
__n80["callee"] := __n81;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "__re";
__n84 := [ __n85 ];
__n80["arguments"] := __n84;
__n79["object"] := __n80;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "length";
__n86["raw"] := "\"length\"";
__n79["property"] := __n86;
__n79["computed"] := true;
__n77["right"] := __n79;
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n60["consequent"] := __n71;
__n60["alternate"] := null;
__n87 := {  };
__n87["type"] := "IfStatement";
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "!==";
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "__string";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "match";
__n93["raw"] := "\"match\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n90["callee"] := __n91;
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "__re";
__n94 := [ __n95 ];
__n90["arguments"] := __n94;
__n89["object"] := __n90;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "index";
__n96["raw"] := "\"index\"";
__n89["property"] := __n96;
__n89["computed"] := true;
__n88["left"] := __n89;
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "MemberExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "__string";
__n98["object"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "lastIndexOf";
__n100["raw"] := "\"lastIndexOf\"";
__n98["property"] := __n100;
__n98["computed"] := true;
__n97["callee"] := __n98;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "0";
__n102["raw"] := "\"0\"";
__n101 := [ __n102 ];
__n97["arguments"] := __n101;
__n88["right"] := __n97;
__n87["test"] := __n88;
__n103 := {  };
__n103["type"] := "BlockStatement";
__n105 := {  };
__n105["type"] := "ExpressionStatement";
__n106 := {  };
__n106["type"] := "CallExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "$ERROR";
__n106["callee"] := __n107;
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "+";
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "#2: __string.match(__re).index ===__string.lastIndexOf(\"0\"). Actual: ";
__n110["raw"] := "'#2: __string.match(__re).index ===__string.lastIndexOf(\"0\"). Actual: '";
__n109["left"] := __n110;
__n111 := {  };
__n111["type"] := "MemberExpression";
__n112 := {  };
__n112["type"] := "CallExpression";
__n113 := {  };
__n113["type"] := "MemberExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "__string";
__n113["object"] := __n114;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "match";
__n115["raw"] := "\"match\"";
__n113["property"] := __n115;
__n113["computed"] := true;
__n112["callee"] := __n113;
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "__re";
__n116 := [ __n117 ];
__n112["arguments"] := __n116;
__n111["object"] := __n112;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "index";
__n118["raw"] := "\"index\"";
__n111["property"] := __n118;
__n111["computed"] := true;
__n109["right"] := __n111;
__n108 := [ __n109 ];
__n106["arguments"] := __n108;
__n105["expression"] := __n106;
__n104 := [ __n105 ];
__n103["body"] := __n104;
__n87["consequent"] := __n103;
__n87["alternate"] := null;
__n119 := {  };
__n119["type"] := "ForStatement";
__n120 := {  };
__n120["type"] := "VariableDeclaration";
__n122 := {  };
__n122["type"] := "VariableDeclarator";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "mi";
__n122["id"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 0.;
__n124["raw"] := "0";
__n122["init"] := __n124;
__n121 := [ __n122 ];
__n120["declarations"] := __n121;
__n120["kind"] := "var";
__n119["init"] := __n120;
__n125 := {  };
__n125["type"] := "BinaryExpression";
__n125["operator"] := "<";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "mi";
__n125["left"] := __n126;
__n127 := {  };
__n127["type"] := "MemberExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "__matches";
__n127["object"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "length";
__n129["raw"] := "\"length\"";
__n127["property"] := __n129;
__n127["computed"] := true;
__n125["right"] := __n127;
__n119["test"] := __n125;
__n130 := {  };
__n130["type"] := "UpdateExpression";
__n130["operator"] := "++";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "mi";
__n130["argument"] := __n131;
__n130["prefix"] := false;
__n119["update"] := __n130;
__n132 := {  };
__n132["type"] := "BlockStatement";
__n134 := {  };
__n134["type"] := "IfStatement";
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "!==";
__n136 := {  };
__n136["type"] := "MemberExpression";
__n136["computed"] := true;
__n137 := {  };
__n137["type"] := "CallExpression";
__n138 := {  };
__n138["type"] := "MemberExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "__string";
__n138["object"] := __n139;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "match";
__n140["raw"] := "\"match\"";
__n138["property"] := __n140;
__n138["computed"] := true;
__n137["callee"] := __n138;
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "__re";
__n141 := [ __n142 ];
__n137["arguments"] := __n141;
__n136["object"] := __n137;
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "mi";
__n136["property"] := __n143;
__n135["left"] := __n136;
__n144 := {  };
__n144["type"] := "MemberExpression";
__n144["computed"] := true;
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "__matches";
__n144["object"] := __n145;
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "mi";
__n144["property"] := __n146;
__n135["right"] := __n144;
__n134["test"] := __n135;
__n147 := {  };
__n147["type"] := "BlockStatement";
__n149 := {  };
__n149["type"] := "ExpressionStatement";
__n150 := {  };
__n150["type"] := "CallExpression";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "$ERROR";
__n150["callee"] := __n151;
__n153 := {  };
__n153["type"] := "BinaryExpression";
__n153["operator"] := "+";
__n154 := {  };
__n154["type"] := "BinaryExpression";
__n154["operator"] := "+";
__n155 := {  };
__n155["type"] := "BinaryExpression";
__n155["operator"] := "+";
__n156 := {  };
__n156["type"] := "BinaryExpression";
__n156["operator"] := "+";
__n157 := {  };
__n157["type"] := "BinaryExpression";
__n157["operator"] := "+";
__n158 := {  };
__n158["type"] := "BinaryExpression";
__n158["operator"] := "+";
__n159 := {  };
__n159["type"] := "BinaryExpression";
__n159["operator"] := "+";
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := "#3.";
__n160["raw"] := "'#3.'";
__n159["left"] := __n160;
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "mi";
__n159["right"] := __n161;
__n158["left"] := __n159;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := ": __string.match(__re)[";
__n162["raw"] := "': __string.match(__re)['";
__n158["right"] := __n162;
__n157["left"] := __n158;
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "mi";
__n157["right"] := __n163;
__n156["left"] := __n157;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := "]===__matches[";
__n164["raw"] := "']===__matches['";
__n156["right"] := __n164;
__n155["left"] := __n156;
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "mi";
__n155["right"] := __n165;
__n154["left"] := __n155;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "]. Actual: ";
__n166["raw"] := "']. Actual: '";
__n154["right"] := __n166;
__n153["left"] := __n154;
__n167 := {  };
__n167["type"] := "MemberExpression";
__n167["computed"] := true;
__n168 := {  };
__n168["type"] := "CallExpression";
__n169 := {  };
__n169["type"] := "MemberExpression";
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "__string";
__n169["object"] := __n170;
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := "match";
__n171["raw"] := "\"match\"";
__n169["property"] := __n171;
__n169["computed"] := true;
__n168["callee"] := __n169;
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "__re";
__n172 := [ __n173 ];
__n168["arguments"] := __n172;
__n167["object"] := __n168;
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "mi";
__n167["property"] := __n174;
__n153["right"] := __n167;
__n152 := [ __n153 ];
__n150["arguments"] := __n152;
__n149["expression"] := __n150;
__n148 := [ __n149 ];
__n147["body"] := __n148;
__n134["consequent"] := __n147;
__n134["alternate"] := null;
__n133 := [ __n134 ];
__n132["body"] := __n133;
__n119["body"] := __n132;
__n1 := [ __n2, __n7, __n16, __n47, __n60, __n87, __n119 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n175 := [ "__string", "__matches", "__re", "mi" ];
__n0["variableDeclarations"] := __n175;
__n176 := [  ];
__n0["functionDeclarations"] := __n176;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}