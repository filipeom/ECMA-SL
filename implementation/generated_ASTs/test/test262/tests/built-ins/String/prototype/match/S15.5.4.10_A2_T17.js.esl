function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__re";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "/0./";
__n6["raw"] := "/0./";
__n6["source"] := "0.";
__n7 := {  };
__n7["type"] := "RegExp";
__n8 := {  };
__n8["type"] := "Alternative";
__n10 := {  };
__n10["type"] := "Char";
__n10["value"] := "0";
__n10["kind"] := "simple";
__n10["symbol"] := "0";
__n10["codePoint"] := 48.;
__n11 := {  };
__n11["type"] := "Char";
__n11["value"] := ".";
__n11["kind"] := "meta";
__n11["symbol"] := ".";
__n11["codePoint"] := nan;
__n9 := [ __n10, __n11 ];
__n8["expressions"] := __n9;
__n7["body"] := __n8;
__n7["flags"] := "";
__n7["nCaps"] := 0.;
__n6["regex"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "__num";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 10203040506070809000.;
__n16["raw"] := "10203040506070809000";
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "AssignmentExpression";
__n18["operator"] := "=";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "Number";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "prototype";
__n22["raw"] := "\"prototype\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["object"] := __n20;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "match";
__n23["raw"] := "\"match\"";
__n19["property"] := __n23;
__n19["computed"] := true;
__n18["left"] := __n19;
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "String";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "prototype";
__n27["raw"] := "\"prototype\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["object"] := __n25;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "match";
__n28["raw"] := "\"match\"";
__n24["property"] := __n28;
__n24["computed"] := true;
__n18["right"] := __n24;
__n17["expression"] := __n18;
__n29 := {  };
__n29["type"] := "IfStatement";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "!==";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n31["computed"] := true;
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "__num";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "match";
__n35["raw"] := "\"match\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "__re";
__n36 := [ __n37 ];
__n32["arguments"] := __n36;
__n31["object"] := __n32;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 0.;
__n38["raw"] := "0";
__n31["property"] := __n38;
__n30["left"] := __n31;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "02";
__n39["raw"] := "\"02\"";
__n30["right"] := __n39;
__n29["test"] := __n30;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "+";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#1: __num.match(__re)[0]=== \"02\". Actual: ";
__n47["raw"] := "'#1: __num.match(__re)[0]=== \"02\". Actual: '";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "MemberExpression";
__n48["computed"] := true;
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "__num";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "match";
__n52["raw"] := "\"match\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "__re";
__n53 := [ __n54 ];
__n49["arguments"] := __n53;
__n48["object"] := __n49;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 0.;
__n55["raw"] := "0";
__n48["property"] := __n55;
__n46["right"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n29["consequent"] := __n40;
__n29["alternate"] := null;
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "!==";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "__num";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "match";
__n62["raw"] := "\"match\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "__re";
__n63 := [ __n64 ];
__n59["arguments"] := __n63;
__n58["object"] := __n59;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "length";
__n65["raw"] := "\"length\"";
__n58["property"] := __n65;
__n58["computed"] := true;
__n57["left"] := __n58;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 1.;
__n66["raw"] := "1";
__n57["right"] := __n66;
__n56["test"] := __n57;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "+";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "#2: __num.match(__re).length ===1. Actual: ";
__n74["raw"] := "'#2: __num.match(__re).length ===1. Actual: '";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "__num";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "match";
__n79["raw"] := "\"match\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n76["callee"] := __n77;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "__re";
__n80 := [ __n81 ];
__n76["arguments"] := __n80;
__n75["object"] := __n76;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "length";
__n82["raw"] := "\"length\"";
__n75["property"] := __n82;
__n75["computed"] := true;
__n73["right"] := __n75;
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n56["consequent"] := __n67;
__n56["alternate"] := null;
__n83 := {  };
__n83["type"] := "IfStatement";
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "!==";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "__num";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "match";
__n89["raw"] := "\"match\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n86["callee"] := __n87;
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "__re";
__n90 := [ __n91 ];
__n86["arguments"] := __n90;
__n85["object"] := __n86;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "index";
__n92["raw"] := "\"index\"";
__n85["property"] := __n92;
__n85["computed"] := true;
__n84["left"] := __n85;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 1.;
__n93["raw"] := "1";
__n84["right"] := __n93;
__n83["test"] := __n84;
__n94 := {  };
__n94["type"] := "BlockStatement";
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "$ERROR";
__n97["callee"] := __n98;
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "+";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "#3: __num.match(__re).index ===1. Actual: ";
__n101["raw"] := "'#3: __num.match(__re).index ===1. Actual: '";
__n100["left"] := __n101;
__n102 := {  };
__n102["type"] := "MemberExpression";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "__num";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "match";
__n106["raw"] := "\"match\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n103["callee"] := __n104;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "__re";
__n107 := [ __n108 ];
__n103["arguments"] := __n107;
__n102["object"] := __n103;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "index";
__n109["raw"] := "\"index\"";
__n102["property"] := __n109;
__n102["computed"] := true;
__n100["right"] := __n102;
__n99 := [ __n100 ];
__n97["arguments"] := __n99;
__n96["expression"] := __n97;
__n95 := [ __n96 ];
__n94["body"] := __n95;
__n83["consequent"] := __n94;
__n83["alternate"] := null;
__n110 := {  };
__n110["type"] := "IfStatement";
__n111 := {  };
__n111["type"] := "BinaryExpression";
__n111["operator"] := "!==";
__n112 := {  };
__n112["type"] := "MemberExpression";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "MemberExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "__num";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "match";
__n116["raw"] := "\"match\"";
__n114["property"] := __n116;
__n114["computed"] := true;
__n113["callee"] := __n114;
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "__re";
__n117 := [ __n118 ];
__n113["arguments"] := __n117;
__n112["object"] := __n113;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "input";
__n119["raw"] := "\"input\"";
__n112["property"] := __n119;
__n112["computed"] := true;
__n111["left"] := __n112;
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "String";
__n120["callee"] := __n121;
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "__num";
__n122 := [ __n123 ];
__n120["arguments"] := __n122;
__n111["right"] := __n120;
__n110["test"] := __n111;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "$ERROR";
__n127["callee"] := __n128;
__n130 := {  };
__n130["type"] := "BinaryExpression";
__n130["operator"] := "+";
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "#4: __num.match(__re).input ===String(__num). Actual: ";
__n131["raw"] := "'#4: __num.match(__re).input ===String(__num). Actual: '";
__n130["left"] := __n131;
__n132 := {  };
__n132["type"] := "MemberExpression";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "MemberExpression";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "__num";
__n134["object"] := __n135;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "match";
__n136["raw"] := "\"match\"";
__n134["property"] := __n136;
__n134["computed"] := true;
__n133["callee"] := __n134;
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "__re";
__n137 := [ __n138 ];
__n133["arguments"] := __n137;
__n132["object"] := __n133;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "input";
__n139["raw"] := "\"input\"";
__n132["property"] := __n139;
__n132["computed"] := true;
__n130["right"] := __n132;
__n129 := [ __n130 ];
__n127["arguments"] := __n129;
__n126["expression"] := __n127;
__n125 := [ __n126 ];
__n124["body"] := __n125;
__n110["consequent"] := __n124;
__n110["alternate"] := null;
__n1 := [ __n2, __n12, __n17, __n29, __n56, __n83, __n110 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n140 := [ "__re", "__num" ];
__n0["variableDeclarations"] := __n140;
__n141 := [  ];
__n0["functionDeclarations"] := __n141;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}