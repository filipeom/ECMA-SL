function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__re";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "/0./";
__n6["raw"] := "/0./";
__n6["source"] := "0.";
__n7 := {  };
__n7["type"] := "RegExp";
__n8 := {  };
__n8["type"] := "Alternative";
__n10 := {  };
__n10["type"] := "Char";
__n10["value"] := "0";
__n10["kind"] := "simple";
__n10["symbol"] := "0";
__n10["codePoint"] := 48.;
__n11 := {  };
__n11["type"] := "Char";
__n11["value"] := ".";
__n11["kind"] := "meta";
__n11["symbol"] := ".";
__n11["codePoint"] := nan;
__n9 := [ __n10, __n11 ];
__n8["expressions"] := __n9;
__n7["body"] := __n8;
__n7["flags"] := "";
__n7["nCaps"] := 0.;
__n6["regex"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "AssignmentExpression";
__n13["operator"] := "=";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "__re";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "lastIndex";
__n16["raw"] := "\"lastIndex\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["left"] := __n14;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n13["right"] := __n17;
__n12["expression"] := __n13;
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "__num";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 10203040506070809000.;
__n22["raw"] := "10203040506070809000";
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "AssignmentExpression";
__n24["operator"] := "=";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Number";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "prototype";
__n28["raw"] := "\"prototype\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["object"] := __n26;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "match";
__n29["raw"] := "\"match\"";
__n25["property"] := __n29;
__n25["computed"] := true;
__n24["left"] := __n25;
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "String";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "prototype";
__n33["raw"] := "\"prototype\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["object"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "match";
__n34["raw"] := "\"match\"";
__n30["property"] := __n34;
__n30["computed"] := true;
__n24["right"] := __n30;
__n23["expression"] := __n24;
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n37["computed"] := true;
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "__num";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "match";
__n41["raw"] := "\"match\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "__re";
__n42 := [ __n43 ];
__n38["arguments"] := __n42;
__n37["object"] := __n38;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 0.;
__n44["raw"] := "0";
__n37["property"] := __n44;
__n36["left"] := __n37;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "02";
__n45["raw"] := "\"02\"";
__n36["right"] := __n45;
__n35["test"] := __n36;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "$ERROR";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#1: __num.match(__re)[0]=== \"02\". Actual: ";
__n53["raw"] := "'#1: __num.match(__re)[0]=== \"02\". Actual: '";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "MemberExpression";
__n54["computed"] := true;
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "__num";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "match";
__n58["raw"] := "\"match\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "__re";
__n59 := [ __n60 ];
__n55["arguments"] := __n59;
__n54["object"] := __n55;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 0.;
__n61["raw"] := "0";
__n54["property"] := __n61;
__n52["right"] := __n54;
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["expression"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n35["consequent"] := __n46;
__n35["alternate"] := null;
__n62 := {  };
__n62["type"] := "IfStatement";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "!==";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "__num";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "match";
__n68["raw"] := "\"match\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "__re";
__n69 := [ __n70 ];
__n65["arguments"] := __n69;
__n64["object"] := __n65;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "length";
__n71["raw"] := "\"length\"";
__n64["property"] := __n71;
__n64["computed"] := true;
__n63["left"] := __n64;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.;
__n72["raw"] := "1";
__n63["right"] := __n72;
__n62["test"] := __n63;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "$ERROR";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "+";
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "#2: __num.match(__re).length ===1. Actual: ";
__n80["raw"] := "'#2: __num.match(__re).length ===1. Actual: '";
__n79["left"] := __n80;
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "__num";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "match";
__n85["raw"] := "\"match\"";
__n83["property"] := __n85;
__n83["computed"] := true;
__n82["callee"] := __n83;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "__re";
__n86 := [ __n87 ];
__n82["arguments"] := __n86;
__n81["object"] := __n82;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "length";
__n88["raw"] := "\"length\"";
__n81["property"] := __n88;
__n81["computed"] := true;
__n79["right"] := __n81;
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["expression"] := __n76;
__n74 := [ __n75 ];
__n73["body"] := __n74;
__n62["consequent"] := __n73;
__n62["alternate"] := null;
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "!==";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "__num";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "match";
__n95["raw"] := "\"match\"";
__n93["property"] := __n95;
__n93["computed"] := true;
__n92["callee"] := __n93;
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "__re";
__n96 := [ __n97 ];
__n92["arguments"] := __n96;
__n91["object"] := __n92;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "index";
__n98["raw"] := "\"index\"";
__n91["property"] := __n98;
__n91["computed"] := true;
__n90["left"] := __n91;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 1.;
__n99["raw"] := "1";
__n90["right"] := __n99;
__n89["test"] := __n90;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "$ERROR";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "+";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "#3: __num.match(__re).index ===1. Actual: ";
__n107["raw"] := "'#3: __num.match(__re).index ===1. Actual: '";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "MemberExpression";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "MemberExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "__num";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "match";
__n112["raw"] := "\"match\"";
__n110["property"] := __n112;
__n110["computed"] := true;
__n109["callee"] := __n110;
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "__re";
__n113 := [ __n114 ];
__n109["arguments"] := __n113;
__n108["object"] := __n109;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "index";
__n115["raw"] := "\"index\"";
__n108["property"] := __n115;
__n108["computed"] := true;
__n106["right"] := __n108;
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n102["expression"] := __n103;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n89["consequent"] := __n100;
__n89["alternate"] := null;
__n116 := {  };
__n116["type"] := "IfStatement";
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "!==";
__n118 := {  };
__n118["type"] := "MemberExpression";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "MemberExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "__num";
__n120["object"] := __n121;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "match";
__n122["raw"] := "\"match\"";
__n120["property"] := __n122;
__n120["computed"] := true;
__n119["callee"] := __n120;
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "__re";
__n123 := [ __n124 ];
__n119["arguments"] := __n123;
__n118["object"] := __n119;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := "input";
__n125["raw"] := "\"input\"";
__n118["property"] := __n125;
__n118["computed"] := true;
__n117["left"] := __n118;
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "String";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "__num";
__n128 := [ __n129 ];
__n126["arguments"] := __n128;
__n117["right"] := __n126;
__n116["test"] := __n117;
__n130 := {  };
__n130["type"] := "BlockStatement";
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "$ERROR";
__n133["callee"] := __n134;
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "+";
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "#4: __num.match(__re).input ===String(__num). Actual: ";
__n137["raw"] := "'#4: __num.match(__re).input ===String(__num). Actual: '";
__n136["left"] := __n137;
__n138 := {  };
__n138["type"] := "MemberExpression";
__n139 := {  };
__n139["type"] := "CallExpression";
__n140 := {  };
__n140["type"] := "MemberExpression";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "__num";
__n140["object"] := __n141;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := "match";
__n142["raw"] := "\"match\"";
__n140["property"] := __n142;
__n140["computed"] := true;
__n139["callee"] := __n140;
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "__re";
__n143 := [ __n144 ];
__n139["arguments"] := __n143;
__n138["object"] := __n139;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "input";
__n145["raw"] := "\"input\"";
__n138["property"] := __n145;
__n138["computed"] := true;
__n136["right"] := __n138;
__n135 := [ __n136 ];
__n133["arguments"] := __n135;
__n132["expression"] := __n133;
__n131 := [ __n132 ];
__n130["body"] := __n131;
__n116["consequent"] := __n130;
__n116["alternate"] := null;
__n1 := [ __n2, __n12, __n18, __n23, __n35, __n62, __n89, __n116 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n146 := [ "__re", "__num" ];
__n0["variableDeclarations"] := __n146;
__n147 := [  ];
__n0["functionDeclarations"] := __n147;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}