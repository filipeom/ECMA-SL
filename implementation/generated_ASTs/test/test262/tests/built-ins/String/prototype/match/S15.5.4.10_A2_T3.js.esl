function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__matches";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "1";
__n8["raw"] := "\"1\"";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "2";
__n9["raw"] := "\"2\"";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "3";
__n10["raw"] := "\"3\"";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "4";
__n11["raw"] := "\"4\"";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "5";
__n12["raw"] := "\"5\"";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "6";
__n13["raw"] := "\"6\"";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "7";
__n14["raw"] := "\"7\"";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "8";
__n15["raw"] := "\"8\"";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "9";
__n16["raw"] := "\"9\"";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "0";
__n17["raw"] := "\"0\"";
__n7 := [ __n8, __n9, __n10, __n11, __n12, __n13, __n14, __n15, __n16, __n17 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "__string";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "123456abcde7890";
__n22["raw"] := "\"123456abcde7890\"";
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n23 := {  };
__n23["type"] := "IfStatement";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "!==";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "__string";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "match";
__n29["raw"] := "\"match\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "/\\d{1}/g";
__n31["raw"] := "/\\d{1}/g";
__n31["source"] := "\\d{1}";
__n32 := {  };
__n32["type"] := "RegExp";
__n33 := {  };
__n33["type"] := "Repetition";
__n34 := {  };
__n34["type"] := "Char";
__n34["value"] := "\\d";
__n34["kind"] := "meta";
__n34["symbol"] := 'undefined;
__n34["codePoint"] := nan;
__n33["expression"] := __n34;
__n35 := {  };
__n35["type"] := "Quantifier";
__n35["kind"] := "Range";
__n35["from"] := 1.;
__n35["to"] := 1.;
__n35["greedy"] := true;
__n33["quantifier"] := __n35;
__n33["parenIndex"] := 0.;
__n33["parenCount"] := 0.;
__n32["body"] := __n33;
__n32["flags"] := "g";
__n32["nCaps"] := 0.;
__n31["regex"] := __n32;
__n30 := [ __n31 ];
__n26["arguments"] := __n30;
__n25["object"] := __n26;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "length";
__n36["raw"] := "\"length\"";
__n25["property"] := __n36;
__n25["computed"] := true;
__n24["left"] := __n25;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 10.;
__n37["raw"] := "10";
__n24["right"] := __n37;
__n23["test"] := __n24;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "$ERROR";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "+";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "#1: __string = \"123456abcde7890\"; __string.match(/\\d{1}/g).length=== 10. Actual: ";
__n45["raw"] := "'#1: __string = \"123456abcde7890\"; __string.match(/\\\\d{1}/g).length=== 10. Actual: '";
__n44["left"] := __n45;
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "__string";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "match";
__n50["raw"] := "\"match\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "/\\d{1}/g";
__n52["raw"] := "/\\d{1}/g";
__n52["source"] := "\\d{1}";
__n53 := {  };
__n53["type"] := "RegExp";
__n54 := {  };
__n54["type"] := "Repetition";
__n55 := {  };
__n55["type"] := "Char";
__n55["value"] := "\\d";
__n55["kind"] := "meta";
__n55["symbol"] := 'undefined;
__n55["codePoint"] := nan;
__n54["expression"] := __n55;
__n56 := {  };
__n56["type"] := "Quantifier";
__n56["kind"] := "Range";
__n56["from"] := 1.;
__n56["to"] := 1.;
__n56["greedy"] := true;
__n54["quantifier"] := __n56;
__n54["parenIndex"] := 0.;
__n54["parenCount"] := 0.;
__n53["body"] := __n54;
__n53["flags"] := "g";
__n53["nCaps"] := 0.;
__n52["regex"] := __n53;
__n51 := [ __n52 ];
__n47["arguments"] := __n51;
__n46["object"] := __n47;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "length";
__n57["raw"] := "\"length\"";
__n46["property"] := __n57;
__n46["computed"] := true;
__n44["right"] := __n46;
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n23["consequent"] := __n38;
__n23["alternate"] := null;
__n58 := {  };
__n58["type"] := "ForStatement";
__n59 := {  };
__n59["type"] := "VariableDeclaration";
__n61 := {  };
__n61["type"] := "VariableDeclarator";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "mi";
__n61["id"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 0.;
__n63["raw"] := "0";
__n61["init"] := __n63;
__n60 := [ __n61 ];
__n59["declarations"] := __n60;
__n59["kind"] := "var";
__n58["init"] := __n59;
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "<";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "mi";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "__matches";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "length";
__n68["raw"] := "\"length\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n64["right"] := __n66;
__n58["test"] := __n64;
__n69 := {  };
__n69["type"] := "UpdateExpression";
__n69["operator"] := "++";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "mi";
__n69["argument"] := __n70;
__n69["prefix"] := false;
__n58["update"] := __n69;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "IfStatement";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "!==";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n75["computed"] := true;
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "__string";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "match";
__n79["raw"] := "\"match\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n76["callee"] := __n77;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "/\\d{1}/g";
__n81["raw"] := "/\\d{1}/g";
__n81["source"] := "\\d{1}";
__n82 := {  };
__n82["type"] := "RegExp";
__n83 := {  };
__n83["type"] := "Repetition";
__n84 := {  };
__n84["type"] := "Char";
__n84["value"] := "\\d";
__n84["kind"] := "meta";
__n84["symbol"] := 'undefined;
__n84["codePoint"] := nan;
__n83["expression"] := __n84;
__n85 := {  };
__n85["type"] := "Quantifier";
__n85["kind"] := "Range";
__n85["from"] := 1.;
__n85["to"] := 1.;
__n85["greedy"] := true;
__n83["quantifier"] := __n85;
__n83["parenIndex"] := 0.;
__n83["parenCount"] := 0.;
__n82["body"] := __n83;
__n82["flags"] := "g";
__n82["nCaps"] := 0.;
__n81["regex"] := __n82;
__n80 := [ __n81 ];
__n76["arguments"] := __n80;
__n75["object"] := __n76;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "mi";
__n75["property"] := __n86;
__n74["left"] := __n75;
__n87 := {  };
__n87["type"] := "MemberExpression";
__n87["computed"] := true;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "__matches";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "mi";
__n87["property"] := __n89;
__n74["right"] := __n87;
__n73["test"] := __n74;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "$ERROR";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "+";
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "+";
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "+";
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "+";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "+";
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "+";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "#2.";
__n103["raw"] := "'#2.'";
__n102["left"] := __n103;
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "mi";
__n102["right"] := __n104;
__n101["left"] := __n102;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := ": __matches=[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]; __string = \"123456abcde7890\"; __string.match(/\\d{1}/g)[";
__n105["raw"] := "': __matches=[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]; __string = \"123456abcde7890\"; __string.match(/\\\\d{1}/g)['";
__n101["right"] := __n105;
__n100["left"] := __n101;
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "mi";
__n100["right"] := __n106;
__n99["left"] := __n100;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "]===__matches[";
__n107["raw"] := "']===__matches['";
__n99["right"] := __n107;
__n98["left"] := __n99;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "mi";
__n98["right"] := __n108;
__n97["left"] := __n98;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "]. Actual: ";
__n109["raw"] := "']. Actual: '";
__n97["right"] := __n109;
__n96["left"] := __n97;
__n110 := {  };
__n110["type"] := "MemberExpression";
__n110["computed"] := true;
__n111 := {  };
__n111["type"] := "CallExpression";
__n112 := {  };
__n112["type"] := "MemberExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "__string";
__n112["object"] := __n113;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "match";
__n114["raw"] := "\"match\"";
__n112["property"] := __n114;
__n112["computed"] := true;
__n111["callee"] := __n112;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "/\\d{1}/g";
__n116["raw"] := "/\\d{1}/g";
__n116["source"] := "\\d{1}";
__n117 := {  };
__n117["type"] := "RegExp";
__n118 := {  };
__n118["type"] := "Repetition";
__n119 := {  };
__n119["type"] := "Char";
__n119["value"] := "\\d";
__n119["kind"] := "meta";
__n119["symbol"] := 'undefined;
__n119["codePoint"] := nan;
__n118["expression"] := __n119;
__n120 := {  };
__n120["type"] := "Quantifier";
__n120["kind"] := "Range";
__n120["from"] := 1.;
__n120["to"] := 1.;
__n120["greedy"] := true;
__n118["quantifier"] := __n120;
__n118["parenIndex"] := 0.;
__n118["parenCount"] := 0.;
__n117["body"] := __n118;
__n117["flags"] := "g";
__n117["nCaps"] := 0.;
__n116["regex"] := __n117;
__n115 := [ __n116 ];
__n111["arguments"] := __n115;
__n110["object"] := __n111;
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "mi";
__n110["property"] := __n121;
__n96["right"] := __n110;
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n73["consequent"] := __n90;
__n73["alternate"] := null;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n58["body"] := __n71;
__n1 := [ __n2, __n18, __n23, __n58 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n122 := [ "__matches", "__string", "mi" ];
__n0["variableDeclarations"] := __n122;
__n123 := [  ];
__n0["functionDeclarations"] := __n123;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}