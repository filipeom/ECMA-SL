function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__matches";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "ab";
__n8["raw"] := "\"ab\"";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "cd";
__n9["raw"] := "\"cd\"";
__n7 := [ __n8, __n9 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "__string";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "123456abcde7890";
__n14["raw"] := "\"123456abcde7890\"";
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n15 := {  };
__n15["type"] := "IfStatement";
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "!==";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "__string";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "match";
__n21["raw"] := "\"match\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "/\\D{2}/g";
__n23["raw"] := "/\\D{2}/g";
__n23["source"] := "\\D{2}";
__n24 := {  };
__n24["type"] := "RegExp";
__n25 := {  };
__n25["type"] := "Repetition";
__n26 := {  };
__n26["type"] := "Char";
__n26["value"] := "\\D";
__n26["kind"] := "meta";
__n26["symbol"] := 'undefined;
__n26["codePoint"] := nan;
__n25["expression"] := __n26;
__n27 := {  };
__n27["type"] := "Quantifier";
__n27["kind"] := "Range";
__n27["from"] := 2.;
__n27["to"] := 2.;
__n27["greedy"] := true;
__n25["quantifier"] := __n27;
__n25["parenIndex"] := 0.;
__n25["parenCount"] := 0.;
__n24["body"] := __n25;
__n24["flags"] := "g";
__n24["nCaps"] := 0.;
__n23["regex"] := __n24;
__n22 := [ __n23 ];
__n18["arguments"] := __n22;
__n17["object"] := __n18;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "length";
__n28["raw"] := "\"length\"";
__n17["property"] := __n28;
__n17["computed"] := true;
__n16["left"] := __n17;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 2.;
__n29["raw"] := "2";
__n16["right"] := __n29;
__n15["test"] := __n16;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "$ERROR";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "+";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "#1: __string = \"123456abcde7890\"; __string.match(/\\D{2}/g).length=== 2. Actual: ";
__n37["raw"] := "'#1: __string = \"123456abcde7890\"; __string.match(/\\\\D{2}/g).length=== 2. Actual: '";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "__string";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "match";
__n42["raw"] := "\"match\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "/\\D{2}/g";
__n44["raw"] := "/\\D{2}/g";
__n44["source"] := "\\D{2}";
__n45 := {  };
__n45["type"] := "RegExp";
__n46 := {  };
__n46["type"] := "Repetition";
__n47 := {  };
__n47["type"] := "Char";
__n47["value"] := "\\D";
__n47["kind"] := "meta";
__n47["symbol"] := 'undefined;
__n47["codePoint"] := nan;
__n46["expression"] := __n47;
__n48 := {  };
__n48["type"] := "Quantifier";
__n48["kind"] := "Range";
__n48["from"] := 2.;
__n48["to"] := 2.;
__n48["greedy"] := true;
__n46["quantifier"] := __n48;
__n46["parenIndex"] := 0.;
__n46["parenCount"] := 0.;
__n45["body"] := __n46;
__n45["flags"] := "g";
__n45["nCaps"] := 0.;
__n44["regex"] := __n45;
__n43 := [ __n44 ];
__n39["arguments"] := __n43;
__n38["object"] := __n39;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "length";
__n49["raw"] := "\"length\"";
__n38["property"] := __n49;
__n38["computed"] := true;
__n36["right"] := __n38;
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n15["consequent"] := __n30;
__n15["alternate"] := null;
__n50 := {  };
__n50["type"] := "ForStatement";
__n51 := {  };
__n51["type"] := "VariableDeclaration";
__n53 := {  };
__n53["type"] := "VariableDeclarator";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "mi";
__n53["id"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 0.;
__n55["raw"] := "0";
__n53["init"] := __n55;
__n52 := [ __n53 ];
__n51["declarations"] := __n52;
__n51["kind"] := "var";
__n50["init"] := __n51;
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "<";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "mi";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "__matches";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "length";
__n60["raw"] := "\"length\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n56["right"] := __n58;
__n50["test"] := __n56;
__n61 := {  };
__n61["type"] := "UpdateExpression";
__n61["operator"] := "++";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "mi";
__n61["argument"] := __n62;
__n61["prefix"] := false;
__n50["update"] := __n61;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "IfStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n67["computed"] := true;
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "__string";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "match";
__n71["raw"] := "\"match\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "/\\D{2}/g";
__n73["raw"] := "/\\D{2}/g";
__n73["source"] := "\\D{2}";
__n74 := {  };
__n74["type"] := "RegExp";
__n75 := {  };
__n75["type"] := "Repetition";
__n76 := {  };
__n76["type"] := "Char";
__n76["value"] := "\\D";
__n76["kind"] := "meta";
__n76["symbol"] := 'undefined;
__n76["codePoint"] := nan;
__n75["expression"] := __n76;
__n77 := {  };
__n77["type"] := "Quantifier";
__n77["kind"] := "Range";
__n77["from"] := 2.;
__n77["to"] := 2.;
__n77["greedy"] := true;
__n75["quantifier"] := __n77;
__n75["parenIndex"] := 0.;
__n75["parenCount"] := 0.;
__n74["body"] := __n75;
__n74["flags"] := "g";
__n74["nCaps"] := 0.;
__n73["regex"] := __n74;
__n72 := [ __n73 ];
__n68["arguments"] := __n72;
__n67["object"] := __n68;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "mi";
__n67["property"] := __n78;
__n66["left"] := __n67;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n79["computed"] := true;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "__matches";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "mi";
__n79["property"] := __n81;
__n66["right"] := __n79;
__n65["test"] := __n66;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$ERROR";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "+";
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "+";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "+";
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "+";
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "+";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "+";
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "+";
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "#2.";
__n95["raw"] := "'#2.'";
__n94["left"] := __n95;
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "mi";
__n94["right"] := __n96;
__n93["left"] := __n94;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := ": __matches=[\"ab\", \"cd\"]; __string = \"123456abcde7890\"; __string.match(/\\D{2}/g)[";
__n97["raw"] := "': __matches=[\"ab\", \"cd\"]; __string = \"123456abcde7890\"; __string.match(/\\\\D{2}/g)['";
__n93["right"] := __n97;
__n92["left"] := __n93;
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "mi";
__n92["right"] := __n98;
__n91["left"] := __n92;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "]===__matches[";
__n99["raw"] := "']===__matches['";
__n91["right"] := __n99;
__n90["left"] := __n91;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "mi";
__n90["right"] := __n100;
__n89["left"] := __n90;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "]. Actual: ";
__n101["raw"] := "']. Actual: '";
__n89["right"] := __n101;
__n88["left"] := __n89;
__n102 := {  };
__n102["type"] := "MemberExpression";
__n102["computed"] := true;
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "__string";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "match";
__n106["raw"] := "\"match\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n103["callee"] := __n104;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "/\\D{2}/g";
__n108["raw"] := "/\\D{2}/g";
__n108["source"] := "\\D{2}";
__n109 := {  };
__n109["type"] := "RegExp";
__n110 := {  };
__n110["type"] := "Repetition";
__n111 := {  };
__n111["type"] := "Char";
__n111["value"] := "\\D";
__n111["kind"] := "meta";
__n111["symbol"] := 'undefined;
__n111["codePoint"] := nan;
__n110["expression"] := __n111;
__n112 := {  };
__n112["type"] := "Quantifier";
__n112["kind"] := "Range";
__n112["from"] := 2.;
__n112["to"] := 2.;
__n112["greedy"] := true;
__n110["quantifier"] := __n112;
__n110["parenIndex"] := 0.;
__n110["parenCount"] := 0.;
__n109["body"] := __n110;
__n109["flags"] := "g";
__n109["nCaps"] := 0.;
__n108["regex"] := __n109;
__n107 := [ __n108 ];
__n103["arguments"] := __n107;
__n102["object"] := __n103;
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "mi";
__n102["property"] := __n113;
__n88["right"] := __n102;
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n65["consequent"] := __n82;
__n65["alternate"] := null;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n50["body"] := __n63;
__n1 := [ __n2, __n10, __n15, __n50 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n114 := [ "__matches", "__string", "mi" ];
__n0["variableDeclarations"] := __n114;
__n115 := [  ];
__n0["functionDeclarations"] := __n115;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}