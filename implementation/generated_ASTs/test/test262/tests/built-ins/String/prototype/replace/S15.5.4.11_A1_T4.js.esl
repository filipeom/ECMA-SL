function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "FunctionExpression";
__n7["id"] := null;
__n8 := [  ];
__n7["params"] := __n8;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ReturnStatement";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "gnulluna";
__n12["raw"] := "\"gnulluna\"";
__n11["argument"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n13 := [  ];
__n9["variableDeclarations"] := __n13;
__n14 := [  ];
__n9["functionDeclarations"] := __n14;
__n9["codeType"] := "function";
__n9["strict"] := false;
__n7["body"] := __n9;
__n7["generator"] := false;
__n7["async"] := false;
__n7["expression"] := false;
__n6["callee"] := __n7;
__n15 := [  ];
__n6["arguments"] := __n15;
__n5["object"] := __n6;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "replace";
__n16["raw"] := "\"replace\"";
__n5["property"] := __n16;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 'null;
__n18["raw"] := "\"'null\"";
__n19 := {  };
__n19["type"] := "FunctionExpression";
__n19["id"] := null;
__n20 := [ "a1", "a2", "a3" ];
__n19["params"] := __n20;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ReturnStatement";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "+";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "a2";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "";
__n26["raw"] := "\"\"";
__n24["right"] := __n26;
__n23["argument"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n27 := [  ];
__n21["variableDeclarations"] := __n27;
__n28 := [  ];
__n21["functionDeclarations"] := __n28;
__n21["codeType"] := "function";
__n21["strict"] := false;
__n19["body"] := __n21;
__n19["generator"] := false;
__n19["async"] := false;
__n19["expression"] := false;
__n17 := [ __n18, __n19 ];
__n4["arguments"] := __n17;
__n3["left"] := __n4;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "g1una";
__n29["raw"] := "\"g1una\"";
__n3["right"] := __n29;
__n2["test"] := __n3;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "$ERROR";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "+";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "#1: function(){return \"gnulluna\"}().replace(null,function(a1,a2,a3){return a2+\"\";}) === \"g1una\". Actual: ";
__n37["raw"] := "'#1: function(){return \"gnulluna\"}().replace(null,function(a1,a2,a3){return a2+\"\";}) === \"g1una\". Actual: '";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "FunctionExpression";
__n41["id"] := null;
__n42 := [  ];
__n41["params"] := __n42;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ReturnStatement";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "gnulluna";
__n46["raw"] := "\"gnulluna\"";
__n45["argument"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n47 := [  ];
__n43["variableDeclarations"] := __n47;
__n48 := [  ];
__n43["functionDeclarations"] := __n48;
__n43["codeType"] := "function";
__n43["strict"] := false;
__n41["body"] := __n43;
__n41["generator"] := false;
__n41["async"] := false;
__n41["expression"] := false;
__n40["callee"] := __n41;
__n49 := [  ];
__n40["arguments"] := __n49;
__n39["object"] := __n40;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "replace";
__n50["raw"] := "\"replace\"";
__n39["property"] := __n50;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 'null;
__n52["raw"] := "\"'null\"";
__n53 := {  };
__n53["type"] := "FunctionExpression";
__n53["id"] := null;
__n54 := [ "a1", "a2", "a3" ];
__n53["params"] := __n54;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ReturnStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "+";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "a2";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "";
__n60["raw"] := "\"\"";
__n58["right"] := __n60;
__n57["argument"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n61 := [  ];
__n55["variableDeclarations"] := __n61;
__n62 := [  ];
__n55["functionDeclarations"] := __n62;
__n55["codeType"] := "function";
__n55["strict"] := false;
__n53["body"] := __n55;
__n53["generator"] := false;
__n53["async"] := false;
__n53["expression"] := false;
__n51 := [ __n52, __n53 ];
__n38["arguments"] := __n51;
__n36["right"] := __n38;
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n2["consequent"] := __n30;
__n2["alternate"] := null;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n63 := [  ];
__n0["variableDeclarations"] := __n63;
__n64 := [  ];
__n0["functionDeclarations"] := __n64;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}