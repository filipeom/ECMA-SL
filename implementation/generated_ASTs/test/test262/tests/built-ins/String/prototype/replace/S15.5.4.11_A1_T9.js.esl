function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "valueOf";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n13 := [  ];
__n12["body"] := __n13;
__n14 := [  ];
__n12["variableDeclarations"] := __n14;
__n15 := [  ];
__n12["functionDeclarations"] := __n15;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n16 := {  };
__n16["type"] := "Property";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "toString";
__n16["key"] := __n17;
__n18 := {  };
__n18["type"] := "UnaryExpression";
__n18["operator"] := "void";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 0.;
__n19["raw"] := "0";
__n18["argument"] := __n19;
__n18["prefix"] := true;
__n16["value"] := __n18;
__n16["computed"] := false;
__n16["kind"] := "init";
__n16["shorthand"] := false;
__n7 := [ __n8, __n16 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n20 := {  };
__n20["type"] := "IfStatement";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "!==";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "NewExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "String";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "__obj";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["object"] := __n24;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "replace";
__n28["raw"] := "\"replace\"";
__n23["property"] := __n28;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [  ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n34 := [  ];
__n33["body"] := __n34;
__n35 := [  ];
__n33["variableDeclarations"] := __n35;
__n36 := [  ];
__n33["functionDeclarations"] := __n36;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["async"] := false;
__n31["expression"] := false;
__n30["callee"] := __n31;
__n37 := [  ];
__n30["arguments"] := __n37;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "__func";
__n29 := [ __n30, __n38 ];
__n22["arguments"] := __n29;
__n21["left"] := __n22;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "undefined0undefined";
__n39["raw"] := "\"undefined0undefined\"";
__n21["right"] := __n39;
__n20["test"] := __n21;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "+";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#1: __obj = {valueOf:function(){}, toString:void 0}; function __func(a1,a2,a3){return a1+a2+a3;}; new String(__obj).replace(function(){}(),__func) === \"undefined0undefined\". Actual: ";
__n47["raw"] := "'#1: __obj = {valueOf:function(){}, toString:void 0}; function __func(a1,a2,a3){return a1+a2+a3;}; new String(__obj).replace(function(){}(),__func) === \"undefined0undefined\". Actual: '";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "NewExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "String";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "__obj";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["object"] := __n50;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "replace";
__n54["raw"] := "\"replace\"";
__n49["property"] := __n54;
__n49["computed"] := true;
__n48["callee"] := __n49;
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "FunctionExpression";
__n57["id"] := null;
__n58 := [  ];
__n57["params"] := __n58;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n60 := [  ];
__n59["body"] := __n60;
__n61 := [  ];
__n59["variableDeclarations"] := __n61;
__n62 := [  ];
__n59["functionDeclarations"] := __n62;
__n59["codeType"] := "function";
__n59["strict"] := false;
__n57["body"] := __n59;
__n57["generator"] := false;
__n57["async"] := false;
__n57["expression"] := false;
__n56["callee"] := __n57;
__n63 := [  ];
__n56["arguments"] := __n63;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "__func";
__n55 := [ __n56, __n64 ];
__n48["arguments"] := __n55;
__n46["right"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n20["consequent"] := __n40;
__n20["alternate"] := null;
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "__func";
__n65["expression"] := __n66;
__n67 := {  };
__n67["type"] := "EmptyStatement";
__n1 := [ __n2, __n20, __n65, __n67 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n68 := [ "__obj" ];
__n0["variableDeclarations"] := __n68;
__n70 := {  };
__n70["type"] := "FunctionDeclaration";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "__func";
__n70["id"] := __n71;
__n72 := [ "a1", "a2", "a3" ];
__n70["params"] := __n72;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ReturnStatement";
__n76 := {  };
__n76["type"] := "BinaryExpression";
__n76["operator"] := "+";
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "a1";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "a2";
__n77["right"] := __n79;
__n76["left"] := __n77;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "a3";
__n76["right"] := __n80;
__n75["argument"] := __n76;
__n74 := [ __n75 ];
__n73["body"] := __n74;
__n81 := [  ];
__n73["variableDeclarations"] := __n81;
__n82 := [  ];
__n73["functionDeclarations"] := __n82;
__n73["codeType"] := "function";
__n73["strict"] := false;
__n70["body"] := __n73;
__n70["generator"] := false;
__n70["async"] := false;
__n70["expression"] := false;
__n69 := [ __n70 ];
__n0["functionDeclarations"] := __n69;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}