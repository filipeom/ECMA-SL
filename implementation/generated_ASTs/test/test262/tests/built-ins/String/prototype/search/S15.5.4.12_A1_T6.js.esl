function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "undefined";
__n9["raw"] := "\"undefined\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n5["object"] := __n6;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "search";
__n10["raw"] := "\"search\"";
__n5["property"] := __n10;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "x";
__n11 := [ __n12 ];
__n4["arguments"] := __n11;
__n3["left"] := __n4;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 0.;
__n13["raw"] := "0";
__n3["right"] := __n13;
__n2["test"] := __n3;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "$ERROR";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "+";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "#1: var x; new String(\"undefined\").search(x) === 0. Actual: ";
__n21["raw"] := "'#1: var x; new String(\"undefined\").search(x) === 0. Actual: '";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "NewExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "String";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "undefined";
__n27["raw"] := "\"undefined\"";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["object"] := __n24;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "search";
__n28["raw"] := "\"search\"";
__n23["property"] := __n28;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "x";
__n29 := [ __n30 ];
__n22["arguments"] := __n29;
__n20["right"] := __n22;
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n16["expression"] := __n17;
__n15 := [ __n16 ];
__n14["body"] := __n15;
__n2["consequent"] := __n14;
__n2["alternate"] := null;
__n31 := {  };
__n31["type"] := "VariableDeclaration";
__n33 := {  };
__n33["type"] := "VariableDeclarator";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "x";
__n33["id"] := __n34;
__n33["init"] := null;
__n32 := [ __n33 ];
__n31["declarations"] := __n32;
__n31["kind"] := "var";
__n1 := [ __n2, __n31 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n35 := [ "x" ];
__n0["variableDeclarations"] := __n35;
__n36 := [  ];
__n0["functionDeclarations"] := __n36;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}