function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "aString";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "power of the power of the power of the power of the power of the power of the great sword";
__n9["raw"] := "\"power \\u006F\\u0066 the power of the power \\u006F\\u0066 the power of the power \\u006F\\u0066 the power of the great sword\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "IfStatement";
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "!==";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "aString";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "search";
__n15["raw"] := "\"search\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["callee"] := __n13;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "/of/";
__n17["raw"] := "/of/";
__n17["source"] := "of";
__n18 := {  };
__n18["type"] := "RegExp";
__n19 := {  };
__n19["type"] := "Alternative";
__n21 := {  };
__n21["type"] := "Char";
__n21["value"] := "o";
__n21["kind"] := "simple";
__n21["symbol"] := "o";
__n21["codePoint"] := 111.;
__n22 := {  };
__n22["type"] := "Char";
__n22["value"] := "f";
__n22["kind"] := "simple";
__n22["symbol"] := "f";
__n22["codePoint"] := 102.;
__n20 := [ __n21, __n22 ];
__n19["expressions"] := __n20;
__n18["body"] := __n19;
__n18["flags"] := "";
__n18["nCaps"] := 0.;
__n17["regex"] := __n18;
__n16 := [ __n17 ];
__n12["arguments"] := __n16;
__n11["left"] := __n12;
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "aString";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "search";
__n26["raw"] := "\"search\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "/of/g";
__n28["raw"] := "/of/g";
__n28["source"] := "of";
__n29 := {  };
__n29["type"] := "RegExp";
__n30 := {  };
__n30["type"] := "Alternative";
__n32 := {  };
__n32["type"] := "Char";
__n32["value"] := "o";
__n32["kind"] := "simple";
__n32["symbol"] := "o";
__n32["codePoint"] := 111.;
__n33 := {  };
__n33["type"] := "Char";
__n33["value"] := "f";
__n33["kind"] := "simple";
__n33["symbol"] := "f";
__n33["codePoint"] := 102.;
__n31 := [ __n32, __n33 ];
__n30["expressions"] := __n31;
__n29["body"] := __n30;
__n29["flags"] := "g";
__n29["nCaps"] := 0.;
__n28["regex"] := __n29;
__n27 := [ __n28 ];
__n23["arguments"] := __n27;
__n11["right"] := __n23;
__n10["test"] := __n11;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "+";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "#1: var aString = new String(\"power \\u006F\\u0066 the power of the power \\u006F\\u0066 the power of the power \\u006F\\u0066 the power of the great sword\"); aString.search(/of/)=== aString.search(/of/g). Actual: ";
__n41["raw"] := "'#1: var aString = new String(\"power \\\\u006F\\\\u0066 the power of the power \\\\u006F\\\\u0066 the power of the power \\\\u006F\\\\u0066 the power of the great sword\"); aString.search(/of/)=== aString.search(/of/g). Actual: '";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "aString";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "search";
__n45["raw"] := "\"search\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "/of/";
__n47["raw"] := "/of/";
__n47["source"] := "of";
__n48 := {  };
__n48["type"] := "RegExp";
__n49 := {  };
__n49["type"] := "Alternative";
__n51 := {  };
__n51["type"] := "Char";
__n51["value"] := "o";
__n51["kind"] := "simple";
__n51["symbol"] := "o";
__n51["codePoint"] := 111.;
__n52 := {  };
__n52["type"] := "Char";
__n52["value"] := "f";
__n52["kind"] := "simple";
__n52["symbol"] := "f";
__n52["codePoint"] := 102.;
__n50 := [ __n51, __n52 ];
__n49["expressions"] := __n50;
__n48["body"] := __n49;
__n48["flags"] := "";
__n48["nCaps"] := 0.;
__n47["regex"] := __n48;
__n46 := [ __n47 ];
__n42["arguments"] := __n46;
__n40["right"] := __n42;
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n10["consequent"] := __n34;
__n10["alternate"] := null;
__n1 := [ __n2, __n10 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n53 := [ "aString" ];
__n0["variableDeclarations"] := __n53;
__n54 := [  ];
__n0["functionDeclarations"] := __n54;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}