function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "valueOf";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n13 := [  ];
__n12["body"] := __n13;
__n14 := [  ];
__n12["variableDeclarations"] := __n14;
__n15 := [  ];
__n12["functionDeclarations"] := __n15;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n16 := {  };
__n16["type"] := "Property";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "toString";
__n16["key"] := __n17;
__n18 := {  };
__n18["type"] := "UnaryExpression";
__n18["operator"] := "void";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 0.;
__n19["raw"] := "0";
__n18["argument"] := __n19;
__n18["prefix"] := true;
__n16["value"] := __n18;
__n16["computed"] := false;
__n16["kind"] := "init";
__n16["shorthand"] := false;
__n7 := [ __n8, __n16 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n20 := {  };
__n20["type"] := "VariableDeclaration";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__split";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "NewExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "String";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "__obj";
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["object"] := __n26;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "split";
__n30["raw"] := "\"split\"";
__n25["property"] := __n30;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "FunctionExpression";
__n33["id"] := null;
__n34 := [  ];
__n33["params"] := __n34;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n36 := [  ];
__n35["body"] := __n36;
__n37 := [  ];
__n35["variableDeclarations"] := __n37;
__n38 := [  ];
__n35["functionDeclarations"] := __n38;
__n35["codeType"] := "function";
__n35["strict"] := false;
__n33["body"] := __n35;
__n33["generator"] := false;
__n33["async"] := false;
__n33["expression"] := false;
__n32["callee"] := __n33;
__n39 := [  ];
__n32["arguments"] := __n39;
__n31 := [ __n32 ];
__n24["arguments"] := __n31;
__n22["init"] := __n24;
__n21 := [ __n22 ];
__n20["declarations"] := __n21;
__n20["kind"] := "var";
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "!==";
__n42 := {  };
__n42["type"] := "UnaryExpression";
__n42["operator"] := "typeof";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "__split";
__n42["argument"] := __n43;
__n42["prefix"] := true;
__n41["left"] := __n42;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "object";
__n44["raw"] := "\"object\"";
__n41["right"] := __n44;
__n40["test"] := __n41;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "$ERROR";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "+";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "#1: __obj = {valueOf:function(){}, toString:void 0}; __split = new String(__obj).split(function(){}()); typeof __split === \"object\". Actual: ";
__n52["raw"] := "'#1: __obj = {valueOf:function(){}, toString:void 0}; __split = new String(__obj).split(function(){}()); typeof __split === \"object\". Actual: '";
__n51["left"] := __n52;
__n53 := {  };
__n53["type"] := "UnaryExpression";
__n53["operator"] := "typeof";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "__split";
__n53["argument"] := __n54;
__n53["prefix"] := true;
__n51["right"] := __n53;
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n40["consequent"] := __n45;
__n40["alternate"] := null;
__n55 := {  };
__n55["type"] := "IfStatement";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "!==";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "__split";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "constructor";
__n59["raw"] := "\"constructor\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["left"] := __n57;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Array";
__n56["right"] := __n60;
__n55["test"] := __n56;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$ERROR";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "+";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "#2: __obj = {valueOf:function(){}, toString:void 0}; __split = new String(__obj).split(function(){}()); __split.constructor === Array. Actual: ";
__n68["raw"] := "'#2: __obj = {valueOf:function(){}, toString:void 0}; __split = new String(__obj).split(function(){}()); __split.constructor === Array. Actual: '";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "__split";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "constructor";
__n71["raw"] := "\"constructor\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n67["right"] := __n69;
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n55["consequent"] := __n61;
__n55["alternate"] := null;
__n72 := {  };
__n72["type"] := "IfStatement";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "!==";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "__split";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "length";
__n76["raw"] := "\"length\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["left"] := __n74;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 1.;
__n77["raw"] := "1";
__n73["right"] := __n77;
__n72["test"] := __n73;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "$ERROR";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "+";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "#3: __obj = {valueOf:function(){}, toString:void 0}; __split = new String(__obj).split(function(){}()); __split.length === 1. Actual: ";
__n85["raw"] := "'#3: __obj = {valueOf:function(){}, toString:void 0}; __split = new String(__obj).split(function(){}()); __split.length === 1. Actual: '";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "__split";
__n86["object"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "length";
__n88["raw"] := "\"length\"";
__n86["property"] := __n88;
__n86["computed"] := true;
__n84["right"] := __n86;
__n83 := [ __n84 ];
__n81["arguments"] := __n83;
__n80["expression"] := __n81;
__n79 := [ __n80 ];
__n78["body"] := __n79;
__n72["consequent"] := __n78;
__n72["alternate"] := null;
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "!==";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n91["computed"] := true;
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "__split";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 0.;
__n93["raw"] := "0";
__n91["property"] := __n93;
__n90["left"] := __n91;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "undefined";
__n94["raw"] := "\"undefined\"";
__n90["right"] := __n94;
__n89["test"] := __n90;
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "CallExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "$ERROR";
__n98["callee"] := __n99;
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "+";
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "#4: __obj = {valueOf:function(){}, toString:void 0}; __split = new String(__obj).split(function(){}()); __split[0] !== \"undefined\". Actual: ";
__n102["raw"] := "'#4: __obj = {valueOf:function(){}, toString:void 0}; __split = new String(__obj).split(function(){}()); __split[0] !== \"undefined\". Actual: '";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "MemberExpression";
__n103["computed"] := true;
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "__split";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 0.;
__n105["raw"] := "0";
__n103["property"] := __n105;
__n101["right"] := __n103;
__n100 := [ __n101 ];
__n98["arguments"] := __n100;
__n97["expression"] := __n98;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n89["consequent"] := __n95;
__n89["alternate"] := null;
__n1 := [ __n2, __n20, __n40, __n55, __n72, __n89 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n106 := [ "__obj", "__split" ];
__n0["variableDeclarations"] := __n106;
__n107 := [  ];
__n0["functionDeclarations"] := __n107;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}