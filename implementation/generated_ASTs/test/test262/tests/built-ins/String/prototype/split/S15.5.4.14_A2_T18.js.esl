function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__string";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := " ";
__n9["raw"] := "\" \"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "__split";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "__string";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "split";
__n17["raw"] := "\"split\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := " ";
__n19["raw"] := "\" \"";
__n18 := [ __n19 ];
__n14["arguments"] := __n18;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n20 := {  };
__n20["type"] := "IfStatement";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "!==";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__split";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "constructor";
__n24["raw"] := "\"constructor\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["left"] := __n22;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Array";
__n21["right"] := __n25;
__n20["test"] := __n21;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "$ERROR";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "+";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "#1: var __string = new String(\" \"); __split = __string.split(\" \"); __split.constructor === Array. Actual: ";
__n33["raw"] := "'#1: var __string = new String(\" \"); __split = __string.split(\" \"); __split.constructor === Array. Actual: '";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "__split";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "constructor";
__n36["raw"] := "\"constructor\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n32["right"] := __n34;
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n20["consequent"] := __n26;
__n20["alternate"] := null;
__n37 := {  };
__n37["type"] := "IfStatement";
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "!==";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "__split";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "length";
__n41["raw"] := "\"length\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["left"] := __n39;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 2.;
__n42["raw"] := "2";
__n38["right"] := __n42;
__n37["test"] := __n38;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "+";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "#2: var __string = new String(\" \"); __split = __string.split(\" \"); __split.length === 2. Actual: ";
__n50["raw"] := "'#2: var __string = new String(\" \"); __split = __string.split(\" \"); __split.length === 2. Actual: '";
__n49["left"] := __n50;
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "__split";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "length";
__n53["raw"] := "\"length\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n49["right"] := __n51;
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n37["consequent"] := __n43;
__n37["alternate"] := null;
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n56["computed"] := true;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "__split";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 0.;
__n58["raw"] := "0";
__n56["property"] := __n58;
__n55["left"] := __n56;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "";
__n59["raw"] := "\"\"";
__n55["right"] := __n59;
__n54["test"] := __n55;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "$ERROR";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "+";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "#3: var __string = new String(\" \"); __split = __string.split(\" \"); __split[0] === \"\". Actual: ";
__n67["raw"] := "'#3: var __string = new String(\" \"); __split = __string.split(\" \"); __split[0] === \"\". Actual: '";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "MemberExpression";
__n68["computed"] := true;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "__split";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 0.;
__n70["raw"] := "0";
__n68["property"] := __n70;
__n66["right"] := __n68;
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n54["consequent"] := __n60;
__n54["alternate"] := null;
__n71 := {  };
__n71["type"] := "IfStatement";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "!==";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n73["computed"] := true;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "__split";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 1.;
__n75["raw"] := "1";
__n73["property"] := __n75;
__n72["left"] := __n73;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "";
__n76["raw"] := "\"\"";
__n72["right"] := __n76;
__n71["test"] := __n72;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "$ERROR";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "+";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "#4: var __string = new String(\" \"); __split = __string.split(\" \"); __split[1] === \"\". Actual: ";
__n84["raw"] := "'#4: var __string = new String(\" \"); __split = __string.split(\" \"); __split[1] === \"\". Actual: '";
__n83["left"] := __n84;
__n85 := {  };
__n85["type"] := "MemberExpression";
__n85["computed"] := true;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "__split";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 1.;
__n87["raw"] := "1";
__n85["property"] := __n87;
__n83["right"] := __n85;
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n78 := [ __n79 ];
__n77["body"] := __n78;
__n71["consequent"] := __n77;
__n71["alternate"] := null;
__n1 := [ __n2, __n10, __n20, __n37, __n54, __n71 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n88 := [ "__string", "__split" ];
__n0["variableDeclarations"] := __n88;
__n89 := [  ];
__n0["functionDeclarations"] := __n89;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}