function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__instance";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "hello";
__n9["raw"] := "\"hello\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "__split";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "__instance";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "split";
__n17["raw"] := "\"split\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "l";
__n19["raw"] := "\"l\"";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 2.;
__n20["raw"] := "2";
__n18 := [ __n19, __n20 ];
__n14["arguments"] := __n18;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n21 := {  };
__n21["type"] := "VariableDeclaration";
__n23 := {  };
__n23["type"] := "VariableDeclarator";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "__expected";
__n23["id"] := __n24;
__n25 := {  };
__n25["type"] := "ArrayExpression";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "he";
__n27["raw"] := "\"he\"";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "";
__n28["raw"] := "\"\"";
__n26 := [ __n27, __n28 ];
__n25["elements"] := __n26;
__n23["init"] := __n25;
__n22 := [ __n23 ];
__n21["declarations"] := __n22;
__n21["kind"] := "var";
__n29 := {  };
__n29["type"] := "IfStatement";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "!==";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "__split";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "constructor";
__n33["raw"] := "\"constructor\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["left"] := __n31;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Array";
__n30["right"] := __n34;
__n29["test"] := __n30;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#1: var __instance = new String(\"hello\"); __split = __instance.split(\"l\", 2); __expected = [\"he\",\"\"]; __split.constructor === Array. Actual: ";
__n42["raw"] := "'#1: var __instance = new String(\"hello\"); __split = __instance.split(\"l\", 2); __expected = [\"he\",\"\"]; __split.constructor === Array. Actual: '";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "__split";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "constructor";
__n45["raw"] := "\"constructor\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n41["right"] := __n43;
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n29["consequent"] := __n35;
__n29["alternate"] := null;
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "!==";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "__split";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "length";
__n50["raw"] := "\"length\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["left"] := __n48;
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "__expected";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "length";
__n53["raw"] := "\"length\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n47["right"] := __n51;
__n46["test"] := __n47;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "$ERROR";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "+";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#2: var __instance = new String(\"hello\"); __split = __instance.split(\"l\", 2); __expected = [\"he\",\"\"]; __split.length === __expected.length. Actual: ";
__n61["raw"] := "'#2: var __instance = new String(\"hello\"); __split = __instance.split(\"l\", 2); __expected = [\"he\",\"\"]; __split.length === __expected.length. Actual: '";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "__split";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "length";
__n64["raw"] := "\"length\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n60["right"] := __n62;
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n46["consequent"] := __n54;
__n46["alternate"] := null;
__n65 := {  };
__n65["type"] := "ForStatement";
__n66 := {  };
__n66["type"] := "VariableDeclaration";
__n68 := {  };
__n68["type"] := "VariableDeclarator";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "index";
__n68["id"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 0.;
__n70["raw"] := "0";
__n68["init"] := __n70;
__n67 := [ __n68 ];
__n66["declarations"] := __n67;
__n66["kind"] := "var";
__n65["init"] := __n66;
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "<";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "index";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "__expected";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "length";
__n75["raw"] := "\"length\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n71["right"] := __n73;
__n65["test"] := __n71;
__n76 := {  };
__n76["type"] := "UpdateExpression";
__n76["operator"] := "++";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "index";
__n76["argument"] := __n77;
__n76["prefix"] := false;
__n65["update"] := __n76;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "IfStatement";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "!==";
__n82 := {  };
__n82["type"] := "MemberExpression";
__n82["computed"] := true;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "__split";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "index";
__n82["property"] := __n84;
__n81["left"] := __n82;
__n85 := {  };
__n85["type"] := "MemberExpression";
__n85["computed"] := true;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "__expected";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "index";
__n85["property"] := __n87;
__n81["right"] := __n85;
__n80["test"] := __n81;
__n88 := {  };
__n88["type"] := "BlockStatement";
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "$ERROR";
__n91["callee"] := __n92;
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "+";
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "+";
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "+";
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "+";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "#3.";
__n99["raw"] := "'#3.'";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "index";
__n98["right"] := __n100;
__n97["left"] := __n98;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := ": var __instance = new String(\"hello\"); __split = __instance.split(\"l\", 2); __expected = [\"he\",\"\"]; __split[index] === ";
__n101["raw"] := "': var __instance = new String(\"hello\"); __split = __instance.split(\"l\", 2); __expected = [\"he\",\"\"]; __split[index] === '";
__n97["right"] := __n101;
__n96["left"] := __n97;
__n102 := {  };
__n102["type"] := "MemberExpression";
__n102["computed"] := true;
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "__expected";
__n102["object"] := __n103;
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "index";
__n102["property"] := __n104;
__n96["right"] := __n102;
__n95["left"] := __n96;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := ". Actual: ";
__n105["raw"] := "'. Actual: '";
__n95["right"] := __n105;
__n94["left"] := __n95;
__n106 := {  };
__n106["type"] := "MemberExpression";
__n106["computed"] := true;
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "__split";
__n106["object"] := __n107;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "index";
__n106["property"] := __n108;
__n94["right"] := __n106;
__n93 := [ __n94 ];
__n91["arguments"] := __n93;
__n90["expression"] := __n91;
__n89 := [ __n90 ];
__n88["body"] := __n89;
__n80["consequent"] := __n88;
__n80["alternate"] := null;
__n79 := [ __n80 ];
__n78["body"] := __n79;
__n65["body"] := __n78;
__n1 := [ __n2, __n10, __n21, __n29, __n46, __n65 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n109 := [ "__instance", "__split", "__expected", "index" ];
__n0["variableDeclarations"] := __n109;
__n110 := [  ];
__n0["functionDeclarations"] := __n110;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}