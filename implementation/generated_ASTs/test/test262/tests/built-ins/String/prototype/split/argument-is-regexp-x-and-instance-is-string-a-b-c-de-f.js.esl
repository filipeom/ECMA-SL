function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__string";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "a b c de f";
__n9["raw"] := "\"a b c de f\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "__re";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "/X/";
__n14["raw"] := "/X/";
__n14["source"] := "X";
__n15 := {  };
__n15["type"] := "RegExp";
__n16 := {  };
__n16["type"] := "Char";
__n16["value"] := "X";
__n16["kind"] := "simple";
__n16["symbol"] := "X";
__n16["codePoint"] := 88.;
__n15["body"] := __n16;
__n15["flags"] := "";
__n15["nCaps"] := 0.;
__n14["regex"] := __n15;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "__split";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__string";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "split";
__n24["raw"] := "\"split\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "__re";
__n25 := [ __n26 ];
__n21["arguments"] := __n25;
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "__expected";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "ArrayExpression";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "a b c de f";
__n33["raw"] := "\"a b c de f\"";
__n32 := [ __n33 ];
__n31["elements"] := __n32;
__n29["init"] := __n31;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "assert";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "sameValue";
__n38["raw"] := "\"sameValue\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "__split";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "constructor";
__n42["raw"] := "\"constructor\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Array";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "The value of __split.constructor is expected to equal the value of Array";
__n44["raw"] := "'The value of __split.constructor is expected to equal the value of Array'";
__n39 := [ __n40, __n43, __n44 ];
__n35["arguments"] := __n39;
__n34["expression"] := __n35;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "assert";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "sameValue";
__n49["raw"] := "\"sameValue\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "__split";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "length";
__n53["raw"] := "\"length\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "__expected";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "length";
__n56["raw"] := "\"length\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "The value of __split.length is expected to equal the value of __expected.length";
__n57["raw"] := "'The value of __split.length is expected to equal the value of __expected.length'";
__n50 := [ __n51, __n54, __n57 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "assert";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "sameValue";
__n62["raw"] := "\"sameValue\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n64 := {  };
__n64["type"] := "MemberExpression";
__n64["computed"] := true;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "__split";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 0.;
__n66["raw"] := "0";
__n64["property"] := __n66;
__n67 := {  };
__n67["type"] := "MemberExpression";
__n67["computed"] := true;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "__expected";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 0.;
__n69["raw"] := "0";
__n67["property"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "The value of __split[0] is expected to equal the value of __expected[0]";
__n70["raw"] := "'The value of __split[0] is expected to equal the value of __expected[0]'";
__n63 := [ __n64, __n67, __n70 ];
__n59["arguments"] := __n63;
__n58["expression"] := __n59;
__n1 := [ __n2, __n10, __n17, __n27, __n34, __n45, __n58 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n71 := [ "__string", "__re", "__split", "__expected" ];
__n0["variableDeclarations"] := __n71;
__n72 := [  ];
__n0["functionDeclarations"] := __n72;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}