function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__string";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "thisundefinedisundefinedaundefinedstringundefinedobject";
__n6["raw"] := "\"thisundefinedisundefinedaundefinedstringundefinedobject\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "__expected";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ArrayExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "__string";
__n12 := [ __n13 ];
__n11["elements"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "__split";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "__string";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "split";
__n21["raw"] := "\"split\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "UnaryExpression";
__n23["operator"] := "void";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 0.;
__n24["raw"] := "0";
__n23["argument"] := __n24;
__n23["prefix"] := true;
__n22 := [ __n23 ];
__n18["arguments"] := __n22;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "assert";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "sameValue";
__n29["raw"] := "\"sameValue\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "__split";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "constructor";
__n33["raw"] := "\"constructor\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Array";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "The value of __split.constructor is expected to equal the value of Array";
__n35["raw"] := "'The value of __split.constructor is expected to equal the value of Array'";
__n30 := [ __n31, __n34, __n35 ];
__n26["arguments"] := __n30;
__n25["expression"] := __n26;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "assert";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "sameValue";
__n40["raw"] := "\"sameValue\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "__split";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "length";
__n44["raw"] := "\"length\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "__expected";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "length";
__n47["raw"] := "\"length\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "The value of __split.length is expected to equal the value of __expected.length";
__n48["raw"] := "'The value of __split.length is expected to equal the value of __expected.length'";
__n41 := [ __n42, __n45, __n48 ];
__n37["arguments"] := __n41;
__n36["expression"] := __n37;
__n49 := {  };
__n49["type"] := "ForStatement";
__n50 := {  };
__n50["type"] := "VariableDeclaration";
__n52 := {  };
__n52["type"] := "VariableDeclarator";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "i";
__n52["id"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 0.;
__n54["raw"] := "0";
__n52["init"] := __n54;
__n51 := [ __n52 ];
__n50["declarations"] := __n51;
__n50["kind"] := "var";
__n49["init"] := __n50;
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "<";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "i";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "__expected";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "length";
__n59["raw"] := "\"length\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n55["right"] := __n57;
__n49["test"] := __n55;
__n60 := {  };
__n60["type"] := "UpdateExpression";
__n60["operator"] := "++";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "i";
__n60["argument"] := __n61;
__n60["prefix"] := false;
__n49["update"] := __n60;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "assert";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "sameValue";
__n68["raw"] := "\"sameValue\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "MemberExpression";
__n70["computed"] := true;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "__expected";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "i";
__n70["property"] := __n72;
__n73 := {  };
__n73["type"] := "MemberExpression";
__n73["computed"] := true;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "__split";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "i";
__n73["property"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "The value of __expected[i] is expected to equal the value of __split[i]";
__n76["raw"] := "'The value of __expected[i] is expected to equal the value of __split[i]'";
__n69 := [ __n70, __n73, __n76 ];
__n65["arguments"] := __n69;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n49["body"] := __n62;
__n1 := [ __n2, __n7, __n14, __n25, __n36, __n49 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n77 := [ "__string", "__expected", "__split", "i" ];
__n0["variableDeclarations"] := __n77;
__n78 := [  ];
__n0["functionDeclarations"] := __n78;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}