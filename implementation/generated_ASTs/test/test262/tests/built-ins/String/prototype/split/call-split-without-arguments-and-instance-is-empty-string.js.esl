function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__split";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "";
__n8["raw"] := "\"\"";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "split";
__n9["raw"] := "\"split\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n10 := [  ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "assert";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "sameValue";
__n15["raw"] := "\"sameValue\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["callee"] := __n13;
__n17 := {  };
__n17["type"] := "UnaryExpression";
__n17["operator"] := "typeof";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "__split";
__n17["argument"] := __n18;
__n17["prefix"] := true;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "object";
__n19["raw"] := "\"object\"";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "The value of `typeof __split` is \"object\"";
__n20["raw"] := "'The value of `typeof __split` is \"object\"'";
__n16 := [ __n17, __n19, __n20 ];
__n12["arguments"] := __n16;
__n11["expression"] := __n12;
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "assert";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "sameValue";
__n25["raw"] := "\"sameValue\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "__split";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "constructor";
__n29["raw"] := "\"constructor\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Array";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "The value of __split.constructor is expected to equal the value of Array";
__n31["raw"] := "'The value of __split.constructor is expected to equal the value of Array'";
__n26 := [ __n27, __n30, __n31 ];
__n22["arguments"] := __n26;
__n21["expression"] := __n22;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "assert";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "sameValue";
__n36["raw"] := "\"sameValue\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "__split";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "length";
__n40["raw"] := "\"length\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 1.;
__n41["raw"] := "1";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "The value of __split.length is 1";
__n42["raw"] := "'The value of __split.length is 1'";
__n37 := [ __n38, __n41, __n42 ];
__n33["arguments"] := __n37;
__n32["expression"] := __n33;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "assert";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "sameValue";
__n47["raw"] := "\"sameValue\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["callee"] := __n45;
__n49 := {  };
__n49["type"] := "MemberExpression";
__n49["computed"] := true;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "__split";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 0.;
__n51["raw"] := "0";
__n49["property"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "";
__n52["raw"] := "\"\"";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "The value of __split[0] is \"\"";
__n53["raw"] := "'The value of __split[0] is \"\"'";
__n48 := [ __n49, __n52, __n53 ];
__n44["arguments"] := __n48;
__n43["expression"] := __n44;
__n1 := [ __n2, __n11, __n21, __n32, __n43 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n54 := [ "__split" ];
__n0["variableDeclarations"] := __n54;
__n55 := [  ];
__n0["functionDeclarations"] := __n55;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}