function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "Identifier";
__n4["name"] := "assert";
__n3["callee"] := __n4;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "String";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "prototype";
__n11["raw"] := "\"prototype\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["object"] := __n9;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "split";
__n12["raw"] := "\"split\"";
__n8["property"] := __n12;
__n8["computed"] := true;
__n7["object"] := __n8;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "hasOwnProperty";
__n13["raw"] := "\"hasOwnProperty\"";
__n7["property"] := __n13;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "length";
__n15["raw"] := "'length'";
__n14 := [ __n15 ];
__n6["arguments"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "String.prototype.split.hasOwnProperty('length') must return true";
__n16["raw"] := "'String.prototype.split.hasOwnProperty(\\'length\\') must return true'";
__n5 := [ __n6, __n16 ];
__n3["arguments"] := __n5;
__n2["expression"] := __n3;
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "__obj";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "String";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "prototype";
__n25["raw"] := "\"prototype\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["object"] := __n23;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "split";
__n26["raw"] := "\"split\"";
__n22["property"] := __n26;
__n22["computed"] := true;
__n21["object"] := __n22;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "length";
__n27["raw"] := "\"length\"";
__n21["property"] := __n27;
__n21["computed"] := true;
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "verifyNotWritable";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "String";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "prototype";
__n35["raw"] := "\"prototype\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["object"] := __n33;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "split";
__n36["raw"] := "\"split\"";
__n32["property"] := __n36;
__n32["computed"] := true;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "length";
__n37["raw"] := "\"length\"";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 'null;
__n38["raw"] := "\"'null\"";
__n39 := {  };
__n39["type"] := "FunctionExpression";
__n39["id"] := null;
__n40 := [  ];
__n39["params"] := __n40;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ReturnStatement";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "shifted";
__n44["raw"] := "\"shifted\"";
__n43["argument"] := __n44;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n45 := [  ];
__n41["variableDeclarations"] := __n45;
__n46 := [  ];
__n41["functionDeclarations"] := __n46;
__n41["codeType"] := "function";
__n41["strict"] := false;
__n39["body"] := __n41;
__n39["generator"] := false;
__n39["async"] := false;
__n39["expression"] := false;
__n31 := [ __n32, __n37, __n38, __n39 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "assert";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "sameValue";
__n51["raw"] := "\"sameValue\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["callee"] := __n49;
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "String";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "prototype";
__n57["raw"] := "\"prototype\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["object"] := __n55;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "split";
__n58["raw"] := "\"split\"";
__n54["property"] := __n58;
__n54["computed"] := true;
__n53["object"] := __n54;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "length";
__n59["raw"] := "\"length\"";
__n53["property"] := __n59;
__n53["computed"] := true;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "__obj";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "The value of String.prototype.split.length is expected to equal the value of __obj";
__n61["raw"] := "'The value of String.prototype.split.length is expected to equal the value of __obj'";
__n52 := [ __n53, __n60, __n61 ];
__n48["arguments"] := __n52;
__n47["expression"] := __n48;
__n1 := [ __n2, __n17, __n28, __n47 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n62 := [ "__obj" ];
__n0["variableDeclarations"] := __n62;
__n63 := [  ];
__n0["functionDeclarations"] := __n63;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}