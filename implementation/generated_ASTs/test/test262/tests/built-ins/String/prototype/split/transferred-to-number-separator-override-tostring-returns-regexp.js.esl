function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "toString";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ReturnStatement";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "/\\u0037\\u0037/g";
__n15["raw"] := "/\\u0037\\u0037/g";
__n15["source"] := "\\u0037\\u0037";
__n16 := {  };
__n16["type"] := "RegExp";
__n17 := {  };
__n17["type"] := "Alternative";
__n19 := {  };
__n19["type"] := "Char";
__n19["value"] := "\\u0037";
__n19["kind"] := "unicode";
__n19["symbol"] := "7";
__n19["codePoint"] := 55.;
__n20 := {  };
__n20["type"] := "Char";
__n20["value"] := "\\u0037";
__n20["kind"] := "unicode";
__n20["symbol"] := "7";
__n20["codePoint"] := 55.;
__n18 := [ __n19, __n20 ];
__n17["expressions"] := __n18;
__n16["body"] := __n17;
__n16["flags"] := "g";
__n16["nCaps"] := 0.;
__n15["regex"] := __n16;
__n14["argument"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n21 := [  ];
__n12["variableDeclarations"] := __n21;
__n22 := [  ];
__n12["functionDeclarations"] := __n22;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "AssignmentExpression";
__n24["operator"] := "=";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Number";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "prototype";
__n28["raw"] := "\"prototype\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["object"] := __n26;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "split";
__n29["raw"] := "\"split\"";
__n25["property"] := __n29;
__n25["computed"] := true;
__n24["left"] := __n25;
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "String";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "prototype";
__n33["raw"] := "\"prototype\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["object"] := __n31;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "split";
__n34["raw"] := "\"split\"";
__n30["property"] := __n34;
__n30["computed"] := true;
__n24["right"] := __n30;
__n23["expression"] := __n24;
__n35 := {  };
__n35["type"] := "TryStatement";
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "VariableDeclaration";
__n40 := {  };
__n40["type"] := "VariableDeclarator";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "__split";
__n40["id"] := __n41;
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 6776767677.006771;
__n44["raw"] := "6776767677.006771122677555";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "split";
__n45["raw"] := "\"split\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "__obj";
__n46 := [ __n47 ];
__n42["arguments"] := __n46;
__n40["init"] := __n42;
__n39 := [ __n40 ];
__n38["declarations"] := __n39;
__n38["kind"] := "var";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "Test262Error";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "thrower";
__n52["raw"] := "\"thrower\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#1: \"__split = 6776767677.006771122677555.split(__obj)\" lead to throwing exception";
__n54["raw"] := "'#1: \"__split = 6776767677.006771122677555.split(__obj)\" lead to throwing exception'";
__n53 := [ __n54 ];
__n49["arguments"] := __n53;
__n48["expression"] := __n49;
__n37 := [ __n38, __n48 ];
__n36["body"] := __n37;
__n35["block"] := __n36;
__n55 := {  };
__n55["type"] := "CatchClause";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "e";
__n55["param"] := __n56;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "assert";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "instanceof";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "e";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "TypeError";
__n63["right"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "The result of `(e instanceof TypeError)` is true";
__n66["raw"] := "'The result of `(e instanceof TypeError)` is true'";
__n62 := [ __n63, __n66 ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n55["body"] := __n57;
__n35["handler"] := __n55;
__n35["finalizer"] := null;
__n1 := [ __n2, __n23, __n35 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n67 := [ "__obj", "__split" ];
__n0["variableDeclarations"] := __n67;
__n68 := [  ];
__n0["functionDeclarations"] := __n68;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}