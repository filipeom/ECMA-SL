function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__instance";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Math";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "AssignmentExpression";
__n8["operator"] := "=";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "__instance";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "substring";
__n11["raw"] := "\"substring\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["left"] := __n9;
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "String";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "prototype";
__n15["raw"] := "\"prototype\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["object"] := __n13;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "substring";
__n16["raw"] := "\"substring\"";
__n12["property"] := __n16;
__n12["computed"] := true;
__n8["right"] := __n12;
__n7["expression"] := __n8;
__n17 := {  };
__n17["type"] := "IfStatement";
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "!==";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "__instance";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "substring";
__n22["raw"] := "\"substring\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Math";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "PI";
__n26["raw"] := "\"PI\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n27 := {  };
__n27["type"] := "UnaryExpression";
__n27["operator"] := "-";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 10.;
__n28["raw"] := "10";
__n27["argument"] := __n28;
__n27["prefix"] := true;
__n23 := [ __n24, __n27 ];
__n19["arguments"] := __n23;
__n18["left"] := __n19;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "[ob";
__n29["raw"] := "\"[ob\"";
__n18["right"] := __n29;
__n17["test"] := __n18;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "$ERROR";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "+";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "#1: __instance = Math; __instance.substring = String.prototype.substring;  __instance.substring(Math.PI, -10) === \"[ob\". Actual: ";
__n37["raw"] := "'#1: __instance = Math; __instance.substring = String.prototype.substring;  __instance.substring(Math.PI, -10) === \"[ob\". Actual: '";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "__instance";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "substring";
__n41["raw"] := "\"substring\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Math";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "PI";
__n45["raw"] := "\"PI\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n46 := {  };
__n46["type"] := "UnaryExpression";
__n46["operator"] := "-";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 10.;
__n47["raw"] := "10";
__n46["argument"] := __n47;
__n46["prefix"] := true;
__n42 := [ __n43, __n46 ];
__n38["arguments"] := __n42;
__n36["right"] := __n38;
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n17["consequent"] := __n30;
__n17["alternate"] := null;
__n1 := [ __n2, __n7, __n17 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n48 := [ "__instance" ];
__n0["variableDeclarations"] := __n48;
__n49 := [  ];
__n0["functionDeclarations"] := __n49;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}