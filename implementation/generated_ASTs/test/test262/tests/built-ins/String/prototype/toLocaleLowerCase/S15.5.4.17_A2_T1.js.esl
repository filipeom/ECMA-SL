function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "Hello, WoRlD!";
__n6["raw"] := "\"Hello, WoRlD!\"";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "toLocaleLowerCase";
__n7["raw"] := "\"toLocaleLowerCase\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n8 := [  ];
__n4["arguments"] := __n8;
__n3["left"] := __n4;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "hello, world!";
__n9["raw"] := "\"hello, world!\"";
__n3["right"] := __n9;
__n2["test"] := __n3;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "$ERROR";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "+";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "#1: \"Hello, WoRlD!\".toLocaleLowerCase() === \"hello, world!\". Actual: ";
__n17["raw"] := "'#1: \"Hello, WoRlD!\".toLocaleLowerCase() === \"hello, world!\". Actual: '";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "Hello, WoRlD!";
__n20["raw"] := "\"Hello, WoRlD!\"";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "toLocaleLowerCase";
__n21["raw"] := "\"toLocaleLowerCase\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n22 := [  ];
__n18["arguments"] := __n22;
__n16["right"] := __n18;
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["expression"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n2["consequent"] := __n10;
__n2["alternate"] := null;
__n23 := {  };
__n23["type"] := "IfStatement";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "!==";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "Hello, WoRlD!";
__n27["raw"] := "\"Hello, WoRlD!\"";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "toLocaleLowerCase";
__n28["raw"] := "\"toLocaleLowerCase\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n29 := [  ];
__n25["arguments"] := __n29;
__n24["left"] := __n25;
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "String";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "hello, world!";
__n33["raw"] := "\"hello, world!\"";
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n24["right"] := __n30;
__n23["test"] := __n24;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "+";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "#2: \"Hello, WoRlD!\".toLocaleLowerCase() === String(\"hello, world!\"). Actual: ";
__n41["raw"] := "'#2: \"Hello, WoRlD!\".toLocaleLowerCase() === String(\"hello, world!\"). Actual: '";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "Hello, WoRlD!";
__n44["raw"] := "\"Hello, WoRlD!\"";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "toLocaleLowerCase";
__n45["raw"] := "\"toLocaleLowerCase\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n46 := [  ];
__n42["arguments"] := __n46;
__n40["right"] := __n42;
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n23["consequent"] := __n34;
__n23["alternate"] := null;
__n47 := {  };
__n47["type"] := "IfStatement";
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "===";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "Hello, WoRlD!";
__n51["raw"] := "\"Hello, WoRlD!\"";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "toLocaleLowerCase";
__n52["raw"] := "\"toLocaleLowerCase\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n53 := [  ];
__n49["arguments"] := __n53;
__n48["left"] := __n49;
__n54 := {  };
__n54["type"] := "NewExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "String";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "hello, world!";
__n57["raw"] := "\"hello, world!\"";
__n56 := [ __n57 ];
__n54["arguments"] := __n56;
__n48["right"] := __n54;
__n47["test"] := __n48;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$ERROR";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#3: \"Hello, WoRlD!\".toLocaleLowerCase() !== new String(\"hello, world!\")";
__n64["raw"] := "'#3: \"Hello, WoRlD!\".toLocaleLowerCase() !== new String(\"hello, world!\")'";
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n47["consequent"] := __n58;
__n47["alternate"] := null;
__n1 := [ __n2, __n23, __n47 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n65 := [  ];
__n0["variableDeclarations"] := __n65;
__n66 := [  ];
__n0["functionDeclarations"] := __n66;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}