function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "str";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "IfStatement";
__n10 := {  };
__n10["type"] := "UnaryExpression";
__n10["operator"] := "!";
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "==";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "str";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "valueOf";
__n15["raw"] := "\"valueOf\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["callee"] := __n13;
__n16 := [  ];
__n12["arguments"] := __n16;
__n11["left"] := __n12;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "str";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "toString";
__n20["raw"] := "\"toString\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n21 := [  ];
__n17["arguments"] := __n21;
__n11["right"] := __n17;
__n10["argument"] := __n11;
__n10["prefix"] := true;
__n9["test"] := __n10;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "$ERROR";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "#1: str = new String(),str.valueOf() == str.toString()";
__n26["raw"] := "'#1: str = new String(),str.valueOf() == str.toString()'";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n9["consequent"] := __n22;
__n9["alternate"] := null;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "AssignmentExpression";
__n28["operator"] := "=";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "str";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "NewExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "String";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := true;
__n33["raw"] := "true";
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n28["right"] := __n30;
__n27["expression"] := __n28;
__n34 := {  };
__n34["type"] := "IfStatement";
__n35 := {  };
__n35["type"] := "UnaryExpression";
__n35["operator"] := "!";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "==";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "str";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "valueOf";
__n40["raw"] := "\"valueOf\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n41 := [  ];
__n37["arguments"] := __n41;
__n36["left"] := __n37;
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "str";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "toString";
__n45["raw"] := "\"toString\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n46 := [  ];
__n42["arguments"] := __n46;
__n36["right"] := __n42;
__n35["argument"] := __n36;
__n35["prefix"] := true;
__n34["test"] := __n35;
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "$ERROR";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "#2: str = new String(true),str.valueOf() == str.toString()";
__n51["raw"] := "'#2: str = new String(true),str.valueOf() == str.toString()'";
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n34["consequent"] := __n47;
__n34["alternate"] := null;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "AssignmentExpression";
__n53["operator"] := "=";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "str";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "NewExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "String";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := false;
__n58["raw"] := "false";
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n53["right"] := __n55;
__n52["expression"] := __n53;
__n59 := {  };
__n59["type"] := "IfStatement";
__n60 := {  };
__n60["type"] := "UnaryExpression";
__n60["operator"] := "!";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "==";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "str";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "valueOf";
__n65["raw"] := "\"valueOf\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n66 := [  ];
__n62["arguments"] := __n66;
__n61["left"] := __n62;
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "str";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "toString";
__n70["raw"] := "\"toString\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n71 := [  ];
__n67["arguments"] := __n71;
__n61["right"] := __n67;
__n60["argument"] := __n61;
__n60["prefix"] := true;
__n59["test"] := __n60;
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "$ERROR";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "#3: str = new String(false),str.valueOf() == str.toString()";
__n76["raw"] := "'#3: str = new String(false),str.valueOf() == str.toString()'";
__n75 := [ __n76 ];
__n73["arguments"] := __n75;
__n72["expression"] := __n73;
__n59["consequent"] := __n72;
__n59["alternate"] := null;
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "AssignmentExpression";
__n78["operator"] := "=";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "str";
__n78["left"] := __n79;
__n80 := {  };
__n80["type"] := "NewExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "String";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "Math";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "PI";
__n85["raw"] := "\"PI\"";
__n83["property"] := __n85;
__n83["computed"] := true;
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n78["right"] := __n80;
__n77["expression"] := __n78;
__n86 := {  };
__n86["type"] := "IfStatement";
__n87 := {  };
__n87["type"] := "UnaryExpression";
__n87["operator"] := "!";
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "==";
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "str";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "valueOf";
__n92["raw"] := "\"valueOf\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n89["callee"] := __n90;
__n93 := [  ];
__n89["arguments"] := __n93;
__n88["left"] := __n89;
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "str";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "toString";
__n97["raw"] := "\"toString\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["callee"] := __n95;
__n98 := [  ];
__n94["arguments"] := __n98;
__n88["right"] := __n94;
__n87["argument"] := __n88;
__n87["prefix"] := true;
__n86["test"] := __n87;
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "$ERROR";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "#4: str = new String(Math.PI),str.valueOf() == str.toString()";
__n103["raw"] := "'#4: str = new String(Math.PI),str.valueOf() == str.toString()'";
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["expression"] := __n100;
__n86["consequent"] := __n99;
__n86["alternate"] := null;
__n1 := [ __n2, __n9, __n27, __n34, __n52, __n59, __n77, __n86 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n104 := [ "str" ];
__n0["variableDeclarations"] := __n104;
__n105 := [  ];
__n0["functionDeclarations"] := __n105;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}