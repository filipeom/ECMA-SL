function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "FunctionExpression";
__n7["id"] := null;
__n8 := [  ];
__n7["params"] := __n8;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ReturnStatement";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "GnulLuNa";
__n12["raw"] := "\"GnulLuNa\"";
__n11["argument"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n13 := [  ];
__n9["variableDeclarations"] := __n13;
__n14 := [  ];
__n9["functionDeclarations"] := __n14;
__n9["codeType"] := "function";
__n9["strict"] := false;
__n7["body"] := __n9;
__n7["generator"] := false;
__n7["async"] := false;
__n7["expression"] := false;
__n6["callee"] := __n7;
__n15 := [  ];
__n6["arguments"] := __n15;
__n5["object"] := __n6;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "toUpperCase";
__n16["raw"] := "\"toUpperCase\"";
__n5["property"] := __n16;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n17 := [  ];
__n4["arguments"] := __n17;
__n3["left"] := __n4;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "GNULLUNA";
__n18["raw"] := "\"GNULLUNA\"";
__n3["right"] := __n18;
__n2["test"] := __n3;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "$ERROR";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "+";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "#1: function(){return \"GnulLuNa\"}().toUpperCase() === \"GNULLUNA\". Actual: ";
__n26["raw"] := "'#1: function(){return \"GnulLuNa\"}().toUpperCase() === \"GNULLUNA\". Actual: '";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [  ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ReturnStatement";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "GnulLuNa";
__n35["raw"] := "\"GnulLuNa\"";
__n34["argument"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n36 := [  ];
__n32["variableDeclarations"] := __n36;
__n37 := [  ];
__n32["functionDeclarations"] := __n37;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["async"] := false;
__n30["expression"] := false;
__n29["callee"] := __n30;
__n38 := [  ];
__n29["arguments"] := __n38;
__n28["object"] := __n29;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "toUpperCase";
__n39["raw"] := "\"toUpperCase\"";
__n28["property"] := __n39;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n40 := [  ];
__n27["arguments"] := __n40;
__n25["right"] := __n27;
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n2["consequent"] := __n19;
__n2["alternate"] := null;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n41 := [  ];
__n0["variableDeclarations"] := __n41;
__n42 := [  ];
__n0["functionDeclarations"] := __n42;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}