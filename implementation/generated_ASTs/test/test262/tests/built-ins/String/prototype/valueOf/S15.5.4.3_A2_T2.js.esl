function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "valueOf";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "String";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "prototype";
__n13["raw"] := "\"prototype\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["object"] := __n11;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "valueOf";
__n14["raw"] := "\"valueOf\"";
__n10["property"] := __n14;
__n10["computed"] := true;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n15 := {  };
__n15["type"] := "IfStatement";
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "!==";
__n17 := {  };
__n17["type"] := "UnaryExpression";
__n17["operator"] := "typeof";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n18["computed"] := true;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "__obj";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "valueOf";
__n20["raw"] := "\"valueOf\"";
__n18["property"] := __n20;
__n17["argument"] := __n18;
__n17["prefix"] := true;
__n16["left"] := __n17;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "function";
__n21["raw"] := "\"function\"";
__n16["right"] := __n21;
__n15["test"] := __n16;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "$ERROR";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "+";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "#1: var __obj={valueOf : String.prototype.valueOf}; typeof __obj[\"valueOf\"] === \"function\". Actual: typeof __obj[\"valueOf\"] ===";
__n29["raw"] := "'#1: var __obj={valueOf : String.prototype.valueOf}; typeof __obj[\"valueOf\"] === \"function\". Actual: typeof __obj[\"valueOf\"] ==='";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "UnaryExpression";
__n30["operator"] := "typeof";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n31["computed"] := true;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "__obj";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "valueOf";
__n33["raw"] := "\"valueOf\"";
__n31["property"] := __n33;
__n30["argument"] := __n31;
__n30["prefix"] := true;
__n28["right"] := __n30;
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n24["expression"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n15["consequent"] := __n22;
__n15["alternate"] := null;
__n34 := {  };
__n34["type"] := "TryStatement";
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "VariableDeclaration";
__n39 := {  };
__n39["type"] := "VariableDeclarator";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "x";
__n39["id"] := __n40;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "==";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "__obj";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 1.;
__n43["raw"] := "1";
__n41["right"] := __n43;
__n39["init"] := __n41;
__n38 := [ __n39 ];
__n37["declarations"] := __n38;
__n37["kind"] := "var";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$ERROR";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "#2: \"var __obj={valueOf : String.prototype.valueOf}; var x = (__obj == 1)\" lead to throwing exception";
__n48["raw"] := "'#2: \"var __obj={valueOf : String.prototype.valueOf}; var x = (__obj == 1)\" lead to throwing exception'";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n36 := [ __n37, __n44 ];
__n35["body"] := __n36;
__n34["block"] := __n35;
__n49 := {  };
__n49["type"] := "CatchClause";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "e";
__n49["param"] := __n50;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "IfStatement";
__n54 := {  };
__n54["type"] := "UnaryExpression";
__n54["operator"] := "!";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "instanceof";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "e";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "TypeError";
__n55["right"] := __n57;
__n54["argument"] := __n55;
__n54["prefix"] := true;
__n53["test"] := __n54;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$ERROR";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "+";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "#2.1: Exception is instance of TypeError. Actual: exception is ";
__n65["raw"] := "'#2.1: Exception is instance of TypeError. Actual: exception is '";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "e";
__n64["right"] := __n66;
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n53["consequent"] := __n58;
__n53["alternate"] := null;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n49["body"] := __n51;
__n34["handler"] := __n49;
__n34["finalizer"] := null;
__n1 := [ __n2, __n15, __n34 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n67 := [ "__obj", "x" ];
__n0["variableDeclarations"] := __n67;
__n68 := [  ];
__n0["functionDeclarations"] := __n68;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}