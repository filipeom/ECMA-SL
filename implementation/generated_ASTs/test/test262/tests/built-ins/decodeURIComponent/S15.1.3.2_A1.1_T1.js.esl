function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "result";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := true;
__n6["raw"] := "true";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "TryStatement";
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "decodeURIComponent";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "%";
__n14["raw"] := "\"%\"";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["expression"] := __n11;
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "AssignmentExpression";
__n16["operator"] := "=";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "result";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := false;
__n18["raw"] := "false";
__n16["right"] := __n18;
__n15["expression"] := __n16;
__n9 := [ __n10, __n15 ];
__n8["body"] := __n9;
__n7["block"] := __n8;
__n19 := {  };
__n19["type"] := "CatchClause";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "e";
__n19["param"] := __n20;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "IfStatement";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "!==";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "instanceof";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "e";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "URIError";
__n25["right"] := __n27;
__n24["left"] := __n25;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := true;
__n28["raw"] := "true";
__n24["right"] := __n28;
__n23["test"] := __n24;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "result";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := false;
__n34["raw"] := "false";
__n32["right"] := __n34;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n23["consequent"] := __n29;
__n23["alternate"] := null;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n19["body"] := __n21;
__n7["handler"] := __n19;
__n7["finalizer"] := null;
__n35 := {  };
__n35["type"] := "TryStatement";
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "decodeURIComponent";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "%A";
__n42["raw"] := "\"%A\"";
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "AssignmentExpression";
__n44["operator"] := "=";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "result";
__n44["left"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := false;
__n46["raw"] := "false";
__n44["right"] := __n46;
__n43["expression"] := __n44;
__n37 := [ __n38, __n43 ];
__n36["body"] := __n37;
__n35["block"] := __n36;
__n47 := {  };
__n47["type"] := "CatchClause";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "e";
__n47["param"] := __n48;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "IfStatement";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "!==";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "instanceof";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "e";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "URIError";
__n53["right"] := __n55;
__n52["left"] := __n53;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := true;
__n56["raw"] := "true";
__n52["right"] := __n56;
__n51["test"] := __n52;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "AssignmentExpression";
__n60["operator"] := "=";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "result";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := false;
__n62["raw"] := "false";
__n60["right"] := __n62;
__n59["expression"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n51["consequent"] := __n57;
__n51["alternate"] := null;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n47["body"] := __n49;
__n35["handler"] := __n47;
__n35["finalizer"] := null;
__n63 := {  };
__n63["type"] := "TryStatement";
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "decodeURIComponent";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "%1";
__n70["raw"] := "\"%1\"";
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "AssignmentExpression";
__n72["operator"] := "=";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "result";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := false;
__n74["raw"] := "false";
__n72["right"] := __n74;
__n71["expression"] := __n72;
__n65 := [ __n66, __n71 ];
__n64["body"] := __n65;
__n63["block"] := __n64;
__n75 := {  };
__n75["type"] := "CatchClause";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "e";
__n75["param"] := __n76;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!==";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "instanceof";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "e";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "URIError";
__n81["right"] := __n83;
__n80["left"] := __n81;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := true;
__n84["raw"] := "true";
__n80["right"] := __n84;
__n79["test"] := __n80;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "AssignmentExpression";
__n88["operator"] := "=";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "result";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := false;
__n90["raw"] := "false";
__n88["right"] := __n90;
__n87["expression"] := __n88;
__n86 := [ __n87 ];
__n85["body"] := __n86;
__n79["consequent"] := __n85;
__n79["alternate"] := null;
__n78 := [ __n79 ];
__n77["body"] := __n78;
__n75["body"] := __n77;
__n63["handler"] := __n75;
__n63["finalizer"] := null;
__n91 := {  };
__n91["type"] := "TryStatement";
__n92 := {  };
__n92["type"] := "BlockStatement";
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "decodeURIComponent";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "% ";
__n98["raw"] := "\"% \"";
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n94["expression"] := __n95;
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "AssignmentExpression";
__n100["operator"] := "=";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "result";
__n100["left"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := false;
__n102["raw"] := "false";
__n100["right"] := __n102;
__n99["expression"] := __n100;
__n93 := [ __n94, __n99 ];
__n92["body"] := __n93;
__n91["block"] := __n92;
__n103 := {  };
__n103["type"] := "CatchClause";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "e";
__n103["param"] := __n104;
__n105 := {  };
__n105["type"] := "BlockStatement";
__n107 := {  };
__n107["type"] := "IfStatement";
__n108 := {  };
__n108["type"] := "BinaryExpression";
__n108["operator"] := "!==";
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "instanceof";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "e";
__n109["left"] := __n110;
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "URIError";
__n109["right"] := __n111;
__n108["left"] := __n109;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := true;
__n112["raw"] := "true";
__n108["right"] := __n112;
__n107["test"] := __n108;
__n113 := {  };
__n113["type"] := "BlockStatement";
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "AssignmentExpression";
__n116["operator"] := "=";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "result";
__n116["left"] := __n117;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := false;
__n118["raw"] := "false";
__n116["right"] := __n118;
__n115["expression"] := __n116;
__n114 := [ __n115 ];
__n113["body"] := __n114;
__n107["consequent"] := __n113;
__n107["alternate"] := null;
__n106 := [ __n107 ];
__n105["body"] := __n106;
__n103["body"] := __n105;
__n91["handler"] := __n103;
__n91["finalizer"] := null;
__n119 := {  };
__n119["type"] := "IfStatement";
__n120 := {  };
__n120["type"] := "BinaryExpression";
__n120["operator"] := "!==";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "result";
__n120["left"] := __n121;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := true;
__n122["raw"] := "true";
__n120["right"] := __n122;
__n119["test"] := __n120;
__n123 := {  };
__n123["type"] := "BlockStatement";
__n125 := {  };
__n125["type"] := "ExpressionStatement";
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "$ERROR";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "#1: If string.charAt(k) equal \"%\" and k + 2 >= string.length, throw URIError";
__n129["raw"] := "'#1: If string.charAt(k) equal \"%\" and k + 2 >= string.length, throw URIError'";
__n128 := [ __n129 ];
__n126["arguments"] := __n128;
__n125["expression"] := __n126;
__n124 := [ __n125 ];
__n123["body"] := __n124;
__n119["consequent"] := __n123;
__n119["alternate"] := null;
__n1 := [ __n2, __n7, __n35, __n63, __n91, __n119 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n130 := [ "result" ];
__n0["variableDeclarations"] := __n130;
__n131 := [  ];
__n0["functionDeclarations"] := __n131;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}