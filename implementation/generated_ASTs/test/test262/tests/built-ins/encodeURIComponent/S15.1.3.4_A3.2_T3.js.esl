function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "uriMark";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "-";
__n8["raw"] := "\"-\"";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "_";
__n9["raw"] := "\"_\"";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := ".";
__n10["raw"] := "\".\"";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "!";
__n11["raw"] := "\"!\"";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "~";
__n12["raw"] := "\"~\"";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "*";
__n13["raw"] := "\"*\"";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "'";
__n14["raw"] := "\"'\"";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "(";
__n15["raw"] := "\"(\"";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := ")";
__n16["raw"] := "\")\"";
__n7 := [ __n8, __n9, __n10, __n11, __n12, __n13, __n14, __n15, __n16 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n17 := {  };
__n17["type"] := "ForStatement";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "indexC";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 0.;
__n22["raw"] := "0";
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n17["init"] := __n18;
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "<";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "indexC";
__n23["left"] := __n24;
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "uriMark";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "length";
__n27["raw"] := "\"length\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n23["right"] := __n25;
__n17["test"] := __n23;
__n28 := {  };
__n28["type"] := "UpdateExpression";
__n28["operator"] := "++";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "indexC";
__n28["argument"] := __n29;
__n28["prefix"] := false;
__n17["update"] := __n28;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "VariableDeclaration";
__n34 := {  };
__n34["type"] := "VariableDeclarator";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "str";
__n34["id"] := __n35;
__n36 := {  };
__n36["type"] := "MemberExpression";
__n36["computed"] := true;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "uriMark";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "indexC";
__n36["property"] := __n38;
__n34["init"] := __n36;
__n33 := [ __n34 ];
__n32["declarations"] := __n33;
__n32["kind"] := "var";
__n39 := {  };
__n39["type"] := "IfStatement";
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "!==";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "encodeURIComponent";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "str";
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n40["left"] := __n41;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "str";
__n40["right"] := __n45;
__n39["test"] := __n40;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "$ERROR";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "+";
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "+";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "#";
__n55["raw"] := "'#'";
__n54["left"] := __n55;
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "+";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "indexC";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 1.;
__n58["raw"] := "1";
__n56["right"] := __n58;
__n54["right"] := __n56;
__n53["left"] := __n54;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := ": unescapedURISet containing";
__n59["raw"] := "': unescapedURISet containing'";
__n53["right"] := __n59;
__n52["left"] := __n53;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "str";
__n52["right"] := __n60;
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["expression"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n39["consequent"] := __n46;
__n39["alternate"] := null;
__n31 := [ __n32, __n39 ];
__n30["body"] := __n31;
__n17["body"] := __n30;
__n1 := [ __n2, __n17 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n61 := [ "uriMark", "indexC", "str" ];
__n0["variableDeclarations"] := __n61;
__n62 := [  ];
__n0["functionDeclarations"] := __n62;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}