function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "evalStr";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "BinaryExpression";
__n6["operator"] := "+";
__n7 := {  };
__n7["type"] := "BinaryExpression";
__n7["operator"] := "+";
__n8 := {  };
__n8["type"] := "BinaryExpression";
__n8["operator"] := "+";
__n9 := {  };
__n9["type"] := "BinaryExpression";
__n9["operator"] := "+";
__n10 := {  };
__n10["type"] := "BinaryExpression";
__n10["operator"] := "+";
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "+";
__n12 := {  };
__n12["type"] := "BinaryExpression";
__n12["operator"] := "+";
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "+";
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "+";
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "+";
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "+";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "+";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "+";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "+";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "+";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "+";
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "+";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "+";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "+";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "+";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "//CHECK#1
";
__n27["raw"] := "'//CHECK#1\\n'";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "for (var x in this) {
";
__n28["raw"] := "'for (var x in this) {\\n'";
__n26["right"] := __n28;
__n25["left"] := __n26;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "  if ( x === 'eval' ) {
";
__n29["raw"] := "'  if ( x === \\'eval\\' ) {\\n'";
__n25["right"] := __n29;
__n24["left"] := __n25;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "    $ERROR(\"#1: 'eval' have attribute DontEnum\");
";
__n30["raw"] := "'    $ERROR(\"#1: \\'eval\\' have attribute DontEnum\");\\n'";
__n24["right"] := __n30;
__n23["left"] := __n24;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "  } else if ( x === 'parseInt' ) {
";
__n31["raw"] := "'  } else if ( x === \\'parseInt\\' ) {\\n'";
__n23["right"] := __n31;
__n22["left"] := __n23;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "    $ERROR(\"#1: 'parseInt' have attribute DontEnum\");
";
__n32["raw"] := "'    $ERROR(\"#1: \\'parseInt\\' have attribute DontEnum\");\\n'";
__n22["right"] := __n32;
__n21["left"] := __n22;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "  } else if ( x === 'parseFloat' ) {
";
__n33["raw"] := "'  } else if ( x === \\'parseFloat\\' ) {\\n'";
__n21["right"] := __n33;
__n20["left"] := __n21;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "    $ERROR(\"#1: 'parseFloat' have attribute DontEnum\");
";
__n34["raw"] := "'    $ERROR(\"#1: \\'parseFloat\\' have attribute DontEnum\");\\n'";
__n20["right"] := __n34;
__n19["left"] := __n20;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "  } else if ( x === 'isNaN' ) {
";
__n35["raw"] := "'  } else if ( x === \\'isNaN\\' ) {\\n'";
__n19["right"] := __n35;
__n18["left"] := __n19;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "    $ERROR(\"#1: 'isNaN' have attribute DontEnum\");
";
__n36["raw"] := "'    $ERROR(\"#1: \\'isNaN\\' have attribute DontEnum\");\\n'";
__n18["right"] := __n36;
__n17["left"] := __n18;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "  } else if ( x === 'isFinite' ) {
";
__n37["raw"] := "'  } else if ( x === \\'isFinite\\' ) {\\n'";
__n17["right"] := __n37;
__n16["left"] := __n17;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "    $ERROR(\"#1: 'isFinite' have attribute DontEnum\");
";
__n38["raw"] := "'    $ERROR(\"#1: \\'isFinite\\' have attribute DontEnum\");\\n'";
__n16["right"] := __n38;
__n15["left"] := __n16;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "  } else if ( x === 'decodeURI' ) {
";
__n39["raw"] := "'  } else if ( x === \\'decodeURI\\' ) {\\n'";
__n15["right"] := __n39;
__n14["left"] := __n15;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "    $ERROR(\"#1: 'decodeURI' have attribute DontEnum\");
";
__n40["raw"] := "'    $ERROR(\"#1: \\'decodeURI\\' have attribute DontEnum\");\\n'";
__n14["right"] := __n40;
__n13["left"] := __n14;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "  } else if ( x === 'decodeURIComponent' ) {
";
__n41["raw"] := "'  } else if ( x === \\'decodeURIComponent\\' ) {\\n'";
__n13["right"] := __n41;
__n12["left"] := __n13;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "    $ERROR(\"#1: 'decodeURIComponent' have attribute DontEnum\");
";
__n42["raw"] := "'    $ERROR(\"#1: \\'decodeURIComponent\\' have attribute DontEnum\");\\n'";
__n12["right"] := __n42;
__n11["left"] := __n12;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "  } else if ( x === 'encodeURI' ) {
";
__n43["raw"] := "'  } else if ( x === \\'encodeURI\\' ) {\\n'";
__n11["right"] := __n43;
__n10["left"] := __n11;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "    $ERROR(\"#1: 'encodeURI' have attribute DontEnum\");
";
__n44["raw"] := "'    $ERROR(\"#1: \\'encodeURI\\' have attribute DontEnum\");\\n'";
__n10["right"] := __n44;
__n9["left"] := __n10;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "  } else if ( x === 'encodeURIComponent' ) {
";
__n45["raw"] := "'  } else if ( x === \\'encodeURIComponent\\' ) {\\n'";
__n9["right"] := __n45;
__n8["left"] := __n9;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "    $ERROR(\"#1: 'encodeURIComponent' have attribute DontEnum\");
";
__n46["raw"] := "'    $ERROR(\"#1: \\'encodeURIComponent\\' have attribute DontEnum\");\\n'";
__n8["right"] := __n46;
__n7["left"] := __n8;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "  }
";
__n47["raw"] := "'  }\\n'";
__n7["right"] := __n47;
__n6["left"] := __n7;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "}
";
__n48["raw"] := "'}\\n'";
__n6["right"] := __n48;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "eval";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "evalStr";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n1 := [ __n2, __n49 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n54 := [ "evalStr" ];
__n0["variableDeclarations"] := __n54;
__n55 := [  ];
__n0["functionDeclarations"] := __n55;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}