function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "isFinite";
__n8["callee"] := __n9;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 0.;
__n11["raw"] := "0";
__n10 := [ __n11 ];
__n8["arguments"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := true;
__n12["raw"] := "true";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "0";
__n13["raw"] := "\"0\"";
__n7 := [ __n8, __n12, __n13 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "assert";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "sameValue";
__n18["raw"] := "\"sameValue\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "isFinite";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "UnaryExpression";
__n23["operator"] := "-";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 0.;
__n24["raw"] := "0";
__n23["argument"] := __n24;
__n23["prefix"] := true;
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := true;
__n25["raw"] := "true";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "-0";
__n26["raw"] := "\"-0\"";
__n19 := [ __n20, __n25, __n26 ];
__n15["arguments"] := __n19;
__n14["expression"] := __n15;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "assert";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "sameValue";
__n31["raw"] := "\"sameValue\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "isFinite";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Math";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "pow";
__n39["raw"] := "\"pow\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 2.;
__n41["raw"] := "2";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 53.;
__n42["raw"] := "53";
__n40 := [ __n41, __n42 ];
__n36["arguments"] := __n40;
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := true;
__n43["raw"] := "true";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "Math.pow(2, 53)";
__n44["raw"] := "\"Math.pow(2, 53)\"";
__n32 := [ __n33, __n43, __n44 ];
__n28["arguments"] := __n32;
__n27["expression"] := __n28;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "assert";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "sameValue";
__n49["raw"] := "\"sameValue\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "isFinite";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "UnaryExpression";
__n54["operator"] := "-";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "Math";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "pow";
__n58["raw"] := "\"pow\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 2.;
__n60["raw"] := "2";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 53.;
__n61["raw"] := "53";
__n59 := [ __n60, __n61 ];
__n55["arguments"] := __n59;
__n54["argument"] := __n55;
__n54["prefix"] := true;
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := true;
__n62["raw"] := "true";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "-Math.pow(2, 53)";
__n63["raw"] := "\"-Math.pow(2, 53)\"";
__n50 := [ __n51, __n62, __n63 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "assert";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "sameValue";
__n68["raw"] := "\"sameValue\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "isFinite";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 1.;
__n73["raw"] := "1";
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := true;
__n74["raw"] := "true";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "1";
__n75["raw"] := "\"1\"";
__n69 := [ __n70, __n74, __n75 ];
__n65["arguments"] := __n69;
__n64["expression"] := __n65;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "MemberExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "assert";
__n78["object"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "sameValue";
__n80["raw"] := "\"sameValue\"";
__n78["property"] := __n80;
__n78["computed"] := true;
__n77["callee"] := __n78;
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "isFinite";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "UnaryExpression";
__n85["operator"] := "-";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 1.;
__n86["raw"] := "1";
__n85["argument"] := __n86;
__n85["prefix"] := true;
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := true;
__n87["raw"] := "true";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "-1";
__n88["raw"] := "\"-1\"";
__n81 := [ __n82, __n87, __n88 ];
__n77["arguments"] := __n81;
__n76["expression"] := __n77;
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "assert";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "sameValue";
__n93["raw"] := "\"sameValue\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n90["callee"] := __n91;
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "isFinite";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 0.000001;
__n98["raw"] := "0.000001";
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := true;
__n99["raw"] := "true";
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "0.000001";
__n100["raw"] := "\"0.000001\"";
__n94 := [ __n95, __n99, __n100 ];
__n90["arguments"] := __n94;
__n89["expression"] := __n90;
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "assert";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "sameValue";
__n105["raw"] := "\"sameValue\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n102["callee"] := __n103;
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "isFinite";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "UnaryExpression";
__n110["operator"] := "-";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 0.000001;
__n111["raw"] := "0.000001";
__n110["argument"] := __n111;
__n110["prefix"] := true;
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := true;
__n112["raw"] := "true";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "-0.000001";
__n113["raw"] := "\"-0.000001\"";
__n106 := [ __n107, __n112, __n113 ];
__n102["arguments"] := __n106;
__n101["expression"] := __n102;
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "MemberExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "assert";
__n116["object"] := __n117;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "sameValue";
__n118["raw"] := "\"sameValue\"";
__n116["property"] := __n118;
__n116["computed"] := true;
__n115["callee"] := __n116;
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "isFinite";
__n120["callee"] := __n121;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 1e+42;
__n123["raw"] := "1e42";
__n122 := [ __n123 ];
__n120["arguments"] := __n122;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := true;
__n124["raw"] := "true";
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := "1e42";
__n125["raw"] := "\"1e42\"";
__n119 := [ __n120, __n124, __n125 ];
__n115["arguments"] := __n119;
__n114["expression"] := __n115;
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "MemberExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "assert";
__n128["object"] := __n129;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "sameValue";
__n130["raw"] := "\"sameValue\"";
__n128["property"] := __n130;
__n128["computed"] := true;
__n127["callee"] := __n128;
__n132 := {  };
__n132["type"] := "CallExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "isFinite";
__n132["callee"] := __n133;
__n135 := {  };
__n135["type"] := "UnaryExpression";
__n135["operator"] := "-";
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := 1e+42;
__n136["raw"] := "1e42";
__n135["argument"] := __n136;
__n135["prefix"] := true;
__n134 := [ __n135 ];
__n132["arguments"] := __n134;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := true;
__n137["raw"] := "true";
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := "-1e42";
__n138["raw"] := "\"-1e42\"";
__n131 := [ __n132, __n137, __n138 ];
__n127["arguments"] := __n131;
__n126["expression"] := __n127;
__n1 := [ __n2, __n14, __n27, __n45, __n64, __n76, __n89, __n101, __n114, __n126 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n139 := [  ];
__n0["variableDeclarations"] := __n139;
__n140 := [  ];
__n0["functionDeclarations"] := __n140;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}