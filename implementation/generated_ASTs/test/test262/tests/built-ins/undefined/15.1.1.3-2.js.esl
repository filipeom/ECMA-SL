function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := "use strict";
__n3["raw"] := "\"use strict\"";
__n2["expression"] := __n3;
__n2["directive"] := "use strict";
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "global";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ThisExpression";
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "assert";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "throws";
__n13["raw"] := "\"throws\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["callee"] := __n11;
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "TypeError";
__n16 := {  };
__n16["type"] := "FunctionExpression";
__n16["id"] := null;
__n17 := [  ];
__n16["params"] := __n17;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "=";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n22["computed"] := true;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "global";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "undefined";
__n24["raw"] := "\"undefined\"";
__n22["property"] := __n24;
__n21["left"] := __n22;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 5.;
__n25["raw"] := "5";
__n21["right"] := __n25;
__n20["expression"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n26 := [  ];
__n18["variableDeclarations"] := __n26;
__n27 := [  ];
__n18["functionDeclarations"] := __n27;
__n18["codeType"] := "function";
__n18["strict"] := false;
__n16["body"] := __n18;
__n16["generator"] := false;
__n16["expression"] := false;
__n16["async"] := false;
__n14 := [ __n15, __n16 ];
__n10["arguments"] := __n14;
__n9["expression"] := __n10;
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "assert";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "sameValue";
__n32["raw"] := "\"sameValue\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "MemberExpression";
__n34["computed"] := true;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "global";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "undefined";
__n36["raw"] := "\"undefined\"";
__n34["property"] := __n36;
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "void";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 0.;
__n38["raw"] := "0";
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n33 := [ __n34, __n37 ];
__n29["arguments"] := __n33;
__n28["expression"] := __n29;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "assert";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "sameValue";
__n43["raw"] := "\"sameValue\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "undefined";
__n46 := {  };
__n46["type"] := "UnaryExpression";
__n46["operator"] := "void";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 0.;
__n47["raw"] := "0";
__n46["argument"] := __n47;
__n46["prefix"] := true;
__n44 := [ __n45, __n46 ];
__n40["arguments"] := __n44;
__n39["expression"] := __n40;
__n1 := [ __n2, __n4, __n9, __n28, __n39 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n48 := [ "global" ];
__n0["variableDeclarations"] := __n48;
__n49 := [  ];
__n0["functionDeclarations"] := __n49;
__n0["codeType"] := "global";
__n0["strict"] := true;
return ( false, __n0 )
}