function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ForInStatement";
__n3 := {  };
__n3["type"] := "VariableDeclarator";
__n4 := {  };
__n4["type"] := "Identifier";
__n4["name"] := "prop";
__n3["id"] := __n4;
__n3["init"] := null;
__n2["left"] := __n3;
__n5 := {  };
__n5["type"] := "ThisExpression";
__n2["right"] := __n5;
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "IfStatement";
__n9 := {  };
__n9["type"] := "BinaryExpression";
__n9["operator"] := "===";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "prop";
__n9["left"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "undefined";
__n11["raw"] := "\"undefined\"";
__n9["right"] := __n11;
__n8["test"] := __n9;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "$ERROR";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: The undefined is DontEnum";
__n18["raw"] := "'#1: The undefined is DontEnum'";
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n8["consequent"] := __n12;
__n8["alternate"] := null;
__n7 := [ __n8 ];
__n6["body"] := __n7;
__n2["body"] := __n6;
__n2["each"] := false;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n19 := [ "prop" ];
__n0["variableDeclarations"] := __n19;
__n20 := [  ];
__n0["functionDeclarations"] := __n20;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}