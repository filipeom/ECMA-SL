function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "argObj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "FunctionExpression";
__n7["id"] := null;
__n8 := [  ];
__n7["params"] := __n8;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ReturnStatement";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arguments";
__n11["argument"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n13 := [  ];
__n9["variableDeclarations"] := __n13;
__n14 := [  ];
__n9["functionDeclarations"] := __n14;
__n9["codeType"] := "function";
__n9["strict"] := false;
__n7["body"] := __n9;
__n7["generator"] := false;
__n7["async"] := false;
__n7["expression"] := false;
__n6["callee"] := __n7;
__n15 := [  ];
__n6["arguments"] := __n15;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n16 := {  };
__n16["type"] := "VariableDeclaration";
__n18 := {  };
__n18["type"] := "VariableDeclarator";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "verifyEnumerable";
__n18["id"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := false;
__n20["raw"] := "false";
__n18["init"] := __n20;
__n17 := [ __n18 ];
__n16["declarations"] := __n17;
__n16["kind"] := "var";
__n21 := {  };
__n21["type"] := "ForInStatement";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "_10_6_14_c_1";
__n22["id"] := __n23;
__n22["init"] := null;
__n21["left"] := __n22;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "argObj";
__n21["right"] := __n24;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "IfStatement";
__n28 := {  };
__n28["type"] := "LogicalExpression";
__n28["operator"] := "&&";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "argObj";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "hasOwnProperty";
__n32["raw"] := "\"hasOwnProperty\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "_10_6_14_c_1";
__n33 := [ __n34 ];
__n29["arguments"] := __n33;
__n28["left"] := __n29;
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "===";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "_10_6_14_c_1";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "callee";
__n37["raw"] := "\"callee\"";
__n35["right"] := __n37;
__n28["right"] := __n35;
__n27["test"] := __n28;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "AssignmentExpression";
__n41["operator"] := "=";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "verifyEnumerable";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := true;
__n43["raw"] := "true";
__n41["right"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n27["consequent"] := __n38;
__n27["alternate"] := null;
__n26 := [ __n27 ];
__n25["body"] := __n26;
__n21["body"] := __n25;
__n21["each"] := false;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "assert";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "sameValue";
__n48["raw"] := "\"sameValue\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "verifyEnumerable";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := false;
__n51["raw"] := "false";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "verifyEnumerable";
__n52["raw"] := "'verifyEnumerable'";
__n49 := [ __n50, __n51, __n52 ];
__n45["arguments"] := __n49;
__n44["expression"] := __n45;
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "assert";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "argObj";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "hasOwnProperty";
__n60["raw"] := "\"hasOwnProperty\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "callee";
__n62["raw"] := "\"callee\"";
__n61 := [ __n62 ];
__n57["arguments"] := __n61;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "argObj.hasOwnProperty(\"callee\") !== true";
__n63["raw"] := "'argObj.hasOwnProperty(\"callee\") !== true'";
__n56 := [ __n57, __n63 ];
__n54["arguments"] := __n56;
__n53["expression"] := __n54;
__n1 := [ __n2, __n16, __n21, __n44, __n53 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n64 := [ "argObj", "verifyEnumerable", "_10_6_14_c_1" ];
__n0["variableDeclarations"] := __n64;
__n65 := [  ];
__n0["functionDeclarations"] := __n65;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}