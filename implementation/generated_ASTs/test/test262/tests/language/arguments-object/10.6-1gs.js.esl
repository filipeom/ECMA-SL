function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := "use strict";
__n3["raw"] := "\"use strict\"";
__n2["expression"] := __n3;
__n2["directive"] := "use strict";
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "f_10_6_1_gs";
__n4["expression"] := __n5;
__n1 := [ __n2, __n4 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n6 := [  ];
__n0["variableDeclarations"] := __n6;
__n8 := {  };
__n8["type"] := "FunctionDeclaration";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "f_10_6_1_gs";
__n8["id"] := __n9;
__n10 := [  ];
__n8["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ReturnStatement";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "arguments";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "callee";
__n16["raw"] := "\"callee\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["argument"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n17 := [  ];
__n11["variableDeclarations"] := __n17;
__n18 := [  ];
__n11["functionDeclarations"] := __n18;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n8["body"] := __n11;
__n8["generator"] := false;
__n8["expression"] := false;
__n8["async"] := false;
__n7 := [ __n8 ];
__n0["functionDeclarations"] := __n7;
__n0["codeType"] := "global";
__n0["strict"] := true;
return ( false, __n0 )
}