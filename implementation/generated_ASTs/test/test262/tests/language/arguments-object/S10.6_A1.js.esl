function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "f1";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "TryStatement";
__n5 := {  };
__n5["type"] := "BlockStatement";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "x";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "f1";
__n11["callee"] := __n12;
__n13 := [  ];
__n11["arguments"] := __n13;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n6 := [ __n7 ];
__n5["body"] := __n6;
__n4["block"] := __n5;
__n14 := {  };
__n14["type"] := "CatchClause";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "e";
__n14["param"] := __n15;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "$ERROR";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "#1: arguments doesn't exists";
__n22["raw"] := "\"#1: arguments doesn't exists\"";
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n18["expression"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n14["body"] := __n16;
__n4["handler"] := __n14;
__n4["finalizer"] := null;
__n23 := {  };
__n23["type"] := "VariableDeclaration";
__n25 := {  };
__n25["type"] := "VariableDeclarator";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "f2";
__n25["id"] := __n26;
__n27 := {  };
__n27["type"] := "FunctionExpression";
__n27["id"] := null;
__n28 := [  ];
__n27["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ReturnStatement";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "arguments";
__n31["argument"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n33 := [  ];
__n29["variableDeclarations"] := __n33;
__n34 := [  ];
__n29["functionDeclarations"] := __n34;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n27["body"] := __n29;
__n27["generator"] := false;
__n27["expression"] := false;
__n27["async"] := false;
__n25["init"] := __n27;
__n24 := [ __n25 ];
__n23["declarations"] := __n24;
__n23["kind"] := "var";
__n35 := {  };
__n35["type"] := "TryStatement";
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "VariableDeclaration";
__n40 := {  };
__n40["type"] := "VariableDeclarator";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "x";
__n40["id"] := __n41;
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "f2";
__n42["callee"] := __n43;
__n44 := [  ];
__n42["arguments"] := __n44;
__n40["init"] := __n42;
__n39 := [ __n40 ];
__n38["declarations"] := __n39;
__n38["kind"] := "var";
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n35["block"] := __n36;
__n45 := {  };
__n45["type"] := "CatchClause";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "e";
__n45["param"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#2: arguments doesn't exists";
__n53["raw"] := "\"#2: arguments doesn't exists\"";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n45["body"] := __n47;
__n35["handler"] := __n45;
__n35["finalizer"] := null;
__n1 := [ __n2, __n4, __n23, __n35 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n54 := [ "x", "f2" ];
__n0["variableDeclarations"] := __n54;
__n56 := {  };
__n56["type"] := "FunctionDeclaration";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "f1";
__n56["id"] := __n57;
__n58 := [  ];
__n56["params"] := __n58;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ReturnStatement";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "arguments";
__n61["argument"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n63 := [  ];
__n59["variableDeclarations"] := __n63;
__n64 := [  ];
__n59["functionDeclarations"] := __n64;
__n59["codeType"] := "function";
__n59["strict"] := false;
__n56["body"] := __n59;
__n56["generator"] := false;
__n56["expression"] := false;
__n56["async"] := false;
__n55 := [ __n56 ];
__n0["functionDeclarations"] := __n55;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}