function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "f1";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "TryStatement";
__n5 := {  };
__n5["type"] := "BlockStatement";
__n7 := {  };
__n7["type"] := "IfStatement";
__n8 := {  };
__n8["type"] := "UnaryExpression";
__n8["operator"] := "!";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "f1";
__n9["callee"] := __n10;
__n11 := [  ];
__n9["arguments"] := __n11;
__n8["argument"] := __n9;
__n8["prefix"] := true;
__n7["test"] := __n8;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "$ERROR";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: A property length have attribute { DontDelete }";
__n18["raw"] := "\"#1: A property length have attribute { DontDelete }\"";
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n7["consequent"] := __n12;
__n7["alternate"] := null;
__n6 := [ __n7 ];
__n5["body"] := __n6;
__n4["block"] := __n5;
__n19 := {  };
__n19["type"] := "CatchClause";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "e";
__n19["param"] := __n20;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "$ERROR";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "#1: arguments object don't exists";
__n27["raw"] := "\"#1: arguments object don't exists\"";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n19["body"] := __n21;
__n4["handler"] := __n19;
__n4["finalizer"] := null;
__n28 := {  };
__n28["type"] := "VariableDeclaration";
__n30 := {  };
__n30["type"] := "VariableDeclarator";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "f2";
__n30["id"] := __n31;
__n32 := {  };
__n32["type"] := "FunctionExpression";
__n32["id"] := null;
__n33 := [  ];
__n32["params"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ReturnStatement";
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "delete";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "arguments";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "length";
__n40["raw"] := "\"length\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n36["argument"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n41 := [  ];
__n34["variableDeclarations"] := __n41;
__n42 := [  ];
__n34["functionDeclarations"] := __n42;
__n34["codeType"] := "function";
__n34["strict"] := false;
__n32["body"] := __n34;
__n32["generator"] := false;
__n32["async"] := false;
__n32["expression"] := false;
__n30["init"] := __n32;
__n29 := [ __n30 ];
__n28["declarations"] := __n29;
__n28["kind"] := "var";
__n43 := {  };
__n43["type"] := "TryStatement";
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "UnaryExpression";
__n47["operator"] := "!";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "f2";
__n48["callee"] := __n49;
__n50 := [  ];
__n48["arguments"] := __n50;
__n47["argument"] := __n48;
__n47["prefix"] := true;
__n46["test"] := __n47;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "$ERROR";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "#2: A property length have attribute { DontDelete }";
__n57["raw"] := "\"#2: A property length have attribute { DontDelete }\"";
__n56 := [ __n57 ];
__n54["arguments"] := __n56;
__n53["expression"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n46["consequent"] := __n51;
__n46["alternate"] := null;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n43["block"] := __n44;
__n58 := {  };
__n58["type"] := "CatchClause";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "e";
__n58["param"] := __n59;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "$ERROR";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "#2: arguments object don't exists";
__n66["raw"] := "\"#2: arguments object don't exists\"";
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n58["body"] := __n60;
__n43["handler"] := __n58;
__n43["finalizer"] := null;
__n1 := [ __n2, __n4, __n28, __n43 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n67 := [ "f2" ];
__n0["variableDeclarations"] := __n67;
__n69 := {  };
__n69["type"] := "FunctionDeclaration";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "f1";
__n69["id"] := __n70;
__n71 := [  ];
__n69["params"] := __n71;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ReturnStatement";
__n75 := {  };
__n75["type"] := "UnaryExpression";
__n75["operator"] := "delete";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "arguments";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "length";
__n78["raw"] := "\"length\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["argument"] := __n76;
__n75["prefix"] := true;
__n74["argument"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n79 := [  ];
__n72["variableDeclarations"] := __n79;
__n80 := [  ];
__n72["functionDeclarations"] := __n80;
__n72["codeType"] := "function";
__n72["strict"] := false;
__n69["body"] := __n72;
__n69["generator"] := false;
__n69["async"] := false;
__n69["expression"] := false;
__n68 := [ __n69 ];
__n0["functionDeclarations"] := __n68;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}