function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "str";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "something different";
__n6["raw"] := "\"something different\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "f1";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "TryStatement";
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "IfStatement";
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "!==";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "f1";
__n15["callee"] := __n16;
__n17 := [  ];
__n15["arguments"] := __n17;
__n14["object"] := __n15;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "length";
__n18["raw"] := "\"length\"";
__n14["property"] := __n18;
__n14["computed"] := true;
__n13["left"] := __n14;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "str";
__n13["right"] := __n19;
__n12["test"] := __n13;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "$ERROR";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "#1: A property length have attribute { ReadOnly }";
__n26["raw"] := "\"#1: A property length have attribute { ReadOnly }\"";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n12["consequent"] := __n20;
__n12["alternate"] := null;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n9["block"] := __n10;
__n27 := {  };
__n27["type"] := "CatchClause";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "e";
__n27["param"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "$ERROR";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "#1: arguments object don't exists";
__n35["raw"] := "\"#1: arguments object don't exists\"";
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n27["body"] := __n29;
__n9["handler"] := __n27;
__n9["finalizer"] := null;
__n36 := {  };
__n36["type"] := "VariableDeclaration";
__n38 := {  };
__n38["type"] := "VariableDeclarator";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "f2";
__n38["id"] := __n39;
__n40 := {  };
__n40["type"] := "FunctionExpression";
__n40["id"] := null;
__n41 := [  ];
__n40["params"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "AssignmentExpression";
__n45["operator"] := "=";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "arguments";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "length";
__n48["raw"] := "\"length\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["left"] := __n46;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "str";
__n45["right"] := __n49;
__n44["expression"] := __n45;
__n50 := {  };
__n50["type"] := "ReturnStatement";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "arguments";
__n50["argument"] := __n51;
__n43 := [ __n44, __n50 ];
__n42["body"] := __n43;
__n52 := [  ];
__n42["variableDeclarations"] := __n52;
__n53 := [  ];
__n42["functionDeclarations"] := __n53;
__n42["codeType"] := "function";
__n42["strict"] := false;
__n40["body"] := __n42;
__n40["generator"] := false;
__n40["async"] := false;
__n40["expression"] := false;
__n38["init"] := __n40;
__n37 := [ __n38 ];
__n36["declarations"] := __n37;
__n36["kind"] := "var";
__n54 := {  };
__n54["type"] := "TryStatement";
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "f2";
__n60["callee"] := __n61;
__n62 := [  ];
__n60["arguments"] := __n62;
__n59["object"] := __n60;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "length";
__n63["raw"] := "\"length\"";
__n59["property"] := __n63;
__n59["computed"] := true;
__n58["left"] := __n59;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "str";
__n58["right"] := __n64;
__n57["test"] := __n58;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "$ERROR";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "#2: A property length have attribute { ReadOnly }";
__n71["raw"] := "\"#2: A property length have attribute { ReadOnly }\"";
__n70 := [ __n71 ];
__n68["arguments"] := __n70;
__n67["expression"] := __n68;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n57["consequent"] := __n65;
__n57["alternate"] := null;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n54["block"] := __n55;
__n72 := {  };
__n72["type"] := "CatchClause";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "e";
__n72["param"] := __n73;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "$ERROR";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "#2: arguments object don't exists";
__n80["raw"] := "\"#2: arguments object don't exists\"";
__n79 := [ __n80 ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n72["body"] := __n74;
__n54["handler"] := __n72;
__n54["finalizer"] := null;
__n1 := [ __n2, __n7, __n9, __n36, __n54 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n81 := [ "str", "f2" ];
__n0["variableDeclarations"] := __n81;
__n83 := {  };
__n83["type"] := "FunctionDeclaration";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "f1";
__n83["id"] := __n84;
__n85 := [  ];
__n83["params"] := __n85;
__n86 := {  };
__n86["type"] := "BlockStatement";
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "AssignmentExpression";
__n89["operator"] := "=";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "arguments";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "length";
__n92["raw"] := "\"length\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n89["left"] := __n90;
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "str";
__n89["right"] := __n93;
__n88["expression"] := __n89;
__n94 := {  };
__n94["type"] := "ReturnStatement";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "arguments";
__n94["argument"] := __n95;
__n87 := [ __n88, __n94 ];
__n86["body"] := __n87;
__n96 := [  ];
__n86["variableDeclarations"] := __n96;
__n97 := [  ];
__n86["functionDeclarations"] := __n97;
__n86["codeType"] := "function";
__n86["strict"] := false;
__n83["body"] := __n86;
__n83["generator"] := false;
__n83["async"] := false;
__n83["expression"] := false;
__n82 := [ __n83 ];
__n0["functionDeclarations"] := __n82;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}