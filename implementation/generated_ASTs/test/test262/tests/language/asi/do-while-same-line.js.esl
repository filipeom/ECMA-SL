function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "DoWhileStatement";
__n7 := {  };
__n7["type"] := "BreakStatement";
__n7["label"] := null;
__n6["body"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 0.;
__n8["raw"] := "0";
__n6["test"] := __n8;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "AssignmentExpression";
__n10["operator"] := "=";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "x";
__n10["left"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 42.;
__n12["raw"] := "42";
__n10["right"] := __n12;
__n9["expression"] := __n10;
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "assert";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "sameValue";
__n17["raw"] := "\"sameValue\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "x";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 42.;
__n20["raw"] := "42";
__n18 := [ __n19, __n20 ];
__n14["arguments"] := __n18;
__n13["expression"] := __n14;
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "AssignmentExpression";
__n22["operator"] := "=";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "x";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 0.;
__n24["raw"] := "0";
__n22["right"] := __n24;
__n21["expression"] := __n22;
__n25 := {  };
__n25["type"] := "DoWhileStatement";
__n26 := {  };
__n26["type"] := "DoWhileStatement";
__n27 := {  };
__n27["type"] := "DoWhileStatement";
__n28 := {  };
__n28["type"] := "EmptyStatement";
__n27["body"] := __n28;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "x";
__n27["test"] := __n29;
__n26["body"] := __n27;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "x";
__n26["test"] := __n30;
__n25["body"] := __n26;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "x";
__n25["test"] := __n31;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "AssignmentExpression";
__n33["operator"] := "=";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "x";
__n33["left"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 39.;
__n35["raw"] := "39";
__n33["right"] := __n35;
__n32["expression"] := __n33;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "assert";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "sameValue";
__n40["raw"] := "\"sameValue\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "x";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 39.;
__n43["raw"] := "39";
__n41 := [ __n42, __n43 ];
__n37["arguments"] := __n41;
__n36["expression"] := __n37;
__n1 := [ __n2, __n6, __n9, __n13, __n21, __n25, __n32, __n36 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n44 := [ "x" ];
__n0["variableDeclarations"] := __n44;
__n45 := [  ];
__n0["functionDeclarations"] := __n45;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}