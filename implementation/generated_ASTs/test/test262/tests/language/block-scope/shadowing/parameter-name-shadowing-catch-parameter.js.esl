function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "fn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "fn";
__n5["callee"] := __n6;
__n7 := [  ];
__n5["arguments"] := __n7;
__n4["expression"] := __n5;
__n1 := [ __n2, __n4 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n8 := [  ];
__n0["variableDeclarations"] := __n8;
__n10 := {  };
__n10["type"] := "FunctionDeclaration";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "fn";
__n10["id"] := __n11;
__n12 := [  ];
__n10["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "c";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n20 := {  };
__n20["type"] := "TryStatement";
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ThrowStatement";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "stuff3";
__n24["raw"] := "'stuff3'";
__n23["argument"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n20["block"] := __n21;
__n25 := {  };
__n25["type"] := "CatchClause";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "c";
__n25["param"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [ "c" ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "AssignmentExpression";
__n36["operator"] := "=";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "c";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 3.;
__n38["raw"] := "3";
__n36["right"] := __n38;
__n35["expression"] := __n36;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "assert";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "sameValue";
__n43["raw"] := "\"sameValue\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "c";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 3.;
__n46["raw"] := "3";
__n44 := [ __n45, __n46 ];
__n40["arguments"] := __n44;
__n39["expression"] := __n40;
__n34 := [ __n35, __n39 ];
__n33["body"] := __n34;
__n47 := [  ];
__n33["variableDeclarations"] := __n47;
__n48 := [  ];
__n33["functionDeclarations"] := __n48;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["expression"] := false;
__n31["async"] := false;
__n30["callee"] := __n31;
__n49 := [  ];
__n30["arguments"] := __n49;
__n29["expression"] := __n30;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "assert";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "sameValue";
__n54["raw"] := "\"sameValue\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "c";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "stuff3";
__n57["raw"] := "'stuff3'";
__n55 := [ __n56, __n57 ];
__n51["arguments"] := __n55;
__n50["expression"] := __n51;
__n28 := [ __n29, __n50 ];
__n27["body"] := __n28;
__n25["body"] := __n27;
__n20["handler"] := __n25;
__n20["finalizer"] := null;
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "assert";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "sameValue";
__n62["raw"] := "\"sameValue\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "c";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 1.;
__n65["raw"] := "1";
__n63 := [ __n64, __n65 ];
__n59["arguments"] := __n63;
__n58["expression"] := __n59;
__n14 := [ __n15, __n20, __n58 ];
__n13["body"] := __n14;
__n66 := [ "c" ];
__n13["variableDeclarations"] := __n66;
__n67 := [  ];
__n13["functionDeclarations"] := __n67;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n10["body"] := __n13;
__n10["generator"] := false;
__n10["expression"] := false;
__n10["async"] := false;
__n9 := [ __n10 ];
__n0["functionDeclarations"] := __n9;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}