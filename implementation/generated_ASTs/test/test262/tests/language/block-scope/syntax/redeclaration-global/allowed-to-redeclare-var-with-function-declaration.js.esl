function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "f";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "f";
__n6["expression"] := __n7;
__n1 := [ __n2, __n6 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n8 := [ "f" ];
__n0["variableDeclarations"] := __n8;
__n10 := {  };
__n10["type"] := "FunctionDeclaration";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "f";
__n10["id"] := __n11;
__n12 := [  ];
__n10["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n14 := [  ];
__n13["body"] := __n14;
__n15 := [  ];
__n13["variableDeclarations"] := __n15;
__n16 := [  ];
__n13["functionDeclarations"] := __n16;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n10["body"] := __n13;
__n10["generator"] := false;
__n10["expression"] := false;
__n10["async"] := false;
__n9 := [ __n10 ];
__n0["functionDeclarations"] := __n9;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}