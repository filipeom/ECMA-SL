function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__10_4_2_1_3";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "str";
__n6["raw"] := "\"str\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "testcase";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "testcase";
__n10["callee"] := __n11;
__n12 := [  ];
__n10["arguments"] := __n12;
__n9["expression"] := __n10;
__n1 := [ __n2, __n7, __n9 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n13 := [ "__10_4_2_1_3" ];
__n0["variableDeclarations"] := __n13;
__n15 := {  };
__n15["type"] := "FunctionDeclaration";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "testcase";
__n15["id"] := __n16;
__n17 := [  ];
__n15["params"] := __n17;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "VariableDeclaration";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__10_4_2_1_3";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "str1";
__n24["raw"] := "\"str1\"";
__n22["init"] := __n24;
__n21 := [ __n22 ];
__n20["declarations"] := __n21;
__n20["kind"] := "var";
__n25 := {  };
__n25["type"] := "TryStatement";
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ThrowStatement";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "error";
__n29["raw"] := "\"error\"";
__n28["argument"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n25["block"] := __n26;
__n30 := {  };
__n30["type"] := "CatchClause";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "e";
__n30["param"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "VariableDeclaration";
__n36 := {  };
__n36["type"] := "VariableDeclarator";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "__10_4_2_1_3";
__n36["id"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "str2";
__n38["raw"] := "\"str2\"";
__n36["init"] := __n38;
__n35 := [ __n36 ];
__n34["declarations"] := __n35;
__n34["kind"] := "var";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "assert";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "eval";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "'str2' === __10_4_2_1_3";
__n46["raw"] := "\"\\'str2\\' === __10_4_2_1_3\"";
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "direct eval";
__n47["raw"] := "'direct eval'";
__n42 := [ __n43, __n47 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n33 := [ __n34, __n39 ];
__n32["body"] := __n33;
__n30["body"] := __n32;
__n25["handler"] := __n30;
__n25["finalizer"] := null;
__n19 := [ __n20, __n25 ];
__n18["body"] := __n19;
__n48 := [ "__10_4_2_1_3" ];
__n18["variableDeclarations"] := __n48;
__n49 := [  ];
__n18["functionDeclarations"] := __n49;
__n18["codeType"] := "function";
__n18["strict"] := false;
__n15["body"] := __n18;
__n15["generator"] := false;
__n15["async"] := false;
__n15["expression"] := false;
__n14 := [ __n15 ];
__n0["functionDeclarations"] := __n14;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}