function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__10_4_2_1_4";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "str";
__n6["raw"] := "\"str\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "testcase";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "testcase";
__n10["callee"] := __n11;
__n12 := [  ];
__n10["arguments"] := __n12;
__n9["expression"] := __n10;
__n1 := [ __n2, __n7, __n9 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n13 := [ "__10_4_2_1_4" ];
__n0["variableDeclarations"] := __n13;
__n15 := {  };
__n15["type"] := "FunctionDeclaration";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "testcase";
__n15["id"] := __n16;
__n17 := [  ];
__n15["params"] := __n17;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "VariableDeclaration";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "o";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "NewExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Object";
__n24["callee"] := __n25;
__n26 := [  ];
__n24["arguments"] := __n26;
__n22["init"] := __n24;
__n21 := [ __n22 ];
__n20["declarations"] := __n21;
__n20["kind"] := "var";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "AssignmentExpression";
__n28["operator"] := "=";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "o";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "__10_4_2_1_4";
__n31["raw"] := "\"__10_4_2_1_4\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["left"] := __n29;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "str2";
__n32["raw"] := "\"str2\"";
__n28["right"] := __n32;
__n27["expression"] := __n28;
__n33 := {  };
__n33["type"] := "VariableDeclaration";
__n35 := {  };
__n35["type"] := "VariableDeclarator";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "__10_4_2_1_4";
__n35["id"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "str1";
__n37["raw"] := "\"str1\"";
__n35["init"] := __n37;
__n34 := [ __n35 ];
__n33["declarations"] := __n34;
__n33["kind"] := "var";
__n38 := {  };
__n38["type"] := "WithStatement";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "o";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "assert";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "eval";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "'str2' === __10_4_2_1_4";
__n49["raw"] := "\"\\'str2\\' === __10_4_2_1_4\"";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "direct eval";
__n50["raw"] := "'direct eval'";
__n45 := [ __n46, __n50 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n38["body"] := __n40;
__n19 := [ __n20, __n27, __n33, __n38 ];
__n18["body"] := __n19;
__n51 := [ "o", "__10_4_2_1_4" ];
__n18["variableDeclarations"] := __n51;
__n52 := [  ];
__n18["functionDeclarations"] := __n52;
__n18["codeType"] := "function";
__n18["strict"] := false;
__n15["body"] := __n18;
__n15["generator"] := false;
__n15["async"] := false;
__n15["expression"] := false;
__n14 := [ __n15 ];
__n0["functionDeclarations"] := __n14;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}