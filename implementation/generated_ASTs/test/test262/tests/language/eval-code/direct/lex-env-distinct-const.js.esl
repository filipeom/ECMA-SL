function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "outside";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 'null;
__n6["raw"] := "\"'null\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "const";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "eval";
__n8["callee"] := __n9;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "const outside = null;";
__n11["raw"] := "'const outside = null;'";
__n10 := [ __n11 ];
__n8["arguments"] := __n10;
__n7["expression"] := __n8;
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "eval";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "\"use strict\"; const outside = null;";
__n16["raw"] := "'\"use strict\"; const outside = null;'";
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["expression"] := __n13;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "eval";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "const xNonStrict = null;";
__n21["raw"] := "'const xNonStrict = null;'";
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n17["expression"] := __n18;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "assert";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "sameValue";
__n26["raw"] := "\"sameValue\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "UnaryExpression";
__n28["operator"] := "typeof";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "xNonStrict";
__n28["argument"] := __n29;
__n28["prefix"] := true;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "undefined";
__n30["raw"] := "'undefined'";
__n27 := [ __n28, __n30 ];
__n23["arguments"] := __n27;
__n22["expression"] := __n23;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "assert";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "throws";
__n35["raw"] := "\"throws\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "ReferenceError";
__n38 := {  };
__n38["type"] := "FunctionExpression";
__n38["id"] := null;
__n39 := [  ];
__n38["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "xNonStrict";
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n44 := [  ];
__n40["variableDeclarations"] := __n44;
__n45 := [  ];
__n40["functionDeclarations"] := __n45;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n38["body"] := __n40;
__n38["generator"] := false;
__n38["expression"] := false;
__n38["async"] := false;
__n36 := [ __n37, __n38 ];
__n32["arguments"] := __n36;
__n31["expression"] := __n32;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "eval";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "\"use strict\"; const xStrict = null;";
__n50["raw"] := "'\"use strict\"; const xStrict = null;'";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "assert";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "sameValue";
__n55["raw"] := "\"sameValue\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n57 := {  };
__n57["type"] := "UnaryExpression";
__n57["operator"] := "typeof";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "xStrict";
__n57["argument"] := __n58;
__n57["prefix"] := true;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "undefined";
__n59["raw"] := "'undefined'";
__n56 := [ __n57, __n59 ];
__n52["arguments"] := __n56;
__n51["expression"] := __n52;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "assert";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "throws";
__n64["raw"] := "\"throws\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "ReferenceError";
__n67 := {  };
__n67["type"] := "FunctionExpression";
__n67["id"] := null;
__n68 := [  ];
__n67["params"] := __n68;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "xStrict";
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n73 := [  ];
__n69["variableDeclarations"] := __n73;
__n74 := [  ];
__n69["functionDeclarations"] := __n74;
__n69["codeType"] := "function";
__n69["strict"] := false;
__n67["body"] := __n69;
__n67["generator"] := false;
__n67["expression"] := false;
__n67["async"] := false;
__n65 := [ __n66, __n67 ];
__n61["arguments"] := __n65;
__n60["expression"] := __n61;
__n1 := [ __n2, __n7, __n12, __n17, __n22, __n31, __n46, __n51, __n60 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n75 := [ "outside" ];
__n0["variableDeclarations"] := __n75;
__n76 := [  ];
__n0["functionDeclarations"] := __n76;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}