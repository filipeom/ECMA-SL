function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "f1";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "IfStatement";
__n5 := {  };
__n5["type"] := "BinaryExpression";
__n5["operator"] := "!==";
__n6 := {  };
__n6["type"] := "BinaryExpression";
__n6["operator"] := "+";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "f1";
__n6["left"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 1.;
__n8["raw"] := "1";
__n6["right"] := __n8;
__n5["left"] := __n6;
__n9 := {  };
__n9["type"] := "BinaryExpression";
__n9["operator"] := "+";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "f1";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "toString";
__n13["raw"] := "\"toString\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["callee"] := __n11;
__n14 := [  ];
__n10["arguments"] := __n14;
__n9["left"] := __n10;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n9["right"] := __n15;
__n5["right"] := __n9;
__n4["test"] := __n5;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "$ERROR";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "#1: function f1() {return 0;}; f1 + 1 === f1.toString() + 1";
__n22["raw"] := "'#1: function f1() {return 0;}; f1 + 1 === f1.toString() + 1'";
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n18["expression"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n4["consequent"] := __n16;
__n4["alternate"] := null;
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "f2";
__n23["expression"] := __n24;
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "AssignmentExpression";
__n26["operator"] := "=";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "f2";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "valueOf";
__n29["raw"] := "\"valueOf\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["left"] := __n27;
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [  ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ReturnStatement";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 1.;
__n35["raw"] := "1";
__n34["argument"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n36 := [  ];
__n32["variableDeclarations"] := __n36;
__n37 := [  ];
__n32["functionDeclarations"] := __n37;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["expression"] := false;
__n30["async"] := false;
__n26["right"] := __n30;
__n25["expression"] := __n26;
__n38 := {  };
__n38["type"] := "IfStatement";
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "!==";
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "+";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 1.;
__n41["raw"] := "1";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "f2";
__n40["right"] := __n42;
__n39["left"] := __n40;
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 1.;
__n44["raw"] := "1";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 1.;
__n45["raw"] := "1";
__n43["right"] := __n45;
__n39["right"] := __n43;
__n38["test"] := __n39;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "$ERROR";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#2: f1unction f2() {return 0;} f2.valueOf = function() {return 1;}; 1 + f2 === 1 + 1. Actual: ";
__n53["raw"] := "'#2: f1unction f2() {return 0;} f2.valueOf = function() {return 1;}; 1 + f2 === 1 + 1. Actual: '";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "+";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 1.;
__n55["raw"] := "1";
__n54["left"] := __n55;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "f2";
__n54["right"] := __n56;
__n52["right"] := __n54;
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["expression"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n38["consequent"] := __n46;
__n38["alternate"] := null;
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "f3";
__n57["expression"] := __n58;
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "AssignmentExpression";
__n60["operator"] := "=";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "f3";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "toString";
__n63["raw"] := "\"toString\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["left"] := __n61;
__n64 := {  };
__n64["type"] := "FunctionExpression";
__n64["id"] := null;
__n65 := [  ];
__n64["params"] := __n65;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ReturnStatement";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 1.;
__n69["raw"] := "1";
__n68["argument"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n70 := [  ];
__n66["variableDeclarations"] := __n70;
__n71 := [  ];
__n66["functionDeclarations"] := __n71;
__n66["codeType"] := "function";
__n66["strict"] := false;
__n64["body"] := __n66;
__n64["generator"] := false;
__n64["expression"] := false;
__n64["async"] := false;
__n60["right"] := __n64;
__n59["expression"] := __n60;
__n72 := {  };
__n72["type"] := "IfStatement";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "!==";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "+";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 1.;
__n75["raw"] := "1";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "f3";
__n74["right"] := __n76;
__n73["left"] := __n74;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 1.;
__n78["raw"] := "1";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 1.;
__n79["raw"] := "1";
__n77["right"] := __n79;
__n73["right"] := __n77;
__n72["test"] := __n73;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#3: f1unction f3() {return 0;} f3.toString() = function() {return 1;}; 1 + f3 === 1 + 1. Actual: ";
__n87["raw"] := "'#3: f1unction f3() {return 0;} f3.toString() = function() {return 1;}; 1 + f3 === 1 + 1. Actual: '";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "+";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 1.;
__n89["raw"] := "1";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "f3";
__n88["right"] := __n90;
__n86["right"] := __n88;
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n72["consequent"] := __n80;
__n72["alternate"] := null;
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "f4";
__n91["expression"] := __n92;
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "AssignmentExpression";
__n94["operator"] := "=";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "f4";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "valueOf";
__n97["raw"] := "\"valueOf\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["left"] := __n95;
__n98 := {  };
__n98["type"] := "FunctionExpression";
__n98["id"] := null;
__n99 := [  ];
__n98["params"] := __n99;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "ReturnStatement";
__n103 := {  };
__n103["type"] := "UnaryExpression";
__n103["operator"] := "-";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := 1.;
__n104["raw"] := "1";
__n103["argument"] := __n104;
__n103["prefix"] := true;
__n102["argument"] := __n103;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n105 := [  ];
__n100["variableDeclarations"] := __n105;
__n106 := [  ];
__n100["functionDeclarations"] := __n106;
__n100["codeType"] := "function";
__n100["strict"] := false;
__n98["body"] := __n100;
__n98["generator"] := false;
__n98["expression"] := false;
__n98["async"] := false;
__n94["right"] := __n98;
__n93["expression"] := __n94;
__n107 := {  };
__n107["type"] := "ExpressionStatement";
__n108 := {  };
__n108["type"] := "AssignmentExpression";
__n108["operator"] := "=";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "f4";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "toString";
__n111["raw"] := "\"toString\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n108["left"] := __n109;
__n112 := {  };
__n112["type"] := "FunctionExpression";
__n112["id"] := null;
__n113 := [  ];
__n112["params"] := __n113;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n116 := {  };
__n116["type"] := "ReturnStatement";
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 1.;
__n117["raw"] := "1";
__n116["argument"] := __n117;
__n115 := [ __n116 ];
__n114["body"] := __n115;
__n118 := [  ];
__n114["variableDeclarations"] := __n118;
__n119 := [  ];
__n114["functionDeclarations"] := __n119;
__n114["codeType"] := "function";
__n114["strict"] := false;
__n112["body"] := __n114;
__n112["generator"] := false;
__n112["expression"] := false;
__n112["async"] := false;
__n108["right"] := __n112;
__n107["expression"] := __n108;
__n120 := {  };
__n120["type"] := "IfStatement";
__n121 := {  };
__n121["type"] := "BinaryExpression";
__n121["operator"] := "!==";
__n122 := {  };
__n122["type"] := "BinaryExpression";
__n122["operator"] := "+";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "f4";
__n122["left"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 1.;
__n124["raw"] := "1";
__n122["right"] := __n124;
__n121["left"] := __n122;
__n125 := {  };
__n125["type"] := "BinaryExpression";
__n125["operator"] := "-";
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := 1.;
__n126["raw"] := "1";
__n125["left"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := 1.;
__n127["raw"] := "1";
__n125["right"] := __n127;
__n121["right"] := __n125;
__n120["test"] := __n121;
__n128 := {  };
__n128["type"] := "BlockStatement";
__n130 := {  };
__n130["type"] := "ExpressionStatement";
__n131 := {  };
__n131["type"] := "CallExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "$ERROR";
__n131["callee"] := __n132;
__n134 := {  };
__n134["type"] := "BinaryExpression";
__n134["operator"] := "+";
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "#4: f1unction f4() {return 0;}; f2.valueOf = function() {return -1;}; f4.toString() = function() {return 1;}; f4 + 1 === 1 - 1. Actual: ";
__n135["raw"] := "'#4: f1unction f4() {return 0;}; f2.valueOf = function() {return -1;}; f4.toString() = function() {return 1;}; f4 + 1 === 1 - 1. Actual: '";
__n134["left"] := __n135;
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "+";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "f4";
__n136["left"] := __n137;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := 1.;
__n138["raw"] := "1";
__n136["right"] := __n138;
__n134["right"] := __n136;
__n133 := [ __n134 ];
__n131["arguments"] := __n133;
__n130["expression"] := __n131;
__n129 := [ __n130 ];
__n128["body"] := __n129;
__n120["consequent"] := __n128;
__n120["alternate"] := null;
__n1 := [ __n2, __n4, __n23, __n25, __n38, __n57, __n59, __n72, __n91, __n93, __n107, __n120 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n139 := [  ];
__n0["variableDeclarations"] := __n139;
__n141 := {  };
__n141["type"] := "FunctionDeclaration";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "f1";
__n141["id"] := __n142;
__n143 := [  ];
__n141["params"] := __n143;
__n144 := {  };
__n144["type"] := "BlockStatement";
__n146 := {  };
__n146["type"] := "ReturnStatement";
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := 0.;
__n147["raw"] := "0";
__n146["argument"] := __n147;
__n145 := [ __n146 ];
__n144["body"] := __n145;
__n148 := [  ];
__n144["variableDeclarations"] := __n148;
__n149 := [  ];
__n144["functionDeclarations"] := __n149;
__n144["codeType"] := "function";
__n144["strict"] := false;
__n141["body"] := __n144;
__n141["generator"] := false;
__n141["expression"] := false;
__n141["async"] := false;
__n150 := {  };
__n150["type"] := "FunctionDeclaration";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "f2";
__n150["id"] := __n151;
__n152 := [  ];
__n150["params"] := __n152;
__n153 := {  };
__n153["type"] := "BlockStatement";
__n155 := {  };
__n155["type"] := "ReturnStatement";
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := 0.;
__n156["raw"] := "0";
__n155["argument"] := __n156;
__n154 := [ __n155 ];
__n153["body"] := __n154;
__n157 := [  ];
__n153["variableDeclarations"] := __n157;
__n158 := [  ];
__n153["functionDeclarations"] := __n158;
__n153["codeType"] := "function";
__n153["strict"] := false;
__n150["body"] := __n153;
__n150["generator"] := false;
__n150["expression"] := false;
__n150["async"] := false;
__n159 := {  };
__n159["type"] := "FunctionDeclaration";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "f3";
__n159["id"] := __n160;
__n161 := [  ];
__n159["params"] := __n161;
__n162 := {  };
__n162["type"] := "BlockStatement";
__n164 := {  };
__n164["type"] := "ReturnStatement";
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := 0.;
__n165["raw"] := "0";
__n164["argument"] := __n165;
__n163 := [ __n164 ];
__n162["body"] := __n163;
__n166 := [  ];
__n162["variableDeclarations"] := __n166;
__n167 := [  ];
__n162["functionDeclarations"] := __n167;
__n162["codeType"] := "function";
__n162["strict"] := false;
__n159["body"] := __n162;
__n159["generator"] := false;
__n159["expression"] := false;
__n159["async"] := false;
__n168 := {  };
__n168["type"] := "FunctionDeclaration";
__n169 := {  };
__n169["type"] := "Identifier";
__n169["name"] := "f4";
__n168["id"] := __n169;
__n170 := [  ];
__n168["params"] := __n170;
__n171 := {  };
__n171["type"] := "BlockStatement";
__n173 := {  };
__n173["type"] := "ReturnStatement";
__n174 := {  };
__n174["type"] := "Literal";
__n174["value"] := 0.;
__n174["raw"] := "0";
__n173["argument"] := __n174;
__n172 := [ __n173 ];
__n171["body"] := __n172;
__n175 := [  ];
__n171["variableDeclarations"] := __n175;
__n176 := [  ];
__n171["functionDeclarations"] := __n176;
__n171["codeType"] := "function";
__n171["strict"] := false;
__n168["body"] := __n171;
__n168["generator"] := false;
__n168["expression"] := false;
__n168["async"] := false;
__n140 := [ __n141, __n150, __n159, __n168 ];
__n0["functionDeclarations"] := __n140;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}