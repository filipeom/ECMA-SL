function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "+";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Number";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "POSITIVE_INFINITY";
__n7["raw"] := "\"POSITIVE_INFINITY\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["left"] := __n5;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 1.;
__n8["raw"] := "1";
__n4["right"] := __n8;
__n3["left"] := __n4;
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Number";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "POSITIVE_INFINITY";
__n11["raw"] := "\"POSITIVE_INFINITY\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n3["right"] := __n9;
__n2["test"] := __n3;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "$ERROR";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "+";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "#1: Infinity + 1 === Infinity. Actual: ";
__n19["raw"] := "'#1: Infinity + 1 === Infinity. Actual: '";
__n18["left"] := __n19;
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "+";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "Infinity";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 1.;
__n22["raw"] := "1";
__n20["right"] := __n22;
__n18["right"] := __n20;
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n2["consequent"] := __n12;
__n2["alternate"] := null;
__n23 := {  };
__n23["type"] := "IfStatement";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "!==";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "+";
__n26 := {  };
__n26["type"] := "UnaryExpression";
__n26["operator"] := "-";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 1.;
__n27["raw"] := "1";
__n26["argument"] := __n27;
__n26["prefix"] := true;
__n25["left"] := __n26;
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Number";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "POSITIVE_INFINITY";
__n30["raw"] := "\"POSITIVE_INFINITY\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n25["right"] := __n28;
__n24["left"] := __n25;
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Number";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "POSITIVE_INFINITY";
__n33["raw"] := "\"POSITIVE_INFINITY\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n24["right"] := __n31;
__n23["test"] := __n24;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "+";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "#2: -1 + Infinity === Infinity. Actual: ";
__n41["raw"] := "'#2: -1 + Infinity === Infinity. Actual: '";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "+";
__n43 := {  };
__n43["type"] := "UnaryExpression";
__n43["operator"] := "-";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 1.;
__n44["raw"] := "1";
__n43["argument"] := __n44;
__n43["prefix"] := true;
__n42["left"] := __n43;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Infinity";
__n42["right"] := __n45;
__n40["right"] := __n42;
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n23["consequent"] := __n34;
__n23["alternate"] := null;
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "!==";
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "+";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "Number";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "NEGATIVE_INFINITY";
__n51["raw"] := "\"NEGATIVE_INFINITY\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["left"] := __n49;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 1.;
__n52["raw"] := "1";
__n48["right"] := __n52;
__n47["left"] := __n48;
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "Number";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "NEGATIVE_INFINITY";
__n55["raw"] := "\"NEGATIVE_INFINITY\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n47["right"] := __n53;
__n46["test"] := __n47;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "$ERROR";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "+";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "#3: -Infinity + 1 === -Infinity. Actual: ";
__n63["raw"] := "'#3: -Infinity + 1 === -Infinity. Actual: '";
__n62["left"] := __n63;
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "+";
__n65 := {  };
__n65["type"] := "UnaryExpression";
__n65["operator"] := "-";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "Infinity";
__n65["argument"] := __n66;
__n65["prefix"] := true;
__n64["left"] := __n65;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 1.;
__n67["raw"] := "1";
__n64["right"] := __n67;
__n62["right"] := __n64;
__n61 := [ __n62 ];
__n59["arguments"] := __n61;
__n58["expression"] := __n59;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n46["consequent"] := __n56;
__n46["alternate"] := null;
__n68 := {  };
__n68["type"] := "IfStatement";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "!==";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "+";
__n71 := {  };
__n71["type"] := "UnaryExpression";
__n71["operator"] := "-";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.;
__n72["raw"] := "1";
__n71["argument"] := __n72;
__n71["prefix"] := true;
__n70["left"] := __n71;
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "Number";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "NEGATIVE_INFINITY";
__n75["raw"] := "\"NEGATIVE_INFINITY\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n70["right"] := __n73;
__n69["left"] := __n70;
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "Number";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "NEGATIVE_INFINITY";
__n78["raw"] := "\"NEGATIVE_INFINITY\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n69["right"] := __n76;
__n68["test"] := __n69;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "$ERROR";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "+";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "#4: -1 + -Infinity === -Infinity. Actual: ";
__n86["raw"] := "'#4: -1 + -Infinity === -Infinity. Actual: '";
__n85["left"] := __n86;
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "+";
__n88 := {  };
__n88["type"] := "UnaryExpression";
__n88["operator"] := "-";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 1.;
__n89["raw"] := "1";
__n88["argument"] := __n89;
__n88["prefix"] := true;
__n87["left"] := __n88;
__n90 := {  };
__n90["type"] := "UnaryExpression";
__n90["operator"] := "-";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "Infinity";
__n90["argument"] := __n91;
__n90["prefix"] := true;
__n87["right"] := __n90;
__n85["right"] := __n87;
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n68["consequent"] := __n79;
__n68["alternate"] := null;
__n92 := {  };
__n92["type"] := "IfStatement";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "!==";
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "+";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "Number";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "POSITIVE_INFINITY";
__n97["raw"] := "\"POSITIVE_INFINITY\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["left"] := __n95;
__n98 := {  };
__n98["type"] := "MemberExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "Number";
__n98["object"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "MAX_VALUE";
__n100["raw"] := "\"MAX_VALUE\"";
__n98["property"] := __n100;
__n98["computed"] := true;
__n94["right"] := __n98;
__n93["left"] := __n94;
__n101 := {  };
__n101["type"] := "MemberExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "Number";
__n101["object"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "POSITIVE_INFINITY";
__n103["raw"] := "\"POSITIVE_INFINITY\"";
__n101["property"] := __n103;
__n101["computed"] := true;
__n93["right"] := __n101;
__n92["test"] := __n93;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "$ERROR";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "BinaryExpression";
__n110["operator"] := "+";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "#5: Infinity + Number.MAX_VALUE === Infinity. Actual: ";
__n111["raw"] := "'#5: Infinity + Number.MAX_VALUE === Infinity. Actual: '";
__n110["left"] := __n111;
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "+";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "Infinity";
__n112["left"] := __n113;
__n114 := {  };
__n114["type"] := "MemberExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "Number";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "MAX_VALUE";
__n116["raw"] := "\"MAX_VALUE\"";
__n114["property"] := __n116;
__n114["computed"] := true;
__n112["right"] := __n114;
__n110["right"] := __n112;
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n105 := [ __n106 ];
__n104["body"] := __n105;
__n92["consequent"] := __n104;
__n92["alternate"] := null;
__n117 := {  };
__n117["type"] := "IfStatement";
__n118 := {  };
__n118["type"] := "BinaryExpression";
__n118["operator"] := "!==";
__n119 := {  };
__n119["type"] := "BinaryExpression";
__n119["operator"] := "+";
__n120 := {  };
__n120["type"] := "UnaryExpression";
__n120["operator"] := "-";
__n121 := {  };
__n121["type"] := "MemberExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "Number";
__n121["object"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "MAX_VALUE";
__n123["raw"] := "\"MAX_VALUE\"";
__n121["property"] := __n123;
__n121["computed"] := true;
__n120["argument"] := __n121;
__n120["prefix"] := true;
__n119["left"] := __n120;
__n124 := {  };
__n124["type"] := "MemberExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "Number";
__n124["object"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "POSITIVE_INFINITY";
__n126["raw"] := "\"POSITIVE_INFINITY\"";
__n124["property"] := __n126;
__n124["computed"] := true;
__n119["right"] := __n124;
__n118["left"] := __n119;
__n127 := {  };
__n127["type"] := "MemberExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "Number";
__n127["object"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "POSITIVE_INFINITY";
__n129["raw"] := "\"POSITIVE_INFINITY\"";
__n127["property"] := __n129;
__n127["computed"] := true;
__n118["right"] := __n127;
__n117["test"] := __n118;
__n130 := {  };
__n130["type"] := "BlockStatement";
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "$ERROR";
__n133["callee"] := __n134;
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "+";
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "#6: -Number.MAX_VALUE + Infinity === Infinity. Actual: ";
__n137["raw"] := "'#6: -Number.MAX_VALUE + Infinity === Infinity. Actual: '";
__n136["left"] := __n137;
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "+";
__n139 := {  };
__n139["type"] := "UnaryExpression";
__n139["operator"] := "-";
__n140 := {  };
__n140["type"] := "MemberExpression";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "Number";
__n140["object"] := __n141;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := "MAX_VALUE";
__n142["raw"] := "\"MAX_VALUE\"";
__n140["property"] := __n142;
__n140["computed"] := true;
__n139["argument"] := __n140;
__n139["prefix"] := true;
__n138["left"] := __n139;
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "Infinity";
__n138["right"] := __n143;
__n136["right"] := __n138;
__n135 := [ __n136 ];
__n133["arguments"] := __n135;
__n132["expression"] := __n133;
__n131 := [ __n132 ];
__n130["body"] := __n131;
__n117["consequent"] := __n130;
__n117["alternate"] := null;
__n144 := {  };
__n144["type"] := "IfStatement";
__n145 := {  };
__n145["type"] := "BinaryExpression";
__n145["operator"] := "!==";
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "+";
__n147 := {  };
__n147["type"] := "MemberExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "Number";
__n147["object"] := __n148;
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := "NEGATIVE_INFINITY";
__n149["raw"] := "\"NEGATIVE_INFINITY\"";
__n147["property"] := __n149;
__n147["computed"] := true;
__n146["left"] := __n147;
__n150 := {  };
__n150["type"] := "MemberExpression";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "Number";
__n150["object"] := __n151;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := "MAX_VALUE";
__n152["raw"] := "\"MAX_VALUE\"";
__n150["property"] := __n152;
__n150["computed"] := true;
__n146["right"] := __n150;
__n145["left"] := __n146;
__n153 := {  };
__n153["type"] := "MemberExpression";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "Number";
__n153["object"] := __n154;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := "NEGATIVE_INFINITY";
__n155["raw"] := "\"NEGATIVE_INFINITY\"";
__n153["property"] := __n155;
__n153["computed"] := true;
__n145["right"] := __n153;
__n144["test"] := __n145;
__n156 := {  };
__n156["type"] := "BlockStatement";
__n158 := {  };
__n158["type"] := "ExpressionStatement";
__n159 := {  };
__n159["type"] := "CallExpression";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "$ERROR";
__n159["callee"] := __n160;
__n162 := {  };
__n162["type"] := "BinaryExpression";
__n162["operator"] := "+";
__n163 := {  };
__n163["type"] := "Literal";
__n163["value"] := "#7: -Infinity + Number.MAX_VALUE === -Infinity. Actual: ";
__n163["raw"] := "'#7: -Infinity + Number.MAX_VALUE === -Infinity. Actual: '";
__n162["left"] := __n163;
__n164 := {  };
__n164["type"] := "BinaryExpression";
__n164["operator"] := "+";
__n165 := {  };
__n165["type"] := "UnaryExpression";
__n165["operator"] := "-";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "Infinity";
__n165["argument"] := __n166;
__n165["prefix"] := true;
__n164["left"] := __n165;
__n167 := {  };
__n167["type"] := "MemberExpression";
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "Number";
__n167["object"] := __n168;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := "MAX_VALUE";
__n169["raw"] := "\"MAX_VALUE\"";
__n167["property"] := __n169;
__n167["computed"] := true;
__n164["right"] := __n167;
__n162["right"] := __n164;
__n161 := [ __n162 ];
__n159["arguments"] := __n161;
__n158["expression"] := __n159;
__n157 := [ __n158 ];
__n156["body"] := __n157;
__n144["consequent"] := __n156;
__n144["alternate"] := null;
__n170 := {  };
__n170["type"] := "IfStatement";
__n171 := {  };
__n171["type"] := "BinaryExpression";
__n171["operator"] := "!==";
__n172 := {  };
__n172["type"] := "BinaryExpression";
__n172["operator"] := "+";
__n173 := {  };
__n173["type"] := "UnaryExpression";
__n173["operator"] := "-";
__n174 := {  };
__n174["type"] := "MemberExpression";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "Number";
__n174["object"] := __n175;
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := "MAX_VALUE";
__n176["raw"] := "\"MAX_VALUE\"";
__n174["property"] := __n176;
__n174["computed"] := true;
__n173["argument"] := __n174;
__n173["prefix"] := true;
__n172["left"] := __n173;
__n177 := {  };
__n177["type"] := "MemberExpression";
__n178 := {  };
__n178["type"] := "Identifier";
__n178["name"] := "Number";
__n177["object"] := __n178;
__n179 := {  };
__n179["type"] := "Literal";
__n179["value"] := "NEGATIVE_INFINITY";
__n179["raw"] := "\"NEGATIVE_INFINITY\"";
__n177["property"] := __n179;
__n177["computed"] := true;
__n172["right"] := __n177;
__n171["left"] := __n172;
__n180 := {  };
__n180["type"] := "MemberExpression";
__n181 := {  };
__n181["type"] := "Identifier";
__n181["name"] := "Number";
__n180["object"] := __n181;
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := "NEGATIVE_INFINITY";
__n182["raw"] := "\"NEGATIVE_INFINITY\"";
__n180["property"] := __n182;
__n180["computed"] := true;
__n171["right"] := __n180;
__n170["test"] := __n171;
__n183 := {  };
__n183["type"] := "BlockStatement";
__n185 := {  };
__n185["type"] := "ExpressionStatement";
__n186 := {  };
__n186["type"] := "CallExpression";
__n187 := {  };
__n187["type"] := "Identifier";
__n187["name"] := "$ERROR";
__n186["callee"] := __n187;
__n189 := {  };
__n189["type"] := "BinaryExpression";
__n189["operator"] := "+";
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := "#8: -Number.MAX_VALUE + -Infinity === -Infinity. Actual: ";
__n190["raw"] := "'#8: -Number.MAX_VALUE + -Infinity === -Infinity. Actual: '";
__n189["left"] := __n190;
__n191 := {  };
__n191["type"] := "BinaryExpression";
__n191["operator"] := "+";
__n192 := {  };
__n192["type"] := "UnaryExpression";
__n192["operator"] := "-";
__n193 := {  };
__n193["type"] := "MemberExpression";
__n194 := {  };
__n194["type"] := "Identifier";
__n194["name"] := "Number";
__n193["object"] := __n194;
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "MAX_VALUE";
__n195["raw"] := "\"MAX_VALUE\"";
__n193["property"] := __n195;
__n193["computed"] := true;
__n192["argument"] := __n193;
__n192["prefix"] := true;
__n191["left"] := __n192;
__n196 := {  };
__n196["type"] := "UnaryExpression";
__n196["operator"] := "-";
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "Infinity";
__n196["argument"] := __n197;
__n196["prefix"] := true;
__n191["right"] := __n196;
__n189["right"] := __n191;
__n188 := [ __n189 ];
__n186["arguments"] := __n188;
__n185["expression"] := __n186;
__n184 := [ __n185 ];
__n183["body"] := __n184;
__n170["consequent"] := __n183;
__n170["alternate"] := null;
__n1 := [ __n2, __n23, __n46, __n68, __n92, __n117, __n144, __n170 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n198 := [  ];
__n0["variableDeclarations"] := __n198;
__n199 := [  ];
__n0["functionDeclarations"] := __n199;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}