function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "+";
__n5 := {  };
__n5["type"] := "UnaryExpression";
__n5["operator"] := "-";
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n5["argument"] := __n6;
__n5["prefix"] := true;
__n4["left"] := __n5;
__n7 := {  };
__n7["type"] := "UnaryExpression";
__n7["operator"] := "-";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 0.;
__n8["raw"] := "0";
__n7["argument"] := __n8;
__n7["prefix"] := true;
__n4["right"] := __n7;
__n3["left"] := __n4;
__n9 := {  };
__n9["type"] := "UnaryExpression";
__n9["operator"] := "-";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n9["argument"] := __n10;
__n9["prefix"] := true;
__n3["right"] := __n9;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1.1: -0 + -0 === 0. Actual: ";
__n18["raw"] := "'#1.1: -0 + -0 === 0. Actual: '";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "+";
__n20 := {  };
__n20["type"] := "UnaryExpression";
__n20["operator"] := "-";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 0.;
__n21["raw"] := "0";
__n20["argument"] := __n21;
__n20["prefix"] := true;
__n19["left"] := __n20;
__n22 := {  };
__n22["type"] := "UnaryExpression";
__n22["operator"] := "-";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 0.;
__n23["raw"] := "0";
__n22["argument"] := __n23;
__n22["prefix"] := true;
__n19["right"] := __n22;
__n17["right"] := __n19;
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "IfStatement";
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "!==";
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "/";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 1.;
__n29["raw"] := "1";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "+";
__n31 := {  };
__n31["type"] := "UnaryExpression";
__n31["operator"] := "-";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 0.;
__n32["raw"] := "0";
__n31["argument"] := __n32;
__n31["prefix"] := true;
__n30["left"] := __n31;
__n33 := {  };
__n33["type"] := "UnaryExpression";
__n33["operator"] := "-";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 0.;
__n34["raw"] := "0";
__n33["argument"] := __n34;
__n33["prefix"] := true;
__n30["right"] := __n33;
__n28["right"] := __n30;
__n27["left"] := __n28;
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Number";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "NEGATIVE_INFINITY";
__n37["raw"] := "\"NEGATIVE_INFINITY\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n27["right"] := __n35;
__n26["test"] := __n27;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "$ERROR";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "#1.1: -0 + -0 === - 0. Actual: +0";
__n44["raw"] := "'#1.1: -0 + -0 === - 0. Actual: +0'";
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n26["consequent"] := __n38;
__n26["alternate"] := null;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n2["alternate"] := __n24;
__n45 := {  };
__n45["type"] := "IfStatement";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "+";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 0.;
__n48["raw"] := "0";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "UnaryExpression";
__n49["operator"] := "-";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 0.;
__n50["raw"] := "0";
__n49["argument"] := __n50;
__n49["prefix"] := true;
__n47["right"] := __n49;
__n46["left"] := __n47;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 0.;
__n51["raw"] := "0";
__n46["right"] := __n51;
__n45["test"] := __n46;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "+";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#2.1: 0 + -0 === 0. Actual: ";
__n59["raw"] := "'#2.1: 0 + -0 === 0. Actual: '";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "+";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 0.;
__n61["raw"] := "0";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "UnaryExpression";
__n62["operator"] := "-";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 0.;
__n63["raw"] := "0";
__n62["argument"] := __n63;
__n62["prefix"] := true;
__n60["right"] := __n62;
__n58["right"] := __n60;
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n45["consequent"] := __n52;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "IfStatement";
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "!==";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "/";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 1.;
__n69["raw"] := "1";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "+";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 0.;
__n71["raw"] := "0";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "UnaryExpression";
__n72["operator"] := "-";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 0.;
__n73["raw"] := "0";
__n72["argument"] := __n73;
__n72["prefix"] := true;
__n70["right"] := __n72;
__n68["right"] := __n70;
__n67["left"] := __n68;
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "Number";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "POSITIVE_INFINITY";
__n76["raw"] := "\"POSITIVE_INFINITY\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n67["right"] := __n74;
__n66["test"] := __n67;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "$ERROR";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "#2.2: 0 + -0 === + 0. Actual: -0";
__n83["raw"] := "'#2.2: 0 + -0 === + 0. Actual: -0'";
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n78 := [ __n79 ];
__n77["body"] := __n78;
__n66["consequent"] := __n77;
__n66["alternate"] := null;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n45["alternate"] := __n64;
__n84 := {  };
__n84["type"] := "IfStatement";
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "!==";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "UnaryExpression";
__n87["operator"] := "-";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 0.;
__n88["raw"] := "0";
__n87["argument"] := __n88;
__n87["prefix"] := true;
__n86["left"] := __n87;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 0.;
__n89["raw"] := "0";
__n86["right"] := __n89;
__n85["left"] := __n86;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 0.;
__n90["raw"] := "0";
__n85["right"] := __n90;
__n84["test"] := __n85;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "#3.1: -0 + 0 === 0. Actual: ";
__n98["raw"] := "'#3.1: -0 + 0 === 0. Actual: '";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "+";
__n100 := {  };
__n100["type"] := "UnaryExpression";
__n100["operator"] := "-";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 0.;
__n101["raw"] := "0";
__n100["argument"] := __n101;
__n100["prefix"] := true;
__n99["left"] := __n100;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 0.;
__n102["raw"] := "0";
__n99["right"] := __n102;
__n97["right"] := __n99;
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n84["consequent"] := __n91;
__n103 := {  };
__n103["type"] := "BlockStatement";
__n105 := {  };
__n105["type"] := "IfStatement";
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "!==";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "/";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := 1.;
__n108["raw"] := "1";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "+";
__n110 := {  };
__n110["type"] := "UnaryExpression";
__n110["operator"] := "-";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 0.;
__n111["raw"] := "0";
__n110["argument"] := __n111;
__n110["prefix"] := true;
__n109["left"] := __n110;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 0.;
__n112["raw"] := "0";
__n109["right"] := __n112;
__n107["right"] := __n109;
__n106["left"] := __n107;
__n113 := {  };
__n113["type"] := "MemberExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "Number";
__n113["object"] := __n114;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "POSITIVE_INFINITY";
__n115["raw"] := "\"POSITIVE_INFINITY\"";
__n113["property"] := __n115;
__n113["computed"] := true;
__n106["right"] := __n113;
__n105["test"] := __n106;
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "$ERROR";
__n119["callee"] := __n120;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "#3.2: -0 + 0 === + 0. Actual: -0";
__n122["raw"] := "'#3.2: -0 + 0 === + 0. Actual: -0'";
__n121 := [ __n122 ];
__n119["arguments"] := __n121;
__n118["expression"] := __n119;
__n117 := [ __n118 ];
__n116["body"] := __n117;
__n105["consequent"] := __n116;
__n105["alternate"] := null;
__n104 := [ __n105 ];
__n103["body"] := __n104;
__n84["alternate"] := __n103;
__n123 := {  };
__n123["type"] := "IfStatement";
__n124 := {  };
__n124["type"] := "BinaryExpression";
__n124["operator"] := "!==";
__n125 := {  };
__n125["type"] := "BinaryExpression";
__n125["operator"] := "+";
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := 0.;
__n126["raw"] := "0";
__n125["left"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := 0.;
__n127["raw"] := "0";
__n125["right"] := __n127;
__n124["left"] := __n125;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := 0.;
__n128["raw"] := "0";
__n124["right"] := __n128;
__n123["test"] := __n124;
__n129 := {  };
__n129["type"] := "BlockStatement";
__n131 := {  };
__n131["type"] := "ExpressionStatement";
__n132 := {  };
__n132["type"] := "CallExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "$ERROR";
__n132["callee"] := __n133;
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "+";
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "#4.1: 0 + 0 === 0. Actual: ";
__n136["raw"] := "'#4.1: 0 + 0 === 0. Actual: '";
__n135["left"] := __n136;
__n137 := {  };
__n137["type"] := "BinaryExpression";
__n137["operator"] := "+";
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := 0.;
__n138["raw"] := "0";
__n137["left"] := __n138;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := 0.;
__n139["raw"] := "0";
__n137["right"] := __n139;
__n135["right"] := __n137;
__n134 := [ __n135 ];
__n132["arguments"] := __n134;
__n131["expression"] := __n132;
__n130 := [ __n131 ];
__n129["body"] := __n130;
__n123["consequent"] := __n129;
__n140 := {  };
__n140["type"] := "BlockStatement";
__n142 := {  };
__n142["type"] := "IfStatement";
__n143 := {  };
__n143["type"] := "BinaryExpression";
__n143["operator"] := "!==";
__n144 := {  };
__n144["type"] := "BinaryExpression";
__n144["operator"] := "/";
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := 1.;
__n145["raw"] := "1";
__n144["left"] := __n145;
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "+";
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := 0.;
__n147["raw"] := "0";
__n146["left"] := __n147;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := 0.;
__n148["raw"] := "0";
__n146["right"] := __n148;
__n144["right"] := __n146;
__n143["left"] := __n144;
__n149 := {  };
__n149["type"] := "MemberExpression";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "Number";
__n149["object"] := __n150;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "POSITIVE_INFINITY";
__n151["raw"] := "\"POSITIVE_INFINITY\"";
__n149["property"] := __n151;
__n149["computed"] := true;
__n143["right"] := __n149;
__n142["test"] := __n143;
__n152 := {  };
__n152["type"] := "BlockStatement";
__n154 := {  };
__n154["type"] := "ExpressionStatement";
__n155 := {  };
__n155["type"] := "CallExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "$ERROR";
__n155["callee"] := __n156;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := "#4.2: 0 + 0 === + 0. Actual: -0";
__n158["raw"] := "'#4.2: 0 + 0 === + 0. Actual: -0'";
__n157 := [ __n158 ];
__n155["arguments"] := __n157;
__n154["expression"] := __n155;
__n153 := [ __n154 ];
__n152["body"] := __n153;
__n142["consequent"] := __n152;
__n142["alternate"] := null;
__n141 := [ __n142 ];
__n140["body"] := __n141;
__n123["alternate"] := __n140;
__n1 := [ __n2, __n45, __n84, __n123 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n159 := [  ];
__n0["variableDeclarations"] := __n159;
__n160 := [  ];
__n0["functionDeclarations"] := __n160;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}