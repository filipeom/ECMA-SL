function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "+";
__n5 := {  };
__n5["type"] := "UnaryExpression";
__n5["operator"] := "-";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Number";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "MIN_VALUE";
__n8["raw"] := "\"MIN_VALUE\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["argument"] := __n6;
__n5["prefix"] := true;
__n4["left"] := __n5;
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Number";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "MIN_VALUE";
__n11["raw"] := "\"MIN_VALUE\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n4["right"] := __n9;
__n3["left"] := __n4;
__n12 := {  };
__n12["type"] := "UnaryExpression";
__n12["operator"] := "+";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 0.;
__n13["raw"] := "0";
__n12["argument"] := __n13;
__n12["prefix"] := true;
__n3["right"] := __n12;
__n2["test"] := __n3;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "$ERROR";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "+";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "#1.1: -Number.MIN_VALUE + Number.MIN_VALUE === 0. Actual: ";
__n21["raw"] := "'#1.1: -Number.MIN_VALUE + Number.MIN_VALUE === 0. Actual: '";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "+";
__n23 := {  };
__n23["type"] := "UnaryExpression";
__n23["operator"] := "-";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Number";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "MIN_VALUE";
__n26["raw"] := "\"MIN_VALUE\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["argument"] := __n24;
__n23["prefix"] := true;
__n22["left"] := __n23;
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Number";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "MIN_VALUE";
__n29["raw"] := "\"MIN_VALUE\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n22["right"] := __n27;
__n20["right"] := __n22;
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n16["expression"] := __n17;
__n15 := [ __n16 ];
__n14["body"] := __n15;
__n2["consequent"] := __n14;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "IfStatement";
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "!==";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "/";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 1.;
__n35["raw"] := "1";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "+";
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "-";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "Number";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "MIN_VALUE";
__n40["raw"] := "\"MIN_VALUE\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n36["left"] := __n37;
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Number";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "MIN_VALUE";
__n43["raw"] := "\"MIN_VALUE\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n36["right"] := __n41;
__n34["right"] := __n36;
__n33["left"] := __n34;
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Number";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "POSITIVE_INFINITY";
__n46["raw"] := "\"POSITIVE_INFINITY\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n33["right"] := __n44;
__n32["test"] := __n33;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#1.2: -Number.MIN_VALUE + Number.MIN_VALUE === + 0. Actual: -0";
__n53["raw"] := "'#1.2: -Number.MIN_VALUE + Number.MIN_VALUE === + 0. Actual: -0'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n32["consequent"] := __n47;
__n32["alternate"] := null;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n2["alternate"] := __n30;
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "+";
__n57 := {  };
__n57["type"] := "UnaryExpression";
__n57["operator"] := "-";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Number";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "MAX_VALUE";
__n60["raw"] := "\"MAX_VALUE\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["argument"] := __n58;
__n57["prefix"] := true;
__n56["left"] := __n57;
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "Number";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "MAX_VALUE";
__n63["raw"] := "\"MAX_VALUE\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n56["right"] := __n61;
__n55["left"] := __n56;
__n64 := {  };
__n64["type"] := "UnaryExpression";
__n64["operator"] := "+";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 0.;
__n65["raw"] := "0";
__n64["argument"] := __n65;
__n64["prefix"] := true;
__n55["right"] := __n64;
__n54["test"] := __n55;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "+";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#2.1: -Number.MAX_VALUE + Number.MAX_VALUE === 0. Actual: ";
__n73["raw"] := "'#2.1: -Number.MAX_VALUE + Number.MAX_VALUE === 0. Actual: '";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "+";
__n75 := {  };
__n75["type"] := "UnaryExpression";
__n75["operator"] := "-";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "Number";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "MAX_VALUE";
__n78["raw"] := "\"MAX_VALUE\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["argument"] := __n76;
__n75["prefix"] := true;
__n74["left"] := __n75;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "Number";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "MAX_VALUE";
__n81["raw"] := "\"MAX_VALUE\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n74["right"] := __n79;
__n72["right"] := __n74;
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n54["consequent"] := __n66;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "IfStatement";
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "!==";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "/";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 1.;
__n87["raw"] := "1";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "+";
__n89 := {  };
__n89["type"] := "UnaryExpression";
__n89["operator"] := "-";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "Number";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "MAX_VALUE";
__n92["raw"] := "\"MAX_VALUE\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n89["argument"] := __n90;
__n89["prefix"] := true;
__n88["left"] := __n89;
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "Number";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "MAX_VALUE";
__n95["raw"] := "\"MAX_VALUE\"";
__n93["property"] := __n95;
__n93["computed"] := true;
__n88["right"] := __n93;
__n86["right"] := __n88;
__n85["left"] := __n86;
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "Number";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "POSITIVE_INFINITY";
__n98["raw"] := "\"POSITIVE_INFINITY\"";
__n96["property"] := __n98;
__n96["computed"] := true;
__n85["right"] := __n96;
__n84["test"] := __n85;
__n99 := {  };
__n99["type"] := "BlockStatement";
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "$ERROR";
__n102["callee"] := __n103;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "#2.2: -Number.MAX_VALUE + Number.MAX_VALUE === + 0. Actual: -0";
__n105["raw"] := "'#2.2: -Number.MAX_VALUE + Number.MAX_VALUE === + 0. Actual: -0'";
__n104 := [ __n105 ];
__n102["arguments"] := __n104;
__n101["expression"] := __n102;
__n100 := [ __n101 ];
__n99["body"] := __n100;
__n84["consequent"] := __n99;
__n84["alternate"] := null;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n54["alternate"] := __n82;
__n106 := {  };
__n106["type"] := "IfStatement";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "!==";
__n108 := {  };
__n108["type"] := "BinaryExpression";
__n108["operator"] := "+";
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "/";
__n110 := {  };
__n110["type"] := "UnaryExpression";
__n110["operator"] := "-";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 1.;
__n111["raw"] := "1";
__n110["argument"] := __n111;
__n110["prefix"] := true;
__n109["left"] := __n110;
__n112 := {  };
__n112["type"] := "MemberExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "Number";
__n112["object"] := __n113;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "MAX_VALUE";
__n114["raw"] := "\"MAX_VALUE\"";
__n112["property"] := __n114;
__n112["computed"] := true;
__n109["right"] := __n112;
__n108["left"] := __n109;
__n115 := {  };
__n115["type"] := "BinaryExpression";
__n115["operator"] := "/";
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 1.;
__n116["raw"] := "1";
__n115["left"] := __n116;
__n117 := {  };
__n117["type"] := "MemberExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "Number";
__n117["object"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "MAX_VALUE";
__n119["raw"] := "\"MAX_VALUE\"";
__n117["property"] := __n119;
__n117["computed"] := true;
__n115["right"] := __n117;
__n108["right"] := __n115;
__n107["left"] := __n108;
__n120 := {  };
__n120["type"] := "UnaryExpression";
__n120["operator"] := "+";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := 0.;
__n121["raw"] := "0";
__n120["argument"] := __n121;
__n120["prefix"] := true;
__n107["right"] := __n120;
__n106["test"] := __n107;
__n122 := {  };
__n122["type"] := "BlockStatement";
__n124 := {  };
__n124["type"] := "ExpressionStatement";
__n125 := {  };
__n125["type"] := "CallExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "$ERROR";
__n125["callee"] := __n126;
__n128 := {  };
__n128["type"] := "BinaryExpression";
__n128["operator"] := "+";
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "#3.1: -1 / Number.MAX_VALUE + 1 / Number.MAX_VALUE === 0. Actual: ";
__n129["raw"] := "'#3.1: -1 / Number.MAX_VALUE + 1 / Number.MAX_VALUE === 0. Actual: '";
__n128["left"] := __n129;
__n130 := {  };
__n130["type"] := "BinaryExpression";
__n130["operator"] := "+";
__n131 := {  };
__n131["type"] := "BinaryExpression";
__n131["operator"] := "/";
__n132 := {  };
__n132["type"] := "UnaryExpression";
__n132["operator"] := "-";
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := 1.;
__n133["raw"] := "1";
__n132["argument"] := __n133;
__n132["prefix"] := true;
__n131["left"] := __n132;
__n134 := {  };
__n134["type"] := "MemberExpression";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "Number";
__n134["object"] := __n135;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "MAX_VALUE";
__n136["raw"] := "\"MAX_VALUE\"";
__n134["property"] := __n136;
__n134["computed"] := true;
__n131["right"] := __n134;
__n130["left"] := __n131;
__n137 := {  };
__n137["type"] := "BinaryExpression";
__n137["operator"] := "/";
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := 1.;
__n138["raw"] := "1";
__n137["left"] := __n138;
__n139 := {  };
__n139["type"] := "MemberExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "Number";
__n139["object"] := __n140;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "MAX_VALUE";
__n141["raw"] := "\"MAX_VALUE\"";
__n139["property"] := __n141;
__n139["computed"] := true;
__n137["right"] := __n139;
__n130["right"] := __n137;
__n128["right"] := __n130;
__n127 := [ __n128 ];
__n125["arguments"] := __n127;
__n124["expression"] := __n125;
__n123 := [ __n124 ];
__n122["body"] := __n123;
__n106["consequent"] := __n122;
__n142 := {  };
__n142["type"] := "BlockStatement";
__n144 := {  };
__n144["type"] := "IfStatement";
__n145 := {  };
__n145["type"] := "BinaryExpression";
__n145["operator"] := "!==";
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "/";
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := 1.;
__n147["raw"] := "1";
__n146["left"] := __n147;
__n148 := {  };
__n148["type"] := "BinaryExpression";
__n148["operator"] := "+";
__n149 := {  };
__n149["type"] := "BinaryExpression";
__n149["operator"] := "/";
__n150 := {  };
__n150["type"] := "UnaryExpression";
__n150["operator"] := "-";
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := 1.;
__n151["raw"] := "1";
__n150["argument"] := __n151;
__n150["prefix"] := true;
__n149["left"] := __n150;
__n152 := {  };
__n152["type"] := "MemberExpression";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "Number";
__n152["object"] := __n153;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "MAX_VALUE";
__n154["raw"] := "\"MAX_VALUE\"";
__n152["property"] := __n154;
__n152["computed"] := true;
__n149["right"] := __n152;
__n148["left"] := __n149;
__n155 := {  };
__n155["type"] := "BinaryExpression";
__n155["operator"] := "/";
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := 1.;
__n156["raw"] := "1";
__n155["left"] := __n156;
__n157 := {  };
__n157["type"] := "MemberExpression";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "Number";
__n157["object"] := __n158;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "MAX_VALUE";
__n159["raw"] := "\"MAX_VALUE\"";
__n157["property"] := __n159;
__n157["computed"] := true;
__n155["right"] := __n157;
__n148["right"] := __n155;
__n146["right"] := __n148;
__n145["left"] := __n146;
__n160 := {  };
__n160["type"] := "MemberExpression";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "Number";
__n160["object"] := __n161;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := "POSITIVE_INFINITY";
__n162["raw"] := "\"POSITIVE_INFINITY\"";
__n160["property"] := __n162;
__n160["computed"] := true;
__n145["right"] := __n160;
__n144["test"] := __n145;
__n163 := {  };
__n163["type"] := "BlockStatement";
__n165 := {  };
__n165["type"] := "ExpressionStatement";
__n166 := {  };
__n166["type"] := "CallExpression";
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "$ERROR";
__n166["callee"] := __n167;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := "#3.2: -1 / Number.MAX_VALUE + 1 / Number.MAX_VALUE === + 0. Actual: -0";
__n169["raw"] := "'#3.2: -1 / Number.MAX_VALUE + 1 / Number.MAX_VALUE === + 0. Actual: -0'";
__n168 := [ __n169 ];
__n166["arguments"] := __n168;
__n165["expression"] := __n166;
__n164 := [ __n165 ];
__n163["body"] := __n164;
__n144["consequent"] := __n163;
__n144["alternate"] := null;
__n143 := [ __n144 ];
__n142["body"] := __n143;
__n106["alternate"] := __n142;
__n1 := [ __n2, __n54, __n106 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n170 := [  ];
__n0["variableDeclarations"] := __n170;
__n171 := [  ];
__n0["functionDeclarations"] := __n171;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}