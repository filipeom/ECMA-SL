function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "+";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Number";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "MAX_VALUE";
__n7["raw"] := "\"MAX_VALUE\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["left"] := __n5;
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Number";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "MAX_VALUE";
__n10["raw"] := "\"MAX_VALUE\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n4["right"] := __n8;
__n3["left"] := __n4;
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Number";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "POSITIVE_INFINITY";
__n13["raw"] := "\"POSITIVE_INFINITY\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n3["right"] := __n11;
__n2["test"] := __n3;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "$ERROR";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "+";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "#1: Number.MAX_VALUE + Number.MAX_VALUE === Number.POSITIVE_INFINITY. Actual: ";
__n21["raw"] := "'#1: Number.MAX_VALUE + Number.MAX_VALUE === Number.POSITIVE_INFINITY. Actual: '";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "+";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Number";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "MAX_VALUE";
__n25["raw"] := "\"MAX_VALUE\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["left"] := __n23;
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Number";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "MAX_VALUE";
__n28["raw"] := "\"MAX_VALUE\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n22["right"] := __n26;
__n20["right"] := __n22;
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n16["expression"] := __n17;
__n15 := [ __n16 ];
__n14["body"] := __n15;
__n2["consequent"] := __n14;
__n2["alternate"] := null;
__n29 := {  };
__n29["type"] := "IfStatement";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "!==";
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "-";
__n32 := {  };
__n32["type"] := "UnaryExpression";
__n32["operator"] := "-";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Number";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "MAX_VALUE";
__n35["raw"] := "\"MAX_VALUE\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["argument"] := __n33;
__n32["prefix"] := true;
__n31["left"] := __n32;
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Number";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "MAX_VALUE";
__n38["raw"] := "\"MAX_VALUE\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n31["right"] := __n36;
__n30["left"] := __n31;
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Number";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "NEGATIVE_INFINITY";
__n41["raw"] := "\"NEGATIVE_INFINITY\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n30["right"] := __n39;
__n29["test"] := __n30;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$ERROR";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "+";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "#2: -Number.MAX_VALUE - Number.MAX_VALUE === Number.NEGATIVE_INFINITY. Actual: ";
__n49["raw"] := "'#2: -Number.MAX_VALUE - Number.MAX_VALUE === Number.NEGATIVE_INFINITY. Actual: '";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "-";
__n51 := {  };
__n51["type"] := "UnaryExpression";
__n51["operator"] := "-";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "Number";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "MAX_VALUE";
__n54["raw"] := "\"MAX_VALUE\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["argument"] := __n52;
__n51["prefix"] := true;
__n50["left"] := __n51;
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Number";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "MAX_VALUE";
__n57["raw"] := "\"MAX_VALUE\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n50["right"] := __n55;
__n48["right"] := __n50;
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n29["consequent"] := __n42;
__n29["alternate"] := null;
__n58 := {  };
__n58["type"] := "IfStatement";
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "!==";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "+";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 1e+308;
__n61["raw"] := "1e+308";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 1e+308;
__n62["raw"] := "1e+308";
__n60["right"] := __n62;
__n59["left"] := __n60;
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "Number";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "POSITIVE_INFINITY";
__n65["raw"] := "\"POSITIVE_INFINITY\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n59["right"] := __n63;
__n58["test"] := __n59;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "+";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#3: 1e+308 + 1e+308 === Number.POSITIVE_INFINITY. Actual: ";
__n73["raw"] := "'#3: 1e+308 + 1e+308 === Number.POSITIVE_INFINITY. Actual: '";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "+";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 1e+308;
__n75["raw"] := "1e+308";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 1e+308;
__n76["raw"] := "1e+308";
__n74["right"] := __n76;
__n72["right"] := __n74;
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n58["consequent"] := __n66;
__n58["alternate"] := null;
__n77 := {  };
__n77["type"] := "IfStatement";
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "!==";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "-";
__n80 := {  };
__n80["type"] := "UnaryExpression";
__n80["operator"] := "-";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 8.99e+307;
__n81["raw"] := "8.99e+307";
__n80["argument"] := __n81;
__n80["prefix"] := true;
__n79["left"] := __n80;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 8.99e+307;
__n82["raw"] := "8.99e+307";
__n79["right"] := __n82;
__n78["left"] := __n79;
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "Number";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "NEGATIVE_INFINITY";
__n85["raw"] := "\"NEGATIVE_INFINITY\"";
__n83["property"] := __n85;
__n83["computed"] := true;
__n78["right"] := __n83;
__n77["test"] := __n78;
__n86 := {  };
__n86["type"] := "BlockStatement";
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "$ERROR";
__n89["callee"] := __n90;
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "+";
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "#4: -8.99e+307 - 8.99e+307 === Number.NEGATIVE_INFINITY. Actual: ";
__n93["raw"] := "'#4: -8.99e+307 - 8.99e+307 === Number.NEGATIVE_INFINITY. Actual: '";
__n92["left"] := __n93;
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "-";
__n95 := {  };
__n95["type"] := "UnaryExpression";
__n95["operator"] := "-";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := 8.99e+307;
__n96["raw"] := "8.99e+307";
__n95["argument"] := __n96;
__n95["prefix"] := true;
__n94["left"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 8.99e+307;
__n97["raw"] := "8.99e+307";
__n94["right"] := __n97;
__n92["right"] := __n94;
__n91 := [ __n92 ];
__n89["arguments"] := __n91;
__n88["expression"] := __n89;
__n87 := [ __n88 ];
__n86["body"] := __n87;
__n77["consequent"] := __n86;
__n77["alternate"] := null;
__n1 := [ __n2, __n29, __n58, __n77 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n98 := [  ];
__n0["variableDeclarations"] := __n98;
__n99 := [  ];
__n0["functionDeclarations"] := __n99;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}