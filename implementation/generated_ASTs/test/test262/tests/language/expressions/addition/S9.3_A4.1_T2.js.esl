function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "UnaryExpression";
__n4["operator"] := "+";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := 13.;
__n5["raw"] := "13";
__n4["argument"] := __n5;
__n4["prefix"] := true;
__n3["left"] := __n4;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 13.;
__n6["raw"] := "13";
__n3["right"] := __n6;
__n2["test"] := __n3;
__n7 := {  };
__n7["type"] := "BlockStatement";
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "$ERROR";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "+";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "#1: +(13) === 13. Actual: ";
__n14["raw"] := "'#1: +(13) === 13. Actual: '";
__n13["left"] := __n14;
__n15 := {  };
__n15["type"] := "UnaryExpression";
__n15["operator"] := "+";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 13.;
__n16["raw"] := "13";
__n15["argument"] := __n16;
__n15["prefix"] := true;
__n13["right"] := __n15;
__n12 := [ __n13 ];
__n10["arguments"] := __n12;
__n9["expression"] := __n10;
__n8 := [ __n9 ];
__n7["body"] := __n8;
__n2["consequent"] := __n7;
__n2["alternate"] := null;
__n17 := {  };
__n17["type"] := "IfStatement";
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "!==";
__n19 := {  };
__n19["type"] := "UnaryExpression";
__n19["operator"] := "+";
__n20 := {  };
__n20["type"] := "UnaryExpression";
__n20["operator"] := "-";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 13.;
__n21["raw"] := "13";
__n20["argument"] := __n21;
__n20["prefix"] := true;
__n19["argument"] := __n20;
__n19["prefix"] := true;
__n18["left"] := __n19;
__n22 := {  };
__n22["type"] := "UnaryExpression";
__n22["operator"] := "-";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 13.;
__n23["raw"] := "13";
__n22["argument"] := __n23;
__n22["prefix"] := true;
__n18["right"] := __n22;
__n17["test"] := __n18;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "$ERROR";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "+";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "#2: +(-13) === -13. Actual: ";
__n31["raw"] := "'#2: +(-13) === -13. Actual: '";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "UnaryExpression";
__n32["operator"] := "+";
__n33 := {  };
__n33["type"] := "UnaryExpression";
__n33["operator"] := "-";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 13.;
__n34["raw"] := "13";
__n33["argument"] := __n34;
__n33["prefix"] := true;
__n32["argument"] := __n33;
__n32["prefix"] := true;
__n30["right"] := __n32;
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["expression"] := __n27;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n17["consequent"] := __n24;
__n17["alternate"] := null;
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "+";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 1.3;
__n38["raw"] := "1.3";
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n36["left"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 1.3;
__n39["raw"] := "1.3";
__n36["right"] := __n39;
__n35["test"] := __n36;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "+";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#3: +(1.3) === 1.3. Actual: ";
__n47["raw"] := "'#3: +(1.3) === 1.3. Actual: '";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "UnaryExpression";
__n48["operator"] := "+";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.3;
__n49["raw"] := "1.3";
__n48["argument"] := __n49;
__n48["prefix"] := true;
__n46["right"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n35["consequent"] := __n40;
__n35["alternate"] := null;
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "UnaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "UnaryExpression";
__n53["operator"] := "-";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 1.3;
__n54["raw"] := "1.3";
__n53["argument"] := __n54;
__n53["prefix"] := true;
__n52["argument"] := __n53;
__n52["prefix"] := true;
__n51["left"] := __n52;
__n55 := {  };
__n55["type"] := "UnaryExpression";
__n55["operator"] := "-";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 1.3;
__n56["raw"] := "1.3";
__n55["argument"] := __n56;
__n55["prefix"] := true;
__n51["right"] := __n55;
__n50["test"] := __n51;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "$ERROR";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "+";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#4: +(-1.3) === -1.3. Actual: ";
__n64["raw"] := "'#4: +(-1.3) === -1.3. Actual: '";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "UnaryExpression";
__n65["operator"] := "+";
__n66 := {  };
__n66["type"] := "UnaryExpression";
__n66["operator"] := "-";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 1.3;
__n67["raw"] := "1.3";
__n66["argument"] := __n67;
__n66["prefix"] := true;
__n65["argument"] := __n66;
__n65["prefix"] := true;
__n63["right"] := __n65;
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n50["consequent"] := __n57;
__n50["alternate"] := null;
__n1 := [ __n2, __n17, __n35, __n50 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n68 := [  ];
__n0["variableDeclarations"] := __n68;
__n69 := [  ];
__n0["functionDeclarations"] := __n69;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}