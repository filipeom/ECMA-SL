function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "UnaryExpression";
__n4["operator"] := "+";
__n5 := {  };
__n5["type"] := "NewExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Number";
__n5["callee"] := __n6;
__n7 := [  ];
__n5["arguments"] := __n7;
__n4["argument"] := __n5;
__n4["prefix"] := true;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 0.;
__n8["raw"] := "0";
__n3["right"] := __n8;
__n2["test"] := __n3;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "$ERROR";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "+";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "#1: +(new Number()) === 0. Actual: ";
__n16["raw"] := "'#1: +(new Number()) === 0. Actual: '";
__n15["left"] := __n16;
__n17 := {  };
__n17["type"] := "UnaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "NewExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Number";
__n18["callee"] := __n19;
__n20 := [  ];
__n18["arguments"] := __n20;
__n17["argument"] := __n18;
__n17["prefix"] := true;
__n15["right"] := __n17;
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n2["consequent"] := __n9;
__n2["alternate"] := null;
__n21 := {  };
__n21["type"] := "IfStatement";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "!==";
__n23 := {  };
__n23["type"] := "UnaryExpression";
__n23["operator"] := "+";
__n24 := {  };
__n24["type"] := "NewExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Number";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 0.;
__n27["raw"] := "0";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["argument"] := __n24;
__n23["prefix"] := true;
__n22["left"] := __n23;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 0.;
__n28["raw"] := "0";
__n22["right"] := __n28;
__n21["test"] := __n22;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "$ERROR";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "+";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "#2: +(new Number(0)) === 0. Actual: ";
__n36["raw"] := "'#2: +(new Number(0)) === 0. Actual: '";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "+";
__n38 := {  };
__n38["type"] := "NewExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "Number";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 0.;
__n41["raw"] := "0";
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n35["right"] := __n37;
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n21["consequent"] := __n29;
__n21["alternate"] := null;
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "isNaN";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "UnaryExpression";
__n47["operator"] := "+";
__n48 := {  };
__n48["type"] := "NewExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "Number";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Number";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "NaN";
__n53["raw"] := "\"NaN\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["argument"] := __n48;
__n47["prefix"] := true;
__n46["left"] := __n47;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := true;
__n54["raw"] := "true";
__n46["right"] := __n54;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["test"] := __n43;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "#3: +(new Number(Number.NaN)) === Not-a-Number. Actual: ";
__n62["raw"] := "'#3: +(new Number(Number.NaN)) === Not-a-Number. Actual: '";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "UnaryExpression";
__n63["operator"] := "+";
__n64 := {  };
__n64["type"] := "NewExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Number";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "Number";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "NaN";
__n69["raw"] := "\"NaN\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["argument"] := __n64;
__n63["prefix"] := true;
__n61["right"] := __n63;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n42["consequent"] := __n55;
__n42["alternate"] := null;
__n70 := {  };
__n70["type"] := "IfStatement";
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "!==";
__n72 := {  };
__n72["type"] := "UnaryExpression";
__n72["operator"] := "+";
__n73 := {  };
__n73["type"] := "NewExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "Number";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 'null;
__n76["raw"] := "\"'null\"";
__n75 := [ __n76 ];
__n73["arguments"] := __n75;
__n72["argument"] := __n73;
__n72["prefix"] := true;
__n71["left"] := __n72;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 0.;
__n77["raw"] := "0";
__n71["right"] := __n77;
__n70["test"] := __n71;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "$ERROR";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "+";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "#4.1: +(new Number(null)) === 0. Actual: ";
__n85["raw"] := "'#4.1: +(new Number(null)) === 0. Actual: '";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "UnaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "NewExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "Number";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 'null;
__n90["raw"] := "\"'null\"";
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86["argument"] := __n87;
__n86["prefix"] := true;
__n84["right"] := __n86;
__n83 := [ __n84 ];
__n81["arguments"] := __n83;
__n80["expression"] := __n81;
__n79 := [ __n80 ];
__n78["body"] := __n79;
__n70["consequent"] := __n78;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "IfStatement";
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "!==";
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "/";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := 1.;
__n96["raw"] := "1";
__n95["left"] := __n96;
__n97 := {  };
__n97["type"] := "UnaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "NewExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "Number";
__n98["callee"] := __n99;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 'null;
__n101["raw"] := "\"'null\"";
__n100 := [ __n101 ];
__n98["arguments"] := __n100;
__n97["argument"] := __n98;
__n97["prefix"] := true;
__n95["right"] := __n97;
__n94["left"] := __n95;
__n102 := {  };
__n102["type"] := "MemberExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "Number";
__n102["object"] := __n103;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "POSITIVE_INFINITY";
__n104["raw"] := "\"POSITIVE_INFINITY\"";
__n102["property"] := __n104;
__n102["computed"] := true;
__n94["right"] := __n102;
__n93["test"] := __n94;
__n105 := {  };
__n105["type"] := "BlockStatement";
__n107 := {  };
__n107["type"] := "ExpressionStatement";
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "$ERROR";
__n108["callee"] := __n109;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "#4.2: +(new Number(null)) === +0. Actual: -0";
__n111["raw"] := "'#4.2: +(new Number(null)) === +0. Actual: -0'";
__n110 := [ __n111 ];
__n108["arguments"] := __n110;
__n107["expression"] := __n108;
__n106 := [ __n107 ];
__n105["body"] := __n106;
__n93["consequent"] := __n105;
__n93["alternate"] := null;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n70["alternate"] := __n91;
__n112 := {  };
__n112["type"] := "IfStatement";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "isNaN";
__n113["callee"] := __n114;
__n116 := {  };
__n116["type"] := "BinaryExpression";
__n116["operator"] := "!==";
__n117 := {  };
__n117["type"] := "UnaryExpression";
__n117["operator"] := "+";
__n118 := {  };
__n118["type"] := "NewExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "Number";
__n118["callee"] := __n119;
__n121 := {  };
__n121["type"] := "UnaryExpression";
__n121["operator"] := "void";
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := 0.;
__n122["raw"] := "0";
__n121["argument"] := __n122;
__n121["prefix"] := true;
__n120 := [ __n121 ];
__n118["arguments"] := __n120;
__n117["argument"] := __n118;
__n117["prefix"] := true;
__n116["left"] := __n117;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := true;
__n123["raw"] := "true";
__n116["right"] := __n123;
__n115 := [ __n116 ];
__n113["arguments"] := __n115;
__n112["test"] := __n113;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "$ERROR";
__n127["callee"] := __n128;
__n130 := {  };
__n130["type"] := "BinaryExpression";
__n130["operator"] := "+";
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "#5: +(new Number(void 0)) === Not-a-Number. Actual: ";
__n131["raw"] := "'#5: +(new Number(void 0)) === Not-a-Number. Actual: '";
__n130["left"] := __n131;
__n132 := {  };
__n132["type"] := "UnaryExpression";
__n132["operator"] := "+";
__n133 := {  };
__n133["type"] := "NewExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "Number";
__n133["callee"] := __n134;
__n136 := {  };
__n136["type"] := "UnaryExpression";
__n136["operator"] := "void";
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := 0.;
__n137["raw"] := "0";
__n136["argument"] := __n137;
__n136["prefix"] := true;
__n135 := [ __n136 ];
__n133["arguments"] := __n135;
__n132["argument"] := __n133;
__n132["prefix"] := true;
__n130["right"] := __n132;
__n129 := [ __n130 ];
__n127["arguments"] := __n129;
__n126["expression"] := __n127;
__n125 := [ __n126 ];
__n124["body"] := __n125;
__n112["consequent"] := __n124;
__n112["alternate"] := null;
__n138 := {  };
__n138["type"] := "IfStatement";
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "!==";
__n140 := {  };
__n140["type"] := "UnaryExpression";
__n140["operator"] := "+";
__n141 := {  };
__n141["type"] := "NewExpression";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "Number";
__n141["callee"] := __n142;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := true;
__n144["raw"] := "true";
__n143 := [ __n144 ];
__n141["arguments"] := __n143;
__n140["argument"] := __n141;
__n140["prefix"] := true;
__n139["left"] := __n140;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := 1.;
__n145["raw"] := "1";
__n139["right"] := __n145;
__n138["test"] := __n139;
__n146 := {  };
__n146["type"] := "BlockStatement";
__n148 := {  };
__n148["type"] := "ExpressionStatement";
__n149 := {  };
__n149["type"] := "CallExpression";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "$ERROR";
__n149["callee"] := __n150;
__n152 := {  };
__n152["type"] := "BinaryExpression";
__n152["operator"] := "+";
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := "#6: +(new Number(true)) === 1. Actual: ";
__n153["raw"] := "'#6: +(new Number(true)) === 1. Actual: '";
__n152["left"] := __n153;
__n154 := {  };
__n154["type"] := "UnaryExpression";
__n154["operator"] := "+";
__n155 := {  };
__n155["type"] := "NewExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "Number";
__n155["callee"] := __n156;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := true;
__n158["raw"] := "true";
__n157 := [ __n158 ];
__n155["arguments"] := __n157;
__n154["argument"] := __n155;
__n154["prefix"] := true;
__n152["right"] := __n154;
__n151 := [ __n152 ];
__n149["arguments"] := __n151;
__n148["expression"] := __n149;
__n147 := [ __n148 ];
__n146["body"] := __n147;
__n138["consequent"] := __n146;
__n138["alternate"] := null;
__n159 := {  };
__n159["type"] := "IfStatement";
__n160 := {  };
__n160["type"] := "BinaryExpression";
__n160["operator"] := "!==";
__n161 := {  };
__n161["type"] := "UnaryExpression";
__n161["operator"] := "+";
__n162 := {  };
__n162["type"] := "NewExpression";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "Number";
__n162["callee"] := __n163;
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := false;
__n165["raw"] := "false";
__n164 := [ __n165 ];
__n162["arguments"] := __n164;
__n161["argument"] := __n162;
__n161["prefix"] := true;
__n160["left"] := __n161;
__n166 := {  };
__n166["type"] := "UnaryExpression";
__n166["operator"] := "+";
__n167 := {  };
__n167["type"] := "Literal";
__n167["value"] := 0.;
__n167["raw"] := "0";
__n166["argument"] := __n167;
__n166["prefix"] := true;
__n160["right"] := __n166;
__n159["test"] := __n160;
__n168 := {  };
__n168["type"] := "BlockStatement";
__n170 := {  };
__n170["type"] := "ExpressionStatement";
__n171 := {  };
__n171["type"] := "CallExpression";
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "$ERROR";
__n171["callee"] := __n172;
__n174 := {  };
__n174["type"] := "BinaryExpression";
__n174["operator"] := "+";
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := "#7.1: +(new Number(false)) === 0. Actual: ";
__n175["raw"] := "'#7.1: +(new Number(false)) === 0. Actual: '";
__n174["left"] := __n175;
__n176 := {  };
__n176["type"] := "UnaryExpression";
__n176["operator"] := "+";
__n177 := {  };
__n177["type"] := "NewExpression";
__n178 := {  };
__n178["type"] := "Identifier";
__n178["name"] := "Number";
__n177["callee"] := __n178;
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := false;
__n180["raw"] := "false";
__n179 := [ __n180 ];
__n177["arguments"] := __n179;
__n176["argument"] := __n177;
__n176["prefix"] := true;
__n174["right"] := __n176;
__n173 := [ __n174 ];
__n171["arguments"] := __n173;
__n170["expression"] := __n171;
__n169 := [ __n170 ];
__n168["body"] := __n169;
__n159["consequent"] := __n168;
__n181 := {  };
__n181["type"] := "BlockStatement";
__n183 := {  };
__n183["type"] := "IfStatement";
__n184 := {  };
__n184["type"] := "BinaryExpression";
__n184["operator"] := "!==";
__n185 := {  };
__n185["type"] := "BinaryExpression";
__n185["operator"] := "/";
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := 1.;
__n186["raw"] := "1";
__n185["left"] := __n186;
__n187 := {  };
__n187["type"] := "UnaryExpression";
__n187["operator"] := "+";
__n188 := {  };
__n188["type"] := "NewExpression";
__n189 := {  };
__n189["type"] := "Identifier";
__n189["name"] := "Number";
__n188["callee"] := __n189;
__n191 := {  };
__n191["type"] := "Literal";
__n191["value"] := false;
__n191["raw"] := "false";
__n190 := [ __n191 ];
__n188["arguments"] := __n190;
__n187["argument"] := __n188;
__n187["prefix"] := true;
__n185["right"] := __n187;
__n184["left"] := __n185;
__n192 := {  };
__n192["type"] := "MemberExpression";
__n193 := {  };
__n193["type"] := "Identifier";
__n193["name"] := "Number";
__n192["object"] := __n193;
__n194 := {  };
__n194["type"] := "Literal";
__n194["value"] := "POSITIVE_INFINITY";
__n194["raw"] := "\"POSITIVE_INFINITY\"";
__n192["property"] := __n194;
__n192["computed"] := true;
__n184["right"] := __n192;
__n183["test"] := __n184;
__n195 := {  };
__n195["type"] := "BlockStatement";
__n197 := {  };
__n197["type"] := "ExpressionStatement";
__n198 := {  };
__n198["type"] := "CallExpression";
__n199 := {  };
__n199["type"] := "Identifier";
__n199["name"] := "$ERROR";
__n198["callee"] := __n199;
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := "#7.2: +(new Number(false)) === +0. Actual: -0";
__n201["raw"] := "'#7.2: +(new Number(false)) === +0. Actual: -0'";
__n200 := [ __n201 ];
__n198["arguments"] := __n200;
__n197["expression"] := __n198;
__n196 := [ __n197 ];
__n195["body"] := __n196;
__n183["consequent"] := __n195;
__n183["alternate"] := null;
__n182 := [ __n183 ];
__n181["body"] := __n182;
__n159["alternate"] := __n181;
__n202 := {  };
__n202["type"] := "IfStatement";
__n203 := {  };
__n203["type"] := "BinaryExpression";
__n203["operator"] := "!==";
__n204 := {  };
__n204["type"] := "UnaryExpression";
__n204["operator"] := "+";
__n205 := {  };
__n205["type"] := "NewExpression";
__n206 := {  };
__n206["type"] := "Identifier";
__n206["name"] := "Boolean";
__n205["callee"] := __n206;
__n208 := {  };
__n208["type"] := "Literal";
__n208["value"] := true;
__n208["raw"] := "true";
__n207 := [ __n208 ];
__n205["arguments"] := __n207;
__n204["argument"] := __n205;
__n204["prefix"] := true;
__n203["left"] := __n204;
__n209 := {  };
__n209["type"] := "Literal";
__n209["value"] := 1.;
__n209["raw"] := "1";
__n203["right"] := __n209;
__n202["test"] := __n203;
__n210 := {  };
__n210["type"] := "BlockStatement";
__n212 := {  };
__n212["type"] := "ExpressionStatement";
__n213 := {  };
__n213["type"] := "CallExpression";
__n214 := {  };
__n214["type"] := "Identifier";
__n214["name"] := "$ERROR";
__n213["callee"] := __n214;
__n216 := {  };
__n216["type"] := "BinaryExpression";
__n216["operator"] := "+";
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := "#8: +(new Boolean(true)) === 1. Actual: ";
__n217["raw"] := "'#8: +(new Boolean(true)) === 1. Actual: '";
__n216["left"] := __n217;
__n218 := {  };
__n218["type"] := "UnaryExpression";
__n218["operator"] := "+";
__n219 := {  };
__n219["type"] := "NewExpression";
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "Boolean";
__n219["callee"] := __n220;
__n222 := {  };
__n222["type"] := "Literal";
__n222["value"] := true;
__n222["raw"] := "true";
__n221 := [ __n222 ];
__n219["arguments"] := __n221;
__n218["argument"] := __n219;
__n218["prefix"] := true;
__n216["right"] := __n218;
__n215 := [ __n216 ];
__n213["arguments"] := __n215;
__n212["expression"] := __n213;
__n211 := [ __n212 ];
__n210["body"] := __n211;
__n202["consequent"] := __n210;
__n202["alternate"] := null;
__n223 := {  };
__n223["type"] := "IfStatement";
__n224 := {  };
__n224["type"] := "BinaryExpression";
__n224["operator"] := "!==";
__n225 := {  };
__n225["type"] := "UnaryExpression";
__n225["operator"] := "+";
__n226 := {  };
__n226["type"] := "NewExpression";
__n227 := {  };
__n227["type"] := "Identifier";
__n227["name"] := "Boolean";
__n226["callee"] := __n227;
__n229 := {  };
__n229["type"] := "Literal";
__n229["value"] := false;
__n229["raw"] := "false";
__n228 := [ __n229 ];
__n226["arguments"] := __n228;
__n225["argument"] := __n226;
__n225["prefix"] := true;
__n224["left"] := __n225;
__n230 := {  };
__n230["type"] := "UnaryExpression";
__n230["operator"] := "+";
__n231 := {  };
__n231["type"] := "Literal";
__n231["value"] := 0.;
__n231["raw"] := "0";
__n230["argument"] := __n231;
__n230["prefix"] := true;
__n224["right"] := __n230;
__n223["test"] := __n224;
__n232 := {  };
__n232["type"] := "BlockStatement";
__n234 := {  };
__n234["type"] := "ExpressionStatement";
__n235 := {  };
__n235["type"] := "CallExpression";
__n236 := {  };
__n236["type"] := "Identifier";
__n236["name"] := "$ERROR";
__n235["callee"] := __n236;
__n238 := {  };
__n238["type"] := "BinaryExpression";
__n238["operator"] := "+";
__n239 := {  };
__n239["type"] := "Literal";
__n239["value"] := "#9.1: +(new Boolean(false)) === 0. Actual: ";
__n239["raw"] := "'#9.1: +(new Boolean(false)) === 0. Actual: '";
__n238["left"] := __n239;
__n240 := {  };
__n240["type"] := "UnaryExpression";
__n240["operator"] := "+";
__n241 := {  };
__n241["type"] := "NewExpression";
__n242 := {  };
__n242["type"] := "Identifier";
__n242["name"] := "Boolean";
__n241["callee"] := __n242;
__n244 := {  };
__n244["type"] := "Literal";
__n244["value"] := false;
__n244["raw"] := "false";
__n243 := [ __n244 ];
__n241["arguments"] := __n243;
__n240["argument"] := __n241;
__n240["prefix"] := true;
__n238["right"] := __n240;
__n237 := [ __n238 ];
__n235["arguments"] := __n237;
__n234["expression"] := __n235;
__n233 := [ __n234 ];
__n232["body"] := __n233;
__n223["consequent"] := __n232;
__n245 := {  };
__n245["type"] := "BlockStatement";
__n247 := {  };
__n247["type"] := "IfStatement";
__n248 := {  };
__n248["type"] := "BinaryExpression";
__n248["operator"] := "!==";
__n249 := {  };
__n249["type"] := "BinaryExpression";
__n249["operator"] := "/";
__n250 := {  };
__n250["type"] := "Literal";
__n250["value"] := 1.;
__n250["raw"] := "1";
__n249["left"] := __n250;
__n251 := {  };
__n251["type"] := "UnaryExpression";
__n251["operator"] := "+";
__n252 := {  };
__n252["type"] := "NewExpression";
__n253 := {  };
__n253["type"] := "Identifier";
__n253["name"] := "Boolean";
__n252["callee"] := __n253;
__n255 := {  };
__n255["type"] := "Literal";
__n255["value"] := false;
__n255["raw"] := "false";
__n254 := [ __n255 ];
__n252["arguments"] := __n254;
__n251["argument"] := __n252;
__n251["prefix"] := true;
__n249["right"] := __n251;
__n248["left"] := __n249;
__n256 := {  };
__n256["type"] := "MemberExpression";
__n257 := {  };
__n257["type"] := "Identifier";
__n257["name"] := "Number";
__n256["object"] := __n257;
__n258 := {  };
__n258["type"] := "Literal";
__n258["value"] := "POSITIVE_INFINITY";
__n258["raw"] := "\"POSITIVE_INFINITY\"";
__n256["property"] := __n258;
__n256["computed"] := true;
__n248["right"] := __n256;
__n247["test"] := __n248;
__n259 := {  };
__n259["type"] := "BlockStatement";
__n261 := {  };
__n261["type"] := "ExpressionStatement";
__n262 := {  };
__n262["type"] := "CallExpression";
__n263 := {  };
__n263["type"] := "Identifier";
__n263["name"] := "$ERROR";
__n262["callee"] := __n263;
__n265 := {  };
__n265["type"] := "Literal";
__n265["value"] := "#9.2: +(new Boolean(false)) === +0. Actual: -0";
__n265["raw"] := "'#9.2: +(new Boolean(false)) === +0. Actual: -0'";
__n264 := [ __n265 ];
__n262["arguments"] := __n264;
__n261["expression"] := __n262;
__n260 := [ __n261 ];
__n259["body"] := __n260;
__n247["consequent"] := __n259;
__n247["alternate"] := null;
__n246 := [ __n247 ];
__n245["body"] := __n246;
__n223["alternate"] := __n245;
__n266 := {  };
__n266["type"] := "IfStatement";
__n267 := {  };
__n267["type"] := "BinaryExpression";
__n267["operator"] := "!==";
__n268 := {  };
__n268["type"] := "CallExpression";
__n269 := {  };
__n269["type"] := "Identifier";
__n269["name"] := "isNaN";
__n268["callee"] := __n269;
__n271 := {  };
__n271["type"] := "UnaryExpression";
__n271["operator"] := "+";
__n272 := {  };
__n272["type"] := "NewExpression";
__n273 := {  };
__n273["type"] := "Identifier";
__n273["name"] := "Array";
__n272["callee"] := __n273;
__n275 := {  };
__n275["type"] := "Literal";
__n275["value"] := 2.;
__n275["raw"] := "2";
__n276 := {  };
__n276["type"] := "Literal";
__n276["value"] := 4.;
__n276["raw"] := "4";
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := 8.;
__n277["raw"] := "8";
__n278 := {  };
__n278["type"] := "Literal";
__n278["value"] := 16.;
__n278["raw"] := "16";
__n279 := {  };
__n279["type"] := "Literal";
__n279["value"] := 32.;
__n279["raw"] := "32";
__n274 := [ __n275, __n276, __n277, __n278, __n279 ];
__n272["arguments"] := __n274;
__n271["argument"] := __n272;
__n271["prefix"] := true;
__n270 := [ __n271 ];
__n268["arguments"] := __n270;
__n267["left"] := __n268;
__n280 := {  };
__n280["type"] := "Literal";
__n280["value"] := true;
__n280["raw"] := "true";
__n267["right"] := __n280;
__n266["test"] := __n267;
__n281 := {  };
__n281["type"] := "BlockStatement";
__n283 := {  };
__n283["type"] := "ExpressionStatement";
__n284 := {  };
__n284["type"] := "CallExpression";
__n285 := {  };
__n285["type"] := "Identifier";
__n285["name"] := "$ERROR";
__n284["callee"] := __n285;
__n287 := {  };
__n287["type"] := "BinaryExpression";
__n287["operator"] := "+";
__n288 := {  };
__n288["type"] := "Literal";
__n288["value"] := "#10: +(new Array(2,4,8,16,32)) === Not-a-Number. Actual: ";
__n288["raw"] := "'#10: +(new Array(2,4,8,16,32)) === Not-a-Number. Actual: '";
__n287["left"] := __n288;
__n289 := {  };
__n289["type"] := "UnaryExpression";
__n289["operator"] := "+";
__n290 := {  };
__n290["type"] := "NewExpression";
__n291 := {  };
__n291["type"] := "Identifier";
__n291["name"] := "Array";
__n290["callee"] := __n291;
__n293 := {  };
__n293["type"] := "Literal";
__n293["value"] := 2.;
__n293["raw"] := "2";
__n294 := {  };
__n294["type"] := "Literal";
__n294["value"] := 4.;
__n294["raw"] := "4";
__n295 := {  };
__n295["type"] := "Literal";
__n295["value"] := 8.;
__n295["raw"] := "8";
__n296 := {  };
__n296["type"] := "Literal";
__n296["value"] := 16.;
__n296["raw"] := "16";
__n297 := {  };
__n297["type"] := "Literal";
__n297["value"] := 32.;
__n297["raw"] := "32";
__n292 := [ __n293, __n294, __n295, __n296, __n297 ];
__n290["arguments"] := __n292;
__n289["argument"] := __n290;
__n289["prefix"] := true;
__n287["right"] := __n289;
__n286 := [ __n287 ];
__n284["arguments"] := __n286;
__n283["expression"] := __n284;
__n282 := [ __n283 ];
__n281["body"] := __n282;
__n266["consequent"] := __n281;
__n266["alternate"] := null;
__n298 := {  };
__n298["type"] := "VariableDeclaration";
__n300 := {  };
__n300["type"] := "VariableDeclarator";
__n301 := {  };
__n301["type"] := "Identifier";
__n301["name"] := "myobj1";
__n300["id"] := __n301;
__n302 := {  };
__n302["type"] := "ObjectExpression";
__n304 := {  };
__n304["type"] := "Property";
__n305 := {  };
__n305["type"] := "Identifier";
__n305["name"] := "ToNumber";
__n304["key"] := __n305;
__n306 := {  };
__n306["type"] := "FunctionExpression";
__n306["id"] := null;
__n307 := [  ];
__n306["params"] := __n307;
__n308 := {  };
__n308["type"] := "BlockStatement";
__n310 := {  };
__n310["type"] := "ReturnStatement";
__n311 := {  };
__n311["type"] := "Literal";
__n311["value"] := 12345.;
__n311["raw"] := "12345";
__n310["argument"] := __n311;
__n309 := [ __n310 ];
__n308["body"] := __n309;
__n312 := [  ];
__n308["variableDeclarations"] := __n312;
__n313 := [  ];
__n308["functionDeclarations"] := __n313;
__n308["codeType"] := "function";
__n308["strict"] := false;
__n306["body"] := __n308;
__n306["generator"] := false;
__n306["expression"] := false;
__n306["async"] := false;
__n304["value"] := __n306;
__n304["computed"] := false;
__n304["kind"] := "init";
__n304["shorthand"] := false;
__n314 := {  };
__n314["type"] := "Property";
__n315 := {  };
__n315["type"] := "Identifier";
__n315["name"] := "toString";
__n314["key"] := __n315;
__n316 := {  };
__n316["type"] := "FunctionExpression";
__n316["id"] := null;
__n317 := [  ];
__n316["params"] := __n317;
__n318 := {  };
__n318["type"] := "BlockStatement";
__n320 := {  };
__n320["type"] := "ReturnStatement";
__n321 := {  };
__n321["type"] := "Literal";
__n321["value"] := "67890";
__n321["raw"] := "\"67890\"";
__n320["argument"] := __n321;
__n319 := [ __n320 ];
__n318["body"] := __n319;
__n322 := [  ];
__n318["variableDeclarations"] := __n322;
__n323 := [  ];
__n318["functionDeclarations"] := __n323;
__n318["codeType"] := "function";
__n318["strict"] := false;
__n316["body"] := __n318;
__n316["generator"] := false;
__n316["expression"] := false;
__n316["async"] := false;
__n314["value"] := __n316;
__n314["computed"] := false;
__n314["kind"] := "init";
__n314["shorthand"] := false;
__n324 := {  };
__n324["type"] := "Property";
__n325 := {  };
__n325["type"] := "Identifier";
__n325["name"] := "valueOf";
__n324["key"] := __n325;
__n326 := {  };
__n326["type"] := "FunctionExpression";
__n326["id"] := null;
__n327 := [  ];
__n326["params"] := __n327;
__n328 := {  };
__n328["type"] := "BlockStatement";
__n330 := {  };
__n330["type"] := "ReturnStatement";
__n331 := {  };
__n331["type"] := "Literal";
__n331["value"] := "[object MyObj]";
__n331["raw"] := "\"[object MyObj]\"";
__n330["argument"] := __n331;
__n329 := [ __n330 ];
__n328["body"] := __n329;
__n332 := [  ];
__n328["variableDeclarations"] := __n332;
__n333 := [  ];
__n328["functionDeclarations"] := __n333;
__n328["codeType"] := "function";
__n328["strict"] := false;
__n326["body"] := __n328;
__n326["generator"] := false;
__n326["expression"] := false;
__n326["async"] := false;
__n324["value"] := __n326;
__n324["computed"] := false;
__n324["kind"] := "init";
__n324["shorthand"] := false;
__n303 := [ __n304, __n314, __n324 ];
__n302["properties"] := __n303;
__n300["init"] := __n302;
__n299 := [ __n300 ];
__n298["declarations"] := __n299;
__n298["kind"] := "var";
__n334 := {  };
__n334["type"] := "IfStatement";
__n335 := {  };
__n335["type"] := "BinaryExpression";
__n335["operator"] := "!==";
__n336 := {  };
__n336["type"] := "CallExpression";
__n337 := {  };
__n337["type"] := "Identifier";
__n337["name"] := "isNaN";
__n336["callee"] := __n337;
__n339 := {  };
__n339["type"] := "UnaryExpression";
__n339["operator"] := "+";
__n340 := {  };
__n340["type"] := "Identifier";
__n340["name"] := "myobj1";
__n339["argument"] := __n340;
__n339["prefix"] := true;
__n338 := [ __n339 ];
__n336["arguments"] := __n338;
__n335["left"] := __n336;
__n341 := {  };
__n341["type"] := "Literal";
__n341["value"] := true;
__n341["raw"] := "true";
__n335["right"] := __n341;
__n334["test"] := __n335;
__n342 := {  };
__n342["type"] := "BlockStatement";
__n344 := {  };
__n344["type"] := "ExpressionStatement";
__n345 := {  };
__n345["type"] := "CallExpression";
__n346 := {  };
__n346["type"] := "Identifier";
__n346["name"] := "$ERROR";
__n345["callee"] := __n346;
__n348 := {  };
__n348["type"] := "BinaryExpression";
__n348["operator"] := "+";
__n349 := {  };
__n349["type"] := "Literal";
__n349["value"] := "#11: +(myobj1) calls ToPrimitive with hint +. Exptected: Not-a-Number. Actual: ";
__n349["raw"] := "\"#11: +(myobj1) calls ToPrimitive with hint +. Exptected: Not-a-Number. Actual: \"";
__n348["left"] := __n349;
__n350 := {  };
__n350["type"] := "UnaryExpression";
__n350["operator"] := "+";
__n351 := {  };
__n351["type"] := "Identifier";
__n351["name"] := "myobj1";
__n350["argument"] := __n351;
__n350["prefix"] := true;
__n348["right"] := __n350;
__n347 := [ __n348 ];
__n345["arguments"] := __n347;
__n344["expression"] := __n345;
__n343 := [ __n344 ];
__n342["body"] := __n343;
__n334["consequent"] := __n342;
__n334["alternate"] := null;
__n352 := {  };
__n352["type"] := "VariableDeclaration";
__n354 := {  };
__n354["type"] := "VariableDeclarator";
__n355 := {  };
__n355["type"] := "Identifier";
__n355["name"] := "myobj2";
__n354["id"] := __n355;
__n356 := {  };
__n356["type"] := "ObjectExpression";
__n358 := {  };
__n358["type"] := "Property";
__n359 := {  };
__n359["type"] := "Identifier";
__n359["name"] := "ToNumber";
__n358["key"] := __n359;
__n360 := {  };
__n360["type"] := "FunctionExpression";
__n360["id"] := null;
__n361 := [  ];
__n360["params"] := __n361;
__n362 := {  };
__n362["type"] := "BlockStatement";
__n364 := {  };
__n364["type"] := "ReturnStatement";
__n365 := {  };
__n365["type"] := "Literal";
__n365["value"] := 12345.;
__n365["raw"] := "12345";
__n364["argument"] := __n365;
__n363 := [ __n364 ];
__n362["body"] := __n363;
__n366 := [  ];
__n362["variableDeclarations"] := __n366;
__n367 := [  ];
__n362["functionDeclarations"] := __n367;
__n362["codeType"] := "function";
__n362["strict"] := false;
__n360["body"] := __n362;
__n360["generator"] := false;
__n360["expression"] := false;
__n360["async"] := false;
__n358["value"] := __n360;
__n358["computed"] := false;
__n358["kind"] := "init";
__n358["shorthand"] := false;
__n368 := {  };
__n368["type"] := "Property";
__n369 := {  };
__n369["type"] := "Identifier";
__n369["name"] := "toString";
__n368["key"] := __n369;
__n370 := {  };
__n370["type"] := "FunctionExpression";
__n370["id"] := null;
__n371 := [  ];
__n370["params"] := __n371;
__n372 := {  };
__n372["type"] := "BlockStatement";
__n374 := {  };
__n374["type"] := "ReturnStatement";
__n375 := {  };
__n375["type"] := "Literal";
__n375["value"] := "67890";
__n375["raw"] := "\"67890\"";
__n374["argument"] := __n375;
__n373 := [ __n374 ];
__n372["body"] := __n373;
__n376 := [  ];
__n372["variableDeclarations"] := __n376;
__n377 := [  ];
__n372["functionDeclarations"] := __n377;
__n372["codeType"] := "function";
__n372["strict"] := false;
__n370["body"] := __n372;
__n370["generator"] := false;
__n370["expression"] := false;
__n370["async"] := false;
__n368["value"] := __n370;
__n368["computed"] := false;
__n368["kind"] := "init";
__n368["shorthand"] := false;
__n378 := {  };
__n378["type"] := "Property";
__n379 := {  };
__n379["type"] := "Identifier";
__n379["name"] := "valueOf";
__n378["key"] := __n379;
__n380 := {  };
__n380["type"] := "FunctionExpression";
__n380["id"] := null;
__n381 := [  ];
__n380["params"] := __n381;
__n382 := {  };
__n382["type"] := "BlockStatement";
__n384 := {  };
__n384["type"] := "ReturnStatement";
__n385 := {  };
__n385["type"] := "Literal";
__n385["value"] := "9876543210";
__n385["raw"] := "\"9876543210\"";
__n384["argument"] := __n385;
__n383 := [ __n384 ];
__n382["body"] := __n383;
__n386 := [  ];
__n382["variableDeclarations"] := __n386;
__n387 := [  ];
__n382["functionDeclarations"] := __n387;
__n382["codeType"] := "function";
__n382["strict"] := false;
__n380["body"] := __n382;
__n380["generator"] := false;
__n380["expression"] := false;
__n380["async"] := false;
__n378["value"] := __n380;
__n378["computed"] := false;
__n378["kind"] := "init";
__n378["shorthand"] := false;
__n357 := [ __n358, __n368, __n378 ];
__n356["properties"] := __n357;
__n354["init"] := __n356;
__n353 := [ __n354 ];
__n352["declarations"] := __n353;
__n352["kind"] := "var";
__n388 := {  };
__n388["type"] := "IfStatement";
__n389 := {  };
__n389["type"] := "BinaryExpression";
__n389["operator"] := "!==";
__n390 := {  };
__n390["type"] := "UnaryExpression";
__n390["operator"] := "+";
__n391 := {  };
__n391["type"] := "Identifier";
__n391["name"] := "myobj2";
__n390["argument"] := __n391;
__n390["prefix"] := true;
__n389["left"] := __n390;
__n392 := {  };
__n392["type"] := "Literal";
__n392["value"] := 9876543210.;
__n392["raw"] := "9876543210";
__n389["right"] := __n392;
__n388["test"] := __n389;
__n393 := {  };
__n393["type"] := "BlockStatement";
__n395 := {  };
__n395["type"] := "ExpressionStatement";
__n396 := {  };
__n396["type"] := "CallExpression";
__n397 := {  };
__n397["type"] := "Identifier";
__n397["name"] := "$ERROR";
__n396["callee"] := __n397;
__n399 := {  };
__n399["type"] := "BinaryExpression";
__n399["operator"] := "+";
__n400 := {  };
__n400["type"] := "Literal";
__n400["value"] := "#12: +(myobj2) calls ToPrimitive with hint +. Exptected: 9876543210. Actual: ";
__n400["raw"] := "\"#12: +(myobj2) calls ToPrimitive with hint +. Exptected: 9876543210. Actual: \"";
__n399["left"] := __n400;
__n401 := {  };
__n401["type"] := "UnaryExpression";
__n401["operator"] := "+";
__n402 := {  };
__n402["type"] := "Identifier";
__n402["name"] := "myobj2";
__n401["argument"] := __n402;
__n401["prefix"] := true;
__n399["right"] := __n401;
__n398 := [ __n399 ];
__n396["arguments"] := __n398;
__n395["expression"] := __n396;
__n394 := [ __n395 ];
__n393["body"] := __n394;
__n388["consequent"] := __n393;
__n388["alternate"] := null;
__n403 := {  };
__n403["type"] := "VariableDeclaration";
__n405 := {  };
__n405["type"] := "VariableDeclarator";
__n406 := {  };
__n406["type"] := "Identifier";
__n406["name"] := "myobj3";
__n405["id"] := __n406;
__n407 := {  };
__n407["type"] := "ObjectExpression";
__n409 := {  };
__n409["type"] := "Property";
__n410 := {  };
__n410["type"] := "Identifier";
__n410["name"] := "ToNumber";
__n409["key"] := __n410;
__n411 := {  };
__n411["type"] := "FunctionExpression";
__n411["id"] := null;
__n412 := [  ];
__n411["params"] := __n412;
__n413 := {  };
__n413["type"] := "BlockStatement";
__n415 := {  };
__n415["type"] := "ReturnStatement";
__n416 := {  };
__n416["type"] := "Literal";
__n416["value"] := 12345.;
__n416["raw"] := "12345";
__n415["argument"] := __n416;
__n414 := [ __n415 ];
__n413["body"] := __n414;
__n417 := [  ];
__n413["variableDeclarations"] := __n417;
__n418 := [  ];
__n413["functionDeclarations"] := __n418;
__n413["codeType"] := "function";
__n413["strict"] := false;
__n411["body"] := __n413;
__n411["generator"] := false;
__n411["expression"] := false;
__n411["async"] := false;
__n409["value"] := __n411;
__n409["computed"] := false;
__n409["kind"] := "init";
__n409["shorthand"] := false;
__n419 := {  };
__n419["type"] := "Property";
__n420 := {  };
__n420["type"] := "Identifier";
__n420["name"] := "toString";
__n419["key"] := __n420;
__n421 := {  };
__n421["type"] := "FunctionExpression";
__n421["id"] := null;
__n422 := [  ];
__n421["params"] := __n422;
__n423 := {  };
__n423["type"] := "BlockStatement";
__n425 := {  };
__n425["type"] := "ReturnStatement";
__n426 := {  };
__n426["type"] := "Literal";
__n426["value"] := "[object MyObj]";
__n426["raw"] := "\"[object MyObj]\"";
__n425["argument"] := __n426;
__n424 := [ __n425 ];
__n423["body"] := __n424;
__n427 := [  ];
__n423["variableDeclarations"] := __n427;
__n428 := [  ];
__n423["functionDeclarations"] := __n428;
__n423["codeType"] := "function";
__n423["strict"] := false;
__n421["body"] := __n423;
__n421["generator"] := false;
__n421["expression"] := false;
__n421["async"] := false;
__n419["value"] := __n421;
__n419["computed"] := false;
__n419["kind"] := "init";
__n419["shorthand"] := false;
__n408 := [ __n409, __n419 ];
__n407["properties"] := __n408;
__n405["init"] := __n407;
__n404 := [ __n405 ];
__n403["declarations"] := __n404;
__n403["kind"] := "var";
__n429 := {  };
__n429["type"] := "IfStatement";
__n430 := {  };
__n430["type"] := "BinaryExpression";
__n430["operator"] := "!==";
__n431 := {  };
__n431["type"] := "CallExpression";
__n432 := {  };
__n432["type"] := "Identifier";
__n432["name"] := "isNaN";
__n431["callee"] := __n432;
__n434 := {  };
__n434["type"] := "UnaryExpression";
__n434["operator"] := "+";
__n435 := {  };
__n435["type"] := "Identifier";
__n435["name"] := "myobj3";
__n434["argument"] := __n435;
__n434["prefix"] := true;
__n433 := [ __n434 ];
__n431["arguments"] := __n433;
__n430["left"] := __n431;
__n436 := {  };
__n436["type"] := "Literal";
__n436["value"] := true;
__n436["raw"] := "true";
__n430["right"] := __n436;
__n429["test"] := __n430;
__n437 := {  };
__n437["type"] := "BlockStatement";
__n439 := {  };
__n439["type"] := "ExpressionStatement";
__n440 := {  };
__n440["type"] := "CallExpression";
__n441 := {  };
__n441["type"] := "Identifier";
__n441["name"] := "$ERROR";
__n440["callee"] := __n441;
__n443 := {  };
__n443["type"] := "BinaryExpression";
__n443["operator"] := "+";
__n444 := {  };
__n444["type"] := "Literal";
__n444["value"] := "#13: +(myobj3) calls ToPrimitive with hint +. Exptected: Not-a-Number. Actual: ";
__n444["raw"] := "\"#13: +(myobj3) calls ToPrimitive with hint +. Exptected: Not-a-Number. Actual: \"";
__n443["left"] := __n444;
__n445 := {  };
__n445["type"] := "UnaryExpression";
__n445["operator"] := "+";
__n446 := {  };
__n446["type"] := "Identifier";
__n446["name"] := "myobj3";
__n445["argument"] := __n446;
__n445["prefix"] := true;
__n443["right"] := __n445;
__n442 := [ __n443 ];
__n440["arguments"] := __n442;
__n439["expression"] := __n440;
__n438 := [ __n439 ];
__n437["body"] := __n438;
__n429["consequent"] := __n437;
__n429["alternate"] := null;
__n447 := {  };
__n447["type"] := "VariableDeclaration";
__n449 := {  };
__n449["type"] := "VariableDeclarator";
__n450 := {  };
__n450["type"] := "Identifier";
__n450["name"] := "myobj4";
__n449["id"] := __n450;
__n451 := {  };
__n451["type"] := "ObjectExpression";
__n453 := {  };
__n453["type"] := "Property";
__n454 := {  };
__n454["type"] := "Identifier";
__n454["name"] := "ToNumber";
__n453["key"] := __n454;
__n455 := {  };
__n455["type"] := "FunctionExpression";
__n455["id"] := null;
__n456 := [  ];
__n455["params"] := __n456;
__n457 := {  };
__n457["type"] := "BlockStatement";
__n459 := {  };
__n459["type"] := "ReturnStatement";
__n460 := {  };
__n460["type"] := "Literal";
__n460["value"] := 12345.;
__n460["raw"] := "12345";
__n459["argument"] := __n460;
__n458 := [ __n459 ];
__n457["body"] := __n458;
__n461 := [  ];
__n457["variableDeclarations"] := __n461;
__n462 := [  ];
__n457["functionDeclarations"] := __n462;
__n457["codeType"] := "function";
__n457["strict"] := false;
__n455["body"] := __n457;
__n455["generator"] := false;
__n455["expression"] := false;
__n455["async"] := false;
__n453["value"] := __n455;
__n453["computed"] := false;
__n453["kind"] := "init";
__n453["shorthand"] := false;
__n463 := {  };
__n463["type"] := "Property";
__n464 := {  };
__n464["type"] := "Identifier";
__n464["name"] := "toString";
__n463["key"] := __n464;
__n465 := {  };
__n465["type"] := "FunctionExpression";
__n465["id"] := null;
__n466 := [  ];
__n465["params"] := __n466;
__n467 := {  };
__n467["type"] := "BlockStatement";
__n469 := {  };
__n469["type"] := "ReturnStatement";
__n470 := {  };
__n470["type"] := "Literal";
__n470["value"] := "67890";
__n470["raw"] := "\"67890\"";
__n469["argument"] := __n470;
__n468 := [ __n469 ];
__n467["body"] := __n468;
__n471 := [  ];
__n467["variableDeclarations"] := __n471;
__n472 := [  ];
__n467["functionDeclarations"] := __n472;
__n467["codeType"] := "function";
__n467["strict"] := false;
__n465["body"] := __n467;
__n465["generator"] := false;
__n465["expression"] := false;
__n465["async"] := false;
__n463["value"] := __n465;
__n463["computed"] := false;
__n463["kind"] := "init";
__n463["shorthand"] := false;
__n452 := [ __n453, __n463 ];
__n451["properties"] := __n452;
__n449["init"] := __n451;
__n448 := [ __n449 ];
__n447["declarations"] := __n448;
__n447["kind"] := "var";
__n473 := {  };
__n473["type"] := "IfStatement";
__n474 := {  };
__n474["type"] := "BinaryExpression";
__n474["operator"] := "!==";
__n475 := {  };
__n475["type"] := "UnaryExpression";
__n475["operator"] := "+";
__n476 := {  };
__n476["type"] := "Identifier";
__n476["name"] := "myobj4";
__n475["argument"] := __n476;
__n475["prefix"] := true;
__n474["left"] := __n475;
__n477 := {  };
__n477["type"] := "Literal";
__n477["value"] := 67890.;
__n477["raw"] := "67890";
__n474["right"] := __n477;
__n473["test"] := __n474;
__n478 := {  };
__n478["type"] := "BlockStatement";
__n480 := {  };
__n480["type"] := "ExpressionStatement";
__n481 := {  };
__n481["type"] := "CallExpression";
__n482 := {  };
__n482["type"] := "Identifier";
__n482["name"] := "$ERROR";
__n481["callee"] := __n482;
__n484 := {  };
__n484["type"] := "BinaryExpression";
__n484["operator"] := "+";
__n485 := {  };
__n485["type"] := "Literal";
__n485["value"] := "#14: +(myobj4) calls ToPrimitive with hint +. Exptected: 67890. Actual: ";
__n485["raw"] := "\"#14: +(myobj4) calls ToPrimitive with hint +. Exptected: 67890. Actual: \"";
__n484["left"] := __n485;
__n486 := {  };
__n486["type"] := "UnaryExpression";
__n486["operator"] := "+";
__n487 := {  };
__n487["type"] := "Identifier";
__n487["name"] := "myobj4";
__n486["argument"] := __n487;
__n486["prefix"] := true;
__n484["right"] := __n486;
__n483 := [ __n484 ];
__n481["arguments"] := __n483;
__n480["expression"] := __n481;
__n479 := [ __n480 ];
__n478["body"] := __n479;
__n473["consequent"] := __n478;
__n473["alternate"] := null;
__n488 := {  };
__n488["type"] := "VariableDeclaration";
__n490 := {  };
__n490["type"] := "VariableDeclarator";
__n491 := {  };
__n491["type"] := "Identifier";
__n491["name"] := "myobj5";
__n490["id"] := __n491;
__n492 := {  };
__n492["type"] := "ObjectExpression";
__n494 := {  };
__n494["type"] := "Property";
__n495 := {  };
__n495["type"] := "Identifier";
__n495["name"] := "ToNumber";
__n494["key"] := __n495;
__n496 := {  };
__n496["type"] := "FunctionExpression";
__n496["id"] := null;
__n497 := [  ];
__n496["params"] := __n497;
__n498 := {  };
__n498["type"] := "BlockStatement";
__n500 := {  };
__n500["type"] := "ReturnStatement";
__n501 := {  };
__n501["type"] := "Literal";
__n501["value"] := 12345.;
__n501["raw"] := "12345";
__n500["argument"] := __n501;
__n499 := [ __n500 ];
__n498["body"] := __n499;
__n502 := [  ];
__n498["variableDeclarations"] := __n502;
__n503 := [  ];
__n498["functionDeclarations"] := __n503;
__n498["codeType"] := "function";
__n498["strict"] := false;
__n496["body"] := __n498;
__n496["generator"] := false;
__n496["expression"] := false;
__n496["async"] := false;
__n494["value"] := __n496;
__n494["computed"] := false;
__n494["kind"] := "init";
__n494["shorthand"] := false;
__n493 := [ __n494 ];
__n492["properties"] := __n493;
__n490["init"] := __n492;
__n489 := [ __n490 ];
__n488["declarations"] := __n489;
__n488["kind"] := "var";
__n504 := {  };
__n504["type"] := "IfStatement";
__n505 := {  };
__n505["type"] := "BinaryExpression";
__n505["operator"] := "!==";
__n506 := {  };
__n506["type"] := "CallExpression";
__n507 := {  };
__n507["type"] := "Identifier";
__n507["name"] := "isNaN";
__n506["callee"] := __n507;
__n509 := {  };
__n509["type"] := "UnaryExpression";
__n509["operator"] := "+";
__n510 := {  };
__n510["type"] := "Identifier";
__n510["name"] := "myobj5";
__n509["argument"] := __n510;
__n509["prefix"] := true;
__n508 := [ __n509 ];
__n506["arguments"] := __n508;
__n505["left"] := __n506;
__n511 := {  };
__n511["type"] := "Literal";
__n511["value"] := true;
__n511["raw"] := "true";
__n505["right"] := __n511;
__n504["test"] := __n505;
__n512 := {  };
__n512["type"] := "BlockStatement";
__n514 := {  };
__n514["type"] := "ExpressionStatement";
__n515 := {  };
__n515["type"] := "CallExpression";
__n516 := {  };
__n516["type"] := "Identifier";
__n516["name"] := "$ERROR";
__n515["callee"] := __n516;
__n518 := {  };
__n518["type"] := "BinaryExpression";
__n518["operator"] := "+";
__n519 := {  };
__n519["type"] := "Literal";
__n519["value"] := "#15: +(myobj5) calls ToPrimitive with hint +. Exptected: 12345. Actual: ";
__n519["raw"] := "\"#15: +(myobj5) calls ToPrimitive with hint +. Exptected: 12345. Actual: \"";
__n518["left"] := __n519;
__n520 := {  };
__n520["type"] := "UnaryExpression";
__n520["operator"] := "+";
__n521 := {  };
__n521["type"] := "Identifier";
__n521["name"] := "myobj5";
__n520["argument"] := __n521;
__n520["prefix"] := true;
__n518["right"] := __n520;
__n517 := [ __n518 ];
__n515["arguments"] := __n517;
__n514["expression"] := __n515;
__n513 := [ __n514 ];
__n512["body"] := __n513;
__n504["consequent"] := __n512;
__n504["alternate"] := null;
__n1 := [ __n2, __n21, __n42, __n70, __n112, __n138, __n159, __n202, __n223, __n266, __n298, __n334, __n352, __n388, __n403, __n429, __n447, __n473, __n488, __n504 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n522 := [ "myobj1", "myobj2", "myobj3", "myobj4", "myobj5" ];
__n0["variableDeclarations"] := __n522;
__n523 := [  ];
__n0["functionDeclarations"] := __n523;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}