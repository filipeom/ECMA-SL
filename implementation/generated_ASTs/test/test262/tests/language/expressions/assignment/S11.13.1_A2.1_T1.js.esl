function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "Identifier";
__n4["name"] := "x";
__n3["left"] := __n4;
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := 1.;
__n5["raw"] := "1";
__n3["right"] := __n5;
__n2["expression"] := __n3;
__n6 := {  };
__n6["type"] := "IfStatement";
__n7 := {  };
__n7["type"] := "BinaryExpression";
__n7["operator"] := "!==";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "x";
__n7["left"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n7["right"] := __n9;
__n6["test"] := __n7;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "$ERROR";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "+";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "#1: x = 1; x === 1. Actual: ";
__n17["raw"] := "'#1: x = 1; x === 1. Actual: '";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "x";
__n16["right"] := __n18;
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["expression"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n6["consequent"] := __n10;
__n6["alternate"] := null;
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "x";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 1.;
__n23["raw"] := "1";
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n24 := {  };
__n24["type"] := "IfStatement";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "!==";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "x";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 1.;
__n27["raw"] := "1";
__n25["right"] := __n27;
__n24["test"] := __n25;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "$ERROR";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "+";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "#2: var x = 1; x === 1. Actual: ";
__n35["raw"] := "'#2: var x = 1; x === 1. Actual: '";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "x";
__n34["right"] := __n36;
__n33 := [ __n34 ];
__n31["arguments"] := __n33;
__n30["expression"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n24["consequent"] := __n28;
__n24["alternate"] := null;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "AssignmentExpression";
__n38["operator"] := "=";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "y";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 1.;
__n40["raw"] := "1";
__n38["right"] := __n40;
__n37["expression"] := __n38;
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "AssignmentExpression";
__n42["operator"] := "=";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "x";
__n42["left"] := __n43;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "y";
__n42["right"] := __n44;
__n41["expression"] := __n42;
__n45 := {  };
__n45["type"] := "IfStatement";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "x";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1.;
__n48["raw"] := "1";
__n46["right"] := __n48;
__n45["test"] := __n46;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "$ERROR";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "+";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "#3: y = 1; x = y; x === 1. Actual: ";
__n56["raw"] := "'#3: y = 1; x = y; x === 1. Actual: '";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "x";
__n55["right"] := __n57;
__n54 := [ __n55 ];
__n52["arguments"] := __n54;
__n51["expression"] := __n52;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n45["consequent"] := __n49;
__n45["alternate"] := null;
__n58 := {  };
__n58["type"] := "VariableDeclaration";
__n60 := {  };
__n60["type"] := "VariableDeclarator";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "y";
__n60["id"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 1.;
__n62["raw"] := "1";
__n60["init"] := __n62;
__n59 := [ __n60 ];
__n58["declarations"] := __n59;
__n58["kind"] := "var";
__n63 := {  };
__n63["type"] := "VariableDeclaration";
__n65 := {  };
__n65["type"] := "VariableDeclarator";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "x";
__n65["id"] := __n66;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "y";
__n65["init"] := __n67;
__n64 := [ __n65 ];
__n63["declarations"] := __n64;
__n63["kind"] := "var";
__n68 := {  };
__n68["type"] := "IfStatement";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "!==";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "x";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 1.;
__n71["raw"] := "1";
__n69["right"] := __n71;
__n68["test"] := __n69;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "$ERROR";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "+";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "#4: var y = 1; var x = y; x === 1. Actual: ";
__n79["raw"] := "'#4: var y = 1; var x = y; x === 1. Actual: '";
__n78["left"] := __n79;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "x";
__n78["right"] := __n80;
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n68["consequent"] := __n72;
__n68["alternate"] := null;
__n81 := {  };
__n81["type"] := "VariableDeclaration";
__n83 := {  };
__n83["type"] := "VariableDeclarator";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "objectx";
__n83["id"] := __n84;
__n85 := {  };
__n85["type"] := "NewExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "Object";
__n85["callee"] := __n86;
__n87 := [  ];
__n85["arguments"] := __n87;
__n83["init"] := __n85;
__n82 := [ __n83 ];
__n81["declarations"] := __n82;
__n81["kind"] := "var";
__n88 := {  };
__n88["type"] := "VariableDeclaration";
__n90 := {  };
__n90["type"] := "VariableDeclarator";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "objecty";
__n90["id"] := __n91;
__n92 := {  };
__n92["type"] := "NewExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "Object";
__n92["callee"] := __n93;
__n94 := [  ];
__n92["arguments"] := __n94;
__n90["init"] := __n92;
__n89 := [ __n90 ];
__n88["declarations"] := __n89;
__n88["kind"] := "var";
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "AssignmentExpression";
__n96["operator"] := "=";
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "objecty";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "prop";
__n99["raw"] := "\"prop\"";
__n97["property"] := __n99;
__n97["computed"] := true;
__n96["left"] := __n97;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := 1.1;
__n100["raw"] := "1.1";
__n96["right"] := __n100;
__n95["expression"] := __n96;
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "AssignmentExpression";
__n102["operator"] := "=";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "objectx";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "prop";
__n105["raw"] := "\"prop\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n102["left"] := __n103;
__n106 := {  };
__n106["type"] := "MemberExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "objecty";
__n106["object"] := __n107;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "prop";
__n108["raw"] := "\"prop\"";
__n106["property"] := __n108;
__n106["computed"] := true;
__n102["right"] := __n106;
__n101["expression"] := __n102;
__n109 := {  };
__n109["type"] := "IfStatement";
__n110 := {  };
__n110["type"] := "BinaryExpression";
__n110["operator"] := "!==";
__n111 := {  };
__n111["type"] := "MemberExpression";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "objectx";
__n111["object"] := __n112;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "prop";
__n113["raw"] := "\"prop\"";
__n111["property"] := __n113;
__n111["computed"] := true;
__n110["left"] := __n111;
__n114 := {  };
__n114["type"] := "MemberExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "objecty";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "prop";
__n116["raw"] := "\"prop\"";
__n114["property"] := __n116;
__n114["computed"] := true;
__n110["right"] := __n114;
__n109["test"] := __n110;
__n117 := {  };
__n117["type"] := "BlockStatement";
__n119 := {  };
__n119["type"] := "ExpressionStatement";
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "$ERROR";
__n120["callee"] := __n121;
__n123 := {  };
__n123["type"] := "BinaryExpression";
__n123["operator"] := "+";
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "#5: var objectx = new Object(); var objecty = new Object(); objecty.prop = 1; objectx.prop = objecty.prop; objectx.prop === objecty.prop. Actual: ";
__n124["raw"] := "'#5: var objectx = new Object(); var objecty = new Object(); objecty.prop = 1; objectx.prop = objecty.prop; objectx.prop === objecty.prop. Actual: '";
__n123["left"] := __n124;
__n125 := {  };
__n125["type"] := "MemberExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "objectx";
__n125["object"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "prop";
__n127["raw"] := "\"prop\"";
__n125["property"] := __n127;
__n125["computed"] := true;
__n123["right"] := __n125;
__n122 := [ __n123 ];
__n120["arguments"] := __n122;
__n119["expression"] := __n120;
__n118 := [ __n119 ];
__n117["body"] := __n118;
__n109["consequent"] := __n117;
__n128 := {  };
__n128["type"] := "BlockStatement";
__n130 := {  };
__n130["type"] := "IfStatement";
__n131 := {  };
__n131["type"] := "BinaryExpression";
__n131["operator"] := "===";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "objectx";
__n131["left"] := __n132;
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "objecty";
__n131["right"] := __n133;
__n130["test"] := __n131;
__n134 := {  };
__n134["type"] := "BlockStatement";
__n136 := {  };
__n136["type"] := "ExpressionStatement";
__n137 := {  };
__n137["type"] := "CallExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "$ERROR";
__n137["callee"] := __n138;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "#5: var objectx = new Object(); var objecty = new Object(); objecty.prop = 1; objectx.prop = objecty.prop; objectx !== objecty";
__n140["raw"] := "'#5: var objectx = new Object(); var objecty = new Object(); objecty.prop = 1; objectx.prop = objecty.prop; objectx !== objecty'";
__n139 := [ __n140 ];
__n137["arguments"] := __n139;
__n136["expression"] := __n137;
__n135 := [ __n136 ];
__n134["body"] := __n135;
__n130["consequent"] := __n134;
__n130["alternate"] := null;
__n129 := [ __n130 ];
__n128["body"] := __n129;
__n109["alternate"] := __n128;
__n1 := [ __n2, __n6, __n19, __n24, __n37, __n41, __n45, __n58, __n63, __n68, __n81, __n88, __n95, __n101, __n109 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n141 := [ "x", "y", "objectx", "objecty" ];
__n0["variableDeclarations"] := __n141;
__n142 := [  ];
__n0["functionDeclarations"] := __n142;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}