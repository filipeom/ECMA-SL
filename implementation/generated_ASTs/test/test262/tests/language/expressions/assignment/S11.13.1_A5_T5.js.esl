function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "global";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ThisExpression";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Object";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "defineProperty";
__n11["raw"] := "\"defineProperty\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n13 := {  };
__n13["type"] := "ThisExpression";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "x";
__n14["raw"] := "\"x\"";
__n15 := {  };
__n15["type"] := "ObjectExpression";
__n17 := {  };
__n17["type"] := "Property";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "configurable";
__n17["key"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := true;
__n19["raw"] := "true";
__n17["value"] := __n19;
__n17["computed"] := false;
__n17["kind"] := "init";
__n17["shorthand"] := false;
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "value";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 1.;
__n22["raw"] := "1";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n16 := [ __n17, __n20 ];
__n15["properties"] := __n16;
__n12 := [ __n13, __n14, __n15 ];
__n8["arguments"] := __n12;
__n7["expression"] := __n8;
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "FunctionExpression";
__n25["id"] := null;
__n26 := [  ];
__n25["params"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "use strict";
__n30["raw"] := "\"use strict\"";
__n29["expression"] := __n30;
__n29["directive"] := "use strict";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "x";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "SequenceExpression";
__n36 := {  };
__n36["type"] := "UnaryExpression";
__n36["operator"] := "delete";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "global";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "x";
__n39["raw"] := "\"x\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["argument"] := __n37;
__n36["prefix"] := true;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 2.;
__n40["raw"] := "2";
__n35 := [ __n36, __n40 ];
__n34["expressions"] := __n35;
__n32["right"] := __n34;
__n31["expression"] := __n32;
__n28 := [ __n29, __n31 ];
__n27["body"] := __n28;
__n41 := [  ];
__n27["variableDeclarations"] := __n41;
__n42 := [  ];
__n27["functionDeclarations"] := __n42;
__n27["codeType"] := "function";
__n27["strict"] := true;
__n25["body"] := __n27;
__n25["generator"] := false;
__n25["expression"] := false;
__n25["async"] := false;
__n24["callee"] := __n25;
__n43 := [  ];
__n24["arguments"] := __n43;
__n23["expression"] := __n24;
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "ThisExpression";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "x";
__n48["raw"] := "\"x\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["left"] := __n46;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 2.;
__n49["raw"] := "2";
__n45["right"] := __n49;
__n44["test"] := __n45;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "$ERROR";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "+";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "#1: this.x === 2. Actual: ";
__n57["raw"] := "'#1: this.x === 2. Actual: '";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "ThisExpression";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "x";
__n60["raw"] := "\"x\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n56["right"] := __n58;
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n44["consequent"] := __n50;
__n44["alternate"] := null;
__n1 := [ __n2, __n7, __n23, __n44 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n61 := [ "global" ];
__n0["variableDeclarations"] := __n61;
__n62 := [  ];
__n0["functionDeclarations"] := __n62;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}