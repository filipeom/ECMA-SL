function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "_map";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "one";
__n10["raw"] := "\"one\"";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n11 := {  };
__n11["type"] := "Property";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "two";
__n11["key"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 2.;
__n13["raw"] := "2";
__n11["value"] := __n13;
__n11["computed"] := false;
__n11["kind"] := "init";
__n11["shorthand"] := false;
__n7 := [ __n8, __n11 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "AssignmentExpression";
__n15["operator"] := "=";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n16["computed"] := true;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "_map";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.;
__n18["raw"] := "1";
__n16["property"] := __n18;
__n15["left"] := __n16;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "uno";
__n19["raw"] := "\"uno\"";
__n15["right"] := __n19;
__n14["expression"] := __n15;
__n20 := {  };
__n20["type"] := "IfStatement";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "!==";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n22["computed"] := true;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "_map";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 1.;
__n24["raw"] := "1";
__n22["property"] := __n24;
__n21["left"] := __n22;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "uno";
__n25["raw"] := "\"uno\"";
__n21["right"] := __n25;
__n20["test"] := __n21;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "$ERROR";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "+";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "#1: var _map={1:\"one\",two:2}; _map[1]=\"uno\"; _map[1] === \"uno\". Actual: ";
__n33["raw"] := "'#1: var _map={1:\"one\",two:2}; _map[1]=\"uno\"; _map[1] === \"uno\". Actual: '";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "MemberExpression";
__n34["computed"] := true;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "_map";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 1.;
__n36["raw"] := "1";
__n34["property"] := __n36;
__n32["right"] := __n34;
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n20["consequent"] := __n26;
__n20["alternate"] := null;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "AssignmentExpression";
__n38["operator"] := "=";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n39["computed"] := true;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "_map";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "1";
__n41["raw"] := "\"1\"";
__n39["property"] := __n41;
__n38["left"] := __n39;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 1.;
__n42["raw"] := "1";
__n38["right"] := __n42;
__n37["expression"] := __n38;
__n43 := {  };
__n43["type"] := "IfStatement";
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "!==";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n45["computed"] := true;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "_map";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 1.;
__n47["raw"] := "1";
__n45["property"] := __n47;
__n44["left"] := __n45;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1.;
__n48["raw"] := "1";
__n44["right"] := __n48;
__n43["test"] := __n44;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "$ERROR";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "+";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "#2: var _map={1:\"one\",two:2}; _map[1]=\"uno\"; _map[\"1\"]=1; _map[1] === 1. Actual: ";
__n56["raw"] := "'#2: var _map={1:\"one\",two:2}; _map[1]=\"uno\"; _map[\"1\"]=1; _map[1] === 1. Actual: '";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "MemberExpression";
__n57["computed"] := true;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "_map";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 1.;
__n59["raw"] := "1";
__n57["property"] := __n59;
__n55["right"] := __n57;
__n54 := [ __n55 ];
__n52["arguments"] := __n54;
__n51["expression"] := __n52;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n43["consequent"] := __n49;
__n43["alternate"] := null;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "AssignmentExpression";
__n61["operator"] := "=";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n62["computed"] := true;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "_map";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "two";
__n64["raw"] := "\"two\"";
__n62["property"] := __n64;
__n61["left"] := __n62;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "two";
__n65["raw"] := "\"two\"";
__n61["right"] := __n65;
__n60["expression"] := __n61;
__n66 := {  };
__n66["type"] := "IfStatement";
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "!==";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n68["computed"] := true;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "_map";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "two";
__n70["raw"] := "\"two\"";
__n68["property"] := __n70;
__n67["left"] := __n68;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "two";
__n71["raw"] := "\"two\"";
__n67["right"] := __n71;
__n66["test"] := __n67;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "$ERROR";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "+";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "#3: var _map={1:\"one\",two:2}; _map[1]=\"uno\"; _map[\"1\"]=1; _map[\"two\"]=\"two\"; _map[\"two\"] === \"two\". Actual: ";
__n79["raw"] := "'#3: var _map={1:\"one\",two:2}; _map[1]=\"uno\"; _map[\"1\"]=1; _map[\"two\"]=\"two\"; _map[\"two\"] === \"two\". Actual: '";
__n78["left"] := __n79;
__n80 := {  };
__n80["type"] := "MemberExpression";
__n80["computed"] := true;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "_map";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "two";
__n82["raw"] := "\"two\"";
__n80["property"] := __n82;
__n78["right"] := __n80;
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n66["consequent"] := __n72;
__n66["alternate"] := null;
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "AssignmentExpression";
__n84["operator"] := "=";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "_map";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "two";
__n87["raw"] := "\"two\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n84["left"] := __n85;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "duo";
__n88["raw"] := "\"duo\"";
__n84["right"] := __n88;
__n83["expression"] := __n84;
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "!==";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "_map";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "two";
__n93["raw"] := "\"two\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n90["left"] := __n91;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "duo";
__n94["raw"] := "\"duo\"";
__n90["right"] := __n94;
__n89["test"] := __n90;
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "CallExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "$ERROR";
__n98["callee"] := __n99;
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "+";
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "#4: var _map={1:\"one\",two:2}; _map[1]=\"uno\"; _map[\"1\"]=1; _map[\"two\"]=\"two\"; _map.two=\"duo\"; _map.two === \"duo\". Actual: ";
__n102["raw"] := "'#4: var _map={1:\"one\",two:2}; _map[1]=\"uno\"; _map[\"1\"]=1; _map[\"two\"]=\"two\"; _map.two=\"duo\"; _map.two === \"duo\". Actual: '";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "_map";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "two";
__n105["raw"] := "\"two\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n101["right"] := __n103;
__n100 := [ __n101 ];
__n98["arguments"] := __n100;
__n97["expression"] := __n98;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n89["consequent"] := __n95;
__n89["alternate"] := null;
__n1 := [ __n2, __n14, __n20, __n37, __n43, __n60, __n66, __n83, __n89 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n106 := [ "_map" ];
__n0["variableDeclarations"] := __n106;
__n107 := [  ];
__n0["functionDeclarations"] := __n107;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}