function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "UnaryExpression";
__n4["operator"] := "~";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := "1";
__n5["raw"] := "\"1\"";
__n4["argument"] := __n5;
__n4["prefix"] := true;
__n3["left"] := __n4;
__n6 := {  };
__n6["type"] := "UnaryExpression";
__n6["operator"] := "-";
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 2.;
__n7["raw"] := "2";
__n6["argument"] := __n7;
__n6["prefix"] := true;
__n3["right"] := __n6;
__n2["test"] := __n3;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "$ERROR";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "+";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "#1: ~\"1\" === -2. Actual: ";
__n15["raw"] := "'#1: ~\"1\" === -2. Actual: '";
__n14["left"] := __n15;
__n16 := {  };
__n16["type"] := "UnaryExpression";
__n16["operator"] := "~";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "1";
__n17["raw"] := "\"1\"";
__n16["argument"] := __n17;
__n16["prefix"] := true;
__n14["right"] := __n16;
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["expression"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n2["consequent"] := __n8;
__n2["alternate"] := null;
__n18 := {  };
__n18["type"] := "IfStatement";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "!==";
__n20 := {  };
__n20["type"] := "UnaryExpression";
__n20["operator"] := "~";
__n21 := {  };
__n21["type"] := "NewExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "String";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "0";
__n24["raw"] := "\"0\"";
__n23 := [ __n24 ];
__n21["arguments"] := __n23;
__n20["argument"] := __n21;
__n20["prefix"] := true;
__n19["left"] := __n20;
__n25 := {  };
__n25["type"] := "UnaryExpression";
__n25["operator"] := "-";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 1.;
__n26["raw"] := "1";
__n25["argument"] := __n26;
__n25["prefix"] := true;
__n19["right"] := __n25;
__n18["test"] := __n19;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "$ERROR";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "+";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "#2: ~new String(\"0\") === -1. Actual: ";
__n34["raw"] := "'#2: ~new String(\"0\") === -1. Actual: '";
__n33["left"] := __n34;
__n35 := {  };
__n35["type"] := "UnaryExpression";
__n35["operator"] := "~";
__n36 := {  };
__n36["type"] := "NewExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "String";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "0";
__n39["raw"] := "\"0\"";
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["argument"] := __n36;
__n35["prefix"] := true;
__n33["right"] := __n35;
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n29["expression"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n18["consequent"] := __n27;
__n18["alternate"] := null;
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "!==";
__n42 := {  };
__n42["type"] := "UnaryExpression";
__n42["operator"] := "~";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "x";
__n43["raw"] := "\"x\"";
__n42["argument"] := __n43;
__n42["prefix"] := true;
__n41["left"] := __n42;
__n44 := {  };
__n44["type"] := "UnaryExpression";
__n44["operator"] := "-";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 1.;
__n45["raw"] := "1";
__n44["argument"] := __n45;
__n44["prefix"] := true;
__n41["right"] := __n44;
__n40["test"] := __n41;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "$ERROR";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#3: ~\"x\" === -1. Actual: ";
__n53["raw"] := "'#3: ~\"x\" === -1. Actual: '";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "UnaryExpression";
__n54["operator"] := "~";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "x";
__n55["raw"] := "\"x\"";
__n54["argument"] := __n55;
__n54["prefix"] := true;
__n52["right"] := __n54;
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["expression"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n40["consequent"] := __n46;
__n40["alternate"] := null;
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "!==";
__n58 := {  };
__n58["type"] := "UnaryExpression";
__n58["operator"] := "~";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "";
__n59["raw"] := "\"\"";
__n58["argument"] := __n59;
__n58["prefix"] := true;
__n57["left"] := __n58;
__n60 := {  };
__n60["type"] := "UnaryExpression";
__n60["operator"] := "-";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 1.;
__n61["raw"] := "1";
__n60["argument"] := __n61;
__n60["prefix"] := true;
__n57["right"] := __n60;
__n56["test"] := __n57;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "$ERROR";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "+";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "#4: ~\"\" === -1. Actual: ";
__n69["raw"] := "'#4: ~\"\" === -1. Actual: '";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "UnaryExpression";
__n70["operator"] := "~";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "";
__n71["raw"] := "\"\"";
__n70["argument"] := __n71;
__n70["prefix"] := true;
__n68["right"] := __n70;
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n56["consequent"] := __n62;
__n56["alternate"] := null;
__n72 := {  };
__n72["type"] := "IfStatement";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "!==";
__n74 := {  };
__n74["type"] := "UnaryExpression";
__n74["operator"] := "~";
__n75 := {  };
__n75["type"] := "NewExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "String";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "-2";
__n78["raw"] := "\"-2\"";
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["argument"] := __n75;
__n74["prefix"] := true;
__n73["left"] := __n74;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 1.;
__n79["raw"] := "1";
__n73["right"] := __n79;
__n72["test"] := __n73;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#5: ~new String(\"-2\") === 1. Actual: ";
__n87["raw"] := "'#5: ~new String(\"-2\") === 1. Actual: '";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "UnaryExpression";
__n88["operator"] := "~";
__n89 := {  };
__n89["type"] := "NewExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "String";
__n89["callee"] := __n90;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "-2";
__n92["raw"] := "\"-2\"";
__n91 := [ __n92 ];
__n89["arguments"] := __n91;
__n88["argument"] := __n89;
__n88["prefix"] := true;
__n86["right"] := __n88;
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n72["consequent"] := __n80;
__n72["alternate"] := null;
__n1 := [ __n2, __n18, __n40, __n56, __n72 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n93 := [  ];
__n0["variableDeclarations"] := __n93;
__n94 := [  ];
__n0["functionDeclarations"] := __n94;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}