function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "UnaryExpression";
__n4["operator"] := "~";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := 2147483647.;
__n5["raw"] := "2147483647";
__n4["argument"] := __n5;
__n4["prefix"] := true;
__n3["left"] := __n4;
__n6 := {  };
__n6["type"] := "UnaryExpression";
__n6["operator"] := "-";
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 2147483648.;
__n7["raw"] := "2147483648";
__n6["argument"] := __n7;
__n6["prefix"] := true;
__n3["right"] := __n6;
__n2["test"] := __n3;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "$ERROR";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "#1: ~2147483647 ==== -2147483648)";
__n14["raw"] := "'#1: ~2147483647 ==== -2147483648)'";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["expression"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n2["consequent"] := __n8;
__n2["alternate"] := null;
__n15 := {  };
__n15["type"] := "IfStatement";
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "!==";
__n17 := {  };
__n17["type"] := "UnaryExpression";
__n17["operator"] := "~";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 2147483648.;
__n18["raw"] := "2147483648";
__n17["argument"] := __n18;
__n17["prefix"] := true;
__n16["left"] := __n17;
__n19 := {  };
__n19["type"] := "UnaryExpression";
__n19["operator"] := "~";
__n20 := {  };
__n20["type"] := "UnaryExpression";
__n20["operator"] := "-";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 2147483648.;
__n21["raw"] := "2147483648";
__n20["argument"] := __n21;
__n20["prefix"] := true;
__n19["argument"] := __n20;
__n19["prefix"] := true;
__n16["right"] := __n19;
__n15["test"] := __n16;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "$ERROR";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "#2: ~2147483648 ==== ~-2147483648)";
__n28["raw"] := "'#2: ~2147483648 ==== ~-2147483648)'";
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n24["expression"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n15["consequent"] := __n22;
__n15["alternate"] := null;
__n29 := {  };
__n29["type"] := "IfStatement";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "!==";
__n31 := {  };
__n31["type"] := "UnaryExpression";
__n31["operator"] := "~";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 2147483649.;
__n32["raw"] := "2147483649";
__n31["argument"] := __n32;
__n31["prefix"] := true;
__n30["left"] := __n31;
__n33 := {  };
__n33["type"] := "UnaryExpression";
__n33["operator"] := "~";
__n34 := {  };
__n34["type"] := "UnaryExpression";
__n34["operator"] := "-";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 2147483647.;
__n35["raw"] := "2147483647";
__n34["argument"] := __n35;
__n34["prefix"] := true;
__n33["argument"] := __n34;
__n33["prefix"] := true;
__n30["right"] := __n33;
__n29["test"] := __n30;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "$ERROR";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#3: ~2147483649 ==== ~-2147483647)";
__n42["raw"] := "'#3: ~2147483649 ==== ~-2147483647)'";
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n29["consequent"] := __n36;
__n29["alternate"] := null;
__n43 := {  };
__n43["type"] := "IfStatement";
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "!==";
__n45 := {  };
__n45["type"] := "UnaryExpression";
__n45["operator"] := "~";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 4294967295.;
__n46["raw"] := "4294967295";
__n45["argument"] := __n46;
__n45["prefix"] := true;
__n44["left"] := __n45;
__n47 := {  };
__n47["type"] := "UnaryExpression";
__n47["operator"] := "~";
__n48 := {  };
__n48["type"] := "UnaryExpression";
__n48["operator"] := "-";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.;
__n49["raw"] := "1";
__n48["argument"] := __n49;
__n48["prefix"] := true;
__n47["argument"] := __n48;
__n47["prefix"] := true;
__n44["right"] := __n47;
__n43["test"] := __n44;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "$ERROR";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "#4: ~4294967295 ==== ~-1)";
__n56["raw"] := "'#4: ~4294967295 ==== ~-1)'";
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n43["consequent"] := __n50;
__n43["alternate"] := null;
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "UnaryExpression";
__n59["operator"] := "~";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 4294967296.;
__n60["raw"] := "4294967296";
__n59["argument"] := __n60;
__n59["prefix"] := true;
__n58["left"] := __n59;
__n61 := {  };
__n61["type"] := "UnaryExpression";
__n61["operator"] := "~";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 0.;
__n62["raw"] := "0";
__n61["argument"] := __n62;
__n61["prefix"] := true;
__n58["right"] := __n61;
__n57["test"] := __n58;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$ERROR";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "#5: ~4294967296 ==== ~0)";
__n69["raw"] := "'#5: ~4294967296 ==== ~0)'";
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n57["consequent"] := __n63;
__n57["alternate"] := null;
__n70 := {  };
__n70["type"] := "IfStatement";
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "!==";
__n72 := {  };
__n72["type"] := "UnaryExpression";
__n72["operator"] := "~";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 4294967297.;
__n73["raw"] := "4294967297";
__n72["argument"] := __n73;
__n72["prefix"] := true;
__n71["left"] := __n72;
__n74 := {  };
__n74["type"] := "UnaryExpression";
__n74["operator"] := "~";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 1.;
__n75["raw"] := "1";
__n74["argument"] := __n75;
__n74["prefix"] := true;
__n71["right"] := __n74;
__n70["test"] := __n71;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "$ERROR";
__n79["callee"] := __n80;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "#6: ~4294967297 ==== ~1)";
__n82["raw"] := "'#6: ~4294967297 ==== ~1)'";
__n81 := [ __n82 ];
__n79["arguments"] := __n81;
__n78["expression"] := __n79;
__n77 := [ __n78 ];
__n76["body"] := __n77;
__n70["consequent"] := __n76;
__n70["alternate"] := null;
__n1 := [ __n2, __n15, __n29, __n43, __n57, __n70 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n83 := [  ];
__n0["variableDeclarations"] := __n83;
__n84 := [  ];
__n0["functionDeclarations"] := __n84;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}