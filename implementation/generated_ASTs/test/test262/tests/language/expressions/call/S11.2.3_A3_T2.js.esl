function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "ExpressionStatement";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 1.;
__n7["raw"] := "1";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n5["expression"] := __n6;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "$ERROR";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "+";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "#1.1: 1() throw TypeError. Actual: ";
__n14["raw"] := "'#1.1: 1() throw TypeError. Actual: '";
__n13["left"] := __n14;
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n15["callee"] := __n16;
__n17 := [  ];
__n15["arguments"] := __n17;
__n13["right"] := __n15;
__n12 := [ __n13 ];
__n10["arguments"] := __n12;
__n9["expression"] := __n10;
__n4 := [ __n5, __n9 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n18 := {  };
__n18["type"] := "CatchClause";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "e";
__n18["param"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "IfStatement";
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "!==";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "instanceof";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "e";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "TypeError";
__n24["right"] := __n26;
__n23["left"] := __n24;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := true;
__n27["raw"] := "true";
__n23["right"] := __n27;
__n22["test"] := __n23;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "$ERROR";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "+";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "#1.2: 1() throw TypeError. Actual: ";
__n35["raw"] := "'#1.2: 1() throw TypeError. Actual: '";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "e";
__n34["right"] := __n36;
__n33 := [ __n34 ];
__n31["arguments"] := __n33;
__n30["expression"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n22["consequent"] := __n28;
__n22["alternate"] := null;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n18["body"] := __n20;
__n2["handler"] := __n18;
__n2["finalizer"] := null;
__n37 := {  };
__n37["type"] := "TryStatement";
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "VariableDeclaration";
__n42 := {  };
__n42["type"] := "VariableDeclarator";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "x";
__n42["id"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 1.;
__n44["raw"] := "1";
__n42["init"] := __n44;
__n41 := [ __n42 ];
__n40["declarations"] := __n41;
__n40["kind"] := "var";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "x";
__n46["callee"] := __n47;
__n48 := [  ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "+";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#2.1: var x = 1; x() throw TypeError. Actual: ";
__n54["raw"] := "'#2.1: var x = 1; x() throw TypeError. Actual: '";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "x";
__n55["callee"] := __n56;
__n57 := [  ];
__n55["arguments"] := __n57;
__n53["right"] := __n55;
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n39 := [ __n40, __n45, __n49 ];
__n38["body"] := __n39;
__n37["block"] := __n38;
__n58 := {  };
__n58["type"] := "CatchClause";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "e";
__n58["param"] := __n59;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "IfStatement";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "!==";
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "instanceof";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "e";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "TypeError";
__n64["right"] := __n66;
__n63["left"] := __n64;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := true;
__n67["raw"] := "true";
__n63["right"] := __n67;
__n62["test"] := __n63;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "$ERROR";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "+";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "#2.2: var x = 1; x() throw TypeError. Actual: ";
__n75["raw"] := "'#2.2: var x = 1; x() throw TypeError. Actual: '";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "e";
__n74["right"] := __n76;
__n73 := [ __n74 ];
__n71["arguments"] := __n73;
__n70["expression"] := __n71;
__n69 := [ __n70 ];
__n68["body"] := __n69;
__n62["consequent"] := __n68;
__n62["alternate"] := null;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n58["body"] := __n60;
__n37["handler"] := __n58;
__n37["finalizer"] := null;
__n1 := [ __n2, __n37 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n77 := [ "x" ];
__n0["variableDeclarations"] := __n77;
__n78 := [  ];
__n0["functionDeclarations"] := __n78;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}