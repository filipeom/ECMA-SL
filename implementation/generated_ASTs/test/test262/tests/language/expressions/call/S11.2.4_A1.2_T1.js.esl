function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "f_arg";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "FunctionExpression";
__n6["id"] := null;
__n7 := [  ];
__n6["params"] := __n7;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ReturnStatement";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "arguments";
__n10["argument"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n12 := [  ];
__n8["variableDeclarations"] := __n12;
__n13 := [  ];
__n8["functionDeclarations"] := __n13;
__n8["codeType"] := "function";
__n8["strict"] := false;
__n6["body"] := __n8;
__n6["generator"] := false;
__n6["expression"] := false;
__n6["async"] := false;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n14 := {  };
__n14["type"] := "IfStatement";
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "!==";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "f_arg";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 1.;
__n20["raw"] := "1";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 2.;
__n21["raw"] := "2";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 3.;
__n22["raw"] := "3";
__n19 := [ __n20, __n21, __n22 ];
__n17["arguments"] := __n19;
__n16["object"] := __n17;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "length";
__n23["raw"] := "\"length\"";
__n16["property"] := __n23;
__n16["computed"] := true;
__n15["left"] := __n16;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 3.;
__n24["raw"] := "3";
__n15["right"] := __n24;
__n14["test"] := __n15;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "$ERROR";
__n28["callee"] := __n29;
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "+";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "#1: f_arg = function()() {return arguments;} f_arg(1,2,3).length === 3. Actual: ";
__n32["raw"] := "'#1: f_arg = function()() {return arguments;} f_arg(1,2,3).length === 3. Actual: '";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "f_arg";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 1.;
__n37["raw"] := "1";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 2.;
__n38["raw"] := "2";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 3.;
__n39["raw"] := "3";
__n36 := [ __n37, __n38, __n39 ];
__n34["arguments"] := __n36;
__n33["object"] := __n34;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "length";
__n40["raw"] := "\"length\"";
__n33["property"] := __n40;
__n33["computed"] := true;
__n31["right"] := __n33;
__n30 := [ __n31 ];
__n28["arguments"] := __n30;
__n27["expression"] := __n28;
__n26 := [ __n27 ];
__n25["body"] := __n26;
__n14["consequent"] := __n25;
__n14["alternate"] := null;
__n41 := {  };
__n41["type"] := "IfStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "!==";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n43["computed"] := true;
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "f_arg";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 1.;
__n47["raw"] := "1";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 2.;
__n48["raw"] := "2";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 3.;
__n49["raw"] := "3";
__n46 := [ __n47, __n48, __n49 ];
__n44["arguments"] := __n46;
__n43["object"] := __n44;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 0.;
__n50["raw"] := "0";
__n43["property"] := __n50;
__n42["left"] := __n43;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 1.;
__n51["raw"] := "1";
__n42["right"] := __n51;
__n41["test"] := __n42;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "+";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#1: f_arg = function()() {return arguments;} f_arg(1,2,3)[0] === 1. Actual: ";
__n59["raw"] := "'#1: f_arg = function()() {return arguments;} f_arg(1,2,3)[0] === 1. Actual: '";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "MemberExpression";
__n60["computed"] := true;
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "f_arg";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 1.;
__n64["raw"] := "1";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 2.;
__n65["raw"] := "2";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 3.;
__n66["raw"] := "3";
__n63 := [ __n64, __n65, __n66 ];
__n61["arguments"] := __n63;
__n60["object"] := __n61;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 0.;
__n67["raw"] := "0";
__n60["property"] := __n67;
__n58["right"] := __n60;
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n41["consequent"] := __n52;
__n41["alternate"] := null;
__n68 := {  };
__n68["type"] := "IfStatement";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "!==";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n70["computed"] := true;
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "f_arg";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 1.;
__n74["raw"] := "1";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 2.;
__n75["raw"] := "2";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 3.;
__n76["raw"] := "3";
__n73 := [ __n74, __n75, __n76 ];
__n71["arguments"] := __n73;
__n70["object"] := __n71;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 1.;
__n77["raw"] := "1";
__n70["property"] := __n77;
__n69["left"] := __n70;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 2.;
__n78["raw"] := "2";
__n69["right"] := __n78;
__n68["test"] := __n69;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "$ERROR";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "+";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "#3: f_arg = function()() {return arguments;} f_arg(1,2,3)[1] === 2. Actual: ";
__n86["raw"] := "'#3: f_arg = function()() {return arguments;} f_arg(1,2,3)[1] === 2. Actual: '";
__n85["left"] := __n86;
__n87 := {  };
__n87["type"] := "MemberExpression";
__n87["computed"] := true;
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "f_arg";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 1.;
__n91["raw"] := "1";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 2.;
__n92["raw"] := "2";
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 3.;
__n93["raw"] := "3";
__n90 := [ __n91, __n92, __n93 ];
__n88["arguments"] := __n90;
__n87["object"] := __n88;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := 1.;
__n94["raw"] := "1";
__n87["property"] := __n94;
__n85["right"] := __n87;
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n68["consequent"] := __n79;
__n68["alternate"] := null;
__n95 := {  };
__n95["type"] := "IfStatement";
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "!==";
__n97 := {  };
__n97["type"] := "MemberExpression";
__n97["computed"] := true;
__n98 := {  };
__n98["type"] := "CallExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "f_arg";
__n98["callee"] := __n99;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 1.;
__n101["raw"] := "1";
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 2.;
__n102["raw"] := "2";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := 3.;
__n103["raw"] := "3";
__n100 := [ __n101, __n102, __n103 ];
__n98["arguments"] := __n100;
__n97["object"] := __n98;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := 2.;
__n104["raw"] := "2";
__n97["property"] := __n104;
__n96["left"] := __n97;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 3.;
__n105["raw"] := "3";
__n96["right"] := __n105;
__n95["test"] := __n96;
__n106 := {  };
__n106["type"] := "BlockStatement";
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "$ERROR";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "+";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "#4: f_arg = function()() {return arguments;} f_arg(1,2,3)[2] === 3. Actual: ";
__n113["raw"] := "'#4: f_arg = function()() {return arguments;} f_arg(1,2,3)[2] === 3. Actual: '";
__n112["left"] := __n113;
__n114 := {  };
__n114["type"] := "MemberExpression";
__n114["computed"] := true;
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "f_arg";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 1.;
__n118["raw"] := "1";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 2.;
__n119["raw"] := "2";
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := 3.;
__n120["raw"] := "3";
__n117 := [ __n118, __n119, __n120 ];
__n115["arguments"] := __n117;
__n114["object"] := __n115;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := 2.;
__n121["raw"] := "2";
__n114["property"] := __n121;
__n112["right"] := __n114;
__n111 := [ __n112 ];
__n109["arguments"] := __n111;
__n108["expression"] := __n109;
__n107 := [ __n108 ];
__n106["body"] := __n107;
__n95["consequent"] := __n106;
__n95["alternate"] := null;
__n122 := {  };
__n122["type"] := "IfStatement";
__n123 := {  };
__n123["type"] := "BinaryExpression";
__n123["operator"] := "!==";
__n124 := {  };
__n124["type"] := "MemberExpression";
__n124["computed"] := true;
__n125 := {  };
__n125["type"] := "CallExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "f_arg";
__n125["callee"] := __n126;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := 1.;
__n128["raw"] := "1";
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := 2.;
__n129["raw"] := "2";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := 3.;
__n130["raw"] := "3";
__n127 := [ __n128, __n129, __n130 ];
__n125["arguments"] := __n127;
__n124["object"] := __n125;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := 3.;
__n131["raw"] := "3";
__n124["property"] := __n131;
__n123["left"] := __n124;
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "undefined";
__n123["right"] := __n132;
__n122["test"] := __n123;
__n133 := {  };
__n133["type"] := "BlockStatement";
__n135 := {  };
__n135["type"] := "ExpressionStatement";
__n136 := {  };
__n136["type"] := "CallExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "$ERROR";
__n136["callee"] := __n137;
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "+";
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "#5: f_arg = function()() {return arguments;} f_arg(1,2,3)[3] === undefined. Actual: ";
__n140["raw"] := "'#5: f_arg = function()() {return arguments;} f_arg(1,2,3)[3] === undefined. Actual: '";
__n139["left"] := __n140;
__n141 := {  };
__n141["type"] := "MemberExpression";
__n141["computed"] := true;
__n142 := {  };
__n142["type"] := "CallExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "f_arg";
__n142["callee"] := __n143;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := 1.;
__n145["raw"] := "1";
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := 2.;
__n146["raw"] := "2";
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := 3.;
__n147["raw"] := "3";
__n144 := [ __n145, __n146, __n147 ];
__n142["arguments"] := __n144;
__n141["object"] := __n142;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := 3.;
__n148["raw"] := "3";
__n141["property"] := __n148;
__n139["right"] := __n141;
__n138 := [ __n139 ];
__n136["arguments"] := __n138;
__n135["expression"] := __n136;
__n134 := [ __n135 ];
__n133["body"] := __n134;
__n122["consequent"] := __n133;
__n122["alternate"] := null;
__n1 := [ __n2, __n14, __n41, __n68, __n95, __n122 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n149 := [ "f_arg" ];
__n0["variableDeclarations"] := __n149;
__n150 := [  ];
__n0["functionDeclarations"] := __n150;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}