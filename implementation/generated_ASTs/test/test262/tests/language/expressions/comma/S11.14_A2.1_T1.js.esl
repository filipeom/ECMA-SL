function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "SequenceExpression";
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 1.;
__n6["raw"] := "1";
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 2.;
__n7["raw"] := "2";
__n5 := [ __n6, __n7 ];
__n4["expressions"] := __n5;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 2.;
__n8["raw"] := "2";
__n3["right"] := __n8;
__n2["test"] := __n3;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "$ERROR";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "+";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "#1: (1,2) === 2. Actual: ";
__n16["raw"] := "'#1: (1,2) === 2. Actual: '";
__n15["left"] := __n16;
__n17 := {  };
__n17["type"] := "SequenceExpression";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 2.;
__n20["raw"] := "2";
__n18 := [ __n19, __n20 ];
__n17["expressions"] := __n18;
__n15["right"] := __n17;
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n2["consequent"] := __n9;
__n2["alternate"] := null;
__n21 := {  };
__n21["type"] := "VariableDeclaration";
__n23 := {  };
__n23["type"] := "VariableDeclarator";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "x";
__n23["id"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 1.;
__n25["raw"] := "1";
__n23["init"] := __n25;
__n22 := [ __n23 ];
__n21["declarations"] := __n22;
__n21["kind"] := "var";
__n26 := {  };
__n26["type"] := "IfStatement";
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "!==";
__n28 := {  };
__n28["type"] := "SequenceExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "x";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 2.;
__n31["raw"] := "2";
__n29 := [ __n30, __n31 ];
__n28["expressions"] := __n29;
__n27["left"] := __n28;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 2.;
__n32["raw"] := "2";
__n27["right"] := __n32;
__n26["test"] := __n27;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "$ERROR";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "+";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "#2: var x = 1; (x, 2) === 2. Actual: ";
__n40["raw"] := "'#2: var x = 1; (x, 2) === 2. Actual: '";
__n39["left"] := __n40;
__n41 := {  };
__n41["type"] := "SequenceExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "x";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 2.;
__n44["raw"] := "2";
__n42 := [ __n43, __n44 ];
__n41["expressions"] := __n42;
__n39["right"] := __n41;
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["expression"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n26["consequent"] := __n33;
__n26["alternate"] := null;
__n45 := {  };
__n45["type"] := "VariableDeclaration";
__n47 := {  };
__n47["type"] := "VariableDeclarator";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "y";
__n47["id"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 2.;
__n49["raw"] := "2";
__n47["init"] := __n49;
__n46 := [ __n47 ];
__n45["declarations"] := __n46;
__n45["kind"] := "var";
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "SequenceExpression";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 1.;
__n54["raw"] := "1";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "y";
__n53 := [ __n54, __n55 ];
__n52["expressions"] := __n53;
__n51["left"] := __n52;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 2.;
__n56["raw"] := "2";
__n51["right"] := __n56;
__n50["test"] := __n51;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "$ERROR";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "+";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#3: var y = 2; (1, y) === 2. Actual: ";
__n64["raw"] := "'#3: var y = 2; (1, y) === 2. Actual: '";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "SequenceExpression";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 1.;
__n67["raw"] := "1";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "y";
__n66 := [ __n67, __n68 ];
__n65["expressions"] := __n66;
__n63["right"] := __n65;
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n50["consequent"] := __n57;
__n50["alternate"] := null;
__n69 := {  };
__n69["type"] := "VariableDeclaration";
__n71 := {  };
__n71["type"] := "VariableDeclarator";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "x";
__n71["id"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 1.;
__n73["raw"] := "1";
__n71["init"] := __n73;
__n70 := [ __n71 ];
__n69["declarations"] := __n70;
__n69["kind"] := "var";
__n74 := {  };
__n74["type"] := "VariableDeclaration";
__n76 := {  };
__n76["type"] := "VariableDeclarator";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "y";
__n76["id"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 2.;
__n78["raw"] := "2";
__n76["init"] := __n78;
__n75 := [ __n76 ];
__n74["declarations"] := __n75;
__n74["kind"] := "var";
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!==";
__n81 := {  };
__n81["type"] := "SequenceExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "x";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "y";
__n82 := [ __n83, __n84 ];
__n81["expressions"] := __n82;
__n80["left"] := __n81;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := 2.;
__n85["raw"] := "2";
__n80["right"] := __n85;
__n79["test"] := __n80;
__n86 := {  };
__n86["type"] := "BlockStatement";
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "$ERROR";
__n89["callee"] := __n90;
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "+";
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "#4: var x = 1; var y = 2; (x, y) === 2. Actual: ";
__n93["raw"] := "'#4: var x = 1; var y = 2; (x, y) === 2. Actual: '";
__n92["left"] := __n93;
__n94 := {  };
__n94["type"] := "SequenceExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "x";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "y";
__n95 := [ __n96, __n97 ];
__n94["expressions"] := __n95;
__n92["right"] := __n94;
__n91 := [ __n92 ];
__n89["arguments"] := __n91;
__n88["expression"] := __n89;
__n87 := [ __n88 ];
__n86["body"] := __n87;
__n79["consequent"] := __n86;
__n79["alternate"] := null;
__n98 := {  };
__n98["type"] := "VariableDeclaration";
__n100 := {  };
__n100["type"] := "VariableDeclarator";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "x";
__n100["id"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 1.;
__n102["raw"] := "1";
__n100["init"] := __n102;
__n99 := [ __n100 ];
__n98["declarations"] := __n99;
__n98["kind"] := "var";
__n103 := {  };
__n103["type"] := "IfStatement";
__n104 := {  };
__n104["type"] := "BinaryExpression";
__n104["operator"] := "!==";
__n105 := {  };
__n105["type"] := "SequenceExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "x";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "x";
__n106 := [ __n107, __n108 ];
__n105["expressions"] := __n106;
__n104["left"] := __n105;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := 1.;
__n109["raw"] := "1";
__n104["right"] := __n109;
__n103["test"] := __n104;
__n110 := {  };
__n110["type"] := "BlockStatement";
__n112 := {  };
__n112["type"] := "ExpressionStatement";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "$ERROR";
__n113["callee"] := __n114;
__n116 := {  };
__n116["type"] := "BinaryExpression";
__n116["operator"] := "+";
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "#5: var x = 1; (x, x) === 1. Actual: ";
__n117["raw"] := "'#5: var x = 1; (x, x) === 1. Actual: '";
__n116["left"] := __n117;
__n118 := {  };
__n118["type"] := "SequenceExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "x";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "x";
__n119 := [ __n120, __n121 ];
__n118["expressions"] := __n119;
__n116["right"] := __n118;
__n115 := [ __n116 ];
__n113["arguments"] := __n115;
__n112["expression"] := __n113;
__n111 := [ __n112 ];
__n110["body"] := __n111;
__n103["consequent"] := __n110;
__n103["alternate"] := null;
__n122 := {  };
__n122["type"] := "VariableDeclaration";
__n124 := {  };
__n124["type"] := "VariableDeclarator";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "objectx";
__n124["id"] := __n125;
__n126 := {  };
__n126["type"] := "NewExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "Object";
__n126["callee"] := __n127;
__n128 := [  ];
__n126["arguments"] := __n128;
__n124["init"] := __n126;
__n123 := [ __n124 ];
__n122["declarations"] := __n123;
__n122["kind"] := "var";
__n129 := {  };
__n129["type"] := "VariableDeclaration";
__n131 := {  };
__n131["type"] := "VariableDeclarator";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "objecty";
__n131["id"] := __n132;
__n133 := {  };
__n133["type"] := "NewExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "Object";
__n133["callee"] := __n134;
__n135 := [  ];
__n133["arguments"] := __n135;
__n131["init"] := __n133;
__n130 := [ __n131 ];
__n129["declarations"] := __n130;
__n129["kind"] := "var";
__n136 := {  };
__n136["type"] := "ExpressionStatement";
__n137 := {  };
__n137["type"] := "AssignmentExpression";
__n137["operator"] := "=";
__n138 := {  };
__n138["type"] := "MemberExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "objectx";
__n138["object"] := __n139;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "prop";
__n140["raw"] := "\"prop\"";
__n138["property"] := __n140;
__n138["computed"] := true;
__n137["left"] := __n138;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := true;
__n141["raw"] := "true";
__n137["right"] := __n141;
__n136["expression"] := __n137;
__n142 := {  };
__n142["type"] := "ExpressionStatement";
__n143 := {  };
__n143["type"] := "AssignmentExpression";
__n143["operator"] := "=";
__n144 := {  };
__n144["type"] := "MemberExpression";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "objecty";
__n144["object"] := __n145;
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := "prop";
__n146["raw"] := "\"prop\"";
__n144["property"] := __n146;
__n144["computed"] := true;
__n143["left"] := __n144;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := 1.1;
__n147["raw"] := "1.1";
__n143["right"] := __n147;
__n142["expression"] := __n143;
__n148 := {  };
__n148["type"] := "IfStatement";
__n149 := {  };
__n149["type"] := "BinaryExpression";
__n149["operator"] := "!==";
__n150 := {  };
__n150["type"] := "SequenceExpression";
__n152 := {  };
__n152["type"] := "AssignmentExpression";
__n152["operator"] := "=";
__n153 := {  };
__n153["type"] := "MemberExpression";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "objectx";
__n153["object"] := __n154;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := "prop";
__n155["raw"] := "\"prop\"";
__n153["property"] := __n155;
__n153["computed"] := true;
__n152["left"] := __n153;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := false;
__n156["raw"] := "false";
__n152["right"] := __n156;
__n157 := {  };
__n157["type"] := "MemberExpression";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "objecty";
__n157["object"] := __n158;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "prop";
__n159["raw"] := "\"prop\"";
__n157["property"] := __n159;
__n157["computed"] := true;
__n151 := [ __n152, __n157 ];
__n150["expressions"] := __n151;
__n149["left"] := __n150;
__n160 := {  };
__n160["type"] := "MemberExpression";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "objecty";
__n160["object"] := __n161;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := "prop";
__n162["raw"] := "\"prop\"";
__n160["property"] := __n162;
__n160["computed"] := true;
__n149["right"] := __n160;
__n148["test"] := __n149;
__n163 := {  };
__n163["type"] := "BlockStatement";
__n165 := {  };
__n165["type"] := "ExpressionStatement";
__n166 := {  };
__n166["type"] := "CallExpression";
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "$ERROR";
__n166["callee"] := __n167;
__n169 := {  };
__n169["type"] := "BinaryExpression";
__n169["operator"] := "+";
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := "#6: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; (objectx.prop = false, objecty.prop) === objecty.prop. Actual: ";
__n170["raw"] := "'#6: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; (objectx.prop = false, objecty.prop) === objecty.prop. Actual: '";
__n169["left"] := __n170;
__n171 := {  };
__n171["type"] := "SequenceExpression";
__n173 := {  };
__n173["type"] := "AssignmentExpression";
__n173["operator"] := "=";
__n174 := {  };
__n174["type"] := "MemberExpression";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "objectx";
__n174["object"] := __n175;
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := "prop";
__n176["raw"] := "\"prop\"";
__n174["property"] := __n176;
__n174["computed"] := true;
__n173["left"] := __n174;
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := false;
__n177["raw"] := "false";
__n173["right"] := __n177;
__n178 := {  };
__n178["type"] := "MemberExpression";
__n179 := {  };
__n179["type"] := "Identifier";
__n179["name"] := "objecty";
__n178["object"] := __n179;
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := "prop";
__n180["raw"] := "\"prop\"";
__n178["property"] := __n180;
__n178["computed"] := true;
__n172 := [ __n173, __n178 ];
__n171["expressions"] := __n172;
__n169["right"] := __n171;
__n168 := [ __n169 ];
__n166["arguments"] := __n168;
__n165["expression"] := __n166;
__n164 := [ __n165 ];
__n163["body"] := __n164;
__n148["consequent"] := __n163;
__n181 := {  };
__n181["type"] := "BlockStatement";
__n183 := {  };
__n183["type"] := "IfStatement";
__n184 := {  };
__n184["type"] := "BinaryExpression";
__n184["operator"] := "!==";
__n185 := {  };
__n185["type"] := "MemberExpression";
__n186 := {  };
__n186["type"] := "Identifier";
__n186["name"] := "objectx";
__n185["object"] := __n186;
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := "prop";
__n187["raw"] := "\"prop\"";
__n185["property"] := __n187;
__n185["computed"] := true;
__n184["left"] := __n185;
__n188 := {  };
__n188["type"] := "Literal";
__n188["value"] := false;
__n188["raw"] := "false";
__n184["right"] := __n188;
__n183["test"] := __n184;
__n189 := {  };
__n189["type"] := "BlockStatement";
__n191 := {  };
__n191["type"] := "ExpressionStatement";
__n192 := {  };
__n192["type"] := "CallExpression";
__n193 := {  };
__n193["type"] := "Identifier";
__n193["name"] := "$ERROR";
__n192["callee"] := __n193;
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "#6: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; objectx.prop = false, objecty.prop; objectx.prop === false";
__n195["raw"] := "'#6: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; objectx.prop = false, objecty.prop; objectx.prop === false'";
__n194 := [ __n195 ];
__n192["arguments"] := __n194;
__n191["expression"] := __n192;
__n190 := [ __n191 ];
__n189["body"] := __n190;
__n183["consequent"] := __n189;
__n183["alternate"] := null;
__n182 := [ __n183 ];
__n181["body"] := __n182;
__n148["alternate"] := __n181;
__n1 := [ __n2, __n21, __n26, __n45, __n50, __n69, __n74, __n79, __n98, __n103, __n122, __n129, __n136, __n142, __n148 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n196 := [ "x", "y", "objectx", "objecty" ];
__n0["variableDeclarations"] := __n196;
__n197 := [  ];
__n0["functionDeclarations"] := __n197;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}