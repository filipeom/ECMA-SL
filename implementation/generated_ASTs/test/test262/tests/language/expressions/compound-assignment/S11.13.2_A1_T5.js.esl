function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "AssignmentExpression";
__n7["operator"] := "=";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "x";
__n7["left"] := __n8;
__n9 := {  };
__n9["type"] := "UnaryExpression";
__n9["operator"] := "-";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n9["argument"] := __n10;
__n9["prefix"] := true;
__n7["right"] := __n9;
__n6["expression"] := __n7;
__n11 := {  };
__n11["type"] := "IfStatement";
__n12 := {  };
__n12["type"] := "BinaryExpression";
__n12["operator"] := "!==";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "eval";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "x	-=	1";
__n16["raw"] := "\"x\\u0009-=\\u00091\"";
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["left"] := __n13;
__n17 := {  };
__n17["type"] := "UnaryExpression";
__n17["operator"] := "-";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 2.;
__n18["raw"] := "2";
__n17["argument"] := __n18;
__n17["prefix"] := true;
__n12["right"] := __n17;
__n11["test"] := __n12;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "$ERROR";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "#1: x = -1; (x\\u0009-=\\u00091) === -2";
__n25["raw"] := "'#1: x = -1; (x\\\\u0009-=\\\\u00091) === -2'";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n11["consequent"] := __n19;
__n11["alternate"] := null;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "AssignmentExpression";
__n27["operator"] := "=";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "x";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "UnaryExpression";
__n29["operator"] := "-";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 1.;
__n30["raw"] := "1";
__n29["argument"] := __n30;
__n29["prefix"] := true;
__n27["right"] := __n29;
__n26["expression"] := __n27;
__n31 := {  };
__n31["type"] := "IfStatement";
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "!==";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "eval";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "x-=1";
__n36["raw"] := "\"x\\u000B-=\\u000B1\"";
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n32["left"] := __n33;
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "-";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 2.;
__n38["raw"] := "2";
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n32["right"] := __n37;
__n31["test"] := __n32;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "$ERROR";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "#2: x = -1; (x\\u000B-=\\u000B1) === -2";
__n45["raw"] := "'#2: x = -1; (x\\\\u000B-=\\\\u000B1) === -2'";
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n41["expression"] := __n42;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n31["consequent"] := __n39;
__n31["alternate"] := null;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "AssignmentExpression";
__n47["operator"] := "=";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "x";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "UnaryExpression";
__n49["operator"] := "-";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 1.;
__n50["raw"] := "1";
__n49["argument"] := __n50;
__n49["prefix"] := true;
__n47["right"] := __n49;
__n46["expression"] := __n47;
__n51 := {  };
__n51["type"] := "IfStatement";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "!==";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "eval";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "x-=1";
__n56["raw"] := "\"x\\u000C-=\\u000C1\"";
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n52["left"] := __n53;
__n57 := {  };
__n57["type"] := "UnaryExpression";
__n57["operator"] := "-";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 2.;
__n58["raw"] := "2";
__n57["argument"] := __n58;
__n57["prefix"] := true;
__n52["right"] := __n57;
__n51["test"] := __n52;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "#3: x = -1; (x\\u000C-=\\u000C1) === -2";
__n65["raw"] := "'#3: x = -1; (x\\\\u000C-=\\\\u000C1) === -2'";
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n51["consequent"] := __n59;
__n51["alternate"] := null;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "AssignmentExpression";
__n67["operator"] := "=";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "x";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "UnaryExpression";
__n69["operator"] := "-";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 1.;
__n70["raw"] := "1";
__n69["argument"] := __n70;
__n69["prefix"] := true;
__n67["right"] := __n69;
__n66["expression"] := __n67;
__n71 := {  };
__n71["type"] := "IfStatement";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "!==";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "eval";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "x -= 1";
__n76["raw"] := "\"x\\u0020-=\\u00201\"";
__n75 := [ __n76 ];
__n73["arguments"] := __n75;
__n72["left"] := __n73;
__n77 := {  };
__n77["type"] := "UnaryExpression";
__n77["operator"] := "-";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 2.;
__n78["raw"] := "2";
__n77["argument"] := __n78;
__n77["prefix"] := true;
__n72["right"] := __n77;
__n71["test"] := __n72;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "$ERROR";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "#4: x = -1; (x\\u0020-=\\u00201) === -2";
__n85["raw"] := "'#4: x = -1; (x\\\\u0020-=\\\\u00201) === -2'";
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n71["consequent"] := __n79;
__n71["alternate"] := null;
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "AssignmentExpression";
__n87["operator"] := "=";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "x";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "UnaryExpression";
__n89["operator"] := "-";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 1.;
__n90["raw"] := "1";
__n89["argument"] := __n90;
__n89["prefix"] := true;
__n87["right"] := __n89;
__n86["expression"] := __n87;
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "!==";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "eval";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "x -= 1";
__n96["raw"] := "\"x\\u00A0-=\\u00A01\"";
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["left"] := __n93;
__n97 := {  };
__n97["type"] := "UnaryExpression";
__n97["operator"] := "-";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 2.;
__n98["raw"] := "2";
__n97["argument"] := __n98;
__n97["prefix"] := true;
__n92["right"] := __n97;
__n91["test"] := __n92;
__n99 := {  };
__n99["type"] := "BlockStatement";
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "$ERROR";
__n102["callee"] := __n103;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "#5: x = -1; (x\\u00A0-=\\u00A01) === -2";
__n105["raw"] := "'#5: x = -1; (x\\\\u00A0-=\\\\u00A01) === -2'";
__n104 := [ __n105 ];
__n102["arguments"] := __n104;
__n101["expression"] := __n102;
__n100 := [ __n101 ];
__n99["body"] := __n100;
__n91["consequent"] := __n99;
__n91["alternate"] := null;
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "AssignmentExpression";
__n107["operator"] := "=";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "x";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "UnaryExpression";
__n109["operator"] := "-";
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 1.;
__n110["raw"] := "1";
__n109["argument"] := __n110;
__n109["prefix"] := true;
__n107["right"] := __n109;
__n106["expression"] := __n107;
__n111 := {  };
__n111["type"] := "IfStatement";
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "!==";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "eval";
__n113["callee"] := __n114;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "x
-=
1";
__n116["raw"] := "\"x\\u000A-=\\u000A1\"";
__n115 := [ __n116 ];
__n113["arguments"] := __n115;
__n112["left"] := __n113;
__n117 := {  };
__n117["type"] := "UnaryExpression";
__n117["operator"] := "-";
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 2.;
__n118["raw"] := "2";
__n117["argument"] := __n118;
__n117["prefix"] := true;
__n112["right"] := __n117;
__n111["test"] := __n112;
__n119 := {  };
__n119["type"] := "BlockStatement";
__n121 := {  };
__n121["type"] := "ExpressionStatement";
__n122 := {  };
__n122["type"] := "CallExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "$ERROR";
__n122["callee"] := __n123;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := "#6: x = -1; (x\\u000A-=\\u000A1) === -2";
__n125["raw"] := "'#6: x = -1; (x\\\\u000A-=\\\\u000A1) === -2'";
__n124 := [ __n125 ];
__n122["arguments"] := __n124;
__n121["expression"] := __n122;
__n120 := [ __n121 ];
__n119["body"] := __n120;
__n111["consequent"] := __n119;
__n111["alternate"] := null;
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "AssignmentExpression";
__n127["operator"] := "=";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "x";
__n127["left"] := __n128;
__n129 := {  };
__n129["type"] := "UnaryExpression";
__n129["operator"] := "-";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := 1.;
__n130["raw"] := "1";
__n129["argument"] := __n130;
__n129["prefix"] := true;
__n127["right"] := __n129;
__n126["expression"] := __n127;
__n131 := {  };
__n131["type"] := "IfStatement";
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := "!==";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "eval";
__n133["callee"] := __n134;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "x-=1";
__n136["raw"] := "\"x\\u000D-=\\u000D1\"";
__n135 := [ __n136 ];
__n133["arguments"] := __n135;
__n132["left"] := __n133;
__n137 := {  };
__n137["type"] := "UnaryExpression";
__n137["operator"] := "-";
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := 2.;
__n138["raw"] := "2";
__n137["argument"] := __n138;
__n137["prefix"] := true;
__n132["right"] := __n137;
__n131["test"] := __n132;
__n139 := {  };
__n139["type"] := "BlockStatement";
__n141 := {  };
__n141["type"] := "ExpressionStatement";
__n142 := {  };
__n142["type"] := "CallExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "$ERROR";
__n142["callee"] := __n143;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "#7: x = -1; (x\\u000D-=\\u000D1) === -2";
__n145["raw"] := "'#7: x = -1; (x\\\\u000D-=\\\\u000D1) === -2'";
__n144 := [ __n145 ];
__n142["arguments"] := __n144;
__n141["expression"] := __n142;
__n140 := [ __n141 ];
__n139["body"] := __n140;
__n131["consequent"] := __n139;
__n131["alternate"] := null;
__n146 := {  };
__n146["type"] := "ExpressionStatement";
__n147 := {  };
__n147["type"] := "AssignmentExpression";
__n147["operator"] := "=";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "x";
__n147["left"] := __n148;
__n149 := {  };
__n149["type"] := "UnaryExpression";
__n149["operator"] := "-";
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 1.;
__n150["raw"] := "1";
__n149["argument"] := __n150;
__n149["prefix"] := true;
__n147["right"] := __n149;
__n146["expression"] := __n147;
__n151 := {  };
__n151["type"] := "IfStatement";
__n152 := {  };
__n152["type"] := "BinaryExpression";
__n152["operator"] := "!==";
__n153 := {  };
__n153["type"] := "CallExpression";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "eval";
__n153["callee"] := __n154;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := "x -= 1";
__n156["raw"] := "\"x\\u2028-=\\u20281\"";
__n155 := [ __n156 ];
__n153["arguments"] := __n155;
__n152["left"] := __n153;
__n157 := {  };
__n157["type"] := "UnaryExpression";
__n157["operator"] := "-";
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := 2.;
__n158["raw"] := "2";
__n157["argument"] := __n158;
__n157["prefix"] := true;
__n152["right"] := __n157;
__n151["test"] := __n152;
__n159 := {  };
__n159["type"] := "BlockStatement";
__n161 := {  };
__n161["type"] := "ExpressionStatement";
__n162 := {  };
__n162["type"] := "CallExpression";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "$ERROR";
__n162["callee"] := __n163;
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := "#8: x = -1; (x\\u2028-=\\u20281) === -2";
__n165["raw"] := "'#8: x = -1; (x\\\\u2028-=\\\\u20281) === -2'";
__n164 := [ __n165 ];
__n162["arguments"] := __n164;
__n161["expression"] := __n162;
__n160 := [ __n161 ];
__n159["body"] := __n160;
__n151["consequent"] := __n159;
__n151["alternate"] := null;
__n166 := {  };
__n166["type"] := "ExpressionStatement";
__n167 := {  };
__n167["type"] := "AssignmentExpression";
__n167["operator"] := "=";
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "x";
__n167["left"] := __n168;
__n169 := {  };
__n169["type"] := "UnaryExpression";
__n169["operator"] := "-";
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := 1.;
__n170["raw"] := "1";
__n169["argument"] := __n170;
__n169["prefix"] := true;
__n167["right"] := __n169;
__n166["expression"] := __n167;
__n171 := {  };
__n171["type"] := "IfStatement";
__n172 := {  };
__n172["type"] := "BinaryExpression";
__n172["operator"] := "!==";
__n173 := {  };
__n173["type"] := "CallExpression";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "eval";
__n173["callee"] := __n174;
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := "x -= 1";
__n176["raw"] := "\"x\\u2029-=\\u20291\"";
__n175 := [ __n176 ];
__n173["arguments"] := __n175;
__n172["left"] := __n173;
__n177 := {  };
__n177["type"] := "UnaryExpression";
__n177["operator"] := "-";
__n178 := {  };
__n178["type"] := "Literal";
__n178["value"] := 2.;
__n178["raw"] := "2";
__n177["argument"] := __n178;
__n177["prefix"] := true;
__n172["right"] := __n177;
__n171["test"] := __n172;
__n179 := {  };
__n179["type"] := "BlockStatement";
__n181 := {  };
__n181["type"] := "ExpressionStatement";
__n182 := {  };
__n182["type"] := "CallExpression";
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "$ERROR";
__n182["callee"] := __n183;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "#9: x = -1; (x\\u2029-=\\u20291) === -2";
__n185["raw"] := "'#9: x = -1; (x\\\\u2029-=\\\\u20291) === -2'";
__n184 := [ __n185 ];
__n182["arguments"] := __n184;
__n181["expression"] := __n182;
__n180 := [ __n181 ];
__n179["body"] := __n180;
__n171["consequent"] := __n179;
__n171["alternate"] := null;
__n186 := {  };
__n186["type"] := "ExpressionStatement";
__n187 := {  };
__n187["type"] := "AssignmentExpression";
__n187["operator"] := "=";
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "x";
__n187["left"] := __n188;
__n189 := {  };
__n189["type"] := "UnaryExpression";
__n189["operator"] := "-";
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := 1.;
__n190["raw"] := "1";
__n189["argument"] := __n190;
__n189["prefix"] := true;
__n187["right"] := __n189;
__n186["expression"] := __n187;
__n191 := {  };
__n191["type"] := "IfStatement";
__n192 := {  };
__n192["type"] := "BinaryExpression";
__n192["operator"] := "!==";
__n193 := {  };
__n193["type"] := "CallExpression";
__n194 := {  };
__n194["type"] := "Identifier";
__n194["name"] := "eval";
__n193["callee"] := __n194;
__n196 := {  };
__n196["type"] := "Literal";
__n196["value"] := "x	  
  -=	  
  1";
__n196["raw"] := "\"x\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029-=\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291\"";
__n195 := [ __n196 ];
__n193["arguments"] := __n195;
__n192["left"] := __n193;
__n197 := {  };
__n197["type"] := "UnaryExpression";
__n197["operator"] := "-";
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := 2.;
__n198["raw"] := "2";
__n197["argument"] := __n198;
__n197["prefix"] := true;
__n192["right"] := __n197;
__n191["test"] := __n192;
__n199 := {  };
__n199["type"] := "BlockStatement";
__n201 := {  };
__n201["type"] := "ExpressionStatement";
__n202 := {  };
__n202["type"] := "CallExpression";
__n203 := {  };
__n203["type"] := "Identifier";
__n203["name"] := "$ERROR";
__n202["callee"] := __n203;
__n205 := {  };
__n205["type"] := "Literal";
__n205["value"] := "#10: x = -1; (x\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029-=\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291) === -2";
__n205["raw"] := "'#10: x = -1; (x\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029-=\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u20291) === -2'";
__n204 := [ __n205 ];
__n202["arguments"] := __n204;
__n201["expression"] := __n202;
__n200 := [ __n201 ];
__n199["body"] := __n200;
__n191["consequent"] := __n199;
__n191["alternate"] := null;
__n1 := [ __n2, __n6, __n11, __n26, __n31, __n46, __n51, __n66, __n71, __n86, __n91, __n106, __n111, __n126, __n131, __n146, __n151, __n166, __n171, __n186, __n191 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n206 := [ "x" ];
__n0["variableDeclarations"] := __n206;
__n207 := [  ];
__n0["functionDeclarations"] := __n207;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}