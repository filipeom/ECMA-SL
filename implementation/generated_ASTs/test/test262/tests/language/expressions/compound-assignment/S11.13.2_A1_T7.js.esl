function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "AssignmentExpression";
__n7["operator"] := "=";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "x";
__n7["left"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n7["right"] := __n9;
__n6["expression"] := __n7;
__n10 := {  };
__n10["type"] := "IfStatement";
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "!==";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "eval";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "x	>>=	1";
__n15["raw"] := "\"x\\u0009>>=\\u00091\"";
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11["left"] := __n12;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 0.;
__n16["raw"] := "0";
__n11["right"] := __n16;
__n10["test"] := __n11;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "$ERROR";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "#1: x = 1; (x\\u0009>>=\\u00091) === 0";
__n23["raw"] := "'#1: x = 1; (x\\\\u0009>>=\\\\u00091) === 0'";
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n10["consequent"] := __n17;
__n10["alternate"] := null;
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "AssignmentExpression";
__n25["operator"] := "=";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "x";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 1.;
__n27["raw"] := "1";
__n25["right"] := __n27;
__n24["expression"] := __n25;
__n28 := {  };
__n28["type"] := "IfStatement";
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "!==";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "eval";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "x>>=1";
__n33["raw"] := "\"x\\u000B>>=\\u000B1\"";
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n29["left"] := __n30;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 0.;
__n34["raw"] := "0";
__n29["right"] := __n34;
__n28["test"] := __n29;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "#2: x = 1; (x\\u000B>>=\\u000B1) === 0";
__n41["raw"] := "'#2: x = 1; (x\\\\u000B>>=\\\\u000B1) === 0'";
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n28["consequent"] := __n35;
__n28["alternate"] := null;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "x";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 1.;
__n45["raw"] := "1";
__n43["right"] := __n45;
__n42["expression"] := __n43;
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "!==";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "eval";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "x>>=1";
__n51["raw"] := "\"x\\u000C>>=\\u000C1\"";
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["left"] := __n48;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 0.;
__n52["raw"] := "0";
__n47["right"] := __n52;
__n46["test"] := __n47;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "$ERROR";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#3: x = 1; (x\\u000C>>=\\u000C1) === 0";
__n59["raw"] := "'#3: x = 1; (x\\\\u000C>>=\\\\u000C1) === 0'";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n46["consequent"] := __n53;
__n46["alternate"] := null;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "AssignmentExpression";
__n61["operator"] := "=";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "x";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 1.;
__n63["raw"] := "1";
__n61["right"] := __n63;
__n60["expression"] := __n61;
__n64 := {  };
__n64["type"] := "IfStatement";
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "!==";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "eval";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "x >>= 1";
__n69["raw"] := "\"x\\u0020>>=\\u00201\"";
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["left"] := __n66;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 0.;
__n70["raw"] := "0";
__n65["right"] := __n70;
__n64["test"] := __n65;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "$ERROR";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "#4: x = 1; (x\\u0020>>=\\u00201) === 0";
__n77["raw"] := "'#4: x = 1; (x\\\\u0020>>=\\\\u00201) === 0'";
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n64["consequent"] := __n71;
__n64["alternate"] := null;
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "AssignmentExpression";
__n79["operator"] := "=";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "x";
__n79["left"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 1.;
__n81["raw"] := "1";
__n79["right"] := __n81;
__n78["expression"] := __n79;
__n82 := {  };
__n82["type"] := "IfStatement";
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "!==";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "eval";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "x >>= 1";
__n87["raw"] := "\"x\\u00A0>>=\\u00A01\"";
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["left"] := __n84;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 0.;
__n88["raw"] := "0";
__n83["right"] := __n88;
__n82["test"] := __n83;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "$ERROR";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "#5: x = 1; (x\\u00A0>>=\\u00A01) === 0";
__n95["raw"] := "'#5: x = 1; (x\\\\u00A0>>=\\\\u00A01) === 0'";
__n94 := [ __n95 ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n82["consequent"] := __n89;
__n82["alternate"] := null;
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "AssignmentExpression";
__n97["operator"] := "=";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "x";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 1.;
__n99["raw"] := "1";
__n97["right"] := __n99;
__n96["expression"] := __n97;
__n100 := {  };
__n100["type"] := "IfStatement";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "!==";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "eval";
__n102["callee"] := __n103;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "x
>>=
1";
__n105["raw"] := "\"x\\u000A>>=\\u000A1\"";
__n104 := [ __n105 ];
__n102["arguments"] := __n104;
__n101["left"] := __n102;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 0.;
__n106["raw"] := "0";
__n101["right"] := __n106;
__n100["test"] := __n101;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "$ERROR";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "#6: x = 1; (x\\u000A>>=\\u000A1) === 0";
__n113["raw"] := "'#6: x = 1; (x\\\\u000A>>=\\\\u000A1) === 0'";
__n112 := [ __n113 ];
__n110["arguments"] := __n112;
__n109["expression"] := __n110;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n100["consequent"] := __n107;
__n100["alternate"] := null;
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "AssignmentExpression";
__n115["operator"] := "=";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "x";
__n115["left"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 1.;
__n117["raw"] := "1";
__n115["right"] := __n117;
__n114["expression"] := __n115;
__n118 := {  };
__n118["type"] := "IfStatement";
__n119 := {  };
__n119["type"] := "BinaryExpression";
__n119["operator"] := "!==";
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "eval";
__n120["callee"] := __n121;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "x>>=1";
__n123["raw"] := "\"x\\u000D>>=\\u000D1\"";
__n122 := [ __n123 ];
__n120["arguments"] := __n122;
__n119["left"] := __n120;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 0.;
__n124["raw"] := "0";
__n119["right"] := __n124;
__n118["test"] := __n119;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "$ERROR";
__n128["callee"] := __n129;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "#7: x = 1; (x\\u000D>>=\\u000D1) === 0";
__n131["raw"] := "'#7: x = 1; (x\\\\u000D>>=\\\\u000D1) === 0'";
__n130 := [ __n131 ];
__n128["arguments"] := __n130;
__n127["expression"] := __n128;
__n126 := [ __n127 ];
__n125["body"] := __n126;
__n118["consequent"] := __n125;
__n118["alternate"] := null;
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "AssignmentExpression";
__n133["operator"] := "=";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "x";
__n133["left"] := __n134;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := 1.;
__n135["raw"] := "1";
__n133["right"] := __n135;
__n132["expression"] := __n133;
__n136 := {  };
__n136["type"] := "IfStatement";
__n137 := {  };
__n137["type"] := "BinaryExpression";
__n137["operator"] := "!==";
__n138 := {  };
__n138["type"] := "CallExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "eval";
__n138["callee"] := __n139;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "x >>= 1";
__n141["raw"] := "\"x\\u2028>>=\\u20281\"";
__n140 := [ __n141 ];
__n138["arguments"] := __n140;
__n137["left"] := __n138;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := 0.;
__n142["raw"] := "0";
__n137["right"] := __n142;
__n136["test"] := __n137;
__n143 := {  };
__n143["type"] := "BlockStatement";
__n145 := {  };
__n145["type"] := "ExpressionStatement";
__n146 := {  };
__n146["type"] := "CallExpression";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "$ERROR";
__n146["callee"] := __n147;
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := "#8: x = 1; (x\\u2028>>=\\u20281) === 0";
__n149["raw"] := "'#8: x = 1; (x\\\\u2028>>=\\\\u20281) === 0'";
__n148 := [ __n149 ];
__n146["arguments"] := __n148;
__n145["expression"] := __n146;
__n144 := [ __n145 ];
__n143["body"] := __n144;
__n136["consequent"] := __n143;
__n136["alternate"] := null;
__n150 := {  };
__n150["type"] := "ExpressionStatement";
__n151 := {  };
__n151["type"] := "AssignmentExpression";
__n151["operator"] := "=";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "x";
__n151["left"] := __n152;
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := 1.;
__n153["raw"] := "1";
__n151["right"] := __n153;
__n150["expression"] := __n151;
__n154 := {  };
__n154["type"] := "IfStatement";
__n155 := {  };
__n155["type"] := "BinaryExpression";
__n155["operator"] := "!==";
__n156 := {  };
__n156["type"] := "CallExpression";
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "eval";
__n156["callee"] := __n157;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "x >>= 1";
__n159["raw"] := "\"x\\u2029>>=\\u20291\"";
__n158 := [ __n159 ];
__n156["arguments"] := __n158;
__n155["left"] := __n156;
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := 0.;
__n160["raw"] := "0";
__n155["right"] := __n160;
__n154["test"] := __n155;
__n161 := {  };
__n161["type"] := "BlockStatement";
__n163 := {  };
__n163["type"] := "ExpressionStatement";
__n164 := {  };
__n164["type"] := "CallExpression";
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "$ERROR";
__n164["callee"] := __n165;
__n167 := {  };
__n167["type"] := "Literal";
__n167["value"] := "#9: x = 1; (x\\u2029>>=\\u20291) === 0";
__n167["raw"] := "'#9: x = 1; (x\\\\u2029>>=\\\\u20291) === 0'";
__n166 := [ __n167 ];
__n164["arguments"] := __n166;
__n163["expression"] := __n164;
__n162 := [ __n163 ];
__n161["body"] := __n162;
__n154["consequent"] := __n161;
__n154["alternate"] := null;
__n168 := {  };
__n168["type"] := "ExpressionStatement";
__n169 := {  };
__n169["type"] := "AssignmentExpression";
__n169["operator"] := "=";
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "x";
__n169["left"] := __n170;
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := 1.;
__n171["raw"] := "1";
__n169["right"] := __n171;
__n168["expression"] := __n169;
__n172 := {  };
__n172["type"] := "IfStatement";
__n173 := {  };
__n173["type"] := "BinaryExpression";
__n173["operator"] := "!==";
__n174 := {  };
__n174["type"] := "CallExpression";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "eval";
__n174["callee"] := __n175;
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "x	  
  >>=	  
  1";
__n177["raw"] := "\"x\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029>>=\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291\"";
__n176 := [ __n177 ];
__n174["arguments"] := __n176;
__n173["left"] := __n174;
__n178 := {  };
__n178["type"] := "Literal";
__n178["value"] := 0.;
__n178["raw"] := "0";
__n173["right"] := __n178;
__n172["test"] := __n173;
__n179 := {  };
__n179["type"] := "BlockStatement";
__n181 := {  };
__n181["type"] := "ExpressionStatement";
__n182 := {  };
__n182["type"] := "CallExpression";
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "$ERROR";
__n182["callee"] := __n183;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "#10: x = 1; (x\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029>>=\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291) === 0";
__n185["raw"] := "'#10: x = 1; (x\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029>>=\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u20291) === 0'";
__n184 := [ __n185 ];
__n182["arguments"] := __n184;
__n181["expression"] := __n182;
__n180 := [ __n181 ];
__n179["body"] := __n180;
__n172["consequent"] := __n179;
__n172["alternate"] := null;
__n1 := [ __n2, __n6, __n10, __n24, __n28, __n42, __n46, __n60, __n64, __n78, __n82, __n96, __n100, __n114, __n118, __n132, __n136, __n150, __n154, __n168, __n172 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n186 := [ "x" ];
__n0["variableDeclarations"] := __n186;
__n187 := [  ];
__n0["functionDeclarations"] := __n187;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}