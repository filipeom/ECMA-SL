function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "DummyError";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "assert";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "throws";
__n8["raw"] := "\"throws\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "DummyError";
__n11 := {  };
__n11["type"] := "FunctionExpression";
__n11["id"] := null;
__n12 := [  ];
__n11["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "base";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "ObjectExpression";
__n20 := [  ];
__n19["properties"] := __n20;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n21 := {  };
__n21["type"] := "VariableDeclaration";
__n23 := {  };
__n23["type"] := "VariableDeclarator";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "prop";
__n23["id"] := __n24;
__n25 := {  };
__n25["type"] := "ObjectExpression";
__n27 := {  };
__n27["type"] := "Property";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "toString";
__n27["key"] := __n28;
__n29 := {  };
__n29["type"] := "FunctionExpression";
__n29["id"] := null;
__n30 := [  ];
__n29["params"] := __n30;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ThrowStatement";
__n34 := {  };
__n34["type"] := "NewExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "DummyError";
__n34["callee"] := __n35;
__n36 := [  ];
__n34["arguments"] := __n36;
__n33["argument"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n37 := [  ];
__n31["variableDeclarations"] := __n37;
__n38 := [  ];
__n31["functionDeclarations"] := __n38;
__n31["codeType"] := "function";
__n31["strict"] := false;
__n29["body"] := __n31;
__n29["generator"] := false;
__n29["expression"] := false;
__n29["async"] := false;
__n27["value"] := __n29;
__n27["computed"] := false;
__n27["kind"] := "init";
__n27["shorthand"] := false;
__n26 := [ __n27 ];
__n25["properties"] := __n26;
__n23["init"] := __n25;
__n22 := [ __n23 ];
__n21["declarations"] := __n22;
__n21["kind"] := "var";
__n39 := {  };
__n39["type"] := "VariableDeclaration";
__n41 := {  };
__n41["type"] := "VariableDeclarator";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "expr";
__n41["id"] := __n42;
__n43 := {  };
__n43["type"] := "FunctionExpression";
__n43["id"] := null;
__n44 := [  ];
__n43["params"] := __n44;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "$ERROR";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "right-hand side expression evaluated";
__n51["raw"] := "\"right-hand side expression evaluated\"";
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n52 := [  ];
__n45["variableDeclarations"] := __n52;
__n53 := [  ];
__n45["functionDeclarations"] := __n53;
__n45["codeType"] := "function";
__n45["strict"] := false;
__n43["body"] := __n45;
__n43["generator"] := false;
__n43["expression"] := false;
__n43["async"] := false;
__n41["init"] := __n43;
__n40 := [ __n41 ];
__n39["declarations"] := __n40;
__n39["kind"] := "var";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "AssignmentExpression";
__n55["operator"] := "/=";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n56["computed"] := true;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "base";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "prop";
__n56["property"] := __n58;
__n55["left"] := __n56;
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "expr";
__n59["callee"] := __n60;
__n61 := [  ];
__n59["arguments"] := __n61;
__n55["right"] := __n59;
__n54["expression"] := __n55;
__n14 := [ __n15, __n21, __n39, __n54 ];
__n13["body"] := __n14;
__n62 := [ "base", "prop", "expr" ];
__n13["variableDeclarations"] := __n62;
__n63 := [  ];
__n13["functionDeclarations"] := __n63;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n11["body"] := __n13;
__n11["generator"] := false;
__n11["expression"] := false;
__n11["async"] := false;
__n9 := [ __n10, __n11 ];
__n5["arguments"] := __n9;
__n4["expression"] := __n5;
__n1 := [ __n2, __n4 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n64 := [  ];
__n0["variableDeclarations"] := __n64;
__n66 := {  };
__n66["type"] := "FunctionDeclaration";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "DummyError";
__n66["id"] := __n67;
__n68 := [  ];
__n66["params"] := __n68;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n70 := [  ];
__n69["body"] := __n70;
__n71 := [  ];
__n69["variableDeclarations"] := __n71;
__n72 := [  ];
__n69["functionDeclarations"] := __n72;
__n69["codeType"] := "function";
__n69["strict"] := false;
__n66["body"] := __n69;
__n66["generator"] := false;
__n66["expression"] := false;
__n66["async"] := false;
__n65 := [ __n66 ];
__n0["functionDeclarations"] := __n65;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}