function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "DummyError";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "assert";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "throws";
__n8["raw"] := "\"throws\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "DummyError";
__n11 := {  };
__n11["type"] := "FunctionExpression";
__n11["id"] := null;
__n12 := [  ];
__n11["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "base";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "undefined";
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n20 := {  };
__n20["type"] := "VariableDeclaration";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "prop";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "FunctionExpression";
__n24["id"] := null;
__n25 := [  ];
__n24["params"] := __n25;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ThrowStatement";
__n29 := {  };
__n29["type"] := "NewExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "DummyError";
__n29["callee"] := __n30;
__n31 := [  ];
__n29["arguments"] := __n31;
__n28["argument"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n32 := [  ];
__n26["variableDeclarations"] := __n32;
__n33 := [  ];
__n26["functionDeclarations"] := __n33;
__n26["codeType"] := "function";
__n26["strict"] := false;
__n24["body"] := __n26;
__n24["generator"] := false;
__n24["expression"] := false;
__n24["async"] := false;
__n22["init"] := __n24;
__n21 := [ __n22 ];
__n20["declarations"] := __n21;
__n20["kind"] := "var";
__n34 := {  };
__n34["type"] := "VariableDeclaration";
__n36 := {  };
__n36["type"] := "VariableDeclarator";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "expr";
__n36["id"] := __n37;
__n38 := {  };
__n38["type"] := "FunctionExpression";
__n38["id"] := null;
__n39 := [  ];
__n38["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "right-hand side expression evaluated";
__n46["raw"] := "\"right-hand side expression evaluated\"";
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n47 := [  ];
__n40["variableDeclarations"] := __n47;
__n48 := [  ];
__n40["functionDeclarations"] := __n48;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n38["body"] := __n40;
__n38["generator"] := false;
__n38["expression"] := false;
__n38["async"] := false;
__n36["init"] := __n38;
__n35 := [ __n36 ];
__n34["declarations"] := __n35;
__n34["kind"] := "var";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "AssignmentExpression";
__n50["operator"] := "<<=";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n51["computed"] := true;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "base";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "prop";
__n53["callee"] := __n54;
__n55 := [  ];
__n53["arguments"] := __n55;
__n51["property"] := __n53;
__n50["left"] := __n51;
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "expr";
__n56["callee"] := __n57;
__n58 := [  ];
__n56["arguments"] := __n58;
__n50["right"] := __n56;
__n49["expression"] := __n50;
__n14 := [ __n15, __n20, __n34, __n49 ];
__n13["body"] := __n14;
__n59 := [ "base", "prop", "expr" ];
__n13["variableDeclarations"] := __n59;
__n60 := [  ];
__n13["functionDeclarations"] := __n60;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n11["body"] := __n13;
__n11["generator"] := false;
__n11["expression"] := false;
__n11["async"] := false;
__n9 := [ __n10, __n11 ];
__n5["arguments"] := __n9;
__n4["expression"] := __n5;
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "assert";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "throws";
__n65["raw"] := "\"throws\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "TypeError";
__n68 := {  };
__n68["type"] := "FunctionExpression";
__n68["id"] := null;
__n69 := [  ];
__n68["params"] := __n69;
__n70 := {  };
__n70["type"] := "BlockStatement";
__n72 := {  };
__n72["type"] := "VariableDeclaration";
__n74 := {  };
__n74["type"] := "VariableDeclarator";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "base";
__n74["id"] := __n75;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "undefined";
__n74["init"] := __n76;
__n73 := [ __n74 ];
__n72["declarations"] := __n73;
__n72["kind"] := "var";
__n77 := {  };
__n77["type"] := "VariableDeclaration";
__n79 := {  };
__n79["type"] := "VariableDeclarator";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "prop";
__n79["id"] := __n80;
__n81 := {  };
__n81["type"] := "ObjectExpression";
__n83 := {  };
__n83["type"] := "Property";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "toString";
__n83["key"] := __n84;
__n85 := {  };
__n85["type"] := "FunctionExpression";
__n85["id"] := null;
__n86 := [  ];
__n85["params"] := __n86;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "$ERROR";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "property key evaluated";
__n93["raw"] := "\"property key evaluated\"";
__n92 := [ __n93 ];
__n90["arguments"] := __n92;
__n89["expression"] := __n90;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n94 := [  ];
__n87["variableDeclarations"] := __n94;
__n95 := [  ];
__n87["functionDeclarations"] := __n95;
__n87["codeType"] := "function";
__n87["strict"] := false;
__n85["body"] := __n87;
__n85["generator"] := false;
__n85["expression"] := false;
__n85["async"] := false;
__n83["value"] := __n85;
__n83["computed"] := false;
__n83["kind"] := "init";
__n83["shorthand"] := false;
__n82 := [ __n83 ];
__n81["properties"] := __n82;
__n79["init"] := __n81;
__n78 := [ __n79 ];
__n77["declarations"] := __n78;
__n77["kind"] := "var";
__n96 := {  };
__n96["type"] := "VariableDeclaration";
__n98 := {  };
__n98["type"] := "VariableDeclarator";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "expr";
__n98["id"] := __n99;
__n100 := {  };
__n100["type"] := "FunctionExpression";
__n100["id"] := null;
__n101 := [  ];
__n100["params"] := __n101;
__n102 := {  };
__n102["type"] := "BlockStatement";
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "$ERROR";
__n105["callee"] := __n106;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "right-hand side expression evaluated";
__n108["raw"] := "\"right-hand side expression evaluated\"";
__n107 := [ __n108 ];
__n105["arguments"] := __n107;
__n104["expression"] := __n105;
__n103 := [ __n104 ];
__n102["body"] := __n103;
__n109 := [  ];
__n102["variableDeclarations"] := __n109;
__n110 := [  ];
__n102["functionDeclarations"] := __n110;
__n102["codeType"] := "function";
__n102["strict"] := false;
__n100["body"] := __n102;
__n100["generator"] := false;
__n100["expression"] := false;
__n100["async"] := false;
__n98["init"] := __n100;
__n97 := [ __n98 ];
__n96["declarations"] := __n97;
__n96["kind"] := "var";
__n111 := {  };
__n111["type"] := "ExpressionStatement";
__n112 := {  };
__n112["type"] := "AssignmentExpression";
__n112["operator"] := "<<=";
__n113 := {  };
__n113["type"] := "MemberExpression";
__n113["computed"] := true;
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "base";
__n113["object"] := __n114;
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "prop";
__n113["property"] := __n115;
__n112["left"] := __n113;
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "expr";
__n116["callee"] := __n117;
__n118 := [  ];
__n116["arguments"] := __n118;
__n112["right"] := __n116;
__n111["expression"] := __n112;
__n71 := [ __n72, __n77, __n96, __n111 ];
__n70["body"] := __n71;
__n119 := [ "base", "prop", "expr" ];
__n70["variableDeclarations"] := __n119;
__n120 := [  ];
__n70["functionDeclarations"] := __n120;
__n70["codeType"] := "function";
__n70["strict"] := false;
__n68["body"] := __n70;
__n68["generator"] := false;
__n68["expression"] := false;
__n68["async"] := false;
__n66 := [ __n67, __n68 ];
__n62["arguments"] := __n66;
__n61["expression"] := __n62;
__n1 := [ __n2, __n4, __n61 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n121 := [  ];
__n0["variableDeclarations"] := __n121;
__n123 := {  };
__n123["type"] := "FunctionDeclaration";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "DummyError";
__n123["id"] := __n124;
__n125 := [  ];
__n123["params"] := __n125;
__n126 := {  };
__n126["type"] := "BlockStatement";
__n127 := [  ];
__n126["body"] := __n127;
__n128 := [  ];
__n126["variableDeclarations"] := __n128;
__n129 := [  ];
__n126["functionDeclarations"] := __n129;
__n126["codeType"] := "function";
__n126["strict"] := false;
__n123["body"] := __n126;
__n123["generator"] := false;
__n123["expression"] := false;
__n123["async"] := false;
__n122 := [ __n123 ];
__n0["functionDeclarations"] := __n122;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}