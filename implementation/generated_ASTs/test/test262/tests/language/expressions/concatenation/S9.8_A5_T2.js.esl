function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "+";
__n5 := {  };
__n5["type"] := "NewExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Number";
__n5["callee"] := __n6;
__n7 := [  ];
__n5["arguments"] := __n7;
__n4["left"] := __n5;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "";
__n8["raw"] := "\"\"";
__n4["right"] := __n8;
__n3["left"] := __n4;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "0";
__n9["raw"] := "\"0\"";
__n3["right"] := __n9;
__n2["test"] := __n3;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "$ERROR";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "+";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "#1: new Number() + \"\" === \"0\". Actual: ";
__n17["raw"] := "'#1: new Number() + \"\" === \"0\". Actual: '";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "+";
__n19 := {  };
__n19["type"] := "NewExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Number";
__n19["callee"] := __n20;
__n21 := [  ];
__n19["arguments"] := __n21;
__n18["left"] := __n19;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "";
__n22["raw"] := "\"\"";
__n18["right"] := __n22;
__n16["right"] := __n18;
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["expression"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n2["consequent"] := __n10;
__n2["alternate"] := null;
__n23 := {  };
__n23["type"] := "IfStatement";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "!==";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "+";
__n26 := {  };
__n26["type"] := "NewExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Number";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 0.;
__n29["raw"] := "0";
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["left"] := __n26;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "";
__n30["raw"] := "\"\"";
__n25["right"] := __n30;
__n24["left"] := __n25;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "0";
__n31["raw"] := "\"0\"";
__n24["right"] := __n31;
__n23["test"] := __n24;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "$ERROR";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "+";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "#2: new Number(0) + \"\" === \"0\". Actual: ";
__n39["raw"] := "'#2: new Number(0) + \"\" === \"0\". Actual: '";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "+";
__n41 := {  };
__n41["type"] := "NewExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Number";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 0.;
__n44["raw"] := "0";
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n40["left"] := __n41;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "";
__n45["raw"] := "\"\"";
__n40["right"] := __n45;
__n38["right"] := __n40;
__n37 := [ __n38 ];
__n35["arguments"] := __n37;
__n34["expression"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n23["consequent"] := __n32;
__n23["alternate"] := null;
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "!==";
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "+";
__n49 := {  };
__n49["type"] := "NewExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "Number";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "Number";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "NaN";
__n54["raw"] := "\"NaN\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["left"] := __n49;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "";
__n55["raw"] := "\"\"";
__n48["right"] := __n55;
__n47["left"] := __n48;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "NaN";
__n56["raw"] := "\"NaN\"";
__n47["right"] := __n56;
__n46["test"] := __n47;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "$ERROR";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "+";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#3: new Number(Number.NaN) + \"\" === \"NaN\". Actual: ";
__n64["raw"] := "'#3: new Number(Number.NaN) + \"\" === \"NaN\". Actual: '";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "+";
__n66 := {  };
__n66["type"] := "NewExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "Number";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "Number";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "NaN";
__n71["raw"] := "\"NaN\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["left"] := __n66;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "";
__n72["raw"] := "\"\"";
__n65["right"] := __n72;
__n63["right"] := __n65;
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n46["consequent"] := __n57;
__n46["alternate"] := null;
__n73 := {  };
__n73["type"] := "IfStatement";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "!==";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "+";
__n76 := {  };
__n76["type"] := "NewExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "Number";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 'null;
__n79["raw"] := "\"'null\"";
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["left"] := __n76;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "";
__n80["raw"] := "\"\"";
__n75["right"] := __n80;
__n74["left"] := __n75;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "0";
__n81["raw"] := "\"0\"";
__n74["right"] := __n81;
__n73["test"] := __n74;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$ERROR";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "+";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "#4: new Number(null) + \"\" === \"0\". Actual: ";
__n89["raw"] := "'#4: new Number(null) + \"\" === \"0\". Actual: '";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "+";
__n91 := {  };
__n91["type"] := "NewExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "Number";
__n91["callee"] := __n92;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := 'null;
__n94["raw"] := "\"'null\"";
__n93 := [ __n94 ];
__n91["arguments"] := __n93;
__n90["left"] := __n91;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "";
__n95["raw"] := "\"\"";
__n90["right"] := __n95;
__n88["right"] := __n90;
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n73["consequent"] := __n82;
__n73["alternate"] := null;
__n96 := {  };
__n96["type"] := "IfStatement";
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "!==";
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "+";
__n99 := {  };
__n99["type"] := "NewExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "Number";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "UnaryExpression";
__n102["operator"] := "void";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := 0.;
__n103["raw"] := "0";
__n102["argument"] := __n103;
__n102["prefix"] := true;
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["left"] := __n99;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "";
__n104["raw"] := "\"\"";
__n98["right"] := __n104;
__n97["left"] := __n98;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "NaN";
__n105["raw"] := "\"NaN\"";
__n97["right"] := __n105;
__n96["test"] := __n97;
__n106 := {  };
__n106["type"] := "BlockStatement";
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "$ERROR";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "+";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "#5: new Number(void 0) + \"\" === \"NaN. Actual: ";
__n113["raw"] := "'#5: new Number(void 0) + \"\" === \"NaN. Actual: '";
__n112["left"] := __n113;
__n114 := {  };
__n114["type"] := "BinaryExpression";
__n114["operator"] := "+";
__n115 := {  };
__n115["type"] := "NewExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "Number";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "UnaryExpression";
__n118["operator"] := "void";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 0.;
__n119["raw"] := "0";
__n118["argument"] := __n119;
__n118["prefix"] := true;
__n117 := [ __n118 ];
__n115["arguments"] := __n117;
__n114["left"] := __n115;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "";
__n120["raw"] := "\"\"";
__n114["right"] := __n120;
__n112["right"] := __n114;
__n111 := [ __n112 ];
__n109["arguments"] := __n111;
__n108["expression"] := __n109;
__n107 := [ __n108 ];
__n106["body"] := __n107;
__n96["consequent"] := __n106;
__n96["alternate"] := null;
__n121 := {  };
__n121["type"] := "IfStatement";
__n122 := {  };
__n122["type"] := "BinaryExpression";
__n122["operator"] := "!==";
__n123 := {  };
__n123["type"] := "BinaryExpression";
__n123["operator"] := "+";
__n124 := {  };
__n124["type"] := "NewExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "Number";
__n124["callee"] := __n125;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := true;
__n127["raw"] := "true";
__n126 := [ __n127 ];
__n124["arguments"] := __n126;
__n123["left"] := __n124;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := "";
__n128["raw"] := "\"\"";
__n123["right"] := __n128;
__n122["left"] := __n123;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "1";
__n129["raw"] := "\"1\"";
__n122["right"] := __n129;
__n121["test"] := __n122;
__n130 := {  };
__n130["type"] := "BlockStatement";
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "$ERROR";
__n133["callee"] := __n134;
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "+";
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "#6: new Number(true) + \"\" === \"1\". Actual: ";
__n137["raw"] := "'#6: new Number(true) + \"\" === \"1\". Actual: '";
__n136["left"] := __n137;
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "+";
__n139 := {  };
__n139["type"] := "NewExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "Number";
__n139["callee"] := __n140;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := true;
__n142["raw"] := "true";
__n141 := [ __n142 ];
__n139["arguments"] := __n141;
__n138["left"] := __n139;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := "";
__n143["raw"] := "\"\"";
__n138["right"] := __n143;
__n136["right"] := __n138;
__n135 := [ __n136 ];
__n133["arguments"] := __n135;
__n132["expression"] := __n133;
__n131 := [ __n132 ];
__n130["body"] := __n131;
__n121["consequent"] := __n130;
__n121["alternate"] := null;
__n144 := {  };
__n144["type"] := "IfStatement";
__n145 := {  };
__n145["type"] := "BinaryExpression";
__n145["operator"] := "!==";
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "+";
__n147 := {  };
__n147["type"] := "NewExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "Number";
__n147["callee"] := __n148;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := false;
__n150["raw"] := "false";
__n149 := [ __n150 ];
__n147["arguments"] := __n149;
__n146["left"] := __n147;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "";
__n151["raw"] := "\"\"";
__n146["right"] := __n151;
__n145["left"] := __n146;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := "0";
__n152["raw"] := "\"0\"";
__n145["right"] := __n152;
__n144["test"] := __n145;
__n153 := {  };
__n153["type"] := "BlockStatement";
__n155 := {  };
__n155["type"] := "ExpressionStatement";
__n156 := {  };
__n156["type"] := "CallExpression";
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "$ERROR";
__n156["callee"] := __n157;
__n159 := {  };
__n159["type"] := "BinaryExpression";
__n159["operator"] := "+";
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := "#7: new Number(false) + \"\" === \"0\". Actual: ";
__n160["raw"] := "'#7: new Number(false) + \"\" === \"0\". Actual: '";
__n159["left"] := __n160;
__n161 := {  };
__n161["type"] := "BinaryExpression";
__n161["operator"] := "+";
__n162 := {  };
__n162["type"] := "NewExpression";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "Number";
__n162["callee"] := __n163;
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := false;
__n165["raw"] := "false";
__n164 := [ __n165 ];
__n162["arguments"] := __n164;
__n161["left"] := __n162;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "";
__n166["raw"] := "\"\"";
__n161["right"] := __n166;
__n159["right"] := __n161;
__n158 := [ __n159 ];
__n156["arguments"] := __n158;
__n155["expression"] := __n156;
__n154 := [ __n155 ];
__n153["body"] := __n154;
__n144["consequent"] := __n153;
__n144["alternate"] := null;
__n167 := {  };
__n167["type"] := "IfStatement";
__n168 := {  };
__n168["type"] := "BinaryExpression";
__n168["operator"] := "!==";
__n169 := {  };
__n169["type"] := "BinaryExpression";
__n169["operator"] := "+";
__n170 := {  };
__n170["type"] := "NewExpression";
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "Boolean";
__n170["callee"] := __n171;
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := true;
__n173["raw"] := "true";
__n172 := [ __n173 ];
__n170["arguments"] := __n172;
__n169["left"] := __n170;
__n174 := {  };
__n174["type"] := "Literal";
__n174["value"] := "";
__n174["raw"] := "\"\"";
__n169["right"] := __n174;
__n168["left"] := __n169;
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := "true";
__n175["raw"] := "\"true\"";
__n168["right"] := __n175;
__n167["test"] := __n168;
__n176 := {  };
__n176["type"] := "BlockStatement";
__n178 := {  };
__n178["type"] := "ExpressionStatement";
__n179 := {  };
__n179["type"] := "CallExpression";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "$ERROR";
__n179["callee"] := __n180;
__n182 := {  };
__n182["type"] := "BinaryExpression";
__n182["operator"] := "+";
__n183 := {  };
__n183["type"] := "Literal";
__n183["value"] := "#8: new Boolean(true) + \"\" === \"true\". Actual: ";
__n183["raw"] := "'#8: new Boolean(true) + \"\" === \"true\". Actual: '";
__n182["left"] := __n183;
__n184 := {  };
__n184["type"] := "BinaryExpression";
__n184["operator"] := "+";
__n185 := {  };
__n185["type"] := "NewExpression";
__n186 := {  };
__n186["type"] := "Identifier";
__n186["name"] := "Boolean";
__n185["callee"] := __n186;
__n188 := {  };
__n188["type"] := "Literal";
__n188["value"] := true;
__n188["raw"] := "true";
__n187 := [ __n188 ];
__n185["arguments"] := __n187;
__n184["left"] := __n185;
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := "";
__n189["raw"] := "\"\"";
__n184["right"] := __n189;
__n182["right"] := __n184;
__n181 := [ __n182 ];
__n179["arguments"] := __n181;
__n178["expression"] := __n179;
__n177 := [ __n178 ];
__n176["body"] := __n177;
__n167["consequent"] := __n176;
__n167["alternate"] := null;
__n190 := {  };
__n190["type"] := "IfStatement";
__n191 := {  };
__n191["type"] := "BinaryExpression";
__n191["operator"] := "!==";
__n192 := {  };
__n192["type"] := "BinaryExpression";
__n192["operator"] := "+";
__n193 := {  };
__n193["type"] := "NewExpression";
__n194 := {  };
__n194["type"] := "Identifier";
__n194["name"] := "Boolean";
__n193["callee"] := __n194;
__n196 := {  };
__n196["type"] := "Literal";
__n196["value"] := false;
__n196["raw"] := "false";
__n195 := [ __n196 ];
__n193["arguments"] := __n195;
__n192["left"] := __n193;
__n197 := {  };
__n197["type"] := "Literal";
__n197["value"] := "";
__n197["raw"] := "\"\"";
__n192["right"] := __n197;
__n191["left"] := __n192;
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := "false";
__n198["raw"] := "\"false\"";
__n191["right"] := __n198;
__n190["test"] := __n191;
__n199 := {  };
__n199["type"] := "BlockStatement";
__n201 := {  };
__n201["type"] := "ExpressionStatement";
__n202 := {  };
__n202["type"] := "CallExpression";
__n203 := {  };
__n203["type"] := "Identifier";
__n203["name"] := "$ERROR";
__n202["callee"] := __n203;
__n205 := {  };
__n205["type"] := "BinaryExpression";
__n205["operator"] := "+";
__n206 := {  };
__n206["type"] := "Literal";
__n206["value"] := "#9: Number(new Boolean(false)) === \"false\". Actual: ";
__n206["raw"] := "'#9: Number(new Boolean(false)) === \"false\". Actual: '";
__n205["left"] := __n206;
__n207 := {  };
__n207["type"] := "CallExpression";
__n208 := {  };
__n208["type"] := "Identifier";
__n208["name"] := "Number";
__n207["callee"] := __n208;
__n210 := {  };
__n210["type"] := "NewExpression";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "Boolean";
__n210["callee"] := __n211;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := false;
__n213["raw"] := "false";
__n212 := [ __n213 ];
__n210["arguments"] := __n212;
__n209 := [ __n210 ];
__n207["arguments"] := __n209;
__n205["right"] := __n207;
__n204 := [ __n205 ];
__n202["arguments"] := __n204;
__n201["expression"] := __n202;
__n200 := [ __n201 ];
__n199["body"] := __n200;
__n190["consequent"] := __n199;
__n190["alternate"] := null;
__n214 := {  };
__n214["type"] := "IfStatement";
__n215 := {  };
__n215["type"] := "BinaryExpression";
__n215["operator"] := "!==";
__n216 := {  };
__n216["type"] := "BinaryExpression";
__n216["operator"] := "+";
__n217 := {  };
__n217["type"] := "NewExpression";
__n218 := {  };
__n218["type"] := "Identifier";
__n218["name"] := "Array";
__n217["callee"] := __n218;
__n220 := {  };
__n220["type"] := "Literal";
__n220["value"] := 2.;
__n220["raw"] := "2";
__n221 := {  };
__n221["type"] := "Literal";
__n221["value"] := 4.;
__n221["raw"] := "4";
__n222 := {  };
__n222["type"] := "Literal";
__n222["value"] := 8.;
__n222["raw"] := "8";
__n223 := {  };
__n223["type"] := "Literal";
__n223["value"] := 16.;
__n223["raw"] := "16";
__n224 := {  };
__n224["type"] := "Literal";
__n224["value"] := 32.;
__n224["raw"] := "32";
__n219 := [ __n220, __n221, __n222, __n223, __n224 ];
__n217["arguments"] := __n219;
__n216["left"] := __n217;
__n225 := {  };
__n225["type"] := "Literal";
__n225["value"] := "";
__n225["raw"] := "\"\"";
__n216["right"] := __n225;
__n215["left"] := __n216;
__n226 := {  };
__n226["type"] := "Literal";
__n226["value"] := "2,4,8,16,32";
__n226["raw"] := "\"2,4,8,16,32\"";
__n215["right"] := __n226;
__n214["test"] := __n215;
__n227 := {  };
__n227["type"] := "BlockStatement";
__n229 := {  };
__n229["type"] := "ExpressionStatement";
__n230 := {  };
__n230["type"] := "CallExpression";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "$ERROR";
__n230["callee"] := __n231;
__n233 := {  };
__n233["type"] := "BinaryExpression";
__n233["operator"] := "+";
__n234 := {  };
__n234["type"] := "Literal";
__n234["value"] := "#10: new Array(2,4,8,16,32) + \"\" === \"2,4,8,16,32\". Actual: ";
__n234["raw"] := "'#10: new Array(2,4,8,16,32) + \"\" === \"2,4,8,16,32\". Actual: '";
__n233["left"] := __n234;
__n235 := {  };
__n235["type"] := "BinaryExpression";
__n235["operator"] := "+";
__n236 := {  };
__n236["type"] := "NewExpression";
__n237 := {  };
__n237["type"] := "Identifier";
__n237["name"] := "Array";
__n236["callee"] := __n237;
__n239 := {  };
__n239["type"] := "Literal";
__n239["value"] := 2.;
__n239["raw"] := "2";
__n240 := {  };
__n240["type"] := "Literal";
__n240["value"] := 4.;
__n240["raw"] := "4";
__n241 := {  };
__n241["type"] := "Literal";
__n241["value"] := 8.;
__n241["raw"] := "8";
__n242 := {  };
__n242["type"] := "Literal";
__n242["value"] := 16.;
__n242["raw"] := "16";
__n243 := {  };
__n243["type"] := "Literal";
__n243["value"] := 32.;
__n243["raw"] := "32";
__n238 := [ __n239, __n240, __n241, __n242, __n243 ];
__n236["arguments"] := __n238;
__n235["left"] := __n236;
__n244 := {  };
__n244["type"] := "Literal";
__n244["value"] := "";
__n244["raw"] := "\"\"";
__n235["right"] := __n244;
__n233["right"] := __n235;
__n232 := [ __n233 ];
__n230["arguments"] := __n232;
__n229["expression"] := __n230;
__n228 := [ __n229 ];
__n227["body"] := __n228;
__n214["consequent"] := __n227;
__n214["alternate"] := null;
__n245 := {  };
__n245["type"] := "VariableDeclaration";
__n247 := {  };
__n247["type"] := "VariableDeclarator";
__n248 := {  };
__n248["type"] := "Identifier";
__n248["name"] := "myobj1";
__n247["id"] := __n248;
__n249 := {  };
__n249["type"] := "ObjectExpression";
__n251 := {  };
__n251["type"] := "Property";
__n252 := {  };
__n252["type"] := "Identifier";
__n252["name"] := "toNumber";
__n251["key"] := __n252;
__n253 := {  };
__n253["type"] := "FunctionExpression";
__n253["id"] := null;
__n254 := [  ];
__n253["params"] := __n254;
__n255 := {  };
__n255["type"] := "BlockStatement";
__n257 := {  };
__n257["type"] := "ReturnStatement";
__n258 := {  };
__n258["type"] := "Literal";
__n258["value"] := 12345.;
__n258["raw"] := "12345";
__n257["argument"] := __n258;
__n256 := [ __n257 ];
__n255["body"] := __n256;
__n259 := [  ];
__n255["variableDeclarations"] := __n259;
__n260 := [  ];
__n255["functionDeclarations"] := __n260;
__n255["codeType"] := "function";
__n255["strict"] := false;
__n253["body"] := __n255;
__n253["generator"] := false;
__n253["expression"] := false;
__n253["async"] := false;
__n251["value"] := __n253;
__n251["computed"] := false;
__n251["kind"] := "init";
__n251["shorthand"] := false;
__n261 := {  };
__n261["type"] := "Property";
__n262 := {  };
__n262["type"] := "Identifier";
__n262["name"] := "toString";
__n261["key"] := __n262;
__n263 := {  };
__n263["type"] := "FunctionExpression";
__n263["id"] := null;
__n264 := [  ];
__n263["params"] := __n264;
__n265 := {  };
__n265["type"] := "BlockStatement";
__n267 := {  };
__n267["type"] := "ReturnStatement";
__n268 := {  };
__n268["type"] := "Literal";
__n268["value"] := 67890.;
__n268["raw"] := "67890";
__n267["argument"] := __n268;
__n266 := [ __n267 ];
__n265["body"] := __n266;
__n269 := [  ];
__n265["variableDeclarations"] := __n269;
__n270 := [  ];
__n265["functionDeclarations"] := __n270;
__n265["codeType"] := "function";
__n265["strict"] := false;
__n263["body"] := __n265;
__n263["generator"] := false;
__n263["expression"] := false;
__n263["async"] := false;
__n261["value"] := __n263;
__n261["computed"] := false;
__n261["kind"] := "init";
__n261["shorthand"] := false;
__n271 := {  };
__n271["type"] := "Property";
__n272 := {  };
__n272["type"] := "Identifier";
__n272["name"] := "valueOf";
__n271["key"] := __n272;
__n273 := {  };
__n273["type"] := "FunctionExpression";
__n273["id"] := null;
__n274 := [  ];
__n273["params"] := __n274;
__n275 := {  };
__n275["type"] := "BlockStatement";
__n277 := {  };
__n277["type"] := "ReturnStatement";
__n278 := {  };
__n278["type"] := "Literal";
__n278["value"] := "[object MyObj]";
__n278["raw"] := "\"[object MyObj]\"";
__n277["argument"] := __n278;
__n276 := [ __n277 ];
__n275["body"] := __n276;
__n279 := [  ];
__n275["variableDeclarations"] := __n279;
__n280 := [  ];
__n275["functionDeclarations"] := __n280;
__n275["codeType"] := "function";
__n275["strict"] := false;
__n273["body"] := __n275;
__n273["generator"] := false;
__n273["expression"] := false;
__n273["async"] := false;
__n271["value"] := __n273;
__n271["computed"] := false;
__n271["kind"] := "init";
__n271["shorthand"] := false;
__n250 := [ __n251, __n261, __n271 ];
__n249["properties"] := __n250;
__n247["init"] := __n249;
__n246 := [ __n247 ];
__n245["declarations"] := __n246;
__n245["kind"] := "var";
__n281 := {  };
__n281["type"] := "IfStatement";
__n282 := {  };
__n282["type"] := "BinaryExpression";
__n282["operator"] := "!==";
__n283 := {  };
__n283["type"] := "BinaryExpression";
__n283["operator"] := "+";
__n284 := {  };
__n284["type"] := "Identifier";
__n284["name"] := "myobj1";
__n283["left"] := __n284;
__n285 := {  };
__n285["type"] := "Literal";
__n285["value"] := "";
__n285["raw"] := "\"\"";
__n283["right"] := __n285;
__n282["left"] := __n283;
__n286 := {  };
__n286["type"] := "Literal";
__n286["value"] := "[object MyObj]";
__n286["raw"] := "\"[object MyObj]\"";
__n282["right"] := __n286;
__n281["test"] := __n282;
__n287 := {  };
__n287["type"] := "BlockStatement";
__n289 := {  };
__n289["type"] := "ExpressionStatement";
__n290 := {  };
__n290["type"] := "CallExpression";
__n291 := {  };
__n291["type"] := "Identifier";
__n291["name"] := "$ERROR";
__n290["callee"] := __n291;
__n293 := {  };
__n293["type"] := "BinaryExpression";
__n293["operator"] := "+";
__n294 := {  };
__n294["type"] := "Literal";
__n294["value"] := "#11: myobj1 + \"\" calls ToPrimitive with hint Number. Exptected: \"[object MyObj]\". Actual: ";
__n294["raw"] := "'#11: myobj1 + \"\" calls ToPrimitive with hint Number. Exptected: \"[object MyObj]\". Actual: '";
__n293["left"] := __n294;
__n295 := {  };
__n295["type"] := "BinaryExpression";
__n295["operator"] := "+";
__n296 := {  };
__n296["type"] := "Identifier";
__n296["name"] := "myobj1";
__n295["left"] := __n296;
__n297 := {  };
__n297["type"] := "Literal";
__n297["value"] := "";
__n297["raw"] := "\"\"";
__n295["right"] := __n297;
__n293["right"] := __n295;
__n292 := [ __n293 ];
__n290["arguments"] := __n292;
__n289["expression"] := __n290;
__n288 := [ __n289 ];
__n287["body"] := __n288;
__n281["consequent"] := __n287;
__n281["alternate"] := null;
__n298 := {  };
__n298["type"] := "VariableDeclaration";
__n300 := {  };
__n300["type"] := "VariableDeclarator";
__n301 := {  };
__n301["type"] := "Identifier";
__n301["name"] := "myobj2";
__n300["id"] := __n301;
__n302 := {  };
__n302["type"] := "ObjectExpression";
__n304 := {  };
__n304["type"] := "Property";
__n305 := {  };
__n305["type"] := "Identifier";
__n305["name"] := "toNumber";
__n304["key"] := __n305;
__n306 := {  };
__n306["type"] := "FunctionExpression";
__n306["id"] := null;
__n307 := [  ];
__n306["params"] := __n307;
__n308 := {  };
__n308["type"] := "BlockStatement";
__n310 := {  };
__n310["type"] := "ReturnStatement";
__n311 := {  };
__n311["type"] := "Literal";
__n311["value"] := 12345.;
__n311["raw"] := "12345";
__n310["argument"] := __n311;
__n309 := [ __n310 ];
__n308["body"] := __n309;
__n312 := [  ];
__n308["variableDeclarations"] := __n312;
__n313 := [  ];
__n308["functionDeclarations"] := __n313;
__n308["codeType"] := "function";
__n308["strict"] := false;
__n306["body"] := __n308;
__n306["generator"] := false;
__n306["expression"] := false;
__n306["async"] := false;
__n304["value"] := __n306;
__n304["computed"] := false;
__n304["kind"] := "init";
__n304["shorthand"] := false;
__n314 := {  };
__n314["type"] := "Property";
__n315 := {  };
__n315["type"] := "Identifier";
__n315["name"] := "toString";
__n314["key"] := __n315;
__n316 := {  };
__n316["type"] := "FunctionExpression";
__n316["id"] := null;
__n317 := [  ];
__n316["params"] := __n317;
__n318 := {  };
__n318["type"] := "BlockStatement";
__n320 := {  };
__n320["type"] := "ReturnStatement";
__n321 := {  };
__n321["type"] := "Literal";
__n321["value"] := 67890.;
__n321["raw"] := "67890";
__n320["argument"] := __n321;
__n319 := [ __n320 ];
__n318["body"] := __n319;
__n322 := [  ];
__n318["variableDeclarations"] := __n322;
__n323 := [  ];
__n318["functionDeclarations"] := __n323;
__n318["codeType"] := "function";
__n318["strict"] := false;
__n316["body"] := __n318;
__n316["generator"] := false;
__n316["expression"] := false;
__n316["async"] := false;
__n314["value"] := __n316;
__n314["computed"] := false;
__n314["kind"] := "init";
__n314["shorthand"] := false;
__n324 := {  };
__n324["type"] := "Property";
__n325 := {  };
__n325["type"] := "Identifier";
__n325["name"] := "valueOf";
__n324["key"] := __n325;
__n326 := {  };
__n326["type"] := "FunctionExpression";
__n326["id"] := null;
__n327 := [  ];
__n326["params"] := __n327;
__n328 := {  };
__n328["type"] := "BlockStatement";
__n330 := {  };
__n330["type"] := "ReturnStatement";
__n331 := {  };
__n331["type"] := "ObjectExpression";
__n332 := [  ];
__n331["properties"] := __n332;
__n330["argument"] := __n331;
__n329 := [ __n330 ];
__n328["body"] := __n329;
__n333 := [  ];
__n328["variableDeclarations"] := __n333;
__n334 := [  ];
__n328["functionDeclarations"] := __n334;
__n328["codeType"] := "function";
__n328["strict"] := false;
__n326["body"] := __n328;
__n326["generator"] := false;
__n326["expression"] := false;
__n326["async"] := false;
__n324["value"] := __n326;
__n324["computed"] := false;
__n324["kind"] := "init";
__n324["shorthand"] := false;
__n303 := [ __n304, __n314, __n324 ];
__n302["properties"] := __n303;
__n300["init"] := __n302;
__n299 := [ __n300 ];
__n298["declarations"] := __n299;
__n298["kind"] := "var";
__n335 := {  };
__n335["type"] := "IfStatement";
__n336 := {  };
__n336["type"] := "BinaryExpression";
__n336["operator"] := "!==";
__n337 := {  };
__n337["type"] := "BinaryExpression";
__n337["operator"] := "+";
__n338 := {  };
__n338["type"] := "Identifier";
__n338["name"] := "myobj2";
__n337["left"] := __n338;
__n339 := {  };
__n339["type"] := "Literal";
__n339["value"] := "";
__n339["raw"] := "\"\"";
__n337["right"] := __n339;
__n336["left"] := __n337;
__n340 := {  };
__n340["type"] := "Literal";
__n340["value"] := "67890";
__n340["raw"] := "\"67890\"";
__n336["right"] := __n340;
__n335["test"] := __n336;
__n341 := {  };
__n341["type"] := "BlockStatement";
__n343 := {  };
__n343["type"] := "ExpressionStatement";
__n344 := {  };
__n344["type"] := "CallExpression";
__n345 := {  };
__n345["type"] := "Identifier";
__n345["name"] := "$ERROR";
__n344["callee"] := __n345;
__n347 := {  };
__n347["type"] := "BinaryExpression";
__n347["operator"] := "+";
__n348 := {  };
__n348["type"] := "Literal";
__n348["value"] := "#12: myobj2 + \"\" calls ToPrimitive with hint Number. Exptected: \"67890\". Actual: ";
__n348["raw"] := "'#12: myobj2 + \"\" calls ToPrimitive with hint Number. Exptected: \"67890\". Actual: '";
__n347["left"] := __n348;
__n349 := {  };
__n349["type"] := "BinaryExpression";
__n349["operator"] := "+";
__n350 := {  };
__n350["type"] := "Identifier";
__n350["name"] := "myobj2";
__n349["left"] := __n350;
__n351 := {  };
__n351["type"] := "Literal";
__n351["value"] := "";
__n351["raw"] := "\"\"";
__n349["right"] := __n351;
__n347["right"] := __n349;
__n346 := [ __n347 ];
__n344["arguments"] := __n346;
__n343["expression"] := __n344;
__n342 := [ __n343 ];
__n341["body"] := __n342;
__n335["consequent"] := __n341;
__n335["alternate"] := null;
__n352 := {  };
__n352["type"] := "VariableDeclaration";
__n354 := {  };
__n354["type"] := "VariableDeclarator";
__n355 := {  };
__n355["type"] := "Identifier";
__n355["name"] := "myobj3";
__n354["id"] := __n355;
__n356 := {  };
__n356["type"] := "ObjectExpression";
__n358 := {  };
__n358["type"] := "Property";
__n359 := {  };
__n359["type"] := "Identifier";
__n359["name"] := "toNumber";
__n358["key"] := __n359;
__n360 := {  };
__n360["type"] := "FunctionExpression";
__n360["id"] := null;
__n361 := [  ];
__n360["params"] := __n361;
__n362 := {  };
__n362["type"] := "BlockStatement";
__n364 := {  };
__n364["type"] := "ReturnStatement";
__n365 := {  };
__n365["type"] := "Literal";
__n365["value"] := 12345.;
__n365["raw"] := "12345";
__n364["argument"] := __n365;
__n363 := [ __n364 ];
__n362["body"] := __n363;
__n366 := [  ];
__n362["variableDeclarations"] := __n366;
__n367 := [  ];
__n362["functionDeclarations"] := __n367;
__n362["codeType"] := "function";
__n362["strict"] := false;
__n360["body"] := __n362;
__n360["generator"] := false;
__n360["expression"] := false;
__n360["async"] := false;
__n358["value"] := __n360;
__n358["computed"] := false;
__n358["kind"] := "init";
__n358["shorthand"] := false;
__n357 := [ __n358 ];
__n356["properties"] := __n357;
__n354["init"] := __n356;
__n353 := [ __n354 ];
__n352["declarations"] := __n353;
__n352["kind"] := "var";
__n368 := {  };
__n368["type"] := "IfStatement";
__n369 := {  };
__n369["type"] := "BinaryExpression";
__n369["operator"] := "!==";
__n370 := {  };
__n370["type"] := "BinaryExpression";
__n370["operator"] := "+";
__n371 := {  };
__n371["type"] := "Identifier";
__n371["name"] := "myobj3";
__n370["left"] := __n371;
__n372 := {  };
__n372["type"] := "Literal";
__n372["value"] := "";
__n372["raw"] := "\"\"";
__n370["right"] := __n372;
__n369["left"] := __n370;
__n373 := {  };
__n373["type"] := "Literal";
__n373["value"] := "[object Object]";
__n373["raw"] := "\"[object Object]\"";
__n369["right"] := __n373;
__n368["test"] := __n369;
__n374 := {  };
__n374["type"] := "BlockStatement";
__n376 := {  };
__n376["type"] := "ExpressionStatement";
__n377 := {  };
__n377["type"] := "CallExpression";
__n378 := {  };
__n378["type"] := "Identifier";
__n378["name"] := "$ERROR";
__n377["callee"] := __n378;
__n380 := {  };
__n380["type"] := "BinaryExpression";
__n380["operator"] := "+";
__n381 := {  };
__n381["type"] := "Literal";
__n381["value"] := "#13: myobj3 + \"\" calls ToPrimitive with hint Number.  Exptected: \"[object Object]\". Actual: ";
__n381["raw"] := "'#13: myobj3 + \"\" calls ToPrimitive with hint Number.  Exptected: \"[object Object]\". Actual: '";
__n380["left"] := __n381;
__n382 := {  };
__n382["type"] := "BinaryExpression";
__n382["operator"] := "+";
__n383 := {  };
__n383["type"] := "Identifier";
__n383["name"] := "myobj3";
__n382["left"] := __n383;
__n384 := {  };
__n384["type"] := "Literal";
__n384["value"] := "";
__n384["raw"] := "\"\"";
__n382["right"] := __n384;
__n380["right"] := __n382;
__n379 := [ __n380 ];
__n377["arguments"] := __n379;
__n376["expression"] := __n377;
__n375 := [ __n376 ];
__n374["body"] := __n375;
__n368["consequent"] := __n374;
__n368["alternate"] := null;
__n1 := [ __n2, __n23, __n46, __n73, __n96, __n121, __n144, __n167, __n190, __n214, __n245, __n281, __n298, __n335, __n352, __n368 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n385 := [ "myobj1", "myobj2", "myobj3" ];
__n0["variableDeclarations"] := __n385;
__n386 := [  ];
__n0["functionDeclarations"] := __n386;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}