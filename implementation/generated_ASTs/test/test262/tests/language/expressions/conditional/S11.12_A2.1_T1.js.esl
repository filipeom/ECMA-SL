function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "ConditionalExpression";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := true;
__n5["raw"] := "true";
__n4["test"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["consequent"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := true;
__n7["raw"] := "true";
__n4["alternate"] := __n7;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := false;
__n8["raw"] := "false";
__n3["right"] := __n8;
__n2["test"] := __n3;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "$ERROR";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "#1: (true ? false : true) === false";
__n15["raw"] := "'#1: (true ? false : true) === false'";
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n2["consequent"] := __n9;
__n2["alternate"] := null;
__n16 := {  };
__n16["type"] := "IfStatement";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "!==";
__n18 := {  };
__n18["type"] := "ConditionalExpression";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := false;
__n19["raw"] := "false";
__n18["test"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := false;
__n20["raw"] := "false";
__n18["consequent"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := true;
__n21["raw"] := "true";
__n18["alternate"] := __n21;
__n17["left"] := __n18;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := true;
__n22["raw"] := "true";
__n17["right"] := __n22;
__n16["test"] := __n17;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "$ERROR";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "#2: (false ? false : true) === true";
__n29["raw"] := "'#2: (false ? false : true) === true'";
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n16["consequent"] := __n23;
__n16["alternate"] := null;
__n30 := {  };
__n30["type"] := "VariableDeclaration";
__n32 := {  };
__n32["type"] := "VariableDeclarator";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "x";
__n32["id"] := __n33;
__n34 := {  };
__n34["type"] := "NewExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "Boolean";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := true;
__n37["raw"] := "true";
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n32["init"] := __n34;
__n31 := [ __n32 ];
__n30["declarations"] := __n31;
__n30["kind"] := "var";
__n38 := {  };
__n38["type"] := "VariableDeclaration";
__n40 := {  };
__n40["type"] := "VariableDeclarator";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "y";
__n40["id"] := __n41;
__n42 := {  };
__n42["type"] := "NewExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Boolean";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := false;
__n45["raw"] := "false";
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n40["init"] := __n42;
__n39 := [ __n40 ];
__n38["declarations"] := __n39;
__n38["kind"] := "var";
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "!==";
__n48 := {  };
__n48["type"] := "ConditionalExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "x";
__n48["test"] := __n49;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "y";
__n48["consequent"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := true;
__n51["raw"] := "true";
__n48["alternate"] := __n51;
__n47["left"] := __n48;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "y";
__n47["right"] := __n52;
__n46["test"] := __n47;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "$ERROR";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#3: var x = new Boolean(true); var y = new Boolean(false); (x ? y : true) === y";
__n59["raw"] := "'#3: var x = new Boolean(true); var y = new Boolean(false); (x ? y : true) === y'";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n46["consequent"] := __n53;
__n46["alternate"] := null;
__n60 := {  };
__n60["type"] := "VariableDeclaration";
__n62 := {  };
__n62["type"] := "VariableDeclarator";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "z";
__n62["id"] := __n63;
__n64 := {  };
__n64["type"] := "NewExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Boolean";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := true;
__n67["raw"] := "true";
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n62["init"] := __n64;
__n61 := [ __n62 ];
__n60["declarations"] := __n61;
__n60["kind"] := "var";
__n68 := {  };
__n68["type"] := "IfStatement";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "!==";
__n70 := {  };
__n70["type"] := "ConditionalExpression";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := false;
__n71["raw"] := "false";
__n70["test"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := false;
__n72["raw"] := "false";
__n70["consequent"] := __n72;
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "z";
__n70["alternate"] := __n73;
__n69["left"] := __n70;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "z";
__n69["right"] := __n74;
__n68["test"] := __n69;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "$ERROR";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "#4: var z = new Boolean(true); (false ? false : z) === z";
__n81["raw"] := "'#4: var z = new Boolean(true); (false ? false : z) === z'";
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n68["consequent"] := __n75;
__n68["alternate"] := null;
__n82 := {  };
__n82["type"] := "VariableDeclaration";
__n84 := {  };
__n84["type"] := "VariableDeclarator";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "x";
__n84["id"] := __n85;
__n86 := {  };
__n86["type"] := "NewExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "Boolean";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := true;
__n89["raw"] := "true";
__n88 := [ __n89 ];
__n86["arguments"] := __n88;
__n84["init"] := __n86;
__n83 := [ __n84 ];
__n82["declarations"] := __n83;
__n82["kind"] := "var";
__n90 := {  };
__n90["type"] := "VariableDeclaration";
__n92 := {  };
__n92["type"] := "VariableDeclarator";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "y";
__n92["id"] := __n93;
__n94 := {  };
__n94["type"] := "NewExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "Boolean";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := false;
__n97["raw"] := "false";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n92["init"] := __n94;
__n91 := [ __n92 ];
__n90["declarations"] := __n91;
__n90["kind"] := "var";
__n98 := {  };
__n98["type"] := "VariableDeclaration";
__n100 := {  };
__n100["type"] := "VariableDeclarator";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "z";
__n100["id"] := __n101;
__n102 := {  };
__n102["type"] := "NewExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "Boolean";
__n102["callee"] := __n103;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := true;
__n105["raw"] := "true";
__n104 := [ __n105 ];
__n102["arguments"] := __n104;
__n100["init"] := __n102;
__n99 := [ __n100 ];
__n98["declarations"] := __n99;
__n98["kind"] := "var";
__n106 := {  };
__n106["type"] := "IfStatement";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "!==";
__n108 := {  };
__n108["type"] := "ConditionalExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "x";
__n108["test"] := __n109;
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "y";
__n108["consequent"] := __n110;
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "z";
__n108["alternate"] := __n111;
__n107["left"] := __n108;
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "y";
__n107["right"] := __n112;
__n106["test"] := __n107;
__n113 := {  };
__n113["type"] := "BlockStatement";
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "$ERROR";
__n116["callee"] := __n117;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "#5: var x = new Boolean(true); var y = new Boolean(false); var z = new Boolean(true); (x ? y : z) === y";
__n119["raw"] := "'#5: var x = new Boolean(true); var y = new Boolean(false); var z = new Boolean(true); (x ? y : z) === y'";
__n118 := [ __n119 ];
__n116["arguments"] := __n118;
__n115["expression"] := __n116;
__n114 := [ __n115 ];
__n113["body"] := __n114;
__n106["consequent"] := __n113;
__n106["alternate"] := null;
__n120 := {  };
__n120["type"] := "VariableDeclaration";
__n122 := {  };
__n122["type"] := "VariableDeclarator";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "x";
__n122["id"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := false;
__n124["raw"] := "false";
__n122["init"] := __n124;
__n121 := [ __n122 ];
__n120["declarations"] := __n121;
__n120["kind"] := "var";
__n125 := {  };
__n125["type"] := "VariableDeclaration";
__n127 := {  };
__n127["type"] := "VariableDeclarator";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "y";
__n127["id"] := __n128;
__n129 := {  };
__n129["type"] := "NewExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "Boolean";
__n129["callee"] := __n130;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := false;
__n132["raw"] := "false";
__n131 := [ __n132 ];
__n129["arguments"] := __n131;
__n127["init"] := __n129;
__n126 := [ __n127 ];
__n125["declarations"] := __n126;
__n125["kind"] := "var";
__n133 := {  };
__n133["type"] := "VariableDeclaration";
__n135 := {  };
__n135["type"] := "VariableDeclarator";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "z";
__n135["id"] := __n136;
__n137 := {  };
__n137["type"] := "NewExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "Boolean";
__n137["callee"] := __n138;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := true;
__n140["raw"] := "true";
__n139 := [ __n140 ];
__n137["arguments"] := __n139;
__n135["init"] := __n137;
__n134 := [ __n135 ];
__n133["declarations"] := __n134;
__n133["kind"] := "var";
__n141 := {  };
__n141["type"] := "IfStatement";
__n142 := {  };
__n142["type"] := "BinaryExpression";
__n142["operator"] := "!==";
__n143 := {  };
__n143["type"] := "ConditionalExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "x";
__n143["test"] := __n144;
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "y";
__n143["consequent"] := __n145;
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "z";
__n143["alternate"] := __n146;
__n142["left"] := __n143;
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "z";
__n142["right"] := __n147;
__n141["test"] := __n142;
__n148 := {  };
__n148["type"] := "BlockStatement";
__n150 := {  };
__n150["type"] := "ExpressionStatement";
__n151 := {  };
__n151["type"] := "CallExpression";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "$ERROR";
__n151["callee"] := __n152;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "#6: var x = false; var y = new Boolean(false); var z = new Boolean(true); (x ? y : z) === z";
__n154["raw"] := "'#6: var x = false; var y = new Boolean(false); var z = new Boolean(true); (x ? y : z) === z'";
__n153 := [ __n154 ];
__n151["arguments"] := __n153;
__n150["expression"] := __n151;
__n149 := [ __n150 ];
__n148["body"] := __n149;
__n141["consequent"] := __n148;
__n141["alternate"] := null;
__n1 := [ __n2, __n16, __n30, __n38, __n46, __n60, __n68, __n82, __n90, __n98, __n106, __n120, __n125, __n133, __n141 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n155 := [ "x", "y", "z" ];
__n0["variableDeclarations"] := __n155;
__n156 := [  ];
__n0["functionDeclarations"] := __n156;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}