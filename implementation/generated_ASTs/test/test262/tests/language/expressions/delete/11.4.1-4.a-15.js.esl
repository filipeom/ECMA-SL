function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "a";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 1.;
__n8["raw"] := "1";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 2.;
__n9["raw"] := "2";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 3.;
__n10["raw"] := "3";
__n7 := [ __n8, __n9, __n10 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "AssignmentExpression";
__n12["operator"] := "=";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "a";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "x";
__n15["raw"] := "\"x\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["left"] := __n13;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 10.;
__n16["raw"] := "10";
__n12["right"] := __n16;
__n11["expression"] := __n12;
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "d";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "UnaryExpression";
__n21["operator"] := "delete";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "a";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "x";
__n24["raw"] := "\"x\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["argument"] := __n22;
__n21["prefix"] := true;
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "assert";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "sameValue";
__n29["raw"] := "\"sameValue\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "d";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := true;
__n32["raw"] := "true";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "d";
__n33["raw"] := "'d'";
__n30 := [ __n31, __n32, __n33 ];
__n26["arguments"] := __n30;
__n25["expression"] := __n26;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "assert";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "sameValue";
__n38["raw"] := "\"sameValue\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "a";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "x";
__n42["raw"] := "\"x\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "undefined";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "a.x";
__n44["raw"] := "'a.x'";
__n39 := [ __n40, __n43, __n44 ];
__n35["arguments"] := __n39;
__n34["expression"] := __n35;
__n1 := [ __n2, __n11, __n17, __n25, __n34 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n45 := [ "a", "d" ];
__n0["variableDeclarations"] := __n45;
__n46 := [  ];
__n0["functionDeclarations"] := __n46;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}