function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "foo";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "assert";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "sameValue";
__n8["raw"] := "\"sameValue\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "foo";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 1.;
__n13["raw"] := "1";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 2.;
__n14["raw"] := "2";
__n12 := [ __n13, __n14 ];
__n10["arguments"] := __n12;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := true;
__n15["raw"] := "true";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "foo(1,2)";
__n16["raw"] := "'foo(1,2)'";
__n9 := [ __n10, __n15, __n16 ];
__n5["arguments"] := __n9;
__n4["expression"] := __n5;
__n1 := [ __n2, __n4 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n17 := [  ];
__n0["variableDeclarations"] := __n17;
__n19 := {  };
__n19["type"] := "FunctionDeclaration";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "foo";
__n19["id"] := __n20;
__n21 := [ "a", "b" ];
__n19["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "VariableDeclaration";
__n26 := {  };
__n26["type"] := "VariableDeclarator";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "d";
__n26["id"] := __n27;
__n28 := {  };
__n28["type"] := "UnaryExpression";
__n28["operator"] := "delete";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n29["computed"] := true;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "arguments";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 0.;
__n31["raw"] := "0";
__n29["property"] := __n31;
__n28["argument"] := __n29;
__n28["prefix"] := true;
__n26["init"] := __n28;
__n25 := [ __n26 ];
__n24["declarations"] := __n25;
__n24["kind"] := "var";
__n32 := {  };
__n32["type"] := "ReturnStatement";
__n33 := {  };
__n33["type"] := "LogicalExpression";
__n33["operator"] := "&&";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "===";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "d";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := true;
__n36["raw"] := "true";
__n34["right"] := __n36;
__n33["left"] := __n34;
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "===";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n38["computed"] := true;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "arguments";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 0.;
__n40["raw"] := "0";
__n38["property"] := __n40;
__n37["left"] := __n38;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "undefined";
__n37["right"] := __n41;
__n33["right"] := __n37;
__n32["argument"] := __n33;
__n23 := [ __n24, __n32 ];
__n22["body"] := __n23;
__n42 := [ "d" ];
__n22["variableDeclarations"] := __n42;
__n43 := [  ];
__n22["functionDeclarations"] := __n43;
__n22["codeType"] := "function";
__n22["strict"] := false;
__n19["body"] := __n22;
__n19["generator"] := false;
__n19["expression"] := false;
__n19["async"] := false;
__n18 := [ __n19 ];
__n0["functionDeclarations"] := __n18;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}