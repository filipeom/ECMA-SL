function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "eval";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "delete	0";
__n7["raw"] := "\"delete\\u00090\"";
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := true;
__n8["raw"] := "true";
__n3["right"] := __n8;
__n2["test"] := __n3;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "$ERROR";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "#1: delete\\u00090 === true";
__n15["raw"] := "'#1: delete\\\\u00090 === true'";
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n2["consequent"] := __n9;
__n2["alternate"] := null;
__n16 := {  };
__n16["type"] := "IfStatement";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "!==";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "eval";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "delete0";
__n21["raw"] := "\"delete\\u000B0\"";
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n17["left"] := __n18;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := true;
__n22["raw"] := "true";
__n17["right"] := __n22;
__n16["test"] := __n17;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "$ERROR";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "#2: delete\\u000B0 === true";
__n29["raw"] := "'#2: delete\\\\u000B0 === true'";
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n16["consequent"] := __n23;
__n16["alternate"] := null;
__n30 := {  };
__n30["type"] := "IfStatement";
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "!==";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "eval";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "delete0";
__n35["raw"] := "\"delete\\u000C0\"";
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["left"] := __n32;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := true;
__n36["raw"] := "true";
__n31["right"] := __n36;
__n30["test"] := __n31;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$ERROR";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "#3: delete\\u000C0 === true";
__n43["raw"] := "'#3: delete\\\\u000C0 === true'";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n30["consequent"] := __n37;
__n30["alternate"] := null;
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "eval";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "delete 0";
__n49["raw"] := "\"delete\\u00200\"";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["left"] := __n46;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := true;
__n50["raw"] := "true";
__n45["right"] := __n50;
__n44["test"] := __n45;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "$ERROR";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "#4: delete\\u00200 === true";
__n57["raw"] := "'#4: delete\\\\u00200 === true'";
__n56 := [ __n57 ];
__n54["arguments"] := __n56;
__n53["expression"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n44["consequent"] := __n51;
__n44["alternate"] := null;
__n58 := {  };
__n58["type"] := "IfStatement";
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "!==";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "eval";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "delete 0";
__n63["raw"] := "\"delete\\u00A00\"";
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n59["left"] := __n60;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := true;
__n64["raw"] := "true";
__n59["right"] := __n64;
__n58["test"] := __n59;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "$ERROR";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "#5: delete\\u00A00 === true";
__n71["raw"] := "'#5: delete\\\\u00A00 === true'";
__n70 := [ __n71 ];
__n68["arguments"] := __n70;
__n67["expression"] := __n68;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n58["consequent"] := __n65;
__n58["alternate"] := null;
__n72 := {  };
__n72["type"] := "IfStatement";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "!==";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "eval";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "delete
0";
__n77["raw"] := "\"delete\\u000A0\"";
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["left"] := __n74;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := true;
__n78["raw"] := "true";
__n73["right"] := __n78;
__n72["test"] := __n73;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "$ERROR";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "#6: delete\\u000A0 === true";
__n85["raw"] := "'#6: delete\\\\u000A0 === true'";
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n72["consequent"] := __n79;
__n72["alternate"] := null;
__n86 := {  };
__n86["type"] := "IfStatement";
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "!==";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "eval";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "delete0";
__n91["raw"] := "\"delete\\u000D0\"";
__n90 := [ __n91 ];
__n88["arguments"] := __n90;
__n87["left"] := __n88;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := true;
__n92["raw"] := "true";
__n87["right"] := __n92;
__n86["test"] := __n87;
__n93 := {  };
__n93["type"] := "BlockStatement";
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "CallExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "$ERROR";
__n96["callee"] := __n97;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "#7: delete\\u000D0 === true";
__n99["raw"] := "'#7: delete\\\\u000D0 === true'";
__n98 := [ __n99 ];
__n96["arguments"] := __n98;
__n95["expression"] := __n96;
__n94 := [ __n95 ];
__n93["body"] := __n94;
__n86["consequent"] := __n93;
__n86["alternate"] := null;
__n100 := {  };
__n100["type"] := "IfStatement";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "!==";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "eval";
__n102["callee"] := __n103;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "delete 0";
__n105["raw"] := "\"delete\\u20280\"";
__n104 := [ __n105 ];
__n102["arguments"] := __n104;
__n101["left"] := __n102;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := true;
__n106["raw"] := "true";
__n101["right"] := __n106;
__n100["test"] := __n101;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "$ERROR";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "#8: delete\\u20280 === true";
__n113["raw"] := "'#8: delete\\\\u20280 === true'";
__n112 := [ __n113 ];
__n110["arguments"] := __n112;
__n109["expression"] := __n110;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n100["consequent"] := __n107;
__n100["alternate"] := null;
__n114 := {  };
__n114["type"] := "IfStatement";
__n115 := {  };
__n115["type"] := "BinaryExpression";
__n115["operator"] := "!==";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "eval";
__n116["callee"] := __n117;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "delete 0";
__n119["raw"] := "\"delete\\u20290\"";
__n118 := [ __n119 ];
__n116["arguments"] := __n118;
__n115["left"] := __n116;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := true;
__n120["raw"] := "true";
__n115["right"] := __n120;
__n114["test"] := __n115;
__n121 := {  };
__n121["type"] := "BlockStatement";
__n123 := {  };
__n123["type"] := "ExpressionStatement";
__n124 := {  };
__n124["type"] := "CallExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "$ERROR";
__n124["callee"] := __n125;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "#9: delete\\u20290 === true";
__n127["raw"] := "'#9: delete\\\\u20290 === true'";
__n126 := [ __n127 ];
__n124["arguments"] := __n126;
__n123["expression"] := __n124;
__n122 := [ __n123 ];
__n121["body"] := __n122;
__n114["consequent"] := __n121;
__n114["alternate"] := null;
__n128 := {  };
__n128["type"] := "IfStatement";
__n129 := {  };
__n129["type"] := "BinaryExpression";
__n129["operator"] := "!==";
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "eval";
__n130["callee"] := __n131;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "delete	  
  0";
__n133["raw"] := "\"delete\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20290\"";
__n132 := [ __n133 ];
__n130["arguments"] := __n132;
__n129["left"] := __n130;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := true;
__n134["raw"] := "true";
__n129["right"] := __n134;
__n128["test"] := __n129;
__n135 := {  };
__n135["type"] := "BlockStatement";
__n137 := {  };
__n137["type"] := "ExpressionStatement";
__n138 := {  };
__n138["type"] := "CallExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "$ERROR";
__n138["callee"] := __n139;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "#10: delete\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20290 === true";
__n141["raw"] := "'#10: delete\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u20290 === true'";
__n140 := [ __n141 ];
__n138["arguments"] := __n140;
__n137["expression"] := __n138;
__n136 := [ __n137 ];
__n135["body"] := __n136;
__n128["consequent"] := __n135;
__n128["alternate"] := null;
__n1 := [ __n2, __n16, __n30, __n44, __n58, __n72, __n86, __n100, __n114, __n128 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n142 := [  ];
__n0["variableDeclarations"] := __n142;
__n143 := [  ];
__n0["functionDeclarations"] := __n143;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}