function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "MyFunction";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "MyObjectVar";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "NewExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "MyFunction";
__n8["callee"] := __n9;
__n10 := [  ];
__n8["arguments"] := __n10;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n11 := {  };
__n11["type"] := "IfStatement";
__n12 := {  };
__n12["type"] := "BinaryExpression";
__n12["operator"] := "!==";
__n13 := {  };
__n13["type"] := "UnaryExpression";
__n13["operator"] := "delete";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "MyObjectNotVar";
__n13["argument"] := __n14;
__n13["prefix"] := true;
__n12["left"] := __n13;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := true;
__n15["raw"] := "true";
__n12["right"] := __n15;
__n11["test"] := __n12;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "$ERROR";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "#1: function MyFunction(){}; var MyObjectNotVar = new MyFunction(); delete MyObjectNotVar === true";
__n22["raw"] := "'#1: function MyFunction(){}; var MyObjectNotVar = new MyFunction(); delete MyObjectNotVar === true'";
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n18["expression"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n11["consequent"] := __n16;
__n11["alternate"] := null;
__n1 := [ __n2, __n4, __n11 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n23 := [ "MyObjectVar" ];
__n0["variableDeclarations"] := __n23;
__n25 := {  };
__n25["type"] := "FunctionDeclaration";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "MyFunction";
__n25["id"] := __n26;
__n27 := [  ];
__n25["params"] := __n27;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n29 := [  ];
__n28["body"] := __n29;
__n30 := [  ];
__n28["variableDeclarations"] := __n30;
__n31 := [  ];
__n28["functionDeclarations"] := __n31;
__n28["codeType"] := "function";
__n28["strict"] := false;
__n25["body"] := __n28;
__n25["generator"] := false;
__n25["async"] := false;
__n25["expression"] := false;
__n24 := [ __n25 ];
__n0["functionDeclarations"] := __n24;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}