function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := "use strict";
__n3["raw"] := "\"use strict\"";
__n2["expression"] := __n3;
__n2["directive"] := "use strict";
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "reNames";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Object";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "getOwnPropertyNames";
__n11["raw"] := "\"getOwnPropertyNames\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "RegExp";
__n12 := [ __n13 ];
__n8["arguments"] := __n12;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n14 := {  };
__n14["type"] := "ForStatement";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "i";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 0.;
__n19["raw"] := "0";
__n17["init"] := __n19;
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "len";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "reNames";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "length";
__n24["raw"] := "\"length\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n20["init"] := __n22;
__n16 := [ __n17, __n20 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n14["init"] := __n15;
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "<";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "i";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "len";
__n25["right"] := __n27;
__n14["test"] := __n25;
__n28 := {  };
__n28["type"] := "UpdateExpression";
__n28["operator"] := "++";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "i";
__n28["argument"] := __n29;
__n28["prefix"] := false;
__n14["update"] := __n28;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "VariableDeclaration";
__n34 := {  };
__n34["type"] := "VariableDeclarator";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "reName";
__n34["id"] := __n35;
__n36 := {  };
__n36["type"] := "MemberExpression";
__n36["computed"] := true;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "reNames";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "i";
__n36["property"] := __n38;
__n34["init"] := __n36;
__n33 := [ __n34 ];
__n32["declarations"] := __n33;
__n32["kind"] := "var";
__n39 := {  };
__n39["type"] := "IfStatement";
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "!==";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "reName";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "prototype";
__n42["raw"] := "'prototype'";
__n40["right"] := __n42;
__n39["test"] := __n40;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "VariableDeclaration";
__n47 := {  };
__n47["type"] := "VariableDeclarator";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "deleted";
__n47["id"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "unassigned";
__n49["raw"] := "'unassigned'";
__n47["init"] := __n49;
__n46 := [ __n47 ];
__n45["declarations"] := __n46;
__n45["kind"] := "var";
__n50 := {  };
__n50["type"] := "TryStatement";
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "AssignmentExpression";
__n54["operator"] := "=";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "deleted";
__n54["left"] := __n55;
__n56 := {  };
__n56["type"] := "UnaryExpression";
__n56["operator"] := "delete";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n57["computed"] := true;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "RegExp";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "reName";
__n57["property"] := __n59;
__n56["argument"] := __n57;
__n56["prefix"] := true;
__n54["right"] := __n56;
__n53["expression"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n50["block"] := __n51;
__n60 := {  };
__n60["type"] := "CatchClause";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "err";
__n60["param"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "IfStatement";
__n65 := {  };
__n65["type"] := "UnaryExpression";
__n65["operator"] := "!";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "instanceof";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "err";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "TypeError";
__n66["right"] := __n68;
__n65["argument"] := __n66;
__n65["prefix"] := true;
__n64["test"] := __n65;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "$ERROR";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "+";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "#1: strict delete threw a non-TypeError: ";
__n76["raw"] := "'#1: strict delete threw a non-TypeError: '";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "err";
__n75["right"] := __n77;
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n64["consequent"] := __n69;
__n64["alternate"] := null;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n60["body"] := __n62;
__n50["handler"] := __n60;
__n50["finalizer"] := null;
__n78 := {  };
__n78["type"] := "IfStatement";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "===";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "deleted";
__n79["left"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := false;
__n81["raw"] := "false";
__n79["right"] := __n81;
__n78["test"] := __n79;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$ERROR";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "#2: Strict delete returned false";
__n88["raw"] := "'#2: Strict delete returned false'";
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n78["consequent"] := __n82;
__n78["alternate"] := null;
__n44 := [ __n45, __n50, __n78 ];
__n43["body"] := __n44;
__n39["consequent"] := __n43;
__n39["alternate"] := null;
__n31 := [ __n32, __n39 ];
__n30["body"] := __n31;
__n14["body"] := __n30;
__n1 := [ __n2, __n4, __n14 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n89 := [ "reNames", "i", "len", "reName", "deleted" ];
__n0["variableDeclarations"] := __n89;
__n90 := [  ];
__n0["functionDeclarations"] := __n90;
__n0["codeType"] := "global";
__n0["strict"] := true;
return __n0
}