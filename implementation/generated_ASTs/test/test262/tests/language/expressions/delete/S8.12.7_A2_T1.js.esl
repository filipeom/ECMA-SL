function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__color__map";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "IfStatement";
__n9 := {  };
__n9["type"] := "BinaryExpression";
__n9["operator"] := "!==";
__n10 := {  };
__n10["type"] := "UnaryExpression";
__n10["operator"] := "delete";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "__color__map";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "red";
__n13["raw"] := "\"red\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["argument"] := __n11;
__n10["prefix"] := true;
__n9["left"] := __n10;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := true;
__n14["raw"] := "true";
__n9["right"] := __n14;
__n8["test"] := __n9;
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "$ERROR";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "+";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "#1: var __color__map = {}; delete __color__map.red === true. Actual: ";
__n22["raw"] := "'#1: var __color__map = {}; delete __color__map.red === true. Actual: '";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "UnaryExpression";
__n23["operator"] := "delete";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "__color__map";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "red";
__n26["raw"] := "\"red\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["argument"] := __n24;
__n23["prefix"] := true;
__n21["right"] := __n23;
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n17["expression"] := __n18;
__n16 := [ __n17 ];
__n15["body"] := __n16;
__n8["consequent"] := __n15;
__n8["alternate"] := null;
__n27 := {  };
__n27["type"] := "EmptyStatement";
__n28 := {  };
__n28["type"] := "IfStatement";
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "!==";
__n30 := {  };
__n30["type"] := "UnaryExpression";
__n30["operator"] := "delete";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n31["computed"] := true;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "__color__map";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "green";
__n33["raw"] := "\"green\"";
__n31["property"] := __n33;
__n30["argument"] := __n31;
__n30["prefix"] := true;
__n29["left"] := __n30;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := true;
__n34["raw"] := "true";
__n29["right"] := __n34;
__n28["test"] := __n29;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#2: var __color__map = {}; delete __color__map[\"green\"] === true. Actual: ";
__n42["raw"] := "'#2: var __color__map = {}; delete __color__map[\"green\"] === true. Actual: '";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "UnaryExpression";
__n43["operator"] := "delete";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n44["computed"] := true;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "__color__map";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "green";
__n46["raw"] := "\"green\"";
__n44["property"] := __n46;
__n43["argument"] := __n44;
__n43["prefix"] := true;
__n41["right"] := __n43;
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n28["consequent"] := __n35;
__n28["alternate"] := null;
__n47 := {  };
__n47["type"] := "EmptyStatement";
__n48 := {  };
__n48["type"] := "VariableDeclaration";
__n50 := {  };
__n50["type"] := "VariableDeclarator";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "blue";
__n50["id"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 1.;
__n52["raw"] := "1";
__n50["init"] := __n52;
__n49 := [ __n50 ];
__n48["declarations"] := __n49;
__n48["kind"] := "var";
__n53 := {  };
__n53["type"] := "IfStatement";
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "!==";
__n55 := {  };
__n55["type"] := "UnaryExpression";
__n55["operator"] := "delete";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n56["computed"] := true;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "__color__map";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "blue";
__n56["property"] := __n58;
__n55["argument"] := __n56;
__n55["prefix"] := true;
__n54["left"] := __n55;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := true;
__n59["raw"] := "true";
__n54["right"] := __n59;
__n53["test"] := __n54;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "$ERROR";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "+";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "#3: var __color__map = {}; var blue = 1; delete __color__map[blue] === true. Actual: ";
__n67["raw"] := "'#3: var __color__map = {}; var blue = 1; delete __color__map[blue] === true. Actual: '";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "UnaryExpression";
__n68["operator"] := "delete";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n69["computed"] := true;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "__color__map";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "blue";
__n69["property"] := __n71;
__n68["argument"] := __n69;
__n68["prefix"] := true;
__n66["right"] := __n68;
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n53["consequent"] := __n60;
__n53["alternate"] := null;
__n72 := {  };
__n72["type"] := "EmptyStatement";
__n1 := [ __n2, __n8, __n27, __n28, __n47, __n48, __n53, __n72 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n73 := [ "__color__map", "blue" ];
__n0["variableDeclarations"] := __n73;
__n74 := [  ];
__n0["functionDeclarations"] := __n74;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}