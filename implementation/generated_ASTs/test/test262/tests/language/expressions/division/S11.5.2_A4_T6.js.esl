function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "/";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := 1.;
__n5["raw"] := "1";
__n4["left"] := __n5;
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Number";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "NEGATIVE_INFINITY";
__n8["raw"] := "\"NEGATIVE_INFINITY\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n4["right"] := __n6;
__n3["left"] := __n4;
__n9 := {  };
__n9["type"] := "UnaryExpression";
__n9["operator"] := "-";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n9["argument"] := __n10;
__n9["prefix"] := true;
__n3["right"] := __n9;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1.1: 1 / -Infinity === 0. Actual: ";
__n18["raw"] := "'#1.1: 1 / -Infinity === 0. Actual: '";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "/";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 1.;
__n20["raw"] := "1";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "UnaryExpression";
__n21["operator"] := "-";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Infinity";
__n21["argument"] := __n22;
__n21["prefix"] := true;
__n19["right"] := __n21;
__n17["right"] := __n19;
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "IfStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "!==";
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "/";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 1.;
__n28["raw"] := "1";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "/";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 1.;
__n30["raw"] := "1";
__n29["left"] := __n30;
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Number";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "NEGATIVE_INFINITY";
__n33["raw"] := "\"NEGATIVE_INFINITY\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n29["right"] := __n31;
__n27["right"] := __n29;
__n26["left"] := __n27;
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "Number";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "NEGATIVE_INFINITY";
__n36["raw"] := "\"NEGATIVE_INFINITY\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n26["right"] := __n34;
__n25["test"] := __n26;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$ERROR";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "#1.2: 1 / -Infinity === - 0. Actual: +0";
__n43["raw"] := "'#1.2: 1 / -Infinity === - 0. Actual: +0'";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n25["consequent"] := __n37;
__n25["alternate"] := null;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n2["alternate"] := __n23;
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "/";
__n47 := {  };
__n47["type"] := "UnaryExpression";
__n47["operator"] := "-";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1.;
__n48["raw"] := "1";
__n47["argument"] := __n48;
__n47["prefix"] := true;
__n46["left"] := __n47;
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "Number";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "NEGATIVE_INFINITY";
__n51["raw"] := "\"NEGATIVE_INFINITY\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n46["right"] := __n49;
__n45["left"] := __n46;
__n52 := {  };
__n52["type"] := "UnaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 0.;
__n53["raw"] := "0";
__n52["argument"] := __n53;
__n52["prefix"] := true;
__n45["right"] := __n52;
__n44["test"] := __n45;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "$ERROR";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "+";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#2.1: -1 / -Infinity === 0. Actual: ";
__n61["raw"] := "'#2.1: -1 / -Infinity === 0. Actual: '";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "/";
__n63 := {  };
__n63["type"] := "UnaryExpression";
__n63["operator"] := "-";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 1.;
__n64["raw"] := "1";
__n63["argument"] := __n64;
__n63["prefix"] := true;
__n62["left"] := __n63;
__n65 := {  };
__n65["type"] := "UnaryExpression";
__n65["operator"] := "-";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "Infinity";
__n65["argument"] := __n66;
__n65["prefix"] := true;
__n62["right"] := __n65;
__n60["right"] := __n62;
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n44["consequent"] := __n54;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "IfStatement";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "!==";
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "/";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.;
__n72["raw"] := "1";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "/";
__n74 := {  };
__n74["type"] := "UnaryExpression";
__n74["operator"] := "-";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 1.;
__n75["raw"] := "1";
__n74["argument"] := __n75;
__n74["prefix"] := true;
__n73["left"] := __n74;
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "Number";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "NEGATIVE_INFINITY";
__n78["raw"] := "\"NEGATIVE_INFINITY\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n73["right"] := __n76;
__n71["right"] := __n73;
__n70["left"] := __n71;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "Number";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "POSITIVE_INFINITY";
__n81["raw"] := "\"POSITIVE_INFINITY\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n70["right"] := __n79;
__n69["test"] := __n70;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$ERROR";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "#2.2: -1 / -Infinity === + 0. Actual: -0";
__n88["raw"] := "'#2.2: -1 / -Infinity === + 0. Actual: -0'";
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n69["consequent"] := __n82;
__n69["alternate"] := null;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n44["alternate"] := __n67;
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "!==";
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "/";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 1.;
__n92["raw"] := "1";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "Number";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "POSITIVE_INFINITY";
__n95["raw"] := "\"POSITIVE_INFINITY\"";
__n93["property"] := __n95;
__n93["computed"] := true;
__n91["right"] := __n93;
__n90["left"] := __n91;
__n96 := {  };
__n96["type"] := "UnaryExpression";
__n96["operator"] := "+";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 0.;
__n97["raw"] := "0";
__n96["argument"] := __n97;
__n96["prefix"] := true;
__n90["right"] := __n96;
__n89["test"] := __n90;
__n98 := {  };
__n98["type"] := "BlockStatement";
__n100 := {  };
__n100["type"] := "ExpressionStatement";
__n101 := {  };
__n101["type"] := "CallExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "$ERROR";
__n101["callee"] := __n102;
__n104 := {  };
__n104["type"] := "BinaryExpression";
__n104["operator"] := "+";
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "#3.1: 1 / Infinity === 0. Actual: ";
__n105["raw"] := "'#3.1: 1 / Infinity === 0. Actual: '";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "/";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 1.;
__n107["raw"] := "1";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "Infinity";
__n106["right"] := __n108;
__n104["right"] := __n106;
__n103 := [ __n104 ];
__n101["arguments"] := __n103;
__n100["expression"] := __n101;
__n99 := [ __n100 ];
__n98["body"] := __n99;
__n89["consequent"] := __n98;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "IfStatement";
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "!==";
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := "/";
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := 1.;
__n114["raw"] := "1";
__n113["left"] := __n114;
__n115 := {  };
__n115["type"] := "BinaryExpression";
__n115["operator"] := "/";
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 1.;
__n116["raw"] := "1";
__n115["left"] := __n116;
__n117 := {  };
__n117["type"] := "MemberExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "Number";
__n117["object"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "POSITIVE_INFINITY";
__n119["raw"] := "\"POSITIVE_INFINITY\"";
__n117["property"] := __n119;
__n117["computed"] := true;
__n115["right"] := __n117;
__n113["right"] := __n115;
__n112["left"] := __n113;
__n120 := {  };
__n120["type"] := "MemberExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "Number";
__n120["object"] := __n121;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "POSITIVE_INFINITY";
__n122["raw"] := "\"POSITIVE_INFINITY\"";
__n120["property"] := __n122;
__n120["computed"] := true;
__n112["right"] := __n120;
__n111["test"] := __n112;
__n123 := {  };
__n123["type"] := "BlockStatement";
__n125 := {  };
__n125["type"] := "ExpressionStatement";
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "$ERROR";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "#3.2: 1 / Infinity === + 0. Actual: -0";
__n129["raw"] := "'#3.2: 1 / Infinity === + 0. Actual: -0'";
__n128 := [ __n129 ];
__n126["arguments"] := __n128;
__n125["expression"] := __n126;
__n124 := [ __n125 ];
__n123["body"] := __n124;
__n111["consequent"] := __n123;
__n111["alternate"] := null;
__n110 := [ __n111 ];
__n109["body"] := __n110;
__n89["alternate"] := __n109;
__n130 := {  };
__n130["type"] := "IfStatement";
__n131 := {  };
__n131["type"] := "BinaryExpression";
__n131["operator"] := "!==";
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := "/";
__n133 := {  };
__n133["type"] := "UnaryExpression";
__n133["operator"] := "-";
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 1.;
__n134["raw"] := "1";
__n133["argument"] := __n134;
__n133["prefix"] := true;
__n132["left"] := __n133;
__n135 := {  };
__n135["type"] := "MemberExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "Number";
__n135["object"] := __n136;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "POSITIVE_INFINITY";
__n137["raw"] := "\"POSITIVE_INFINITY\"";
__n135["property"] := __n137;
__n135["computed"] := true;
__n132["right"] := __n135;
__n131["left"] := __n132;
__n138 := {  };
__n138["type"] := "UnaryExpression";
__n138["operator"] := "-";
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := 0.;
__n139["raw"] := "0";
__n138["argument"] := __n139;
__n138["prefix"] := true;
__n131["right"] := __n138;
__n130["test"] := __n131;
__n140 := {  };
__n140["type"] := "BlockStatement";
__n142 := {  };
__n142["type"] := "ExpressionStatement";
__n143 := {  };
__n143["type"] := "CallExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "$ERROR";
__n143["callee"] := __n144;
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "+";
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "#4.1: -1 / Infinity === 0. Actual: ";
__n147["raw"] := "'#4.1: -1 / Infinity === 0. Actual: '";
__n146["left"] := __n147;
__n148 := {  };
__n148["type"] := "BinaryExpression";
__n148["operator"] := "/";
__n149 := {  };
__n149["type"] := "UnaryExpression";
__n149["operator"] := "-";
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 1.;
__n150["raw"] := "1";
__n149["argument"] := __n150;
__n149["prefix"] := true;
__n148["left"] := __n149;
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "Infinity";
__n148["right"] := __n151;
__n146["right"] := __n148;
__n145 := [ __n146 ];
__n143["arguments"] := __n145;
__n142["expression"] := __n143;
__n141 := [ __n142 ];
__n140["body"] := __n141;
__n130["consequent"] := __n140;
__n152 := {  };
__n152["type"] := "BlockStatement";
__n154 := {  };
__n154["type"] := "IfStatement";
__n155 := {  };
__n155["type"] := "BinaryExpression";
__n155["operator"] := "!==";
__n156 := {  };
__n156["type"] := "BinaryExpression";
__n156["operator"] := "/";
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := 1.;
__n157["raw"] := "1";
__n156["left"] := __n157;
__n158 := {  };
__n158["type"] := "BinaryExpression";
__n158["operator"] := "/";
__n159 := {  };
__n159["type"] := "UnaryExpression";
__n159["operator"] := "-";
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := 1.;
__n160["raw"] := "1";
__n159["argument"] := __n160;
__n159["prefix"] := true;
__n158["left"] := __n159;
__n161 := {  };
__n161["type"] := "MemberExpression";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "Number";
__n161["object"] := __n162;
__n163 := {  };
__n163["type"] := "Literal";
__n163["value"] := "POSITIVE_INFINITY";
__n163["raw"] := "\"POSITIVE_INFINITY\"";
__n161["property"] := __n163;
__n161["computed"] := true;
__n158["right"] := __n161;
__n156["right"] := __n158;
__n155["left"] := __n156;
__n164 := {  };
__n164["type"] := "MemberExpression";
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "Number";
__n164["object"] := __n165;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "NEGATIVE_INFINITY";
__n166["raw"] := "\"NEGATIVE_INFINITY\"";
__n164["property"] := __n166;
__n164["computed"] := true;
__n155["right"] := __n164;
__n154["test"] := __n155;
__n167 := {  };
__n167["type"] := "BlockStatement";
__n169 := {  };
__n169["type"] := "ExpressionStatement";
__n170 := {  };
__n170["type"] := "CallExpression";
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "$ERROR";
__n170["callee"] := __n171;
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := "#4.2: -1 / Infinity === - 0. Actual: +0";
__n173["raw"] := "'#4.2: -1 / Infinity === - 0. Actual: +0'";
__n172 := [ __n173 ];
__n170["arguments"] := __n172;
__n169["expression"] := __n170;
__n168 := [ __n169 ];
__n167["body"] := __n168;
__n154["consequent"] := __n167;
__n154["alternate"] := null;
__n153 := [ __n154 ];
__n152["body"] := __n153;
__n130["alternate"] := __n152;
__n1 := [ __n2, __n44, __n89, __n130 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n174 := [  ];
__n0["variableDeclarations"] := __n174;
__n175 := [  ];
__n0["functionDeclarations"] := __n175;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}