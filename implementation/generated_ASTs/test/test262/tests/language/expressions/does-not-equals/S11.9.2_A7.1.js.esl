function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "!=";
__n5 := {  };
__n5["type"] := "NewExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Boolean";
__n5["callee"] := __n6;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := true;
__n8["raw"] := "true";
__n7 := [ __n8 ];
__n5["arguments"] := __n7;
__n4["left"] := __n5;
__n9 := {  };
__n9["type"] := "NewExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Boolean";
__n9["callee"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := true;
__n12["raw"] := "true";
__n11 := [ __n12 ];
__n9["arguments"] := __n11;
__n4["right"] := __n9;
__n3["left"] := __n4;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := true;
__n13["raw"] := "true";
__n3["right"] := __n13;
__n2["test"] := __n3;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "$ERROR";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "#1: (new Boolean(true) != new Boolean(true)) === true";
__n20["raw"] := "'#1: (new Boolean(true) != new Boolean(true)) === true'";
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n16["expression"] := __n17;
__n15 := [ __n16 ];
__n14["body"] := __n15;
__n2["consequent"] := __n14;
__n2["alternate"] := null;
__n21 := {  };
__n21["type"] := "IfStatement";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "!==";
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "!=";
__n24 := {  };
__n24["type"] := "NewExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Number";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 1.;
__n27["raw"] := "1";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["left"] := __n24;
__n28 := {  };
__n28["type"] := "NewExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Number";
__n28["callee"] := __n29;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 1.;
__n31["raw"] := "1";
__n30 := [ __n31 ];
__n28["arguments"] := __n30;
__n23["right"] := __n28;
__n22["left"] := __n23;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := true;
__n32["raw"] := "true";
__n22["right"] := __n32;
__n21["test"] := __n22;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "$ERROR";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "#2: (new Number(1) != new Number(1)) === true";
__n39["raw"] := "'#2: (new Number(1) != new Number(1)) === true'";
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["expression"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n21["consequent"] := __n33;
__n21["alternate"] := null;
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "!==";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "!=";
__n43 := {  };
__n43["type"] := "NewExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "String";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "x";
__n46["raw"] := "\"x\"";
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["left"] := __n43;
__n47 := {  };
__n47["type"] := "NewExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "String";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "x";
__n50["raw"] := "\"x\"";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n42["right"] := __n47;
__n41["left"] := __n42;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := true;
__n51["raw"] := "true";
__n41["right"] := __n51;
__n40["test"] := __n41;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "#3: (new String(\"x\") != new String(\"x\")) === true";
__n58["raw"] := "'#3: (new String(\"x\") != new String(\"x\")) === true'";
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n40["consequent"] := __n52;
__n40["alternate"] := null;
__n59 := {  };
__n59["type"] := "IfStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "!==";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "!=";
__n62 := {  };
__n62["type"] := "NewExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Object";
__n62["callee"] := __n63;
__n64 := [  ];
__n62["arguments"] := __n64;
__n61["left"] := __n62;
__n65 := {  };
__n65["type"] := "NewExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "Object";
__n65["callee"] := __n66;
__n67 := [  ];
__n65["arguments"] := __n67;
__n61["right"] := __n65;
__n60["left"] := __n61;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := true;
__n68["raw"] := "true";
__n60["right"] := __n68;
__n59["test"] := __n60;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "$ERROR";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "#4: (new Object() != new Object()) === true";
__n75["raw"] := "'#4: (new Object() != new Object()) === true'";
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n59["consequent"] := __n69;
__n59["alternate"] := null;
__n76 := {  };
__n76["type"] := "VariableDeclaration";
__n78 := {  };
__n78["type"] := "VariableDeclarator";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "x";
__n78["id"] := __n79;
__n78["init"] := null;
__n80 := {  };
__n80["type"] := "VariableDeclarator";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "y";
__n80["id"] := __n81;
__n80["init"] := null;
__n77 := [ __n78, __n80 ];
__n76["declarations"] := __n77;
__n76["kind"] := "var";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "AssignmentExpression";
__n83["operator"] := "=";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "x";
__n83["left"] := __n84;
__n85 := {  };
__n85["type"] := "ObjectExpression";
__n86 := [  ];
__n85["properties"] := __n86;
__n83["right"] := __n85;
__n82["expression"] := __n83;
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "AssignmentExpression";
__n88["operator"] := "=";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "y";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "x";
__n88["right"] := __n90;
__n87["expression"] := __n88;
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "!==";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "!=";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "x";
__n93["left"] := __n94;
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "y";
__n93["right"] := __n95;
__n92["left"] := __n93;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := false;
__n96["raw"] := "false";
__n92["right"] := __n96;
__n91["test"] := __n92;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "$ERROR";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "#5: x = {}; y = x; (x != y) === false";
__n103["raw"] := "'#5: x = {}; y = x; (x != y) === false'";
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["expression"] := __n100;
__n98 := [ __n99 ];
__n97["body"] := __n98;
__n91["consequent"] := __n97;
__n91["alternate"] := null;
__n104 := {  };
__n104["type"] := "IfStatement";
__n105 := {  };
__n105["type"] := "BinaryExpression";
__n105["operator"] := "!==";
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "!=";
__n107 := {  };
__n107["type"] := "NewExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "Boolean";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := true;
__n110["raw"] := "true";
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n106["left"] := __n107;
__n111 := {  };
__n111["type"] := "NewExpression";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "Number";
__n111["callee"] := __n112;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := 1.;
__n114["raw"] := "1";
__n113 := [ __n114 ];
__n111["arguments"] := __n113;
__n106["right"] := __n111;
__n105["left"] := __n106;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := true;
__n115["raw"] := "true";
__n105["right"] := __n115;
__n104["test"] := __n105;
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "$ERROR";
__n119["callee"] := __n120;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "#6 (new Boolean(true) != new Number(1)) === true";
__n122["raw"] := "'#6 (new Boolean(true) != new Number(1)) === true'";
__n121 := [ __n122 ];
__n119["arguments"] := __n121;
__n118["expression"] := __n119;
__n117 := [ __n118 ];
__n116["body"] := __n117;
__n104["consequent"] := __n116;
__n104["alternate"] := null;
__n123 := {  };
__n123["type"] := "IfStatement";
__n124 := {  };
__n124["type"] := "BinaryExpression";
__n124["operator"] := "!==";
__n125 := {  };
__n125["type"] := "BinaryExpression";
__n125["operator"] := "!=";
__n126 := {  };
__n126["type"] := "NewExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "Number";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := 1.;
__n129["raw"] := "1";
__n128 := [ __n129 ];
__n126["arguments"] := __n128;
__n125["left"] := __n126;
__n130 := {  };
__n130["type"] := "NewExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "String";
__n130["callee"] := __n131;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "1";
__n133["raw"] := "\"1\"";
__n132 := [ __n133 ];
__n130["arguments"] := __n132;
__n125["right"] := __n130;
__n124["left"] := __n125;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := true;
__n134["raw"] := "true";
__n124["right"] := __n134;
__n123["test"] := __n124;
__n135 := {  };
__n135["type"] := "BlockStatement";
__n137 := {  };
__n137["type"] := "ExpressionStatement";
__n138 := {  };
__n138["type"] := "CallExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "$ERROR";
__n138["callee"] := __n139;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "#7: (new Number(1) != new String(\"1\")) === true";
__n141["raw"] := "'#7: (new Number(1) != new String(\"1\")) === true'";
__n140 := [ __n141 ];
__n138["arguments"] := __n140;
__n137["expression"] := __n138;
__n136 := [ __n137 ];
__n135["body"] := __n136;
__n123["consequent"] := __n135;
__n123["alternate"] := null;
__n142 := {  };
__n142["type"] := "IfStatement";
__n143 := {  };
__n143["type"] := "BinaryExpression";
__n143["operator"] := "!==";
__n144 := {  };
__n144["type"] := "BinaryExpression";
__n144["operator"] := "!=";
__n145 := {  };
__n145["type"] := "NewExpression";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "String";
__n145["callee"] := __n146;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "1";
__n148["raw"] := "\"1\"";
__n147 := [ __n148 ];
__n145["arguments"] := __n147;
__n144["left"] := __n145;
__n149 := {  };
__n149["type"] := "NewExpression";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "Boolean";
__n149["callee"] := __n150;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := true;
__n152["raw"] := "true";
__n151 := [ __n152 ];
__n149["arguments"] := __n151;
__n144["right"] := __n149;
__n143["left"] := __n144;
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := true;
__n153["raw"] := "true";
__n143["right"] := __n153;
__n142["test"] := __n143;
__n154 := {  };
__n154["type"] := "BlockStatement";
__n156 := {  };
__n156["type"] := "ExpressionStatement";
__n157 := {  };
__n157["type"] := "CallExpression";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "$ERROR";
__n157["callee"] := __n158;
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := "#8: (new String(\"x\") != new Boolean(true)) === true";
__n160["raw"] := "'#8: (new String(\"x\") != new Boolean(true)) === true'";
__n159 := [ __n160 ];
__n157["arguments"] := __n159;
__n156["expression"] := __n157;
__n155 := [ __n156 ];
__n154["body"] := __n155;
__n142["consequent"] := __n154;
__n142["alternate"] := null;
__n1 := [ __n2, __n21, __n40, __n59, __n76, __n82, __n87, __n91, __n104, __n123, __n142 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n161 := [ "x", "y" ];
__n0["variableDeclarations"] := __n161;
__n162 := [  ];
__n0["functionDeclarations"] := __n162;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}