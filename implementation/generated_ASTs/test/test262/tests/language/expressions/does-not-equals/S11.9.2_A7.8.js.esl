function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "!=";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := true;
__n5["raw"] := "true";
__n4["left"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "valueOf";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ReturnStatement";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n14["argument"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n16 := [  ];
__n12["variableDeclarations"] := __n16;
__n17 := [  ];
__n12["functionDeclarations"] := __n17;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["expression"] := false;
__n10["async"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["right"] := __n6;
__n3["left"] := __n4;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := false;
__n18["raw"] := "false";
__n3["right"] := __n18;
__n2["test"] := __n3;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "$ERROR";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "#1: (true != {valueOf: function() {return 1}}) === false";
__n25["raw"] := "'#1: (true != {valueOf: function() {return 1}}) === false'";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n2["consequent"] := __n19;
__n2["alternate"] := null;
__n26 := {  };
__n26["type"] := "IfStatement";
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "!==";
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "!=";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 1.;
__n29["raw"] := "1";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "ObjectExpression";
__n32 := {  };
__n32["type"] := "Property";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "valueOf";
__n32["key"] := __n33;
__n34 := {  };
__n34["type"] := "FunctionExpression";
__n34["id"] := null;
__n35 := [  ];
__n34["params"] := __n35;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ReturnStatement";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 1.;
__n39["raw"] := "1";
__n38["argument"] := __n39;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n40 := [  ];
__n36["variableDeclarations"] := __n40;
__n41 := [  ];
__n36["functionDeclarations"] := __n41;
__n36["codeType"] := "function";
__n36["strict"] := false;
__n34["body"] := __n36;
__n34["generator"] := false;
__n34["expression"] := false;
__n34["async"] := false;
__n32["value"] := __n34;
__n32["computed"] := false;
__n32["kind"] := "init";
__n32["shorthand"] := false;
__n42 := {  };
__n42["type"] := "Property";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "toString";
__n42["key"] := __n43;
__n44 := {  };
__n44["type"] := "FunctionExpression";
__n44["id"] := null;
__n45 := [  ];
__n44["params"] := __n45;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ReturnStatement";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 0.;
__n49["raw"] := "0";
__n48["argument"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n50 := [  ];
__n46["variableDeclarations"] := __n50;
__n51 := [  ];
__n46["functionDeclarations"] := __n51;
__n46["codeType"] := "function";
__n46["strict"] := false;
__n44["body"] := __n46;
__n44["generator"] := false;
__n44["expression"] := false;
__n44["async"] := false;
__n42["value"] := __n44;
__n42["computed"] := false;
__n42["kind"] := "init";
__n42["shorthand"] := false;
__n31 := [ __n32, __n42 ];
__n30["properties"] := __n31;
__n28["right"] := __n30;
__n27["left"] := __n28;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := false;
__n52["raw"] := "false";
__n27["right"] := __n52;
__n26["test"] := __n27;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "$ERROR";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#2: (1 != {valueOf: function() {return 1}, toString: function() {return 0}}) === false";
__n59["raw"] := "'#2: (1 != {valueOf: function() {return 1}, toString: function() {return 0}}) === false'";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n26["consequent"] := __n53;
__n26["alternate"] := null;
__n60 := {  };
__n60["type"] := "IfStatement";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "!==";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "!=";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "+1";
__n63["raw"] := "\"+1\"";
__n62["left"] := __n63;
__n64 := {  };
__n64["type"] := "ObjectExpression";
__n66 := {  };
__n66["type"] := "Property";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "valueOf";
__n66["key"] := __n67;
__n68 := {  };
__n68["type"] := "FunctionExpression";
__n68["id"] := null;
__n69 := [  ];
__n68["params"] := __n69;
__n70 := {  };
__n70["type"] := "BlockStatement";
__n72 := {  };
__n72["type"] := "ReturnStatement";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 1.;
__n73["raw"] := "1";
__n72["argument"] := __n73;
__n71 := [ __n72 ];
__n70["body"] := __n71;
__n74 := [  ];
__n70["variableDeclarations"] := __n74;
__n75 := [  ];
__n70["functionDeclarations"] := __n75;
__n70["codeType"] := "function";
__n70["strict"] := false;
__n68["body"] := __n70;
__n68["generator"] := false;
__n68["expression"] := false;
__n68["async"] := false;
__n66["value"] := __n68;
__n66["computed"] := false;
__n66["kind"] := "init";
__n66["shorthand"] := false;
__n76 := {  };
__n76["type"] := "Property";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "toString";
__n76["key"] := __n77;
__n78 := {  };
__n78["type"] := "FunctionExpression";
__n78["id"] := null;
__n79 := [  ];
__n78["params"] := __n79;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ReturnStatement";
__n83 := {  };
__n83["type"] := "ObjectExpression";
__n84 := [  ];
__n83["properties"] := __n84;
__n82["argument"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n85 := [  ];
__n80["variableDeclarations"] := __n85;
__n86 := [  ];
__n80["functionDeclarations"] := __n86;
__n80["codeType"] := "function";
__n80["strict"] := false;
__n78["body"] := __n80;
__n78["generator"] := false;
__n78["expression"] := false;
__n78["async"] := false;
__n76["value"] := __n78;
__n76["computed"] := false;
__n76["kind"] := "init";
__n76["shorthand"] := false;
__n65 := [ __n66, __n76 ];
__n64["properties"] := __n65;
__n62["right"] := __n64;
__n61["left"] := __n62;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := false;
__n87["raw"] := "false";
__n61["right"] := __n87;
__n60["test"] := __n61;
__n88 := {  };
__n88["type"] := "BlockStatement";
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "$ERROR";
__n91["callee"] := __n92;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "#3: (\"+1\" != {valueOf: function() {return 1}, toString: function() {return {}}}) === false";
__n94["raw"] := "'#3: (\"+1\" != {valueOf: function() {return 1}, toString: function() {return {}}}) === false'";
__n93 := [ __n94 ];
__n91["arguments"] := __n93;
__n90["expression"] := __n91;
__n89 := [ __n90 ];
__n88["body"] := __n89;
__n60["consequent"] := __n88;
__n60["alternate"] := null;
__n95 := {  };
__n95["type"] := "TryStatement";
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "IfStatement";
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "!==";
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "!=";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := true;
__n101["raw"] := "true";
__n100["left"] := __n101;
__n102 := {  };
__n102["type"] := "ObjectExpression";
__n104 := {  };
__n104["type"] := "Property";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "valueOf";
__n104["key"] := __n105;
__n106 := {  };
__n106["type"] := "FunctionExpression";
__n106["id"] := null;
__n107 := [  ];
__n106["params"] := __n107;
__n108 := {  };
__n108["type"] := "BlockStatement";
__n110 := {  };
__n110["type"] := "ReturnStatement";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "+1";
__n111["raw"] := "\"+1\"";
__n110["argument"] := __n111;
__n109 := [ __n110 ];
__n108["body"] := __n109;
__n112 := [  ];
__n108["variableDeclarations"] := __n112;
__n113 := [  ];
__n108["functionDeclarations"] := __n113;
__n108["codeType"] := "function";
__n108["strict"] := false;
__n106["body"] := __n108;
__n106["generator"] := false;
__n106["expression"] := false;
__n106["async"] := false;
__n104["value"] := __n106;
__n104["computed"] := false;
__n104["kind"] := "init";
__n104["shorthand"] := false;
__n114 := {  };
__n114["type"] := "Property";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "toString";
__n114["key"] := __n115;
__n116 := {  };
__n116["type"] := "FunctionExpression";
__n116["id"] := null;
__n117 := [  ];
__n116["params"] := __n117;
__n118 := {  };
__n118["type"] := "BlockStatement";
__n120 := {  };
__n120["type"] := "ThrowStatement";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "error";
__n121["raw"] := "\"error\"";
__n120["argument"] := __n121;
__n119 := [ __n120 ];
__n118["body"] := __n119;
__n122 := [  ];
__n118["variableDeclarations"] := __n122;
__n123 := [  ];
__n118["functionDeclarations"] := __n123;
__n118["codeType"] := "function";
__n118["strict"] := false;
__n116["body"] := __n118;
__n116["generator"] := false;
__n116["expression"] := false;
__n116["async"] := false;
__n114["value"] := __n116;
__n114["computed"] := false;
__n114["kind"] := "init";
__n114["shorthand"] := false;
__n103 := [ __n104, __n114 ];
__n102["properties"] := __n103;
__n100["right"] := __n102;
__n99["left"] := __n100;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := false;
__n124["raw"] := "false";
__n99["right"] := __n124;
__n98["test"] := __n99;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "$ERROR";
__n128["callee"] := __n129;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "#4.1: (true != {valueOf: function() {return \"+1\"}, toString: function() {throw \"error\"}}) === false";
__n131["raw"] := "'#4.1: (true != {valueOf: function() {return \"+1\"}, toString: function() {throw \"error\"}}) === false'";
__n130 := [ __n131 ];
__n128["arguments"] := __n130;
__n127["expression"] := __n128;
__n126 := [ __n127 ];
__n125["body"] := __n126;
__n98["consequent"] := __n125;
__n98["alternate"] := null;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n95["block"] := __n96;
__n132 := {  };
__n132["type"] := "CatchClause";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "e";
__n132["param"] := __n133;
__n134 := {  };
__n134["type"] := "BlockStatement";
__n136 := {  };
__n136["type"] := "IfStatement";
__n137 := {  };
__n137["type"] := "BinaryExpression";
__n137["operator"] := "===";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "e";
__n137["left"] := __n138;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "error";
__n139["raw"] := "\"error\"";
__n137["right"] := __n139;
__n136["test"] := __n137;
__n140 := {  };
__n140["type"] := "BlockStatement";
__n142 := {  };
__n142["type"] := "ExpressionStatement";
__n143 := {  };
__n143["type"] := "CallExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "$ERROR";
__n143["callee"] := __n144;
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := "#4.2: (true != {valueOf: function() {return \"+1\"}, toString: function() {throw \"error\"}}) not throw \"error\"";
__n146["raw"] := "'#4.2: (true != {valueOf: function() {return \"+1\"}, toString: function() {throw \"error\"}}) not throw \"error\"'";
__n145 := [ __n146 ];
__n143["arguments"] := __n145;
__n142["expression"] := __n143;
__n141 := [ __n142 ];
__n140["body"] := __n141;
__n136["consequent"] := __n140;
__n147 := {  };
__n147["type"] := "BlockStatement";
__n149 := {  };
__n149["type"] := "ExpressionStatement";
__n150 := {  };
__n150["type"] := "CallExpression";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "$ERROR";
__n150["callee"] := __n151;
__n153 := {  };
__n153["type"] := "BinaryExpression";
__n153["operator"] := "+";
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "#4.3: (true != {valueOf: function() {return \"+1\"}, toString: function() {throw \"error\"}}) not throw Error. Actual: ";
__n154["raw"] := "'#4.3: (true != {valueOf: function() {return \"+1\"}, toString: function() {throw \"error\"}}) not throw Error. Actual: '";
__n153["left"] := __n154;
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "e";
__n153["right"] := __n155;
__n152 := [ __n153 ];
__n150["arguments"] := __n152;
__n149["expression"] := __n150;
__n148 := [ __n149 ];
__n147["body"] := __n148;
__n136["alternate"] := __n147;
__n135 := [ __n136 ];
__n134["body"] := __n135;
__n132["body"] := __n134;
__n95["handler"] := __n132;
__n95["finalizer"] := null;
__n156 := {  };
__n156["type"] := "IfStatement";
__n157 := {  };
__n157["type"] := "BinaryExpression";
__n157["operator"] := "!==";
__n158 := {  };
__n158["type"] := "BinaryExpression";
__n158["operator"] := "!=";
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := 1.;
__n159["raw"] := "1";
__n158["left"] := __n159;
__n160 := {  };
__n160["type"] := "ObjectExpression";
__n162 := {  };
__n162["type"] := "Property";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "toString";
__n162["key"] := __n163;
__n164 := {  };
__n164["type"] := "FunctionExpression";
__n164["id"] := null;
__n165 := [  ];
__n164["params"] := __n165;
__n166 := {  };
__n166["type"] := "BlockStatement";
__n168 := {  };
__n168["type"] := "ReturnStatement";
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := "+1";
__n169["raw"] := "\"+1\"";
__n168["argument"] := __n169;
__n167 := [ __n168 ];
__n166["body"] := __n167;
__n170 := [  ];
__n166["variableDeclarations"] := __n170;
__n171 := [  ];
__n166["functionDeclarations"] := __n171;
__n166["codeType"] := "function";
__n166["strict"] := false;
__n164["body"] := __n166;
__n164["generator"] := false;
__n164["expression"] := false;
__n164["async"] := false;
__n162["value"] := __n164;
__n162["computed"] := false;
__n162["kind"] := "init";
__n162["shorthand"] := false;
__n161 := [ __n162 ];
__n160["properties"] := __n161;
__n158["right"] := __n160;
__n157["left"] := __n158;
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := false;
__n172["raw"] := "false";
__n157["right"] := __n172;
__n156["test"] := __n157;
__n173 := {  };
__n173["type"] := "BlockStatement";
__n175 := {  };
__n175["type"] := "ExpressionStatement";
__n176 := {  };
__n176["type"] := "CallExpression";
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "$ERROR";
__n176["callee"] := __n177;
__n179 := {  };
__n179["type"] := "Literal";
__n179["value"] := "#5: (1 != {toString: function() {return \"+1\"}}) === false";
__n179["raw"] := "'#5: (1 != {toString: function() {return \"+1\"}}) === false'";
__n178 := [ __n179 ];
__n176["arguments"] := __n178;
__n175["expression"] := __n176;
__n174 := [ __n175 ];
__n173["body"] := __n174;
__n156["consequent"] := __n173;
__n156["alternate"] := null;
__n180 := {  };
__n180["type"] := "IfStatement";
__n181 := {  };
__n181["type"] := "BinaryExpression";
__n181["operator"] := "!==";
__n182 := {  };
__n182["type"] := "BinaryExpression";
__n182["operator"] := "!=";
__n183 := {  };
__n183["type"] := "Literal";
__n183["value"] := "1";
__n183["raw"] := "\"1\"";
__n182["left"] := __n183;
__n184 := {  };
__n184["type"] := "ObjectExpression";
__n186 := {  };
__n186["type"] := "Property";
__n187 := {  };
__n187["type"] := "Identifier";
__n187["name"] := "valueOf";
__n186["key"] := __n187;
__n188 := {  };
__n188["type"] := "FunctionExpression";
__n188["id"] := null;
__n189 := [  ];
__n188["params"] := __n189;
__n190 := {  };
__n190["type"] := "BlockStatement";
__n192 := {  };
__n192["type"] := "ReturnStatement";
__n193 := {  };
__n193["type"] := "ObjectExpression";
__n194 := [  ];
__n193["properties"] := __n194;
__n192["argument"] := __n193;
__n191 := [ __n192 ];
__n190["body"] := __n191;
__n195 := [  ];
__n190["variableDeclarations"] := __n195;
__n196 := [  ];
__n190["functionDeclarations"] := __n196;
__n190["codeType"] := "function";
__n190["strict"] := false;
__n188["body"] := __n190;
__n188["generator"] := false;
__n188["expression"] := false;
__n188["async"] := false;
__n186["value"] := __n188;
__n186["computed"] := false;
__n186["kind"] := "init";
__n186["shorthand"] := false;
__n197 := {  };
__n197["type"] := "Property";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "toString";
__n197["key"] := __n198;
__n199 := {  };
__n199["type"] := "FunctionExpression";
__n199["id"] := null;
__n200 := [  ];
__n199["params"] := __n200;
__n201 := {  };
__n201["type"] := "BlockStatement";
__n203 := {  };
__n203["type"] := "ReturnStatement";
__n204 := {  };
__n204["type"] := "Literal";
__n204["value"] := "+1";
__n204["raw"] := "\"+1\"";
__n203["argument"] := __n204;
__n202 := [ __n203 ];
__n201["body"] := __n202;
__n205 := [  ];
__n201["variableDeclarations"] := __n205;
__n206 := [  ];
__n201["functionDeclarations"] := __n206;
__n201["codeType"] := "function";
__n201["strict"] := false;
__n199["body"] := __n201;
__n199["generator"] := false;
__n199["expression"] := false;
__n199["async"] := false;
__n197["value"] := __n199;
__n197["computed"] := false;
__n197["kind"] := "init";
__n197["shorthand"] := false;
__n185 := [ __n186, __n197 ];
__n184["properties"] := __n185;
__n182["right"] := __n184;
__n181["left"] := __n182;
__n207 := {  };
__n207["type"] := "Literal";
__n207["value"] := true;
__n207["raw"] := "true";
__n181["right"] := __n207;
__n180["test"] := __n181;
__n208 := {  };
__n208["type"] := "BlockStatement";
__n210 := {  };
__n210["type"] := "ExpressionStatement";
__n211 := {  };
__n211["type"] := "CallExpression";
__n212 := {  };
__n212["type"] := "Identifier";
__n212["name"] := "$ERROR";
__n211["callee"] := __n212;
__n214 := {  };
__n214["type"] := "Literal";
__n214["value"] := "#6.1: (\"1\" != {valueOf: function() {return {}}, toString: function() {return \"+1\"}}) === true";
__n214["raw"] := "'#6.1: (\"1\" != {valueOf: function() {return {}}, toString: function() {return \"+1\"}}) === true'";
__n213 := [ __n214 ];
__n211["arguments"] := __n213;
__n210["expression"] := __n211;
__n209 := [ __n210 ];
__n208["body"] := __n209;
__n180["consequent"] := __n208;
__n215 := {  };
__n215["type"] := "BlockStatement";
__n217 := {  };
__n217["type"] := "IfStatement";
__n218 := {  };
__n218["type"] := "BinaryExpression";
__n218["operator"] := "!==";
__n219 := {  };
__n219["type"] := "BinaryExpression";
__n219["operator"] := "!=";
__n220 := {  };
__n220["type"] := "Literal";
__n220["value"] := "+1";
__n220["raw"] := "\"+1\"";
__n219["left"] := __n220;
__n221 := {  };
__n221["type"] := "ObjectExpression";
__n223 := {  };
__n223["type"] := "Property";
__n224 := {  };
__n224["type"] := "Identifier";
__n224["name"] := "valueOf";
__n223["key"] := __n224;
__n225 := {  };
__n225["type"] := "FunctionExpression";
__n225["id"] := null;
__n226 := [  ];
__n225["params"] := __n226;
__n227 := {  };
__n227["type"] := "BlockStatement";
__n229 := {  };
__n229["type"] := "ReturnStatement";
__n230 := {  };
__n230["type"] := "ObjectExpression";
__n231 := [  ];
__n230["properties"] := __n231;
__n229["argument"] := __n230;
__n228 := [ __n229 ];
__n227["body"] := __n228;
__n232 := [  ];
__n227["variableDeclarations"] := __n232;
__n233 := [  ];
__n227["functionDeclarations"] := __n233;
__n227["codeType"] := "function";
__n227["strict"] := false;
__n225["body"] := __n227;
__n225["generator"] := false;
__n225["expression"] := false;
__n225["async"] := false;
__n223["value"] := __n225;
__n223["computed"] := false;
__n223["kind"] := "init";
__n223["shorthand"] := false;
__n234 := {  };
__n234["type"] := "Property";
__n235 := {  };
__n235["type"] := "Identifier";
__n235["name"] := "toString";
__n234["key"] := __n235;
__n236 := {  };
__n236["type"] := "FunctionExpression";
__n236["id"] := null;
__n237 := [  ];
__n236["params"] := __n237;
__n238 := {  };
__n238["type"] := "BlockStatement";
__n240 := {  };
__n240["type"] := "ReturnStatement";
__n241 := {  };
__n241["type"] := "Literal";
__n241["value"] := "+1";
__n241["raw"] := "\"+1\"";
__n240["argument"] := __n241;
__n239 := [ __n240 ];
__n238["body"] := __n239;
__n242 := [  ];
__n238["variableDeclarations"] := __n242;
__n243 := [  ];
__n238["functionDeclarations"] := __n243;
__n238["codeType"] := "function";
__n238["strict"] := false;
__n236["body"] := __n238;
__n236["generator"] := false;
__n236["expression"] := false;
__n236["async"] := false;
__n234["value"] := __n236;
__n234["computed"] := false;
__n234["kind"] := "init";
__n234["shorthand"] := false;
__n222 := [ __n223, __n234 ];
__n221["properties"] := __n222;
__n219["right"] := __n221;
__n218["left"] := __n219;
__n244 := {  };
__n244["type"] := "Literal";
__n244["value"] := false;
__n244["raw"] := "false";
__n218["right"] := __n244;
__n217["test"] := __n218;
__n245 := {  };
__n245["type"] := "BlockStatement";
__n247 := {  };
__n247["type"] := "ExpressionStatement";
__n248 := {  };
__n248["type"] := "CallExpression";
__n249 := {  };
__n249["type"] := "Identifier";
__n249["name"] := "$ERROR";
__n248["callee"] := __n249;
__n251 := {  };
__n251["type"] := "Literal";
__n251["value"] := "#6.2: (\"+1\" != {valueOf: function() {return {}}, toString: function() {return \"+1\"}}) === false";
__n251["raw"] := "'#6.2: (\"+1\" != {valueOf: function() {return {}}, toString: function() {return \"+1\"}}) === false'";
__n250 := [ __n251 ];
__n248["arguments"] := __n250;
__n247["expression"] := __n248;
__n246 := [ __n247 ];
__n245["body"] := __n246;
__n217["consequent"] := __n245;
__n217["alternate"] := null;
__n216 := [ __n217 ];
__n215["body"] := __n216;
__n180["alternate"] := __n215;
__n252 := {  };
__n252["type"] := "TryStatement";
__n253 := {  };
__n253["type"] := "BlockStatement";
__n255 := {  };
__n255["type"] := "ExpressionStatement";
__n256 := {  };
__n256["type"] := "BinaryExpression";
__n256["operator"] := "!=";
__n257 := {  };
__n257["type"] := "Literal";
__n257["value"] := 1.;
__n257["raw"] := "1";
__n256["left"] := __n257;
__n258 := {  };
__n258["type"] := "ObjectExpression";
__n260 := {  };
__n260["type"] := "Property";
__n261 := {  };
__n261["type"] := "Identifier";
__n261["name"] := "valueOf";
__n260["key"] := __n261;
__n262 := {  };
__n262["type"] := "FunctionExpression";
__n262["id"] := null;
__n263 := [  ];
__n262["params"] := __n263;
__n264 := {  };
__n264["type"] := "BlockStatement";
__n266 := {  };
__n266["type"] := "ThrowStatement";
__n267 := {  };
__n267["type"] := "Literal";
__n267["value"] := "error";
__n267["raw"] := "\"error\"";
__n266["argument"] := __n267;
__n265 := [ __n266 ];
__n264["body"] := __n265;
__n268 := [  ];
__n264["variableDeclarations"] := __n268;
__n269 := [  ];
__n264["functionDeclarations"] := __n269;
__n264["codeType"] := "function";
__n264["strict"] := false;
__n262["body"] := __n264;
__n262["generator"] := false;
__n262["expression"] := false;
__n262["async"] := false;
__n260["value"] := __n262;
__n260["computed"] := false;
__n260["kind"] := "init";
__n260["shorthand"] := false;
__n270 := {  };
__n270["type"] := "Property";
__n271 := {  };
__n271["type"] := "Identifier";
__n271["name"] := "toString";
__n270["key"] := __n271;
__n272 := {  };
__n272["type"] := "FunctionExpression";
__n272["id"] := null;
__n273 := [  ];
__n272["params"] := __n273;
__n274 := {  };
__n274["type"] := "BlockStatement";
__n276 := {  };
__n276["type"] := "ReturnStatement";
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := 1.;
__n277["raw"] := "1";
__n276["argument"] := __n277;
__n275 := [ __n276 ];
__n274["body"] := __n275;
__n278 := [  ];
__n274["variableDeclarations"] := __n278;
__n279 := [  ];
__n274["functionDeclarations"] := __n279;
__n274["codeType"] := "function";
__n274["strict"] := false;
__n272["body"] := __n274;
__n272["generator"] := false;
__n272["expression"] := false;
__n272["async"] := false;
__n270["value"] := __n272;
__n270["computed"] := false;
__n270["kind"] := "init";
__n270["shorthand"] := false;
__n259 := [ __n260, __n270 ];
__n258["properties"] := __n259;
__n256["right"] := __n258;
__n255["expression"] := __n256;
__n280 := {  };
__n280["type"] := "ExpressionStatement";
__n281 := {  };
__n281["type"] := "CallExpression";
__n282 := {  };
__n282["type"] := "Identifier";
__n282["name"] := "$ERROR";
__n281["callee"] := __n282;
__n284 := {  };
__n284["type"] := "Literal";
__n284["value"] := "#7: (1 != {valueOf: function() {throw \"error\"}, toString: function() {return 1}}) throw \"error\"";
__n284["raw"] := "'#7: (1 != {valueOf: function() {throw \"error\"}, toString: function() {return 1}}) throw \"error\"'";
__n283 := [ __n284 ];
__n281["arguments"] := __n283;
__n280["expression"] := __n281;
__n254 := [ __n255, __n280 ];
__n253["body"] := __n254;
__n252["block"] := __n253;
__n285 := {  };
__n285["type"] := "CatchClause";
__n286 := {  };
__n286["type"] := "Identifier";
__n286["name"] := "e";
__n285["param"] := __n286;
__n287 := {  };
__n287["type"] := "BlockStatement";
__n289 := {  };
__n289["type"] := "IfStatement";
__n290 := {  };
__n290["type"] := "BinaryExpression";
__n290["operator"] := "!==";
__n291 := {  };
__n291["type"] := "Identifier";
__n291["name"] := "e";
__n290["left"] := __n291;
__n292 := {  };
__n292["type"] := "Literal";
__n292["value"] := "error";
__n292["raw"] := "\"error\"";
__n290["right"] := __n292;
__n289["test"] := __n290;
__n293 := {  };
__n293["type"] := "BlockStatement";
__n295 := {  };
__n295["type"] := "ExpressionStatement";
__n296 := {  };
__n296["type"] := "CallExpression";
__n297 := {  };
__n297["type"] := "Identifier";
__n297["name"] := "$ERROR";
__n296["callee"] := __n297;
__n299 := {  };
__n299["type"] := "Literal";
__n299["value"] := "#7: (1 != {valueOf: function() {throw \"error\"}, toString: function() {return 1}}) throw \"error\"";
__n299["raw"] := "'#7: (1 != {valueOf: function() {throw \"error\"}, toString: function() {return 1}}) throw \"error\"'";
__n298 := [ __n299 ];
__n296["arguments"] := __n298;
__n295["expression"] := __n296;
__n294 := [ __n295 ];
__n293["body"] := __n294;
__n289["consequent"] := __n293;
__n289["alternate"] := null;
__n288 := [ __n289 ];
__n287["body"] := __n288;
__n285["body"] := __n287;
__n252["handler"] := __n285;
__n252["finalizer"] := null;
__n300 := {  };
__n300["type"] := "TryStatement";
__n301 := {  };
__n301["type"] := "BlockStatement";
__n303 := {  };
__n303["type"] := "ExpressionStatement";
__n304 := {  };
__n304["type"] := "BinaryExpression";
__n304["operator"] := "!=";
__n305 := {  };
__n305["type"] := "Literal";
__n305["value"] := 1.;
__n305["raw"] := "1";
__n304["left"] := __n305;
__n306 := {  };
__n306["type"] := "ObjectExpression";
__n308 := {  };
__n308["type"] := "Property";
__n309 := {  };
__n309["type"] := "Identifier";
__n309["name"] := "valueOf";
__n308["key"] := __n309;
__n310 := {  };
__n310["type"] := "FunctionExpression";
__n310["id"] := null;
__n311 := [  ];
__n310["params"] := __n311;
__n312 := {  };
__n312["type"] := "BlockStatement";
__n314 := {  };
__n314["type"] := "ReturnStatement";
__n315 := {  };
__n315["type"] := "ObjectExpression";
__n316 := [  ];
__n315["properties"] := __n316;
__n314["argument"] := __n315;
__n313 := [ __n314 ];
__n312["body"] := __n313;
__n317 := [  ];
__n312["variableDeclarations"] := __n317;
__n318 := [  ];
__n312["functionDeclarations"] := __n318;
__n312["codeType"] := "function";
__n312["strict"] := false;
__n310["body"] := __n312;
__n310["generator"] := false;
__n310["expression"] := false;
__n310["async"] := false;
__n308["value"] := __n310;
__n308["computed"] := false;
__n308["kind"] := "init";
__n308["shorthand"] := false;
__n319 := {  };
__n319["type"] := "Property";
__n320 := {  };
__n320["type"] := "Identifier";
__n320["name"] := "toString";
__n319["key"] := __n320;
__n321 := {  };
__n321["type"] := "FunctionExpression";
__n321["id"] := null;
__n322 := [  ];
__n321["params"] := __n322;
__n323 := {  };
__n323["type"] := "BlockStatement";
__n325 := {  };
__n325["type"] := "ReturnStatement";
__n326 := {  };
__n326["type"] := "ObjectExpression";
__n327 := [  ];
__n326["properties"] := __n327;
__n325["argument"] := __n326;
__n324 := [ __n325 ];
__n323["body"] := __n324;
__n328 := [  ];
__n323["variableDeclarations"] := __n328;
__n329 := [  ];
__n323["functionDeclarations"] := __n329;
__n323["codeType"] := "function";
__n323["strict"] := false;
__n321["body"] := __n323;
__n321["generator"] := false;
__n321["expression"] := false;
__n321["async"] := false;
__n319["value"] := __n321;
__n319["computed"] := false;
__n319["kind"] := "init";
__n319["shorthand"] := false;
__n307 := [ __n308, __n319 ];
__n306["properties"] := __n307;
__n304["right"] := __n306;
__n303["expression"] := __n304;
__n330 := {  };
__n330["type"] := "ExpressionStatement";
__n331 := {  };
__n331["type"] := "CallExpression";
__n332 := {  };
__n332["type"] := "Identifier";
__n332["name"] := "$ERROR";
__n331["callee"] := __n332;
__n334 := {  };
__n334["type"] := "Literal";
__n334["value"] := "#8: (1 != {valueOf: function() {return {}}, toString: function() {return {}}}) throw TypeError";
__n334["raw"] := "'#8: (1 != {valueOf: function() {return {}}, toString: function() {return {}}}) throw TypeError'";
__n333 := [ __n334 ];
__n331["arguments"] := __n333;
__n330["expression"] := __n331;
__n302 := [ __n303, __n330 ];
__n301["body"] := __n302;
__n300["block"] := __n301;
__n335 := {  };
__n335["type"] := "CatchClause";
__n336 := {  };
__n336["type"] := "Identifier";
__n336["name"] := "e";
__n335["param"] := __n336;
__n337 := {  };
__n337["type"] := "BlockStatement";
__n339 := {  };
__n339["type"] := "IfStatement";
__n340 := {  };
__n340["type"] := "BinaryExpression";
__n340["operator"] := "!==";
__n341 := {  };
__n341["type"] := "BinaryExpression";
__n341["operator"] := "instanceof";
__n342 := {  };
__n342["type"] := "Identifier";
__n342["name"] := "e";
__n341["left"] := __n342;
__n343 := {  };
__n343["type"] := "Identifier";
__n343["name"] := "TypeError";
__n341["right"] := __n343;
__n340["left"] := __n341;
__n344 := {  };
__n344["type"] := "Literal";
__n344["value"] := true;
__n344["raw"] := "true";
__n340["right"] := __n344;
__n339["test"] := __n340;
__n345 := {  };
__n345["type"] := "BlockStatement";
__n347 := {  };
__n347["type"] := "ExpressionStatement";
__n348 := {  };
__n348["type"] := "CallExpression";
__n349 := {  };
__n349["type"] := "Identifier";
__n349["name"] := "$ERROR";
__n348["callee"] := __n349;
__n351 := {  };
__n351["type"] := "Literal";
__n351["value"] := "#8: (1 != {valueOf: function() {return {}}, toString: function() {return {}}}) throw TypeError";
__n351["raw"] := "'#8: (1 != {valueOf: function() {return {}}, toString: function() {return {}}}) throw TypeError'";
__n350 := [ __n351 ];
__n348["arguments"] := __n350;
__n347["expression"] := __n348;
__n346 := [ __n347 ];
__n345["body"] := __n346;
__n339["consequent"] := __n345;
__n339["alternate"] := null;
__n338 := [ __n339 ];
__n337["body"] := __n338;
__n335["body"] := __n337;
__n300["handler"] := __n335;
__n300["finalizer"] := null;
__n1 := [ __n2, __n26, __n60, __n95, __n156, __n180, __n252, __n300 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n352 := [  ];
__n0["variableDeclarations"] := __n352;
__n353 := [  ];
__n0["functionDeclarations"] := __n353;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}