function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "!=";
__n5 := {  };
__n5["type"] := "ObjectExpression";
__n7 := {  };
__n7["type"] := "Property";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "valueOf";
__n7["key"] := __n8;
__n9 := {  };
__n9["type"] := "FunctionExpression";
__n9["id"] := null;
__n10 := [  ];
__n9["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ReturnStatement";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 1.;
__n14["raw"] := "1";
__n13["argument"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n15 := [  ];
__n11["variableDeclarations"] := __n15;
__n16 := [  ];
__n11["functionDeclarations"] := __n16;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n9["body"] := __n11;
__n9["generator"] := false;
__n9["expression"] := false;
__n9["async"] := false;
__n7["value"] := __n9;
__n7["computed"] := false;
__n7["kind"] := "init";
__n7["shorthand"] := false;
__n6 := [ __n7 ];
__n5["properties"] := __n6;
__n4["left"] := __n5;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := true;
__n17["raw"] := "true";
__n4["right"] := __n17;
__n3["left"] := __n4;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := false;
__n18["raw"] := "false";
__n3["right"] := __n18;
__n2["test"] := __n3;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "$ERROR";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "#1: ({valueOf: function() {return 1}} != true) === false";
__n25["raw"] := "'#1: ({valueOf: function() {return 1}} != true) === false'";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n2["consequent"] := __n19;
__n2["alternate"] := null;
__n26 := {  };
__n26["type"] := "IfStatement";
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "!==";
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "!=";
__n29 := {  };
__n29["type"] := "ObjectExpression";
__n31 := {  };
__n31["type"] := "Property";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "valueOf";
__n31["key"] := __n32;
__n33 := {  };
__n33["type"] := "FunctionExpression";
__n33["id"] := null;
__n34 := [  ];
__n33["params"] := __n34;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ReturnStatement";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 1.;
__n38["raw"] := "1";
__n37["argument"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n39 := [  ];
__n35["variableDeclarations"] := __n39;
__n40 := [  ];
__n35["functionDeclarations"] := __n40;
__n35["codeType"] := "function";
__n35["strict"] := false;
__n33["body"] := __n35;
__n33["generator"] := false;
__n33["expression"] := false;
__n33["async"] := false;
__n31["value"] := __n33;
__n31["computed"] := false;
__n31["kind"] := "init";
__n31["shorthand"] := false;
__n41 := {  };
__n41["type"] := "Property";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "toString";
__n41["key"] := __n42;
__n43 := {  };
__n43["type"] := "FunctionExpression";
__n43["id"] := null;
__n44 := [  ];
__n43["params"] := __n44;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ReturnStatement";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 0.;
__n48["raw"] := "0";
__n47["argument"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n49 := [  ];
__n45["variableDeclarations"] := __n49;
__n50 := [  ];
__n45["functionDeclarations"] := __n50;
__n45["codeType"] := "function";
__n45["strict"] := false;
__n43["body"] := __n45;
__n43["generator"] := false;
__n43["expression"] := false;
__n43["async"] := false;
__n41["value"] := __n43;
__n41["computed"] := false;
__n41["kind"] := "init";
__n41["shorthand"] := false;
__n30 := [ __n31, __n41 ];
__n29["properties"] := __n30;
__n28["left"] := __n29;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 1.;
__n51["raw"] := "1";
__n28["right"] := __n51;
__n27["left"] := __n28;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := false;
__n52["raw"] := "false";
__n27["right"] := __n52;
__n26["test"] := __n27;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "$ERROR";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#2: ({valueOf: function() {return 1}, toString: function() {return 0}} != 1) === false";
__n59["raw"] := "'#2: ({valueOf: function() {return 1}, toString: function() {return 0}} != 1) === false'";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n26["consequent"] := __n53;
__n26["alternate"] := null;
__n60 := {  };
__n60["type"] := "IfStatement";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "!==";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "!=";
__n63 := {  };
__n63["type"] := "ObjectExpression";
__n65 := {  };
__n65["type"] := "Property";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "valueOf";
__n65["key"] := __n66;
__n67 := {  };
__n67["type"] := "FunctionExpression";
__n67["id"] := null;
__n68 := [  ];
__n67["params"] := __n68;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ReturnStatement";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.;
__n72["raw"] := "1";
__n71["argument"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n73 := [  ];
__n69["variableDeclarations"] := __n73;
__n74 := [  ];
__n69["functionDeclarations"] := __n74;
__n69["codeType"] := "function";
__n69["strict"] := false;
__n67["body"] := __n69;
__n67["generator"] := false;
__n67["expression"] := false;
__n67["async"] := false;
__n65["value"] := __n67;
__n65["computed"] := false;
__n65["kind"] := "init";
__n65["shorthand"] := false;
__n75 := {  };
__n75["type"] := "Property";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "toString";
__n75["key"] := __n76;
__n77 := {  };
__n77["type"] := "FunctionExpression";
__n77["id"] := null;
__n78 := [  ];
__n77["params"] := __n78;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ReturnStatement";
__n82 := {  };
__n82["type"] := "ObjectExpression";
__n83 := [  ];
__n82["properties"] := __n83;
__n81["argument"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n84 := [  ];
__n79["variableDeclarations"] := __n84;
__n85 := [  ];
__n79["functionDeclarations"] := __n85;
__n79["codeType"] := "function";
__n79["strict"] := false;
__n77["body"] := __n79;
__n77["generator"] := false;
__n77["expression"] := false;
__n77["async"] := false;
__n75["value"] := __n77;
__n75["computed"] := false;
__n75["kind"] := "init";
__n75["shorthand"] := false;
__n64 := [ __n65, __n75 ];
__n63["properties"] := __n64;
__n62["left"] := __n63;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "+1";
__n86["raw"] := "\"+1\"";
__n62["right"] := __n86;
__n61["left"] := __n62;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := false;
__n87["raw"] := "false";
__n61["right"] := __n87;
__n60["test"] := __n61;
__n88 := {  };
__n88["type"] := "BlockStatement";
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "$ERROR";
__n91["callee"] := __n92;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "#3: ({valueOf: function() {return 1}, toString: function() {return {}}} != \"+1\") === false";
__n94["raw"] := "'#3: ({valueOf: function() {return 1}, toString: function() {return {}}} != \"+1\") === false'";
__n93 := [ __n94 ];
__n91["arguments"] := __n93;
__n90["expression"] := __n91;
__n89 := [ __n90 ];
__n88["body"] := __n89;
__n60["consequent"] := __n88;
__n60["alternate"] := null;
__n95 := {  };
__n95["type"] := "TryStatement";
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "IfStatement";
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "!==";
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "!=";
__n101 := {  };
__n101["type"] := "ObjectExpression";
__n103 := {  };
__n103["type"] := "Property";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "valueOf";
__n103["key"] := __n104;
__n105 := {  };
__n105["type"] := "FunctionExpression";
__n105["id"] := null;
__n106 := [  ];
__n105["params"] := __n106;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "ReturnStatement";
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "+1";
__n110["raw"] := "\"+1\"";
__n109["argument"] := __n110;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n111 := [  ];
__n107["variableDeclarations"] := __n111;
__n112 := [  ];
__n107["functionDeclarations"] := __n112;
__n107["codeType"] := "function";
__n107["strict"] := false;
__n105["body"] := __n107;
__n105["generator"] := false;
__n105["expression"] := false;
__n105["async"] := false;
__n103["value"] := __n105;
__n103["computed"] := false;
__n103["kind"] := "init";
__n103["shorthand"] := false;
__n113 := {  };
__n113["type"] := "Property";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "toString";
__n113["key"] := __n114;
__n115 := {  };
__n115["type"] := "FunctionExpression";
__n115["id"] := null;
__n116 := [  ];
__n115["params"] := __n116;
__n117 := {  };
__n117["type"] := "BlockStatement";
__n119 := {  };
__n119["type"] := "ThrowStatement";
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "error";
__n120["raw"] := "\"error\"";
__n119["argument"] := __n120;
__n118 := [ __n119 ];
__n117["body"] := __n118;
__n121 := [  ];
__n117["variableDeclarations"] := __n121;
__n122 := [  ];
__n117["functionDeclarations"] := __n122;
__n117["codeType"] := "function";
__n117["strict"] := false;
__n115["body"] := __n117;
__n115["generator"] := false;
__n115["expression"] := false;
__n115["async"] := false;
__n113["value"] := __n115;
__n113["computed"] := false;
__n113["kind"] := "init";
__n113["shorthand"] := false;
__n102 := [ __n103, __n113 ];
__n101["properties"] := __n102;
__n100["left"] := __n101;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := true;
__n123["raw"] := "true";
__n100["right"] := __n123;
__n99["left"] := __n100;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := false;
__n124["raw"] := "false";
__n99["right"] := __n124;
__n98["test"] := __n99;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "$ERROR";
__n128["callee"] := __n129;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "#4.1: ({valueOf: function() {return \"+1\"}, toString: function() {throw \"error\"}} != true) === false";
__n131["raw"] := "'#4.1: ({valueOf: function() {return \"+1\"}, toString: function() {throw \"error\"}} != true) === false'";
__n130 := [ __n131 ];
__n128["arguments"] := __n130;
__n127["expression"] := __n128;
__n126 := [ __n127 ];
__n125["body"] := __n126;
__n98["consequent"] := __n125;
__n98["alternate"] := null;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n95["block"] := __n96;
__n132 := {  };
__n132["type"] := "CatchClause";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "e";
__n132["param"] := __n133;
__n134 := {  };
__n134["type"] := "BlockStatement";
__n136 := {  };
__n136["type"] := "IfStatement";
__n137 := {  };
__n137["type"] := "BinaryExpression";
__n137["operator"] := "===";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "e";
__n137["left"] := __n138;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "error";
__n139["raw"] := "\"error\"";
__n137["right"] := __n139;
__n136["test"] := __n137;
__n140 := {  };
__n140["type"] := "BlockStatement";
__n142 := {  };
__n142["type"] := "ExpressionStatement";
__n143 := {  };
__n143["type"] := "CallExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "$ERROR";
__n143["callee"] := __n144;
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := "#4.2: ({valueOf: function() {return \"+1\"}, toString: function() {throw \"error\"}} != true) not throw \"error\"";
__n146["raw"] := "'#4.2: ({valueOf: function() {return \"+1\"}, toString: function() {throw \"error\"}} != true) not throw \"error\"'";
__n145 := [ __n146 ];
__n143["arguments"] := __n145;
__n142["expression"] := __n143;
__n141 := [ __n142 ];
__n140["body"] := __n141;
__n136["consequent"] := __n140;
__n147 := {  };
__n147["type"] := "BlockStatement";
__n149 := {  };
__n149["type"] := "ExpressionStatement";
__n150 := {  };
__n150["type"] := "CallExpression";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "$ERROR";
__n150["callee"] := __n151;
__n153 := {  };
__n153["type"] := "BinaryExpression";
__n153["operator"] := "+";
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "#4.3: ({valueOf: function() {return \"+1\"}, toString: function() {throw \"error\"}} != true) not throw Error. Actual: ";
__n154["raw"] := "'#4.3: ({valueOf: function() {return \"+1\"}, toString: function() {throw \"error\"}} != true) not throw Error. Actual: '";
__n153["left"] := __n154;
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "e";
__n153["right"] := __n155;
__n152 := [ __n153 ];
__n150["arguments"] := __n152;
__n149["expression"] := __n150;
__n148 := [ __n149 ];
__n147["body"] := __n148;
__n136["alternate"] := __n147;
__n135 := [ __n136 ];
__n134["body"] := __n135;
__n132["body"] := __n134;
__n95["handler"] := __n132;
__n95["finalizer"] := null;
__n156 := {  };
__n156["type"] := "IfStatement";
__n157 := {  };
__n157["type"] := "BinaryExpression";
__n157["operator"] := "!==";
__n158 := {  };
__n158["type"] := "BinaryExpression";
__n158["operator"] := "!=";
__n159 := {  };
__n159["type"] := "ObjectExpression";
__n161 := {  };
__n161["type"] := "Property";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "toString";
__n161["key"] := __n162;
__n163 := {  };
__n163["type"] := "FunctionExpression";
__n163["id"] := null;
__n164 := [  ];
__n163["params"] := __n164;
__n165 := {  };
__n165["type"] := "BlockStatement";
__n167 := {  };
__n167["type"] := "ReturnStatement";
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := "+1";
__n168["raw"] := "\"+1\"";
__n167["argument"] := __n168;
__n166 := [ __n167 ];
__n165["body"] := __n166;
__n169 := [  ];
__n165["variableDeclarations"] := __n169;
__n170 := [  ];
__n165["functionDeclarations"] := __n170;
__n165["codeType"] := "function";
__n165["strict"] := false;
__n163["body"] := __n165;
__n163["generator"] := false;
__n163["expression"] := false;
__n163["async"] := false;
__n161["value"] := __n163;
__n161["computed"] := false;
__n161["kind"] := "init";
__n161["shorthand"] := false;
__n160 := [ __n161 ];
__n159["properties"] := __n160;
__n158["left"] := __n159;
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := 1.;
__n171["raw"] := "1";
__n158["right"] := __n171;
__n157["left"] := __n158;
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := false;
__n172["raw"] := "false";
__n157["right"] := __n172;
__n156["test"] := __n157;
__n173 := {  };
__n173["type"] := "BlockStatement";
__n175 := {  };
__n175["type"] := "ExpressionStatement";
__n176 := {  };
__n176["type"] := "CallExpression";
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "$ERROR";
__n176["callee"] := __n177;
__n179 := {  };
__n179["type"] := "Literal";
__n179["value"] := "#5: ({toString: function() {return \"+1\"}} != 1) === false";
__n179["raw"] := "'#5: ({toString: function() {return \"+1\"}} != 1) === false'";
__n178 := [ __n179 ];
__n176["arguments"] := __n178;
__n175["expression"] := __n176;
__n174 := [ __n175 ];
__n173["body"] := __n174;
__n156["consequent"] := __n173;
__n156["alternate"] := null;
__n180 := {  };
__n180["type"] := "IfStatement";
__n181 := {  };
__n181["type"] := "BinaryExpression";
__n181["operator"] := "!==";
__n182 := {  };
__n182["type"] := "BinaryExpression";
__n182["operator"] := "!=";
__n183 := {  };
__n183["type"] := "ObjectExpression";
__n185 := {  };
__n185["type"] := "Property";
__n186 := {  };
__n186["type"] := "Identifier";
__n186["name"] := "valueOf";
__n185["key"] := __n186;
__n187 := {  };
__n187["type"] := "FunctionExpression";
__n187["id"] := null;
__n188 := [  ];
__n187["params"] := __n188;
__n189 := {  };
__n189["type"] := "BlockStatement";
__n191 := {  };
__n191["type"] := "ReturnStatement";
__n192 := {  };
__n192["type"] := "ObjectExpression";
__n193 := [  ];
__n192["properties"] := __n193;
__n191["argument"] := __n192;
__n190 := [ __n191 ];
__n189["body"] := __n190;
__n194 := [  ];
__n189["variableDeclarations"] := __n194;
__n195 := [  ];
__n189["functionDeclarations"] := __n195;
__n189["codeType"] := "function";
__n189["strict"] := false;
__n187["body"] := __n189;
__n187["generator"] := false;
__n187["expression"] := false;
__n187["async"] := false;
__n185["value"] := __n187;
__n185["computed"] := false;
__n185["kind"] := "init";
__n185["shorthand"] := false;
__n196 := {  };
__n196["type"] := "Property";
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "toString";
__n196["key"] := __n197;
__n198 := {  };
__n198["type"] := "FunctionExpression";
__n198["id"] := null;
__n199 := [  ];
__n198["params"] := __n199;
__n200 := {  };
__n200["type"] := "BlockStatement";
__n202 := {  };
__n202["type"] := "ReturnStatement";
__n203 := {  };
__n203["type"] := "Literal";
__n203["value"] := "+1";
__n203["raw"] := "\"+1\"";
__n202["argument"] := __n203;
__n201 := [ __n202 ];
__n200["body"] := __n201;
__n204 := [  ];
__n200["variableDeclarations"] := __n204;
__n205 := [  ];
__n200["functionDeclarations"] := __n205;
__n200["codeType"] := "function";
__n200["strict"] := false;
__n198["body"] := __n200;
__n198["generator"] := false;
__n198["expression"] := false;
__n198["async"] := false;
__n196["value"] := __n198;
__n196["computed"] := false;
__n196["kind"] := "init";
__n196["shorthand"] := false;
__n184 := [ __n185, __n196 ];
__n183["properties"] := __n184;
__n182["left"] := __n183;
__n206 := {  };
__n206["type"] := "Literal";
__n206["value"] := "1";
__n206["raw"] := "\"1\"";
__n182["right"] := __n206;
__n181["left"] := __n182;
__n207 := {  };
__n207["type"] := "Literal";
__n207["value"] := true;
__n207["raw"] := "true";
__n181["right"] := __n207;
__n180["test"] := __n181;
__n208 := {  };
__n208["type"] := "BlockStatement";
__n210 := {  };
__n210["type"] := "ExpressionStatement";
__n211 := {  };
__n211["type"] := "CallExpression";
__n212 := {  };
__n212["type"] := "Identifier";
__n212["name"] := "$ERROR";
__n211["callee"] := __n212;
__n214 := {  };
__n214["type"] := "Literal";
__n214["value"] := "#6.1: ({valueOf: function() {return {}}, toString: function() {return \"+1\"}} != \"1\") === true";
__n214["raw"] := "'#6.1: ({valueOf: function() {return {}}, toString: function() {return \"+1\"}} != \"1\") === true'";
__n213 := [ __n214 ];
__n211["arguments"] := __n213;
__n210["expression"] := __n211;
__n209 := [ __n210 ];
__n208["body"] := __n209;
__n180["consequent"] := __n208;
__n215 := {  };
__n215["type"] := "BlockStatement";
__n217 := {  };
__n217["type"] := "IfStatement";
__n218 := {  };
__n218["type"] := "BinaryExpression";
__n218["operator"] := "!==";
__n219 := {  };
__n219["type"] := "BinaryExpression";
__n219["operator"] := "!=";
__n220 := {  };
__n220["type"] := "ObjectExpression";
__n222 := {  };
__n222["type"] := "Property";
__n223 := {  };
__n223["type"] := "Identifier";
__n223["name"] := "valueOf";
__n222["key"] := __n223;
__n224 := {  };
__n224["type"] := "FunctionExpression";
__n224["id"] := null;
__n225 := [  ];
__n224["params"] := __n225;
__n226 := {  };
__n226["type"] := "BlockStatement";
__n228 := {  };
__n228["type"] := "ReturnStatement";
__n229 := {  };
__n229["type"] := "ObjectExpression";
__n230 := [  ];
__n229["properties"] := __n230;
__n228["argument"] := __n229;
__n227 := [ __n228 ];
__n226["body"] := __n227;
__n231 := [  ];
__n226["variableDeclarations"] := __n231;
__n232 := [  ];
__n226["functionDeclarations"] := __n232;
__n226["codeType"] := "function";
__n226["strict"] := false;
__n224["body"] := __n226;
__n224["generator"] := false;
__n224["expression"] := false;
__n224["async"] := false;
__n222["value"] := __n224;
__n222["computed"] := false;
__n222["kind"] := "init";
__n222["shorthand"] := false;
__n233 := {  };
__n233["type"] := "Property";
__n234 := {  };
__n234["type"] := "Identifier";
__n234["name"] := "toString";
__n233["key"] := __n234;
__n235 := {  };
__n235["type"] := "FunctionExpression";
__n235["id"] := null;
__n236 := [  ];
__n235["params"] := __n236;
__n237 := {  };
__n237["type"] := "BlockStatement";
__n239 := {  };
__n239["type"] := "ReturnStatement";
__n240 := {  };
__n240["type"] := "Literal";
__n240["value"] := "+1";
__n240["raw"] := "\"+1\"";
__n239["argument"] := __n240;
__n238 := [ __n239 ];
__n237["body"] := __n238;
__n241 := [  ];
__n237["variableDeclarations"] := __n241;
__n242 := [  ];
__n237["functionDeclarations"] := __n242;
__n237["codeType"] := "function";
__n237["strict"] := false;
__n235["body"] := __n237;
__n235["generator"] := false;
__n235["expression"] := false;
__n235["async"] := false;
__n233["value"] := __n235;
__n233["computed"] := false;
__n233["kind"] := "init";
__n233["shorthand"] := false;
__n221 := [ __n222, __n233 ];
__n220["properties"] := __n221;
__n219["left"] := __n220;
__n243 := {  };
__n243["type"] := "Literal";
__n243["value"] := "+1";
__n243["raw"] := "\"+1\"";
__n219["right"] := __n243;
__n218["left"] := __n219;
__n244 := {  };
__n244["type"] := "Literal";
__n244["value"] := false;
__n244["raw"] := "false";
__n218["right"] := __n244;
__n217["test"] := __n218;
__n245 := {  };
__n245["type"] := "BlockStatement";
__n247 := {  };
__n247["type"] := "ExpressionStatement";
__n248 := {  };
__n248["type"] := "CallExpression";
__n249 := {  };
__n249["type"] := "Identifier";
__n249["name"] := "$ERROR";
__n248["callee"] := __n249;
__n251 := {  };
__n251["type"] := "Literal";
__n251["value"] := "#6.2: ({valueOf: function() {return {}}, toString: function() {return \"+1\"}} != \"+1\") === false";
__n251["raw"] := "'#6.2: ({valueOf: function() {return {}}, toString: function() {return \"+1\"}} != \"+1\") === false'";
__n250 := [ __n251 ];
__n248["arguments"] := __n250;
__n247["expression"] := __n248;
__n246 := [ __n247 ];
__n245["body"] := __n246;
__n217["consequent"] := __n245;
__n217["alternate"] := null;
__n216 := [ __n217 ];
__n215["body"] := __n216;
__n180["alternate"] := __n215;
__n252 := {  };
__n252["type"] := "TryStatement";
__n253 := {  };
__n253["type"] := "BlockStatement";
__n255 := {  };
__n255["type"] := "ExpressionStatement";
__n256 := {  };
__n256["type"] := "BinaryExpression";
__n256["operator"] := "!=";
__n257 := {  };
__n257["type"] := "ObjectExpression";
__n259 := {  };
__n259["type"] := "Property";
__n260 := {  };
__n260["type"] := "Identifier";
__n260["name"] := "valueOf";
__n259["key"] := __n260;
__n261 := {  };
__n261["type"] := "FunctionExpression";
__n261["id"] := null;
__n262 := [  ];
__n261["params"] := __n262;
__n263 := {  };
__n263["type"] := "BlockStatement";
__n265 := {  };
__n265["type"] := "ThrowStatement";
__n266 := {  };
__n266["type"] := "Literal";
__n266["value"] := "error";
__n266["raw"] := "\"error\"";
__n265["argument"] := __n266;
__n264 := [ __n265 ];
__n263["body"] := __n264;
__n267 := [  ];
__n263["variableDeclarations"] := __n267;
__n268 := [  ];
__n263["functionDeclarations"] := __n268;
__n263["codeType"] := "function";
__n263["strict"] := false;
__n261["body"] := __n263;
__n261["generator"] := false;
__n261["expression"] := false;
__n261["async"] := false;
__n259["value"] := __n261;
__n259["computed"] := false;
__n259["kind"] := "init";
__n259["shorthand"] := false;
__n269 := {  };
__n269["type"] := "Property";
__n270 := {  };
__n270["type"] := "Identifier";
__n270["name"] := "toString";
__n269["key"] := __n270;
__n271 := {  };
__n271["type"] := "FunctionExpression";
__n271["id"] := null;
__n272 := [  ];
__n271["params"] := __n272;
__n273 := {  };
__n273["type"] := "BlockStatement";
__n275 := {  };
__n275["type"] := "ReturnStatement";
__n276 := {  };
__n276["type"] := "Literal";
__n276["value"] := 1.;
__n276["raw"] := "1";
__n275["argument"] := __n276;
__n274 := [ __n275 ];
__n273["body"] := __n274;
__n277 := [  ];
__n273["variableDeclarations"] := __n277;
__n278 := [  ];
__n273["functionDeclarations"] := __n278;
__n273["codeType"] := "function";
__n273["strict"] := false;
__n271["body"] := __n273;
__n271["generator"] := false;
__n271["expression"] := false;
__n271["async"] := false;
__n269["value"] := __n271;
__n269["computed"] := false;
__n269["kind"] := "init";
__n269["shorthand"] := false;
__n258 := [ __n259, __n269 ];
__n257["properties"] := __n258;
__n256["left"] := __n257;
__n279 := {  };
__n279["type"] := "Literal";
__n279["value"] := 1.;
__n279["raw"] := "1";
__n256["right"] := __n279;
__n255["expression"] := __n256;
__n280 := {  };
__n280["type"] := "ExpressionStatement";
__n281 := {  };
__n281["type"] := "CallExpression";
__n282 := {  };
__n282["type"] := "Identifier";
__n282["name"] := "$ERROR";
__n281["callee"] := __n282;
__n284 := {  };
__n284["type"] := "BinaryExpression";
__n284["operator"] := "+";
__n285 := {  };
__n285["type"] := "Literal";
__n285["value"] := "#7.1: ({valueOf: function() {throw \"error\"}, toString: function() {return 1}} != 1) throw \"error\". Actual: ";
__n285["raw"] := "'#7.1: ({valueOf: function() {throw \"error\"}, toString: function() {return 1}} != 1) throw \"error\". Actual: '";
__n284["left"] := __n285;
__n286 := {  };
__n286["type"] := "BinaryExpression";
__n286["operator"] := "!=";
__n287 := {  };
__n287["type"] := "ObjectExpression";
__n289 := {  };
__n289["type"] := "Property";
__n290 := {  };
__n290["type"] := "Identifier";
__n290["name"] := "valueOf";
__n289["key"] := __n290;
__n291 := {  };
__n291["type"] := "FunctionExpression";
__n291["id"] := null;
__n292 := [  ];
__n291["params"] := __n292;
__n293 := {  };
__n293["type"] := "BlockStatement";
__n295 := {  };
__n295["type"] := "ThrowStatement";
__n296 := {  };
__n296["type"] := "Literal";
__n296["value"] := "error";
__n296["raw"] := "\"error\"";
__n295["argument"] := __n296;
__n294 := [ __n295 ];
__n293["body"] := __n294;
__n297 := [  ];
__n293["variableDeclarations"] := __n297;
__n298 := [  ];
__n293["functionDeclarations"] := __n298;
__n293["codeType"] := "function";
__n293["strict"] := false;
__n291["body"] := __n293;
__n291["generator"] := false;
__n291["expression"] := false;
__n291["async"] := false;
__n289["value"] := __n291;
__n289["computed"] := false;
__n289["kind"] := "init";
__n289["shorthand"] := false;
__n299 := {  };
__n299["type"] := "Property";
__n300 := {  };
__n300["type"] := "Identifier";
__n300["name"] := "toString";
__n299["key"] := __n300;
__n301 := {  };
__n301["type"] := "FunctionExpression";
__n301["id"] := null;
__n302 := [  ];
__n301["params"] := __n302;
__n303 := {  };
__n303["type"] := "BlockStatement";
__n305 := {  };
__n305["type"] := "ReturnStatement";
__n306 := {  };
__n306["type"] := "Literal";
__n306["value"] := 1.;
__n306["raw"] := "1";
__n305["argument"] := __n306;
__n304 := [ __n305 ];
__n303["body"] := __n304;
__n307 := [  ];
__n303["variableDeclarations"] := __n307;
__n308 := [  ];
__n303["functionDeclarations"] := __n308;
__n303["codeType"] := "function";
__n303["strict"] := false;
__n301["body"] := __n303;
__n301["generator"] := false;
__n301["expression"] := false;
__n301["async"] := false;
__n299["value"] := __n301;
__n299["computed"] := false;
__n299["kind"] := "init";
__n299["shorthand"] := false;
__n288 := [ __n289, __n299 ];
__n287["properties"] := __n288;
__n286["left"] := __n287;
__n309 := {  };
__n309["type"] := "Literal";
__n309["value"] := 1.;
__n309["raw"] := "1";
__n286["right"] := __n309;
__n284["right"] := __n286;
__n283 := [ __n284 ];
__n281["arguments"] := __n283;
__n280["expression"] := __n281;
__n254 := [ __n255, __n280 ];
__n253["body"] := __n254;
__n252["block"] := __n253;
__n310 := {  };
__n310["type"] := "CatchClause";
__n311 := {  };
__n311["type"] := "Identifier";
__n311["name"] := "e";
__n310["param"] := __n311;
__n312 := {  };
__n312["type"] := "BlockStatement";
__n314 := {  };
__n314["type"] := "IfStatement";
__n315 := {  };
__n315["type"] := "BinaryExpression";
__n315["operator"] := "!==";
__n316 := {  };
__n316["type"] := "Identifier";
__n316["name"] := "e";
__n315["left"] := __n316;
__n317 := {  };
__n317["type"] := "Literal";
__n317["value"] := "error";
__n317["raw"] := "\"error\"";
__n315["right"] := __n317;
__n314["test"] := __n315;
__n318 := {  };
__n318["type"] := "BlockStatement";
__n320 := {  };
__n320["type"] := "ExpressionStatement";
__n321 := {  };
__n321["type"] := "CallExpression";
__n322 := {  };
__n322["type"] := "Identifier";
__n322["name"] := "$ERROR";
__n321["callee"] := __n322;
__n324 := {  };
__n324["type"] := "BinaryExpression";
__n324["operator"] := "+";
__n325 := {  };
__n325["type"] := "Literal";
__n325["value"] := "#7.2: ({valueOf: function() {throw \"error\"}, toString: function() {return 1}} != 1) throw \"error\". Actual: ";
__n325["raw"] := "'#7.2: ({valueOf: function() {throw \"error\"}, toString: function() {return 1}} != 1) throw \"error\". Actual: '";
__n324["left"] := __n325;
__n326 := {  };
__n326["type"] := "Identifier";
__n326["name"] := "e";
__n324["right"] := __n326;
__n323 := [ __n324 ];
__n321["arguments"] := __n323;
__n320["expression"] := __n321;
__n319 := [ __n320 ];
__n318["body"] := __n319;
__n314["consequent"] := __n318;
__n314["alternate"] := null;
__n313 := [ __n314 ];
__n312["body"] := __n313;
__n310["body"] := __n312;
__n252["handler"] := __n310;
__n252["finalizer"] := null;
__n327 := {  };
__n327["type"] := "TryStatement";
__n328 := {  };
__n328["type"] := "BlockStatement";
__n330 := {  };
__n330["type"] := "ExpressionStatement";
__n331 := {  };
__n331["type"] := "BinaryExpression";
__n331["operator"] := "!=";
__n332 := {  };
__n332["type"] := "ObjectExpression";
__n334 := {  };
__n334["type"] := "Property";
__n335 := {  };
__n335["type"] := "Identifier";
__n335["name"] := "valueOf";
__n334["key"] := __n335;
__n336 := {  };
__n336["type"] := "FunctionExpression";
__n336["id"] := null;
__n337 := [  ];
__n336["params"] := __n337;
__n338 := {  };
__n338["type"] := "BlockStatement";
__n340 := {  };
__n340["type"] := "ReturnStatement";
__n341 := {  };
__n341["type"] := "ObjectExpression";
__n342 := [  ];
__n341["properties"] := __n342;
__n340["argument"] := __n341;
__n339 := [ __n340 ];
__n338["body"] := __n339;
__n343 := [  ];
__n338["variableDeclarations"] := __n343;
__n344 := [  ];
__n338["functionDeclarations"] := __n344;
__n338["codeType"] := "function";
__n338["strict"] := false;
__n336["body"] := __n338;
__n336["generator"] := false;
__n336["expression"] := false;
__n336["async"] := false;
__n334["value"] := __n336;
__n334["computed"] := false;
__n334["kind"] := "init";
__n334["shorthand"] := false;
__n345 := {  };
__n345["type"] := "Property";
__n346 := {  };
__n346["type"] := "Identifier";
__n346["name"] := "toString";
__n345["key"] := __n346;
__n347 := {  };
__n347["type"] := "FunctionExpression";
__n347["id"] := null;
__n348 := [  ];
__n347["params"] := __n348;
__n349 := {  };
__n349["type"] := "BlockStatement";
__n351 := {  };
__n351["type"] := "ReturnStatement";
__n352 := {  };
__n352["type"] := "ObjectExpression";
__n353 := [  ];
__n352["properties"] := __n353;
__n351["argument"] := __n352;
__n350 := [ __n351 ];
__n349["body"] := __n350;
__n354 := [  ];
__n349["variableDeclarations"] := __n354;
__n355 := [  ];
__n349["functionDeclarations"] := __n355;
__n349["codeType"] := "function";
__n349["strict"] := false;
__n347["body"] := __n349;
__n347["generator"] := false;
__n347["expression"] := false;
__n347["async"] := false;
__n345["value"] := __n347;
__n345["computed"] := false;
__n345["kind"] := "init";
__n345["shorthand"] := false;
__n333 := [ __n334, __n345 ];
__n332["properties"] := __n333;
__n331["left"] := __n332;
__n356 := {  };
__n356["type"] := "Literal";
__n356["value"] := 1.;
__n356["raw"] := "1";
__n331["right"] := __n356;
__n330["expression"] := __n331;
__n357 := {  };
__n357["type"] := "ExpressionStatement";
__n358 := {  };
__n358["type"] := "CallExpression";
__n359 := {  };
__n359["type"] := "Identifier";
__n359["name"] := "$ERROR";
__n358["callee"] := __n359;
__n361 := {  };
__n361["type"] := "BinaryExpression";
__n361["operator"] := "+";
__n362 := {  };
__n362["type"] := "Literal";
__n362["value"] := "#8.1: ({valueOf: function() {return {}}, toString: function() {return {}}} != 1) throw TypeError. Actual: ";
__n362["raw"] := "'#8.1: ({valueOf: function() {return {}}, toString: function() {return {}}} != 1) throw TypeError. Actual: '";
__n361["left"] := __n362;
__n363 := {  };
__n363["type"] := "BinaryExpression";
__n363["operator"] := "!=";
__n364 := {  };
__n364["type"] := "ObjectExpression";
__n366 := {  };
__n366["type"] := "Property";
__n367 := {  };
__n367["type"] := "Identifier";
__n367["name"] := "valueOf";
__n366["key"] := __n367;
__n368 := {  };
__n368["type"] := "FunctionExpression";
__n368["id"] := null;
__n369 := [  ];
__n368["params"] := __n369;
__n370 := {  };
__n370["type"] := "BlockStatement";
__n372 := {  };
__n372["type"] := "ReturnStatement";
__n373 := {  };
__n373["type"] := "ObjectExpression";
__n374 := [  ];
__n373["properties"] := __n374;
__n372["argument"] := __n373;
__n371 := [ __n372 ];
__n370["body"] := __n371;
__n375 := [  ];
__n370["variableDeclarations"] := __n375;
__n376 := [  ];
__n370["functionDeclarations"] := __n376;
__n370["codeType"] := "function";
__n370["strict"] := false;
__n368["body"] := __n370;
__n368["generator"] := false;
__n368["expression"] := false;
__n368["async"] := false;
__n366["value"] := __n368;
__n366["computed"] := false;
__n366["kind"] := "init";
__n366["shorthand"] := false;
__n377 := {  };
__n377["type"] := "Property";
__n378 := {  };
__n378["type"] := "Identifier";
__n378["name"] := "toString";
__n377["key"] := __n378;
__n379 := {  };
__n379["type"] := "FunctionExpression";
__n379["id"] := null;
__n380 := [  ];
__n379["params"] := __n380;
__n381 := {  };
__n381["type"] := "BlockStatement";
__n383 := {  };
__n383["type"] := "ReturnStatement";
__n384 := {  };
__n384["type"] := "ObjectExpression";
__n385 := [  ];
__n384["properties"] := __n385;
__n383["argument"] := __n384;
__n382 := [ __n383 ];
__n381["body"] := __n382;
__n386 := [  ];
__n381["variableDeclarations"] := __n386;
__n387 := [  ];
__n381["functionDeclarations"] := __n387;
__n381["codeType"] := "function";
__n381["strict"] := false;
__n379["body"] := __n381;
__n379["generator"] := false;
__n379["expression"] := false;
__n379["async"] := false;
__n377["value"] := __n379;
__n377["computed"] := false;
__n377["kind"] := "init";
__n377["shorthand"] := false;
__n365 := [ __n366, __n377 ];
__n364["properties"] := __n365;
__n363["left"] := __n364;
__n388 := {  };
__n388["type"] := "Literal";
__n388["value"] := 1.;
__n388["raw"] := "1";
__n363["right"] := __n388;
__n361["right"] := __n363;
__n360 := [ __n361 ];
__n358["arguments"] := __n360;
__n357["expression"] := __n358;
__n329 := [ __n330, __n357 ];
__n328["body"] := __n329;
__n327["block"] := __n328;
__n389 := {  };
__n389["type"] := "CatchClause";
__n390 := {  };
__n390["type"] := "Identifier";
__n390["name"] := "e";
__n389["param"] := __n390;
__n391 := {  };
__n391["type"] := "BlockStatement";
__n393 := {  };
__n393["type"] := "IfStatement";
__n394 := {  };
__n394["type"] := "BinaryExpression";
__n394["operator"] := "!==";
__n395 := {  };
__n395["type"] := "BinaryExpression";
__n395["operator"] := "instanceof";
__n396 := {  };
__n396["type"] := "Identifier";
__n396["name"] := "e";
__n395["left"] := __n396;
__n397 := {  };
__n397["type"] := "Identifier";
__n397["name"] := "TypeError";
__n395["right"] := __n397;
__n394["left"] := __n395;
__n398 := {  };
__n398["type"] := "Literal";
__n398["value"] := true;
__n398["raw"] := "true";
__n394["right"] := __n398;
__n393["test"] := __n394;
__n399 := {  };
__n399["type"] := "BlockStatement";
__n401 := {  };
__n401["type"] := "ExpressionStatement";
__n402 := {  };
__n402["type"] := "CallExpression";
__n403 := {  };
__n403["type"] := "Identifier";
__n403["name"] := "$ERROR";
__n402["callee"] := __n403;
__n405 := {  };
__n405["type"] := "BinaryExpression";
__n405["operator"] := "+";
__n406 := {  };
__n406["type"] := "Literal";
__n406["value"] := "#8.2: ({valueOf: function() {return {}}, toString: function() {return {}}} != 1) throw TypeError. Actual: ";
__n406["raw"] := "'#8.2: ({valueOf: function() {return {}}, toString: function() {return {}}} != 1) throw TypeError. Actual: '";
__n405["left"] := __n406;
__n407 := {  };
__n407["type"] := "Identifier";
__n407["name"] := "e";
__n405["right"] := __n407;
__n404 := [ __n405 ];
__n402["arguments"] := __n404;
__n401["expression"] := __n402;
__n400 := [ __n401 ];
__n399["body"] := __n400;
__n393["consequent"] := __n399;
__n393["alternate"] := null;
__n392 := [ __n393 ];
__n391["body"] := __n392;
__n389["body"] := __n391;
__n327["handler"] := __n389;
__n327["finalizer"] := null;
__n1 := [ __n2, __n26, __n60, __n95, __n156, __n180, __n252, __n327 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n408 := [  ];
__n0["variableDeclarations"] := __n408;
__n409 := [  ];
__n0["functionDeclarations"] := __n409;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}