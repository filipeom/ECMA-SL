function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "in";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := "MAX_VALUE";
__n5["raw"] := "\"MAX_VALUE\"";
__n4["left"] := __n5;
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Number";
__n4["right"] := __n6;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := true;
__n7["raw"] := "true";
__n3["right"] := __n7;
__n2["test"] := __n3;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "$ERROR";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "#1: \"MAX_VALUE\" in Number === true";
__n14["raw"] := "'#1: \"MAX_VALUE\" in Number === true'";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["expression"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n2["consequent"] := __n8;
__n2["alternate"] := null;
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "x";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "MAX_VALUE";
__n19["raw"] := "\"MAX_VALUE\"";
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n20 := {  };
__n20["type"] := "IfStatement";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "!==";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "in";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "x";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Number";
__n22["right"] := __n24;
__n21["left"] := __n22;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := true;
__n25["raw"] := "true";
__n21["right"] := __n25;
__n20["test"] := __n21;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "$ERROR";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "#2: var x = \"MAX_VALUE\"; x in Number === true";
__n32["raw"] := "'#2: var x = \"MAX_VALUE\"; x in Number === true'";
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n20["consequent"] := __n26;
__n20["alternate"] := null;
__n33 := {  };
__n33["type"] := "VariableDeclaration";
__n35 := {  };
__n35["type"] := "VariableDeclarator";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "y";
__n35["id"] := __n36;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Number";
__n35["init"] := __n37;
__n34 := [ __n35 ];
__n33["declarations"] := __n34;
__n33["kind"] := "var";
__n38 := {  };
__n38["type"] := "IfStatement";
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "!==";
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "in";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "MAX_VALUE";
__n41["raw"] := "\"MAX_VALUE\"";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "y";
__n40["right"] := __n42;
__n39["left"] := __n40;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := true;
__n43["raw"] := "true";
__n39["right"] := __n43;
__n38["test"] := __n39;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$ERROR";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "#3: var y = Number; \"MAX_VALUE\" in y === true";
__n50["raw"] := "'#3: var y = Number; \"MAX_VALUE\" in y === true'";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n38["consequent"] := __n44;
__n38["alternate"] := null;
__n51 := {  };
__n51["type"] := "VariableDeclaration";
__n53 := {  };
__n53["type"] := "VariableDeclarator";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "x";
__n53["id"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "MAX_VALUE";
__n55["raw"] := "\"MAX_VALUE\"";
__n53["init"] := __n55;
__n52 := [ __n53 ];
__n51["declarations"] := __n52;
__n51["kind"] := "var";
__n56 := {  };
__n56["type"] := "VariableDeclaration";
__n58 := {  };
__n58["type"] := "VariableDeclarator";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "y";
__n58["id"] := __n59;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Number";
__n58["init"] := __n60;
__n57 := [ __n58 ];
__n56["declarations"] := __n57;
__n56["kind"] := "var";
__n61 := {  };
__n61["type"] := "IfStatement";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "!==";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "in";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "x";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "y";
__n63["right"] := __n65;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := true;
__n66["raw"] := "true";
__n62["right"] := __n66;
__n61["test"] := __n62;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#4: var x = \"MAX_VALUE\"; var y = Number; x in y === true";
__n73["raw"] := "'#4: var x = \"MAX_VALUE\"; var y = Number; x in y === true'";
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n61["consequent"] := __n67;
__n61["alternate"] := null;
__n1 := [ __n2, __n15, __n20, __n33, __n38, __n51, __n56, __n61 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n74 := [ "x", "y" ];
__n0["variableDeclarations"] := __n74;
__n75 := [  ];
__n0["functionDeclarations"] := __n75;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}