function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "FACTORY";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "AssignmentExpression";
__n7["operator"] := "=";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "FACTORY";
__n7["left"] := __n8;
__n9 := {  };
__n9["type"] := "NewExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Function";
__n9["callee"] := __n10;
__n11 := [  ];
__n9["arguments"] := __n11;
__n7["right"] := __n9;
__n6["expression"] := __n7;
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "AssignmentExpression";
__n13["operator"] := "=";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "FACTORY";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "prototype";
__n16["raw"] := "\"prototype\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["left"] := __n14;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "undefined";
__n13["right"] := __n17;
__n12["expression"] := __n13;
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "obj";
__n20["id"] := __n21;
__n20["init"] := null;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "AssignmentExpression";
__n23["operator"] := "=";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "obj";
__n23["left"] := __n24;
__n25 := {  };
__n25["type"] := "ObjectExpression";
__n26 := [  ];
__n25["properties"] := __n26;
__n23["right"] := __n25;
__n22["expression"] := __n23;
__n27 := {  };
__n27["type"] := "TryStatement";
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "instanceof";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "obj";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "FACTORY";
__n31["right"] := __n33;
__n30["expression"] := __n31;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "$ERROR";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "#1: O is not an object, throw a TypeError exception";
__n38["raw"] := "'#1: O is not an object, throw a TypeError exception'";
__n37 := [ __n38 ];
__n35["arguments"] := __n37;
__n34["expression"] := __n35;
__n29 := [ __n30, __n34 ];
__n28["body"] := __n29;
__n27["block"] := __n28;
__n39 := {  };
__n39["type"] := "CatchClause";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "e";
__n39["param"] := __n40;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "IfStatement";
__n44 := {  };
__n44["type"] := "UnaryExpression";
__n44["operator"] := "!";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "instanceof";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "e";
__n45["left"] := __n46;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "TypeError";
__n45["right"] := __n47;
__n44["argument"] := __n45;
__n44["prefix"] := true;
__n43["test"] := __n44;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "$ERROR";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#1.1: O is not an object, throw a TypeError exception";
__n54["raw"] := "'#1.1: O is not an object, throw a TypeError exception'";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n43["consequent"] := __n48;
__n43["alternate"] := null;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n39["body"] := __n41;
__n27["handler"] := __n39;
__n27["finalizer"] := null;
__n1 := [ __n2, __n6, __n12, __n18, __n22, __n27 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n55 := [ "FACTORY", "obj" ];
__n0["variableDeclarations"] := __n55;
__n56 := [  ];
__n0["functionDeclarations"] := __n56;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}