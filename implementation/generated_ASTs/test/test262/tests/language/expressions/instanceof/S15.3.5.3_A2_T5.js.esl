function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "FACTORY";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "AssignmentExpression";
__n7["operator"] := "=";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "FACTORY";
__n7["left"] := __n8;
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Function";
__n9["callee"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "this.prop=1;";
__n12["raw"] := "\"this.prop=1;\"";
__n11 := [ __n12 ];
__n9["arguments"] := __n11;
__n7["right"] := __n9;
__n6["expression"] := __n7;
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "AssignmentExpression";
__n14["operator"] := "=";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "FACTORY";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "prototype";
__n18["raw"] := "\"prototype\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["object"] := __n16;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "name";
__n19["raw"] := "\"name\"";
__n15["property"] := __n19;
__n15["computed"] := true;
__n14["left"] := __n15;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "fairy";
__n20["raw"] := "\"fairy\"";
__n14["right"] := __n20;
__n13["expression"] := __n14;
__n21 := {  };
__n21["type"] := "VariableDeclaration";
__n23 := {  };
__n23["type"] := "VariableDeclarator";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "instance";
__n23["id"] := __n24;
__n23["init"] := null;
__n22 := [ __n23 ];
__n21["declarations"] := __n22;
__n21["kind"] := "var";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "AssignmentExpression";
__n26["operator"] := "=";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "instance";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "NewExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "FACTORY";
__n28["callee"] := __n29;
__n30 := [  ];
__n28["arguments"] := __n30;
__n26["right"] := __n28;
__n25["expression"] := __n26;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "FACTORY";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "prototype";
__n35["raw"] := "\"prototype\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["left"] := __n33;
__n36 := {  };
__n36["type"] := "UnaryExpression";
__n36["operator"] := "void";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 0.;
__n37["raw"] := "0";
__n36["argument"] := __n37;
__n36["prefix"] := true;
__n32["right"] := __n36;
__n31["expression"] := __n32;
__n38 := {  };
__n38["type"] := "TryStatement";
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "instanceof";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "instance";
__n42["left"] := __n43;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "FACTORY";
__n42["right"] := __n44;
__n41["expression"] := __n42;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "#1: O is not an object, throw a TypeError exception";
__n49["raw"] := "'#1: O is not an object, throw a TypeError exception'";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n40 := [ __n41, __n45 ];
__n39["body"] := __n40;
__n38["block"] := __n39;
__n50 := {  };
__n50["type"] := "CatchClause";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "e";
__n50["param"] := __n51;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "UnaryExpression";
__n55["operator"] := "!";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "instanceof";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "e";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "TypeError";
__n56["right"] := __n58;
__n55["argument"] := __n56;
__n55["prefix"] := true;
__n54["test"] := __n55;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "#1.1: O is not an object, throw a TypeError exception";
__n65["raw"] := "'#1.1: O is not an object, throw a TypeError exception'";
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n54["consequent"] := __n59;
__n54["alternate"] := null;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n50["body"] := __n52;
__n38["handler"] := __n50;
__n38["finalizer"] := null;
__n66 := {  };
__n66["type"] := "IfStatement";
__n67 := {  };
__n67["type"] := "LogicalExpression";
__n67["operator"] := "||";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "!==";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "instance";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "constructor";
__n71["raw"] := "\"constructor\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["left"] := __n69;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "FACTORY";
__n68["right"] := __n72;
__n67["left"] := __n68;
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "!==";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "instance";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "name";
__n76["raw"] := "\"name\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["left"] := __n74;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "fairy";
__n77["raw"] := "\"fairy\"";
__n73["right"] := __n77;
__n67["right"] := __n73;
__n66["test"] := __n67;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "$ERROR";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "#2: instance.constructor === FACTORY";
__n84["raw"] := "'#2: instance.constructor === FACTORY'";
__n83 := [ __n84 ];
__n81["arguments"] := __n83;
__n80["expression"] := __n81;
__n79 := [ __n80 ];
__n78["body"] := __n79;
__n66["consequent"] := __n78;
__n66["alternate"] := null;
__n1 := [ __n2, __n6, __n13, __n21, __n25, __n31, __n38, __n66 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n85 := [ "FACTORY", "instance" ];
__n0["variableDeclarations"] := __n85;
__n86 := [  ];
__n0["functionDeclarations"] := __n86;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}