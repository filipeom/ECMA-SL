function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "<";
__n5 := {  };
__n5["type"] := "ObjectExpression";
__n6 := [  ];
__n5["properties"] := __n6;
__n4["left"] := __n5;
__n7 := {  };
__n7["type"] := "FunctionExpression";
__n7["id"] := null;
__n8 := [  ];
__n7["params"] := __n8;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ReturnStatement";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 1.;
__n12["raw"] := "1";
__n11["argument"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n13 := [  ];
__n9["variableDeclarations"] := __n13;
__n14 := [  ];
__n9["functionDeclarations"] := __n14;
__n9["codeType"] := "function";
__n9["strict"] := false;
__n7["body"] := __n9;
__n7["generator"] := false;
__n7["expression"] := false;
__n7["async"] := false;
__n4["right"] := __n7;
__n3["left"] := __n4;
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "<";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n19 := [  ];
__n18["properties"] := __n19;
__n17["object"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "toString";
__n20["raw"] := "\"toString\"";
__n17["property"] := __n20;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n21 := [  ];
__n16["arguments"] := __n21;
__n15["left"] := __n16;
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "FunctionExpression";
__n24["id"] := null;
__n25 := [  ];
__n24["params"] := __n25;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ReturnStatement";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 1.;
__n29["raw"] := "1";
__n28["argument"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n30 := [  ];
__n26["variableDeclarations"] := __n30;
__n31 := [  ];
__n26["functionDeclarations"] := __n31;
__n26["codeType"] := "function";
__n26["strict"] := false;
__n24["body"] := __n26;
__n24["generator"] := false;
__n24["expression"] := false;
__n24["async"] := false;
__n23["object"] := __n24;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "toString";
__n32["raw"] := "\"toString\"";
__n23["property"] := __n32;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n33 := [  ];
__n22["arguments"] := __n33;
__n15["right"] := __n22;
__n3["right"] := __n15;
__n2["test"] := __n3;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "#1: ({} < function(){return 1}) === ({}.toString() < function(){return 1}.toString())";
__n40["raw"] := "'#1: ({} < function(){return 1}) === ({}.toString() < function(){return 1}.toString())'";
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n2["consequent"] := __n34;
__n2["alternate"] := null;
__n41 := {  };
__n41["type"] := "IfStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "!==";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "<";
__n44 := {  };
__n44["type"] := "FunctionExpression";
__n44["id"] := null;
__n45 := [  ];
__n44["params"] := __n45;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ReturnStatement";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.;
__n49["raw"] := "1";
__n48["argument"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n50 := [  ];
__n46["variableDeclarations"] := __n50;
__n51 := [  ];
__n46["functionDeclarations"] := __n51;
__n46["codeType"] := "function";
__n46["strict"] := false;
__n44["body"] := __n46;
__n44["generator"] := false;
__n44["expression"] := false;
__n44["async"] := false;
__n43["left"] := __n44;
__n52 := {  };
__n52["type"] := "ObjectExpression";
__n53 := [  ];
__n52["properties"] := __n53;
__n43["right"] := __n52;
__n42["left"] := __n43;
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "<";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "FunctionExpression";
__n57["id"] := null;
__n58 := [  ];
__n57["params"] := __n58;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ReturnStatement";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 1.;
__n62["raw"] := "1";
__n61["argument"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n63 := [  ];
__n59["variableDeclarations"] := __n63;
__n64 := [  ];
__n59["functionDeclarations"] := __n64;
__n59["codeType"] := "function";
__n59["strict"] := false;
__n57["body"] := __n59;
__n57["generator"] := false;
__n57["expression"] := false;
__n57["async"] := false;
__n56["object"] := __n57;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "toString";
__n65["raw"] := "\"toString\"";
__n56["property"] := __n65;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n66 := [  ];
__n55["arguments"] := __n66;
__n54["left"] := __n55;
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "ObjectExpression";
__n70 := [  ];
__n69["properties"] := __n70;
__n68["object"] := __n69;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "toString";
__n71["raw"] := "\"toString\"";
__n68["property"] := __n71;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n72 := [  ];
__n67["arguments"] := __n72;
__n54["right"] := __n67;
__n42["right"] := __n54;
__n41["test"] := __n42;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "$ERROR";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "#2: (function(){return 1} < {}) === (function(){return 1}.toString() < {}.toString())";
__n79["raw"] := "'#2: (function(){return 1} < {}) === (function(){return 1}.toString() < {}.toString())'";
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["expression"] := __n76;
__n74 := [ __n75 ];
__n73["body"] := __n74;
__n41["consequent"] := __n73;
__n41["alternate"] := null;
__n80 := {  };
__n80["type"] := "IfStatement";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "!==";
__n82 := {  };
__n82["type"] := "BinaryExpression";
__n82["operator"] := "<";
__n83 := {  };
__n83["type"] := "FunctionExpression";
__n83["id"] := null;
__n84 := [  ];
__n83["params"] := __n84;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "ReturnStatement";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 1.;
__n88["raw"] := "1";
__n87["argument"] := __n88;
__n86 := [ __n87 ];
__n85["body"] := __n86;
__n89 := [  ];
__n85["variableDeclarations"] := __n89;
__n90 := [  ];
__n85["functionDeclarations"] := __n90;
__n85["codeType"] := "function";
__n85["strict"] := false;
__n83["body"] := __n85;
__n83["generator"] := false;
__n83["expression"] := false;
__n83["async"] := false;
__n82["left"] := __n83;
__n91 := {  };
__n91["type"] := "FunctionExpression";
__n91["id"] := null;
__n92 := [  ];
__n91["params"] := __n92;
__n93 := {  };
__n93["type"] := "BlockStatement";
__n95 := {  };
__n95["type"] := "ReturnStatement";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := 1.;
__n96["raw"] := "1";
__n95["argument"] := __n96;
__n94 := [ __n95 ];
__n93["body"] := __n94;
__n97 := [  ];
__n93["variableDeclarations"] := __n97;
__n98 := [  ];
__n93["functionDeclarations"] := __n98;
__n93["codeType"] := "function";
__n93["strict"] := false;
__n91["body"] := __n93;
__n91["generator"] := false;
__n91["expression"] := false;
__n91["async"] := false;
__n82["right"] := __n91;
__n81["left"] := __n82;
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "<";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "MemberExpression";
__n102 := {  };
__n102["type"] := "FunctionExpression";
__n102["id"] := null;
__n103 := [  ];
__n102["params"] := __n103;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "ReturnStatement";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 1.;
__n107["raw"] := "1";
__n106["argument"] := __n107;
__n105 := [ __n106 ];
__n104["body"] := __n105;
__n108 := [  ];
__n104["variableDeclarations"] := __n108;
__n109 := [  ];
__n104["functionDeclarations"] := __n109;
__n104["codeType"] := "function";
__n104["strict"] := false;
__n102["body"] := __n104;
__n102["generator"] := false;
__n102["expression"] := false;
__n102["async"] := false;
__n101["object"] := __n102;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "toString";
__n110["raw"] := "\"toString\"";
__n101["property"] := __n110;
__n101["computed"] := true;
__n100["callee"] := __n101;
__n111 := [  ];
__n100["arguments"] := __n111;
__n99["left"] := __n100;
__n112 := {  };
__n112["type"] := "CallExpression";
__n113 := {  };
__n113["type"] := "MemberExpression";
__n114 := {  };
__n114["type"] := "FunctionExpression";
__n114["id"] := null;
__n115 := [  ];
__n114["params"] := __n115;
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ReturnStatement";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 1.;
__n119["raw"] := "1";
__n118["argument"] := __n119;
__n117 := [ __n118 ];
__n116["body"] := __n117;
__n120 := [  ];
__n116["variableDeclarations"] := __n120;
__n121 := [  ];
__n116["functionDeclarations"] := __n121;
__n116["codeType"] := "function";
__n116["strict"] := false;
__n114["body"] := __n116;
__n114["generator"] := false;
__n114["expression"] := false;
__n114["async"] := false;
__n113["object"] := __n114;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "toString";
__n122["raw"] := "\"toString\"";
__n113["property"] := __n122;
__n113["computed"] := true;
__n112["callee"] := __n113;
__n123 := [  ];
__n112["arguments"] := __n123;
__n99["right"] := __n112;
__n81["right"] := __n99;
__n80["test"] := __n81;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "$ERROR";
__n127["callee"] := __n128;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "#3: (function(){return 1} < function(){return 1}) === (function(){return 1}.toString() < function(){return 1}.toString())";
__n130["raw"] := "'#3: (function(){return 1} < function(){return 1}) === (function(){return 1}.toString() < function(){return 1}.toString())'";
__n129 := [ __n130 ];
__n127["arguments"] := __n129;
__n126["expression"] := __n127;
__n125 := [ __n126 ];
__n124["body"] := __n125;
__n80["consequent"] := __n124;
__n80["alternate"] := null;
__n131 := {  };
__n131["type"] := "IfStatement";
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := "!==";
__n133 := {  };
__n133["type"] := "BinaryExpression";
__n133["operator"] := "<";
__n134 := {  };
__n134["type"] := "ObjectExpression";
__n135 := [  ];
__n134["properties"] := __n135;
__n133["left"] := __n134;
__n136 := {  };
__n136["type"] := "ObjectExpression";
__n137 := [  ];
__n136["properties"] := __n137;
__n133["right"] := __n136;
__n132["left"] := __n133;
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "<";
__n139 := {  };
__n139["type"] := "CallExpression";
__n140 := {  };
__n140["type"] := "MemberExpression";
__n141 := {  };
__n141["type"] := "ObjectExpression";
__n142 := [  ];
__n141["properties"] := __n142;
__n140["object"] := __n141;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := "toString";
__n143["raw"] := "\"toString\"";
__n140["property"] := __n143;
__n140["computed"] := true;
__n139["callee"] := __n140;
__n144 := [  ];
__n139["arguments"] := __n144;
__n138["left"] := __n139;
__n145 := {  };
__n145["type"] := "CallExpression";
__n146 := {  };
__n146["type"] := "MemberExpression";
__n147 := {  };
__n147["type"] := "ObjectExpression";
__n148 := [  ];
__n147["properties"] := __n148;
__n146["object"] := __n147;
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := "toString";
__n149["raw"] := "\"toString\"";
__n146["property"] := __n149;
__n146["computed"] := true;
__n145["callee"] := __n146;
__n150 := [  ];
__n145["arguments"] := __n150;
__n138["right"] := __n145;
__n132["right"] := __n138;
__n131["test"] := __n132;
__n151 := {  };
__n151["type"] := "BlockStatement";
__n153 := {  };
__n153["type"] := "ExpressionStatement";
__n154 := {  };
__n154["type"] := "CallExpression";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "$ERROR";
__n154["callee"] := __n155;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := "#4: ({} < {}) === ({}.toString() < {}.toString())";
__n157["raw"] := "'#4: ({} < {}) === ({}.toString() < {}.toString())'";
__n156 := [ __n157 ];
__n154["arguments"] := __n156;
__n153["expression"] := __n154;
__n152 := [ __n153 ];
__n151["body"] := __n152;
__n131["consequent"] := __n151;
__n131["alternate"] := null;
__n1 := [ __n2, __n41, __n80, __n131 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n158 := [  ];
__n0["variableDeclarations"] := __n158;
__n159 := [  ];
__n0["functionDeclarations"] := __n159;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}