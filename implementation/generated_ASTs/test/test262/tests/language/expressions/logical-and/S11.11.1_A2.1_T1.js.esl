function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "LogicalExpression";
__n4["operator"] := "&&";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := false;
__n5["raw"] := "false";
__n4["left"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := true;
__n6["raw"] := "true";
__n4["right"] := __n6;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := false;
__n7["raw"] := "false";
__n3["right"] := __n7;
__n2["test"] := __n3;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "$ERROR";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "#1: (false && true) === false";
__n14["raw"] := "'#1: (false && true) === false'";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["expression"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n2["consequent"] := __n8;
__n2["alternate"] := null;
__n15 := {  };
__n15["type"] := "IfStatement";
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "!==";
__n17 := {  };
__n17["type"] := "LogicalExpression";
__n17["operator"] := "&&";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := true;
__n18["raw"] := "true";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := false;
__n19["raw"] := "false";
__n17["right"] := __n19;
__n16["left"] := __n17;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := false;
__n20["raw"] := "false";
__n16["right"] := __n20;
__n15["test"] := __n16;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "$ERROR";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "#2: (true && false) === false";
__n27["raw"] := "'#2: (true && false) === false'";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n15["consequent"] := __n21;
__n15["alternate"] := null;
__n28 := {  };
__n28["type"] := "VariableDeclaration";
__n30 := {  };
__n30["type"] := "VariableDeclarator";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "x";
__n30["id"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := false;
__n32["raw"] := "false";
__n30["init"] := __n32;
__n29 := [ __n30 ];
__n28["declarations"] := __n29;
__n28["kind"] := "var";
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "!==";
__n35 := {  };
__n35["type"] := "LogicalExpression";
__n35["operator"] := "&&";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "x";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := true;
__n37["raw"] := "true";
__n35["right"] := __n37;
__n34["left"] := __n35;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := false;
__n38["raw"] := "false";
__n34["right"] := __n38;
__n33["test"] := __n34;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "$ERROR";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "#3: var x = false; (x && true) === false";
__n45["raw"] := "'#3: var x = false; (x && true) === false'";
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n41["expression"] := __n42;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n33["consequent"] := __n39;
__n33["alternate"] := null;
__n46 := {  };
__n46["type"] := "VariableDeclaration";
__n48 := {  };
__n48["type"] := "VariableDeclarator";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "y";
__n48["id"] := __n49;
__n50 := {  };
__n50["type"] := "NewExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "Boolean";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := false;
__n53["raw"] := "false";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n48["init"] := __n50;
__n47 := [ __n48 ];
__n46["declarations"] := __n47;
__n46["kind"] := "var";
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "LogicalExpression";
__n56["operator"] := "&&";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := true;
__n57["raw"] := "true";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "y";
__n56["right"] := __n58;
__n55["left"] := __n56;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "y";
__n55["right"] := __n59;
__n54["test"] := __n55;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "$ERROR";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "#4: var y = new Boolean(false); (true && y) === y";
__n66["raw"] := "'#4: var y = new Boolean(false); (true && y) === y'";
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n54["consequent"] := __n60;
__n54["alternate"] := null;
__n67 := {  };
__n67["type"] := "VariableDeclaration";
__n69 := {  };
__n69["type"] := "VariableDeclarator";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "x";
__n69["id"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := false;
__n71["raw"] := "false";
__n69["init"] := __n71;
__n68 := [ __n69 ];
__n67["declarations"] := __n68;
__n67["kind"] := "var";
__n72 := {  };
__n72["type"] := "VariableDeclaration";
__n74 := {  };
__n74["type"] := "VariableDeclarator";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "y";
__n74["id"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := true;
__n76["raw"] := "true";
__n74["init"] := __n76;
__n73 := [ __n74 ];
__n72["declarations"] := __n73;
__n72["kind"] := "var";
__n77 := {  };
__n77["type"] := "IfStatement";
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "!==";
__n79 := {  };
__n79["type"] := "LogicalExpression";
__n79["operator"] := "&&";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "x";
__n79["left"] := __n80;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "y";
__n79["right"] := __n81;
__n78["left"] := __n79;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := false;
__n82["raw"] := "false";
__n78["right"] := __n82;
__n77["test"] := __n78;
__n83 := {  };
__n83["type"] := "BlockStatement";
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "$ERROR";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "#5: var x = false; var y = true; (x && y) === false";
__n89["raw"] := "'#5: var x = false; var y = true; (x && y) === false'";
__n88 := [ __n89 ];
__n86["arguments"] := __n88;
__n85["expression"] := __n86;
__n84 := [ __n85 ];
__n83["body"] := __n84;
__n77["consequent"] := __n83;
__n77["alternate"] := null;
__n90 := {  };
__n90["type"] := "VariableDeclaration";
__n92 := {  };
__n92["type"] := "VariableDeclarator";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "x";
__n92["id"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := true;
__n94["raw"] := "true";
__n92["init"] := __n94;
__n91 := [ __n92 ];
__n90["declarations"] := __n91;
__n90["kind"] := "var";
__n95 := {  };
__n95["type"] := "VariableDeclaration";
__n97 := {  };
__n97["type"] := "VariableDeclarator";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "y";
__n97["id"] := __n98;
__n99 := {  };
__n99["type"] := "NewExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "Boolean";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := false;
__n102["raw"] := "false";
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n97["init"] := __n99;
__n96 := [ __n97 ];
__n95["declarations"] := __n96;
__n95["kind"] := "var";
__n103 := {  };
__n103["type"] := "IfStatement";
__n104 := {  };
__n104["type"] := "BinaryExpression";
__n104["operator"] := "!==";
__n105 := {  };
__n105["type"] := "LogicalExpression";
__n105["operator"] := "&&";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "x";
__n105["left"] := __n106;
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "y";
__n105["right"] := __n107;
__n104["left"] := __n105;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "y";
__n104["right"] := __n108;
__n103["test"] := __n104;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "ExpressionStatement";
__n112 := {  };
__n112["type"] := "CallExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "$ERROR";
__n112["callee"] := __n113;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "#6: var x = true; var y = new Boolean(false); (x && y) === y";
__n115["raw"] := "'#6: var x = true; var y = new Boolean(false); (x && y) === y'";
__n114 := [ __n115 ];
__n112["arguments"] := __n114;
__n111["expression"] := __n112;
__n110 := [ __n111 ];
__n109["body"] := __n110;
__n103["consequent"] := __n109;
__n103["alternate"] := null;
__n116 := {  };
__n116["type"] := "VariableDeclaration";
__n118 := {  };
__n118["type"] := "VariableDeclarator";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "objectx";
__n118["id"] := __n119;
__n120 := {  };
__n120["type"] := "NewExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "Object";
__n120["callee"] := __n121;
__n122 := [  ];
__n120["arguments"] := __n122;
__n118["init"] := __n120;
__n117 := [ __n118 ];
__n116["declarations"] := __n117;
__n116["kind"] := "var";
__n123 := {  };
__n123["type"] := "VariableDeclaration";
__n125 := {  };
__n125["type"] := "VariableDeclarator";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "objecty";
__n125["id"] := __n126;
__n127 := {  };
__n127["type"] := "NewExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "Object";
__n127["callee"] := __n128;
__n129 := [  ];
__n127["arguments"] := __n129;
__n125["init"] := __n127;
__n124 := [ __n125 ];
__n123["declarations"] := __n124;
__n123["kind"] := "var";
__n130 := {  };
__n130["type"] := "ExpressionStatement";
__n131 := {  };
__n131["type"] := "AssignmentExpression";
__n131["operator"] := "=";
__n132 := {  };
__n132["type"] := "MemberExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "objectx";
__n132["object"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "prop";
__n134["raw"] := "\"prop\"";
__n132["property"] := __n134;
__n132["computed"] := true;
__n131["left"] := __n132;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := true;
__n135["raw"] := "true";
__n131["right"] := __n135;
__n130["expression"] := __n131;
__n136 := {  };
__n136["type"] := "ExpressionStatement";
__n137 := {  };
__n137["type"] := "AssignmentExpression";
__n137["operator"] := "=";
__n138 := {  };
__n138["type"] := "MemberExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "objecty";
__n138["object"] := __n139;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "prop";
__n140["raw"] := "\"prop\"";
__n138["property"] := __n140;
__n138["computed"] := true;
__n137["left"] := __n138;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := 1.1;
__n141["raw"] := "1.1";
__n137["right"] := __n141;
__n136["expression"] := __n137;
__n142 := {  };
__n142["type"] := "IfStatement";
__n143 := {  };
__n143["type"] := "BinaryExpression";
__n143["operator"] := "!==";
__n144 := {  };
__n144["type"] := "LogicalExpression";
__n144["operator"] := "&&";
__n145 := {  };
__n145["type"] := "MemberExpression";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "objectx";
__n145["object"] := __n146;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "prop";
__n147["raw"] := "\"prop\"";
__n145["property"] := __n147;
__n145["computed"] := true;
__n144["left"] := __n145;
__n148 := {  };
__n148["type"] := "MemberExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "objecty";
__n148["object"] := __n149;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "prop";
__n150["raw"] := "\"prop\"";
__n148["property"] := __n150;
__n148["computed"] := true;
__n144["right"] := __n148;
__n143["left"] := __n144;
__n151 := {  };
__n151["type"] := "MemberExpression";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "objecty";
__n151["object"] := __n152;
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := "prop";
__n153["raw"] := "\"prop\"";
__n151["property"] := __n153;
__n151["computed"] := true;
__n143["right"] := __n151;
__n142["test"] := __n143;
__n154 := {  };
__n154["type"] := "BlockStatement";
__n156 := {  };
__n156["type"] := "ExpressionStatement";
__n157 := {  };
__n157["type"] := "CallExpression";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "$ERROR";
__n157["callee"] := __n158;
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := "#7: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; (objectx.prop && objecty.prop) === objecty.prop";
__n160["raw"] := "'#7: var objectx = new Object(); var objecty = new Object(); objectx.prop = true; objecty.prop = 1; (objectx.prop && objecty.prop) === objecty.prop'";
__n159 := [ __n160 ];
__n157["arguments"] := __n159;
__n156["expression"] := __n157;
__n155 := [ __n156 ];
__n154["body"] := __n155;
__n142["consequent"] := __n154;
__n142["alternate"] := null;
__n161 := {  };
__n161["type"] := "VariableDeclaration";
__n163 := {  };
__n163["type"] := "VariableDeclarator";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "objectx";
__n163["id"] := __n164;
__n165 := {  };
__n165["type"] := "NewExpression";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "Object";
__n165["callee"] := __n166;
__n167 := [  ];
__n165["arguments"] := __n167;
__n163["init"] := __n165;
__n162 := [ __n163 ];
__n161["declarations"] := __n162;
__n161["kind"] := "var";
__n168 := {  };
__n168["type"] := "VariableDeclaration";
__n170 := {  };
__n170["type"] := "VariableDeclarator";
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "objecty";
__n170["id"] := __n171;
__n172 := {  };
__n172["type"] := "NewExpression";
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "Object";
__n172["callee"] := __n173;
__n174 := [  ];
__n172["arguments"] := __n174;
__n170["init"] := __n172;
__n169 := [ __n170 ];
__n168["declarations"] := __n169;
__n168["kind"] := "var";
__n175 := {  };
__n175["type"] := "ExpressionStatement";
__n176 := {  };
__n176["type"] := "AssignmentExpression";
__n176["operator"] := "=";
__n177 := {  };
__n177["type"] := "MemberExpression";
__n178 := {  };
__n178["type"] := "Identifier";
__n178["name"] := "objectx";
__n177["object"] := __n178;
__n179 := {  };
__n179["type"] := "Literal";
__n179["value"] := "prop";
__n179["raw"] := "\"prop\"";
__n177["property"] := __n179;
__n177["computed"] := true;
__n176["left"] := __n177;
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := 0.;
__n180["raw"] := "0";
__n176["right"] := __n180;
__n175["expression"] := __n176;
__n181 := {  };
__n181["type"] := "ExpressionStatement";
__n182 := {  };
__n182["type"] := "AssignmentExpression";
__n182["operator"] := "=";
__n183 := {  };
__n183["type"] := "MemberExpression";
__n184 := {  };
__n184["type"] := "Identifier";
__n184["name"] := "objecty";
__n183["object"] := __n184;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "prop";
__n185["raw"] := "\"prop\"";
__n183["property"] := __n185;
__n183["computed"] := true;
__n182["left"] := __n183;
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := true;
__n186["raw"] := "true";
__n182["right"] := __n186;
__n181["expression"] := __n182;
__n187 := {  };
__n187["type"] := "IfStatement";
__n188 := {  };
__n188["type"] := "BinaryExpression";
__n188["operator"] := "!==";
__n189 := {  };
__n189["type"] := "LogicalExpression";
__n189["operator"] := "&&";
__n190 := {  };
__n190["type"] := "MemberExpression";
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "objectx";
__n190["object"] := __n191;
__n192 := {  };
__n192["type"] := "Literal";
__n192["value"] := "prop";
__n192["raw"] := "\"prop\"";
__n190["property"] := __n192;
__n190["computed"] := true;
__n189["left"] := __n190;
__n193 := {  };
__n193["type"] := "MemberExpression";
__n194 := {  };
__n194["type"] := "Identifier";
__n194["name"] := "objecty";
__n193["object"] := __n194;
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "prop";
__n195["raw"] := "\"prop\"";
__n193["property"] := __n195;
__n193["computed"] := true;
__n189["right"] := __n193;
__n188["left"] := __n189;
__n196 := {  };
__n196["type"] := "MemberExpression";
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "objectx";
__n196["object"] := __n197;
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := "prop";
__n198["raw"] := "\"prop\"";
__n196["property"] := __n198;
__n196["computed"] := true;
__n188["right"] := __n196;
__n187["test"] := __n188;
__n199 := {  };
__n199["type"] := "BlockStatement";
__n201 := {  };
__n201["type"] := "ExpressionStatement";
__n202 := {  };
__n202["type"] := "CallExpression";
__n203 := {  };
__n203["type"] := "Identifier";
__n203["name"] := "$ERROR";
__n202["callee"] := __n203;
__n205 := {  };
__n205["type"] := "Literal";
__n205["value"] := "#8: var objectx = new Object(); var objecty = new Object(); objectx.prop = 0; objecty.prop = true; (objectx.prop && objecty.prop) === objectx.prop";
__n205["raw"] := "'#8: var objectx = new Object(); var objecty = new Object(); objectx.prop = 0; objecty.prop = true; (objectx.prop && objecty.prop) === objectx.prop'";
__n204 := [ __n205 ];
__n202["arguments"] := __n204;
__n201["expression"] := __n202;
__n200 := [ __n201 ];
__n199["body"] := __n200;
__n187["consequent"] := __n199;
__n187["alternate"] := null;
__n1 := [ __n2, __n15, __n28, __n33, __n46, __n54, __n67, __n72, __n77, __n90, __n95, __n103, __n116, __n123, __n130, __n136, __n142, __n161, __n168, __n175, __n181, __n187 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n206 := [ "x", "y", "objectx", "objecty" ];
__n0["variableDeclarations"] := __n206;
__n207 := [  ];
__n0["functionDeclarations"] := __n207;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}