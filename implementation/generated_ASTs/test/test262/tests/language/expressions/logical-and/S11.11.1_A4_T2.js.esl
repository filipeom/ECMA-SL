function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "LogicalExpression";
__n4["operator"] := "&&";
__n5 := {  };
__n5["type"] := "UnaryExpression";
__n5["operator"] := "-";
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 1.;
__n6["raw"] := "1";
__n5["argument"] := __n6;
__n5["prefix"] := true;
__n4["left"] := __n5;
__n7 := {  };
__n7["type"] := "UnaryExpression";
__n7["operator"] := "-";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 0.;
__n8["raw"] := "0";
__n7["argument"] := __n8;
__n7["prefix"] := true;
__n4["right"] := __n7;
__n3["left"] := __n4;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0";
__n3["right"] := __n9;
__n2["test"] := __n3;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "$ERROR";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "#1.1: (-1 && -0) === 0";
__n16["raw"] := "'#1.1: (-1 && -0) === 0'";
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["expression"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n2["consequent"] := __n10;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!==";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "/";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 1.;
__n22["raw"] := "1";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "LogicalExpression";
__n23["operator"] := "&&";
__n24 := {  };
__n24["type"] := "UnaryExpression";
__n24["operator"] := "-";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 1.;
__n25["raw"] := "1";
__n24["argument"] := __n25;
__n24["prefix"] := true;
__n23["left"] := __n24;
__n26 := {  };
__n26["type"] := "UnaryExpression";
__n26["operator"] := "-";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 0.;
__n27["raw"] := "0";
__n26["argument"] := __n27;
__n26["prefix"] := true;
__n23["right"] := __n26;
__n21["right"] := __n23;
__n20["left"] := __n21;
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Number";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "NEGATIVE_INFINITY";
__n30["raw"] := "\"NEGATIVE_INFINITY\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n20["right"] := __n28;
__n19["test"] := __n20;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "$ERROR";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "#1.2: (-1 && -0) === -0";
__n37["raw"] := "'#1.2: (-1 && -0) === -0'";
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33["expression"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n19["consequent"] := __n31;
__n19["alternate"] := null;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n2["alternate"] := __n17;
__n38 := {  };
__n38["type"] := "IfStatement";
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "!==";
__n40 := {  };
__n40["type"] := "LogicalExpression";
__n40["operator"] := "&&";
__n41 := {  };
__n41["type"] := "UnaryExpression";
__n41["operator"] := "-";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 1.;
__n42["raw"] := "1";
__n41["argument"] := __n42;
__n41["prefix"] := true;
__n40["left"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 0.;
__n43["raw"] := "0";
__n40["right"] := __n43;
__n39["left"] := __n40;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 0.;
__n44["raw"] := "0";
__n39["right"] := __n44;
__n38["test"] := __n39;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "$ERROR";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "#2.1: (-1 && 0) === 0";
__n51["raw"] := "'#2.1: (-1 && 0) === 0'";
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n38["consequent"] := __n45;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "/";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 1.;
__n57["raw"] := "1";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "LogicalExpression";
__n58["operator"] := "&&";
__n59 := {  };
__n59["type"] := "UnaryExpression";
__n59["operator"] := "-";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 1.;
__n60["raw"] := "1";
__n59["argument"] := __n60;
__n59["prefix"] := true;
__n58["left"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 0.;
__n61["raw"] := "0";
__n58["right"] := __n61;
__n56["right"] := __n58;
__n55["left"] := __n56;
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Number";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "POSITIVE_INFINITY";
__n64["raw"] := "\"POSITIVE_INFINITY\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n55["right"] := __n62;
__n54["test"] := __n55;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "$ERROR";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "#2.2: (-1 && 0) === +0";
__n71["raw"] := "'#2.2: (-1 && 0) === +0'";
__n70 := [ __n71 ];
__n68["arguments"] := __n70;
__n67["expression"] := __n68;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n54["consequent"] := __n65;
__n54["alternate"] := null;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n38["alternate"] := __n52;
__n72 := {  };
__n72["type"] := "IfStatement";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "!==";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "isNaN";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "LogicalExpression";
__n77["operator"] := "&&";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 0.1;
__n78["raw"] := "0.1";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "NaN";
__n77["right"] := __n79;
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["left"] := __n74;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := true;
__n80["raw"] := "true";
__n73["right"] := __n80;
__n72["test"] := __n73;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "$ERROR";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#3: (0.1 && NaN) === Not-a-Number";
__n87["raw"] := "'#3: (0.1 && NaN) === Not-a-Number'";
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n82 := [ __n83 ];
__n81["body"] := __n82;
__n72["consequent"] := __n81;
__n72["alternate"] := null;
__n88 := {  };
__n88["type"] := "VariableDeclaration";
__n90 := {  };
__n90["type"] := "VariableDeclarator";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "y";
__n90["id"] := __n91;
__n92 := {  };
__n92["type"] := "NewExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "Number";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 0.;
__n95["raw"] := "0";
__n94 := [ __n95 ];
__n92["arguments"] := __n94;
__n90["init"] := __n92;
__n89 := [ __n90 ];
__n88["declarations"] := __n89;
__n88["kind"] := "var";
__n96 := {  };
__n96["type"] := "IfStatement";
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "!==";
__n98 := {  };
__n98["type"] := "LogicalExpression";
__n98["operator"] := "&&";
__n99 := {  };
__n99["type"] := "NewExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "Number";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "UnaryExpression";
__n102["operator"] := "-";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := 1.;
__n103["raw"] := "1";
__n102["argument"] := __n103;
__n102["prefix"] := true;
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["left"] := __n99;
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "y";
__n98["right"] := __n104;
__n97["left"] := __n98;
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "y";
__n97["right"] := __n105;
__n96["test"] := __n97;
__n106 := {  };
__n106["type"] := "BlockStatement";
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "$ERROR";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "#4: (var y = new Number(0); (new Number(-1) && y) === y";
__n112["raw"] := "'#4: (var y = new Number(0); (new Number(-1) && y) === y'";
__n111 := [ __n112 ];
__n109["arguments"] := __n111;
__n108["expression"] := __n109;
__n107 := [ __n108 ];
__n106["body"] := __n107;
__n96["consequent"] := __n106;
__n96["alternate"] := null;
__n113 := {  };
__n113["type"] := "VariableDeclaration";
__n115 := {  };
__n115["type"] := "VariableDeclarator";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "y";
__n115["id"] := __n116;
__n117 := {  };
__n117["type"] := "NewExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "Number";
__n117["callee"] := __n118;
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "NaN";
__n119 := [ __n120 ];
__n117["arguments"] := __n119;
__n115["init"] := __n117;
__n114 := [ __n115 ];
__n113["declarations"] := __n114;
__n113["kind"] := "var";
__n121 := {  };
__n121["type"] := "IfStatement";
__n122 := {  };
__n122["type"] := "BinaryExpression";
__n122["operator"] := "!==";
__n123 := {  };
__n123["type"] := "LogicalExpression";
__n123["operator"] := "&&";
__n124 := {  };
__n124["type"] := "NewExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "Number";
__n124["callee"] := __n125;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := 0.;
__n127["raw"] := "0";
__n126 := [ __n127 ];
__n124["arguments"] := __n126;
__n123["left"] := __n124;
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "y";
__n123["right"] := __n128;
__n122["left"] := __n123;
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "y";
__n122["right"] := __n129;
__n121["test"] := __n122;
__n130 := {  };
__n130["type"] := "BlockStatement";
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "$ERROR";
__n133["callee"] := __n134;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "#5: (var y = new Number(NaN); (new Number(0) && y) === y";
__n136["raw"] := "'#5: (var y = new Number(NaN); (new Number(0) && y) === y'";
__n135 := [ __n136 ];
__n133["arguments"] := __n135;
__n132["expression"] := __n133;
__n131 := [ __n132 ];
__n130["body"] := __n131;
__n121["consequent"] := __n130;
__n121["alternate"] := null;
__n137 := {  };
__n137["type"] := "VariableDeclaration";
__n139 := {  };
__n139["type"] := "VariableDeclarator";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "y";
__n139["id"] := __n140;
__n141 := {  };
__n141["type"] := "NewExpression";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "Number";
__n141["callee"] := __n142;
__n144 := {  };
__n144["type"] := "UnaryExpression";
__n144["operator"] := "-";
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := 1.;
__n145["raw"] := "1";
__n144["argument"] := __n145;
__n144["prefix"] := true;
__n143 := [ __n144 ];
__n141["arguments"] := __n143;
__n139["init"] := __n141;
__n138 := [ __n139 ];
__n137["declarations"] := __n138;
__n137["kind"] := "var";
__n146 := {  };
__n146["type"] := "IfStatement";
__n147 := {  };
__n147["type"] := "BinaryExpression";
__n147["operator"] := "!==";
__n148 := {  };
__n148["type"] := "LogicalExpression";
__n148["operator"] := "&&";
__n149 := {  };
__n149["type"] := "NewExpression";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "Number";
__n149["callee"] := __n150;
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "NaN";
__n151 := [ __n152 ];
__n149["arguments"] := __n151;
__n148["left"] := __n149;
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "y";
__n148["right"] := __n153;
__n147["left"] := __n148;
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "y";
__n147["right"] := __n154;
__n146["test"] := __n147;
__n155 := {  };
__n155["type"] := "BlockStatement";
__n157 := {  };
__n157["type"] := "ExpressionStatement";
__n158 := {  };
__n158["type"] := "CallExpression";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "$ERROR";
__n158["callee"] := __n159;
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := "#6: (var y = new Number(-1); (new Number(NaN) && y) === y";
__n161["raw"] := "'#6: (var y = new Number(-1); (new Number(NaN) && y) === y'";
__n160 := [ __n161 ];
__n158["arguments"] := __n160;
__n157["expression"] := __n158;
__n156 := [ __n157 ];
__n155["body"] := __n156;
__n146["consequent"] := __n155;
__n146["alternate"] := null;
__n1 := [ __n2, __n38, __n72, __n88, __n96, __n113, __n121, __n137, __n146 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n162 := [ "y" ];
__n0["variableDeclarations"] := __n162;
__n163 := [  ];
__n0["functionDeclarations"] := __n163;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}