function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "UnaryExpression";
__n4["operator"] := "!";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Number";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "POSITIVE_INFINITY";
__n7["raw"] := "\"POSITIVE_INFINITY\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["argument"] := __n5;
__n4["prefix"] := true;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := false;
__n8["raw"] := "false";
__n3["right"] := __n8;
__n2["test"] := __n3;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "$ERROR";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "+";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "#1: !(+Infinity) === false. Actual: ";
__n16["raw"] := "'#1: !(+Infinity) === false. Actual: '";
__n15["left"] := __n16;
__n17 := {  };
__n17["type"] := "UnaryExpression";
__n17["operator"] := "!";
__n18 := {  };
__n18["type"] := "UnaryExpression";
__n18["operator"] := "+";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Infinity";
__n18["argument"] := __n19;
__n18["prefix"] := true;
__n17["argument"] := __n18;
__n17["prefix"] := true;
__n15["right"] := __n17;
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n2["consequent"] := __n9;
__n2["alternate"] := null;
__n20 := {  };
__n20["type"] := "IfStatement";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "!==";
__n22 := {  };
__n22["type"] := "UnaryExpression";
__n22["operator"] := "!";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Number";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "NEGATIVE_INFINITY";
__n25["raw"] := "\"NEGATIVE_INFINITY\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["argument"] := __n23;
__n22["prefix"] := true;
__n21["left"] := __n22;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := false;
__n26["raw"] := "false";
__n21["right"] := __n26;
__n20["test"] := __n21;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "$ERROR";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "+";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "#2: !(-Infinity) === false. Actual: ";
__n34["raw"] := "'#2: !(-Infinity) === false. Actual: '";
__n33["left"] := __n34;
__n35 := {  };
__n35["type"] := "UnaryExpression";
__n35["operator"] := "!";
__n36 := {  };
__n36["type"] := "UnaryExpression";
__n36["operator"] := "-";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Infinity";
__n36["argument"] := __n37;
__n36["prefix"] := true;
__n35["argument"] := __n36;
__n35["prefix"] := true;
__n33["right"] := __n35;
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n29["expression"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n20["consequent"] := __n27;
__n20["alternate"] := null;
__n38 := {  };
__n38["type"] := "IfStatement";
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "!==";
__n40 := {  };
__n40["type"] := "UnaryExpression";
__n40["operator"] := "!";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Number";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "MAX_VALUE";
__n43["raw"] := "\"MAX_VALUE\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["argument"] := __n41;
__n40["prefix"] := true;
__n39["left"] := __n40;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := false;
__n44["raw"] := "false";
__n39["right"] := __n44;
__n38["test"] := __n39;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "$ERROR";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "+";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "#3: !(Number.MAX_VALUE) === false. Actual: ";
__n52["raw"] := "'#3: !(Number.MAX_VALUE) === false. Actual: '";
__n51["left"] := __n52;
__n53 := {  };
__n53["type"] := "UnaryExpression";
__n53["operator"] := "!";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Number";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "MAX_VALUE";
__n56["raw"] := "\"MAX_VALUE\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["argument"] := __n54;
__n53["prefix"] := true;
__n51["right"] := __n53;
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n38["consequent"] := __n45;
__n38["alternate"] := null;
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "UnaryExpression";
__n59["operator"] := "!";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "Number";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "MIN_VALUE";
__n62["raw"] := "\"MIN_VALUE\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["argument"] := __n60;
__n59["prefix"] := true;
__n58["left"] := __n59;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := false;
__n63["raw"] := "false";
__n58["right"] := __n63;
__n57["test"] := __n58;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$ERROR";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "+";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "#4: !(Number.MIN_VALUE) === false. Actual: ";
__n71["raw"] := "'#4: !(Number.MIN_VALUE) === false. Actual: '";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "UnaryExpression";
__n72["operator"] := "!";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "Number";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "MIN_VALUE";
__n75["raw"] := "\"MIN_VALUE\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n72["argument"] := __n73;
__n72["prefix"] := true;
__n70["right"] := __n72;
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n57["consequent"] := __n64;
__n57["alternate"] := null;
__n76 := {  };
__n76["type"] := "IfStatement";
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "!==";
__n78 := {  };
__n78["type"] := "UnaryExpression";
__n78["operator"] := "!";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 13.;
__n79["raw"] := "13";
__n78["argument"] := __n79;
__n78["prefix"] := true;
__n77["left"] := __n78;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := false;
__n80["raw"] := "false";
__n77["right"] := __n80;
__n76["test"] := __n77;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "$ERROR";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "+";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "#5: !(13) === false. Actual: ";
__n88["raw"] := "'#5: !(13) === false. Actual: '";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "UnaryExpression";
__n89["operator"] := "!";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 13.;
__n90["raw"] := "13";
__n89["argument"] := __n90;
__n89["prefix"] := true;
__n87["right"] := __n89;
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n82 := [ __n83 ];
__n81["body"] := __n82;
__n76["consequent"] := __n81;
__n76["alternate"] := null;
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "!==";
__n93 := {  };
__n93["type"] := "UnaryExpression";
__n93["operator"] := "!";
__n94 := {  };
__n94["type"] := "UnaryExpression";
__n94["operator"] := "-";
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 13.;
__n95["raw"] := "13";
__n94["argument"] := __n95;
__n94["prefix"] := true;
__n93["argument"] := __n94;
__n93["prefix"] := true;
__n92["left"] := __n93;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := false;
__n96["raw"] := "false";
__n92["right"] := __n96;
__n91["test"] := __n92;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "$ERROR";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "+";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "#6: !(-13) === false. Actual: ";
__n104["raw"] := "'#6: !(-13) === false. Actual: '";
__n103["left"] := __n104;
__n105 := {  };
__n105["type"] := "UnaryExpression";
__n105["operator"] := "!";
__n106 := {  };
__n106["type"] := "UnaryExpression";
__n106["operator"] := "-";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 13.;
__n107["raw"] := "13";
__n106["argument"] := __n107;
__n106["prefix"] := true;
__n105["argument"] := __n106;
__n105["prefix"] := true;
__n103["right"] := __n105;
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["expression"] := __n100;
__n98 := [ __n99 ];
__n97["body"] := __n98;
__n91["consequent"] := __n97;
__n91["alternate"] := null;
__n108 := {  };
__n108["type"] := "IfStatement";
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "!==";
__n110 := {  };
__n110["type"] := "UnaryExpression";
__n110["operator"] := "!";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 1.3;
__n111["raw"] := "1.3";
__n110["argument"] := __n111;
__n110["prefix"] := true;
__n109["left"] := __n110;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := false;
__n112["raw"] := "false";
__n109["right"] := __n112;
__n108["test"] := __n109;
__n113 := {  };
__n113["type"] := "BlockStatement";
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "$ERROR";
__n116["callee"] := __n117;
__n119 := {  };
__n119["type"] := "BinaryExpression";
__n119["operator"] := "+";
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "#7: !(1.3) === false. Actual: ";
__n120["raw"] := "'#7: !(1.3) === false. Actual: '";
__n119["left"] := __n120;
__n121 := {  };
__n121["type"] := "UnaryExpression";
__n121["operator"] := "!";
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := 1.3;
__n122["raw"] := "1.3";
__n121["argument"] := __n122;
__n121["prefix"] := true;
__n119["right"] := __n121;
__n118 := [ __n119 ];
__n116["arguments"] := __n118;
__n115["expression"] := __n116;
__n114 := [ __n115 ];
__n113["body"] := __n114;
__n108["consequent"] := __n113;
__n108["alternate"] := null;
__n123 := {  };
__n123["type"] := "IfStatement";
__n124 := {  };
__n124["type"] := "BinaryExpression";
__n124["operator"] := "!==";
__n125 := {  };
__n125["type"] := "UnaryExpression";
__n125["operator"] := "!";
__n126 := {  };
__n126["type"] := "UnaryExpression";
__n126["operator"] := "-";
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := 1.3;
__n127["raw"] := "1.3";
__n126["argument"] := __n127;
__n126["prefix"] := true;
__n125["argument"] := __n126;
__n125["prefix"] := true;
__n124["left"] := __n125;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := false;
__n128["raw"] := "false";
__n124["right"] := __n128;
__n123["test"] := __n124;
__n129 := {  };
__n129["type"] := "BlockStatement";
__n131 := {  };
__n131["type"] := "ExpressionStatement";
__n132 := {  };
__n132["type"] := "CallExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "$ERROR";
__n132["callee"] := __n133;
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "+";
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "#8: !(-1.3) === false. Actual: ";
__n136["raw"] := "'#8: !(-1.3) === false. Actual: '";
__n135["left"] := __n136;
__n137 := {  };
__n137["type"] := "UnaryExpression";
__n137["operator"] := "!";
__n138 := {  };
__n138["type"] := "UnaryExpression";
__n138["operator"] := "-";
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := 1.3;
__n139["raw"] := "1.3";
__n138["argument"] := __n139;
__n138["prefix"] := true;
__n137["argument"] := __n138;
__n137["prefix"] := true;
__n135["right"] := __n137;
__n134 := [ __n135 ];
__n132["arguments"] := __n134;
__n131["expression"] := __n132;
__n130 := [ __n131 ];
__n129["body"] := __n130;
__n123["consequent"] := __n129;
__n123["alternate"] := null;
__n1 := [ __n2, __n20, __n38, __n57, __n76, __n91, __n108, __n123 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n140 := [  ];
__n0["variableDeclarations"] := __n140;
__n141 := [  ];
__n0["functionDeclarations"] := __n141;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}