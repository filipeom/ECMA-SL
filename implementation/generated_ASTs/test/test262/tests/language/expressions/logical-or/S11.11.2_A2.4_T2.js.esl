function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "FunctionExpression";
__n6["id"] := null;
__n7 := [  ];
__n6["params"] := __n7;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ThrowStatement";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "x";
__n11["raw"] := "\"x\"";
__n10["argument"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n12 := [  ];
__n8["variableDeclarations"] := __n12;
__n13 := [  ];
__n8["functionDeclarations"] := __n13;
__n8["codeType"] := "function";
__n8["strict"] := false;
__n6["body"] := __n8;
__n6["generator"] := false;
__n6["expression"] := false;
__n6["async"] := false;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "y";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "FunctionExpression";
__n18["id"] := null;
__n19 := [  ];
__n18["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ThrowStatement";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "y";
__n23["raw"] := "\"y\"";
__n22["argument"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n24 := [  ];
__n20["variableDeclarations"] := __n24;
__n25 := [  ];
__n20["functionDeclarations"] := __n25;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n18["body"] := __n20;
__n18["generator"] := false;
__n18["expression"] := false;
__n18["async"] := false;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n26 := {  };
__n26["type"] := "TryStatement";
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "LogicalExpression";
__n30["operator"] := "||";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "x";
__n31["callee"] := __n32;
__n33 := [  ];
__n31["arguments"] := __n33;
__n30["left"] := __n31;
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "y";
__n34["callee"] := __n35;
__n36 := [  ];
__n34["arguments"] := __n36;
__n30["right"] := __n34;
__n29["expression"] := __n30;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#1.1: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() || y() throw \"x\". Actual: ";
__n42["raw"] := "'#1.1: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() || y() throw \"x\". Actual: '";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "LogicalExpression";
__n43["operator"] := "||";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "x";
__n44["callee"] := __n45;
__n46 := [  ];
__n44["arguments"] := __n46;
__n43["left"] := __n44;
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "y";
__n47["callee"] := __n48;
__n49 := [  ];
__n47["arguments"] := __n49;
__n43["right"] := __n47;
__n41["right"] := __n43;
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n28 := [ __n29, __n37 ];
__n27["body"] := __n28;
__n26["block"] := __n27;
__n50 := {  };
__n50["type"] := "CatchClause";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "e";
__n50["param"] := __n51;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "===";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "e";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "y";
__n57["raw"] := "\"y\"";
__n55["right"] := __n57;
__n54["test"] := __n55;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$ERROR";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#1.2: First expression is evaluated first, and then second expression";
__n64["raw"] := "'#1.2: First expression is evaluated first, and then second expression'";
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n54["consequent"] := __n58;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "IfStatement";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "!==";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "e";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "x";
__n70["raw"] := "\"x\"";
__n68["right"] := __n70;
__n67["test"] := __n68;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "$ERROR";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "#1.3: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() || y() throw \"x\". Actual: ";
__n78["raw"] := "'#1.3: var x = function () { throw \"x\"; }; var y = function () { throw \"y\"; }; x() || y() throw \"x\". Actual: '";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "e";
__n77["right"] := __n79;
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n67["consequent"] := __n71;
__n67["alternate"] := null;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n54["alternate"] := __n65;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n50["body"] := __n52;
__n26["handler"] := __n50;
__n26["finalizer"] := null;
__n1 := [ __n2, __n14, __n26 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n80 := [ "x", "y" ];
__n0["variableDeclarations"] := __n80;
__n81 := [  ];
__n0["functionDeclarations"] := __n81;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}