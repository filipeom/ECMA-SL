function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "isNaN";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "BinaryExpression";
__n7["operator"] := "%";
__n8 := {  };
__n8["type"] := "ObjectExpression";
__n9 := [  ];
__n8["properties"] := __n9;
__n7["left"] := __n8;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ReturnStatement";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n14["argument"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n16 := [  ];
__n12["variableDeclarations"] := __n16;
__n17 := [  ];
__n12["functionDeclarations"] := __n17;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["expression"] := false;
__n10["async"] := false;
__n7["right"] := __n10;
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := true;
__n18["raw"] := "true";
__n3["right"] := __n18;
__n2["test"] := __n3;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "$ERROR";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "+";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "#1: {} % function(){return 1} === Not-a-Number. Actual: ";
__n26["raw"] := "'#1: {} % function(){return 1} === Not-a-Number. Actual: '";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "%";
__n28 := {  };
__n28["type"] := "ObjectExpression";
__n29 := [  ];
__n28["properties"] := __n29;
__n27["left"] := __n28;
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [  ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ReturnStatement";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 1.;
__n35["raw"] := "1";
__n34["argument"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n36 := [  ];
__n32["variableDeclarations"] := __n36;
__n37 := [  ];
__n32["functionDeclarations"] := __n37;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["expression"] := false;
__n30["async"] := false;
__n27["right"] := __n30;
__n25["right"] := __n27;
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n2["consequent"] := __n19;
__n2["alternate"] := null;
__n38 := {  };
__n38["type"] := "IfStatement";
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "!==";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "isNaN";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "%";
__n44 := {  };
__n44["type"] := "FunctionExpression";
__n44["id"] := null;
__n45 := [  ];
__n44["params"] := __n45;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ReturnStatement";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.;
__n49["raw"] := "1";
__n48["argument"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n50 := [  ];
__n46["variableDeclarations"] := __n50;
__n51 := [  ];
__n46["functionDeclarations"] := __n51;
__n46["codeType"] := "function";
__n46["strict"] := false;
__n44["body"] := __n46;
__n44["generator"] := false;
__n44["expression"] := false;
__n44["async"] := false;
__n43["left"] := __n44;
__n52 := {  };
__n52["type"] := "ObjectExpression";
__n53 := [  ];
__n52["properties"] := __n53;
__n43["right"] := __n52;
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["left"] := __n40;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := true;
__n54["raw"] := "true";
__n39["right"] := __n54;
__n38["test"] := __n39;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "#2: function(){return 1} % {} === Not-a-Number. Actual: ";
__n62["raw"] := "'#2: function(){return 1} % {} === Not-a-Number. Actual: '";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "%";
__n64 := {  };
__n64["type"] := "FunctionExpression";
__n64["id"] := null;
__n65 := [  ];
__n64["params"] := __n65;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ReturnStatement";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 1.;
__n69["raw"] := "1";
__n68["argument"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n70 := [  ];
__n66["variableDeclarations"] := __n70;
__n71 := [  ];
__n66["functionDeclarations"] := __n71;
__n66["codeType"] := "function";
__n66["strict"] := false;
__n64["body"] := __n66;
__n64["generator"] := false;
__n64["expression"] := false;
__n64["async"] := false;
__n63["left"] := __n64;
__n72 := {  };
__n72["type"] := "ObjectExpression";
__n73 := [  ];
__n72["properties"] := __n73;
__n63["right"] := __n72;
__n61["right"] := __n63;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n38["consequent"] := __n55;
__n38["alternate"] := null;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "!==";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "isNaN";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "%";
__n80 := {  };
__n80["type"] := "FunctionExpression";
__n80["id"] := null;
__n81 := [  ];
__n80["params"] := __n81;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ReturnStatement";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := 1.;
__n85["raw"] := "1";
__n84["argument"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n86 := [  ];
__n82["variableDeclarations"] := __n86;
__n87 := [  ];
__n82["functionDeclarations"] := __n87;
__n82["codeType"] := "function";
__n82["strict"] := false;
__n80["body"] := __n82;
__n80["generator"] := false;
__n80["expression"] := false;
__n80["async"] := false;
__n79["left"] := __n80;
__n88 := {  };
__n88["type"] := "FunctionExpression";
__n88["id"] := null;
__n89 := [  ];
__n88["params"] := __n89;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ReturnStatement";
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 1.;
__n93["raw"] := "1";
__n92["argument"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n94 := [  ];
__n90["variableDeclarations"] := __n94;
__n95 := [  ];
__n90["functionDeclarations"] := __n95;
__n90["codeType"] := "function";
__n90["strict"] := false;
__n88["body"] := __n90;
__n88["generator"] := false;
__n88["expression"] := false;
__n88["async"] := false;
__n79["right"] := __n88;
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["left"] := __n76;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := true;
__n96["raw"] := "true";
__n75["right"] := __n96;
__n74["test"] := __n75;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "$ERROR";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "+";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "#3: function(){return 1} % function(){return 1} === Not-a-Number. Actual: ";
__n104["raw"] := "'#3: function(){return 1} % function(){return 1} === Not-a-Number. Actual: '";
__n103["left"] := __n104;
__n105 := {  };
__n105["type"] := "BinaryExpression";
__n105["operator"] := "%";
__n106 := {  };
__n106["type"] := "FunctionExpression";
__n106["id"] := null;
__n107 := [  ];
__n106["params"] := __n107;
__n108 := {  };
__n108["type"] := "BlockStatement";
__n110 := {  };
__n110["type"] := "ReturnStatement";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 1.;
__n111["raw"] := "1";
__n110["argument"] := __n111;
__n109 := [ __n110 ];
__n108["body"] := __n109;
__n112 := [  ];
__n108["variableDeclarations"] := __n112;
__n113 := [  ];
__n108["functionDeclarations"] := __n113;
__n108["codeType"] := "function";
__n108["strict"] := false;
__n106["body"] := __n108;
__n106["generator"] := false;
__n106["expression"] := false;
__n106["async"] := false;
__n105["left"] := __n106;
__n114 := {  };
__n114["type"] := "FunctionExpression";
__n114["id"] := null;
__n115 := [  ];
__n114["params"] := __n115;
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ReturnStatement";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 1.;
__n119["raw"] := "1";
__n118["argument"] := __n119;
__n117 := [ __n118 ];
__n116["body"] := __n117;
__n120 := [  ];
__n116["variableDeclarations"] := __n120;
__n121 := [  ];
__n116["functionDeclarations"] := __n121;
__n116["codeType"] := "function";
__n116["strict"] := false;
__n114["body"] := __n116;
__n114["generator"] := false;
__n114["expression"] := false;
__n114["async"] := false;
__n105["right"] := __n114;
__n103["right"] := __n105;
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["expression"] := __n100;
__n98 := [ __n99 ];
__n97["body"] := __n98;
__n74["consequent"] := __n97;
__n74["alternate"] := null;
__n122 := {  };
__n122["type"] := "IfStatement";
__n123 := {  };
__n123["type"] := "BinaryExpression";
__n123["operator"] := "!==";
__n124 := {  };
__n124["type"] := "CallExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "isNaN";
__n124["callee"] := __n125;
__n127 := {  };
__n127["type"] := "BinaryExpression";
__n127["operator"] := "%";
__n128 := {  };
__n128["type"] := "ObjectExpression";
__n129 := [  ];
__n128["properties"] := __n129;
__n127["left"] := __n128;
__n130 := {  };
__n130["type"] := "ObjectExpression";
__n131 := [  ];
__n130["properties"] := __n131;
__n127["right"] := __n130;
__n126 := [ __n127 ];
__n124["arguments"] := __n126;
__n123["left"] := __n124;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := true;
__n132["raw"] := "true";
__n123["right"] := __n132;
__n122["test"] := __n123;
__n133 := {  };
__n133["type"] := "BlockStatement";
__n135 := {  };
__n135["type"] := "ExpressionStatement";
__n136 := {  };
__n136["type"] := "CallExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "$ERROR";
__n136["callee"] := __n137;
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "+";
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "#4: {} % {} === Not-a-Number. Actual: ";
__n140["raw"] := "'#4: {} % {} === Not-a-Number. Actual: '";
__n139["left"] := __n140;
__n141 := {  };
__n141["type"] := "BinaryExpression";
__n141["operator"] := "%";
__n142 := {  };
__n142["type"] := "ObjectExpression";
__n143 := [  ];
__n142["properties"] := __n143;
__n141["left"] := __n142;
__n144 := {  };
__n144["type"] := "ObjectExpression";
__n145 := [  ];
__n144["properties"] := __n145;
__n141["right"] := __n144;
__n139["right"] := __n141;
__n138 := [ __n139 ];
__n136["arguments"] := __n138;
__n135["expression"] := __n136;
__n134 := [ __n135 ];
__n133["body"] := __n134;
__n122["consequent"] := __n133;
__n122["alternate"] := null;
__n1 := [ __n2, __n38, __n74, __n122 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n146 := [  ];
__n0["variableDeclarations"] := __n146;
__n147 := [  ];
__n0["functionDeclarations"] := __n147;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}