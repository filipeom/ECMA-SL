function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "isNaN";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "BinaryExpression";
__n7["operator"] := "%";
__n8 := {  };
__n8["type"] := "UnaryExpression";
__n8["operator"] := "-";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0";
__n8["argument"] := __n9;
__n8["prefix"] := true;
__n7["left"] := __n8;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n7["right"] := __n10;
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := true;
__n11["raw"] := "true";
__n3["right"] := __n11;
__n2["test"] := __n3;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "$ERROR";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "+";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "#1: -0 % 0 === Not-a-Number. Actual: ";
__n19["raw"] := "'#1: -0 % 0 === Not-a-Number. Actual: '";
__n18["left"] := __n19;
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "%";
__n21 := {  };
__n21["type"] := "UnaryExpression";
__n21["operator"] := "-";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 0.;
__n22["raw"] := "0";
__n21["argument"] := __n22;
__n21["prefix"] := true;
__n20["left"] := __n21;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 0.;
__n23["raw"] := "0";
__n20["right"] := __n23;
__n18["right"] := __n20;
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n2["consequent"] := __n12;
__n2["alternate"] := null;
__n24 := {  };
__n24["type"] := "IfStatement";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "!==";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "isNaN";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "%";
__n30 := {  };
__n30["type"] := "UnaryExpression";
__n30["operator"] := "-";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 0.;
__n31["raw"] := "0";
__n30["argument"] := __n31;
__n30["prefix"] := true;
__n29["left"] := __n30;
__n32 := {  };
__n32["type"] := "UnaryExpression";
__n32["operator"] := "-";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n32["argument"] := __n33;
__n32["prefix"] := true;
__n29["right"] := __n32;
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["left"] := __n26;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := true;
__n34["raw"] := "true";
__n25["right"] := __n34;
__n24["test"] := __n25;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#2: -0 % -0 === Not-a-Number. Actual: ";
__n42["raw"] := "'#2: -0 % -0 === Not-a-Number. Actual: '";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "%";
__n44 := {  };
__n44["type"] := "UnaryExpression";
__n44["operator"] := "-";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 0.;
__n45["raw"] := "0";
__n44["argument"] := __n45;
__n44["prefix"] := true;
__n43["left"] := __n44;
__n46 := {  };
__n46["type"] := "UnaryExpression";
__n46["operator"] := "-";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 0.;
__n47["raw"] := "0";
__n46["argument"] := __n47;
__n46["prefix"] := true;
__n43["right"] := __n46;
__n41["right"] := __n43;
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n24["consequent"] := __n35;
__n24["alternate"] := null;
__n48 := {  };
__n48["type"] := "IfStatement";
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "!==";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "isNaN";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "%";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 0.;
__n54["raw"] := "0";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 0.;
__n55["raw"] := "0";
__n53["right"] := __n55;
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["left"] := __n50;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := true;
__n56["raw"] := "true";
__n49["right"] := __n56;
__n48["test"] := __n49;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "$ERROR";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "+";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#3: 0 % 0 === Not-a-Number. Actual: ";
__n64["raw"] := "'#3: 0 % 0 === Not-a-Number. Actual: '";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "%";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 0.;
__n66["raw"] := "0";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 0.;
__n67["raw"] := "0";
__n65["right"] := __n67;
__n63["right"] := __n65;
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n48["consequent"] := __n57;
__n48["alternate"] := null;
__n68 := {  };
__n68["type"] := "IfStatement";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "!==";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "isNaN";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "%";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 0.;
__n74["raw"] := "0";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "UnaryExpression";
__n75["operator"] := "-";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 0.;
__n76["raw"] := "0";
__n75["argument"] := __n76;
__n75["prefix"] := true;
__n73["right"] := __n75;
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["left"] := __n70;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := true;
__n77["raw"] := "true";
__n69["right"] := __n77;
__n68["test"] := __n69;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "$ERROR";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "+";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "#4: 0 % -0 === Not-a-Number. Actual: ";
__n85["raw"] := "'#4: 0 % -0 === Not-a-Number. Actual: '";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "%";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 0.;
__n87["raw"] := "0";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "UnaryExpression";
__n88["operator"] := "-";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 0.;
__n89["raw"] := "0";
__n88["argument"] := __n89;
__n88["prefix"] := true;
__n86["right"] := __n88;
__n84["right"] := __n86;
__n83 := [ __n84 ];
__n81["arguments"] := __n83;
__n80["expression"] := __n81;
__n79 := [ __n80 ];
__n78["body"] := __n79;
__n68["consequent"] := __n78;
__n68["alternate"] := null;
__n90 := {  };
__n90["type"] := "IfStatement";
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "!==";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "isNaN";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "%";
__n96 := {  };
__n96["type"] := "UnaryExpression";
__n96["operator"] := "-";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 1.;
__n97["raw"] := "1";
__n96["argument"] := __n97;
__n96["prefix"] := true;
__n95["left"] := __n96;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 0.;
__n98["raw"] := "0";
__n95["right"] := __n98;
__n94 := [ __n95 ];
__n92["arguments"] := __n94;
__n91["left"] := __n92;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := true;
__n99["raw"] := "true";
__n91["right"] := __n99;
__n90["test"] := __n91;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "$ERROR";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "+";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "#5: 1 % 0 === Not-a-Number. Actual: ";
__n107["raw"] := "'#5: 1 % 0 === Not-a-Number. Actual: '";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "BinaryExpression";
__n108["operator"] := "%";
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := 1.;
__n109["raw"] := "1";
__n108["left"] := __n109;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 0.;
__n110["raw"] := "0";
__n108["right"] := __n110;
__n106["right"] := __n108;
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n102["expression"] := __n103;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n90["consequent"] := __n100;
__n90["alternate"] := null;
__n111 := {  };
__n111["type"] := "IfStatement";
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "!==";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "isNaN";
__n113["callee"] := __n114;
__n116 := {  };
__n116["type"] := "BinaryExpression";
__n116["operator"] := "%";
__n117 := {  };
__n117["type"] := "UnaryExpression";
__n117["operator"] := "-";
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 1.;
__n118["raw"] := "1";
__n117["argument"] := __n118;
__n117["prefix"] := true;
__n116["left"] := __n117;
__n119 := {  };
__n119["type"] := "UnaryExpression";
__n119["operator"] := "-";
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := 0.;
__n120["raw"] := "0";
__n119["argument"] := __n120;
__n119["prefix"] := true;
__n116["right"] := __n119;
__n115 := [ __n116 ];
__n113["arguments"] := __n115;
__n112["left"] := __n113;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := true;
__n121["raw"] := "true";
__n112["right"] := __n121;
__n111["test"] := __n112;
__n122 := {  };
__n122["type"] := "BlockStatement";
__n124 := {  };
__n124["type"] := "ExpressionStatement";
__n125 := {  };
__n125["type"] := "CallExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "$ERROR";
__n125["callee"] := __n126;
__n128 := {  };
__n128["type"] := "BinaryExpression";
__n128["operator"] := "+";
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "#6: -1 % -0 === Not-a-Number. Actual: ";
__n129["raw"] := "'#6: -1 % -0 === Not-a-Number. Actual: '";
__n128["left"] := __n129;
__n130 := {  };
__n130["type"] := "BinaryExpression";
__n130["operator"] := "%";
__n131 := {  };
__n131["type"] := "UnaryExpression";
__n131["operator"] := "-";
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := 1.;
__n132["raw"] := "1";
__n131["argument"] := __n132;
__n131["prefix"] := true;
__n130["left"] := __n131;
__n133 := {  };
__n133["type"] := "UnaryExpression";
__n133["operator"] := "-";
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 0.;
__n134["raw"] := "0";
__n133["argument"] := __n134;
__n133["prefix"] := true;
__n130["right"] := __n133;
__n128["right"] := __n130;
__n127 := [ __n128 ];
__n125["arguments"] := __n127;
__n124["expression"] := __n125;
__n123 := [ __n124 ];
__n122["body"] := __n123;
__n111["consequent"] := __n122;
__n111["alternate"] := null;
__n135 := {  };
__n135["type"] := "IfStatement";
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "!==";
__n137 := {  };
__n137["type"] := "CallExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "isNaN";
__n137["callee"] := __n138;
__n140 := {  };
__n140["type"] := "BinaryExpression";
__n140["operator"] := "%";
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := 1.;
__n141["raw"] := "1";
__n140["left"] := __n141;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := 0.;
__n142["raw"] := "0";
__n140["right"] := __n142;
__n139 := [ __n140 ];
__n137["arguments"] := __n139;
__n136["left"] := __n137;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := true;
__n143["raw"] := "true";
__n136["right"] := __n143;
__n135["test"] := __n136;
__n144 := {  };
__n144["type"] := "BlockStatement";
__n146 := {  };
__n146["type"] := "ExpressionStatement";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "$ERROR";
__n147["callee"] := __n148;
__n150 := {  };
__n150["type"] := "BinaryExpression";
__n150["operator"] := "+";
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "#7: 1 % 0 === Not-a-Number. Actual: ";
__n151["raw"] := "'#7: 1 % 0 === Not-a-Number. Actual: '";
__n150["left"] := __n151;
__n152 := {  };
__n152["type"] := "BinaryExpression";
__n152["operator"] := "%";
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := 1.;
__n153["raw"] := "1";
__n152["left"] := __n153;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := 0.;
__n154["raw"] := "0";
__n152["right"] := __n154;
__n150["right"] := __n152;
__n149 := [ __n150 ];
__n147["arguments"] := __n149;
__n146["expression"] := __n147;
__n145 := [ __n146 ];
__n144["body"] := __n145;
__n135["consequent"] := __n144;
__n135["alternate"] := null;
__n155 := {  };
__n155["type"] := "IfStatement";
__n156 := {  };
__n156["type"] := "BinaryExpression";
__n156["operator"] := "!==";
__n157 := {  };
__n157["type"] := "CallExpression";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "isNaN";
__n157["callee"] := __n158;
__n160 := {  };
__n160["type"] := "BinaryExpression";
__n160["operator"] := "%";
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := 1.;
__n161["raw"] := "1";
__n160["left"] := __n161;
__n162 := {  };
__n162["type"] := "UnaryExpression";
__n162["operator"] := "-";
__n163 := {  };
__n163["type"] := "Literal";
__n163["value"] := 0.;
__n163["raw"] := "0";
__n162["argument"] := __n163;
__n162["prefix"] := true;
__n160["right"] := __n162;
__n159 := [ __n160 ];
__n157["arguments"] := __n159;
__n156["left"] := __n157;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := true;
__n164["raw"] := "true";
__n156["right"] := __n164;
__n155["test"] := __n156;
__n165 := {  };
__n165["type"] := "BlockStatement";
__n167 := {  };
__n167["type"] := "ExpressionStatement";
__n168 := {  };
__n168["type"] := "CallExpression";
__n169 := {  };
__n169["type"] := "Identifier";
__n169["name"] := "$ERROR";
__n168["callee"] := __n169;
__n171 := {  };
__n171["type"] := "BinaryExpression";
__n171["operator"] := "+";
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := "#8: 1 % -0 === Not-a-Number. Actual: ";
__n172["raw"] := "'#8: 1 % -0 === Not-a-Number. Actual: '";
__n171["left"] := __n172;
__n173 := {  };
__n173["type"] := "BinaryExpression";
__n173["operator"] := "%";
__n174 := {  };
__n174["type"] := "Literal";
__n174["value"] := 1.;
__n174["raw"] := "1";
__n173["left"] := __n174;
__n175 := {  };
__n175["type"] := "UnaryExpression";
__n175["operator"] := "-";
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := 0.;
__n176["raw"] := "0";
__n175["argument"] := __n176;
__n175["prefix"] := true;
__n173["right"] := __n175;
__n171["right"] := __n173;
__n170 := [ __n171 ];
__n168["arguments"] := __n170;
__n167["expression"] := __n168;
__n166 := [ __n167 ];
__n165["body"] := __n166;
__n155["consequent"] := __n165;
__n155["alternate"] := null;
__n177 := {  };
__n177["type"] := "IfStatement";
__n178 := {  };
__n178["type"] := "BinaryExpression";
__n178["operator"] := "!==";
__n179 := {  };
__n179["type"] := "CallExpression";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "isNaN";
__n179["callee"] := __n180;
__n182 := {  };
__n182["type"] := "BinaryExpression";
__n182["operator"] := "%";
__n183 := {  };
__n183["type"] := "MemberExpression";
__n184 := {  };
__n184["type"] := "Identifier";
__n184["name"] := "Number";
__n183["object"] := __n184;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "NEGATIVE_INFINITY";
__n185["raw"] := "\"NEGATIVE_INFINITY\"";
__n183["property"] := __n185;
__n183["computed"] := true;
__n182["left"] := __n183;
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := 0.;
__n186["raw"] := "0";
__n182["right"] := __n186;
__n181 := [ __n182 ];
__n179["arguments"] := __n181;
__n178["left"] := __n179;
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := true;
__n187["raw"] := "true";
__n178["right"] := __n187;
__n177["test"] := __n178;
__n188 := {  };
__n188["type"] := "BlockStatement";
__n190 := {  };
__n190["type"] := "ExpressionStatement";
__n191 := {  };
__n191["type"] := "CallExpression";
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "$ERROR";
__n191["callee"] := __n192;
__n194 := {  };
__n194["type"] := "BinaryExpression";
__n194["operator"] := "+";
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "#9: Infinity % 0 === Not-a-Number. Actual: ";
__n195["raw"] := "'#9: Infinity % 0 === Not-a-Number. Actual: '";
__n194["left"] := __n195;
__n196 := {  };
__n196["type"] := "BinaryExpression";
__n196["operator"] := "%";
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "Infinity";
__n196["left"] := __n197;
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := 0.;
__n198["raw"] := "0";
__n196["right"] := __n198;
__n194["right"] := __n196;
__n193 := [ __n194 ];
__n191["arguments"] := __n193;
__n190["expression"] := __n191;
__n189 := [ __n190 ];
__n188["body"] := __n189;
__n177["consequent"] := __n188;
__n177["alternate"] := null;
__n199 := {  };
__n199["type"] := "IfStatement";
__n200 := {  };
__n200["type"] := "BinaryExpression";
__n200["operator"] := "!==";
__n201 := {  };
__n201["type"] := "CallExpression";
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "isNaN";
__n201["callee"] := __n202;
__n204 := {  };
__n204["type"] := "BinaryExpression";
__n204["operator"] := "%";
__n205 := {  };
__n205["type"] := "MemberExpression";
__n206 := {  };
__n206["type"] := "Identifier";
__n206["name"] := "Number";
__n205["object"] := __n206;
__n207 := {  };
__n207["type"] := "Literal";
__n207["value"] := "NEGATIVE_INFINITY";
__n207["raw"] := "\"NEGATIVE_INFINITY\"";
__n205["property"] := __n207;
__n205["computed"] := true;
__n204["left"] := __n205;
__n208 := {  };
__n208["type"] := "UnaryExpression";
__n208["operator"] := "-";
__n209 := {  };
__n209["type"] := "Literal";
__n209["value"] := 0.;
__n209["raw"] := "0";
__n208["argument"] := __n209;
__n208["prefix"] := true;
__n204["right"] := __n208;
__n203 := [ __n204 ];
__n201["arguments"] := __n203;
__n200["left"] := __n201;
__n210 := {  };
__n210["type"] := "Literal";
__n210["value"] := true;
__n210["raw"] := "true";
__n200["right"] := __n210;
__n199["test"] := __n200;
__n211 := {  };
__n211["type"] := "BlockStatement";
__n213 := {  };
__n213["type"] := "ExpressionStatement";
__n214 := {  };
__n214["type"] := "CallExpression";
__n215 := {  };
__n215["type"] := "Identifier";
__n215["name"] := "$ERROR";
__n214["callee"] := __n215;
__n217 := {  };
__n217["type"] := "BinaryExpression";
__n217["operator"] := "+";
__n218 := {  };
__n218["type"] := "Literal";
__n218["value"] := "#10: -Infinity % -0 === Not-a-Number. Actual: ";
__n218["raw"] := "'#10: -Infinity % -0 === Not-a-Number. Actual: '";
__n217["left"] := __n218;
__n219 := {  };
__n219["type"] := "BinaryExpression";
__n219["operator"] := "%";
__n220 := {  };
__n220["type"] := "UnaryExpression";
__n220["operator"] := "-";
__n221 := {  };
__n221["type"] := "Identifier";
__n221["name"] := "Infinity";
__n220["argument"] := __n221;
__n220["prefix"] := true;
__n219["left"] := __n220;
__n222 := {  };
__n222["type"] := "UnaryExpression";
__n222["operator"] := "-";
__n223 := {  };
__n223["type"] := "Literal";
__n223["value"] := 0.;
__n223["raw"] := "0";
__n222["argument"] := __n223;
__n222["prefix"] := true;
__n219["right"] := __n222;
__n217["right"] := __n219;
__n216 := [ __n217 ];
__n214["arguments"] := __n216;
__n213["expression"] := __n214;
__n212 := [ __n213 ];
__n211["body"] := __n212;
__n199["consequent"] := __n211;
__n199["alternate"] := null;
__n224 := {  };
__n224["type"] := "IfStatement";
__n225 := {  };
__n225["type"] := "BinaryExpression";
__n225["operator"] := "!==";
__n226 := {  };
__n226["type"] := "CallExpression";
__n227 := {  };
__n227["type"] := "Identifier";
__n227["name"] := "isNaN";
__n226["callee"] := __n227;
__n229 := {  };
__n229["type"] := "BinaryExpression";
__n229["operator"] := "%";
__n230 := {  };
__n230["type"] := "MemberExpression";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "Number";
__n230["object"] := __n231;
__n232 := {  };
__n232["type"] := "Literal";
__n232["value"] := "POSITIVE_INFINITY";
__n232["raw"] := "\"POSITIVE_INFINITY\"";
__n230["property"] := __n232;
__n230["computed"] := true;
__n229["left"] := __n230;
__n233 := {  };
__n233["type"] := "Literal";
__n233["value"] := 0.;
__n233["raw"] := "0";
__n229["right"] := __n233;
__n228 := [ __n229 ];
__n226["arguments"] := __n228;
__n225["left"] := __n226;
__n234 := {  };
__n234["type"] := "Literal";
__n234["value"] := true;
__n234["raw"] := "true";
__n225["right"] := __n234;
__n224["test"] := __n225;
__n235 := {  };
__n235["type"] := "BlockStatement";
__n237 := {  };
__n237["type"] := "ExpressionStatement";
__n238 := {  };
__n238["type"] := "CallExpression";
__n239 := {  };
__n239["type"] := "Identifier";
__n239["name"] := "$ERROR";
__n238["callee"] := __n239;
__n241 := {  };
__n241["type"] := "BinaryExpression";
__n241["operator"] := "+";
__n242 := {  };
__n242["type"] := "Literal";
__n242["value"] := "#11: Infinity % 0 === Not-a-Number. Actual: ";
__n242["raw"] := "'#11: Infinity % 0 === Not-a-Number. Actual: '";
__n241["left"] := __n242;
__n243 := {  };
__n243["type"] := "BinaryExpression";
__n243["operator"] := "%";
__n244 := {  };
__n244["type"] := "Identifier";
__n244["name"] := "Infinity";
__n243["left"] := __n244;
__n245 := {  };
__n245["type"] := "Literal";
__n245["value"] := 0.;
__n245["raw"] := "0";
__n243["right"] := __n245;
__n241["right"] := __n243;
__n240 := [ __n241 ];
__n238["arguments"] := __n240;
__n237["expression"] := __n238;
__n236 := [ __n237 ];
__n235["body"] := __n236;
__n224["consequent"] := __n235;
__n224["alternate"] := null;
__n246 := {  };
__n246["type"] := "IfStatement";
__n247 := {  };
__n247["type"] := "BinaryExpression";
__n247["operator"] := "!==";
__n248 := {  };
__n248["type"] := "CallExpression";
__n249 := {  };
__n249["type"] := "Identifier";
__n249["name"] := "isNaN";
__n248["callee"] := __n249;
__n251 := {  };
__n251["type"] := "BinaryExpression";
__n251["operator"] := "%";
__n252 := {  };
__n252["type"] := "MemberExpression";
__n253 := {  };
__n253["type"] := "Identifier";
__n253["name"] := "Number";
__n252["object"] := __n253;
__n254 := {  };
__n254["type"] := "Literal";
__n254["value"] := "POSITIVE_INFINITY";
__n254["raw"] := "\"POSITIVE_INFINITY\"";
__n252["property"] := __n254;
__n252["computed"] := true;
__n251["left"] := __n252;
__n255 := {  };
__n255["type"] := "UnaryExpression";
__n255["operator"] := "-";
__n256 := {  };
__n256["type"] := "Literal";
__n256["value"] := 0.;
__n256["raw"] := "0";
__n255["argument"] := __n256;
__n255["prefix"] := true;
__n251["right"] := __n255;
__n250 := [ __n251 ];
__n248["arguments"] := __n250;
__n247["left"] := __n248;
__n257 := {  };
__n257["type"] := "Literal";
__n257["value"] := true;
__n257["raw"] := "true";
__n247["right"] := __n257;
__n246["test"] := __n247;
__n258 := {  };
__n258["type"] := "BlockStatement";
__n260 := {  };
__n260["type"] := "ExpressionStatement";
__n261 := {  };
__n261["type"] := "CallExpression";
__n262 := {  };
__n262["type"] := "Identifier";
__n262["name"] := "$ERROR";
__n261["callee"] := __n262;
__n264 := {  };
__n264["type"] := "BinaryExpression";
__n264["operator"] := "+";
__n265 := {  };
__n265["type"] := "Literal";
__n265["value"] := "#12: Infinity % -0 === Not-a-Number. Actual: ";
__n265["raw"] := "'#12: Infinity % -0 === Not-a-Number. Actual: '";
__n264["left"] := __n265;
__n266 := {  };
__n266["type"] := "BinaryExpression";
__n266["operator"] := "%";
__n267 := {  };
__n267["type"] := "Identifier";
__n267["name"] := "Infinity";
__n266["left"] := __n267;
__n268 := {  };
__n268["type"] := "UnaryExpression";
__n268["operator"] := "-";
__n269 := {  };
__n269["type"] := "Literal";
__n269["value"] := 0.;
__n269["raw"] := "0";
__n268["argument"] := __n269;
__n268["prefix"] := true;
__n266["right"] := __n268;
__n264["right"] := __n266;
__n263 := [ __n264 ];
__n261["arguments"] := __n263;
__n260["expression"] := __n261;
__n259 := [ __n260 ];
__n258["body"] := __n259;
__n246["consequent"] := __n258;
__n246["alternate"] := null;
__n270 := {  };
__n270["type"] := "IfStatement";
__n271 := {  };
__n271["type"] := "BinaryExpression";
__n271["operator"] := "!==";
__n272 := {  };
__n272["type"] := "CallExpression";
__n273 := {  };
__n273["type"] := "Identifier";
__n273["name"] := "isNaN";
__n272["callee"] := __n273;
__n275 := {  };
__n275["type"] := "BinaryExpression";
__n275["operator"] := "%";
__n276 := {  };
__n276["type"] := "MemberExpression";
__n277 := {  };
__n277["type"] := "Identifier";
__n277["name"] := "Number";
__n276["object"] := __n277;
__n278 := {  };
__n278["type"] := "Literal";
__n278["value"] := "MIN_VALUE";
__n278["raw"] := "\"MIN_VALUE\"";
__n276["property"] := __n278;
__n276["computed"] := true;
__n275["left"] := __n276;
__n279 := {  };
__n279["type"] := "Literal";
__n279["value"] := 0.;
__n279["raw"] := "0";
__n275["right"] := __n279;
__n274 := [ __n275 ];
__n272["arguments"] := __n274;
__n271["left"] := __n272;
__n280 := {  };
__n280["type"] := "Literal";
__n280["value"] := true;
__n280["raw"] := "true";
__n271["right"] := __n280;
__n270["test"] := __n271;
__n281 := {  };
__n281["type"] := "BlockStatement";
__n283 := {  };
__n283["type"] := "ExpressionStatement";
__n284 := {  };
__n284["type"] := "CallExpression";
__n285 := {  };
__n285["type"] := "Identifier";
__n285["name"] := "$ERROR";
__n284["callee"] := __n285;
__n287 := {  };
__n287["type"] := "BinaryExpression";
__n287["operator"] := "+";
__n288 := {  };
__n288["type"] := "Literal";
__n288["value"] := "#13: Number.MIN_VALUE % 0 === Not-a-Number. Actual: ";
__n288["raw"] := "'#13: Number.MIN_VALUE % 0 === Not-a-Number. Actual: '";
__n287["left"] := __n288;
__n289 := {  };
__n289["type"] := "BinaryExpression";
__n289["operator"] := "%";
__n290 := {  };
__n290["type"] := "MemberExpression";
__n291 := {  };
__n291["type"] := "Identifier";
__n291["name"] := "Number";
__n290["object"] := __n291;
__n292 := {  };
__n292["type"] := "Literal";
__n292["value"] := "MIN_VALUE";
__n292["raw"] := "\"MIN_VALUE\"";
__n290["property"] := __n292;
__n290["computed"] := true;
__n289["left"] := __n290;
__n293 := {  };
__n293["type"] := "Literal";
__n293["value"] := 0.;
__n293["raw"] := "0";
__n289["right"] := __n293;
__n287["right"] := __n289;
__n286 := [ __n287 ];
__n284["arguments"] := __n286;
__n283["expression"] := __n284;
__n282 := [ __n283 ];
__n281["body"] := __n282;
__n270["consequent"] := __n281;
__n270["alternate"] := null;
__n294 := {  };
__n294["type"] := "IfStatement";
__n295 := {  };
__n295["type"] := "BinaryExpression";
__n295["operator"] := "!==";
__n296 := {  };
__n296["type"] := "CallExpression";
__n297 := {  };
__n297["type"] := "Identifier";
__n297["name"] := "isNaN";
__n296["callee"] := __n297;
__n299 := {  };
__n299["type"] := "BinaryExpression";
__n299["operator"] := "%";
__n300 := {  };
__n300["type"] := "MemberExpression";
__n301 := {  };
__n301["type"] := "Identifier";
__n301["name"] := "Number";
__n300["object"] := __n301;
__n302 := {  };
__n302["type"] := "Literal";
__n302["value"] := "MIN_VALUE";
__n302["raw"] := "\"MIN_VALUE\"";
__n300["property"] := __n302;
__n300["computed"] := true;
__n299["left"] := __n300;
__n303 := {  };
__n303["type"] := "UnaryExpression";
__n303["operator"] := "-";
__n304 := {  };
__n304["type"] := "Literal";
__n304["value"] := 0.;
__n304["raw"] := "0";
__n303["argument"] := __n304;
__n303["prefix"] := true;
__n299["right"] := __n303;
__n298 := [ __n299 ];
__n296["arguments"] := __n298;
__n295["left"] := __n296;
__n305 := {  };
__n305["type"] := "Literal";
__n305["value"] := true;
__n305["raw"] := "true";
__n295["right"] := __n305;
__n294["test"] := __n295;
__n306 := {  };
__n306["type"] := "BlockStatement";
__n308 := {  };
__n308["type"] := "ExpressionStatement";
__n309 := {  };
__n309["type"] := "CallExpression";
__n310 := {  };
__n310["type"] := "Identifier";
__n310["name"] := "$ERROR";
__n309["callee"] := __n310;
__n312 := {  };
__n312["type"] := "BinaryExpression";
__n312["operator"] := "+";
__n313 := {  };
__n313["type"] := "Literal";
__n313["value"] := "#14: -Number.MIN_VALUE % -0 === Not-a-Number. Actual: ";
__n313["raw"] := "'#14: -Number.MIN_VALUE % -0 === Not-a-Number. Actual: '";
__n312["left"] := __n313;
__n314 := {  };
__n314["type"] := "BinaryExpression";
__n314["operator"] := "%";
__n315 := {  };
__n315["type"] := "UnaryExpression";
__n315["operator"] := "-";
__n316 := {  };
__n316["type"] := "MemberExpression";
__n317 := {  };
__n317["type"] := "Identifier";
__n317["name"] := "Number";
__n316["object"] := __n317;
__n318 := {  };
__n318["type"] := "Literal";
__n318["value"] := "MIN_VALUE";
__n318["raw"] := "\"MIN_VALUE\"";
__n316["property"] := __n318;
__n316["computed"] := true;
__n315["argument"] := __n316;
__n315["prefix"] := true;
__n314["left"] := __n315;
__n319 := {  };
__n319["type"] := "UnaryExpression";
__n319["operator"] := "-";
__n320 := {  };
__n320["type"] := "Literal";
__n320["value"] := 0.;
__n320["raw"] := "0";
__n319["argument"] := __n320;
__n319["prefix"] := true;
__n314["right"] := __n319;
__n312["right"] := __n314;
__n311 := [ __n312 ];
__n309["arguments"] := __n311;
__n308["expression"] := __n309;
__n307 := [ __n308 ];
__n306["body"] := __n307;
__n294["consequent"] := __n306;
__n294["alternate"] := null;
__n321 := {  };
__n321["type"] := "IfStatement";
__n322 := {  };
__n322["type"] := "BinaryExpression";
__n322["operator"] := "!==";
__n323 := {  };
__n323["type"] := "CallExpression";
__n324 := {  };
__n324["type"] := "Identifier";
__n324["name"] := "isNaN";
__n323["callee"] := __n324;
__n326 := {  };
__n326["type"] := "BinaryExpression";
__n326["operator"] := "%";
__n327 := {  };
__n327["type"] := "MemberExpression";
__n328 := {  };
__n328["type"] := "Identifier";
__n328["name"] := "Number";
__n327["object"] := __n328;
__n329 := {  };
__n329["type"] := "Literal";
__n329["value"] := "MAX_VALUE";
__n329["raw"] := "\"MAX_VALUE\"";
__n327["property"] := __n329;
__n327["computed"] := true;
__n326["left"] := __n327;
__n330 := {  };
__n330["type"] := "Literal";
__n330["value"] := 0.;
__n330["raw"] := "0";
__n326["right"] := __n330;
__n325 := [ __n326 ];
__n323["arguments"] := __n325;
__n322["left"] := __n323;
__n331 := {  };
__n331["type"] := "Literal";
__n331["value"] := true;
__n331["raw"] := "true";
__n322["right"] := __n331;
__n321["test"] := __n322;
__n332 := {  };
__n332["type"] := "BlockStatement";
__n334 := {  };
__n334["type"] := "ExpressionStatement";
__n335 := {  };
__n335["type"] := "CallExpression";
__n336 := {  };
__n336["type"] := "Identifier";
__n336["name"] := "$ERROR";
__n335["callee"] := __n336;
__n338 := {  };
__n338["type"] := "BinaryExpression";
__n338["operator"] := "+";
__n339 := {  };
__n339["type"] := "Literal";
__n339["value"] := "#15: Number.MAX_VALUE % 0 === Not-a-Number. Actual: ";
__n339["raw"] := "'#15: Number.MAX_VALUE % 0 === Not-a-Number. Actual: '";
__n338["left"] := __n339;
__n340 := {  };
__n340["type"] := "BinaryExpression";
__n340["operator"] := "%";
__n341 := {  };
__n341["type"] := "MemberExpression";
__n342 := {  };
__n342["type"] := "Identifier";
__n342["name"] := "Number";
__n341["object"] := __n342;
__n343 := {  };
__n343["type"] := "Literal";
__n343["value"] := "MAX_VALUE";
__n343["raw"] := "\"MAX_VALUE\"";
__n341["property"] := __n343;
__n341["computed"] := true;
__n340["left"] := __n341;
__n344 := {  };
__n344["type"] := "Literal";
__n344["value"] := 0.;
__n344["raw"] := "0";
__n340["right"] := __n344;
__n338["right"] := __n340;
__n337 := [ __n338 ];
__n335["arguments"] := __n337;
__n334["expression"] := __n335;
__n333 := [ __n334 ];
__n332["body"] := __n333;
__n321["consequent"] := __n332;
__n321["alternate"] := null;
__n345 := {  };
__n345["type"] := "IfStatement";
__n346 := {  };
__n346["type"] := "BinaryExpression";
__n346["operator"] := "!==";
__n347 := {  };
__n347["type"] := "CallExpression";
__n348 := {  };
__n348["type"] := "Identifier";
__n348["name"] := "isNaN";
__n347["callee"] := __n348;
__n350 := {  };
__n350["type"] := "BinaryExpression";
__n350["operator"] := "%";
__n351 := {  };
__n351["type"] := "MemberExpression";
__n352 := {  };
__n352["type"] := "Identifier";
__n352["name"] := "Number";
__n351["object"] := __n352;
__n353 := {  };
__n353["type"] := "Literal";
__n353["value"] := "MAX_VALUE";
__n353["raw"] := "\"MAX_VALUE\"";
__n351["property"] := __n353;
__n351["computed"] := true;
__n350["left"] := __n351;
__n354 := {  };
__n354["type"] := "UnaryExpression";
__n354["operator"] := "-";
__n355 := {  };
__n355["type"] := "Literal";
__n355["value"] := 0.;
__n355["raw"] := "0";
__n354["argument"] := __n355;
__n354["prefix"] := true;
__n350["right"] := __n354;
__n349 := [ __n350 ];
__n347["arguments"] := __n349;
__n346["left"] := __n347;
__n356 := {  };
__n356["type"] := "Literal";
__n356["value"] := true;
__n356["raw"] := "true";
__n346["right"] := __n356;
__n345["test"] := __n346;
__n357 := {  };
__n357["type"] := "BlockStatement";
__n359 := {  };
__n359["type"] := "ExpressionStatement";
__n360 := {  };
__n360["type"] := "CallExpression";
__n361 := {  };
__n361["type"] := "Identifier";
__n361["name"] := "$ERROR";
__n360["callee"] := __n361;
__n363 := {  };
__n363["type"] := "BinaryExpression";
__n363["operator"] := "+";
__n364 := {  };
__n364["type"] := "Literal";
__n364["value"] := "#16: Number.MAX_VALUE % -0 === Not-a-Number. Actual: ";
__n364["raw"] := "'#16: Number.MAX_VALUE % -0 === Not-a-Number. Actual: '";
__n363["left"] := __n364;
__n365 := {  };
__n365["type"] := "BinaryExpression";
__n365["operator"] := "%";
__n366 := {  };
__n366["type"] := "MemberExpression";
__n367 := {  };
__n367["type"] := "Identifier";
__n367["name"] := "Number";
__n366["object"] := __n367;
__n368 := {  };
__n368["type"] := "Literal";
__n368["value"] := "MAX_VALUE";
__n368["raw"] := "\"MAX_VALUE\"";
__n366["property"] := __n368;
__n366["computed"] := true;
__n365["left"] := __n366;
__n369 := {  };
__n369["type"] := "UnaryExpression";
__n369["operator"] := "-";
__n370 := {  };
__n370["type"] := "Literal";
__n370["value"] := 0.;
__n370["raw"] := "0";
__n369["argument"] := __n370;
__n369["prefix"] := true;
__n365["right"] := __n369;
__n363["right"] := __n365;
__n362 := [ __n363 ];
__n360["arguments"] := __n362;
__n359["expression"] := __n360;
__n358 := [ __n359 ];
__n357["body"] := __n358;
__n345["consequent"] := __n357;
__n345["alternate"] := null;
__n1 := [ __n2, __n24, __n48, __n68, __n90, __n111, __n135, __n155, __n177, __n199, __n224, __n246, __n270, __n294, __n321, __n345 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n371 := [  ];
__n0["variableDeclarations"] := __n371;
__n372 := [  ];
__n0["functionDeclarations"] := __n372;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}