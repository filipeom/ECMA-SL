function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "isNaN";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "BinaryExpression";
__n7["operator"] := "*";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Number";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "NaN";
__n10["raw"] := "\"NaN\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["left"] := __n8;
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Number";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "NaN";
__n13["raw"] := "\"NaN\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n7["right"] := __n11;
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := true;
__n14["raw"] := "true";
__n3["right"] := __n14;
__n2["test"] := __n3;
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "$ERROR";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "+";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "#1: NaN * NaN === Not-a-Number. Actual: ";
__n22["raw"] := "'#1: NaN * NaN === Not-a-Number. Actual: '";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "*";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "NaN";
__n23["left"] := __n24;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "NaN";
__n23["right"] := __n25;
__n21["right"] := __n23;
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n17["expression"] := __n18;
__n16 := [ __n17 ];
__n15["body"] := __n16;
__n2["consequent"] := __n15;
__n2["alternate"] := null;
__n26 := {  };
__n26["type"] := "IfStatement";
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "!==";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "isNaN";
__n28["callee"] := __n29;
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "*";
__n32 := {  };
__n32["type"] := "UnaryExpression";
__n32["operator"] := "+";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n32["argument"] := __n33;
__n32["prefix"] := true;
__n31["left"] := __n32;
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "Number";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "NaN";
__n36["raw"] := "\"NaN\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n31["right"] := __n34;
__n30 := [ __n31 ];
__n28["arguments"] := __n30;
__n27["left"] := __n28;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := true;
__n37["raw"] := "true";
__n27["right"] := __n37;
__n26["test"] := __n27;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "$ERROR";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "+";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "#2: +0 * NaN === Not-a-Number. Actual: ";
__n45["raw"] := "'#2: +0 * NaN === Not-a-Number. Actual: '";
__n44["left"] := __n45;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "*";
__n47 := {  };
__n47["type"] := "UnaryExpression";
__n47["operator"] := "+";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 0.;
__n48["raw"] := "0";
__n47["argument"] := __n48;
__n47["prefix"] := true;
__n46["left"] := __n47;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "NaN";
__n46["right"] := __n49;
__n44["right"] := __n46;
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n26["consequent"] := __n38;
__n26["alternate"] := null;
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "isNaN";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "*";
__n56 := {  };
__n56["type"] := "UnaryExpression";
__n56["operator"] := "-";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 0.;
__n57["raw"] := "0";
__n56["argument"] := __n57;
__n56["prefix"] := true;
__n55["left"] := __n56;
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Number";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "NaN";
__n60["raw"] := "\"NaN\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n55["right"] := __n58;
__n54 := [ __n55 ];
__n52["arguments"] := __n54;
__n51["left"] := __n52;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := true;
__n61["raw"] := "true";
__n51["right"] := __n61;
__n50["test"] := __n51;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "$ERROR";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "+";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "#3: -0 * NaN === Not-a-Number. Actual: ";
__n69["raw"] := "'#3: -0 * NaN === Not-a-Number. Actual: '";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "*";
__n71 := {  };
__n71["type"] := "UnaryExpression";
__n71["operator"] := "-";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 0.;
__n72["raw"] := "0";
__n71["argument"] := __n72;
__n71["prefix"] := true;
__n70["left"] := __n71;
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "NaN";
__n70["right"] := __n73;
__n68["right"] := __n70;
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n50["consequent"] := __n62;
__n50["alternate"] := null;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "!==";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "isNaN";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "*";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "Number";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "POSITIVE_INFINITY";
__n82["raw"] := "\"POSITIVE_INFINITY\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n79["left"] := __n80;
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "Number";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "NaN";
__n85["raw"] := "\"NaN\"";
__n83["property"] := __n85;
__n83["computed"] := true;
__n79["right"] := __n83;
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["left"] := __n76;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := true;
__n86["raw"] := "true";
__n75["right"] := __n86;
__n74["test"] := __n75;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "$ERROR";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "+";
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "#4: Infinity * NaN === Not-a-Number. Actual: ";
__n94["raw"] := "'#4: Infinity * NaN === Not-a-Number. Actual: '";
__n93["left"] := __n94;
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "*";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "Infinity";
__n95["left"] := __n96;
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "NaN";
__n95["right"] := __n97;
__n93["right"] := __n95;
__n92 := [ __n93 ];
__n90["arguments"] := __n92;
__n89["expression"] := __n90;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n74["consequent"] := __n87;
__n74["alternate"] := null;
__n98 := {  };
__n98["type"] := "IfStatement";
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "!==";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "isNaN";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "*";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "Number";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "NEGATIVE_INFINITY";
__n106["raw"] := "\"NEGATIVE_INFINITY\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n103["left"] := __n104;
__n107 := {  };
__n107["type"] := "MemberExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "Number";
__n107["object"] := __n108;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "NaN";
__n109["raw"] := "\"NaN\"";
__n107["property"] := __n109;
__n107["computed"] := true;
__n103["right"] := __n107;
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["left"] := __n100;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := true;
__n110["raw"] := "true";
__n99["right"] := __n110;
__n98["test"] := __n99;
__n111 := {  };
__n111["type"] := "BlockStatement";
__n113 := {  };
__n113["type"] := "ExpressionStatement";
__n114 := {  };
__n114["type"] := "CallExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "$ERROR";
__n114["callee"] := __n115;
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "+";
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "#5:  -Infinity * NaN === Not-a-Number. Actual: ";
__n118["raw"] := "'#5:  -Infinity * NaN === Not-a-Number. Actual: '";
__n117["left"] := __n118;
__n119 := {  };
__n119["type"] := "BinaryExpression";
__n119["operator"] := "*";
__n120 := {  };
__n120["type"] := "UnaryExpression";
__n120["operator"] := "-";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "Infinity";
__n120["argument"] := __n121;
__n120["prefix"] := true;
__n119["left"] := __n120;
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "NaN";
__n119["right"] := __n122;
__n117["right"] := __n119;
__n116 := [ __n117 ];
__n114["arguments"] := __n116;
__n113["expression"] := __n114;
__n112 := [ __n113 ];
__n111["body"] := __n112;
__n98["consequent"] := __n111;
__n98["alternate"] := null;
__n123 := {  };
__n123["type"] := "IfStatement";
__n124 := {  };
__n124["type"] := "BinaryExpression";
__n124["operator"] := "!==";
__n125 := {  };
__n125["type"] := "CallExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "isNaN";
__n125["callee"] := __n126;
__n128 := {  };
__n128["type"] := "BinaryExpression";
__n128["operator"] := "*";
__n129 := {  };
__n129["type"] := "MemberExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "Number";
__n129["object"] := __n130;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "MAX_VALUE";
__n131["raw"] := "\"MAX_VALUE\"";
__n129["property"] := __n131;
__n129["computed"] := true;
__n128["left"] := __n129;
__n132 := {  };
__n132["type"] := "MemberExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "Number";
__n132["object"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "NaN";
__n134["raw"] := "\"NaN\"";
__n132["property"] := __n134;
__n132["computed"] := true;
__n128["right"] := __n132;
__n127 := [ __n128 ];
__n125["arguments"] := __n127;
__n124["left"] := __n125;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := true;
__n135["raw"] := "true";
__n124["right"] := __n135;
__n123["test"] := __n124;
__n136 := {  };
__n136["type"] := "BlockStatement";
__n138 := {  };
__n138["type"] := "ExpressionStatement";
__n139 := {  };
__n139["type"] := "CallExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "$ERROR";
__n139["callee"] := __n140;
__n142 := {  };
__n142["type"] := "BinaryExpression";
__n142["operator"] := "+";
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := "#6: Number.MAX_VALUE * NaN === Not-a-Number. Actual: ";
__n143["raw"] := "'#6: Number.MAX_VALUE * NaN === Not-a-Number. Actual: '";
__n142["left"] := __n143;
__n144 := {  };
__n144["type"] := "BinaryExpression";
__n144["operator"] := "*";
__n145 := {  };
__n145["type"] := "MemberExpression";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "Number";
__n145["object"] := __n146;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "MAX_VALUE";
__n147["raw"] := "\"MAX_VALUE\"";
__n145["property"] := __n147;
__n145["computed"] := true;
__n144["left"] := __n145;
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "NaN";
__n144["right"] := __n148;
__n142["right"] := __n144;
__n141 := [ __n142 ];
__n139["arguments"] := __n141;
__n138["expression"] := __n139;
__n137 := [ __n138 ];
__n136["body"] := __n137;
__n123["consequent"] := __n136;
__n123["alternate"] := null;
__n149 := {  };
__n149["type"] := "IfStatement";
__n150 := {  };
__n150["type"] := "BinaryExpression";
__n150["operator"] := "!==";
__n151 := {  };
__n151["type"] := "CallExpression";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "isNaN";
__n151["callee"] := __n152;
__n154 := {  };
__n154["type"] := "BinaryExpression";
__n154["operator"] := "*";
__n155 := {  };
__n155["type"] := "MemberExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "Number";
__n155["object"] := __n156;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := "MIN_VALUE";
__n157["raw"] := "\"MIN_VALUE\"";
__n155["property"] := __n157;
__n155["computed"] := true;
__n154["left"] := __n155;
__n158 := {  };
__n158["type"] := "MemberExpression";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "Number";
__n158["object"] := __n159;
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := "NaN";
__n160["raw"] := "\"NaN\"";
__n158["property"] := __n160;
__n158["computed"] := true;
__n154["right"] := __n158;
__n153 := [ __n154 ];
__n151["arguments"] := __n153;
__n150["left"] := __n151;
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := true;
__n161["raw"] := "true";
__n150["right"] := __n161;
__n149["test"] := __n150;
__n162 := {  };
__n162["type"] := "BlockStatement";
__n164 := {  };
__n164["type"] := "ExpressionStatement";
__n165 := {  };
__n165["type"] := "CallExpression";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "$ERROR";
__n165["callee"] := __n166;
__n168 := {  };
__n168["type"] := "BinaryExpression";
__n168["operator"] := "+";
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := "#7: Number.MIN_VALUE * NaN === Not-a-Number. Actual: ";
__n169["raw"] := "'#7: Number.MIN_VALUE * NaN === Not-a-Number. Actual: '";
__n168["left"] := __n169;
__n170 := {  };
__n170["type"] := "BinaryExpression";
__n170["operator"] := "*";
__n171 := {  };
__n171["type"] := "MemberExpression";
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "Number";
__n171["object"] := __n172;
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := "MIN_VALUE";
__n173["raw"] := "\"MIN_VALUE\"";
__n171["property"] := __n173;
__n171["computed"] := true;
__n170["left"] := __n171;
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "NaN";
__n170["right"] := __n174;
__n168["right"] := __n170;
__n167 := [ __n168 ];
__n165["arguments"] := __n167;
__n164["expression"] := __n165;
__n163 := [ __n164 ];
__n162["body"] := __n163;
__n149["consequent"] := __n162;
__n149["alternate"] := null;
__n175 := {  };
__n175["type"] := "IfStatement";
__n176 := {  };
__n176["type"] := "BinaryExpression";
__n176["operator"] := "!==";
__n177 := {  };
__n177["type"] := "CallExpression";
__n178 := {  };
__n178["type"] := "Identifier";
__n178["name"] := "isNaN";
__n177["callee"] := __n178;
__n180 := {  };
__n180["type"] := "BinaryExpression";
__n180["operator"] := "*";
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := 1.;
__n181["raw"] := "1";
__n180["left"] := __n181;
__n182 := {  };
__n182["type"] := "MemberExpression";
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "Number";
__n182["object"] := __n183;
__n184 := {  };
__n184["type"] := "Literal";
__n184["value"] := "NaN";
__n184["raw"] := "\"NaN\"";
__n182["property"] := __n184;
__n182["computed"] := true;
__n180["right"] := __n182;
__n179 := [ __n180 ];
__n177["arguments"] := __n179;
__n176["left"] := __n177;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := true;
__n185["raw"] := "true";
__n176["right"] := __n185;
__n175["test"] := __n176;
__n186 := {  };
__n186["type"] := "BlockStatement";
__n188 := {  };
__n188["type"] := "ExpressionStatement";
__n189 := {  };
__n189["type"] := "CallExpression";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "$ERROR";
__n189["callee"] := __n190;
__n192 := {  };
__n192["type"] := "BinaryExpression";
__n192["operator"] := "+";
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := "#8: 1 * NaN === Not-a-Number. Actual: ";
__n193["raw"] := "'#8: 1 * NaN === Not-a-Number. Actual: '";
__n192["left"] := __n193;
__n194 := {  };
__n194["type"] := "BinaryExpression";
__n194["operator"] := "*";
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := 1.;
__n195["raw"] := "1";
__n194["left"] := __n195;
__n196 := {  };
__n196["type"] := "Identifier";
__n196["name"] := "NaN";
__n194["right"] := __n196;
__n192["right"] := __n194;
__n191 := [ __n192 ];
__n189["arguments"] := __n191;
__n188["expression"] := __n189;
__n187 := [ __n188 ];
__n186["body"] := __n187;
__n175["consequent"] := __n186;
__n175["alternate"] := null;
__n1 := [ __n2, __n26, __n50, __n74, __n98, __n123, __n149, __n175 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n197 := [  ];
__n0["variableDeclarations"] := __n197;
__n198 := [  ];
__n0["functionDeclarations"] := __n198;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}