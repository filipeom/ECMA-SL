function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "*";
__n5 := {  };
__n5["type"] := "BinaryExpression";
__n5["operator"] := "*";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Number";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "MAX_VALUE";
__n8["raw"] := "\"MAX_VALUE\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["left"] := __n6;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.1;
__n9["raw"] := "1.1";
__n5["right"] := __n9;
__n4["left"] := __n5;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.9;
__n10["raw"] := "0.9";
__n4["right"] := __n10;
__n3["left"] := __n4;
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "*";
__n12 := {  };
__n12["type"] := "BinaryExpression";
__n12["operator"] := "*";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "Number";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "MAX_VALUE";
__n15["raw"] := "\"MAX_VALUE\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["left"] := __n13;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.1;
__n16["raw"] := "1.1";
__n12["right"] := __n16;
__n11["left"] := __n12;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.9;
__n17["raw"] := "0.9";
__n11["right"] := __n17;
__n3["right"] := __n11;
__n2["test"] := __n3;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "$ERROR";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "+";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "#1: Number.MAX_VALUE * 1.1 * 0.9 === (Number.MAX_VALUE * 1.1) * 0.9. Actual: ";
__n25["raw"] := "'#1: Number.MAX_VALUE * 1.1 * 0.9 === (Number.MAX_VALUE * 1.1) * 0.9. Actual: '";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "*";
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "*";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Number";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "MAX_VALUE";
__n30["raw"] := "\"MAX_VALUE\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["left"] := __n28;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 1.1;
__n31["raw"] := "1.1";
__n27["right"] := __n31;
__n26["left"] := __n27;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 0.9;
__n32["raw"] := "0.9";
__n26["right"] := __n32;
__n24["right"] := __n26;
__n23 := [ __n24 ];
__n21["arguments"] := __n23;
__n20["expression"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n2["consequent"] := __n18;
__n2["alternate"] := null;
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "===";
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "*";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "*";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Number";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "MAX_VALUE";
__n39["raw"] := "\"MAX_VALUE\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 1.1;
__n40["raw"] := "1.1";
__n36["right"] := __n40;
__n35["left"] := __n36;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 0.9;
__n41["raw"] := "0.9";
__n35["right"] := __n41;
__n34["left"] := __n35;
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "*";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Number";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "MAX_VALUE";
__n45["raw"] := "\"MAX_VALUE\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["left"] := __n43;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "*";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 1.1;
__n47["raw"] := "1.1";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 0.9;
__n48["raw"] := "0.9";
__n46["right"] := __n48;
__n42["right"] := __n46;
__n34["right"] := __n42;
__n33["test"] := __n34;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "$ERROR";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "#2: (Number.MAX_VALUE * 1.1) * 0.9 !== Number.MAX_VALUE * (1.1 * 0.9)";
__n55["raw"] := "'#2: (Number.MAX_VALUE * 1.1) * 0.9 !== Number.MAX_VALUE * (1.1 * 0.9)'";
__n54 := [ __n55 ];
__n52["arguments"] := __n54;
__n51["expression"] := __n52;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n33["consequent"] := __n49;
__n33["alternate"] := null;
__n1 := [ __n2, __n33 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n56 := [  ];
__n0["variableDeclarations"] := __n56;
__n57 := [  ];
__n0["functionDeclarations"] := __n57;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}