function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "Identifier";
__n4["name"] := "$DONOTEVALUATE";
__n3["callee"] := __n4;
__n5 := [  ];
__n3["arguments"] := __n5;
__n2["expression"] := __n3;
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "ObjectExpression";
__n9 := {  };
__n9["type"] := "Property";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "async";
__n9["key"] := __n10;
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "async";
__n9["value"] := __n11;
__n9["computed"] := false;
__n9["kind"] := "init";
__n9["shorthand"] := true;
__n8 := [ __n9 ];
__n7["properties"] := __n8;
__n6["expression"] := __n7;
__n1 := [ __n2, __n6 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n12 := [  ];
__n0["variableDeclarations"] := __n12;
__n13 := [  ];
__n0["functionDeclarations"] := __n13;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}