function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "testFunction";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "testFunction";
__n5["callee"] := __n6;
__n7 := [  ];
__n5["arguments"] := __n7;
__n4["expression"] := __n5;
__n1 := [ __n2, __n4 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n8 := [  ];
__n0["variableDeclarations"] := __n8;
__n10 := {  };
__n10["type"] := "FunctionDeclaration";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "testFunction";
__n10["id"] := __n11;
__n12 := [  ];
__n10["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "x";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 0.;
__n19["raw"] := "0";
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n20 := {  };
__n20["type"] := "VariableDeclaration";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "scope";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "ObjectExpression";
__n26 := {  };
__n26["type"] := "Property";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "x";
__n26["key"] := __n27;
__n28 := {  };
__n28["type"] := "FunctionExpression";
__n28["id"] := null;
__n29 := [  ];
__n28["params"] := __n29;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "UnaryExpression";
__n33["operator"] := "delete";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "ThisExpression";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "x";
__n36["raw"] := "\"x\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["argument"] := __n34;
__n33["prefix"] := true;
__n32["expression"] := __n33;
__n37 := {  };
__n37["type"] := "ReturnStatement";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 2.;
__n38["raw"] := "2";
__n37["argument"] := __n38;
__n31 := [ __n32, __n37 ];
__n30["body"] := __n31;
__n39 := [  ];
__n30["variableDeclarations"] := __n39;
__n40 := [  ];
__n30["functionDeclarations"] := __n40;
__n30["codeType"] := "function";
__n30["strict"] := false;
__n28["body"] := __n30;
__n28["generator"] := false;
__n28["async"] := false;
__n28["expression"] := false;
__n26["value"] := __n28;
__n26["computed"] := false;
__n26["kind"] := "get";
__n26["shorthand"] := false;
__n25 := [ __n26 ];
__n24["properties"] := __n25;
__n22["init"] := __n24;
__n21 := [ __n22 ];
__n20["declarations"] := __n21;
__n20["kind"] := "var";
__n41 := {  };
__n41["type"] := "WithStatement";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "scope";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "UpdateExpression";
__n46["operator"] := "--";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "x";
__n46["argument"] := __n47;
__n46["prefix"] := false;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n41["body"] := __n43;
__n48 := {  };
__n48["type"] := "IfStatement";
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "!==";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "scope";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "x";
__n52["raw"] := "\"x\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["left"] := __n50;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 1.;
__n53["raw"] := "1";
__n49["right"] := __n53;
__n48["test"] := __n49;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "$ERROR";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "+";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#1: scope.x === 1. Actual: ";
__n61["raw"] := "'#1: scope.x === 1. Actual: '";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "scope";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "x";
__n64["raw"] := "\"x\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n60["right"] := __n62;
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n48["consequent"] := __n54;
__n48["alternate"] := null;
__n65 := {  };
__n65["type"] := "IfStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "x";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 0.;
__n68["raw"] := "0";
__n66["right"] := __n68;
__n65["test"] := __n66;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "$ERROR";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "+";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "#2: x === 0. Actual: ";
__n76["raw"] := "'#2: x === 0. Actual: '";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "x";
__n75["right"] := __n77;
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n65["consequent"] := __n69;
__n65["alternate"] := null;
__n14 := [ __n15, __n20, __n41, __n48, __n65 ];
__n13["body"] := __n14;
__n78 := [ "x", "scope" ];
__n13["variableDeclarations"] := __n78;
__n79 := [  ];
__n13["functionDeclarations"] := __n79;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n10["body"] := __n13;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n9 := [ __n10 ];
__n0["functionDeclarations"] := __n9;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}