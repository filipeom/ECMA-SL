function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 1.;
__n6["raw"] := "1";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "y";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "UpdateExpression";
__n11["operator"] := "++";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "x";
__n11["argument"] := __n12;
__n11["prefix"] := false;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n13 := {  };
__n13["type"] := "IfStatement";
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "!==";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "y";
__n14["left"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n14["right"] := __n16;
__n13["test"] := __n14;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "$ERROR";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "+";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "#1: var x = 1; var y = x++; y === 1. Actual: ";
__n24["raw"] := "'#1: var x = 1; var y = x++; y === 1. Actual: '";
__n23["left"] := __n24;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "y";
__n23["right"] := __n25;
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n13["consequent"] := __n17;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "IfStatement";
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "!==";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "x";
__n29["left"] := __n30;
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "+";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 1.;
__n32["raw"] := "1";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 1.;
__n33["raw"] := "1";
__n31["right"] := __n33;
__n29["right"] := __n31;
__n28["test"] := __n29;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "+";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "#1: var x = 1; var y = x++; x === 1 + 1. Actual: ";
__n41["raw"] := "'#1: var x = 1; var y = x++; x === 1 + 1. Actual: '";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "x";
__n40["right"] := __n42;
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n28["consequent"] := __n34;
__n28["alternate"] := null;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n13["alternate"] := __n26;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "AssignmentExpression";
__n44["operator"] := "=";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "ThisExpression";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "x";
__n47["raw"] := "\"x\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["left"] := __n45;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1.;
__n48["raw"] := "1";
__n44["right"] := __n48;
__n43["expression"] := __n44;
__n49 := {  };
__n49["type"] := "VariableDeclaration";
__n51 := {  };
__n51["type"] := "VariableDeclarator";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "y";
__n51["id"] := __n52;
__n53 := {  };
__n53["type"] := "UpdateExpression";
__n53["operator"] := "++";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "ThisExpression";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "x";
__n56["raw"] := "\"x\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["argument"] := __n54;
__n53["prefix"] := false;
__n51["init"] := __n53;
__n50 := [ __n51 ];
__n49["declarations"] := __n50;
__n49["kind"] := "var";
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "y";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 1.;
__n60["raw"] := "1";
__n58["right"] := __n60;
__n57["test"] := __n58;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$ERROR";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "+";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "#2: this.x = 1; var y = this.x++; y === 1. Actual: ";
__n68["raw"] := "'#2: this.x = 1; var y = this.x++; y === 1. Actual: '";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "y";
__n67["right"] := __n69;
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n57["consequent"] := __n61;
__n70 := {  };
__n70["type"] := "BlockStatement";
__n72 := {  };
__n72["type"] := "IfStatement";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "!==";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "ThisExpression";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "x";
__n76["raw"] := "\"x\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["left"] := __n74;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 1.;
__n78["raw"] := "1";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 1.;
__n79["raw"] := "1";
__n77["right"] := __n79;
__n73["right"] := __n77;
__n72["test"] := __n73;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#2: this.x = 1; var y = this.x++; this.x === 1 + 1. Actual: ";
__n87["raw"] := "'#2: this.x = 1; var y = this.x++; this.x === 1 + 1. Actual: '";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "ThisExpression";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "x";
__n90["raw"] := "\"x\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n86["right"] := __n88;
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n72["consequent"] := __n80;
__n72["alternate"] := null;
__n71 := [ __n72 ];
__n70["body"] := __n71;
__n57["alternate"] := __n70;
__n91 := {  };
__n91["type"] := "VariableDeclaration";
__n93 := {  };
__n93["type"] := "VariableDeclarator";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "object";
__n93["id"] := __n94;
__n95 := {  };
__n95["type"] := "NewExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "Object";
__n95["callee"] := __n96;
__n97 := [  ];
__n95["arguments"] := __n97;
__n93["init"] := __n95;
__n92 := [ __n93 ];
__n91["declarations"] := __n92;
__n91["kind"] := "var";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "AssignmentExpression";
__n99["operator"] := "=";
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "object";
__n100["object"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "prop";
__n102["raw"] := "\"prop\"";
__n100["property"] := __n102;
__n100["computed"] := true;
__n99["left"] := __n100;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := 1.;
__n103["raw"] := "1";
__n99["right"] := __n103;
__n98["expression"] := __n99;
__n104 := {  };
__n104["type"] := "VariableDeclaration";
__n106 := {  };
__n106["type"] := "VariableDeclarator";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "y";
__n106["id"] := __n107;
__n108 := {  };
__n108["type"] := "UpdateExpression";
__n108["operator"] := "++";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "object";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "prop";
__n111["raw"] := "\"prop\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n108["argument"] := __n109;
__n108["prefix"] := false;
__n106["init"] := __n108;
__n105 := [ __n106 ];
__n104["declarations"] := __n105;
__n104["kind"] := "var";
__n112 := {  };
__n112["type"] := "IfStatement";
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := "!==";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "y";
__n113["left"] := __n114;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := 1.;
__n115["raw"] := "1";
__n113["right"] := __n115;
__n112["test"] := __n113;
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "$ERROR";
__n119["callee"] := __n120;
__n122 := {  };
__n122["type"] := "BinaryExpression";
__n122["operator"] := "+";
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "#3: var object = new Object(); object.prop = 1; var y = object.prop++; y === 1. Actual: ";
__n123["raw"] := "'#3: var object = new Object(); object.prop = 1; var y = object.prop++; y === 1. Actual: '";
__n122["left"] := __n123;
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "y";
__n122["right"] := __n124;
__n121 := [ __n122 ];
__n119["arguments"] := __n121;
__n118["expression"] := __n119;
__n117 := [ __n118 ];
__n116["body"] := __n117;
__n112["consequent"] := __n116;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "IfStatement";
__n128 := {  };
__n128["type"] := "BinaryExpression";
__n128["operator"] := "!==";
__n129 := {  };
__n129["type"] := "MemberExpression";
__n130 := {  };
__n130["type"] := "ThisExpression";
__n129["object"] := __n130;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "x";
__n131["raw"] := "\"x\"";
__n129["property"] := __n131;
__n129["computed"] := true;
__n128["left"] := __n129;
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := "+";
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := 1.;
__n133["raw"] := "1";
__n132["left"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 1.;
__n134["raw"] := "1";
__n132["right"] := __n134;
__n128["right"] := __n132;
__n127["test"] := __n128;
__n135 := {  };
__n135["type"] := "BlockStatement";
__n137 := {  };
__n137["type"] := "ExpressionStatement";
__n138 := {  };
__n138["type"] := "CallExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "$ERROR";
__n138["callee"] := __n139;
__n141 := {  };
__n141["type"] := "BinaryExpression";
__n141["operator"] := "+";
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := "#3: var object = new Object(); object.prop = 1; var y = object.prop++; object.prop === 1 + 1. Actual: ";
__n142["raw"] := "'#3: var object = new Object(); object.prop = 1; var y = object.prop++; object.prop === 1 + 1. Actual: '";
__n141["left"] := __n142;
__n143 := {  };
__n143["type"] := "MemberExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "object";
__n143["object"] := __n144;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "prop";
__n145["raw"] := "\"prop\"";
__n143["property"] := __n145;
__n143["computed"] := true;
__n141["right"] := __n143;
__n140 := [ __n141 ];
__n138["arguments"] := __n140;
__n137["expression"] := __n138;
__n136 := [ __n137 ];
__n135["body"] := __n136;
__n127["consequent"] := __n135;
__n127["alternate"] := null;
__n126 := [ __n127 ];
__n125["body"] := __n126;
__n112["alternate"] := __n125;
__n1 := [ __n2, __n7, __n13, __n43, __n49, __n57, __n91, __n98, __n104, __n112 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n146 := [ "x", "y", "object" ];
__n0["variableDeclarations"] := __n146;
__n147 := [  ];
__n0["functionDeclarations"] := __n147;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}