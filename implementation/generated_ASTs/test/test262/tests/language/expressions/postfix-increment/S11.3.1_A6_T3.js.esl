function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "propKeyEvaluated";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "base";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n12 := [  ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "prop";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "ObjectExpression";
__n19 := {  };
__n19["type"] := "Property";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "toString";
__n19["key"] := __n20;
__n21 := {  };
__n21["type"] := "FunctionExpression";
__n21["id"] := null;
__n22 := [  ];
__n21["params"] := __n22;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "UnaryExpression";
__n29["operator"] := "!";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "propKeyEvaluated";
__n29["argument"] := __n30;
__n29["prefix"] := true;
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "propKeyEvaluated";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := true;
__n34["raw"] := "true";
__n32["right"] := __n34;
__n31["expression"] := __n32;
__n35 := {  };
__n35["type"] := "ReturnStatement";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 1.;
__n36["raw"] := "1";
__n35["argument"] := __n36;
__n24 := [ __n25, __n31, __n35 ];
__n23["body"] := __n24;
__n37 := [  ];
__n23["variableDeclarations"] := __n37;
__n38 := [  ];
__n23["functionDeclarations"] := __n38;
__n23["codeType"] := "function";
__n23["strict"] := false;
__n21["body"] := __n23;
__n21["generator"] := false;
__n21["expression"] := false;
__n21["async"] := false;
__n19["value"] := __n21;
__n19["computed"] := false;
__n19["kind"] := "init";
__n19["shorthand"] := false;
__n18 := [ __n19 ];
__n17["properties"] := __n18;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "UpdateExpression";
__n40["operator"] := "++";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n41["computed"] := true;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "base";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "prop";
__n41["property"] := __n43;
__n40["argument"] := __n41;
__n40["prefix"] := false;
__n39["expression"] := __n40;
__n1 := [ __n2, __n7, __n13, __n39 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n44 := [ "propKeyEvaluated", "base", "prop" ];
__n0["variableDeclarations"] := __n44;
__n45 := [  ];
__n0["functionDeclarations"] := __n45;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}