function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Object";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "defineProperty";
__n6["raw"] := "\"defineProperty\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "ThisExpression";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "x";
__n9["raw"] := "\"x\"";
__n10 := {  };
__n10["type"] := "ObjectExpression";
__n12 := {  };
__n12["type"] := "Property";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "configurable";
__n12["key"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := true;
__n14["raw"] := "true";
__n12["value"] := __n14;
__n12["computed"] := false;
__n12["kind"] := "init";
__n12["shorthand"] := false;
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "get";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "FunctionExpression";
__n17["id"] := null;
__n18 := [  ];
__n17["params"] := __n18;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "UnaryExpression";
__n22["operator"] := "delete";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "ThisExpression";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "x";
__n25["raw"] := "\"x\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["argument"] := __n23;
__n22["prefix"] := true;
__n21["expression"] := __n22;
__n26 := {  };
__n26["type"] := "ReturnStatement";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 2.;
__n27["raw"] := "2";
__n26["argument"] := __n27;
__n20 := [ __n21, __n26 ];
__n19["body"] := __n20;
__n28 := [  ];
__n19["variableDeclarations"] := __n28;
__n29 := [  ];
__n19["functionDeclarations"] := __n29;
__n19["codeType"] := "function";
__n19["strict"] := false;
__n17["body"] := __n19;
__n17["generator"] := false;
__n17["expression"] := false;
__n17["async"] := false;
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n11 := [ __n12, __n15 ];
__n10["properties"] := __n11;
__n7 := [ __n8, __n9, __n10 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "FunctionExpression";
__n32["id"] := null;
__n33 := [  ];
__n32["params"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "use strict";
__n37["raw"] := "\"use strict\"";
__n36["expression"] := __n37;
__n36["directive"] := "use strict";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "UpdateExpression";
__n39["operator"] := "--";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "x";
__n39["argument"] := __n40;
__n39["prefix"] := true;
__n38["expression"] := __n39;
__n35 := [ __n36, __n38 ];
__n34["body"] := __n35;
__n41 := [  ];
__n34["variableDeclarations"] := __n41;
__n42 := [  ];
__n34["functionDeclarations"] := __n42;
__n34["codeType"] := "function";
__n34["strict"] := true;
__n32["body"] := __n34;
__n32["generator"] := false;
__n32["expression"] := false;
__n32["async"] := false;
__n31["callee"] := __n32;
__n43 := [  ];
__n31["arguments"] := __n43;
__n30["expression"] := __n31;
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "ThisExpression";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "x";
__n48["raw"] := "\"x\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["left"] := __n46;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.;
__n49["raw"] := "1";
__n45["right"] := __n49;
__n44["test"] := __n45;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "$ERROR";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "+";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "#1: this.x === 1. Actual: ";
__n57["raw"] := "'#1: this.x === 1. Actual: '";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "ThisExpression";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "x";
__n60["raw"] := "\"x\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n56["right"] := __n58;
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n44["consequent"] := __n50;
__n44["alternate"] := null;
__n1 := [ __n2, __n30, __n44 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n61 := [  ];
__n0["variableDeclarations"] := __n61;
__n62 := [  ];
__n0["functionDeclarations"] := __n62;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}