function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "eval";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "Number[	\"POSITIVE_INFINITY\"	]";
__n7["raw"] := "'Number[\\u0009\"POSITIVE_INFINITY\"\\u0009]'";
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Number";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "POSITIVE_INFINITY";
__n10["raw"] := "\"POSITIVE_INFINITY\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n3["right"] := __n8;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "#1: Number[\\u0009\"POSITIVE_INFINITY\"\\u0009] === Number.POSITIVE_INFINITY";
__n17["raw"] := "'#1: Number[\\\\u0009\"POSITIVE_INFINITY\"\\\\u0009] === Number.POSITIVE_INFINITY'";
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n2["alternate"] := null;
__n18 := {  };
__n18["type"] := "IfStatement";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "!==";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "eval";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "Number[\"POSITIVE_INFINITY\"]";
__n23["raw"] := "'Number[\\u000B\"POSITIVE_INFINITY\"\\u000B]'";
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n19["left"] := __n20;
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Number";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "POSITIVE_INFINITY";
__n26["raw"] := "\"POSITIVE_INFINITY\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n19["right"] := __n24;
__n18["test"] := __n19;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "$ERROR";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "#2: Number[\\u000B\"POSITIVE_INFINITY\"\\u000B] === Number.POSITIVE_INFINITY";
__n33["raw"] := "'#2: Number[\\\\u000B\"POSITIVE_INFINITY\"\\\\u000B] === Number.POSITIVE_INFINITY'";
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n29["expression"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n18["consequent"] := __n27;
__n18["alternate"] := null;
__n34 := {  };
__n34["type"] := "IfStatement";
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "!==";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "eval";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "Number[\"POSITIVE_INFINITY\"]";
__n39["raw"] := "'Number[\\u000C\"POSITIVE_INFINITY\"\\u000C]'";
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["left"] := __n36;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Number";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "POSITIVE_INFINITY";
__n42["raw"] := "\"POSITIVE_INFINITY\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n35["right"] := __n40;
__n34["test"] := __n35;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "#3: Number[\\u000C\"POSITIVE_INFINITY\"\\u000C] === Number.POSITIVE_INFINITY";
__n49["raw"] := "'#3: Number[\\\\u000C\"POSITIVE_INFINITY\"\\\\u000C] === Number.POSITIVE_INFINITY'";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n34["consequent"] := __n43;
__n34["alternate"] := null;
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "eval";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "Number[ \"POSITIVE_INFINITY\" ]";
__n55["raw"] := "'Number[\\u0020\"POSITIVE_INFINITY\"\\u0020]'";
__n54 := [ __n55 ];
__n52["arguments"] := __n54;
__n51["left"] := __n52;
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "Number";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "POSITIVE_INFINITY";
__n58["raw"] := "\"POSITIVE_INFINITY\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n51["right"] := __n56;
__n50["test"] := __n51;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "#4: Number[\\u0020\"POSITIVE_INFINITY\"\\u0020] === Number.POSITIVE_INFINITY";
__n65["raw"] := "'#4: Number[\\\\u0020\"POSITIVE_INFINITY\"\\\\u0020] === Number.POSITIVE_INFINITY'";
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n50["consequent"] := __n59;
__n50["alternate"] := null;
__n66 := {  };
__n66["type"] := "IfStatement";
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "!==";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "eval";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "Number[ \"POSITIVE_INFINITY\" ]";
__n71["raw"] := "'Number[\\u00A0\"POSITIVE_INFINITY\"\\u00A0]'";
__n70 := [ __n71 ];
__n68["arguments"] := __n70;
__n67["left"] := __n68;
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "Number";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "POSITIVE_INFINITY";
__n74["raw"] := "\"POSITIVE_INFINITY\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n67["right"] := __n72;
__n66["test"] := __n67;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "$ERROR";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "#5: Number[\\u00A0\"POSITIVE_INFINITY\"\\u00A0] === Number.POSITIVE_INFINITY";
__n81["raw"] := "'#5: Number[\\\\u00A0\"POSITIVE_INFINITY\"\\\\u00A0] === Number.POSITIVE_INFINITY'";
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n66["consequent"] := __n75;
__n66["alternate"] := null;
__n82 := {  };
__n82["type"] := "IfStatement";
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "!==";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "eval";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "Number[
\"POSITIVE_INFINITY\"
]";
__n87["raw"] := "'Number[\\u000A\"POSITIVE_INFINITY\"\\u000A]'";
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["left"] := __n84;
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "Number";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "POSITIVE_INFINITY";
__n90["raw"] := "\"POSITIVE_INFINITY\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n83["right"] := __n88;
__n82["test"] := __n83;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "#6: Number[\\u000A\"POSITIVE_INFINITY\"\\u000A] === Number.POSITIVE_INFINITY";
__n97["raw"] := "'#6: Number[\\\\u000A\"POSITIVE_INFINITY\"\\\\u000A] === Number.POSITIVE_INFINITY'";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n82["consequent"] := __n91;
__n82["alternate"] := null;
__n98 := {  };
__n98["type"] := "IfStatement";
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "!==";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "eval";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "Number[\"POSITIVE_INFINITY\"]";
__n103["raw"] := "'Number[\\u000D\"POSITIVE_INFINITY\"\\u000D]'";
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["left"] := __n100;
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "Number";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "POSITIVE_INFINITY";
__n106["raw"] := "\"POSITIVE_INFINITY\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n99["right"] := __n104;
__n98["test"] := __n99;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "$ERROR";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "#7: Number[\\u000D\"POSITIVE_INFINITY\"\\u000D] === Number.POSITIVE_INFINITY";
__n113["raw"] := "'#7: Number[\\\\u000D\"POSITIVE_INFINITY\"\\\\u000D] === Number.POSITIVE_INFINITY'";
__n112 := [ __n113 ];
__n110["arguments"] := __n112;
__n109["expression"] := __n110;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n98["consequent"] := __n107;
__n98["alternate"] := null;
__n114 := {  };
__n114["type"] := "IfStatement";
__n115 := {  };
__n115["type"] := "BinaryExpression";
__n115["operator"] := "!==";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "eval";
__n116["callee"] := __n117;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "Number[ \"POSITIVE_INFINITY\" ]";
__n119["raw"] := "'Number[\\u2028\"POSITIVE_INFINITY\"\\u2028]'";
__n118 := [ __n119 ];
__n116["arguments"] := __n118;
__n115["left"] := __n116;
__n120 := {  };
__n120["type"] := "MemberExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "Number";
__n120["object"] := __n121;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "POSITIVE_INFINITY";
__n122["raw"] := "\"POSITIVE_INFINITY\"";
__n120["property"] := __n122;
__n120["computed"] := true;
__n115["right"] := __n120;
__n114["test"] := __n115;
__n123 := {  };
__n123["type"] := "BlockStatement";
__n125 := {  };
__n125["type"] := "ExpressionStatement";
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "$ERROR";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "#8: Number[\\u2028\"POSITIVE_INFINITY\"\\u2028] === Number.POSITIVE_INFINITY";
__n129["raw"] := "'#8: Number[\\\\u2028\"POSITIVE_INFINITY\"\\\\u2028] === Number.POSITIVE_INFINITY'";
__n128 := [ __n129 ];
__n126["arguments"] := __n128;
__n125["expression"] := __n126;
__n124 := [ __n125 ];
__n123["body"] := __n124;
__n114["consequent"] := __n123;
__n114["alternate"] := null;
__n130 := {  };
__n130["type"] := "IfStatement";
__n131 := {  };
__n131["type"] := "BinaryExpression";
__n131["operator"] := "!==";
__n132 := {  };
__n132["type"] := "CallExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "eval";
__n132["callee"] := __n133;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "Number[ \"POSITIVE_INFINITY\" ]";
__n135["raw"] := "'Number[\\u2029\"POSITIVE_INFINITY\"\\u2029]'";
__n134 := [ __n135 ];
__n132["arguments"] := __n134;
__n131["left"] := __n132;
__n136 := {  };
__n136["type"] := "MemberExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "Number";
__n136["object"] := __n137;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := "POSITIVE_INFINITY";
__n138["raw"] := "\"POSITIVE_INFINITY\"";
__n136["property"] := __n138;
__n136["computed"] := true;
__n131["right"] := __n136;
__n130["test"] := __n131;
__n139 := {  };
__n139["type"] := "BlockStatement";
__n141 := {  };
__n141["type"] := "ExpressionStatement";
__n142 := {  };
__n142["type"] := "CallExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "$ERROR";
__n142["callee"] := __n143;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "#9: Number[\\u2029\"POSITIVE_INFINITY\"\\u2029] === Number.POSITIVE_INFINITY";
__n145["raw"] := "'#9: Number[\\\\u2029\"POSITIVE_INFINITY\"\\\\u2029] === Number.POSITIVE_INFINITY'";
__n144 := [ __n145 ];
__n142["arguments"] := __n144;
__n141["expression"] := __n142;
__n140 := [ __n141 ];
__n139["body"] := __n140;
__n130["consequent"] := __n139;
__n130["alternate"] := null;
__n146 := {  };
__n146["type"] := "IfStatement";
__n147 := {  };
__n147["type"] := "BinaryExpression";
__n147["operator"] := "!==";
__n148 := {  };
__n148["type"] := "CallExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "eval";
__n148["callee"] := __n149;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "Number[	  
  \"POSITIVE_INFINITY\"	  
  ]";
__n151["raw"] := "'Number[\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029\"POSITIVE_INFINITY\"\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029]'";
__n150 := [ __n151 ];
__n148["arguments"] := __n150;
__n147["left"] := __n148;
__n152 := {  };
__n152["type"] := "MemberExpression";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "Number";
__n152["object"] := __n153;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "POSITIVE_INFINITY";
__n154["raw"] := "\"POSITIVE_INFINITY\"";
__n152["property"] := __n154;
__n152["computed"] := true;
__n147["right"] := __n152;
__n146["test"] := __n147;
__n155 := {  };
__n155["type"] := "BlockStatement";
__n157 := {  };
__n157["type"] := "ExpressionStatement";
__n158 := {  };
__n158["type"] := "CallExpression";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "$ERROR";
__n158["callee"] := __n159;
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := "#10: Number[\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029\"POSITIVE_INFINITY\"\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029] === Number.POSITIVE_INFINITY";
__n161["raw"] := "'#10: Number[\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029\"POSITIVE_INFINITY\"\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029] === Number.POSITIVE_INFINITY'";
__n160 := [ __n161 ];
__n158["arguments"] := __n160;
__n157["expression"] := __n158;
__n156 := [ __n157 ];
__n155["body"] := __n156;
__n146["consequent"] := __n155;
__n146["alternate"] := null;
__n1 := [ __n2, __n18, __n34, __n50, __n66, __n82, __n98, __n114, __n130, __n146 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n162 := [  ];
__n0["variableDeclarations"] := __n162;
__n163 := [  ];
__n0["functionDeclarations"] := __n163;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}