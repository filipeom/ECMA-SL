function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "ExpressionStatement";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n6["computed"] := true;
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "object";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 1.;
__n8["raw"] := "1";
__n6["property"] := __n8;
__n5["expression"] := __n6;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "$ERROR";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "+";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "#1.1: object[1] throw ReferenceError. Actual: ";
__n14["raw"] := "'#1.1: object[1] throw ReferenceError. Actual: '";
__n13["left"] := __n14;
__n15 := {  };
__n15["type"] := "MemberExpression";
__n15["computed"] := true;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "object";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 1.;
__n17["raw"] := "1";
__n15["property"] := __n17;
__n13["right"] := __n15;
__n12 := [ __n13 ];
__n10["arguments"] := __n12;
__n9["expression"] := __n10;
__n4 := [ __n5, __n9 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n18 := {  };
__n18["type"] := "CatchClause";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "e";
__n18["param"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "IfStatement";
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "!==";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "instanceof";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "e";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "ReferenceError";
__n24["right"] := __n26;
__n23["left"] := __n24;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := true;
__n27["raw"] := "true";
__n23["right"] := __n27;
__n22["test"] := __n23;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "$ERROR";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "+";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "#1.2: object[1] throw ReferenceError. Actual: ";
__n35["raw"] := "'#1.2: object[1] throw ReferenceError. Actual: '";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "e";
__n34["right"] := __n36;
__n33 := [ __n34 ];
__n31["arguments"] := __n33;
__n30["expression"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n22["consequent"] := __n28;
__n22["alternate"] := null;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n18["body"] := __n20;
__n2["handler"] := __n18;
__n2["finalizer"] := null;
__n37 := {  };
__n37["type"] := "TryStatement";
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "object";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "prop";
__n43["raw"] := "\"prop\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["expression"] := __n41;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$ERROR";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "+";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "#2.1: object.prop throw ReferenceError. Actual: ";
__n49["raw"] := "'#2.1: object.prop throw ReferenceError. Actual: '";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "object";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "prop";
__n52["raw"] := "\"prop\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n48["right"] := __n50;
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n39 := [ __n40, __n44 ];
__n38["body"] := __n39;
__n37["block"] := __n38;
__n53 := {  };
__n53["type"] := "CatchClause";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "e";
__n53["param"] := __n54;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "instanceof";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "e";
__n59["left"] := __n60;
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "ReferenceError";
__n59["right"] := __n61;
__n58["left"] := __n59;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := true;
__n62["raw"] := "true";
__n58["right"] := __n62;
__n57["test"] := __n58;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$ERROR";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "+";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "#2.2: object.prop throw ReferenceError. Actual: ";
__n70["raw"] := "'#2.2: object.prop throw ReferenceError. Actual: '";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "e";
__n69["right"] := __n71;
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n57["consequent"] := __n63;
__n57["alternate"] := null;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n53["body"] := __n55;
__n37["handler"] := __n53;
__n37["finalizer"] := null;
__n1 := [ __n2, __n37 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n72 := [  ];
__n0["variableDeclarations"] := __n72;
__n73 := [  ];
__n0["functionDeclarations"] := __n73;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}