function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := true;
__n6["raw"] := "true";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "toString";
__n7["raw"] := "\"toString\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n8 := [  ];
__n4["arguments"] := __n8;
__n3["left"] := __n4;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "true";
__n9["raw"] := "\"true\"";
__n3["right"] := __n9;
__n2["test"] := __n3;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "$ERROR";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "+";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "#1: true.toString() === \"true\". Actual: ";
__n17["raw"] := "'#1: true.toString() === \"true\". Actual: '";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := true;
__n20["raw"] := "true";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "toString";
__n21["raw"] := "\"toString\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n22 := [  ];
__n18["arguments"] := __n22;
__n16["right"] := __n18;
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["expression"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n2["consequent"] := __n10;
__n2["alternate"] := null;
__n23 := {  };
__n23["type"] := "IfStatement";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "!==";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n26["computed"] := true;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := false;
__n27["raw"] := "false";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "toString";
__n28["raw"] := "\"toString\"";
__n26["property"] := __n28;
__n25["callee"] := __n26;
__n29 := [  ];
__n25["arguments"] := __n29;
__n24["left"] := __n25;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "false";
__n30["raw"] := "\"false\"";
__n24["right"] := __n30;
__n23["test"] := __n24;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "$ERROR";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "+";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "#2: false[\"toString\"]() === \"false\". Actual: ";
__n38["raw"] := "'#2: false[\"toString\"]() === \"false\". Actual: '";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n40["computed"] := true;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := false;
__n41["raw"] := "false";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "toString";
__n42["raw"] := "\"toString\"";
__n40["property"] := __n42;
__n39["callee"] := __n40;
__n43 := [  ];
__n39["arguments"] := __n43;
__n37["right"] := __n39;
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33["expression"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n23["consequent"] := __n31;
__n23["alternate"] := null;
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "NewExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "Boolean";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := true;
__n51["raw"] := "true";
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["object"] := __n48;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "toString";
__n52["raw"] := "\"toString\"";
__n47["property"] := __n52;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n53 := [  ];
__n46["arguments"] := __n53;
__n45["left"] := __n46;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "true";
__n54["raw"] := "\"true\"";
__n45["right"] := __n54;
__n44["test"] := __n45;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "#3: new Boolean(true).toString() === \"true\". Actual: ";
__n62["raw"] := "'#3: new Boolean(true).toString() === \"true\". Actual: '";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "NewExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "Boolean";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := true;
__n68["raw"] := "true";
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["object"] := __n65;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "toString";
__n69["raw"] := "\"toString\"";
__n64["property"] := __n69;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n70 := [  ];
__n63["arguments"] := __n70;
__n61["right"] := __n63;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n44["consequent"] := __n55;
__n44["alternate"] := null;
__n71 := {  };
__n71["type"] := "IfStatement";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "!==";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n74["computed"] := true;
__n75 := {  };
__n75["type"] := "NewExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "Boolean";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := false;
__n78["raw"] := "false";
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["object"] := __n75;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "toString";
__n79["raw"] := "\"toString\"";
__n74["property"] := __n79;
__n73["callee"] := __n74;
__n80 := [  ];
__n73["arguments"] := __n80;
__n72["left"] := __n73;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "false";
__n81["raw"] := "\"false\"";
__n72["right"] := __n81;
__n71["test"] := __n72;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$ERROR";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "+";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "#4: new Boolean(false)[\"toString\"]() === \"false\". Actual: ";
__n89["raw"] := "'#4: new Boolean(false)[\"toString\"]() === \"false\". Actual: '";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n91["computed"] := true;
__n92 := {  };
__n92["type"] := "NewExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "Boolean";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := false;
__n95["raw"] := "false";
__n94 := [ __n95 ];
__n92["arguments"] := __n94;
__n91["object"] := __n92;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "toString";
__n96["raw"] := "\"toString\"";
__n91["property"] := __n96;
__n90["callee"] := __n91;
__n97 := [  ];
__n90["arguments"] := __n97;
__n88["right"] := __n90;
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n71["consequent"] := __n82;
__n71["alternate"] := null;
__n1 := [ __n2, __n23, __n44, __n71 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n98 := [  ];
__n0["variableDeclarations"] := __n98;
__n99 := [  ];
__n0["functionDeclarations"] := __n99;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}