function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "UnaryExpression";
__n4["operator"] := "typeof";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Function";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "prototype";
__n7["raw"] := "\"prototype\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["argument"] := __n5;
__n4["prefix"] := true;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "function";
__n8["raw"] := "\"function\"";
__n3["right"] := __n8;
__n2["test"] := __n3;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "$ERROR";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "+";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "#1: typeof Function.prototype === \"function\". Actual: ";
__n14["raw"] := "'#1: typeof Function.prototype === \"function\". Actual: '";
__n13["left"] := __n14;
__n15 := {  };
__n15["type"] := "UnaryExpression";
__n15["operator"] := "typeof";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Function";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "prototype";
__n18["raw"] := "\"prototype\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["argument"] := __n16;
__n15["prefix"] := true;
__n13["right"] := __n15;
__n12 := [ __n13 ];
__n10["arguments"] := __n12;
__n9["expression"] := __n10;
__n2["consequent"] := __n9;
__n2["alternate"] := null;
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!==";
__n21 := {  };
__n21["type"] := "UnaryExpression";
__n21["operator"] := "typeof";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n22["computed"] := true;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Function";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "prototype";
__n24["raw"] := "'prototype'";
__n22["property"] := __n24;
__n21["argument"] := __n22;
__n21["prefix"] := true;
__n20["left"] := __n21;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "function";
__n25["raw"] := "\"function\"";
__n20["right"] := __n25;
__n19["test"] := __n20;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "$ERROR";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "+";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "#2: typeof Function[\"prototype\"] === \"function\". Actual: ";
__n31["raw"] := "'#2: typeof Function[\"prototype\"] === \"function\". Actual: '";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "UnaryExpression";
__n32["operator"] := "typeof";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n33["computed"] := true;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Function";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "prototype";
__n35["raw"] := "\"prototype\"";
__n33["property"] := __n35;
__n32["argument"] := __n33;
__n32["prefix"] := true;
__n30["right"] := __n32;
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["expression"] := __n27;
__n19["consequent"] := __n26;
__n19["alternate"] := null;
__n36 := {  };
__n36["type"] := "IfStatement";
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "!==";
__n38 := {  };
__n38["type"] := "UnaryExpression";
__n38["operator"] := "typeof";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Function";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "prototype";
__n42["raw"] := "\"prototype\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["object"] := __n40;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "toString";
__n43["raw"] := "\"toString\"";
__n39["property"] := __n43;
__n39["computed"] := true;
__n38["argument"] := __n39;
__n38["prefix"] := true;
__n37["left"] := __n38;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "function";
__n44["raw"] := "\"function\"";
__n37["right"] := __n44;
__n36["test"] := __n37;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "+";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "#3: typeof Function.prototype.toString === \"function\". Actual: ";
__n50["raw"] := "'#3: typeof Function.prototype.toString === \"function\". Actual: '";
__n49["left"] := __n50;
__n51 := {  };
__n51["type"] := "UnaryExpression";
__n51["operator"] := "typeof";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "Function";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "prototype";
__n55["raw"] := "\"prototype\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["object"] := __n53;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "toString";
__n56["raw"] := "\"toString\"";
__n52["property"] := __n56;
__n52["computed"] := true;
__n51["argument"] := __n52;
__n51["prefix"] := true;
__n49["right"] := __n51;
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n36["consequent"] := __n45;
__n36["alternate"] := null;
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "UnaryExpression";
__n59["operator"] := "typeof";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n60["computed"] := true;
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "Function";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "prototype";
__n63["raw"] := "\"prototype\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["object"] := __n61;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "toString";
__n64["raw"] := "'toString'";
__n60["property"] := __n64;
__n59["argument"] := __n60;
__n59["prefix"] := true;
__n58["left"] := __n59;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "function";
__n65["raw"] := "\"function\"";
__n58["right"] := __n65;
__n57["test"] := __n58;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$ERROR";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "+";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "#4: typeof Function.prototype[\"toString\"] === \"function\". Actual: ";
__n71["raw"] := "'#4: typeof Function.prototype[\"toString\"] === \"function\". Actual: '";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "UnaryExpression";
__n72["operator"] := "typeof";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n73["computed"] := true;
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "Function";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "prototype";
__n76["raw"] := "\"prototype\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["object"] := __n74;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "toString";
__n77["raw"] := "\"toString\"";
__n73["property"] := __n77;
__n72["argument"] := __n73;
__n72["prefix"] := true;
__n70["right"] := __n72;
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n57["consequent"] := __n66;
__n57["alternate"] := null;
__n78 := {  };
__n78["type"] := "IfStatement";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "!==";
__n80 := {  };
__n80["type"] := "UnaryExpression";
__n80["operator"] := "typeof";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "MemberExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "Function";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "prototype";
__n84["raw"] := "\"prototype\"";
__n82["property"] := __n84;
__n82["computed"] := true;
__n81["object"] := __n82;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "length";
__n85["raw"] := "\"length\"";
__n81["property"] := __n85;
__n81["computed"] := true;
__n80["argument"] := __n81;
__n80["prefix"] := true;
__n79["left"] := __n80;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "number";
__n86["raw"] := "\"number\"";
__n79["right"] := __n86;
__n78["test"] := __n79;
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "$ERROR";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "+";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "#5: typeof Function.prototype.length === \"number\". Actual: ";
__n92["raw"] := "'#5: typeof Function.prototype.length === \"number\". Actual: '";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "UnaryExpression";
__n93["operator"] := "typeof";
__n94 := {  };
__n94["type"] := "MemberExpression";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "Function";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "prototype";
__n97["raw"] := "\"prototype\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["object"] := __n95;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "length";
__n98["raw"] := "\"length\"";
__n94["property"] := __n98;
__n94["computed"] := true;
__n93["argument"] := __n94;
__n93["prefix"] := true;
__n91["right"] := __n93;
__n90 := [ __n91 ];
__n88["arguments"] := __n90;
__n87["expression"] := __n88;
__n78["consequent"] := __n87;
__n78["alternate"] := null;
__n99 := {  };
__n99["type"] := "IfStatement";
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "!==";
__n101 := {  };
__n101["type"] := "UnaryExpression";
__n101["operator"] := "typeof";
__n102 := {  };
__n102["type"] := "MemberExpression";
__n102["computed"] := true;
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "Function";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "prototype";
__n105["raw"] := "\"prototype\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n102["object"] := __n103;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "length";
__n106["raw"] := "'length'";
__n102["property"] := __n106;
__n101["argument"] := __n102;
__n101["prefix"] := true;
__n100["left"] := __n101;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "number";
__n107["raw"] := "\"number\"";
__n100["right"] := __n107;
__n99["test"] := __n100;
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "$ERROR";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "+";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "#6: typeof Function.prototype[\"length\"] === \"number\". Actual: ";
__n113["raw"] := "'#6: typeof Function.prototype[\"length\"] === \"number\". Actual: '";
__n112["left"] := __n113;
__n114 := {  };
__n114["type"] := "UnaryExpression";
__n114["operator"] := "typeof";
__n115 := {  };
__n115["type"] := "MemberExpression";
__n115["computed"] := true;
__n116 := {  };
__n116["type"] := "MemberExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "Function";
__n116["object"] := __n117;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "prototype";
__n118["raw"] := "\"prototype\"";
__n116["property"] := __n118;
__n116["computed"] := true;
__n115["object"] := __n116;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "length";
__n119["raw"] := "\"length\"";
__n115["property"] := __n119;
__n114["argument"] := __n115;
__n114["prefix"] := true;
__n112["right"] := __n114;
__n111 := [ __n112 ];
__n109["arguments"] := __n111;
__n108["expression"] := __n109;
__n99["consequent"] := __n108;
__n99["alternate"] := null;
__n120 := {  };
__n120["type"] := "IfStatement";
__n121 := {  };
__n121["type"] := "BinaryExpression";
__n121["operator"] := "!==";
__n122 := {  };
__n122["type"] := "UnaryExpression";
__n122["operator"] := "typeof";
__n123 := {  };
__n123["type"] := "MemberExpression";
__n124 := {  };
__n124["type"] := "MemberExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "Function";
__n124["object"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "prototype";
__n126["raw"] := "\"prototype\"";
__n124["property"] := __n126;
__n124["computed"] := true;
__n123["object"] := __n124;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "valueOf";
__n127["raw"] := "\"valueOf\"";
__n123["property"] := __n127;
__n123["computed"] := true;
__n122["argument"] := __n123;
__n122["prefix"] := true;
__n121["left"] := __n122;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := "function";
__n128["raw"] := "\"function\"";
__n121["right"] := __n128;
__n120["test"] := __n121;
__n129 := {  };
__n129["type"] := "ExpressionStatement";
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "$ERROR";
__n130["callee"] := __n131;
__n133 := {  };
__n133["type"] := "BinaryExpression";
__n133["operator"] := "+";
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "#7: typeof Function.prototype.valueOf === \"function\". Actual: ";
__n134["raw"] := "'#7: typeof Function.prototype.valueOf === \"function\". Actual: '";
__n133["left"] := __n134;
__n135 := {  };
__n135["type"] := "UnaryExpression";
__n135["operator"] := "typeof";
__n136 := {  };
__n136["type"] := "MemberExpression";
__n137 := {  };
__n137["type"] := "MemberExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "Function";
__n137["object"] := __n138;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "prototype";
__n139["raw"] := "\"prototype\"";
__n137["property"] := __n139;
__n137["computed"] := true;
__n136["object"] := __n137;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "valueOf";
__n140["raw"] := "\"valueOf\"";
__n136["property"] := __n140;
__n136["computed"] := true;
__n135["argument"] := __n136;
__n135["prefix"] := true;
__n133["right"] := __n135;
__n132 := [ __n133 ];
__n130["arguments"] := __n132;
__n129["expression"] := __n130;
__n120["consequent"] := __n129;
__n120["alternate"] := null;
__n141 := {  };
__n141["type"] := "IfStatement";
__n142 := {  };
__n142["type"] := "BinaryExpression";
__n142["operator"] := "!==";
__n143 := {  };
__n143["type"] := "UnaryExpression";
__n143["operator"] := "typeof";
__n144 := {  };
__n144["type"] := "MemberExpression";
__n144["computed"] := true;
__n145 := {  };
__n145["type"] := "MemberExpression";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "Function";
__n145["object"] := __n146;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "prototype";
__n147["raw"] := "\"prototype\"";
__n145["property"] := __n147;
__n145["computed"] := true;
__n144["object"] := __n145;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "valueOf";
__n148["raw"] := "'valueOf'";
__n144["property"] := __n148;
__n143["argument"] := __n144;
__n143["prefix"] := true;
__n142["left"] := __n143;
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := "function";
__n149["raw"] := "\"function\"";
__n142["right"] := __n149;
__n141["test"] := __n142;
__n150 := {  };
__n150["type"] := "ExpressionStatement";
__n151 := {  };
__n151["type"] := "CallExpression";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "$ERROR";
__n151["callee"] := __n152;
__n154 := {  };
__n154["type"] := "BinaryExpression";
__n154["operator"] := "+";
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := "#8: typeof Function.prototype[\"valueOf\"] === \"function\". Actual: ";
__n155["raw"] := "'#8: typeof Function.prototype[\"valueOf\"] === \"function\". Actual: '";
__n154["left"] := __n155;
__n156 := {  };
__n156["type"] := "UnaryExpression";
__n156["operator"] := "typeof";
__n157 := {  };
__n157["type"] := "MemberExpression";
__n157["computed"] := true;
__n158 := {  };
__n158["type"] := "MemberExpression";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "Function";
__n158["object"] := __n159;
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := "prototype";
__n160["raw"] := "\"prototype\"";
__n158["property"] := __n160;
__n158["computed"] := true;
__n157["object"] := __n158;
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := "valueOf";
__n161["raw"] := "\"valueOf\"";
__n157["property"] := __n161;
__n156["argument"] := __n157;
__n156["prefix"] := true;
__n154["right"] := __n156;
__n153 := [ __n154 ];
__n151["arguments"] := __n153;
__n150["expression"] := __n151;
__n141["consequent"] := __n150;
__n141["alternate"] := null;
__n1 := [ __n2, __n19, __n36, __n57, __n78, __n99, __n120, __n141 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n162 := [  ];
__n0["variableDeclarations"] := __n162;
__n163 := [  ];
__n0["functionDeclarations"] := __n163;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}