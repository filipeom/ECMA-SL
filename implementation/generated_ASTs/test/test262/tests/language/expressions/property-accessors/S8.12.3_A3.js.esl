function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__map";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "shape";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "cube";
__n10["raw"] := "\"cube\"";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n11 := {  };
__n11["type"] := "Property";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 5.;
__n12["raw"] := "5";
__n11["key"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "five";
__n13["raw"] := "\"five\"";
__n11["value"] := __n13;
__n11["computed"] := false;
__n11["kind"] := "init";
__n11["shorthand"] := false;
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "6";
__n15["raw"] := "\"6\"";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "six";
__n16["raw"] := "\"six\"";
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n7 := [ __n8, __n11, __n14 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n17 := {  };
__n17["type"] := "IfStatement";
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "!==";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "__map";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "shape";
__n21["raw"] := "\"shape\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["left"] := __n19;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "cube";
__n22["raw"] := "\"cube\"";
__n18["right"] := __n22;
__n17["test"] := __n18;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "$ERROR";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "+";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "#1: var __map={shape:\"cube\", 5:\"five\", \"6\":\"six\"}; __map.shape === \"cube\". Actual: ";
__n30["raw"] := "'#1: var __map={shape:\"cube\", 5:\"five\", \"6\":\"six\"}; __map.shape === \"cube\". Actual: '";
__n29["left"] := __n30;
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "__map";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "shape";
__n33["raw"] := "\"shape\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n29["right"] := __n31;
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n17["consequent"] := __n23;
__n17["alternate"] := null;
__n34 := {  };
__n34["type"] := "IfStatement";
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "!==";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n36["computed"] := true;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "__map";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "shape";
__n38["raw"] := "\"shape\"";
__n36["property"] := __n38;
__n35["left"] := __n36;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "cube";
__n39["raw"] := "\"cube\"";
__n35["right"] := __n39;
__n34["test"] := __n35;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "+";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#2: var __map={shape:\"cube\", 5:\"five\", \"6\":\"six\"}; __map[\"shape\"] === \"cube\". Actual: ";
__n47["raw"] := "'#2: var __map={shape:\"cube\", 5:\"five\", \"6\":\"six\"}; __map[\"shape\"] === \"cube\". Actual: '";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "MemberExpression";
__n48["computed"] := true;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "__map";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "shape";
__n50["raw"] := "\"shape\"";
__n48["property"] := __n50;
__n46["right"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n34["consequent"] := __n40;
__n34["alternate"] := null;
__n51 := {  };
__n51["type"] := "IfStatement";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "!==";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n53["computed"] := true;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "__map";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "5";
__n55["raw"] := "\"5\"";
__n53["property"] := __n55;
__n52["left"] := __n53;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "five";
__n56["raw"] := "\"five\"";
__n52["right"] := __n56;
__n51["test"] := __n52;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "$ERROR";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "+";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#3: var __map={shape:\"cube\", 5:\"five\", \"6\":\"six\"}; __map[\"5\"] === \"five\". Actual: ";
__n64["raw"] := "'#3: var __map={shape:\"cube\", 5:\"five\", \"6\":\"six\"}; __map[\"5\"] === \"five\". Actual: '";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "MemberExpression";
__n65["computed"] := true;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "__map";
__n65["object"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "5";
__n67["raw"] := "\"5\"";
__n65["property"] := __n67;
__n63["right"] := __n65;
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n51["consequent"] := __n57;
__n51["alternate"] := null;
__n68 := {  };
__n68["type"] := "IfStatement";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "!==";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n70["computed"] := true;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "__map";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 5.;
__n72["raw"] := "5";
__n70["property"] := __n72;
__n69["left"] := __n70;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "five";
__n73["raw"] := "\"five\"";
__n69["right"] := __n73;
__n68["test"] := __n69;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "$ERROR";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "+";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "#4: var __map={shape:\"cube\", 5:\"five\", \"6\":\"six\"}; __map[5] === \"five\". Actual: ";
__n81["raw"] := "'#4: var __map={shape:\"cube\", 5:\"five\", \"6\":\"six\"}; __map[5] === \"five\". Actual: '";
__n80["left"] := __n81;
__n82 := {  };
__n82["type"] := "MemberExpression";
__n82["computed"] := true;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "__map";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := 5.;
__n84["raw"] := "5";
__n82["property"] := __n84;
__n80["right"] := __n82;
__n79 := [ __n80 ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n68["consequent"] := __n74;
__n68["alternate"] := null;
__n85 := {  };
__n85["type"] := "IfStatement";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "!==";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n87["computed"] := true;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "__map";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "6";
__n89["raw"] := "\"6\"";
__n87["property"] := __n89;
__n86["left"] := __n87;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "six";
__n90["raw"] := "\"six\"";
__n86["right"] := __n90;
__n85["test"] := __n86;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "#5: var __map={shape:\"cube\", 5:\"five\", \"6\":\"six\"}; __map[\"6\"] === \"six\". Actual: ";
__n98["raw"] := "'#5: var __map={shape:\"cube\", 5:\"five\", \"6\":\"six\"}; __map[\"6\"] === \"six\". Actual: '";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "MemberExpression";
__n99["computed"] := true;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "__map";
__n99["object"] := __n100;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "6";
__n101["raw"] := "\"6\"";
__n99["property"] := __n101;
__n97["right"] := __n99;
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n85["consequent"] := __n91;
__n85["alternate"] := null;
__n102 := {  };
__n102["type"] := "IfStatement";
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "!==";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n104["computed"] := true;
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "__map";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 6.;
__n106["raw"] := "6";
__n104["property"] := __n106;
__n103["left"] := __n104;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "six";
__n107["raw"] := "\"six\"";
__n103["right"] := __n107;
__n102["test"] := __n103;
__n108 := {  };
__n108["type"] := "BlockStatement";
__n110 := {  };
__n110["type"] := "ExpressionStatement";
__n111 := {  };
__n111["type"] := "CallExpression";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "$ERROR";
__n111["callee"] := __n112;
__n114 := {  };
__n114["type"] := "BinaryExpression";
__n114["operator"] := "+";
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "#6: var __map={shape:\"cube\", 5:\"five\", \"6\":\"six\"}; __map[6] === \"six\". Actual: ";
__n115["raw"] := "'#6: var __map={shape:\"cube\", 5:\"five\", \"6\":\"six\"}; __map[6] === \"six\". Actual: '";
__n114["left"] := __n115;
__n116 := {  };
__n116["type"] := "MemberExpression";
__n116["computed"] := true;
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "__map";
__n116["object"] := __n117;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 6.;
__n118["raw"] := "6";
__n116["property"] := __n118;
__n114["right"] := __n116;
__n113 := [ __n114 ];
__n111["arguments"] := __n113;
__n110["expression"] := __n111;
__n109 := [ __n110 ];
__n108["body"] := __n109;
__n102["consequent"] := __n108;
__n102["alternate"] := null;
__n1 := [ __n2, __n17, __n34, __n51, __n68, __n85, __n102 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n119 := [ "__map" ];
__n0["variableDeclarations"] := __n119;
__n120 := [  ];
__n0["functionDeclarations"] := __n120;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}