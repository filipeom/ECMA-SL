function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "Identifier";
__n4["name"] := "eval";
__n3["callee"] := __n4;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "1	!==	1";
__n6["raw"] := "\"1\\u0009!==\\u00091\"";
__n5 := [ __n6 ];
__n3["arguments"] := __n5;
__n2["test"] := __n3;
__n7 := {  };
__n7["type"] := "BlockStatement";
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "$ERROR";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "#1: 1\\u0009!==\\u00091";
__n13["raw"] := "'#1: 1\\\\u0009!==\\\\u00091'";
__n12 := [ __n13 ];
__n10["arguments"] := __n12;
__n9["expression"] := __n10;
__n8 := [ __n9 ];
__n7["body"] := __n8;
__n2["consequent"] := __n7;
__n2["alternate"] := null;
__n14 := {  };
__n14["type"] := "IfStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "eval";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "1!==1";
__n18["raw"] := "\"1\\u000B!==\\u000B1\"";
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["test"] := __n15;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "$ERROR";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "#2: 1\\u000B!==\\u000B1";
__n25["raw"] := "'#2: 1\\\\u000B!==\\\\u000B1'";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n14["consequent"] := __n19;
__n14["alternate"] := null;
__n26 := {  };
__n26["type"] := "IfStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "eval";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "1!==1";
__n30["raw"] := "\"1\\u000C!==\\u000C1\"";
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["test"] := __n27;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "$ERROR";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "#3: 1\\u000C!==\\u000C1";
__n37["raw"] := "'#3: 1\\\\u000C!==\\\\u000C1'";
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33["expression"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n26["consequent"] := __n31;
__n26["alternate"] := null;
__n38 := {  };
__n38["type"] := "IfStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "eval";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "1 !== 1";
__n42["raw"] := "\"1\\u0020!==\\u00201\"";
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["test"] := __n39;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "#4: 1\\u0020!==\\u00201";
__n49["raw"] := "'#4: 1\\\\u0020!==\\\\u00201'";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n38["consequent"] := __n43;
__n38["alternate"] := null;
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "eval";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "1 !== 1";
__n54["raw"] := "\"1\\u00A0!==\\u00A01\"";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["test"] := __n51;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#5: 1\\u00A0!==\\u00A01";
__n61["raw"] := "'#5: 1\\\\u00A0!==\\\\u00A01'";
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n50["consequent"] := __n55;
__n50["alternate"] := null;
__n62 := {  };
__n62["type"] := "IfStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "eval";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "1
!==
1";
__n66["raw"] := "\"1\\u000A!==\\u000A1\"";
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["test"] := __n63;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#6: 1\\u000A!==\\u000A1";
__n73["raw"] := "'#6: 1\\\\u000A!==\\\\u000A1'";
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n62["consequent"] := __n67;
__n62["alternate"] := null;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "eval";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "1!==1";
__n78["raw"] := "\"1\\u000D!==\\u000D1\"";
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["test"] := __n75;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "$ERROR";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "#7: 1\\u000D!==\\u000D1";
__n85["raw"] := "'#7: 1\\\\u000D!==\\\\u000D1'";
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n74["consequent"] := __n79;
__n74["alternate"] := null;
__n86 := {  };
__n86["type"] := "IfStatement";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "eval";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "1 !== 1";
__n90["raw"] := "\"1\\u2028!==\\u20281\"";
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86["test"] := __n87;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "#8: 1\\u2028!==\\u20281";
__n97["raw"] := "'#8: 1\\\\u2028!==\\\\u20281'";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n86["consequent"] := __n91;
__n86["alternate"] := null;
__n98 := {  };
__n98["type"] := "IfStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "eval";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "1 !== 1";
__n102["raw"] := "\"1\\u2029!==\\u20291\"";
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["test"] := __n99;
__n103 := {  };
__n103["type"] := "BlockStatement";
__n105 := {  };
__n105["type"] := "ExpressionStatement";
__n106 := {  };
__n106["type"] := "CallExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "$ERROR";
__n106["callee"] := __n107;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "#9: 1\\u2029!==\\u20291";
__n109["raw"] := "'#9: 1\\\\u2029!==\\\\u20291'";
__n108 := [ __n109 ];
__n106["arguments"] := __n108;
__n105["expression"] := __n106;
__n104 := [ __n105 ];
__n103["body"] := __n104;
__n98["consequent"] := __n103;
__n98["alternate"] := null;
__n110 := {  };
__n110["type"] := "IfStatement";
__n111 := {  };
__n111["type"] := "CallExpression";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "eval";
__n111["callee"] := __n112;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "1	  
  !==	  
  1";
__n114["raw"] := "\"1\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029!==\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291\"";
__n113 := [ __n114 ];
__n111["arguments"] := __n113;
__n110["test"] := __n111;
__n115 := {  };
__n115["type"] := "BlockStatement";
__n117 := {  };
__n117["type"] := "ExpressionStatement";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "$ERROR";
__n118["callee"] := __n119;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "#10: 1\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u2029!==\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000A\\u000D\\u2028\\u20291";
__n121["raw"] := "'#10: 1\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u2029!==\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000A\\\\u000D\\\\u2028\\\\u20291'";
__n120 := [ __n121 ];
__n118["arguments"] := __n120;
__n117["expression"] := __n118;
__n116 := [ __n117 ];
__n115["body"] := __n116;
__n110["consequent"] := __n115;
__n110["alternate"] := null;
__n1 := [ __n2, __n14, __n26, __n38, __n50, __n62, __n74, __n86, __n98, __n110 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n122 := [  ];
__n0["variableDeclarations"] := __n122;
__n123 := [  ];
__n0["functionDeclarations"] := __n123;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}