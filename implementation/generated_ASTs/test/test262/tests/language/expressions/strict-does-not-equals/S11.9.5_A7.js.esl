function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "UnaryExpression";
__n3["operator"] := "!";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "!==";
__n5 := {  };
__n5["type"] := "NewExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Object";
__n5["callee"] := __n6;
__n7 := [  ];
__n5["arguments"] := __n7;
__n4["left"] := __n5;
__n8 := {  };
__n8["type"] := "NewExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Object";
__n8["callee"] := __n9;
__n10 := [  ];
__n8["arguments"] := __n10;
__n4["right"] := __n8;
__n3["argument"] := __n4;
__n3["prefix"] := true;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "#1: new Object() !== new Object()";
__n17["raw"] := "'#1: new Object() !== new Object()'";
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n2["alternate"] := null;
__n18 := {  };
__n18["type"] := "IfStatement";
__n19 := {  };
__n19["type"] := "UnaryExpression";
__n19["operator"] := "!";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!==";
__n21 := {  };
__n21["type"] := "NewExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Object";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := true;
__n24["raw"] := "true";
__n23 := [ __n24 ];
__n21["arguments"] := __n23;
__n20["left"] := __n21;
__n25 := {  };
__n25["type"] := "NewExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Object";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := true;
__n28["raw"] := "true";
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n20["right"] := __n25;
__n19["argument"] := __n20;
__n19["prefix"] := true;
__n18["test"] := __n19;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "$ERROR";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "#2: new Object() !== new Object()";
__n35["raw"] := "'#2: new Object() !== new Object()'";
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n18["consequent"] := __n29;
__n18["alternate"] := null;
__n36 := {  };
__n36["type"] := "IfStatement";
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "!";
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "!==";
__n39 := {  };
__n39["type"] := "NewExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Object";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := false;
__n42["raw"] := "false";
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["left"] := __n39;
__n43 := {  };
__n43["type"] := "NewExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Object";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := false;
__n46["raw"] := "false";
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n38["right"] := __n43;
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n36["test"] := __n37;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#3: new Object() !== new Object()";
__n53["raw"] := "'#3: new Object() !== new Object()'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n36["consequent"] := __n47;
__n36["alternate"] := null;
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "UnaryExpression";
__n55["operator"] := "!";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "!==";
__n57 := {  };
__n57["type"] := "NewExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "Object";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "UnaryExpression";
__n60["operator"] := "+";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 0.;
__n61["raw"] := "0";
__n60["argument"] := __n61;
__n60["prefix"] := true;
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["left"] := __n57;
__n62 := {  };
__n62["type"] := "NewExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Object";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "UnaryExpression";
__n65["operator"] := "-";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 0.;
__n66["raw"] := "0";
__n65["argument"] := __n66;
__n65["prefix"] := true;
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n56["right"] := __n62;
__n55["argument"] := __n56;
__n55["prefix"] := true;
__n54["test"] := __n55;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#4: new Object(+0) !== new Object(-0)";
__n73["raw"] := "'#4: new Object(+0) !== new Object(-0)'";
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n54["consequent"] := __n67;
__n54["alternate"] := null;
__n74 := {  };
__n74["type"] := "VariableDeclaration";
__n76 := {  };
__n76["type"] := "VariableDeclarator";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "x";
__n76["id"] := __n77;
__n76["init"] := null;
__n78 := {  };
__n78["type"] := "VariableDeclarator";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "y";
__n78["id"] := __n79;
__n78["init"] := null;
__n75 := [ __n76, __n78 ];
__n74["declarations"] := __n75;
__n74["kind"] := "var";
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "AssignmentExpression";
__n81["operator"] := "=";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "x";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "ObjectExpression";
__n84 := [  ];
__n83["properties"] := __n84;
__n81["right"] := __n83;
__n80["expression"] := __n81;
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "AssignmentExpression";
__n86["operator"] := "=";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "y";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "x";
__n86["right"] := __n88;
__n85["expression"] := __n86;
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "!==";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "x";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "y";
__n90["right"] := __n92;
__n89["test"] := __n90;
__n93 := {  };
__n93["type"] := "BlockStatement";
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "CallExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "$ERROR";
__n96["callee"] := __n97;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "#5: x = {}; y = x; x === y";
__n99["raw"] := "'#5: x = {}; y = x; x === y'";
__n98 := [ __n99 ];
__n96["arguments"] := __n98;
__n95["expression"] := __n96;
__n94 := [ __n95 ];
__n93["body"] := __n94;
__n89["consequent"] := __n93;
__n89["alternate"] := null;
__n100 := {  };
__n100["type"] := "IfStatement";
__n101 := {  };
__n101["type"] := "UnaryExpression";
__n101["operator"] := "!";
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "!==";
__n103 := {  };
__n103["type"] := "NewExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "Boolean";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := true;
__n106["raw"] := "true";
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n102["left"] := __n103;
__n107 := {  };
__n107["type"] := "NewExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "Number";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 1.;
__n110["raw"] := "1";
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n102["right"] := __n107;
__n101["argument"] := __n102;
__n101["prefix"] := true;
__n100["test"] := __n101;
__n111 := {  };
__n111["type"] := "BlockStatement";
__n113 := {  };
__n113["type"] := "ExpressionStatement";
__n114 := {  };
__n114["type"] := "CallExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "$ERROR";
__n114["callee"] := __n115;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "#6 new Boolean(true) !== new Number(1)";
__n117["raw"] := "'#6 new Boolean(true) !== new Number(1)'";
__n116 := [ __n117 ];
__n114["arguments"] := __n116;
__n113["expression"] := __n114;
__n112 := [ __n113 ];
__n111["body"] := __n112;
__n100["consequent"] := __n111;
__n100["alternate"] := null;
__n118 := {  };
__n118["type"] := "IfStatement";
__n119 := {  };
__n119["type"] := "UnaryExpression";
__n119["operator"] := "!";
__n120 := {  };
__n120["type"] := "BinaryExpression";
__n120["operator"] := "!==";
__n121 := {  };
__n121["type"] := "NewExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "Number";
__n121["callee"] := __n122;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 1.;
__n124["raw"] := "1";
__n123 := [ __n124 ];
__n121["arguments"] := __n123;
__n120["left"] := __n121;
__n125 := {  };
__n125["type"] := "NewExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "String";
__n125["callee"] := __n126;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := "1";
__n128["raw"] := "\"1\"";
__n127 := [ __n128 ];
__n125["arguments"] := __n127;
__n120["right"] := __n125;
__n119["argument"] := __n120;
__n119["prefix"] := true;
__n118["test"] := __n119;
__n129 := {  };
__n129["type"] := "BlockStatement";
__n131 := {  };
__n131["type"] := "ExpressionStatement";
__n132 := {  };
__n132["type"] := "CallExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "$ERROR";
__n132["callee"] := __n133;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "#7: new Number(1) !== new String(\"1\")";
__n135["raw"] := "'#7: new Number(1) !== new String(\"1\")'";
__n134 := [ __n135 ];
__n132["arguments"] := __n134;
__n131["expression"] := __n132;
__n130 := [ __n131 ];
__n129["body"] := __n130;
__n118["consequent"] := __n129;
__n118["alternate"] := null;
__n136 := {  };
__n136["type"] := "IfStatement";
__n137 := {  };
__n137["type"] := "UnaryExpression";
__n137["operator"] := "!";
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "!==";
__n139 := {  };
__n139["type"] := "NewExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "String";
__n139["callee"] := __n140;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := "1";
__n142["raw"] := "\"1\"";
__n141 := [ __n142 ];
__n139["arguments"] := __n141;
__n138["left"] := __n139;
__n143 := {  };
__n143["type"] := "NewExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "Boolean";
__n143["callee"] := __n144;
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := true;
__n146["raw"] := "true";
__n145 := [ __n146 ];
__n143["arguments"] := __n145;
__n138["right"] := __n143;
__n137["argument"] := __n138;
__n137["prefix"] := true;
__n136["test"] := __n137;
__n147 := {  };
__n147["type"] := "BlockStatement";
__n149 := {  };
__n149["type"] := "ExpressionStatement";
__n150 := {  };
__n150["type"] := "CallExpression";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "$ERROR";
__n150["callee"] := __n151;
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := "#8: new String(\"x\") !== new Boolean(true)";
__n153["raw"] := "'#8: new String(\"x\") !== new Boolean(true)'";
__n152 := [ __n153 ];
__n150["arguments"] := __n152;
__n149["expression"] := __n150;
__n148 := [ __n149 ];
__n147["body"] := __n148;
__n136["consequent"] := __n147;
__n136["alternate"] := null;
__n1 := [ __n2, __n18, __n36, __n54, __n74, __n80, __n85, __n89, __n100, __n118, __n136 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n154 := [ "x", "y" ];
__n0["variableDeclarations"] := __n154;
__n155 := [  ];
__n0["functionDeclarations"] := __n155;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}