function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "-";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Number";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "MIN_VALUE";
__n7["raw"] := "\"MIN_VALUE\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["left"] := __n5;
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Number";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "MIN_VALUE";
__n10["raw"] := "\"MIN_VALUE\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n4["right"] := __n8;
__n3["left"] := __n4;
__n11 := {  };
__n11["type"] := "UnaryExpression";
__n11["operator"] := "+";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 0.;
__n12["raw"] := "0";
__n11["argument"] := __n12;
__n11["prefix"] := true;
__n3["right"] := __n11;
__n2["test"] := __n3;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "$ERROR";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "+";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "#1.1: Number.MIN_VALUE - Number.MIN_VALUE === 0. Actual: ";
__n20["raw"] := "'#1.1: Number.MIN_VALUE - Number.MIN_VALUE === 0. Actual: '";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "-";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Number";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "MIN_VALUE";
__n24["raw"] := "\"MIN_VALUE\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["left"] := __n22;
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Number";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "MIN_VALUE";
__n27["raw"] := "\"MIN_VALUE\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n21["right"] := __n25;
__n19["right"] := __n21;
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n15["expression"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n2["consequent"] := __n13;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "IfStatement";
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "!==";
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "/";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 1.;
__n33["raw"] := "1";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "-";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Number";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "MIN_VALUE";
__n37["raw"] := "\"MIN_VALUE\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["left"] := __n35;
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "Number";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "MIN_VALUE";
__n40["raw"] := "\"MIN_VALUE\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n34["right"] := __n38;
__n32["right"] := __n34;
__n31["left"] := __n32;
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Number";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "POSITIVE_INFINITY";
__n43["raw"] := "\"POSITIVE_INFINITY\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n31["right"] := __n41;
__n30["test"] := __n31;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$ERROR";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "#1.2: Number.MIN_VALUE - Number.MIN_VALUE === + 0. Actual: -0";
__n50["raw"] := "'#1.2: Number.MIN_VALUE - Number.MIN_VALUE === + 0. Actual: -0'";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n30["consequent"] := __n44;
__n30["alternate"] := null;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n2["alternate"] := __n28;
__n51 := {  };
__n51["type"] := "IfStatement";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "!==";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "-";
__n54 := {  };
__n54["type"] := "UnaryExpression";
__n54["operator"] := "-";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Number";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "MAX_VALUE";
__n57["raw"] := "\"MAX_VALUE\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["argument"] := __n55;
__n54["prefix"] := true;
__n53["left"] := __n54;
__n58 := {  };
__n58["type"] := "UnaryExpression";
__n58["operator"] := "-";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Number";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "MAX_VALUE";
__n61["raw"] := "\"MAX_VALUE\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n58["argument"] := __n59;
__n58["prefix"] := true;
__n53["right"] := __n58;
__n52["left"] := __n53;
__n62 := {  };
__n62["type"] := "UnaryExpression";
__n62["operator"] := "+";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 0.;
__n63["raw"] := "0";
__n62["argument"] := __n63;
__n62["prefix"] := true;
__n52["right"] := __n62;
__n51["test"] := __n52;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$ERROR";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "+";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "#2.2: -Number.MAX_VALUE - -Number.MAX_VALUE === 0. Actual: ";
__n71["raw"] := "'#2.2: -Number.MAX_VALUE - -Number.MAX_VALUE === 0. Actual: '";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "-";
__n73 := {  };
__n73["type"] := "UnaryExpression";
__n73["operator"] := "-";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "Number";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "MAX_VALUE";
__n76["raw"] := "\"MAX_VALUE\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["argument"] := __n74;
__n73["prefix"] := true;
__n72["left"] := __n73;
__n77 := {  };
__n77["type"] := "UnaryExpression";
__n77["operator"] := "-";
__n78 := {  };
__n78["type"] := "MemberExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "Number";
__n78["object"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "MAX_VALUE";
__n80["raw"] := "\"MAX_VALUE\"";
__n78["property"] := __n80;
__n78["computed"] := true;
__n77["argument"] := __n78;
__n77["prefix"] := true;
__n72["right"] := __n77;
__n70["right"] := __n72;
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n51["consequent"] := __n64;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "IfStatement";
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "!==";
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "/";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 1.;
__n86["raw"] := "1";
__n85["left"] := __n86;
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "-";
__n88 := {  };
__n88["type"] := "UnaryExpression";
__n88["operator"] := "-";
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "Number";
__n89["object"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "MAX_VALUE";
__n91["raw"] := "\"MAX_VALUE\"";
__n89["property"] := __n91;
__n89["computed"] := true;
__n88["argument"] := __n89;
__n88["prefix"] := true;
__n87["left"] := __n88;
__n92 := {  };
__n92["type"] := "UnaryExpression";
__n92["operator"] := "-";
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "Number";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "MAX_VALUE";
__n95["raw"] := "\"MAX_VALUE\"";
__n93["property"] := __n95;
__n93["computed"] := true;
__n92["argument"] := __n93;
__n92["prefix"] := true;
__n87["right"] := __n92;
__n85["right"] := __n87;
__n84["left"] := __n85;
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "Number";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "POSITIVE_INFINITY";
__n98["raw"] := "\"POSITIVE_INFINITY\"";
__n96["property"] := __n98;
__n96["computed"] := true;
__n84["right"] := __n96;
__n83["test"] := __n84;
__n99 := {  };
__n99["type"] := "BlockStatement";
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "$ERROR";
__n102["callee"] := __n103;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "#2.1: -Number.MAX_VALUE - -Number.MAX_VALUE === + 0. Actual: -0";
__n105["raw"] := "'#2.1: -Number.MAX_VALUE - -Number.MAX_VALUE === + 0. Actual: -0'";
__n104 := [ __n105 ];
__n102["arguments"] := __n104;
__n101["expression"] := __n102;
__n100 := [ __n101 ];
__n99["body"] := __n100;
__n83["consequent"] := __n99;
__n83["alternate"] := null;
__n82 := [ __n83 ];
__n81["body"] := __n82;
__n51["alternate"] := __n81;
__n106 := {  };
__n106["type"] := "IfStatement";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "!==";
__n108 := {  };
__n108["type"] := "BinaryExpression";
__n108["operator"] := "-";
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "/";
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 1.;
__n110["raw"] := "1";
__n109["left"] := __n110;
__n111 := {  };
__n111["type"] := "MemberExpression";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "Number";
__n111["object"] := __n112;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "MAX_VALUE";
__n113["raw"] := "\"MAX_VALUE\"";
__n111["property"] := __n113;
__n111["computed"] := true;
__n109["right"] := __n111;
__n108["left"] := __n109;
__n114 := {  };
__n114["type"] := "BinaryExpression";
__n114["operator"] := "/";
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := 1.;
__n115["raw"] := "1";
__n114["left"] := __n115;
__n116 := {  };
__n116["type"] := "MemberExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "Number";
__n116["object"] := __n117;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "MAX_VALUE";
__n118["raw"] := "\"MAX_VALUE\"";
__n116["property"] := __n118;
__n116["computed"] := true;
__n114["right"] := __n116;
__n108["right"] := __n114;
__n107["left"] := __n108;
__n119 := {  };
__n119["type"] := "UnaryExpression";
__n119["operator"] := "+";
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := 0.;
__n120["raw"] := "0";
__n119["argument"] := __n120;
__n119["prefix"] := true;
__n107["right"] := __n119;
__n106["test"] := __n107;
__n121 := {  };
__n121["type"] := "BlockStatement";
__n123 := {  };
__n123["type"] := "ExpressionStatement";
__n124 := {  };
__n124["type"] := "CallExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "$ERROR";
__n124["callee"] := __n125;
__n127 := {  };
__n127["type"] := "BinaryExpression";
__n127["operator"] := "+";
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := "#3.1: 1 / Number.MAX_VALUE - 1 / Number.MAX_VALUE === 0. Actual: ";
__n128["raw"] := "'#3.1: 1 / Number.MAX_VALUE - 1 / Number.MAX_VALUE === 0. Actual: '";
__n127["left"] := __n128;
__n129 := {  };
__n129["type"] := "BinaryExpression";
__n129["operator"] := "-";
__n130 := {  };
__n130["type"] := "BinaryExpression";
__n130["operator"] := "/";
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := 1.;
__n131["raw"] := "1";
__n130["left"] := __n131;
__n132 := {  };
__n132["type"] := "MemberExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "Number";
__n132["object"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "MAX_VALUE";
__n134["raw"] := "\"MAX_VALUE\"";
__n132["property"] := __n134;
__n132["computed"] := true;
__n130["right"] := __n132;
__n129["left"] := __n130;
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "/";
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := 1.;
__n136["raw"] := "1";
__n135["left"] := __n136;
__n137 := {  };
__n137["type"] := "MemberExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "Number";
__n137["object"] := __n138;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "MAX_VALUE";
__n139["raw"] := "\"MAX_VALUE\"";
__n137["property"] := __n139;
__n137["computed"] := true;
__n135["right"] := __n137;
__n129["right"] := __n135;
__n127["right"] := __n129;
__n126 := [ __n127 ];
__n124["arguments"] := __n126;
__n123["expression"] := __n124;
__n122 := [ __n123 ];
__n121["body"] := __n122;
__n106["consequent"] := __n121;
__n140 := {  };
__n140["type"] := "BlockStatement";
__n142 := {  };
__n142["type"] := "IfStatement";
__n143 := {  };
__n143["type"] := "BinaryExpression";
__n143["operator"] := "!==";
__n144 := {  };
__n144["type"] := "BinaryExpression";
__n144["operator"] := "/";
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := 1.;
__n145["raw"] := "1";
__n144["left"] := __n145;
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "-";
__n147 := {  };
__n147["type"] := "BinaryExpression";
__n147["operator"] := "/";
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := 1.;
__n148["raw"] := "1";
__n147["left"] := __n148;
__n149 := {  };
__n149["type"] := "MemberExpression";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "Number";
__n149["object"] := __n150;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "MAX_VALUE";
__n151["raw"] := "\"MAX_VALUE\"";
__n149["property"] := __n151;
__n149["computed"] := true;
__n147["right"] := __n149;
__n146["left"] := __n147;
__n152 := {  };
__n152["type"] := "BinaryExpression";
__n152["operator"] := "/";
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := 1.;
__n153["raw"] := "1";
__n152["left"] := __n153;
__n154 := {  };
__n154["type"] := "MemberExpression";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "Number";
__n154["object"] := __n155;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := "MAX_VALUE";
__n156["raw"] := "\"MAX_VALUE\"";
__n154["property"] := __n156;
__n154["computed"] := true;
__n152["right"] := __n154;
__n146["right"] := __n152;
__n144["right"] := __n146;
__n143["left"] := __n144;
__n157 := {  };
__n157["type"] := "MemberExpression";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "Number";
__n157["object"] := __n158;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "POSITIVE_INFINITY";
__n159["raw"] := "\"POSITIVE_INFINITY\"";
__n157["property"] := __n159;
__n157["computed"] := true;
__n143["right"] := __n157;
__n142["test"] := __n143;
__n160 := {  };
__n160["type"] := "BlockStatement";
__n162 := {  };
__n162["type"] := "ExpressionStatement";
__n163 := {  };
__n163["type"] := "CallExpression";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "$ERROR";
__n163["callee"] := __n164;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "#3.2: 1 / Number.MAX_VALUE - 1 / Number.MAX_VALUE === + 0. Actual: -0";
__n166["raw"] := "'#3.2: 1 / Number.MAX_VALUE - 1 / Number.MAX_VALUE === + 0. Actual: -0'";
__n165 := [ __n166 ];
__n163["arguments"] := __n165;
__n162["expression"] := __n163;
__n161 := [ __n162 ];
__n160["body"] := __n161;
__n142["consequent"] := __n160;
__n142["alternate"] := null;
__n141 := [ __n142 ];
__n140["body"] := __n141;
__n106["alternate"] := __n140;
__n1 := [ __n2, __n51, __n106 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n167 := [  ];
__n0["variableDeclarations"] := __n167;
__n168 := [  ];
__n0["functionDeclarations"] := __n168;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}