function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "SetThis";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "IfStatement";
__n5 := {  };
__n5["type"] := "BinaryExpression";
__n5["operator"] := "!==";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "NewExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "SetThis";
__n9["callee"] := __n10;
__n11 := [  ];
__n9["arguments"] := __n11;
__n8["object"] := __n9;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "THIS";
__n12["raw"] := "\"THIS\"";
__n8["property"] := __n12;
__n8["computed"] := true;
__n7["object"] := __n8;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "toString";
__n13["raw"] := "\"toString\"";
__n7["property"] := __n13;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n14 := [  ];
__n6["arguments"] := __n14;
__n5["left"] := __n6;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "[object Object]";
__n15["raw"] := "\"[object Object]\"";
__n5["right"] := __n15;
__n4["test"] := __n5;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "$ERROR";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "+";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "#1: function SetThis() {this.THIS = this} (new SetThis()).THIS.toString() !== \"[object Object]\". Actual: ";
__n23["raw"] := "'#1: function SetThis() {this.THIS = this} (new SetThis()).THIS.toString() !== \"[object Object]\". Actual: '";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "NewExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "SetThis";
__n27["callee"] := __n28;
__n29 := [  ];
__n27["arguments"] := __n29;
__n26["object"] := __n27;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "THIS";
__n30["raw"] := "\"THIS\"";
__n26["property"] := __n30;
__n26["computed"] := true;
__n25["object"] := __n26;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "toString";
__n31["raw"] := "\"toString\"";
__n25["property"] := __n31;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n32 := [  ];
__n24["arguments"] := __n32;
__n22["right"] := __n24;
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n18["expression"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n4["consequent"] := __n16;
__n4["alternate"] := null;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "SetEvalThis";
__n33["expression"] := __n34;
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "NewExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "SetEvalThis";
__n40["callee"] := __n41;
__n42 := [  ];
__n40["arguments"] := __n42;
__n39["object"] := __n40;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "THIS";
__n43["raw"] := "\"THIS\"";
__n39["property"] := __n43;
__n39["computed"] := true;
__n38["object"] := __n39;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "toString";
__n44["raw"] := "\"toString\"";
__n38["property"] := __n44;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n45 := [  ];
__n37["arguments"] := __n45;
__n36["left"] := __n37;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "[object Object]";
__n46["raw"] := "\"[object Object]\"";
__n36["right"] := __n46;
__n35["test"] := __n36;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "+";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#2: function SetEvalThis() {this.THIS = eval(\"this\")} (new SetEvalThis()).THIS.toString() !== \"[object Object]\". Actual: ";
__n54["raw"] := "'#2: function SetEvalThis() {this.THIS = eval(\"this\")} (new SetEvalThis()).THIS.toString() !== \"[object Object]\". Actual: '";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "NewExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "SetEvalThis";
__n58["callee"] := __n59;
__n60 := [  ];
__n58["arguments"] := __n60;
__n57["object"] := __n58;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "THIS";
__n61["raw"] := "\"THIS\"";
__n57["property"] := __n61;
__n57["computed"] := true;
__n56["object"] := __n57;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "toString";
__n62["raw"] := "\"toString\"";
__n56["property"] := __n62;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n63 := [  ];
__n55["arguments"] := __n63;
__n53["right"] := __n55;
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n35["consequent"] := __n47;
__n35["alternate"] := null;
__n1 := [ __n2, __n4, __n33, __n35 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n64 := [  ];
__n0["variableDeclarations"] := __n64;
__n66 := {  };
__n66["type"] := "FunctionDeclaration";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "SetThis";
__n66["id"] := __n67;
__n68 := [  ];
__n66["params"] := __n68;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "AssignmentExpression";
__n72["operator"] := "=";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "ThisExpression";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "THIS";
__n75["raw"] := "\"THIS\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n72["left"] := __n73;
__n76 := {  };
__n76["type"] := "ThisExpression";
__n72["right"] := __n76;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n77 := [  ];
__n69["variableDeclarations"] := __n77;
__n78 := [  ];
__n69["functionDeclarations"] := __n78;
__n69["codeType"] := "function";
__n69["strict"] := false;
__n66["body"] := __n69;
__n66["generator"] := false;
__n66["async"] := false;
__n66["expression"] := false;
__n79 := {  };
__n79["type"] := "FunctionDeclaration";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "SetEvalThis";
__n79["id"] := __n80;
__n81 := [  ];
__n79["params"] := __n81;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "AssignmentExpression";
__n85["operator"] := "=";
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "ThisExpression";
__n86["object"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "THIS";
__n88["raw"] := "\"THIS\"";
__n86["property"] := __n88;
__n86["computed"] := true;
__n85["left"] := __n86;
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "eval";
__n89["callee"] := __n90;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "this";
__n92["raw"] := "\"this\"";
__n91 := [ __n92 ];
__n89["arguments"] := __n91;
__n85["right"] := __n89;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n93 := [  ];
__n82["variableDeclarations"] := __n93;
__n94 := [  ];
__n82["functionDeclarations"] := __n94;
__n82["codeType"] := "function";
__n82["strict"] := false;
__n79["body"] := __n82;
__n79["generator"] := false;
__n79["async"] := false;
__n79["expression"] := false;
__n65 := [ __n66, __n79 ];
__n0["functionDeclarations"] := __n65;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}