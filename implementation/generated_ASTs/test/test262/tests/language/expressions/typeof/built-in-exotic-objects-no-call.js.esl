function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "UnaryExpression";
__n8["operator"] := "typeof";
__n9 := {  };
__n9["type"] := "ThisExpression";
__n8["argument"] := __n9;
__n8["prefix"] := true;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "object";
__n10["raw"] := "\"object\"";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "typeof this === \"object\"";
__n11["raw"] := "'typeof this === \"object\"'";
__n7 := [ __n8, __n10, __n11 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "assert";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "sameValue";
__n16["raw"] := "\"sameValue\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "UnaryExpression";
__n18["operator"] := "typeof";
__n19 := {  };
__n19["type"] := "NewExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Object";
__n19["callee"] := __n20;
__n21 := [  ];
__n19["arguments"] := __n21;
__n18["argument"] := __n19;
__n18["prefix"] := true;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "object";
__n22["raw"] := "\"object\"";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "typeof new Object() === \"object\"";
__n23["raw"] := "'typeof new Object() === \"object\"'";
__n17 := [ __n18, __n22, __n23 ];
__n13["arguments"] := __n17;
__n12["expression"] := __n13;
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "assert";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "sameValue";
__n28["raw"] := "\"sameValue\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n30 := {  };
__n30["type"] := "UnaryExpression";
__n30["operator"] := "typeof";
__n31 := {  };
__n31["type"] := "NewExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Array";
__n31["callee"] := __n32;
__n33 := [  ];
__n31["arguments"] := __n33;
__n30["argument"] := __n31;
__n30["prefix"] := true;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "object";
__n34["raw"] := "\"object\"";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "typeof new Array() === \"object\"";
__n35["raw"] := "'typeof new Array() === \"object\"'";
__n29 := [ __n30, __n34, __n35 ];
__n25["arguments"] := __n29;
__n24["expression"] := __n25;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "assert";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "sameValue";
__n40["raw"] := "\"sameValue\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n42 := {  };
__n42["type"] := "UnaryExpression";
__n42["operator"] := "typeof";
__n43 := {  };
__n43["type"] := "NewExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "String";
__n43["callee"] := __n44;
__n45 := [  ];
__n43["arguments"] := __n45;
__n42["argument"] := __n43;
__n42["prefix"] := true;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "object";
__n46["raw"] := "\"object\"";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "typeof new String() === \"object\"";
__n47["raw"] := "'typeof new String() === \"object\"'";
__n41 := [ __n42, __n46, __n47 ];
__n37["arguments"] := __n41;
__n36["expression"] := __n37;
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "assert";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "sameValue";
__n52["raw"] := "\"sameValue\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "UnaryExpression";
__n54["operator"] := "typeof";
__n55 := {  };
__n55["type"] := "NewExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Boolean";
__n55["callee"] := __n56;
__n57 := [  ];
__n55["arguments"] := __n57;
__n54["argument"] := __n55;
__n54["prefix"] := true;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "object";
__n58["raw"] := "\"object\"";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "typeof new Boolean() === \"object\"";
__n59["raw"] := "'typeof new Boolean() === \"object\"'";
__n53 := [ __n54, __n58, __n59 ];
__n49["arguments"] := __n53;
__n48["expression"] := __n49;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "assert";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "sameValue";
__n64["raw"] := "\"sameValue\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n66 := {  };
__n66["type"] := "UnaryExpression";
__n66["operator"] := "typeof";
__n67 := {  };
__n67["type"] := "NewExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "Number";
__n67["callee"] := __n68;
__n69 := [  ];
__n67["arguments"] := __n69;
__n66["argument"] := __n67;
__n66["prefix"] := true;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "object";
__n70["raw"] := "\"object\"";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "typeof new Number() === \"object\"";
__n71["raw"] := "'typeof new Number() === \"object\"'";
__n65 := [ __n66, __n70, __n71 ];
__n61["arguments"] := __n65;
__n60["expression"] := __n61;
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "assert";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "sameValue";
__n76["raw"] := "\"sameValue\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["callee"] := __n74;
__n78 := {  };
__n78["type"] := "UnaryExpression";
__n78["operator"] := "typeof";
__n79 := {  };
__n79["type"] := "NewExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "Date";
__n79["callee"] := __n80;
__n81 := [  ];
__n79["arguments"] := __n81;
__n78["argument"] := __n79;
__n78["prefix"] := true;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "object";
__n82["raw"] := "\"object\"";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "typeof new Date() === \"object\"";
__n83["raw"] := "'typeof new Date() === \"object\"'";
__n77 := [ __n78, __n82, __n83 ];
__n73["arguments"] := __n77;
__n72["expression"] := __n73;
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "assert";
__n86["object"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "sameValue";
__n88["raw"] := "\"sameValue\"";
__n86["property"] := __n88;
__n86["computed"] := true;
__n85["callee"] := __n86;
__n90 := {  };
__n90["type"] := "UnaryExpression";
__n90["operator"] := "typeof";
__n91 := {  };
__n91["type"] := "NewExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "Error";
__n91["callee"] := __n92;
__n93 := [  ];
__n91["arguments"] := __n93;
__n90["argument"] := __n91;
__n90["prefix"] := true;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "object";
__n94["raw"] := "\"object\"";
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := " typeof new Error() === \"object\"";
__n95["raw"] := "' typeof new Error() === \"object\"'";
__n89 := [ __n90, __n94, __n95 ];
__n85["arguments"] := __n89;
__n84["expression"] := __n85;
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "MemberExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "assert";
__n98["object"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "sameValue";
__n100["raw"] := "\"sameValue\"";
__n98["property"] := __n100;
__n98["computed"] := true;
__n97["callee"] := __n98;
__n102 := {  };
__n102["type"] := "UnaryExpression";
__n102["operator"] := "typeof";
__n103 := {  };
__n103["type"] := "NewExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "RegExp";
__n103["callee"] := __n104;
__n105 := [  ];
__n103["arguments"] := __n105;
__n102["argument"] := __n103;
__n102["prefix"] := true;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "object";
__n106["raw"] := "\"object\"";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := " typeof new RegExp() === \"object\"";
__n107["raw"] := "' typeof new RegExp() === \"object\"'";
__n101 := [ __n102, __n106, __n107 ];
__n97["arguments"] := __n101;
__n96["expression"] := __n97;
__n1 := [ __n2, __n12, __n24, __n36, __n48, __n60, __n72, __n84, __n96 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n108 := [  ];
__n0["variableDeclarations"] := __n108;
__n109 := [  ];
__n0["functionDeclarations"] := __n109;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}