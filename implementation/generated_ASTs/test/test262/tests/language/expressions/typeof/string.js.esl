function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "UnaryExpression";
__n8["operator"] := "typeof";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "1";
__n9["raw"] := "\"1\"";
__n8["argument"] := __n9;
__n8["prefix"] := true;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "string";
__n10["raw"] := "\"string\"";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "typeof \"1\" === \"string\"";
__n11["raw"] := "'typeof \"1\" === \"string\"'";
__n7 := [ __n8, __n10, __n11 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "assert";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "sameValue";
__n16["raw"] := "\"sameValue\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "UnaryExpression";
__n18["operator"] := "typeof";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "NaN";
__n19["raw"] := "\"NaN\"";
__n18["argument"] := __n19;
__n18["prefix"] := true;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "string";
__n20["raw"] := "\"string\"";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "typeof \"NaN\" === \"string\"";
__n21["raw"] := "'typeof \"NaN\" === \"string\"'";
__n17 := [ __n18, __n20, __n21 ];
__n13["arguments"] := __n17;
__n12["expression"] := __n13;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "assert";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "sameValue";
__n26["raw"] := "\"sameValue\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "UnaryExpression";
__n28["operator"] := "typeof";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "Infinity";
__n29["raw"] := "\"Infinity\"";
__n28["argument"] := __n29;
__n28["prefix"] := true;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "string";
__n30["raw"] := "\"string\"";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "typeof \"Infinity\" === \"string\"";
__n31["raw"] := "'typeof \"Infinity\" === \"string\"'";
__n27 := [ __n28, __n30, __n31 ];
__n23["arguments"] := __n27;
__n22["expression"] := __n23;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "assert";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "sameValue";
__n36["raw"] := "\"sameValue\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n38 := {  };
__n38["type"] := "UnaryExpression";
__n38["operator"] := "typeof";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "";
__n39["raw"] := "\"\"";
__n38["argument"] := __n39;
__n38["prefix"] := true;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "string";
__n40["raw"] := "\"string\"";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "typeof \"\" === \"string\"";
__n41["raw"] := "'typeof \"\" === \"string\"'";
__n37 := [ __n38, __n40, __n41 ];
__n33["arguments"] := __n37;
__n32["expression"] := __n33;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "assert";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "sameValue";
__n46["raw"] := "\"sameValue\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n48 := {  };
__n48["type"] := "UnaryExpression";
__n48["operator"] := "typeof";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "true";
__n49["raw"] := "\"true\"";
__n48["argument"] := __n49;
__n48["prefix"] := true;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "string";
__n50["raw"] := "\"string\"";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "typeof \"true\" === \"string\"";
__n51["raw"] := "'typeof \"true\" === \"string\"'";
__n47 := [ __n48, __n50, __n51 ];
__n43["arguments"] := __n47;
__n42["expression"] := __n43;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "assert";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "sameValue";
__n56["raw"] := "\"sameValue\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["callee"] := __n54;
__n58 := {  };
__n58["type"] := "UnaryExpression";
__n58["operator"] := "typeof";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Date";
__n59["callee"] := __n60;
__n61 := [  ];
__n59["arguments"] := __n61;
__n58["argument"] := __n59;
__n58["prefix"] := true;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "string";
__n62["raw"] := "\"string\"";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "typeof Date() === \"string\"";
__n63["raw"] := "'typeof Date() === \"string\"'";
__n57 := [ __n58, __n62, __n63 ];
__n53["arguments"] := __n57;
__n52["expression"] := __n53;
__n1 := [ __n2, __n12, __n22, __n32, __n42, __n52 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n64 := [  ];
__n0["variableDeclarations"] := __n64;
__n65 := [  ];
__n0["functionDeclarations"] := __n65;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}