function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "object";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "valueOf";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ReturnStatement";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n14["argument"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n16 := [  ];
__n12["variableDeclarations"] := __n16;
__n17 := [  ];
__n12["functionDeclarations"] := __n17;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["expression"] := false;
__n10["async"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n18 := {  };
__n18["type"] := "IfStatement";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "!==";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := ">>>";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "object";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 0.;
__n22["raw"] := "0";
__n20["right"] := __n22;
__n19["left"] := __n20;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 1.;
__n23["raw"] := "1";
__n19["right"] := __n23;
__n18["test"] := __n19;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "$ERROR";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "+";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "#1: var object = {valueOf: function() {return 1}}; (object >>> 0) === 1. Actual: ";
__n31["raw"] := "'#1: var object = {valueOf: function() {return 1}}; (object >>> 0) === 1. Actual: '";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := ">>>";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "object";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 0.;
__n34["raw"] := "0";
__n32["right"] := __n34;
__n30["right"] := __n32;
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["expression"] := __n27;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n18["consequent"] := __n24;
__n18["alternate"] := null;
__n35 := {  };
__n35["type"] := "VariableDeclaration";
__n37 := {  };
__n37["type"] := "VariableDeclarator";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "object";
__n37["id"] := __n38;
__n39 := {  };
__n39["type"] := "ObjectExpression";
__n41 := {  };
__n41["type"] := "Property";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "valueOf";
__n41["key"] := __n42;
__n43 := {  };
__n43["type"] := "FunctionExpression";
__n43["id"] := null;
__n44 := [  ];
__n43["params"] := __n44;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ReturnStatement";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1.;
__n48["raw"] := "1";
__n47["argument"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n49 := [  ];
__n45["variableDeclarations"] := __n49;
__n50 := [  ];
__n45["functionDeclarations"] := __n50;
__n45["codeType"] := "function";
__n45["strict"] := false;
__n43["body"] := __n45;
__n43["generator"] := false;
__n43["expression"] := false;
__n43["async"] := false;
__n41["value"] := __n43;
__n41["computed"] := false;
__n41["kind"] := "init";
__n41["shorthand"] := false;
__n51 := {  };
__n51["type"] := "Property";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "toString";
__n51["key"] := __n52;
__n53 := {  };
__n53["type"] := "FunctionExpression";
__n53["id"] := null;
__n54 := [  ];
__n53["params"] := __n54;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ReturnStatement";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 0.;
__n58["raw"] := "0";
__n57["argument"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n59 := [  ];
__n55["variableDeclarations"] := __n59;
__n60 := [  ];
__n55["functionDeclarations"] := __n60;
__n55["codeType"] := "function";
__n55["strict"] := false;
__n53["body"] := __n55;
__n53["generator"] := false;
__n53["expression"] := false;
__n53["async"] := false;
__n51["value"] := __n53;
__n51["computed"] := false;
__n51["kind"] := "init";
__n51["shorthand"] := false;
__n40 := [ __n41, __n51 ];
__n39["properties"] := __n40;
__n37["init"] := __n39;
__n36 := [ __n37 ];
__n35["declarations"] := __n36;
__n35["kind"] := "var";
__n61 := {  };
__n61["type"] := "IfStatement";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "!==";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := ">>>";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "object";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 0.;
__n65["raw"] := "0";
__n63["right"] := __n65;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 1.;
__n66["raw"] := "1";
__n62["right"] := __n66;
__n61["test"] := __n62;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "+";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "#2: var object = {valueOf: function() {return 1}, toString: function() {return 0}}; (object >>> 0) === 1. Actual: ";
__n74["raw"] := "'#2: var object = {valueOf: function() {return 1}, toString: function() {return 0}}; (object >>> 0) === 1. Actual: '";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := ">>>";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "object";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 0.;
__n77["raw"] := "0";
__n75["right"] := __n77;
__n73["right"] := __n75;
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n61["consequent"] := __n67;
__n61["alternate"] := null;
__n78 := {  };
__n78["type"] := "VariableDeclaration";
__n80 := {  };
__n80["type"] := "VariableDeclarator";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "object";
__n80["id"] := __n81;
__n82 := {  };
__n82["type"] := "ObjectExpression";
__n84 := {  };
__n84["type"] := "Property";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "valueOf";
__n84["key"] := __n85;
__n86 := {  };
__n86["type"] := "FunctionExpression";
__n86["id"] := null;
__n87 := [  ];
__n86["params"] := __n87;
__n88 := {  };
__n88["type"] := "BlockStatement";
__n90 := {  };
__n90["type"] := "ReturnStatement";
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 1.;
__n91["raw"] := "1";
__n90["argument"] := __n91;
__n89 := [ __n90 ];
__n88["body"] := __n89;
__n92 := [  ];
__n88["variableDeclarations"] := __n92;
__n93 := [  ];
__n88["functionDeclarations"] := __n93;
__n88["codeType"] := "function";
__n88["strict"] := false;
__n86["body"] := __n88;
__n86["generator"] := false;
__n86["expression"] := false;
__n86["async"] := false;
__n84["value"] := __n86;
__n84["computed"] := false;
__n84["kind"] := "init";
__n84["shorthand"] := false;
__n94 := {  };
__n94["type"] := "Property";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "toString";
__n94["key"] := __n95;
__n96 := {  };
__n96["type"] := "FunctionExpression";
__n96["id"] := null;
__n97 := [  ];
__n96["params"] := __n97;
__n98 := {  };
__n98["type"] := "BlockStatement";
__n100 := {  };
__n100["type"] := "ReturnStatement";
__n101 := {  };
__n101["type"] := "ObjectExpression";
__n102 := [  ];
__n101["properties"] := __n102;
__n100["argument"] := __n101;
__n99 := [ __n100 ];
__n98["body"] := __n99;
__n103 := [  ];
__n98["variableDeclarations"] := __n103;
__n104 := [  ];
__n98["functionDeclarations"] := __n104;
__n98["codeType"] := "function";
__n98["strict"] := false;
__n96["body"] := __n98;
__n96["generator"] := false;
__n96["expression"] := false;
__n96["async"] := false;
__n94["value"] := __n96;
__n94["computed"] := false;
__n94["kind"] := "init";
__n94["shorthand"] := false;
__n83 := [ __n84, __n94 ];
__n82["properties"] := __n83;
__n80["init"] := __n82;
__n79 := [ __n80 ];
__n78["declarations"] := __n79;
__n78["kind"] := "var";
__n105 := {  };
__n105["type"] := "IfStatement";
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "!==";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := ">>>";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "object";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := 0.;
__n109["raw"] := "0";
__n107["right"] := __n109;
__n106["left"] := __n107;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 1.;
__n110["raw"] := "1";
__n106["right"] := __n110;
__n105["test"] := __n106;
__n111 := {  };
__n111["type"] := "BlockStatement";
__n113 := {  };
__n113["type"] := "ExpressionStatement";
__n114 := {  };
__n114["type"] := "CallExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "$ERROR";
__n114["callee"] := __n115;
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "+";
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "#3: var object = {valueOf: function() {return 1}, toString: function() {return {}}}; (object >>> 0) === 1. Actual: ";
__n118["raw"] := "'#3: var object = {valueOf: function() {return 1}, toString: function() {return {}}}; (object >>> 0) === 1. Actual: '";
__n117["left"] := __n118;
__n119 := {  };
__n119["type"] := "BinaryExpression";
__n119["operator"] := ">>>";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "object";
__n119["left"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := 0.;
__n121["raw"] := "0";
__n119["right"] := __n121;
__n117["right"] := __n119;
__n116 := [ __n117 ];
__n114["arguments"] := __n116;
__n113["expression"] := __n114;
__n112 := [ __n113 ];
__n111["body"] := __n112;
__n105["consequent"] := __n111;
__n105["alternate"] := null;
__n122 := {  };
__n122["type"] := "TryStatement";
__n123 := {  };
__n123["type"] := "BlockStatement";
__n125 := {  };
__n125["type"] := "VariableDeclaration";
__n127 := {  };
__n127["type"] := "VariableDeclarator";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "object";
__n127["id"] := __n128;
__n129 := {  };
__n129["type"] := "ObjectExpression";
__n131 := {  };
__n131["type"] := "Property";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "valueOf";
__n131["key"] := __n132;
__n133 := {  };
__n133["type"] := "FunctionExpression";
__n133["id"] := null;
__n134 := [  ];
__n133["params"] := __n134;
__n135 := {  };
__n135["type"] := "BlockStatement";
__n137 := {  };
__n137["type"] := "ReturnStatement";
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := 1.;
__n138["raw"] := "1";
__n137["argument"] := __n138;
__n136 := [ __n137 ];
__n135["body"] := __n136;
__n139 := [  ];
__n135["variableDeclarations"] := __n139;
__n140 := [  ];
__n135["functionDeclarations"] := __n140;
__n135["codeType"] := "function";
__n135["strict"] := false;
__n133["body"] := __n135;
__n133["generator"] := false;
__n133["expression"] := false;
__n133["async"] := false;
__n131["value"] := __n133;
__n131["computed"] := false;
__n131["kind"] := "init";
__n131["shorthand"] := false;
__n141 := {  };
__n141["type"] := "Property";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "toString";
__n141["key"] := __n142;
__n143 := {  };
__n143["type"] := "FunctionExpression";
__n143["id"] := null;
__n144 := [  ];
__n143["params"] := __n144;
__n145 := {  };
__n145["type"] := "BlockStatement";
__n147 := {  };
__n147["type"] := "ThrowStatement";
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "error";
__n148["raw"] := "\"error\"";
__n147["argument"] := __n148;
__n146 := [ __n147 ];
__n145["body"] := __n146;
__n149 := [  ];
__n145["variableDeclarations"] := __n149;
__n150 := [  ];
__n145["functionDeclarations"] := __n150;
__n145["codeType"] := "function";
__n145["strict"] := false;
__n143["body"] := __n145;
__n143["generator"] := false;
__n143["expression"] := false;
__n143["async"] := false;
__n141["value"] := __n143;
__n141["computed"] := false;
__n141["kind"] := "init";
__n141["shorthand"] := false;
__n130 := [ __n131, __n141 ];
__n129["properties"] := __n130;
__n127["init"] := __n129;
__n126 := [ __n127 ];
__n125["declarations"] := __n126;
__n125["kind"] := "var";
__n151 := {  };
__n151["type"] := "IfStatement";
__n152 := {  };
__n152["type"] := "BinaryExpression";
__n152["operator"] := "!==";
__n153 := {  };
__n153["type"] := "BinaryExpression";
__n153["operator"] := ">>>";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "object";
__n153["left"] := __n154;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := 0.;
__n155["raw"] := "0";
__n153["right"] := __n155;
__n152["left"] := __n153;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := 1.;
__n156["raw"] := "1";
__n152["right"] := __n156;
__n151["test"] := __n152;
__n157 := {  };
__n157["type"] := "BlockStatement";
__n159 := {  };
__n159["type"] := "ExpressionStatement";
__n160 := {  };
__n160["type"] := "CallExpression";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "$ERROR";
__n160["callee"] := __n161;
__n163 := {  };
__n163["type"] := "BinaryExpression";
__n163["operator"] := "+";
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := "#4.1: var object = {valueOf: function() {return 1}, toString: function() {throw \"error\"}}; (object >>> 0) === 1. Actual: ";
__n164["raw"] := "'#4.1: var object = {valueOf: function() {return 1}, toString: function() {throw \"error\"}}; (object >>> 0) === 1. Actual: '";
__n163["left"] := __n164;
__n165 := {  };
__n165["type"] := "BinaryExpression";
__n165["operator"] := ">>>";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "object";
__n165["left"] := __n166;
__n167 := {  };
__n167["type"] := "Literal";
__n167["value"] := 0.;
__n167["raw"] := "0";
__n165["right"] := __n167;
__n163["right"] := __n165;
__n162 := [ __n163 ];
__n160["arguments"] := __n162;
__n159["expression"] := __n160;
__n158 := [ __n159 ];
__n157["body"] := __n158;
__n151["consequent"] := __n157;
__n151["alternate"] := null;
__n124 := [ __n125, __n151 ];
__n123["body"] := __n124;
__n122["block"] := __n123;
__n168 := {  };
__n168["type"] := "CatchClause";
__n169 := {  };
__n169["type"] := "Identifier";
__n169["name"] := "e";
__n168["param"] := __n169;
__n170 := {  };
__n170["type"] := "BlockStatement";
__n172 := {  };
__n172["type"] := "IfStatement";
__n173 := {  };
__n173["type"] := "BinaryExpression";
__n173["operator"] := "===";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "e";
__n173["left"] := __n174;
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := "error";
__n175["raw"] := "\"error\"";
__n173["right"] := __n175;
__n172["test"] := __n173;
__n176 := {  };
__n176["type"] := "BlockStatement";
__n178 := {  };
__n178["type"] := "ExpressionStatement";
__n179 := {  };
__n179["type"] := "CallExpression";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "$ERROR";
__n179["callee"] := __n180;
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := "#4.2: var object = {valueOf: function() {return 1}, toString: function() {throw \"error\"}}; object not throw \"error\"";
__n182["raw"] := "'#4.2: var object = {valueOf: function() {return 1}, toString: function() {throw \"error\"}}; object not throw \"error\"'";
__n181 := [ __n182 ];
__n179["arguments"] := __n181;
__n178["expression"] := __n179;
__n177 := [ __n178 ];
__n176["body"] := __n177;
__n172["consequent"] := __n176;
__n183 := {  };
__n183["type"] := "BlockStatement";
__n185 := {  };
__n185["type"] := "ExpressionStatement";
__n186 := {  };
__n186["type"] := "CallExpression";
__n187 := {  };
__n187["type"] := "Identifier";
__n187["name"] := "$ERROR";
__n186["callee"] := __n187;
__n189 := {  };
__n189["type"] := "BinaryExpression";
__n189["operator"] := "+";
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := "#4.3: var object = {valueOf: function() {return 1}, toString: function() {throw \"error\"}}; object not throw Error. Actual: ";
__n190["raw"] := "'#4.3: var object = {valueOf: function() {return 1}, toString: function() {throw \"error\"}}; object not throw Error. Actual: '";
__n189["left"] := __n190;
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "e";
__n189["right"] := __n191;
__n188 := [ __n189 ];
__n186["arguments"] := __n188;
__n185["expression"] := __n186;
__n184 := [ __n185 ];
__n183["body"] := __n184;
__n172["alternate"] := __n183;
__n171 := [ __n172 ];
__n170["body"] := __n171;
__n168["body"] := __n170;
__n122["handler"] := __n168;
__n122["finalizer"] := null;
__n192 := {  };
__n192["type"] := "VariableDeclaration";
__n194 := {  };
__n194["type"] := "VariableDeclarator";
__n195 := {  };
__n195["type"] := "Identifier";
__n195["name"] := "object";
__n194["id"] := __n195;
__n196 := {  };
__n196["type"] := "ObjectExpression";
__n198 := {  };
__n198["type"] := "Property";
__n199 := {  };
__n199["type"] := "Identifier";
__n199["name"] := "toString";
__n198["key"] := __n199;
__n200 := {  };
__n200["type"] := "FunctionExpression";
__n200["id"] := null;
__n201 := [  ];
__n200["params"] := __n201;
__n202 := {  };
__n202["type"] := "BlockStatement";
__n204 := {  };
__n204["type"] := "ReturnStatement";
__n205 := {  };
__n205["type"] := "Literal";
__n205["value"] := 1.;
__n205["raw"] := "1";
__n204["argument"] := __n205;
__n203 := [ __n204 ];
__n202["body"] := __n203;
__n206 := [  ];
__n202["variableDeclarations"] := __n206;
__n207 := [  ];
__n202["functionDeclarations"] := __n207;
__n202["codeType"] := "function";
__n202["strict"] := false;
__n200["body"] := __n202;
__n200["generator"] := false;
__n200["expression"] := false;
__n200["async"] := false;
__n198["value"] := __n200;
__n198["computed"] := false;
__n198["kind"] := "init";
__n198["shorthand"] := false;
__n197 := [ __n198 ];
__n196["properties"] := __n197;
__n194["init"] := __n196;
__n193 := [ __n194 ];
__n192["declarations"] := __n193;
__n192["kind"] := "var";
__n208 := {  };
__n208["type"] := "IfStatement";
__n209 := {  };
__n209["type"] := "BinaryExpression";
__n209["operator"] := "!==";
__n210 := {  };
__n210["type"] := "BinaryExpression";
__n210["operator"] := ">>>";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "object";
__n210["left"] := __n211;
__n212 := {  };
__n212["type"] := "Literal";
__n212["value"] := 0.;
__n212["raw"] := "0";
__n210["right"] := __n212;
__n209["left"] := __n210;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := 1.;
__n213["raw"] := "1";
__n209["right"] := __n213;
__n208["test"] := __n209;
__n214 := {  };
__n214["type"] := "BlockStatement";
__n216 := {  };
__n216["type"] := "ExpressionStatement";
__n217 := {  };
__n217["type"] := "CallExpression";
__n218 := {  };
__n218["type"] := "Identifier";
__n218["name"] := "$ERROR";
__n217["callee"] := __n218;
__n220 := {  };
__n220["type"] := "BinaryExpression";
__n220["operator"] := "+";
__n221 := {  };
__n221["type"] := "Literal";
__n221["value"] := "#5: var object = {toString: function() {return 1}}; (object >>> 0) === 1. Actual: ";
__n221["raw"] := "'#5: var object = {toString: function() {return 1}}; (object >>> 0) === 1. Actual: '";
__n220["left"] := __n221;
__n222 := {  };
__n222["type"] := "BinaryExpression";
__n222["operator"] := ">>>";
__n223 := {  };
__n223["type"] := "Identifier";
__n223["name"] := "object";
__n222["left"] := __n223;
__n224 := {  };
__n224["type"] := "Literal";
__n224["value"] := 0.;
__n224["raw"] := "0";
__n222["right"] := __n224;
__n220["right"] := __n222;
__n219 := [ __n220 ];
__n217["arguments"] := __n219;
__n216["expression"] := __n217;
__n215 := [ __n216 ];
__n214["body"] := __n215;
__n208["consequent"] := __n214;
__n208["alternate"] := null;
__n225 := {  };
__n225["type"] := "VariableDeclaration";
__n227 := {  };
__n227["type"] := "VariableDeclarator";
__n228 := {  };
__n228["type"] := "Identifier";
__n228["name"] := "object";
__n227["id"] := __n228;
__n229 := {  };
__n229["type"] := "ObjectExpression";
__n231 := {  };
__n231["type"] := "Property";
__n232 := {  };
__n232["type"] := "Identifier";
__n232["name"] := "valueOf";
__n231["key"] := __n232;
__n233 := {  };
__n233["type"] := "FunctionExpression";
__n233["id"] := null;
__n234 := [  ];
__n233["params"] := __n234;
__n235 := {  };
__n235["type"] := "BlockStatement";
__n237 := {  };
__n237["type"] := "ReturnStatement";
__n238 := {  };
__n238["type"] := "ObjectExpression";
__n239 := [  ];
__n238["properties"] := __n239;
__n237["argument"] := __n238;
__n236 := [ __n237 ];
__n235["body"] := __n236;
__n240 := [  ];
__n235["variableDeclarations"] := __n240;
__n241 := [  ];
__n235["functionDeclarations"] := __n241;
__n235["codeType"] := "function";
__n235["strict"] := false;
__n233["body"] := __n235;
__n233["generator"] := false;
__n233["expression"] := false;
__n233["async"] := false;
__n231["value"] := __n233;
__n231["computed"] := false;
__n231["kind"] := "init";
__n231["shorthand"] := false;
__n242 := {  };
__n242["type"] := "Property";
__n243 := {  };
__n243["type"] := "Identifier";
__n243["name"] := "toString";
__n242["key"] := __n243;
__n244 := {  };
__n244["type"] := "FunctionExpression";
__n244["id"] := null;
__n245 := [  ];
__n244["params"] := __n245;
__n246 := {  };
__n246["type"] := "BlockStatement";
__n248 := {  };
__n248["type"] := "ReturnStatement";
__n249 := {  };
__n249["type"] := "Literal";
__n249["value"] := 1.;
__n249["raw"] := "1";
__n248["argument"] := __n249;
__n247 := [ __n248 ];
__n246["body"] := __n247;
__n250 := [  ];
__n246["variableDeclarations"] := __n250;
__n251 := [  ];
__n246["functionDeclarations"] := __n251;
__n246["codeType"] := "function";
__n246["strict"] := false;
__n244["body"] := __n246;
__n244["generator"] := false;
__n244["expression"] := false;
__n244["async"] := false;
__n242["value"] := __n244;
__n242["computed"] := false;
__n242["kind"] := "init";
__n242["shorthand"] := false;
__n230 := [ __n231, __n242 ];
__n229["properties"] := __n230;
__n227["init"] := __n229;
__n226 := [ __n227 ];
__n225["declarations"] := __n226;
__n225["kind"] := "var";
__n252 := {  };
__n252["type"] := "IfStatement";
__n253 := {  };
__n253["type"] := "BinaryExpression";
__n253["operator"] := "!==";
__n254 := {  };
__n254["type"] := "BinaryExpression";
__n254["operator"] := ">>>";
__n255 := {  };
__n255["type"] := "Identifier";
__n255["name"] := "object";
__n254["left"] := __n255;
__n256 := {  };
__n256["type"] := "Literal";
__n256["value"] := 0.;
__n256["raw"] := "0";
__n254["right"] := __n256;
__n253["left"] := __n254;
__n257 := {  };
__n257["type"] := "Literal";
__n257["value"] := 1.;
__n257["raw"] := "1";
__n253["right"] := __n257;
__n252["test"] := __n253;
__n258 := {  };
__n258["type"] := "BlockStatement";
__n260 := {  };
__n260["type"] := "ExpressionStatement";
__n261 := {  };
__n261["type"] := "CallExpression";
__n262 := {  };
__n262["type"] := "Identifier";
__n262["name"] := "$ERROR";
__n261["callee"] := __n262;
__n264 := {  };
__n264["type"] := "BinaryExpression";
__n264["operator"] := "+";
__n265 := {  };
__n265["type"] := "Literal";
__n265["value"] := "#6: var object = {valueOf: function() {return {}}, toString: function() {return 1}}; (object >>> 0) === 1. Actual: ";
__n265["raw"] := "'#6: var object = {valueOf: function() {return {}}, toString: function() {return 1}}; (object >>> 0) === 1. Actual: '";
__n264["left"] := __n265;
__n266 := {  };
__n266["type"] := "BinaryExpression";
__n266["operator"] := ">>>";
__n267 := {  };
__n267["type"] := "Identifier";
__n267["name"] := "object";
__n266["left"] := __n267;
__n268 := {  };
__n268["type"] := "Literal";
__n268["value"] := 0.;
__n268["raw"] := "0";
__n266["right"] := __n268;
__n264["right"] := __n266;
__n263 := [ __n264 ];
__n261["arguments"] := __n263;
__n260["expression"] := __n261;
__n259 := [ __n260 ];
__n258["body"] := __n259;
__n252["consequent"] := __n258;
__n252["alternate"] := null;
__n269 := {  };
__n269["type"] := "TryStatement";
__n270 := {  };
__n270["type"] := "BlockStatement";
__n272 := {  };
__n272["type"] := "VariableDeclaration";
__n274 := {  };
__n274["type"] := "VariableDeclarator";
__n275 := {  };
__n275["type"] := "Identifier";
__n275["name"] := "object";
__n274["id"] := __n275;
__n276 := {  };
__n276["type"] := "ObjectExpression";
__n278 := {  };
__n278["type"] := "Property";
__n279 := {  };
__n279["type"] := "Identifier";
__n279["name"] := "valueOf";
__n278["key"] := __n279;
__n280 := {  };
__n280["type"] := "FunctionExpression";
__n280["id"] := null;
__n281 := [  ];
__n280["params"] := __n281;
__n282 := {  };
__n282["type"] := "BlockStatement";
__n284 := {  };
__n284["type"] := "ThrowStatement";
__n285 := {  };
__n285["type"] := "Literal";
__n285["value"] := "error";
__n285["raw"] := "\"error\"";
__n284["argument"] := __n285;
__n283 := [ __n284 ];
__n282["body"] := __n283;
__n286 := [  ];
__n282["variableDeclarations"] := __n286;
__n287 := [  ];
__n282["functionDeclarations"] := __n287;
__n282["codeType"] := "function";
__n282["strict"] := false;
__n280["body"] := __n282;
__n280["generator"] := false;
__n280["expression"] := false;
__n280["async"] := false;
__n278["value"] := __n280;
__n278["computed"] := false;
__n278["kind"] := "init";
__n278["shorthand"] := false;
__n288 := {  };
__n288["type"] := "Property";
__n289 := {  };
__n289["type"] := "Identifier";
__n289["name"] := "toString";
__n288["key"] := __n289;
__n290 := {  };
__n290["type"] := "FunctionExpression";
__n290["id"] := null;
__n291 := [  ];
__n290["params"] := __n291;
__n292 := {  };
__n292["type"] := "BlockStatement";
__n294 := {  };
__n294["type"] := "ReturnStatement";
__n295 := {  };
__n295["type"] := "Literal";
__n295["value"] := 1.;
__n295["raw"] := "1";
__n294["argument"] := __n295;
__n293 := [ __n294 ];
__n292["body"] := __n293;
__n296 := [  ];
__n292["variableDeclarations"] := __n296;
__n297 := [  ];
__n292["functionDeclarations"] := __n297;
__n292["codeType"] := "function";
__n292["strict"] := false;
__n290["body"] := __n292;
__n290["generator"] := false;
__n290["expression"] := false;
__n290["async"] := false;
__n288["value"] := __n290;
__n288["computed"] := false;
__n288["kind"] := "init";
__n288["shorthand"] := false;
__n277 := [ __n278, __n288 ];
__n276["properties"] := __n277;
__n274["init"] := __n276;
__n273 := [ __n274 ];
__n272["declarations"] := __n273;
__n272["kind"] := "var";
__n298 := {  };
__n298["type"] := "ExpressionStatement";
__n299 := {  };
__n299["type"] := "BinaryExpression";
__n299["operator"] := ">>>";
__n300 := {  };
__n300["type"] := "Identifier";
__n300["name"] := "object";
__n299["left"] := __n300;
__n301 := {  };
__n301["type"] := "Literal";
__n301["value"] := 0.;
__n301["raw"] := "0";
__n299["right"] := __n301;
__n298["expression"] := __n299;
__n302 := {  };
__n302["type"] := "ExpressionStatement";
__n303 := {  };
__n303["type"] := "CallExpression";
__n304 := {  };
__n304["type"] := "Identifier";
__n304["name"] := "$ERROR";
__n303["callee"] := __n304;
__n306 := {  };
__n306["type"] := "BinaryExpression";
__n306["operator"] := "+";
__n307 := {  };
__n307["type"] := "Literal";
__n307["value"] := "#7.1: var object = {valueOf: function() {throw \"error\"}, toString: function() {return 1}}; object throw \"error\". Actual: ";
__n307["raw"] := "'#7.1: var object = {valueOf: function() {throw \"error\"}, toString: function() {return 1}}; object throw \"error\". Actual: '";
__n306["left"] := __n307;
__n308 := {  };
__n308["type"] := "BinaryExpression";
__n308["operator"] := ">>>";
__n309 := {  };
__n309["type"] := "Identifier";
__n309["name"] := "object";
__n308["left"] := __n309;
__n310 := {  };
__n310["type"] := "Literal";
__n310["value"] := 0.;
__n310["raw"] := "0";
__n308["right"] := __n310;
__n306["right"] := __n308;
__n305 := [ __n306 ];
__n303["arguments"] := __n305;
__n302["expression"] := __n303;
__n271 := [ __n272, __n298, __n302 ];
__n270["body"] := __n271;
__n269["block"] := __n270;
__n311 := {  };
__n311["type"] := "CatchClause";
__n312 := {  };
__n312["type"] := "Identifier";
__n312["name"] := "e";
__n311["param"] := __n312;
__n313 := {  };
__n313["type"] := "BlockStatement";
__n315 := {  };
__n315["type"] := "IfStatement";
__n316 := {  };
__n316["type"] := "BinaryExpression";
__n316["operator"] := "!==";
__n317 := {  };
__n317["type"] := "Identifier";
__n317["name"] := "e";
__n316["left"] := __n317;
__n318 := {  };
__n318["type"] := "Literal";
__n318["value"] := "error";
__n318["raw"] := "\"error\"";
__n316["right"] := __n318;
__n315["test"] := __n316;
__n319 := {  };
__n319["type"] := "BlockStatement";
__n321 := {  };
__n321["type"] := "ExpressionStatement";
__n322 := {  };
__n322["type"] := "CallExpression";
__n323 := {  };
__n323["type"] := "Identifier";
__n323["name"] := "$ERROR";
__n322["callee"] := __n323;
__n325 := {  };
__n325["type"] := "BinaryExpression";
__n325["operator"] := "+";
__n326 := {  };
__n326["type"] := "Literal";
__n326["value"] := "#7.2: var object = {valueOf: function() {throw \"error\"}, toString: function() {return 1}}; object throw \"error\". Actual: ";
__n326["raw"] := "'#7.2: var object = {valueOf: function() {throw \"error\"}, toString: function() {return 1}}; object throw \"error\". Actual: '";
__n325["left"] := __n326;
__n327 := {  };
__n327["type"] := "Identifier";
__n327["name"] := "e";
__n325["right"] := __n327;
__n324 := [ __n325 ];
__n322["arguments"] := __n324;
__n321["expression"] := __n322;
__n320 := [ __n321 ];
__n319["body"] := __n320;
__n315["consequent"] := __n319;
__n315["alternate"] := null;
__n314 := [ __n315 ];
__n313["body"] := __n314;
__n311["body"] := __n313;
__n269["handler"] := __n311;
__n269["finalizer"] := null;
__n328 := {  };
__n328["type"] := "TryStatement";
__n329 := {  };
__n329["type"] := "BlockStatement";
__n331 := {  };
__n331["type"] := "VariableDeclaration";
__n333 := {  };
__n333["type"] := "VariableDeclarator";
__n334 := {  };
__n334["type"] := "Identifier";
__n334["name"] := "object";
__n333["id"] := __n334;
__n335 := {  };
__n335["type"] := "ObjectExpression";
__n337 := {  };
__n337["type"] := "Property";
__n338 := {  };
__n338["type"] := "Identifier";
__n338["name"] := "valueOf";
__n337["key"] := __n338;
__n339 := {  };
__n339["type"] := "FunctionExpression";
__n339["id"] := null;
__n340 := [  ];
__n339["params"] := __n340;
__n341 := {  };
__n341["type"] := "BlockStatement";
__n343 := {  };
__n343["type"] := "ReturnStatement";
__n344 := {  };
__n344["type"] := "ObjectExpression";
__n345 := [  ];
__n344["properties"] := __n345;
__n343["argument"] := __n344;
__n342 := [ __n343 ];
__n341["body"] := __n342;
__n346 := [  ];
__n341["variableDeclarations"] := __n346;
__n347 := [  ];
__n341["functionDeclarations"] := __n347;
__n341["codeType"] := "function";
__n341["strict"] := false;
__n339["body"] := __n341;
__n339["generator"] := false;
__n339["expression"] := false;
__n339["async"] := false;
__n337["value"] := __n339;
__n337["computed"] := false;
__n337["kind"] := "init";
__n337["shorthand"] := false;
__n348 := {  };
__n348["type"] := "Property";
__n349 := {  };
__n349["type"] := "Identifier";
__n349["name"] := "toString";
__n348["key"] := __n349;
__n350 := {  };
__n350["type"] := "FunctionExpression";
__n350["id"] := null;
__n351 := [  ];
__n350["params"] := __n351;
__n352 := {  };
__n352["type"] := "BlockStatement";
__n354 := {  };
__n354["type"] := "ReturnStatement";
__n355 := {  };
__n355["type"] := "ObjectExpression";
__n356 := [  ];
__n355["properties"] := __n356;
__n354["argument"] := __n355;
__n353 := [ __n354 ];
__n352["body"] := __n353;
__n357 := [  ];
__n352["variableDeclarations"] := __n357;
__n358 := [  ];
__n352["functionDeclarations"] := __n358;
__n352["codeType"] := "function";
__n352["strict"] := false;
__n350["body"] := __n352;
__n350["generator"] := false;
__n350["expression"] := false;
__n350["async"] := false;
__n348["value"] := __n350;
__n348["computed"] := false;
__n348["kind"] := "init";
__n348["shorthand"] := false;
__n336 := [ __n337, __n348 ];
__n335["properties"] := __n336;
__n333["init"] := __n335;
__n332 := [ __n333 ];
__n331["declarations"] := __n332;
__n331["kind"] := "var";
__n359 := {  };
__n359["type"] := "ExpressionStatement";
__n360 := {  };
__n360["type"] := "BinaryExpression";
__n360["operator"] := ">>>";
__n361 := {  };
__n361["type"] := "Identifier";
__n361["name"] := "object";
__n360["left"] := __n361;
__n362 := {  };
__n362["type"] := "Literal";
__n362["value"] := 0.;
__n362["raw"] := "0";
__n360["right"] := __n362;
__n359["expression"] := __n360;
__n363 := {  };
__n363["type"] := "ExpressionStatement";
__n364 := {  };
__n364["type"] := "CallExpression";
__n365 := {  };
__n365["type"] := "Identifier";
__n365["name"] := "$ERROR";
__n364["callee"] := __n365;
__n367 := {  };
__n367["type"] := "BinaryExpression";
__n367["operator"] := "+";
__n368 := {  };
__n368["type"] := "Literal";
__n368["value"] := "#8.1: var object = {valueOf: function() {return {}}, toString: function() {return {}}}; object throw TypeError. Actual: ";
__n368["raw"] := "'#8.1: var object = {valueOf: function() {return {}}, toString: function() {return {}}}; object throw TypeError. Actual: '";
__n367["left"] := __n368;
__n369 := {  };
__n369["type"] := "BinaryExpression";
__n369["operator"] := ">>>";
__n370 := {  };
__n370["type"] := "Identifier";
__n370["name"] := "object";
__n369["left"] := __n370;
__n371 := {  };
__n371["type"] := "Literal";
__n371["value"] := 0.;
__n371["raw"] := "0";
__n369["right"] := __n371;
__n367["right"] := __n369;
__n366 := [ __n367 ];
__n364["arguments"] := __n366;
__n363["expression"] := __n364;
__n330 := [ __n331, __n359, __n363 ];
__n329["body"] := __n330;
__n328["block"] := __n329;
__n372 := {  };
__n372["type"] := "CatchClause";
__n373 := {  };
__n373["type"] := "Identifier";
__n373["name"] := "e";
__n372["param"] := __n373;
__n374 := {  };
__n374["type"] := "BlockStatement";
__n376 := {  };
__n376["type"] := "IfStatement";
__n377 := {  };
__n377["type"] := "BinaryExpression";
__n377["operator"] := "!==";
__n378 := {  };
__n378["type"] := "BinaryExpression";
__n378["operator"] := "instanceof";
__n379 := {  };
__n379["type"] := "Identifier";
__n379["name"] := "e";
__n378["left"] := __n379;
__n380 := {  };
__n380["type"] := "Identifier";
__n380["name"] := "TypeError";
__n378["right"] := __n380;
__n377["left"] := __n378;
__n381 := {  };
__n381["type"] := "Literal";
__n381["value"] := true;
__n381["raw"] := "true";
__n377["right"] := __n381;
__n376["test"] := __n377;
__n382 := {  };
__n382["type"] := "BlockStatement";
__n384 := {  };
__n384["type"] := "ExpressionStatement";
__n385 := {  };
__n385["type"] := "CallExpression";
__n386 := {  };
__n386["type"] := "Identifier";
__n386["name"] := "$ERROR";
__n385["callee"] := __n386;
__n388 := {  };
__n388["type"] := "BinaryExpression";
__n388["operator"] := "+";
__n389 := {  };
__n389["type"] := "Literal";
__n389["value"] := "#8.2: var object = {valueOf: function() {return {}}, toString: function() {return {}}}; object throw TypeError. Actual: ";
__n389["raw"] := "'#8.2: var object = {valueOf: function() {return {}}, toString: function() {return {}}}; object throw TypeError. Actual: '";
__n388["left"] := __n389;
__n390 := {  };
__n390["type"] := "Identifier";
__n390["name"] := "e";
__n388["right"] := __n390;
__n387 := [ __n388 ];
__n385["arguments"] := __n387;
__n384["expression"] := __n385;
__n383 := [ __n384 ];
__n382["body"] := __n383;
__n376["consequent"] := __n382;
__n376["alternate"] := null;
__n375 := [ __n376 ];
__n374["body"] := __n375;
__n372["body"] := __n374;
__n328["handler"] := __n372;
__n328["finalizer"] := null;
__n1 := [ __n2, __n18, __n35, __n61, __n78, __n105, __n122, __n192, __n208, __n225, __n252, __n269, __n328 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n391 := [ "object" ];
__n0["variableDeclarations"] := __n391;
__n392 := [  ];
__n0["functionDeclarations"] := __n392;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}