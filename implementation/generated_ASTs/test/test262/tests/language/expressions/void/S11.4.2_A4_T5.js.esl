function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "IfStatement";
__n9 := {  };
__n9["type"] := "BinaryExpression";
__n9["operator"] := "!==";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "isNaN";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "UnaryExpression";
__n13["operator"] := "void";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "x";
__n13["argument"] := __n14;
__n13["prefix"] := true;
__n12 := [ __n13 ];
__n10["arguments"] := __n12;
__n9["left"] := __n10;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := true;
__n15["raw"] := "true";
__n9["right"] := __n15;
__n8["test"] := __n9;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "$ERROR";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "+";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "#1: var x = {}; void x === undefined. Actual: ";
__n23["raw"] := "'#1: var x = {}; void x === undefined. Actual: '";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "UnaryExpression";
__n24["operator"] := "void";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "x";
__n24["argument"] := __n25;
__n24["prefix"] := true;
__n22["right"] := __n24;
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n18["expression"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n8["consequent"] := __n16;
__n8["alternate"] := null;
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "x";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [  ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ReturnStatement";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 1.;
__n35["raw"] := "1";
__n34["argument"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n36 := [  ];
__n32["variableDeclarations"] := __n36;
__n37 := [  ];
__n32["functionDeclarations"] := __n37;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["expression"] := false;
__n30["async"] := false;
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n38 := {  };
__n38["type"] := "IfStatement";
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "!==";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "isNaN";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "UnaryExpression";
__n43["operator"] := "void";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "x";
__n43["argument"] := __n44;
__n43["prefix"] := true;
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["left"] := __n40;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := true;
__n45["raw"] := "true";
__n39["right"] := __n45;
__n38["test"] := __n39;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "$ERROR";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#2: var x = function(){return 1}; void x === undefined. Actual: ";
__n53["raw"] := "'#2: var x = function(){return 1}; void x === undefined. Actual: '";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "UnaryExpression";
__n54["operator"] := "void";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "x";
__n54["argument"] := __n55;
__n54["prefix"] := true;
__n52["right"] := __n54;
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["expression"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n38["consequent"] := __n46;
__n38["alternate"] := null;
__n1 := [ __n2, __n8, __n26, __n38 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n56 := [ "x" ];
__n0["variableDeclarations"] := __n56;
__n57 := [  ];
__n0["functionDeclarations"] := __n57;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}