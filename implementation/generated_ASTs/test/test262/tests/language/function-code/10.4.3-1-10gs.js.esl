function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "f";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "FunctionExpression";
__n6["id"] := null;
__n7 := [  ];
__n6["params"] := __n7;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "use strict";
__n11["raw"] := "\"use strict\"";
__n10["expression"] := __n11;
__n10["directive"] := "use strict";
__n12 := {  };
__n12["type"] := "ReturnStatement";
__n13 := {  };
__n13["type"] := "UnaryExpression";
__n13["operator"] := "typeof";
__n14 := {  };
__n14["type"] := "ThisExpression";
__n13["argument"] := __n14;
__n13["prefix"] := true;
__n12["argument"] := __n13;
__n9 := [ __n10, __n12 ];
__n8["body"] := __n9;
__n15 := [  ];
__n8["variableDeclarations"] := __n15;
__n16 := [  ];
__n8["functionDeclarations"] := __n16;
__n8["codeType"] := "function";
__n8["strict"] := true;
__n6["body"] := __n8;
__n6["generator"] := false;
__n6["async"] := false;
__n6["expression"] := false;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n17 := {  };
__n17["type"] := "IfStatement";
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "!==";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "f";
__n19["callee"] := __n20;
__n21 := [  ];
__n19["arguments"] := __n21;
__n18["left"] := __n19;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "undefined";
__n22["raw"] := "\"undefined\"";
__n18["right"] := __n22;
__n17["test"] := __n18;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ThrowStatement";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "'this' had incorrect value!";
__n26["raw"] := "\"'this' had incorrect value!\"";
__n25["argument"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n17["consequent"] := __n23;
__n17["alternate"] := null;
__n1 := [ __n2, __n17 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n27 := [ "f" ];
__n0["variableDeclarations"] := __n27;
__n28 := [  ];
__n0["functionDeclarations"] := __n28;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}