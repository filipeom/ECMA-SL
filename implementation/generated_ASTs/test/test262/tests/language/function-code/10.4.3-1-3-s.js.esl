function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "foo";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "bar";
__n4["expression"] := __n5;
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "assert";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "sameValue";
__n10["raw"] := "\"sameValue\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["callee"] := __n8;
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "foo";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "call";
__n15["raw"] := "\"call\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["callee"] := __n13;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "undefined";
__n16 := [ __n17 ];
__n12["arguments"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "undefined";
__n18["raw"] := "'undefined'";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "foo.call(undefined)";
__n19["raw"] := "'foo.call(undefined)'";
__n11 := [ __n12, __n18, __n19 ];
__n7["arguments"] := __n11;
__n6["expression"] := __n7;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "assert";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "sameValue";
__n24["raw"] := "\"sameValue\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "bar";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "call";
__n29["raw"] := "\"call\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n30 := [  ];
__n26["arguments"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "object";
__n31["raw"] := "'object'";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "bar.call()";
__n32["raw"] := "'bar.call()'";
__n25 := [ __n26, __n31, __n32 ];
__n21["arguments"] := __n25;
__n20["expression"] := __n21;
__n1 := [ __n2, __n4, __n6, __n20 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n33 := [  ];
__n0["variableDeclarations"] := __n33;
__n35 := {  };
__n35["type"] := "FunctionDeclaration";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "foo";
__n35["id"] := __n36;
__n37 := [  ];
__n35["params"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "use strict";
__n41["raw"] := "'use strict'";
__n40["expression"] := __n41;
__n40["directive"] := "use strict";
__n42 := {  };
__n42["type"] := "ReturnStatement";
__n43 := {  };
__n43["type"] := "UnaryExpression";
__n43["operator"] := "typeof";
__n44 := {  };
__n44["type"] := "ThisExpression";
__n43["argument"] := __n44;
__n43["prefix"] := true;
__n42["argument"] := __n43;
__n39 := [ __n40, __n42 ];
__n38["body"] := __n39;
__n45 := [  ];
__n38["variableDeclarations"] := __n45;
__n46 := [  ];
__n38["functionDeclarations"] := __n46;
__n38["codeType"] := "function";
__n38["strict"] := true;
__n35["body"] := __n38;
__n35["generator"] := false;
__n35["async"] := false;
__n35["expression"] := false;
__n47 := {  };
__n47["type"] := "FunctionDeclaration";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "bar";
__n47["id"] := __n48;
__n49 := [  ];
__n47["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ReturnStatement";
__n53 := {  };
__n53["type"] := "UnaryExpression";
__n53["operator"] := "typeof";
__n54 := {  };
__n54["type"] := "ThisExpression";
__n53["argument"] := __n54;
__n53["prefix"] := true;
__n52["argument"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n55 := [  ];
__n50["variableDeclarations"] := __n55;
__n56 := [  ];
__n50["functionDeclarations"] := __n56;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n47["body"] := __n50;
__n47["generator"] := false;
__n47["async"] := false;
__n47["expression"] := false;
__n34 := [ __n35, __n47 ];
__n0["functionDeclarations"] := __n34;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}