function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "f1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "FunctionExpression";
__n6["id"] := null;
__n7 := [  ];
__n6["params"] := __n7;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "use strict";
__n11["raw"] := "\"use strict\"";
__n10["expression"] := __n11;
__n10["directive"] := "use strict";
__n12 := {  };
__n12["type"] := "ReturnStatement";
__n13 := {  };
__n13["type"] := "LogicalExpression";
__n13["operator"] := "&&";
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "===";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "FunctionExpression";
__n16["id"] := null;
__n17 := [  ];
__n16["params"] := __n17;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ReturnStatement";
__n21 := {  };
__n21["type"] := "UnaryExpression";
__n21["operator"] := "typeof";
__n22 := {  };
__n22["type"] := "ThisExpression";
__n21["argument"] := __n22;
__n21["prefix"] := true;
__n20["argument"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n23 := [  ];
__n18["variableDeclarations"] := __n23;
__n24 := [  ];
__n18["functionDeclarations"] := __n24;
__n18["codeType"] := "function";
__n18["strict"] := false;
__n16["body"] := __n18;
__n16["generator"] := false;
__n16["async"] := false;
__n16["expression"] := false;
__n15["callee"] := __n16;
__n25 := [  ];
__n15["arguments"] := __n25;
__n14["left"] := __n15;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "undefined";
__n26["raw"] := "\"undefined\"";
__n14["right"] := __n26;
__n13["left"] := __n14;
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "===";
__n28 := {  };
__n28["type"] := "UnaryExpression";
__n28["operator"] := "typeof";
__n29 := {  };
__n29["type"] := "ThisExpression";
__n28["argument"] := __n29;
__n28["prefix"] := true;
__n27["left"] := __n28;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "undefined";
__n30["raw"] := "\"undefined\"";
__n27["right"] := __n30;
__n13["right"] := __n27;
__n12["argument"] := __n13;
__n9 := [ __n10, __n12 ];
__n8["body"] := __n9;
__n31 := [  ];
__n8["variableDeclarations"] := __n31;
__n32 := [  ];
__n8["functionDeclarations"] := __n32;
__n8["codeType"] := "function";
__n8["strict"] := true;
__n6["body"] := __n8;
__n6["generator"] := false;
__n6["async"] := false;
__n6["expression"] := false;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "UnaryExpression";
__n34["operator"] := "!";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "f1";
__n35["callee"] := __n36;
__n37 := [  ];
__n35["arguments"] := __n37;
__n34["argument"] := __n35;
__n34["prefix"] := true;
__n33["test"] := __n34;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ThrowStatement";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "'this' had incorrect value!";
__n41["raw"] := "\"'this' had incorrect value!\"";
__n40["argument"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n33["consequent"] := __n38;
__n33["alternate"] := null;
__n1 := [ __n2, __n33 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n42 := [ "f1" ];
__n0["variableDeclarations"] := __n42;
__n43 := [  ];
__n0["functionDeclarations"] := __n43;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}