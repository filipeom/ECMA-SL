function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "f";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "EmptyStatement";
__n5 := {  };
__n5["type"] := "IfStatement";
__n6 := {  };
__n6["type"] := "UnaryExpression";
__n6["operator"] := "!";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "f";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "call";
__n10["raw"] := "\"call\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["callee"] := __n8;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 'null;
__n12["raw"] := "\"'null\"";
__n11 := [ __n12 ];
__n7["arguments"] := __n11;
__n6["argument"] := __n7;
__n6["prefix"] := true;
__n5["test"] := __n6;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ThrowStatement";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "'this' had incorrect value!";
__n16["raw"] := "\"'this' had incorrect value!\"";
__n15["argument"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n5["consequent"] := __n13;
__n5["alternate"] := null;
__n1 := [ __n2, __n4, __n5 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n17 := [  ];
__n0["variableDeclarations"] := __n17;
__n19 := {  };
__n19["type"] := "FunctionDeclaration";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "f";
__n19["id"] := __n20;
__n21 := [  ];
__n19["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "use strict";
__n25["raw"] := "\"use strict\"";
__n24["expression"] := __n25;
__n24["directive"] := "use strict";
__n26 := {  };
__n26["type"] := "ReturnStatement";
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "===";
__n28 := {  };
__n28["type"] := "ThisExpression";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 'null;
__n29["raw"] := "\"'null\"";
__n27["right"] := __n29;
__n26["argument"] := __n27;
__n23 := [ __n24, __n26 ];
__n22["body"] := __n23;
__n30 := [  ];
__n22["variableDeclarations"] := __n30;
__n31 := [  ];
__n22["functionDeclarations"] := __n31;
__n22["codeType"] := "function";
__n22["strict"] := true;
__n19["body"] := __n22;
__n19["generator"] := false;
__n19["expression"] := false;
__n19["async"] := false;
__n18 := [ __n19 ];
__n0["functionDeclarations"] := __n18;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}