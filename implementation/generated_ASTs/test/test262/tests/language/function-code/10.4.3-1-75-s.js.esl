function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "f";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "EmptyStatement";
__n5 := {  };
__n5["type"] := "ExpressionStatement";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "assert";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "sameValue";
__n9["raw"] := "\"sameValue\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "f";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "call";
__n14["raw"] := "\"call\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "ThisExpression";
__n15 := [ __n16 ];
__n11["arguments"] := __n15;
__n17 := {  };
__n17["type"] := "ThisExpression";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "f.call(this)";
__n18["raw"] := "'f.call(this)'";
__n10 := [ __n11, __n17, __n18 ];
__n6["arguments"] := __n10;
__n5["expression"] := __n6;
__n1 := [ __n2, __n4, __n5 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n19 := [  ];
__n0["variableDeclarations"] := __n19;
__n21 := {  };
__n21["type"] := "FunctionDeclaration";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "f";
__n21["id"] := __n22;
__n23 := [  ];
__n21["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "use strict";
__n27["raw"] := "\"use strict\"";
__n26["expression"] := __n27;
__n26["directive"] := "use strict";
__n28 := {  };
__n28["type"] := "ReturnStatement";
__n29 := {  };
__n29["type"] := "ThisExpression";
__n28["argument"] := __n29;
__n25 := [ __n26, __n28 ];
__n24["body"] := __n25;
__n30 := [  ];
__n24["variableDeclarations"] := __n30;
__n31 := [  ];
__n24["functionDeclarations"] := __n31;
__n24["codeType"] := "function";
__n24["strict"] := true;
__n21["body"] := __n24;
__n21["generator"] := false;
__n21["expression"] := false;
__n21["async"] := false;
__n20 := [ __n21 ];
__n0["functionDeclarations"] := __n20;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}