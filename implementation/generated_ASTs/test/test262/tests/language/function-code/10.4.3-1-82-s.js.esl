function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "f";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "EmptyStatement";
__n5 := {  };
__n5["type"] := "ExpressionStatement";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "assert";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "use strict";
__n15["raw"] := "\"use strict\"";
__n14["expression"] := __n15;
__n14["directive"] := "use strict";
__n16 := {  };
__n16["type"] := "ReturnStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "eval";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "f();";
__n20["raw"] := "\"f();\"";
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n16["argument"] := __n17;
__n13 := [ __n14, __n16 ];
__n12["body"] := __n13;
__n21 := [  ];
__n12["variableDeclarations"] := __n21;
__n22 := [  ];
__n12["functionDeclarations"] := __n22;
__n12["codeType"] := "function";
__n12["strict"] := true;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n9["callee"] := __n10;
__n23 := [  ];
__n9["arguments"] := __n23;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n5["expression"] := __n6;
__n1 := [ __n2, __n4, __n5 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n24 := [  ];
__n0["variableDeclarations"] := __n24;
__n26 := {  };
__n26["type"] := "FunctionDeclaration";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "f";
__n26["id"] := __n27;
__n28 := [  ];
__n26["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ReturnStatement";
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "!==";
__n33 := {  };
__n33["type"] := "ThisExpression";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "undefined";
__n32["right"] := __n34;
__n31["argument"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n35 := [  ];
__n29["variableDeclarations"] := __n35;
__n36 := [  ];
__n29["functionDeclarations"] := __n36;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n26["body"] := __n29;
__n26["generator"] := false;
__n26["async"] := false;
__n26["expression"] := false;
__n25 := [ __n26 ];
__n0["functionDeclarations"] := __n25;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}