function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "f1";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "IfStatement";
__n5 := {  };
__n5["type"] := "UnaryExpression";
__n5["operator"] := "!";
__n6 := {  };
__n6["type"] := "BinaryExpression";
__n6["operator"] := "===";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "f1";
__n7["callee"] := __n8;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 2.;
__n11["raw"] := "2";
__n9 := [ __n10, __n11 ];
__n7["arguments"] := __n9;
__n6["left"] := __n7;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := false;
__n12["raw"] := "false";
__n6["right"] := __n12;
__n5["argument"] := __n6;
__n5["prefix"] := true;
__n4["test"] := __n5;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "$ERROR";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "#1: f1(1, 2) === false";
__n19["raw"] := "'#1: f1(1, 2) === false'";
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n15["expression"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n4["consequent"] := __n13;
__n20 := {  };
__n20["type"] := "IfStatement";
__n21 := {  };
__n21["type"] := "UnaryExpression";
__n21["operator"] := "!";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "===";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "f1";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 1.;
__n26["raw"] := "1";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["left"] := __n23;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := true;
__n27["raw"] := "true";
__n22["right"] := __n27;
__n21["argument"] := __n22;
__n21["prefix"] := true;
__n20["test"] := __n21;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "$ERROR";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "#1: f1(1) === true";
__n34["raw"] := "'#1: f1(1) === true'";
__n33 := [ __n34 ];
__n31["arguments"] := __n33;
__n30["expression"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n20["consequent"] := __n28;
__n20["alternate"] := null;
__n4["alternate"] := __n20;
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "f2";
__n35["expression"] := __n36;
__n37 := {  };
__n37["type"] := "IfStatement";
__n38 := {  };
__n38["type"] := "UnaryExpression";
__n38["operator"] := "!";
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "===";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "f2";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 1.;
__n43["raw"] := "1";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["left"] := __n40;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := true;
__n44["raw"] := "true";
__n39["right"] := __n44;
__n38["argument"] := __n39;
__n38["prefix"] := true;
__n37["test"] := __n38;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "$ERROR";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "#2: f2(1) === true";
__n51["raw"] := "'#2: f2(1) === true'";
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n37["consequent"] := __n45;
__n37["alternate"] := null;
__n1 := [ __n2, __n4, __n35, __n37 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n52 := [  ];
__n0["variableDeclarations"] := __n52;
__n54 := {  };
__n54["type"] := "FunctionDeclaration";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "f1";
__n54["id"] := __n55;
__n56 := [ "a", "b" ];
__n54["params"] := __n56;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ReturnStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "===";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "b";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "undefined";
__n60["right"] := __n62;
__n59["argument"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n63 := [  ];
__n57["variableDeclarations"] := __n63;
__n64 := [  ];
__n57["functionDeclarations"] := __n64;
__n57["codeType"] := "function";
__n57["strict"] := false;
__n54["body"] := __n57;
__n54["generator"] := false;
__n54["expression"] := false;
__n54["async"] := false;
__n65 := {  };
__n65["type"] := "FunctionDeclaration";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "f2";
__n65["id"] := __n66;
__n67 := [ "a", "b", "c" ];
__n65["params"] := __n67;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ReturnStatement";
__n71 := {  };
__n71["type"] := "LogicalExpression";
__n71["operator"] := "&&";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "===";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "b";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "undefined";
__n72["right"] := __n74;
__n71["left"] := __n72;
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "===";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "c";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "undefined";
__n75["right"] := __n77;
__n71["right"] := __n75;
__n70["argument"] := __n71;
__n69 := [ __n70 ];
__n68["body"] := __n69;
__n78 := [  ];
__n68["variableDeclarations"] := __n78;
__n79 := [  ];
__n68["functionDeclarations"] := __n79;
__n68["codeType"] := "function";
__n68["strict"] := false;
__n65["body"] := __n68;
__n65["generator"] := false;
__n65["expression"] := false;
__n65["async"] := false;
__n53 := [ __n54, __n65 ];
__n0["functionDeclarations"] := __n53;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}