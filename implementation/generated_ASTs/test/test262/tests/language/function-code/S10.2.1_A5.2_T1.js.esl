function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "f1";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "assert";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "sameValue";
__n8["raw"] := "\"sameValue\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "f1";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 1.;
__n13["raw"] := "1";
__n12 := [ __n13 ];
__n10["arguments"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "number";
__n14["raw"] := "\"number\"";
__n9 := [ __n10, __n14 ];
__n5["arguments"] := __n9;
__n4["expression"] := __n5;
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "f2";
__n15["expression"] := __n16;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "assert";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "sameValue";
__n21["raw"] := "\"sameValue\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "f2";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 1.;
__n26["raw"] := "1";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 1.;
__n27["raw"] := "1";
__n22 := [ __n23, __n27 ];
__n18["arguments"] := __n22;
__n17["expression"] := __n18;
__n1 := [ __n2, __n4, __n15, __n17 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n28 := [  ];
__n0["variableDeclarations"] := __n28;
__n30 := {  };
__n30["type"] := "FunctionDeclaration";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "f1";
__n30["id"] := __n31;
__n32 := [ "x" ];
__n30["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "VariableDeclaration";
__n37 := {  };
__n37["type"] := "VariableDeclarator";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "x";
__n37["id"] := __n38;
__n37["init"] := null;
__n36 := [ __n37 ];
__n35["declarations"] := __n36;
__n35["kind"] := "var";
__n39 := {  };
__n39["type"] := "ReturnStatement";
__n40 := {  };
__n40["type"] := "UnaryExpression";
__n40["operator"] := "typeof";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "x";
__n40["argument"] := __n41;
__n40["prefix"] := true;
__n39["argument"] := __n40;
__n34 := [ __n35, __n39 ];
__n33["body"] := __n34;
__n42 := [ "x" ];
__n33["variableDeclarations"] := __n42;
__n43 := [  ];
__n33["functionDeclarations"] := __n43;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n30["body"] := __n33;
__n30["generator"] := false;
__n30["expression"] := false;
__n30["async"] := false;
__n44 := {  };
__n44["type"] := "FunctionDeclaration";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "f2";
__n44["id"] := __n45;
__n46 := [ "x" ];
__n44["params"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "VariableDeclaration";
__n51 := {  };
__n51["type"] := "VariableDeclarator";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "x";
__n51["id"] := __n52;
__n51["init"] := null;
__n50 := [ __n51 ];
__n49["declarations"] := __n50;
__n49["kind"] := "var";
__n53 := {  };
__n53["type"] := "ReturnStatement";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "x";
__n53["argument"] := __n54;
__n48 := [ __n49, __n53 ];
__n47["body"] := __n48;
__n55 := [ "x" ];
__n47["variableDeclarations"] := __n55;
__n56 := [  ];
__n47["functionDeclarations"] := __n56;
__n47["codeType"] := "function";
__n47["strict"] := false;
__n44["body"] := __n47;
__n44["generator"] := false;
__n44["expression"] := false;
__n44["async"] := false;
__n29 := [ __n30, __n44 ];
__n0["functionDeclarations"] := __n29;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}