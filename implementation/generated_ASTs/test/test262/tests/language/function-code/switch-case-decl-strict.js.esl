function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := "use strict";
__n3["raw"] := "\"use strict\"";
__n2["expression"] := __n3;
__n2["directive"] := "use strict";
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "err1";
__n6["id"] := __n7;
__n6["init"] := null;
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "err2";
__n8["id"] := __n9;
__n8["init"] := null;
__n5 := [ __n6, __n8 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "FunctionExpression";
__n12["id"] := null;
__n13 := [  ];
__n12["params"] := __n13;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "TryStatement";
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "f";
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n16["block"] := __n17;
__n21 := {  };
__n21["type"] := "CatchClause";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "exception";
__n21["param"] := __n22;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "AssignmentExpression";
__n26["operator"] := "=";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "err1";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "exception";
__n26["right"] := __n28;
__n25["expression"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n21["body"] := __n23;
__n16["handler"] := __n21;
__n16["finalizer"] := null;
__n29 := {  };
__n29["type"] := "SwitchStatement";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 1.;
__n30["raw"] := "1";
__n29["discriminant"] := __n30;
__n33 := {  };
__n33["type"] := "SwitchCase";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1.;
__n34["raw"] := "1";
__n33["test"] := __n34;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "f";
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n33["consequent"] := __n35;
__n32 := [ __n33 ];
__n38 := [  ];
__n31 := [ __n32, null, __n38 ];
__n29["cases"] := __n31;
__n39 := {  };
__n39["type"] := "TryStatement";
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "f";
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n39["block"] := __n40;
__n44 := {  };
__n44["type"] := "CatchClause";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "exception";
__n44["param"] := __n45;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "AssignmentExpression";
__n49["operator"] := "=";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "err2";
__n49["left"] := __n50;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "exception";
__n49["right"] := __n51;
__n48["expression"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n44["body"] := __n46;
__n39["handler"] := __n44;
__n39["finalizer"] := null;
__n15 := [ __n16, __n29, __n39 ];
__n14["body"] := __n15;
__n52 := [  ];
__n14["variableDeclarations"] := __n52;
__n54 := {  };
__n54["type"] := "FunctionDeclaration";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "f";
__n54["id"] := __n55;
__n56 := [  ];
__n54["params"] := __n56;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n58 := [  ];
__n57["body"] := __n58;
__n59 := [  ];
__n57["variableDeclarations"] := __n59;
__n60 := [  ];
__n57["functionDeclarations"] := __n60;
__n57["codeType"] := "function";
__n57["strict"] := false;
__n54["body"] := __n57;
__n54["generator"] := false;
__n54["expression"] := false;
__n54["async"] := false;
__n53 := [ __n54 ];
__n14["functionDeclarations"] := __n53;
__n14["codeType"] := "function";
__n14["strict"] := false;
__n12["body"] := __n14;
__n12["generator"] := false;
__n12["expression"] := false;
__n12["async"] := false;
__n11["callee"] := __n12;
__n61 := [  ];
__n11["arguments"] := __n61;
__n10["expression"] := __n11;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "assert";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "sameValue";
__n66["raw"] := "\"sameValue\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "err1";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "constructor";
__n70["raw"] := "\"constructor\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "ReferenceError";
__n67 := [ __n68, __n71 ];
__n63["arguments"] := __n67;
__n62["expression"] := __n63;
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "assert";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "sameValue";
__n76["raw"] := "\"sameValue\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["callee"] := __n74;
__n78 := {  };
__n78["type"] := "MemberExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "err2";
__n78["object"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "constructor";
__n80["raw"] := "\"constructor\"";
__n78["property"] := __n80;
__n78["computed"] := true;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "ReferenceError";
__n77 := [ __n78, __n81 ];
__n73["arguments"] := __n77;
__n72["expression"] := __n73;
__n1 := [ __n2, __n4, __n10, __n62, __n72 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n82 := [ "err1", "err2" ];
__n0["variableDeclarations"] := __n82;
__n83 := [  ];
__n0["functionDeclarations"] := __n83;
__n0["codeType"] := "global";
__n0["strict"] := true;
return __n0
}