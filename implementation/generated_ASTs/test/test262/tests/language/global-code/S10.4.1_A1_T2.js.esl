function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "Identifier";
__n4["name"] := "x";
__n3["left"] := __n4;
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := 1.;
__n5["raw"] := "1";
__n3["right"] := __n5;
__n2["expression"] := __n3;
__n6 := {  };
__n6["type"] := "IfStatement";
__n7 := {  };
__n7["type"] := "BinaryExpression";
__n7["operator"] := "!==";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "ThisExpression";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "x";
__n10["raw"] := "\"x\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["left"] := __n8;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 1.;
__n11["raw"] := "1";
__n7["right"] := __n11;
__n6["test"] := __n7;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "$ERROR";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: variable x is a property of global object";
__n18["raw"] := "\"#1: variable x is a property of global object\"";
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n6["consequent"] := __n12;
__n6["alternate"] := null;
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!==";
__n21 := {  };
__n21["type"] := "UnaryExpression";
__n21["operator"] := "delete";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "ThisExpression";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "x";
__n24["raw"] := "\"x\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["argument"] := __n22;
__n21["prefix"] := true;
__n20["left"] := __n21;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := true;
__n25["raw"] := "true";
__n20["right"] := __n25;
__n19["test"] := __n20;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "$ERROR";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "#2: variable x has property attribute DontDelete";
__n32["raw"] := "\"#2: variable x has property attribute DontDelete\"";
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n19["consequent"] := __n26;
__n19["alternate"] := null;
__n1 := [ __n2, __n6, __n19 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n33 := [  ];
__n0["variableDeclarations"] := __n33;
__n34 := [  ];
__n0["functionDeclarations"] := __n34;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}