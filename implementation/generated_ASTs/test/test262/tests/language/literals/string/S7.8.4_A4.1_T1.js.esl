function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "String";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "fromCharCode";
__n7["raw"] := "\"fromCharCode\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 8.;
__n9["raw"] := "0x0008";
__n8 := [ __n9 ];
__n4["arguments"] := __n8;
__n3["left"] := __n4;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "";
__n10["raw"] := "\"\\b\"";
__n3["right"] := __n10;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "#1: String.fromCharCode(0x0008) === \"\\b\"";
__n17["raw"] := "'#1: String.fromCharCode(0x0008) === \"\\\\b\"'";
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n2["alternate"] := null;
__n18 := {  };
__n18["type"] := "IfStatement";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "!==";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "String";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "fromCharCode";
__n23["raw"] := "\"fromCharCode\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 9.;
__n25["raw"] := "0x0009";
__n24 := [ __n25 ];
__n20["arguments"] := __n24;
__n19["left"] := __n20;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "	";
__n26["raw"] := "\"\\t\"";
__n19["right"] := __n26;
__n18["test"] := __n19;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "$ERROR";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "#2: String.fromCharCode(0x0009) === \"\\t\"";
__n33["raw"] := "'#2: String.fromCharCode(0x0009) === \"\\\\t\"'";
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n29["expression"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n18["consequent"] := __n27;
__n18["alternate"] := null;
__n34 := {  };
__n34["type"] := "IfStatement";
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "!==";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "String";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "fromCharCode";
__n39["raw"] := "\"fromCharCode\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 10.;
__n41["raw"] := "0x000A";
__n40 := [ __n41 ];
__n36["arguments"] := __n40;
__n35["left"] := __n36;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "
";
__n42["raw"] := "\"\\n\"";
__n35["right"] := __n42;
__n34["test"] := __n35;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "#3: String.fromCharCode(0x000A) === \"\\n\"";
__n49["raw"] := "'#3: String.fromCharCode(0x000A) === \"\\\\n\"'";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n34["consequent"] := __n43;
__n34["alternate"] := null;
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "String";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "fromCharCode";
__n55["raw"] := "\"fromCharCode\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 11.;
__n57["raw"] := "0x000B";
__n56 := [ __n57 ];
__n52["arguments"] := __n56;
__n51["left"] := __n52;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "";
__n58["raw"] := "\"\\v\"";
__n51["right"] := __n58;
__n50["test"] := __n51;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "#4: String.fromCharCode(0x000B) === \"\\v\"";
__n65["raw"] := "'#4: String.fromCharCode(0x000B) === \"\\\\v\"'";
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n50["consequent"] := __n59;
__n50["alternate"] := null;
__n66 := {  };
__n66["type"] := "IfStatement";
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "!==";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "String";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "fromCharCode";
__n71["raw"] := "\"fromCharCode\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 12.;
__n73["raw"] := "0x000C";
__n72 := [ __n73 ];
__n68["arguments"] := __n72;
__n67["left"] := __n68;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "";
__n74["raw"] := "\"\\f\"";
__n67["right"] := __n74;
__n66["test"] := __n67;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "$ERROR";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "#5: String.fromCharCode(0x000C) === \"\\f\"";
__n81["raw"] := "'#5: String.fromCharCode(0x000C) === \"\\\\f\"'";
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n66["consequent"] := __n75;
__n66["alternate"] := null;
__n82 := {  };
__n82["type"] := "IfStatement";
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "!==";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "String";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "fromCharCode";
__n87["raw"] := "\"fromCharCode\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n84["callee"] := __n85;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 13.;
__n89["raw"] := "0x000D";
__n88 := [ __n89 ];
__n84["arguments"] := __n88;
__n83["left"] := __n84;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "";
__n90["raw"] := "\"\\r\"";
__n83["right"] := __n90;
__n82["test"] := __n83;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "#6: String.fromCharCode(0x000D) === \"\\r\"";
__n97["raw"] := "'#6: String.fromCharCode(0x000D) === \"\\\\r\"'";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n82["consequent"] := __n91;
__n82["alternate"] := null;
__n1 := [ __n2, __n18, __n34, __n50, __n66, __n82 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n98 := [  ];
__n0["variableDeclarations"] := __n98;
__n99 := [  ];
__n0["functionDeclarations"] := __n99;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}