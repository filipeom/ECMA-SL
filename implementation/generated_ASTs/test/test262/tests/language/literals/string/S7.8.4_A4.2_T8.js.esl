function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "Literal";
__n4["value"] := "а";
__n4["raw"] := "\"а\"";
__n3["left"] := __n4;
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := "а";
__n5["raw"] := "\"\\а\"";
__n3["right"] := __n5;
__n2["test"] := __n3;
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "$ERROR";
__n9["callee"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "#а";
__n12["raw"] := "'#а'";
__n11 := [ __n12 ];
__n9["arguments"] := __n11;
__n8["expression"] := __n9;
__n7 := [ __n8 ];
__n6["body"] := __n7;
__n2["consequent"] := __n6;
__n2["alternate"] := null;
__n13 := {  };
__n13["type"] := "IfStatement";
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "!==";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "б";
__n15["raw"] := "\"б\"";
__n14["left"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "б";
__n16["raw"] := "\"\\б\"";
__n14["right"] := __n16;
__n13["test"] := __n14;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "$ERROR";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "#б";
__n23["raw"] := "'#б'";
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n13["consequent"] := __n17;
__n13["alternate"] := null;
__n24 := {  };
__n24["type"] := "IfStatement";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "!==";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "в";
__n26["raw"] := "\"в\"";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "в";
__n27["raw"] := "\"\\в\"";
__n25["right"] := __n27;
__n24["test"] := __n25;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "$ERROR";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "#в";
__n34["raw"] := "'#в'";
__n33 := [ __n34 ];
__n31["arguments"] := __n33;
__n30["expression"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n24["consequent"] := __n28;
__n24["alternate"] := null;
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "г";
__n37["raw"] := "\"г\"";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "г";
__n38["raw"] := "\"\\г\"";
__n36["right"] := __n38;
__n35["test"] := __n36;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "$ERROR";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "#г";
__n45["raw"] := "'#г'";
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n41["expression"] := __n42;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n35["consequent"] := __n39;
__n35["alternate"] := null;
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "!==";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "д";
__n48["raw"] := "\"д\"";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "д";
__n49["raw"] := "\"\\д\"";
__n47["right"] := __n49;
__n46["test"] := __n47;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "$ERROR";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "#д";
__n56["raw"] := "'#д'";
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n46["consequent"] := __n50;
__n46["alternate"] := null;
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "е";
__n59["raw"] := "\"е\"";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "е";
__n60["raw"] := "\"\\е\"";
__n58["right"] := __n60;
__n57["test"] := __n58;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$ERROR";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "#е";
__n67["raw"] := "'#е'";
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n57["consequent"] := __n61;
__n57["alternate"] := null;
__n68 := {  };
__n68["type"] := "IfStatement";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "!==";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "ж";
__n70["raw"] := "\"ж\"";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "ж";
__n71["raw"] := "\"\\ж\"";
__n69["right"] := __n71;
__n68["test"] := __n69;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "$ERROR";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "#ж";
__n78["raw"] := "'#ж'";
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n68["consequent"] := __n72;
__n68["alternate"] := null;
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!==";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "з";
__n81["raw"] := "\"з\"";
__n80["left"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "з";
__n82["raw"] := "\"\\з\"";
__n80["right"] := __n82;
__n79["test"] := __n80;
__n83 := {  };
__n83["type"] := "BlockStatement";
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "$ERROR";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "#з";
__n89["raw"] := "'#з'";
__n88 := [ __n89 ];
__n86["arguments"] := __n88;
__n85["expression"] := __n86;
__n84 := [ __n85 ];
__n83["body"] := __n84;
__n79["consequent"] := __n83;
__n79["alternate"] := null;
__n90 := {  };
__n90["type"] := "IfStatement";
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "!==";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "и";
__n92["raw"] := "\"и\"";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "и";
__n93["raw"] := "\"\\и\"";
__n91["right"] := __n93;
__n90["test"] := __n91;
__n94 := {  };
__n94["type"] := "BlockStatement";
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "$ERROR";
__n97["callee"] := __n98;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "#и";
__n100["raw"] := "'#и'";
__n99 := [ __n100 ];
__n97["arguments"] := __n99;
__n96["expression"] := __n97;
__n95 := [ __n96 ];
__n94["body"] := __n95;
__n90["consequent"] := __n94;
__n90["alternate"] := null;
__n101 := {  };
__n101["type"] := "IfStatement";
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "!==";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "й";
__n103["raw"] := "\"й\"";
__n102["left"] := __n103;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "й";
__n104["raw"] := "\"\\й\"";
__n102["right"] := __n104;
__n101["test"] := __n102;
__n105 := {  };
__n105["type"] := "BlockStatement";
__n107 := {  };
__n107["type"] := "ExpressionStatement";
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "$ERROR";
__n108["callee"] := __n109;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "#й";
__n111["raw"] := "'#й'";
__n110 := [ __n111 ];
__n108["arguments"] := __n110;
__n107["expression"] := __n108;
__n106 := [ __n107 ];
__n105["body"] := __n106;
__n101["consequent"] := __n105;
__n101["alternate"] := null;
__n112 := {  };
__n112["type"] := "IfStatement";
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := "!==";
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "к";
__n114["raw"] := "\"к\"";
__n113["left"] := __n114;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "к";
__n115["raw"] := "\"\\к\"";
__n113["right"] := __n115;
__n112["test"] := __n113;
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "$ERROR";
__n119["callee"] := __n120;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "#к";
__n122["raw"] := "'#к'";
__n121 := [ __n122 ];
__n119["arguments"] := __n121;
__n118["expression"] := __n119;
__n117 := [ __n118 ];
__n116["body"] := __n117;
__n112["consequent"] := __n116;
__n112["alternate"] := null;
__n123 := {  };
__n123["type"] := "IfStatement";
__n124 := {  };
__n124["type"] := "BinaryExpression";
__n124["operator"] := "!==";
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := "л";
__n125["raw"] := "\"л\"";
__n124["left"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "л";
__n126["raw"] := "\"\\л\"";
__n124["right"] := __n126;
__n123["test"] := __n124;
__n127 := {  };
__n127["type"] := "BlockStatement";
__n129 := {  };
__n129["type"] := "ExpressionStatement";
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "$ERROR";
__n130["callee"] := __n131;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "#л";
__n133["raw"] := "'#л'";
__n132 := [ __n133 ];
__n130["arguments"] := __n132;
__n129["expression"] := __n130;
__n128 := [ __n129 ];
__n127["body"] := __n128;
__n123["consequent"] := __n127;
__n123["alternate"] := null;
__n134 := {  };
__n134["type"] := "IfStatement";
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "!==";
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "м";
__n136["raw"] := "\"м\"";
__n135["left"] := __n136;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "м";
__n137["raw"] := "\"\\м\"";
__n135["right"] := __n137;
__n134["test"] := __n135;
__n138 := {  };
__n138["type"] := "BlockStatement";
__n140 := {  };
__n140["type"] := "ExpressionStatement";
__n141 := {  };
__n141["type"] := "CallExpression";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "$ERROR";
__n141["callee"] := __n142;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "#м";
__n144["raw"] := "'#м'";
__n143 := [ __n144 ];
__n141["arguments"] := __n143;
__n140["expression"] := __n141;
__n139 := [ __n140 ];
__n138["body"] := __n139;
__n134["consequent"] := __n138;
__n134["alternate"] := null;
__n145 := {  };
__n145["type"] := "IfStatement";
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "!==";
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "н";
__n147["raw"] := "\"н\"";
__n146["left"] := __n147;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "н";
__n148["raw"] := "\"\\н\"";
__n146["right"] := __n148;
__n145["test"] := __n146;
__n149 := {  };
__n149["type"] := "BlockStatement";
__n151 := {  };
__n151["type"] := "ExpressionStatement";
__n152 := {  };
__n152["type"] := "CallExpression";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "$ERROR";
__n152["callee"] := __n153;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := "#н";
__n155["raw"] := "'#н'";
__n154 := [ __n155 ];
__n152["arguments"] := __n154;
__n151["expression"] := __n152;
__n150 := [ __n151 ];
__n149["body"] := __n150;
__n145["consequent"] := __n149;
__n145["alternate"] := null;
__n156 := {  };
__n156["type"] := "IfStatement";
__n157 := {  };
__n157["type"] := "BinaryExpression";
__n157["operator"] := "!==";
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := "о";
__n158["raw"] := "\"о\"";
__n157["left"] := __n158;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "о";
__n159["raw"] := "\"\\о\"";
__n157["right"] := __n159;
__n156["test"] := __n157;
__n160 := {  };
__n160["type"] := "BlockStatement";
__n162 := {  };
__n162["type"] := "ExpressionStatement";
__n163 := {  };
__n163["type"] := "CallExpression";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "$ERROR";
__n163["callee"] := __n164;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "#о";
__n166["raw"] := "'#о'";
__n165 := [ __n166 ];
__n163["arguments"] := __n165;
__n162["expression"] := __n163;
__n161 := [ __n162 ];
__n160["body"] := __n161;
__n156["consequent"] := __n160;
__n156["alternate"] := null;
__n167 := {  };
__n167["type"] := "IfStatement";
__n168 := {  };
__n168["type"] := "BinaryExpression";
__n168["operator"] := "!==";
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := "п";
__n169["raw"] := "\"п\"";
__n168["left"] := __n169;
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := "п";
__n170["raw"] := "\"\\п\"";
__n168["right"] := __n170;
__n167["test"] := __n168;
__n171 := {  };
__n171["type"] := "BlockStatement";
__n173 := {  };
__n173["type"] := "ExpressionStatement";
__n174 := {  };
__n174["type"] := "CallExpression";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "$ERROR";
__n174["callee"] := __n175;
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "#п";
__n177["raw"] := "'#п'";
__n176 := [ __n177 ];
__n174["arguments"] := __n176;
__n173["expression"] := __n174;
__n172 := [ __n173 ];
__n171["body"] := __n172;
__n167["consequent"] := __n171;
__n167["alternate"] := null;
__n178 := {  };
__n178["type"] := "IfStatement";
__n179 := {  };
__n179["type"] := "BinaryExpression";
__n179["operator"] := "!==";
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := "р";
__n180["raw"] := "\"р\"";
__n179["left"] := __n180;
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := "р";
__n181["raw"] := "\"\\р\"";
__n179["right"] := __n181;
__n178["test"] := __n179;
__n182 := {  };
__n182["type"] := "BlockStatement";
__n184 := {  };
__n184["type"] := "ExpressionStatement";
__n185 := {  };
__n185["type"] := "CallExpression";
__n186 := {  };
__n186["type"] := "Identifier";
__n186["name"] := "$ERROR";
__n185["callee"] := __n186;
__n188 := {  };
__n188["type"] := "Literal";
__n188["value"] := "#р";
__n188["raw"] := "'#р'";
__n187 := [ __n188 ];
__n185["arguments"] := __n187;
__n184["expression"] := __n185;
__n183 := [ __n184 ];
__n182["body"] := __n183;
__n178["consequent"] := __n182;
__n178["alternate"] := null;
__n189 := {  };
__n189["type"] := "IfStatement";
__n190 := {  };
__n190["type"] := "BinaryExpression";
__n190["operator"] := "!==";
__n191 := {  };
__n191["type"] := "Literal";
__n191["value"] := "с";
__n191["raw"] := "\"с\"";
__n190["left"] := __n191;
__n192 := {  };
__n192["type"] := "Literal";
__n192["value"] := "с";
__n192["raw"] := "\"\\с\"";
__n190["right"] := __n192;
__n189["test"] := __n190;
__n193 := {  };
__n193["type"] := "BlockStatement";
__n195 := {  };
__n195["type"] := "ExpressionStatement";
__n196 := {  };
__n196["type"] := "CallExpression";
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "$ERROR";
__n196["callee"] := __n197;
__n199 := {  };
__n199["type"] := "Literal";
__n199["value"] := "#с";
__n199["raw"] := "'#с'";
__n198 := [ __n199 ];
__n196["arguments"] := __n198;
__n195["expression"] := __n196;
__n194 := [ __n195 ];
__n193["body"] := __n194;
__n189["consequent"] := __n193;
__n189["alternate"] := null;
__n200 := {  };
__n200["type"] := "IfStatement";
__n201 := {  };
__n201["type"] := "BinaryExpression";
__n201["operator"] := "!==";
__n202 := {  };
__n202["type"] := "Literal";
__n202["value"] := "т";
__n202["raw"] := "\"т\"";
__n201["left"] := __n202;
__n203 := {  };
__n203["type"] := "Literal";
__n203["value"] := "т";
__n203["raw"] := "\"\\т\"";
__n201["right"] := __n203;
__n200["test"] := __n201;
__n204 := {  };
__n204["type"] := "BlockStatement";
__n206 := {  };
__n206["type"] := "ExpressionStatement";
__n207 := {  };
__n207["type"] := "CallExpression";
__n208 := {  };
__n208["type"] := "Identifier";
__n208["name"] := "$ERROR";
__n207["callee"] := __n208;
__n210 := {  };
__n210["type"] := "Literal";
__n210["value"] := "#т";
__n210["raw"] := "'#т'";
__n209 := [ __n210 ];
__n207["arguments"] := __n209;
__n206["expression"] := __n207;
__n205 := [ __n206 ];
__n204["body"] := __n205;
__n200["consequent"] := __n204;
__n200["alternate"] := null;
__n211 := {  };
__n211["type"] := "IfStatement";
__n212 := {  };
__n212["type"] := "BinaryExpression";
__n212["operator"] := "!==";
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := "у";
__n213["raw"] := "\"у\"";
__n212["left"] := __n213;
__n214 := {  };
__n214["type"] := "Literal";
__n214["value"] := "у";
__n214["raw"] := "\"\\у\"";
__n212["right"] := __n214;
__n211["test"] := __n212;
__n215 := {  };
__n215["type"] := "BlockStatement";
__n217 := {  };
__n217["type"] := "ExpressionStatement";
__n218 := {  };
__n218["type"] := "CallExpression";
__n219 := {  };
__n219["type"] := "Identifier";
__n219["name"] := "$ERROR";
__n218["callee"] := __n219;
__n221 := {  };
__n221["type"] := "Literal";
__n221["value"] := "#у";
__n221["raw"] := "'#у'";
__n220 := [ __n221 ];
__n218["arguments"] := __n220;
__n217["expression"] := __n218;
__n216 := [ __n217 ];
__n215["body"] := __n216;
__n211["consequent"] := __n215;
__n211["alternate"] := null;
__n222 := {  };
__n222["type"] := "IfStatement";
__n223 := {  };
__n223["type"] := "BinaryExpression";
__n223["operator"] := "!==";
__n224 := {  };
__n224["type"] := "Literal";
__n224["value"] := "ф";
__n224["raw"] := "\"ф\"";
__n223["left"] := __n224;
__n225 := {  };
__n225["type"] := "Literal";
__n225["value"] := "ф";
__n225["raw"] := "\"\\ф\"";
__n223["right"] := __n225;
__n222["test"] := __n223;
__n226 := {  };
__n226["type"] := "BlockStatement";
__n228 := {  };
__n228["type"] := "ExpressionStatement";
__n229 := {  };
__n229["type"] := "CallExpression";
__n230 := {  };
__n230["type"] := "Identifier";
__n230["name"] := "$ERROR";
__n229["callee"] := __n230;
__n232 := {  };
__n232["type"] := "Literal";
__n232["value"] := "#ф";
__n232["raw"] := "'#ф'";
__n231 := [ __n232 ];
__n229["arguments"] := __n231;
__n228["expression"] := __n229;
__n227 := [ __n228 ];
__n226["body"] := __n227;
__n222["consequent"] := __n226;
__n222["alternate"] := null;
__n233 := {  };
__n233["type"] := "IfStatement";
__n234 := {  };
__n234["type"] := "BinaryExpression";
__n234["operator"] := "!==";
__n235 := {  };
__n235["type"] := "Literal";
__n235["value"] := "х";
__n235["raw"] := "\"х\"";
__n234["left"] := __n235;
__n236 := {  };
__n236["type"] := "Literal";
__n236["value"] := "х";
__n236["raw"] := "\"\\х\"";
__n234["right"] := __n236;
__n233["test"] := __n234;
__n237 := {  };
__n237["type"] := "BlockStatement";
__n239 := {  };
__n239["type"] := "ExpressionStatement";
__n240 := {  };
__n240["type"] := "CallExpression";
__n241 := {  };
__n241["type"] := "Identifier";
__n241["name"] := "$ERROR";
__n240["callee"] := __n241;
__n243 := {  };
__n243["type"] := "Literal";
__n243["value"] := "#х";
__n243["raw"] := "'#х'";
__n242 := [ __n243 ];
__n240["arguments"] := __n242;
__n239["expression"] := __n240;
__n238 := [ __n239 ];
__n237["body"] := __n238;
__n233["consequent"] := __n237;
__n233["alternate"] := null;
__n244 := {  };
__n244["type"] := "IfStatement";
__n245 := {  };
__n245["type"] := "BinaryExpression";
__n245["operator"] := "!==";
__n246 := {  };
__n246["type"] := "Literal";
__n246["value"] := "ц";
__n246["raw"] := "\"ц\"";
__n245["left"] := __n246;
__n247 := {  };
__n247["type"] := "Literal";
__n247["value"] := "ц";
__n247["raw"] := "\"\\ц\"";
__n245["right"] := __n247;
__n244["test"] := __n245;
__n248 := {  };
__n248["type"] := "BlockStatement";
__n250 := {  };
__n250["type"] := "ExpressionStatement";
__n251 := {  };
__n251["type"] := "CallExpression";
__n252 := {  };
__n252["type"] := "Identifier";
__n252["name"] := "$ERROR";
__n251["callee"] := __n252;
__n254 := {  };
__n254["type"] := "Literal";
__n254["value"] := "#ц";
__n254["raw"] := "'#ц'";
__n253 := [ __n254 ];
__n251["arguments"] := __n253;
__n250["expression"] := __n251;
__n249 := [ __n250 ];
__n248["body"] := __n249;
__n244["consequent"] := __n248;
__n244["alternate"] := null;
__n255 := {  };
__n255["type"] := "IfStatement";
__n256 := {  };
__n256["type"] := "BinaryExpression";
__n256["operator"] := "!==";
__n257 := {  };
__n257["type"] := "Literal";
__n257["value"] := "ч";
__n257["raw"] := "\"ч\"";
__n256["left"] := __n257;
__n258 := {  };
__n258["type"] := "Literal";
__n258["value"] := "ч";
__n258["raw"] := "\"\\ч\"";
__n256["right"] := __n258;
__n255["test"] := __n256;
__n259 := {  };
__n259["type"] := "BlockStatement";
__n261 := {  };
__n261["type"] := "ExpressionStatement";
__n262 := {  };
__n262["type"] := "CallExpression";
__n263 := {  };
__n263["type"] := "Identifier";
__n263["name"] := "$ERROR";
__n262["callee"] := __n263;
__n265 := {  };
__n265["type"] := "Literal";
__n265["value"] := "#ч";
__n265["raw"] := "'#ч'";
__n264 := [ __n265 ];
__n262["arguments"] := __n264;
__n261["expression"] := __n262;
__n260 := [ __n261 ];
__n259["body"] := __n260;
__n255["consequent"] := __n259;
__n255["alternate"] := null;
__n266 := {  };
__n266["type"] := "IfStatement";
__n267 := {  };
__n267["type"] := "BinaryExpression";
__n267["operator"] := "!==";
__n268 := {  };
__n268["type"] := "Literal";
__n268["value"] := "ш";
__n268["raw"] := "\"ш\"";
__n267["left"] := __n268;
__n269 := {  };
__n269["type"] := "Literal";
__n269["value"] := "ш";
__n269["raw"] := "\"\\ш\"";
__n267["right"] := __n269;
__n266["test"] := __n267;
__n270 := {  };
__n270["type"] := "BlockStatement";
__n272 := {  };
__n272["type"] := "ExpressionStatement";
__n273 := {  };
__n273["type"] := "CallExpression";
__n274 := {  };
__n274["type"] := "Identifier";
__n274["name"] := "$ERROR";
__n273["callee"] := __n274;
__n276 := {  };
__n276["type"] := "Literal";
__n276["value"] := "#ш";
__n276["raw"] := "'#ш'";
__n275 := [ __n276 ];
__n273["arguments"] := __n275;
__n272["expression"] := __n273;
__n271 := [ __n272 ];
__n270["body"] := __n271;
__n266["consequent"] := __n270;
__n266["alternate"] := null;
__n277 := {  };
__n277["type"] := "IfStatement";
__n278 := {  };
__n278["type"] := "BinaryExpression";
__n278["operator"] := "!==";
__n279 := {  };
__n279["type"] := "Literal";
__n279["value"] := "щ";
__n279["raw"] := "\"щ\"";
__n278["left"] := __n279;
__n280 := {  };
__n280["type"] := "Literal";
__n280["value"] := "щ";
__n280["raw"] := "\"\\щ\"";
__n278["right"] := __n280;
__n277["test"] := __n278;
__n281 := {  };
__n281["type"] := "BlockStatement";
__n283 := {  };
__n283["type"] := "ExpressionStatement";
__n284 := {  };
__n284["type"] := "CallExpression";
__n285 := {  };
__n285["type"] := "Identifier";
__n285["name"] := "$ERROR";
__n284["callee"] := __n285;
__n287 := {  };
__n287["type"] := "Literal";
__n287["value"] := "#щ";
__n287["raw"] := "'#щ'";
__n286 := [ __n287 ];
__n284["arguments"] := __n286;
__n283["expression"] := __n284;
__n282 := [ __n283 ];
__n281["body"] := __n282;
__n277["consequent"] := __n281;
__n277["alternate"] := null;
__n288 := {  };
__n288["type"] := "IfStatement";
__n289 := {  };
__n289["type"] := "BinaryExpression";
__n289["operator"] := "!==";
__n290 := {  };
__n290["type"] := "Literal";
__n290["value"] := "ъ";
__n290["raw"] := "\"ъ\"";
__n289["left"] := __n290;
__n291 := {  };
__n291["type"] := "Literal";
__n291["value"] := "ъ";
__n291["raw"] := "\"\\ъ\"";
__n289["right"] := __n291;
__n288["test"] := __n289;
__n292 := {  };
__n292["type"] := "BlockStatement";
__n294 := {  };
__n294["type"] := "ExpressionStatement";
__n295 := {  };
__n295["type"] := "CallExpression";
__n296 := {  };
__n296["type"] := "Identifier";
__n296["name"] := "$ERROR";
__n295["callee"] := __n296;
__n298 := {  };
__n298["type"] := "Literal";
__n298["value"] := "#ъ";
__n298["raw"] := "'#ъ'";
__n297 := [ __n298 ];
__n295["arguments"] := __n297;
__n294["expression"] := __n295;
__n293 := [ __n294 ];
__n292["body"] := __n293;
__n288["consequent"] := __n292;
__n288["alternate"] := null;
__n299 := {  };
__n299["type"] := "IfStatement";
__n300 := {  };
__n300["type"] := "BinaryExpression";
__n300["operator"] := "!==";
__n301 := {  };
__n301["type"] := "Literal";
__n301["value"] := "ы";
__n301["raw"] := "\"ы\"";
__n300["left"] := __n301;
__n302 := {  };
__n302["type"] := "Literal";
__n302["value"] := "ы";
__n302["raw"] := "\"\\ы\"";
__n300["right"] := __n302;
__n299["test"] := __n300;
__n303 := {  };
__n303["type"] := "BlockStatement";
__n305 := {  };
__n305["type"] := "ExpressionStatement";
__n306 := {  };
__n306["type"] := "CallExpression";
__n307 := {  };
__n307["type"] := "Identifier";
__n307["name"] := "$ERROR";
__n306["callee"] := __n307;
__n309 := {  };
__n309["type"] := "Literal";
__n309["value"] := "#ы";
__n309["raw"] := "'#ы'";
__n308 := [ __n309 ];
__n306["arguments"] := __n308;
__n305["expression"] := __n306;
__n304 := [ __n305 ];
__n303["body"] := __n304;
__n299["consequent"] := __n303;
__n299["alternate"] := null;
__n310 := {  };
__n310["type"] := "IfStatement";
__n311 := {  };
__n311["type"] := "BinaryExpression";
__n311["operator"] := "!==";
__n312 := {  };
__n312["type"] := "Literal";
__n312["value"] := "ь";
__n312["raw"] := "\"ь\"";
__n311["left"] := __n312;
__n313 := {  };
__n313["type"] := "Literal";
__n313["value"] := "ь";
__n313["raw"] := "\"\\ь\"";
__n311["right"] := __n313;
__n310["test"] := __n311;
__n314 := {  };
__n314["type"] := "BlockStatement";
__n316 := {  };
__n316["type"] := "ExpressionStatement";
__n317 := {  };
__n317["type"] := "CallExpression";
__n318 := {  };
__n318["type"] := "Identifier";
__n318["name"] := "$ERROR";
__n317["callee"] := __n318;
__n320 := {  };
__n320["type"] := "Literal";
__n320["value"] := "#ь";
__n320["raw"] := "'#ь'";
__n319 := [ __n320 ];
__n317["arguments"] := __n319;
__n316["expression"] := __n317;
__n315 := [ __n316 ];
__n314["body"] := __n315;
__n310["consequent"] := __n314;
__n310["alternate"] := null;
__n321 := {  };
__n321["type"] := "IfStatement";
__n322 := {  };
__n322["type"] := "BinaryExpression";
__n322["operator"] := "!==";
__n323 := {  };
__n323["type"] := "Literal";
__n323["value"] := "э";
__n323["raw"] := "\"э\"";
__n322["left"] := __n323;
__n324 := {  };
__n324["type"] := "Literal";
__n324["value"] := "э";
__n324["raw"] := "\"\\э\"";
__n322["right"] := __n324;
__n321["test"] := __n322;
__n325 := {  };
__n325["type"] := "BlockStatement";
__n327 := {  };
__n327["type"] := "ExpressionStatement";
__n328 := {  };
__n328["type"] := "CallExpression";
__n329 := {  };
__n329["type"] := "Identifier";
__n329["name"] := "$ERROR";
__n328["callee"] := __n329;
__n331 := {  };
__n331["type"] := "Literal";
__n331["value"] := "#э";
__n331["raw"] := "'#э'";
__n330 := [ __n331 ];
__n328["arguments"] := __n330;
__n327["expression"] := __n328;
__n326 := [ __n327 ];
__n325["body"] := __n326;
__n321["consequent"] := __n325;
__n321["alternate"] := null;
__n332 := {  };
__n332["type"] := "IfStatement";
__n333 := {  };
__n333["type"] := "BinaryExpression";
__n333["operator"] := "!==";
__n334 := {  };
__n334["type"] := "Literal";
__n334["value"] := "ю";
__n334["raw"] := "\"ю\"";
__n333["left"] := __n334;
__n335 := {  };
__n335["type"] := "Literal";
__n335["value"] := "ю";
__n335["raw"] := "\"\\ю\"";
__n333["right"] := __n335;
__n332["test"] := __n333;
__n336 := {  };
__n336["type"] := "BlockStatement";
__n338 := {  };
__n338["type"] := "ExpressionStatement";
__n339 := {  };
__n339["type"] := "CallExpression";
__n340 := {  };
__n340["type"] := "Identifier";
__n340["name"] := "$ERROR";
__n339["callee"] := __n340;
__n342 := {  };
__n342["type"] := "Literal";
__n342["value"] := "#ю";
__n342["raw"] := "'#ю'";
__n341 := [ __n342 ];
__n339["arguments"] := __n341;
__n338["expression"] := __n339;
__n337 := [ __n338 ];
__n336["body"] := __n337;
__n332["consequent"] := __n336;
__n332["alternate"] := null;
__n343 := {  };
__n343["type"] := "IfStatement";
__n344 := {  };
__n344["type"] := "BinaryExpression";
__n344["operator"] := "!==";
__n345 := {  };
__n345["type"] := "Literal";
__n345["value"] := "я";
__n345["raw"] := "\"я\"";
__n344["left"] := __n345;
__n346 := {  };
__n346["type"] := "Literal";
__n346["value"] := "я";
__n346["raw"] := "\"\\я\"";
__n344["right"] := __n346;
__n343["test"] := __n344;
__n347 := {  };
__n347["type"] := "BlockStatement";
__n349 := {  };
__n349["type"] := "ExpressionStatement";
__n350 := {  };
__n350["type"] := "CallExpression";
__n351 := {  };
__n351["type"] := "Identifier";
__n351["name"] := "$ERROR";
__n350["callee"] := __n351;
__n353 := {  };
__n353["type"] := "Literal";
__n353["value"] := "#я";
__n353["raw"] := "'#я'";
__n352 := [ __n353 ];
__n350["arguments"] := __n352;
__n349["expression"] := __n350;
__n348 := [ __n349 ];
__n347["body"] := __n348;
__n343["consequent"] := __n347;
__n343["alternate"] := null;
__n354 := {  };
__n354["type"] := "IfStatement";
__n355 := {  };
__n355["type"] := "BinaryExpression";
__n355["operator"] := "!==";
__n356 := {  };
__n356["type"] := "Literal";
__n356["value"] := "ё";
__n356["raw"] := "\"ё\"";
__n355["left"] := __n356;
__n357 := {  };
__n357["type"] := "Literal";
__n357["value"] := "ё";
__n357["raw"] := "\"\\ё\"";
__n355["right"] := __n357;
__n354["test"] := __n355;
__n358 := {  };
__n358["type"] := "BlockStatement";
__n360 := {  };
__n360["type"] := "ExpressionStatement";
__n361 := {  };
__n361["type"] := "CallExpression";
__n362 := {  };
__n362["type"] := "Identifier";
__n362["name"] := "$ERROR";
__n361["callee"] := __n362;
__n364 := {  };
__n364["type"] := "Literal";
__n364["value"] := "#ё";
__n364["raw"] := "'#ё'";
__n363 := [ __n364 ];
__n361["arguments"] := __n363;
__n360["expression"] := __n361;
__n359 := [ __n360 ];
__n358["body"] := __n359;
__n354["consequent"] := __n358;
__n354["alternate"] := null;
__n1 := [ __n2, __n13, __n24, __n35, __n46, __n57, __n68, __n79, __n90, __n101, __n112, __n123, __n134, __n145, __n156, __n167, __n178, __n189, __n200, __n211, __n222, __n233, __n244, __n255, __n266, __n277, __n288, __n299, __n310, __n321, __n332, __n343, __n354 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n365 := [  ];
__n0["variableDeclarations"] := __n365;
__n366 := [  ];
__n0["functionDeclarations"] := __n366;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}