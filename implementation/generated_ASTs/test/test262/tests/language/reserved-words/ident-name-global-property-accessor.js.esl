function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "test";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "tokenCodes";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "ObjectExpression";
__n12 := {  };
__n12["type"] := "Property";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "undefined";
__n12["key"] := __n13;
__n14 := {  };
__n14["type"] := "FunctionExpression";
__n14["id"] := null;
__n15 := [ "value" ];
__n14["params"] := __n15;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "AssignmentExpression";
__n19["operator"] := "=";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "test";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "undefined";
__n21["raw"] := "'undefined'";
__n19["right"] := __n21;
__n18["expression"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n22 := [  ];
__n16["variableDeclarations"] := __n22;
__n23 := [  ];
__n16["functionDeclarations"] := __n23;
__n16["codeType"] := "function";
__n16["strict"] := false;
__n14["body"] := __n16;
__n14["generator"] := false;
__n14["async"] := false;
__n14["expression"] := false;
__n12["value"] := __n14;
__n12["computed"] := false;
__n12["kind"] := "set";
__n12["shorthand"] := false;
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "undefined";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "FunctionExpression";
__n26["id"] := null;
__n27 := [  ];
__n26["params"] := __n27;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ReturnStatement";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "undefined";
__n31["raw"] := "'undefined'";
__n30["argument"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n32 := [  ];
__n28["variableDeclarations"] := __n32;
__n33 := [  ];
__n28["functionDeclarations"] := __n33;
__n28["codeType"] := "function";
__n28["strict"] := false;
__n26["body"] := __n28;
__n26["generator"] := false;
__n26["async"] := false;
__n26["expression"] := false;
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "get";
__n24["shorthand"] := false;
__n34 := {  };
__n34["type"] := "Property";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "NaN";
__n34["key"] := __n35;
__n36 := {  };
__n36["type"] := "FunctionExpression";
__n36["id"] := null;
__n37 := [ "value" ];
__n36["params"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "AssignmentExpression";
__n41["operator"] := "=";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "test";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "NaN";
__n43["raw"] := "'NaN'";
__n41["right"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n44 := [  ];
__n38["variableDeclarations"] := __n44;
__n45 := [  ];
__n38["functionDeclarations"] := __n45;
__n38["codeType"] := "function";
__n38["strict"] := false;
__n36["body"] := __n38;
__n36["generator"] := false;
__n36["async"] := false;
__n36["expression"] := false;
__n34["value"] := __n36;
__n34["computed"] := false;
__n34["kind"] := "set";
__n34["shorthand"] := false;
__n46 := {  };
__n46["type"] := "Property";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "NaN";
__n46["key"] := __n47;
__n48 := {  };
__n48["type"] := "FunctionExpression";
__n48["id"] := null;
__n49 := [  ];
__n48["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ReturnStatement";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "NaN";
__n53["raw"] := "'NaN'";
__n52["argument"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n54 := [  ];
__n50["variableDeclarations"] := __n54;
__n55 := [  ];
__n50["functionDeclarations"] := __n55;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n48["body"] := __n50;
__n48["generator"] := false;
__n48["async"] := false;
__n48["expression"] := false;
__n46["value"] := __n48;
__n46["computed"] := false;
__n46["kind"] := "get";
__n46["shorthand"] := false;
__n56 := {  };
__n56["type"] := "Property";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "Infinity";
__n56["key"] := __n57;
__n58 := {  };
__n58["type"] := "FunctionExpression";
__n58["id"] := null;
__n59 := [ "value" ];
__n58["params"] := __n59;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "AssignmentExpression";
__n63["operator"] := "=";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "test";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "Infinity";
__n65["raw"] := "'Infinity'";
__n63["right"] := __n65;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n66 := [  ];
__n60["variableDeclarations"] := __n66;
__n67 := [  ];
__n60["functionDeclarations"] := __n67;
__n60["codeType"] := "function";
__n60["strict"] := false;
__n58["body"] := __n60;
__n58["generator"] := false;
__n58["async"] := false;
__n58["expression"] := false;
__n56["value"] := __n58;
__n56["computed"] := false;
__n56["kind"] := "set";
__n56["shorthand"] := false;
__n68 := {  };
__n68["type"] := "Property";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "Infinity";
__n68["key"] := __n69;
__n70 := {  };
__n70["type"] := "FunctionExpression";
__n70["id"] := null;
__n71 := [  ];
__n70["params"] := __n71;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ReturnStatement";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "Infinity";
__n75["raw"] := "'Infinity'";
__n74["argument"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n76 := [  ];
__n72["variableDeclarations"] := __n76;
__n77 := [  ];
__n72["functionDeclarations"] := __n77;
__n72["codeType"] := "function";
__n72["strict"] := false;
__n70["body"] := __n72;
__n70["generator"] := false;
__n70["async"] := false;
__n70["expression"] := false;
__n68["value"] := __n70;
__n68["computed"] := false;
__n68["kind"] := "get";
__n68["shorthand"] := false;
__n11 := [ __n12, __n24, __n34, __n46, __n56, __n68 ];
__n10["properties"] := __n11;
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n78 := {  };
__n78["type"] := "VariableDeclaration";
__n80 := {  };
__n80["type"] := "VariableDeclarator";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "arr";
__n80["id"] := __n81;
__n82 := {  };
__n82["type"] := "ArrayExpression";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "undefined";
__n84["raw"] := "'undefined'";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "NaN";
__n85["raw"] := "'NaN'";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "Infinity";
__n86["raw"] := "'Infinity'";
__n83 := [ __n84, __n85, __n86 ];
__n82["elements"] := __n83;
__n80["init"] := __n82;
__n79 := [ __n80 ];
__n78["declarations"] := __n79;
__n78["kind"] := "var";
__n87 := {  };
__n87["type"] := "ForStatement";
__n88 := {  };
__n88["type"] := "VariableDeclaration";
__n90 := {  };
__n90["type"] := "VariableDeclarator";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "i";
__n90["id"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 0.;
__n92["raw"] := "0";
__n90["init"] := __n92;
__n89 := [ __n90 ];
__n88["declarations"] := __n89;
__n88["kind"] := "var";
__n87["init"] := __n88;
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "<";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "i";
__n93["left"] := __n94;
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "arr";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "length";
__n97["raw"] := "\"length\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n93["right"] := __n95;
__n87["test"] := __n93;
__n98 := {  };
__n98["type"] := "UpdateExpression";
__n98["operator"] := "++";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "i";
__n98["argument"] := __n99;
__n98["prefix"] := true;
__n87["update"] := __n98;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "VariableDeclaration";
__n104 := {  };
__n104["type"] := "VariableDeclarator";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "propertyName";
__n104["id"] := __n105;
__n106 := {  };
__n106["type"] := "MemberExpression";
__n106["computed"] := true;
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "arr";
__n106["object"] := __n107;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "i";
__n106["property"] := __n108;
__n104["init"] := __n106;
__n103 := [ __n104 ];
__n102["declarations"] := __n103;
__n102["kind"] := "var";
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "assert";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "MemberExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "tokenCodes";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "hasOwnProperty";
__n116["raw"] := "\"hasOwnProperty\"";
__n114["property"] := __n116;
__n114["computed"] := true;
__n113["callee"] := __n114;
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "propertyName";
__n117 := [ __n118 ];
__n113["arguments"] := __n117;
__n119 := {  };
__n119["type"] := "BinaryExpression";
__n119["operator"] := "+";
__n120 := {  };
__n120["type"] := "BinaryExpression";
__n120["operator"] := "+";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "Property \"";
__n121["raw"] := "'Property \"'";
__n120["left"] := __n121;
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "propertyName";
__n120["right"] := __n122;
__n119["left"] := __n120;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "\" found";
__n123["raw"] := "'\" found'";
__n119["right"] := __n123;
__n112 := [ __n113, __n119 ];
__n110["arguments"] := __n112;
__n109["expression"] := __n110;
__n124 := {  };
__n124["type"] := "ExpressionStatement";
__n125 := {  };
__n125["type"] := "CallExpression";
__n126 := {  };
__n126["type"] := "MemberExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "assert";
__n126["object"] := __n127;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := "sameValue";
__n128["raw"] := "\"sameValue\"";
__n126["property"] := __n128;
__n126["computed"] := true;
__n125["callee"] := __n126;
__n130 := {  };
__n130["type"] := "MemberExpression";
__n130["computed"] := true;
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "tokenCodes";
__n130["object"] := __n131;
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "propertyName";
__n130["property"] := __n132;
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "propertyName";
__n134 := {  };
__n134["type"] := "BinaryExpression";
__n134["operator"] := "+";
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "+";
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "Property \"";
__n136["raw"] := "'Property \"'";
__n135["left"] := __n136;
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "propertyName";
__n135["right"] := __n137;
__n134["left"] := __n135;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := "\" has correct value";
__n138["raw"] := "'\" has correct value'";
__n134["right"] := __n138;
__n129 := [ __n130, __n133, __n134 ];
__n125["arguments"] := __n129;
__n124["expression"] := __n125;
__n139 := {  };
__n139["type"] := "ExpressionStatement";
__n140 := {  };
__n140["type"] := "AssignmentExpression";
__n140["operator"] := "=";
__n141 := {  };
__n141["type"] := "MemberExpression";
__n141["computed"] := true;
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "tokenCodes";
__n141["object"] := __n142;
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "propertyName";
__n141["property"] := __n143;
__n140["left"] := __n141;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := 0.;
__n144["raw"] := "0";
__n140["right"] := __n144;
__n139["expression"] := __n140;
__n145 := {  };
__n145["type"] := "ExpressionStatement";
__n146 := {  };
__n146["type"] := "CallExpression";
__n147 := {  };
__n147["type"] := "MemberExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "assert";
__n147["object"] := __n148;
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := "sameValue";
__n149["raw"] := "\"sameValue\"";
__n147["property"] := __n149;
__n147["computed"] := true;
__n146["callee"] := __n147;
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "test";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "propertyName";
__n153 := {  };
__n153["type"] := "BinaryExpression";
__n153["operator"] := "+";
__n154 := {  };
__n154["type"] := "BinaryExpression";
__n154["operator"] := "+";
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := "Property \"";
__n155["raw"] := "'Property \"'";
__n154["left"] := __n155;
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "propertyName";
__n154["right"] := __n156;
__n153["left"] := __n154;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := "\" sets correct value";
__n157["raw"] := "'\" sets correct value'";
__n153["right"] := __n157;
__n150 := [ __n151, __n152, __n153 ];
__n146["arguments"] := __n150;
__n145["expression"] := __n146;
__n101 := [ __n102, __n109, __n124, __n139, __n145 ];
__n100["body"] := __n101;
__n87["body"] := __n100;
__n1 := [ __n2, __n6, __n78, __n87 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n158 := [ "test", "tokenCodes", "arr", "i", "propertyName" ];
__n0["variableDeclarations"] := __n158;
__n159 := [  ];
__n0["functionDeclarations"] := __n159;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}