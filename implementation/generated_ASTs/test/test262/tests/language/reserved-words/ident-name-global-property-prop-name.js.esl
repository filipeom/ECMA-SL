function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "tokenCodes";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "undefined";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "undefined";
__n10["raw"] := "'undefined'";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n11 := {  };
__n11["type"] := "Property";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "NaN";
__n11["key"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "NaN";
__n13["raw"] := "'NaN'";
__n11["value"] := __n13;
__n11["computed"] := false;
__n11["kind"] := "init";
__n11["shorthand"] := false;
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Infinity";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "Infinity";
__n16["raw"] := "'Infinity'";
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n7 := [ __n8, __n11, __n14 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "arr";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "ArrayExpression";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "undefined";
__n23["raw"] := "'undefined'";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "NaN";
__n24["raw"] := "'NaN'";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "Infinity";
__n25["raw"] := "'Infinity'";
__n22 := [ __n23, __n24, __n25 ];
__n21["elements"] := __n22;
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n26 := {  };
__n26["type"] := "ForStatement";
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "i";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 0.;
__n31["raw"] := "0";
__n29["init"] := __n31;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n26["init"] := __n27;
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "<";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "i";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "arr";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "length";
__n36["raw"] := "\"length\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n32["right"] := __n34;
__n26["test"] := __n32;
__n37 := {  };
__n37["type"] := "UpdateExpression";
__n37["operator"] := "++";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "i";
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n26["update"] := __n37;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "VariableDeclaration";
__n43 := {  };
__n43["type"] := "VariableDeclarator";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "propertyName";
__n43["id"] := __n44;
__n45 := {  };
__n45["type"] := "MemberExpression";
__n45["computed"] := true;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "arr";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "i";
__n45["property"] := __n47;
__n43["init"] := __n45;
__n42 := [ __n43 ];
__n41["declarations"] := __n42;
__n41["kind"] := "var";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "assert";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "tokenCodes";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "hasOwnProperty";
__n55["raw"] := "\"hasOwnProperty\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "propertyName";
__n56 := [ __n57 ];
__n52["arguments"] := __n56;
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "+";
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "+";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "Property \"";
__n60["raw"] := "'Property \"'";
__n59["left"] := __n60;
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "propertyName";
__n59["right"] := __n61;
__n58["left"] := __n59;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "\" found";
__n62["raw"] := "'\" found'";
__n58["right"] := __n62;
__n51 := [ __n52, __n58 ];
__n49["arguments"] := __n51;
__n48["expression"] := __n49;
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "MemberExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "assert";
__n65["object"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "sameValue";
__n67["raw"] := "\"sameValue\"";
__n65["property"] := __n67;
__n65["computed"] := true;
__n64["callee"] := __n65;
__n69 := {  };
__n69["type"] := "MemberExpression";
__n69["computed"] := true;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "tokenCodes";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "propertyName";
__n69["property"] := __n71;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "propertyName";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "+";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "+";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "Property \"";
__n75["raw"] := "'Property \"'";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "propertyName";
__n74["right"] := __n76;
__n73["left"] := __n74;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "\" has correct value";
__n77["raw"] := "'\" has correct value'";
__n73["right"] := __n77;
__n68 := [ __n69, __n72, __n73 ];
__n64["arguments"] := __n68;
__n63["expression"] := __n64;
__n40 := [ __n41, __n48, __n63 ];
__n39["body"] := __n40;
__n26["body"] := __n39;
__n1 := [ __n2, __n17, __n26 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n78 := [ "tokenCodes", "arr", "i", "propertyName" ];
__n0["variableDeclarations"] := __n78;
__n79 := [  ];
__n0["functionDeclarations"] := __n79;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}