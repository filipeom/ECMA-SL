function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "BlockStatement";
__n4 := {  };
__n4["type"] := "LabeledStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "length";
__n4["label"] := __n5;
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 3000.;
__n7["raw"] := "3000";
__n6["expression"] := __n7;
__n4["body"] := __n6;
__n3 := [ __n4 ];
__n2["body"] := __n3;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "LabeledStatement";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "x";
__n10["label"] := __n11;
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 42.;
__n13["raw"] := "42";
__n12["expression"] := __n13;
__n10["body"] := __n12;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n14 := {  };
__n14["type"] := "EmptyStatement";
__n15 := {  };
__n15["type"] := "EmptyStatement";
__n1 := [ __n2, __n8, __n14, __n15 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n16 := [  ];
__n0["variableDeclarations"] := __n16;
__n17 := [  ];
__n0["functionDeclarations"] := __n17;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}