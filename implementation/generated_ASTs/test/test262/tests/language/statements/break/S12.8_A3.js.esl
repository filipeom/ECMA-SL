function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "LabeledStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "LABEL_OUT";
__n2["label"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "x";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 0.;
__n8["raw"] := "0";
__n6["init"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "y";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 0.;
__n11["raw"] := "0";
__n9["init"] := __n11;
__n5 := [ __n6, __n9 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n2["body"] := __n4;
__n12 := {  };
__n12["type"] := "LabeledStatement";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "LABEL_DO_LOOP";
__n12["label"] := __n13;
__n14 := {  };
__n14["type"] := "DoWhileStatement";
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "LabeledStatement";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "LABEL_IN";
__n17["label"] := __n18;
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "AssignmentExpression";
__n20["operator"] := "=";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "x";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 2.;
__n22["raw"] := "2";
__n20["right"] := __n22;
__n19["expression"] := __n20;
__n17["body"] := __n19;
__n23 := {  };
__n23["type"] := "BreakStatement";
__n23["label"] := null;
__n24 := {  };
__n24["type"] := "LabeledStatement";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "LABEL_IN_2";
__n24["label"] := __n25;
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "y";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 2.;
__n30["raw"] := "2";
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n24["body"] := __n26;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "IN_DO_FUNC";
__n31["expression"] := __n32;
__n16 := [ __n17, __n23, __n24, __n31 ];
__n15["body"] := __n16;
__n14["body"] := __n15;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n14["test"] := __n33;
__n12["body"] := __n14;
__n34 := {  };
__n34["type"] := "LabeledStatement";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "LABEL_ANOTHER_LOOP";
__n34["label"] := __n35;
__n36 := {  };
__n36["type"] := "DoWhileStatement";
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "EmptyStatement";
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n36["body"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 0.;
__n40["raw"] := "0";
__n36["test"] := __n40;
__n34["body"] := __n36;
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "OUT_FUNC";
__n41["expression"] := __n42;
__n43 := {  };
__n43["type"] := "IfStatement";
__n44 := {  };
__n44["type"] := "LogicalExpression";
__n44["operator"] := "&&";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "x";
__n45["left"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 2.;
__n47["raw"] := "2";
__n45["right"] := __n47;
__n44["left"] := __n45;
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "!==";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "y";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 0.;
__n50["raw"] := "0";
__n48["right"] := __n50;
__n44["right"] := __n48;
__n43["test"] := __n44;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "$ERROR";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "+";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "+";
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "+";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "#1: x === 2 and y === 0. Actual:  x ===";
__n60["raw"] := "'#1: x === 2 and y === 0. Actual:  x ==='";
__n59["left"] := __n60;
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "x";
__n59["right"] := __n61;
__n58["left"] := __n59;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := " and y ===";
__n62["raw"] := "' and y ==='";
__n58["right"] := __n62;
__n57["left"] := __n58;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "y";
__n57["right"] := __n63;
__n56 := [ __n57 ];
__n54["arguments"] := __n56;
__n53["expression"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n43["consequent"] := __n51;
__n43["alternate"] := null;
__n1 := [ __n2, __n12, __n34, __n41, __n43 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n64 := [ "x", "y" ];
__n0["variableDeclarations"] := __n64;
__n66 := {  };
__n66["type"] := "FunctionDeclaration";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "IN_DO_FUNC";
__n66["id"] := __n67;
__n68 := [  ];
__n66["params"] := __n68;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n70 := [  ];
__n69["body"] := __n70;
__n71 := [  ];
__n69["variableDeclarations"] := __n71;
__n72 := [  ];
__n69["functionDeclarations"] := __n72;
__n69["codeType"] := "function";
__n69["strict"] := false;
__n66["body"] := __n69;
__n66["generator"] := false;
__n66["async"] := false;
__n66["expression"] := false;
__n73 := {  };
__n73["type"] := "FunctionDeclaration";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "OUT_FUNC";
__n73["id"] := __n74;
__n75 := [  ];
__n73["params"] := __n75;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n77 := [  ];
__n76["body"] := __n77;
__n78 := [  ];
__n76["variableDeclarations"] := __n78;
__n79 := [  ];
__n76["functionDeclarations"] := __n79;
__n76["codeType"] := "function";
__n76["strict"] := false;
__n73["body"] := __n76;
__n73["generator"] := false;
__n73["async"] := false;
__n73["expression"] := false;
__n65 := [ __n66, __n73 ];
__n0["functionDeclarations"] := __n65;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}