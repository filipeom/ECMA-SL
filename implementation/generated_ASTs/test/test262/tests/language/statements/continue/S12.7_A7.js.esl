function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "y";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0";
__n7["init"] := __n9;
__n3 := [ __n4, __n7 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "TryStatement";
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "LabeledStatement";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "LABEL1";
__n13["label"] := __n14;
__n15 := {  };
__n15["type"] := "DoWhileStatement";
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "UpdateExpression";
__n19["operator"] := "++";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "x";
__n19["argument"] := __n20;
__n19["prefix"] := false;
__n18["expression"] := __n19;
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "eval";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "continue LABEL1";
__n25["raw"] := "\"continue LABEL1\"";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "UpdateExpression";
__n27["operator"] := "++";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "y";
__n27["argument"] := __n28;
__n27["prefix"] := false;
__n26["expression"] := __n27;
__n17 := [ __n18, __n21, __n26 ];
__n16["body"] := __n17;
__n15["body"] := __n16;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 0.;
__n29["raw"] := "0";
__n15["test"] := __n29;
__n13["body"] := __n15;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "$ERROR";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "#1: eval(\"continue LABEL1\") does not lead to throwing exception";
__n34["raw"] := "'#1: eval(\"continue LABEL1\") does not lead to throwing exception'";
__n33 := [ __n34 ];
__n31["arguments"] := __n33;
__n30["expression"] := __n31;
__n12 := [ __n13, __n30 ];
__n11["body"] := __n12;
__n10["block"] := __n11;
__n35 := {  };
__n35["type"] := "CatchClause";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "e";
__n35["param"] := __n36;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "IfStatement";
__n40 := {  };
__n40["type"] := "UnaryExpression";
__n40["operator"] := "!";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "instanceof";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "e";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "SyntaxError";
__n41["right"] := __n43;
__n40["argument"] := __n41;
__n40["prefix"] := true;
__n39["test"] := __n40;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$ERROR";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "1.1: Appearing of continue within eval statement inside of IterationStatement yields SyntaxError";
__n50["raw"] := "\"1.1: Appearing of continue within eval statement inside of IterationStatement yields SyntaxError\"";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n39["consequent"] := __n44;
__n39["alternate"] := null;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n35["body"] := __n37;
__n10["handler"] := __n35;
__n10["finalizer"] := null;
__n1 := [ __n2, __n10 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n51 := [ "x", "y" ];
__n0["variableDeclarations"] := __n51;
__n52 := [  ];
__n0["functionDeclarations"] := __n52;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}