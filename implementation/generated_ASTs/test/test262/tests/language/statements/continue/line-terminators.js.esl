function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "LabeledStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "FOR1";
__n2["label"] := __n3;
__n4 := {  };
__n4["type"] := "ForStatement";
__n5 := {  };
__n5["type"] := "VariableDeclaration";
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "i";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n7["init"] := __n9;
__n6 := [ __n7 ];
__n5["declarations"] := __n6;
__n5["kind"] := "var";
__n4["init"] := __n5;
__n10 := {  };
__n10["type"] := "BinaryExpression";
__n10["operator"] := "<";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "i";
__n10["left"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 2.;
__n12["raw"] := "2";
__n10["right"] := __n12;
__n4["test"] := __n10;
__n13 := {  };
__n13["type"] := "UpdateExpression";
__n13["operator"] := "++";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "i";
__n13["argument"] := __n14;
__n13["prefix"] := false;
__n4["update"] := __n13;
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "LabeledStatement";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "FOR1NESTED";
__n17["label"] := __n18;
__n19 := {  };
__n19["type"] := "ForStatement";
__n20 := {  };
__n20["type"] := "VariableDeclaration";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "j";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 1.;
__n24["raw"] := "1";
__n22["init"] := __n24;
__n21 := [ __n22 ];
__n20["declarations"] := __n21;
__n20["kind"] := "var";
__n19["init"] := __n20;
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "<";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "j";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 2.;
__n27["raw"] := "2";
__n25["right"] := __n27;
__n19["test"] := __n25;
__n28 := {  };
__n28["type"] := "UpdateExpression";
__n28["operator"] := "++";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "j";
__n28["argument"] := __n29;
__n28["prefix"] := false;
__n19["update"] := __n28;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ContinueStatement";
__n32["label"] := null;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "FOR1";
__n33["expression"] := __n34;
__n31 := [ __n32, __n33 ];
__n30["body"] := __n31;
__n19["body"] := __n30;
__n17["body"] := __n19;
__n35 := {  };
__n35["type"] := "WhileStatement";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 0.;
__n36["raw"] := "0";
__n35["test"] := __n36;
__n37 := {  };
__n37["type"] := "EmptyStatement";
__n35["body"] := __n37;
__n16 := [ __n17, __n35 ];
__n15["body"] := __n16;
__n4["body"] := __n15;
__n2["body"] := __n4;
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "assert";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "sameValue";
__n42["raw"] := "\"sameValue\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "j";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 2.;
__n45["raw"] := "2";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "#1: Since LineTerminator(U-000A) between continue and Identifier not allowed continue evaluates without label";
__n46["raw"] := "'#1: Since LineTerminator(U-000A) between continue and Identifier not allowed continue evaluates without label'";
__n43 := [ __n44, __n45, __n46 ];
__n39["arguments"] := __n43;
__n38["expression"] := __n39;
__n47 := {  };
__n47["type"] := "LabeledStatement";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "FOR2";
__n47["label"] := __n48;
__n49 := {  };
__n49["type"] := "ForStatement";
__n50 := {  };
__n50["type"] := "VariableDeclaration";
__n52 := {  };
__n52["type"] := "VariableDeclarator";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "i";
__n52["id"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 1.;
__n54["raw"] := "1";
__n52["init"] := __n54;
__n51 := [ __n52 ];
__n50["declarations"] := __n51;
__n50["kind"] := "var";
__n49["init"] := __n50;
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "<";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "i";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 2.;
__n57["raw"] := "2";
__n55["right"] := __n57;
__n49["test"] := __n55;
__n58 := {  };
__n58["type"] := "UpdateExpression";
__n58["operator"] := "++";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "i";
__n58["argument"] := __n59;
__n58["prefix"] := false;
__n49["update"] := __n58;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "LabeledStatement";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "FOR2NESTED";
__n62["label"] := __n63;
__n64 := {  };
__n64["type"] := "ForStatement";
__n65 := {  };
__n65["type"] := "VariableDeclaration";
__n67 := {  };
__n67["type"] := "VariableDeclarator";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "j";
__n67["id"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 1.;
__n69["raw"] := "1";
__n67["init"] := __n69;
__n66 := [ __n67 ];
__n65["declarations"] := __n66;
__n65["kind"] := "var";
__n64["init"] := __n65;
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "<";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "j";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 2.;
__n72["raw"] := "2";
__n70["right"] := __n72;
__n64["test"] := __n70;
__n73 := {  };
__n73["type"] := "UpdateExpression";
__n73["operator"] := "++";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "j";
__n73["argument"] := __n74;
__n73["prefix"] := false;
__n64["update"] := __n73;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ContinueStatement";
__n77["label"] := null;
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "FOR2";
__n78["expression"] := __n79;
__n76 := [ __n77, __n78 ];
__n75["body"] := __n76;
__n64["body"] := __n75;
__n62["body"] := __n64;
__n80 := {  };
__n80["type"] := "WhileStatement";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 0.;
__n81["raw"] := "0";
__n80["test"] := __n81;
__n82 := {  };
__n82["type"] := "EmptyStatement";
__n80["body"] := __n82;
__n61 := [ __n62, __n80 ];
__n60["body"] := __n61;
__n49["body"] := __n60;
__n47["body"] := __n49;
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "assert";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "sameValue";
__n87["raw"] := "\"sameValue\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n84["callee"] := __n85;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "j";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 2.;
__n90["raw"] := "2";
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "#2: Since LineTerminator(U-000D) between continue and Identifier not allowed continue evaluates without label";
__n91["raw"] := "'#2: Since LineTerminator(U-000D) between continue and Identifier not allowed continue evaluates without label'";
__n88 := [ __n89, __n90, __n91 ];
__n84["arguments"] := __n88;
__n83["expression"] := __n84;
__n92 := {  };
__n92["type"] := "LabeledStatement";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "FOR3";
__n92["label"] := __n93;
__n94 := {  };
__n94["type"] := "ForStatement";
__n95 := {  };
__n95["type"] := "VariableDeclaration";
__n97 := {  };
__n97["type"] := "VariableDeclarator";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "i";
__n97["id"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 1.;
__n99["raw"] := "1";
__n97["init"] := __n99;
__n96 := [ __n97 ];
__n95["declarations"] := __n96;
__n95["kind"] := "var";
__n94["init"] := __n95;
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "<";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "i";
__n100["left"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 2.;
__n102["raw"] := "2";
__n100["right"] := __n102;
__n94["test"] := __n100;
__n103 := {  };
__n103["type"] := "UpdateExpression";
__n103["operator"] := "++";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "i";
__n103["argument"] := __n104;
__n103["prefix"] := false;
__n94["update"] := __n103;
__n105 := {  };
__n105["type"] := "BlockStatement";
__n107 := {  };
__n107["type"] := "LabeledStatement";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "FOR3NESTED";
__n107["label"] := __n108;
__n109 := {  };
__n109["type"] := "ForStatement";
__n110 := {  };
__n110["type"] := "VariableDeclaration";
__n112 := {  };
__n112["type"] := "VariableDeclarator";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "j";
__n112["id"] := __n113;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := 1.;
__n114["raw"] := "1";
__n112["init"] := __n114;
__n111 := [ __n112 ];
__n110["declarations"] := __n111;
__n110["kind"] := "var";
__n109["init"] := __n110;
__n115 := {  };
__n115["type"] := "BinaryExpression";
__n115["operator"] := "<";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "j";
__n115["left"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 2.;
__n117["raw"] := "2";
__n115["right"] := __n117;
__n109["test"] := __n115;
__n118 := {  };
__n118["type"] := "UpdateExpression";
__n118["operator"] := "++";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "j";
__n118["argument"] := __n119;
__n118["prefix"] := false;
__n109["update"] := __n118;
__n120 := {  };
__n120["type"] := "BlockStatement";
__n122 := {  };
__n122["type"] := "ContinueStatement";
__n122["label"] := null;
__n123 := {  };
__n123["type"] := "ExpressionStatement";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "FOR3";
__n123["expression"] := __n124;
__n121 := [ __n122, __n123 ];
__n120["body"] := __n121;
__n109["body"] := __n120;
__n107["body"] := __n109;
__n125 := {  };
__n125["type"] := "WhileStatement";
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := 0.;
__n126["raw"] := "0";
__n125["test"] := __n126;
__n127 := {  };
__n127["type"] := "EmptyStatement";
__n125["body"] := __n127;
__n106 := [ __n107, __n125 ];
__n105["body"] := __n106;
__n94["body"] := __n105;
__n92["body"] := __n94;
__n128 := {  };
__n128["type"] := "ExpressionStatement";
__n129 := {  };
__n129["type"] := "CallExpression";
__n130 := {  };
__n130["type"] := "MemberExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "assert";
__n130["object"] := __n131;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := "sameValue";
__n132["raw"] := "\"sameValue\"";
__n130["property"] := __n132;
__n130["computed"] := true;
__n129["callee"] := __n130;
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "j";
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := 2.;
__n135["raw"] := "2";
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "#3: Since LineTerminator(U-2028) between continue and Identifier not allowed continue evaluates without label";
__n136["raw"] := "'#3: Since LineTerminator(U-2028) between continue and Identifier not allowed continue evaluates without label'";
__n133 := [ __n134, __n135, __n136 ];
__n129["arguments"] := __n133;
__n128["expression"] := __n129;
__n137 := {  };
__n137["type"] := "LabeledStatement";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "FOR4";
__n137["label"] := __n138;
__n139 := {  };
__n139["type"] := "ForStatement";
__n140 := {  };
__n140["type"] := "VariableDeclaration";
__n142 := {  };
__n142["type"] := "VariableDeclarator";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "i";
__n142["id"] := __n143;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := 1.;
__n144["raw"] := "1";
__n142["init"] := __n144;
__n141 := [ __n142 ];
__n140["declarations"] := __n141;
__n140["kind"] := "var";
__n139["init"] := __n140;
__n145 := {  };
__n145["type"] := "BinaryExpression";
__n145["operator"] := "<";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "i";
__n145["left"] := __n146;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := 2.;
__n147["raw"] := "2";
__n145["right"] := __n147;
__n139["test"] := __n145;
__n148 := {  };
__n148["type"] := "UpdateExpression";
__n148["operator"] := "++";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "i";
__n148["argument"] := __n149;
__n148["prefix"] := false;
__n139["update"] := __n148;
__n150 := {  };
__n150["type"] := "BlockStatement";
__n152 := {  };
__n152["type"] := "LabeledStatement";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "FOR4NESTED";
__n152["label"] := __n153;
__n154 := {  };
__n154["type"] := "ForStatement";
__n155 := {  };
__n155["type"] := "VariableDeclaration";
__n157 := {  };
__n157["type"] := "VariableDeclarator";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "j";
__n157["id"] := __n158;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := 1.;
__n159["raw"] := "1";
__n157["init"] := __n159;
__n156 := [ __n157 ];
__n155["declarations"] := __n156;
__n155["kind"] := "var";
__n154["init"] := __n155;
__n160 := {  };
__n160["type"] := "BinaryExpression";
__n160["operator"] := "<";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "j";
__n160["left"] := __n161;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := 2.;
__n162["raw"] := "2";
__n160["right"] := __n162;
__n154["test"] := __n160;
__n163 := {  };
__n163["type"] := "UpdateExpression";
__n163["operator"] := "++";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "j";
__n163["argument"] := __n164;
__n163["prefix"] := false;
__n154["update"] := __n163;
__n165 := {  };
__n165["type"] := "BlockStatement";
__n167 := {  };
__n167["type"] := "ContinueStatement";
__n167["label"] := null;
__n168 := {  };
__n168["type"] := "ExpressionStatement";
__n169 := {  };
__n169["type"] := "Identifier";
__n169["name"] := "FOR4";
__n168["expression"] := __n169;
__n166 := [ __n167, __n168 ];
__n165["body"] := __n166;
__n154["body"] := __n165;
__n152["body"] := __n154;
__n170 := {  };
__n170["type"] := "WhileStatement";
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := 0.;
__n171["raw"] := "0";
__n170["test"] := __n171;
__n172 := {  };
__n172["type"] := "EmptyStatement";
__n170["body"] := __n172;
__n151 := [ __n152, __n170 ];
__n150["body"] := __n151;
__n139["body"] := __n150;
__n137["body"] := __n139;
__n173 := {  };
__n173["type"] := "ExpressionStatement";
__n174 := {  };
__n174["type"] := "CallExpression";
__n175 := {  };
__n175["type"] := "MemberExpression";
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "assert";
__n175["object"] := __n176;
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "sameValue";
__n177["raw"] := "\"sameValue\"";
__n175["property"] := __n177;
__n175["computed"] := true;
__n174["callee"] := __n175;
__n179 := {  };
__n179["type"] := "Identifier";
__n179["name"] := "j";
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := 2.;
__n180["raw"] := "2";
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := "#4: Since LineTerminator(U-2029) between continue and Identifier not allowed continue evaluates without label";
__n181["raw"] := "'#4: Since LineTerminator(U-2029) between continue and Identifier not allowed continue evaluates without label'";
__n178 := [ __n179, __n180, __n181 ];
__n174["arguments"] := __n178;
__n173["expression"] := __n174;
__n1 := [ __n2, __n38, __n47, __n83, __n92, __n128, __n137, __n173 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n182 := [ "i", "j" ];
__n0["variableDeclarations"] := __n182;
__n183 := [  ];
__n0["functionDeclarations"] := __n183;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}