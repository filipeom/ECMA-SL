function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "prop1";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "abc";
__n10["raw"] := "\"abc\"";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n11 := {  };
__n11["type"] := "Property";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "prop2";
__n11["key"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "bbc";
__n13["raw"] := "\"bbc\"";
__n11["value"] := __n13;
__n11["computed"] := false;
__n11["kind"] := "init";
__n11["shorthand"] := false;
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "prop3";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "cnn";
__n16["raw"] := "\"cnn\"";
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n7 := [ __n8, __n11, __n14 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "countProp1";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 0.;
__n21["raw"] := "0";
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n22 := {  };
__n22["type"] := "VariableDeclaration";
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "countProp2";
__n24["id"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 0.;
__n26["raw"] := "0";
__n24["init"] := __n26;
__n23 := [ __n24 ];
__n22["declarations"] := __n23;
__n22["kind"] := "var";
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "countProp3";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 0.;
__n31["raw"] := "0";
__n29["init"] := __n31;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n32 := {  };
__n32["type"] := "ForInStatement";
__n33 := {  };
__n33["type"] := "VariableDeclaration";
__n35 := {  };
__n35["type"] := "VariableDeclarator";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "p";
__n35["id"] := __n36;
__n35["init"] := null;
__n34 := [ __n35 ];
__n33["declarations"] := __n34;
__n33["kind"] := "var";
__n32["left"] := __n33;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "obj";
__n32["right"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "obj";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "hasOwnProperty";
__n44["raw"] := "\"hasOwnProperty\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["callee"] := __n42;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "p";
__n45 := [ __n46 ];
__n41["arguments"] := __n45;
__n40["test"] := __n41;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "IfStatement";
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "===";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "p";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "prop1";
__n52["raw"] := "\"prop1\"";
__n50["right"] := __n52;
__n49["test"] := __n50;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "UpdateExpression";
__n56["operator"] := "++";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "countProp1";
__n56["argument"] := __n57;
__n56["prefix"] := false;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n49["consequent"] := __n53;
__n49["alternate"] := null;
__n58 := {  };
__n58["type"] := "IfStatement";
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "===";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "p";
__n59["left"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "prop2";
__n61["raw"] := "\"prop2\"";
__n59["right"] := __n61;
__n58["test"] := __n59;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "UpdateExpression";
__n65["operator"] := "++";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "countProp2";
__n65["argument"] := __n66;
__n65["prefix"] := false;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n58["consequent"] := __n62;
__n58["alternate"] := null;
__n67 := {  };
__n67["type"] := "IfStatement";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "===";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "p";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "prop3";
__n70["raw"] := "\"prop3\"";
__n68["right"] := __n70;
__n67["test"] := __n68;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "UpdateExpression";
__n74["operator"] := "++";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "countProp3";
__n74["argument"] := __n75;
__n74["prefix"] := false;
__n73["expression"] := __n74;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n67["consequent"] := __n71;
__n67["alternate"] := null;
__n48 := [ __n49, __n58, __n67 ];
__n47["body"] := __n48;
__n40["consequent"] := __n47;
__n40["alternate"] := null;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n32["body"] := __n38;
__n32["each"] := false;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "MemberExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "assert";
__n78["object"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "sameValue";
__n80["raw"] := "\"sameValue\"";
__n78["property"] := __n80;
__n78["computed"] := true;
__n77["callee"] := __n78;
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "countProp1";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 1.;
__n83["raw"] := "1";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "countProp1";
__n84["raw"] := "'countProp1'";
__n81 := [ __n82, __n83, __n84 ];
__n77["arguments"] := __n81;
__n76["expression"] := __n77;
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "assert";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "sameValue";
__n89["raw"] := "\"sameValue\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n86["callee"] := __n87;
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "countProp2";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 1.;
__n92["raw"] := "1";
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "countProp2";
__n93["raw"] := "'countProp2'";
__n90 := [ __n91, __n92, __n93 ];
__n86["arguments"] := __n90;
__n85["expression"] := __n86;
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "assert";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "sameValue";
__n98["raw"] := "\"sameValue\"";
__n96["property"] := __n98;
__n96["computed"] := true;
__n95["callee"] := __n96;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "countProp3";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 1.;
__n101["raw"] := "1";
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "countProp3";
__n102["raw"] := "'countProp3'";
__n99 := [ __n100, __n101, __n102 ];
__n95["arguments"] := __n99;
__n94["expression"] := __n95;
__n1 := [ __n2, __n17, __n22, __n27, __n32, __n76, __n85, __n94 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n103 := [ "obj", "countProp1", "countProp2", "countProp3", "p" ];
__n0["variableDeclarations"] := __n103;
__n104 := [  ];
__n0["functionDeclarations"] := __n104;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}