function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "prop1";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "abc";
__n10["raw"] := "\"abc\"";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n11 := {  };
__n11["type"] := "Property";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "prop2";
__n11["key"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "bbc";
__n13["raw"] := "\"bbc\"";
__n11["value"] := __n13;
__n11["computed"] := false;
__n11["kind"] := "init";
__n11["shorthand"] := false;
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "prop3";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "cnn";
__n16["raw"] := "\"cnn\"";
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n7 := [ __n8, __n11, __n14 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "countProp1";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 0.;
__n21["raw"] := "0";
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n22 := {  };
__n22["type"] := "VariableDeclaration";
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "countProp2";
__n24["id"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 0.;
__n26["raw"] := "0";
__n24["init"] := __n26;
__n23 := [ __n24 ];
__n22["declarations"] := __n23;
__n22["kind"] := "var";
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "countProp3";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 0.;
__n31["raw"] := "0";
__n29["init"] := __n31;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n32 := {  };
__n32["type"] := "ForInStatement";
__n33 := {  };
__n33["type"] := "VariableDeclarator";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "p";
__n33["id"] := __n34;
__n33["init"] := null;
__n32["left"] := __n33;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "obj";
__n32["right"] := __n35;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "IfStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "obj";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "hasOwnProperty";
__n42["raw"] := "\"hasOwnProperty\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "p";
__n43 := [ __n44 ];
__n39["arguments"] := __n43;
__n38["test"] := __n39;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "IfStatement";
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "===";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "p";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "prop1";
__n50["raw"] := "\"prop1\"";
__n48["right"] := __n50;
__n47["test"] := __n48;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "UpdateExpression";
__n54["operator"] := "++";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "countProp1";
__n54["argument"] := __n55;
__n54["prefix"] := false;
__n53["expression"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n47["consequent"] := __n51;
__n47["alternate"] := null;
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "===";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "p";
__n57["left"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "prop2";
__n59["raw"] := "\"prop2\"";
__n57["right"] := __n59;
__n56["test"] := __n57;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "UpdateExpression";
__n63["operator"] := "++";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "countProp2";
__n63["argument"] := __n64;
__n63["prefix"] := false;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n56["consequent"] := __n60;
__n56["alternate"] := null;
__n65 := {  };
__n65["type"] := "IfStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "===";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "p";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "prop3";
__n68["raw"] := "\"prop3\"";
__n66["right"] := __n68;
__n65["test"] := __n66;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "UpdateExpression";
__n72["operator"] := "++";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "countProp3";
__n72["argument"] := __n73;
__n72["prefix"] := false;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n65["consequent"] := __n69;
__n65["alternate"] := null;
__n46 := [ __n47, __n56, __n65 ];
__n45["body"] := __n46;
__n38["consequent"] := __n45;
__n38["alternate"] := null;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n32["body"] := __n36;
__n32["each"] := false;
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "assert";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "sameValue";
__n78["raw"] := "\"sameValue\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["callee"] := __n76;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "countProp1";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 1.;
__n81["raw"] := "1";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "countProp1";
__n82["raw"] := "'countProp1'";
__n79 := [ __n80, __n81, __n82 ];
__n75["arguments"] := __n79;
__n74["expression"] := __n75;
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "assert";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "sameValue";
__n87["raw"] := "\"sameValue\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n84["callee"] := __n85;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "countProp2";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 1.;
__n90["raw"] := "1";
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "countProp2";
__n91["raw"] := "'countProp2'";
__n88 := [ __n89, __n90, __n91 ];
__n84["arguments"] := __n88;
__n83["expression"] := __n84;
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "MemberExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "assert";
__n94["object"] := __n95;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "sameValue";
__n96["raw"] := "\"sameValue\"";
__n94["property"] := __n96;
__n94["computed"] := true;
__n93["callee"] := __n94;
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "countProp3";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 1.;
__n99["raw"] := "1";
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "countProp3";
__n100["raw"] := "'countProp3'";
__n97 := [ __n98, __n99, __n100 ];
__n93["arguments"] := __n97;
__n92["expression"] := __n93;
__n1 := [ __n2, __n17, __n22, __n27, __n32, __n74, __n83, __n92 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n101 := [ "obj", "countProp1", "countProp2", "countProp3", "p" ];
__n0["variableDeclarations"] := __n101;
__n102 := [  ];
__n0["functionDeclarations"] := __n102;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}