function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__str";
__n4["id"] := __n5;
__n4["init"] := null;
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "__evaluated";
__n6["id"] := __n7;
__n6["init"] := null;
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "arr";
__n8["id"] := __n9;
__n8["init"] := null;
__n3 := [ __n4, __n6, __n8 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "AssignmentExpression";
__n11["operator"] := "=";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "__str";
__n11["left"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "";
__n13["raw"] := "\"\"";
__n11["right"] := __n13;
__n10["expression"] := __n11;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "AssignmentExpression";
__n15["operator"] := "=";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "__evaluated";
__n15["left"] := __n16;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "eval";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "for(var ind in (arr=[2,1,4,3]))__str+=arr[ind]";
__n20["raw"] := "\"for(var ind in (arr=[2,1,4,3]))__str+=arr[ind]\"";
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n15["right"] := __n17;
__n14["expression"] := __n15;
__n21 := {  };
__n21["type"] := "IfStatement";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "!==";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__evaluated";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "__str";
__n22["right"] := __n24;
__n21["test"] := __n22;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "$ERROR";
__n28["callee"] := __n29;
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "+";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "#1: __evaluated === __str. Actual:  __evaluated ===";
__n32["raw"] := "'#1: __evaluated === __str. Actual:  __evaluated ==='";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "__evaluated";
__n31["right"] := __n33;
__n30 := [ __n31 ];
__n28["arguments"] := __n30;
__n27["expression"] := __n28;
__n26 := [ __n27 ];
__n25["body"] := __n26;
__n21["consequent"] := __n25;
__n21["alternate"] := null;
__n34 := {  };
__n34["type"] := "IfStatement";
__n35 := {  };
__n35["type"] := "UnaryExpression";
__n35["operator"] := "!";
__n36 := {  };
__n36["type"] := "LogicalExpression";
__n36["operator"] := "&&";
__n37 := {  };
__n37["type"] := "LogicalExpression";
__n37["operator"] := "&&";
__n38 := {  };
__n38["type"] := "LogicalExpression";
__n38["operator"] := "&&";
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "!==";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "__str";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "indexOf";
__n43["raw"] := "\"indexOf\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "2";
__n45["raw"] := "\"2\"";
__n44 := [ __n45 ];
__n40["arguments"] := __n44;
__n39["left"] := __n40;
__n46 := {  };
__n46["type"] := "UnaryExpression";
__n46["operator"] := "-";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 1.;
__n47["raw"] := "1";
__n46["argument"] := __n47;
__n46["prefix"] := true;
__n39["right"] := __n46;
__n38["left"] := __n39;
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "!==";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "__str";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "indexOf";
__n52["raw"] := "\"indexOf\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "1";
__n54["raw"] := "\"1\"";
__n53 := [ __n54 ];
__n49["arguments"] := __n53;
__n48["left"] := __n49;
__n55 := {  };
__n55["type"] := "UnaryExpression";
__n55["operator"] := "-";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 1.;
__n56["raw"] := "1";
__n55["argument"] := __n56;
__n55["prefix"] := true;
__n48["right"] := __n55;
__n38["right"] := __n48;
__n37["left"] := __n38;
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "!==";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "__str";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "indexOf";
__n61["raw"] := "\"indexOf\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n58["callee"] := __n59;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "4";
__n63["raw"] := "\"4\"";
__n62 := [ __n63 ];
__n58["arguments"] := __n62;
__n57["left"] := __n58;
__n64 := {  };
__n64["type"] := "UnaryExpression";
__n64["operator"] := "-";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 1.;
__n65["raw"] := "1";
__n64["argument"] := __n65;
__n64["prefix"] := true;
__n57["right"] := __n64;
__n37["right"] := __n57;
__n36["left"] := __n37;
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "__str";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "indexOf";
__n70["raw"] := "\"indexOf\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "3";
__n72["raw"] := "\"3\"";
__n71 := [ __n72 ];
__n67["arguments"] := __n71;
__n66["left"] := __n67;
__n73 := {  };
__n73["type"] := "UnaryExpression";
__n73["operator"] := "-";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 1.;
__n74["raw"] := "1";
__n73["argument"] := __n74;
__n73["prefix"] := true;
__n66["right"] := __n73;
__n36["right"] := __n66;
__n35["argument"] := __n36;
__n35["prefix"] := true;
__n34["test"] := __n35;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "$ERROR";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "#2: (__str.indexOf(\"2\")!==-1)&&(__str.indexOf(\"1\")!==-1)&&(__str.indexOf(\"4\")!==-1)&&(__str.indexOf(\"3\")!==-1)";
__n81["raw"] := "'#2: (__str.indexOf(\"2\")!==-1)&&(__str.indexOf(\"1\")!==-1)&&(__str.indexOf(\"4\")!==-1)&&(__str.indexOf(\"3\")!==-1)'";
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n34["consequent"] := __n75;
__n34["alternate"] := null;
__n1 := [ __n2, __n10, __n14, __n21, __n34 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n82 := [ "__str", "__evaluated", "arr" ];
__n0["variableDeclarations"] := __n82;
__n83 := [  ];
__n0["functionDeclarations"] := __n83;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}