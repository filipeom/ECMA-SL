function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__str";
__n4["id"] := __n5;
__n4["init"] := null;
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "__evaluated";
__n6["id"] := __n7;
__n6["init"] := null;
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "hash";
__n8["id"] := __n9;
__n8["init"] := null;
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "ind";
__n10["id"] := __n11;
__n10["init"] := null;
__n3 := [ __n4, __n6, __n8, __n10 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "AssignmentExpression";
__n13["operator"] := "=";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "__str";
__n13["left"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "";
__n15["raw"] := "\"\"";
__n13["right"] := __n15;
__n12["expression"] := __n13;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "AssignmentExpression";
__n17["operator"] := "=";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "__evaluated";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "eval";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "for(ind in (hash={2:'b',1:'a',4:'d',3:'c'}))__str+=hash[ind]";
__n22["raw"] := "\"for(ind in (hash={2:'b',1:'a',4:'d',3:'c'}))__str+=hash[ind]\"";
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n17["right"] := __n19;
__n16["expression"] := __n17;
__n23 := {  };
__n23["type"] := "IfStatement";
__n24 := {  };
__n24["type"] := "UnaryExpression";
__n24["operator"] := "!";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "&";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "&";
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "&";
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "!==";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "__evaluated";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "indexOf";
__n32["raw"] := "\"indexOf\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "a";
__n34["raw"] := "\"a\"";
__n33 := [ __n34 ];
__n29["arguments"] := __n33;
__n28["left"] := __n29;
__n35 := {  };
__n35["type"] := "UnaryExpression";
__n35["operator"] := "-";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 1.;
__n36["raw"] := "1";
__n35["argument"] := __n36;
__n35["prefix"] := true;
__n28["right"] := __n35;
__n27["left"] := __n28;
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "!==";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "__evaluated";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "indexOf";
__n41["raw"] := "\"indexOf\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "b";
__n43["raw"] := "\"b\"";
__n42 := [ __n43 ];
__n38["arguments"] := __n42;
__n37["left"] := __n38;
__n44 := {  };
__n44["type"] := "UnaryExpression";
__n44["operator"] := "-";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 1.;
__n45["raw"] := "1";
__n44["argument"] := __n45;
__n44["prefix"] := true;
__n37["right"] := __n44;
__n27["right"] := __n37;
__n26["left"] := __n27;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "__evaluated";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "indexOf";
__n50["raw"] := "\"indexOf\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "c";
__n52["raw"] := "\"c\"";
__n51 := [ __n52 ];
__n47["arguments"] := __n51;
__n46["left"] := __n47;
__n53 := {  };
__n53["type"] := "UnaryExpression";
__n53["operator"] := "-";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 1.;
__n54["raw"] := "1";
__n53["argument"] := __n54;
__n53["prefix"] := true;
__n46["right"] := __n53;
__n26["right"] := __n46;
__n25["left"] := __n26;
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "__evaluated";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "indexOf";
__n59["raw"] := "\"indexOf\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "d";
__n61["raw"] := "\"d\"";
__n60 := [ __n61 ];
__n56["arguments"] := __n60;
__n55["left"] := __n56;
__n62 := {  };
__n62["type"] := "UnaryExpression";
__n62["operator"] := "-";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 1.;
__n63["raw"] := "1";
__n62["argument"] := __n63;
__n62["prefix"] := true;
__n55["right"] := __n62;
__n25["right"] := __n55;
__n24["argument"] := __n25;
__n24["prefix"] := true;
__n23["test"] := __n24;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$ERROR";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "#1: (__evaluated.indexOf(\"a\")!==-1)& (__evaluated.indexOf(\"b\")!==-1)& (__evaluated.indexOf(\"c\")!==-1)&(__evaluated.indexOf(\"d\")!==-1)";
__n70["raw"] := "'#1: (__evaluated.indexOf(\"a\")!==-1)& (__evaluated.indexOf(\"b\")!==-1)& (__evaluated.indexOf(\"c\")!==-1)&(__evaluated.indexOf(\"d\")!==-1)'";
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n23["consequent"] := __n64;
__n23["alternate"] := null;
__n71 := {  };
__n71["type"] := "IfStatement";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "!==";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "__str";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "__evaluated";
__n72["right"] := __n74;
__n71["test"] := __n72;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "$ERROR";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "+";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "#2: __str === __evaluated. Actual:  __str ===";
__n82["raw"] := "'#2: __str === __evaluated. Actual:  __str ==='";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "__str";
__n81["right"] := __n83;
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n71["consequent"] := __n75;
__n71["alternate"] := null;
__n1 := [ __n2, __n12, __n16, __n23, __n71 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n84 := [ "__str", "__evaluated", "hash", "ind" ];
__n0["variableDeclarations"] := __n84;
__n85 := [  ];
__n0["functionDeclarations"] := __n85;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}