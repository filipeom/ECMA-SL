function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__accum";
__n4["id"] := __n5;
__n4["init"] := null;
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "key";
__n6["id"] := __n7;
__n6["init"] := null;
__n3 := [ __n4, __n6 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "FACTORY";
__n8["expression"] := __n9;
__n10 := {  };
__n10["type"] := "EmptyStatement";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "AssignmentExpression";
__n12["operator"] := "=";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "FACTORY";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "prototype";
__n15["raw"] := "\"prototype\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["left"] := __n13;
__n16 := {  };
__n16["type"] := "ObjectExpression";
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "feat";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 2.;
__n20["raw"] := "2";
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "hint";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "protohint";
__n23["raw"] := "\"protohint\"";
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n17 := [ __n18, __n21 ];
__n16["properties"] := __n17;
__n12["right"] := __n16;
__n11["expression"] := __n12;
__n24 := {  };
__n24["type"] := "VariableDeclaration";
__n26 := {  };
__n26["type"] := "VariableDeclarator";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "__instance";
__n26["id"] := __n27;
__n28 := {  };
__n28["type"] := "NewExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "FACTORY";
__n28["callee"] := __n29;
__n30 := [  ];
__n28["arguments"] := __n30;
__n26["init"] := __n28;
__n25 := [ __n26 ];
__n24["declarations"] := __n25;
__n24["kind"] := "var";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "__accum";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "";
__n34["raw"] := "\"\"";
__n32["right"] := __n34;
__n31["expression"] := __n32;
__n35 := {  };
__n35["type"] := "ForInStatement";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "key";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "__instance";
__n35["right"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "AssignmentExpression";
__n41["operator"] := "+=";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "__accum";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "key";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "MemberExpression";
__n45["computed"] := true;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "__instance";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "key";
__n45["property"] := __n47;
__n43["right"] := __n45;
__n41["right"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n35["body"] := __n38;
__n35["each"] := false;
__n48 := {  };
__n48["type"] := "IfStatement";
__n49 := {  };
__n49["type"] := "UnaryExpression";
__n49["operator"] := "!";
__n50 := {  };
__n50["type"] := "LogicalExpression";
__n50["operator"] := "&&";
__n51 := {  };
__n51["type"] := "LogicalExpression";
__n51["operator"] := "&&";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "!==";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "__accum";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "indexOf";
__n56["raw"] := "\"indexOf\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["callee"] := __n54;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "prop1";
__n58["raw"] := "\"prop1\"";
__n57 := [ __n58 ];
__n53["arguments"] := __n57;
__n52["left"] := __n53;
__n59 := {  };
__n59["type"] := "UnaryExpression";
__n59["operator"] := "-";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 1.;
__n60["raw"] := "1";
__n59["argument"] := __n60;
__n59["prefix"] := true;
__n52["right"] := __n59;
__n51["left"] := __n52;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "!==";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "__accum";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "indexOf";
__n65["raw"] := "\"indexOf\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "feat2";
__n67["raw"] := "\"feat2\"";
__n66 := [ __n67 ];
__n62["arguments"] := __n66;
__n61["left"] := __n62;
__n68 := {  };
__n68["type"] := "UnaryExpression";
__n68["operator"] := "-";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 1.;
__n69["raw"] := "1";
__n68["argument"] := __n69;
__n68["prefix"] := true;
__n61["right"] := __n68;
__n51["right"] := __n61;
__n50["left"] := __n51;
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "!==";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "__accum";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "indexOf";
__n74["raw"] := "\"indexOf\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "hinthinted";
__n76["raw"] := "\"hinthinted\"";
__n75 := [ __n76 ];
__n71["arguments"] := __n75;
__n70["left"] := __n71;
__n77 := {  };
__n77["type"] := "UnaryExpression";
__n77["operator"] := "-";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 1.;
__n78["raw"] := "1";
__n77["argument"] := __n78;
__n77["prefix"] := true;
__n70["right"] := __n77;
__n50["right"] := __n70;
__n49["argument"] := __n50;
__n49["prefix"] := true;
__n48["test"] := __n49;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "$ERROR";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "#1: (__accum.indexOf(\"prop1\")!==-1)&&(__accum.indexOf(\"feat2\")!==-1)&&(__accum.indexOf(\"hinthinted\")!==-1)";
__n85["raw"] := "'#1: (__accum.indexOf(\"prop1\")!==-1)&&(__accum.indexOf(\"feat2\")!==-1)&&(__accum.indexOf(\"hinthinted\")!==-1)'";
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n48["consequent"] := __n79;
__n48["alternate"] := null;
__n86 := {  };
__n86["type"] := "IfStatement";
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "!==";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "__accum";
__n89["object"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "indexOf";
__n91["raw"] := "\"indexOf\"";
__n89["property"] := __n91;
__n89["computed"] := true;
__n88["callee"] := __n89;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "hintprotohint";
__n93["raw"] := "\"hintprotohint\"";
__n92 := [ __n93 ];
__n88["arguments"] := __n92;
__n87["left"] := __n88;
__n94 := {  };
__n94["type"] := "UnaryExpression";
__n94["operator"] := "-";
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 1.;
__n95["raw"] := "1";
__n94["argument"] := __n95;
__n94["prefix"] := true;
__n87["right"] := __n94;
__n86["test"] := __n87;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "$ERROR";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "+";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "#2: __accum.indexOf(\"hintprotohint\") === -1. Actual:  __accum.indexOf(\"hintprotohint\") ===";
__n103["raw"] := "'#2: __accum.indexOf(\"hintprotohint\") === -1. Actual:  __accum.indexOf(\"hintprotohint\") ==='";
__n102["left"] := __n103;
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "MemberExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "__accum";
__n105["object"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "indexOf";
__n107["raw"] := "\"indexOf\"";
__n105["property"] := __n107;
__n105["computed"] := true;
__n104["callee"] := __n105;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "hintprotohint";
__n109["raw"] := "\"hintprotohint\"";
__n108 := [ __n109 ];
__n104["arguments"] := __n108;
__n102["right"] := __n104;
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n86["consequent"] := __n96;
__n86["alternate"] := null;
__n1 := [ __n2, __n8, __n10, __n11, __n24, __n31, __n35, __n48, __n86 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n110 := [ "__accum", "key", "__instance" ];
__n0["variableDeclarations"] := __n110;
__n112 := {  };
__n112["type"] := "FunctionDeclaration";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "FACTORY";
__n112["id"] := __n113;
__n114 := [  ];
__n112["params"] := __n114;
__n115 := {  };
__n115["type"] := "BlockStatement";
__n117 := {  };
__n117["type"] := "ExpressionStatement";
__n118 := {  };
__n118["type"] := "AssignmentExpression";
__n118["operator"] := "=";
__n119 := {  };
__n119["type"] := "MemberExpression";
__n120 := {  };
__n120["type"] := "ThisExpression";
__n119["object"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "prop";
__n121["raw"] := "\"prop\"";
__n119["property"] := __n121;
__n119["computed"] := true;
__n118["left"] := __n119;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := 1.;
__n122["raw"] := "1";
__n118["right"] := __n122;
__n117["expression"] := __n118;
__n123 := {  };
__n123["type"] := "ExpressionStatement";
__n124 := {  };
__n124["type"] := "AssignmentExpression";
__n124["operator"] := "=";
__n125 := {  };
__n125["type"] := "MemberExpression";
__n126 := {  };
__n126["type"] := "ThisExpression";
__n125["object"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "hint";
__n127["raw"] := "\"hint\"";
__n125["property"] := __n127;
__n125["computed"] := true;
__n124["left"] := __n125;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := "hinted";
__n128["raw"] := "\"hinted\"";
__n124["right"] := __n128;
__n123["expression"] := __n124;
__n116 := [ __n117, __n123 ];
__n115["body"] := __n116;
__n129 := [  ];
__n115["variableDeclarations"] := __n129;
__n130 := [  ];
__n115["functionDeclarations"] := __n130;
__n115["codeType"] := "function";
__n115["strict"] := false;
__n112["body"] := __n115;
__n112["generator"] := false;
__n112["expression"] := false;
__n112["async"] := false;
__n111 := [ __n112 ];
__n0["functionDeclarations"] := __n111;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}