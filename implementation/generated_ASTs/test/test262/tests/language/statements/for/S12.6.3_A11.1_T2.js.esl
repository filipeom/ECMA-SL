function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__str";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "AssignmentExpression";
__n7["operator"] := "=";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "__str";
__n7["left"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "";
__n9["raw"] := "\"\"";
__n7["right"] := __n9;
__n6["expression"] := __n7;
__n10 := {  };
__n10["type"] := "LabeledStatement";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "outer";
__n10["label"] := __n11;
__n12 := {  };
__n12["type"] := "ForStatement";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "index";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n12["init"] := __n13;
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "<";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "index";
__n18["left"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 4.;
__n20["raw"] := "4";
__n18["right"] := __n20;
__n12["test"] := __n18;
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "+=";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "index";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 1.;
__n23["raw"] := "1";
__n21["right"] := __n23;
__n12["update"] := __n21;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "LabeledStatement";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "nested";
__n26["label"] := __n27;
__n28 := {  };
__n28["type"] := "ForStatement";
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "index_n";
__n31["id"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n31["init"] := __n33;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n28["init"] := __n29;
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "<=";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "index_n";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "index";
__n34["right"] := __n36;
__n28["test"] := __n34;
__n37 := {  };
__n37["type"] := "UpdateExpression";
__n37["operator"] := "++";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "index_n";
__n37["argument"] := __n38;
__n37["prefix"] := false;
__n28["update"] := __n37;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "IfStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "==";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "*";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "index";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "index_n";
__n43["right"] := __n45;
__n42["left"] := __n43;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 6.;
__n46["raw"] := "6";
__n42["right"] := __n46;
__n41["test"] := __n42;
__n47 := {  };
__n47["type"] := "ContinueStatement";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "nested";
__n47["label"] := __n48;
__n41["consequent"] := __n47;
__n41["alternate"] := null;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "AssignmentExpression";
__n50["operator"] := "+=";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "__str";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "+";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "";
__n54["raw"] := "\"\"";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "index";
__n53["right"] := __n55;
__n52["left"] := __n53;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "index_n";
__n52["right"] := __n56;
__n50["right"] := __n52;
__n49["expression"] := __n50;
__n40 := [ __n41, __n49 ];
__n39["body"] := __n40;
__n28["body"] := __n39;
__n26["body"] := __n28;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n12["body"] := __n24;
__n10["body"] := __n12;
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "__str";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "001011202122303133";
__n60["raw"] := "\"001011202122303133\"";
__n58["right"] := __n60;
__n57["test"] := __n58;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$ERROR";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "+";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "#1: __str === \"001011202122303133\". Actual:  __str ===";
__n68["raw"] := "'#1: __str === \"001011202122303133\". Actual:  __str ==='";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "__str";
__n67["right"] := __n69;
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n57["consequent"] := __n61;
__n57["alternate"] := null;
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "AssignmentExpression";
__n71["operator"] := "=";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "__str";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "";
__n73["raw"] := "\"\"";
__n71["right"] := __n73;
__n70["expression"] := __n71;
__n74 := {  };
__n74["type"] := "LabeledStatement";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "outer";
__n74["label"] := __n75;
__n76 := {  };
__n76["type"] := "ForStatement";
__n77 := {  };
__n77["type"] := "VariableDeclaration";
__n79 := {  };
__n79["type"] := "VariableDeclarator";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "index";
__n79["id"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 0.;
__n81["raw"] := "0";
__n79["init"] := __n81;
__n78 := [ __n79 ];
__n77["declarations"] := __n78;
__n77["kind"] := "var";
__n76["init"] := __n77;
__n82 := {  };
__n82["type"] := "BinaryExpression";
__n82["operator"] := "<";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "index";
__n82["left"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := 4.;
__n84["raw"] := "4";
__n82["right"] := __n84;
__n76["test"] := __n82;
__n85 := {  };
__n85["type"] := "AssignmentExpression";
__n85["operator"] := "+=";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "index";
__n85["left"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 1.;
__n87["raw"] := "1";
__n85["right"] := __n87;
__n76["update"] := __n85;
__n88 := {  };
__n88["type"] := "BlockStatement";
__n90 := {  };
__n90["type"] := "LabeledStatement";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "nested";
__n90["label"] := __n91;
__n92 := {  };
__n92["type"] := "ForStatement";
__n93 := {  };
__n93["type"] := "VariableDeclaration";
__n95 := {  };
__n95["type"] := "VariableDeclarator";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "index_n";
__n95["id"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 0.;
__n97["raw"] := "0";
__n95["init"] := __n97;
__n94 := [ __n95 ];
__n93["declarations"] := __n94;
__n93["kind"] := "var";
__n92["init"] := __n93;
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "<=";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "index_n";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "index";
__n98["right"] := __n100;
__n92["test"] := __n98;
__n101 := {  };
__n101["type"] := "UpdateExpression";
__n101["operator"] := "++";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "index_n";
__n101["argument"] := __n102;
__n101["prefix"] := false;
__n92["update"] := __n101;
__n103 := {  };
__n103["type"] := "BlockStatement";
__n105 := {  };
__n105["type"] := "IfStatement";
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "==";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "*";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "index";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "index_n";
__n107["right"] := __n109;
__n106["left"] := __n107;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 6.;
__n110["raw"] := "6";
__n106["right"] := __n110;
__n105["test"] := __n106;
__n111 := {  };
__n111["type"] := "ContinueStatement";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "outer";
__n111["label"] := __n112;
__n105["consequent"] := __n111;
__n105["alternate"] := null;
__n113 := {  };
__n113["type"] := "ExpressionStatement";
__n114 := {  };
__n114["type"] := "AssignmentExpression";
__n114["operator"] := "+=";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "__str";
__n114["left"] := __n115;
__n116 := {  };
__n116["type"] := "BinaryExpression";
__n116["operator"] := "+";
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "+";
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "";
__n118["raw"] := "\"\"";
__n117["left"] := __n118;
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "index";
__n117["right"] := __n119;
__n116["left"] := __n117;
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "index_n";
__n116["right"] := __n120;
__n114["right"] := __n116;
__n113["expression"] := __n114;
__n104 := [ __n105, __n113 ];
__n103["body"] := __n104;
__n92["body"] := __n103;
__n90["body"] := __n92;
__n89 := [ __n90 ];
__n88["body"] := __n89;
__n76["body"] := __n88;
__n74["body"] := __n76;
__n121 := {  };
__n121["type"] := "IfStatement";
__n122 := {  };
__n122["type"] := "BinaryExpression";
__n122["operator"] := "!==";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "__str";
__n122["left"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "0010112021223031";
__n124["raw"] := "\"0010112021223031\"";
__n122["right"] := __n124;
__n121["test"] := __n122;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "$ERROR";
__n128["callee"] := __n129;
__n131 := {  };
__n131["type"] := "BinaryExpression";
__n131["operator"] := "+";
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := "#2: __str === \"0010112021223031\". Actual:  __str ===";
__n132["raw"] := "'#2: __str === \"0010112021223031\". Actual:  __str ==='";
__n131["left"] := __n132;
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "__str";
__n131["right"] := __n133;
__n130 := [ __n131 ];
__n128["arguments"] := __n130;
__n127["expression"] := __n128;
__n126 := [ __n127 ];
__n125["body"] := __n126;
__n121["consequent"] := __n125;
__n121["alternate"] := null;
__n134 := {  };
__n134["type"] := "ExpressionStatement";
__n135 := {  };
__n135["type"] := "AssignmentExpression";
__n135["operator"] := "=";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "__str";
__n135["left"] := __n136;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "";
__n137["raw"] := "\"\"";
__n135["right"] := __n137;
__n134["expression"] := __n135;
__n138 := {  };
__n138["type"] := "LabeledStatement";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "outer";
__n138["label"] := __n139;
__n140 := {  };
__n140["type"] := "ForStatement";
__n141 := {  };
__n141["type"] := "VariableDeclaration";
__n143 := {  };
__n143["type"] := "VariableDeclarator";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "index";
__n143["id"] := __n144;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := 0.;
__n145["raw"] := "0";
__n143["init"] := __n145;
__n142 := [ __n143 ];
__n141["declarations"] := __n142;
__n141["kind"] := "var";
__n140["init"] := __n141;
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "<";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "index";
__n146["left"] := __n147;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := 4.;
__n148["raw"] := "4";
__n146["right"] := __n148;
__n140["test"] := __n146;
__n149 := {  };
__n149["type"] := "AssignmentExpression";
__n149["operator"] := "+=";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "index";
__n149["left"] := __n150;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := 1.;
__n151["raw"] := "1";
__n149["right"] := __n151;
__n140["update"] := __n149;
__n152 := {  };
__n152["type"] := "BlockStatement";
__n154 := {  };
__n154["type"] := "LabeledStatement";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "nested";
__n154["label"] := __n155;
__n156 := {  };
__n156["type"] := "ForStatement";
__n157 := {  };
__n157["type"] := "VariableDeclaration";
__n159 := {  };
__n159["type"] := "VariableDeclarator";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "index_n";
__n159["id"] := __n160;
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := 0.;
__n161["raw"] := "0";
__n159["init"] := __n161;
__n158 := [ __n159 ];
__n157["declarations"] := __n158;
__n157["kind"] := "var";
__n156["init"] := __n157;
__n162 := {  };
__n162["type"] := "BinaryExpression";
__n162["operator"] := "<=";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "index_n";
__n162["left"] := __n163;
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "index";
__n162["right"] := __n164;
__n156["test"] := __n162;
__n165 := {  };
__n165["type"] := "UpdateExpression";
__n165["operator"] := "++";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "index_n";
__n165["argument"] := __n166;
__n165["prefix"] := false;
__n156["update"] := __n165;
__n167 := {  };
__n167["type"] := "BlockStatement";
__n169 := {  };
__n169["type"] := "IfStatement";
__n170 := {  };
__n170["type"] := "BinaryExpression";
__n170["operator"] := "==";
__n171 := {  };
__n171["type"] := "BinaryExpression";
__n171["operator"] := "*";
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "index";
__n171["left"] := __n172;
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "index_n";
__n171["right"] := __n173;
__n170["left"] := __n171;
__n174 := {  };
__n174["type"] := "Literal";
__n174["value"] := 6.;
__n174["raw"] := "6";
__n170["right"] := __n174;
__n169["test"] := __n170;
__n175 := {  };
__n175["type"] := "ContinueStatement";
__n175["label"] := null;
__n169["consequent"] := __n175;
__n169["alternate"] := null;
__n176 := {  };
__n176["type"] := "ExpressionStatement";
__n177 := {  };
__n177["type"] := "AssignmentExpression";
__n177["operator"] := "+=";
__n178 := {  };
__n178["type"] := "Identifier";
__n178["name"] := "__str";
__n177["left"] := __n178;
__n179 := {  };
__n179["type"] := "BinaryExpression";
__n179["operator"] := "+";
__n180 := {  };
__n180["type"] := "BinaryExpression";
__n180["operator"] := "+";
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := "";
__n181["raw"] := "\"\"";
__n180["left"] := __n181;
__n182 := {  };
__n182["type"] := "Identifier";
__n182["name"] := "index";
__n180["right"] := __n182;
__n179["left"] := __n180;
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "index_n";
__n179["right"] := __n183;
__n177["right"] := __n179;
__n176["expression"] := __n177;
__n168 := [ __n169, __n176 ];
__n167["body"] := __n168;
__n156["body"] := __n167;
__n154["body"] := __n156;
__n153 := [ __n154 ];
__n152["body"] := __n153;
__n140["body"] := __n152;
__n138["body"] := __n140;
__n184 := {  };
__n184["type"] := "IfStatement";
__n185 := {  };
__n185["type"] := "BinaryExpression";
__n185["operator"] := "!==";
__n186 := {  };
__n186["type"] := "Identifier";
__n186["name"] := "__str";
__n185["left"] := __n186;
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := "001011202122303133";
__n187["raw"] := "\"001011202122303133\"";
__n185["right"] := __n187;
__n184["test"] := __n185;
__n188 := {  };
__n188["type"] := "BlockStatement";
__n190 := {  };
__n190["type"] := "ExpressionStatement";
__n191 := {  };
__n191["type"] := "CallExpression";
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "$ERROR";
__n191["callee"] := __n192;
__n194 := {  };
__n194["type"] := "BinaryExpression";
__n194["operator"] := "+";
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "#3: __str === \"001011202122303133\". Actual:  __str ===";
__n195["raw"] := "'#3: __str === \"001011202122303133\". Actual:  __str ==='";
__n194["left"] := __n195;
__n196 := {  };
__n196["type"] := "Identifier";
__n196["name"] := "__str";
__n194["right"] := __n196;
__n193 := [ __n194 ];
__n191["arguments"] := __n193;
__n190["expression"] := __n191;
__n189 := [ __n190 ];
__n188["body"] := __n189;
__n184["consequent"] := __n188;
__n184["alternate"] := null;
__n1 := [ __n2, __n6, __n10, __n57, __n70, __n74, __n121, __n134, __n138, __n184 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n197 := [ "__str", "index", "index_n" ];
__n0["variableDeclarations"] := __n197;
__n198 := [  ];
__n0["functionDeclarations"] := __n198;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}