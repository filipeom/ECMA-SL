function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__str";
__n4["id"] := __n5;
__n4["init"] := null;
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "index";
__n6["id"] := __n7;
__n6["init"] := null;
__n3 := [ __n4, __n6 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "__str";
__n9["left"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "";
__n11["raw"] := "\"\"";
__n9["right"] := __n11;
__n8["expression"] := __n9;
__n12 := {  };
__n12["type"] := "ForStatement";
__n13 := {  };
__n13["type"] := "AssignmentExpression";
__n13["operator"] := "=";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "index";
__n13["left"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 0.;
__n15["raw"] := "0";
__n13["right"] := __n15;
__n12["init"] := __n13;
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "<";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "index";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 10.;
__n18["raw"] := "10";
__n16["right"] := __n18;
__n12["test"] := __n16;
__n19 := {  };
__n19["type"] := "AssignmentExpression";
__n19["operator"] := "+=";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "index";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 1.;
__n21["raw"] := "1";
__n19["right"] := __n21;
__n12["update"] := __n19;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "IfStatement";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := ">";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "index";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 5.;
__n27["raw"] := "5";
__n25["right"] := __n27;
__n24["test"] := __n25;
__n28 := {  };
__n28["type"] := "BreakStatement";
__n28["label"] := null;
__n24["consequent"] := __n28;
__n24["alternate"] := null;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "AssignmentExpression";
__n30["operator"] := "+=";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "__str";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "index";
__n30["right"] := __n32;
__n29["expression"] := __n30;
__n23 := [ __n24, __n29 ];
__n22["body"] := __n23;
__n12["body"] := __n22;
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "!==";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "__str";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "012345";
__n36["raw"] := "\"012345\"";
__n34["right"] := __n36;
__n33["test"] := __n34;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$ERROR";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "#1:__str === \"012345\". Actual: __str ===";
__n44["raw"] := "'#1:__str === \"012345\". Actual: __str ==='";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "__str";
__n43["right"] := __n45;
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n33["consequent"] := __n37;
__n33["alternate"] := null;
__n1 := [ __n2, __n8, __n12, __n33 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n46 := [ "__str", "index" ];
__n0["variableDeclarations"] := __n46;
__n47 := [  ];
__n0["functionDeclarations"] := __n47;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}