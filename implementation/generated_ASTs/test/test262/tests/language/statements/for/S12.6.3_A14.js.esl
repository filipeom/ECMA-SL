function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ForStatement";
__n3 := {  };
__n3["type"] := "VariableDeclaration";
__n5 := {  };
__n5["type"] := "VariableDeclarator";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "i";
__n5["id"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 0.;
__n7["raw"] := "0";
__n5["init"] := __n7;
__n4 := [ __n5 ];
__n3["declarations"] := __n4;
__n3["kind"] := "var";
__n2["init"] := __n3;
__n8 := {  };
__n8["type"] := "BinaryExpression";
__n8["operator"] := "<";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "i";
__n8["left"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 10.;
__n10["raw"] := "10";
__n8["right"] := __n10;
__n2["test"] := __n8;
__n11 := {  };
__n11["type"] := "UpdateExpression";
__n11["operator"] := "++";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "i";
__n11["argument"] := __n12;
__n11["prefix"] := false;
__n2["update"] := __n11;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n14 := [  ];
__n13["body"] := __n14;
__n2["body"] := __n13;
__n15 := {  };
__n15["type"] := "IfStatement";
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "!==";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "i";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 10.;
__n18["raw"] := "10";
__n16["right"] := __n18;
__n15["test"] := __n16;
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "$ERROR";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "+";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "#1: i === 10. Actual:  i ===";
__n24["raw"] := "'#1: i === 10. Actual:  i ==='";
__n23["left"] := __n24;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "i";
__n23["right"] := __n25;
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n19["expression"] := __n20;
__n15["consequent"] := __n19;
__n15["alternate"] := null;
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "j";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 0.;
__n30["raw"] := "0";
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n31 := {  };
__n31["type"] := "ForStatement";
__n32 := {  };
__n32["type"] := "VariableDeclaration";
__n34 := {  };
__n34["type"] := "VariableDeclarator";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "i";
__n34["id"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 1.;
__n36["raw"] := "1";
__n34["init"] := __n36;
__n33 := [ __n34 ];
__n32["declarations"] := __n33;
__n32["kind"] := "var";
__n31["init"] := __n32;
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "<";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "i";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 10.;
__n39["raw"] := "10";
__n37["right"] := __n39;
__n31["test"] := __n37;
__n40 := {  };
__n40["type"] := "AssignmentExpression";
__n40["operator"] := "*=";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "i";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 2.;
__n42["raw"] := "2";
__n40["right"] := __n42;
__n31["update"] := __n40;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "UpdateExpression";
__n46["operator"] := "++";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "j";
__n46["argument"] := __n47;
__n46["prefix"] := false;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n31["body"] := __n43;
__n48 := {  };
__n48["type"] := "IfStatement";
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "!==";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "i";
__n49["left"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 16.;
__n51["raw"] := "16";
__n49["right"] := __n51;
__n48["test"] := __n49;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "$ERROR";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "+";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "#2.1: i === 16. Actual:  i ===";
__n57["raw"] := "'#2.1: i === 16. Actual:  i ==='";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "i";
__n56["right"] := __n58;
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n48["consequent"] := __n52;
__n48["alternate"] := null;
__n59 := {  };
__n59["type"] := "IfStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "!==";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "j";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 4.;
__n62["raw"] := "4";
__n60["right"] := __n62;
__n59["test"] := __n60;
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$ERROR";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "+";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "#2.2: j === 4. Actual:  j ===";
__n68["raw"] := "'#2.2: j === 4. Actual:  j ==='";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "j";
__n67["right"] := __n69;
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n59["consequent"] := __n63;
__n59["alternate"] := null;
__n70 := {  };
__n70["type"] := "VariableDeclaration";
__n72 := {  };
__n72["type"] := "VariableDeclarator";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "j";
__n72["id"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 0.;
__n74["raw"] := "0";
__n72["init"] := __n74;
__n71 := [ __n72 ];
__n70["declarations"] := __n71;
__n70["kind"] := "var";
__n75 := {  };
__n75["type"] := "ForStatement";
__n76 := {  };
__n76["type"] := "VariableDeclaration";
__n78 := {  };
__n78["type"] := "VariableDeclarator";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "i";
__n78["id"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 16.;
__n80["raw"] := "16";
__n78["init"] := __n80;
__n77 := [ __n78 ];
__n76["declarations"] := __n77;
__n76["kind"] := "var";
__n75["init"] := __n76;
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := ">";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "i";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 1.;
__n83["raw"] := "1";
__n81["right"] := __n83;
__n75["test"] := __n81;
__n84 := {  };
__n84["type"] := "AssignmentExpression";
__n84["operator"] := "=";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "i";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "/";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "i";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 2.;
__n88["raw"] := "2";
__n86["right"] := __n88;
__n84["right"] := __n86;
__n75["update"] := __n84;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "UpdateExpression";
__n92["operator"] := "++";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "j";
__n92["argument"] := __n93;
__n92["prefix"] := false;
__n91["expression"] := __n92;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n75["body"] := __n89;
__n94 := {  };
__n94["type"] := "IfStatement";
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "!==";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "i";
__n95["left"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 1.;
__n97["raw"] := "1";
__n95["right"] := __n97;
__n94["test"] := __n95;
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "$ERROR";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "+";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "#3.1: i === 1. Actual:  i ===";
__n103["raw"] := "'#3.1: i === 1. Actual:  i ==='";
__n102["left"] := __n103;
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "i";
__n102["right"] := __n104;
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["expression"] := __n99;
__n94["consequent"] := __n98;
__n94["alternate"] := null;
__n105 := {  };
__n105["type"] := "IfStatement";
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "!==";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "j";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := 4.;
__n108["raw"] := "4";
__n106["right"] := __n108;
__n105["test"] := __n106;
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "$ERROR";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := "+";
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "#3.2: j === 4. Actual:  j ===";
__n114["raw"] := "'#3.2: j === 4. Actual:  j ==='";
__n113["left"] := __n114;
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "j";
__n113["right"] := __n115;
__n112 := [ __n113 ];
__n110["arguments"] := __n112;
__n109["expression"] := __n110;
__n105["consequent"] := __n109;
__n105["alternate"] := null;
__n116 := {  };
__n116["type"] := "VariableDeclaration";
__n118 := {  };
__n118["type"] := "VariableDeclarator";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "j";
__n118["id"] := __n119;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := 0.;
__n120["raw"] := "0";
__n118["init"] := __n120;
__n117 := [ __n118 ];
__n116["declarations"] := __n117;
__n116["kind"] := "var";
__n121 := {  };
__n121["type"] := "ForStatement";
__n122 := {  };
__n122["type"] := "VariableDeclaration";
__n124 := {  };
__n124["type"] := "VariableDeclarator";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "i";
__n124["id"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := 10.;
__n126["raw"] := "10";
__n124["init"] := __n126;
__n123 := [ __n124 ];
__n122["declarations"] := __n123;
__n122["kind"] := "var";
__n121["init"] := __n122;
__n127 := {  };
__n127["type"] := "BinaryExpression";
__n127["operator"] := ">";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "i";
__n127["left"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := 1.;
__n129["raw"] := "1";
__n127["right"] := __n129;
__n121["test"] := __n127;
__n130 := {  };
__n130["type"] := "UpdateExpression";
__n130["operator"] := "--";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "i";
__n130["argument"] := __n131;
__n130["prefix"] := false;
__n121["update"] := __n130;
__n132 := {  };
__n132["type"] := "BlockStatement";
__n134 := {  };
__n134["type"] := "ExpressionStatement";
__n135 := {  };
__n135["type"] := "UpdateExpression";
__n135["operator"] := "++";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "j";
__n135["argument"] := __n136;
__n135["prefix"] := false;
__n134["expression"] := __n135;
__n133 := [ __n134 ];
__n132["body"] := __n133;
__n121["body"] := __n132;
__n137 := {  };
__n137["type"] := "IfStatement";
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "!==";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "i";
__n138["left"] := __n139;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := 1.;
__n140["raw"] := "1";
__n138["right"] := __n140;
__n137["test"] := __n138;
__n141 := {  };
__n141["type"] := "ExpressionStatement";
__n142 := {  };
__n142["type"] := "CallExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "$ERROR";
__n142["callee"] := __n143;
__n145 := {  };
__n145["type"] := "BinaryExpression";
__n145["operator"] := "+";
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := "#4.1: i === 1. Actual:  i ===";
__n146["raw"] := "'#4.1: i === 1. Actual:  i ==='";
__n145["left"] := __n146;
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "i";
__n145["right"] := __n147;
__n144 := [ __n145 ];
__n142["arguments"] := __n144;
__n141["expression"] := __n142;
__n137["consequent"] := __n141;
__n137["alternate"] := null;
__n148 := {  };
__n148["type"] := "IfStatement";
__n149 := {  };
__n149["type"] := "BinaryExpression";
__n149["operator"] := "!==";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "j";
__n149["left"] := __n150;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := 9.;
__n151["raw"] := "9";
__n149["right"] := __n151;
__n148["test"] := __n149;
__n152 := {  };
__n152["type"] := "ExpressionStatement";
__n153 := {  };
__n153["type"] := "CallExpression";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "$ERROR";
__n153["callee"] := __n154;
__n156 := {  };
__n156["type"] := "BinaryExpression";
__n156["operator"] := "+";
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := "#4.2: j === 9. Actual:  j ===";
__n157["raw"] := "'#4.2: j === 9. Actual:  j ==='";
__n156["left"] := __n157;
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "j";
__n156["right"] := __n158;
__n155 := [ __n156 ];
__n153["arguments"] := __n155;
__n152["expression"] := __n153;
__n148["consequent"] := __n152;
__n148["alternate"] := null;
__n159 := {  };
__n159["type"] := "VariableDeclaration";
__n161 := {  };
__n161["type"] := "VariableDeclarator";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "j";
__n161["id"] := __n162;
__n163 := {  };
__n163["type"] := "Literal";
__n163["value"] := 0.;
__n163["raw"] := "0";
__n161["init"] := __n163;
__n160 := [ __n161 ];
__n159["declarations"] := __n160;
__n159["kind"] := "var";
__n164 := {  };
__n164["type"] := "ForStatement";
__n165 := {  };
__n165["type"] := "VariableDeclaration";
__n167 := {  };
__n167["type"] := "VariableDeclarator";
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "i";
__n167["id"] := __n168;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := 2.;
__n169["raw"] := "2";
__n167["init"] := __n169;
__n166 := [ __n167 ];
__n165["declarations"] := __n166;
__n165["kind"] := "var";
__n164["init"] := __n165;
__n170 := {  };
__n170["type"] := "BinaryExpression";
__n170["operator"] := "<";
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "i";
__n170["left"] := __n171;
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := 10.;
__n172["raw"] := "10";
__n170["right"] := __n172;
__n164["test"] := __n170;
__n173 := {  };
__n173["type"] := "AssignmentExpression";
__n173["operator"] := "*=";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "i";
__n173["left"] := __n174;
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "i";
__n173["right"] := __n175;
__n164["update"] := __n173;
__n176 := {  };
__n176["type"] := "BlockStatement";
__n178 := {  };
__n178["type"] := "ExpressionStatement";
__n179 := {  };
__n179["type"] := "UpdateExpression";
__n179["operator"] := "++";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "j";
__n179["argument"] := __n180;
__n179["prefix"] := false;
__n178["expression"] := __n179;
__n177 := [ __n178 ];
__n176["body"] := __n177;
__n164["body"] := __n176;
__n181 := {  };
__n181["type"] := "IfStatement";
__n182 := {  };
__n182["type"] := "BinaryExpression";
__n182["operator"] := "!==";
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "i";
__n182["left"] := __n183;
__n184 := {  };
__n184["type"] := "Literal";
__n184["value"] := 16.;
__n184["raw"] := "16";
__n182["right"] := __n184;
__n181["test"] := __n182;
__n185 := {  };
__n185["type"] := "ExpressionStatement";
__n186 := {  };
__n186["type"] := "CallExpression";
__n187 := {  };
__n187["type"] := "Identifier";
__n187["name"] := "$ERROR";
__n186["callee"] := __n187;
__n189 := {  };
__n189["type"] := "BinaryExpression";
__n189["operator"] := "+";
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := "#5.1: i === 16. Actual:  i ===";
__n190["raw"] := "'#5.1: i === 16. Actual:  i ==='";
__n189["left"] := __n190;
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "i";
__n189["right"] := __n191;
__n188 := [ __n189 ];
__n186["arguments"] := __n188;
__n185["expression"] := __n186;
__n181["consequent"] := __n185;
__n181["alternate"] := null;
__n192 := {  };
__n192["type"] := "IfStatement";
__n193 := {  };
__n193["type"] := "BinaryExpression";
__n193["operator"] := "!==";
__n194 := {  };
__n194["type"] := "Identifier";
__n194["name"] := "j";
__n193["left"] := __n194;
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := 2.;
__n195["raw"] := "2";
__n193["right"] := __n195;
__n192["test"] := __n193;
__n196 := {  };
__n196["type"] := "ExpressionStatement";
__n197 := {  };
__n197["type"] := "CallExpression";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "$ERROR";
__n197["callee"] := __n198;
__n200 := {  };
__n200["type"] := "BinaryExpression";
__n200["operator"] := "+";
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := "#5.2: j === 2. Actual:  j ===";
__n201["raw"] := "'#5.2: j === 2. Actual:  j ==='";
__n200["left"] := __n201;
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "j";
__n200["right"] := __n202;
__n199 := [ __n200 ];
__n197["arguments"] := __n199;
__n196["expression"] := __n197;
__n192["consequent"] := __n196;
__n192["alternate"] := null;
__n1 := [ __n2, __n15, __n26, __n31, __n48, __n59, __n70, __n75, __n94, __n105, __n116, __n121, __n137, __n148, __n159, __n164, __n181, __n192 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n203 := [ "i", "j" ];
__n0["variableDeclarations"] := __n203;
__n204 := [  ];
__n0["functionDeclarations"] := __n204;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}