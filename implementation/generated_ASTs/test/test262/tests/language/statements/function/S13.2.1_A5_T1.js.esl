function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__arr";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 4.;
__n8["raw"] := "4";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 3.;
__n9["raw"] := "3";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 2.;
__n10["raw"] := "2";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 1.;
__n11["raw"] := "1";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 4.;
__n12["raw"] := "4";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 3.;
__n13["raw"] := "3";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 2.;
__n14["raw"] := "2";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 4.;
__n16["raw"] := "4";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 3.;
__n17["raw"] := "3";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 2.;
__n18["raw"] := "2";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n7 := [ __n8, __n9, __n10, __n11, __n12, __n13, __n14, __n15, __n16, __n17, __n18, __n19 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__arr";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "sort";
__n24["raw"] := "\"sort\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "FunctionExpression";
__n26["id"] := null;
__n27 := [ "x", "y" ];
__n26["params"] := __n27;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "IfStatement";
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := ">";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "x";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "y";
__n31["right"] := __n33;
__n30["test"] := __n31;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ReturnStatement";
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "-";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 1.;
__n38["raw"] := "1";
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n36["argument"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n30["consequent"] := __n34;
__n30["alternate"] := null;
__n39 := {  };
__n39["type"] := "IfStatement";
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "<";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "x";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "y";
__n40["right"] := __n42;
__n39["test"] := __n40;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ReturnStatement";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 1.;
__n46["raw"] := "1";
__n45["argument"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n39["consequent"] := __n43;
__n39["alternate"] := null;
__n47 := {  };
__n47["type"] := "IfStatement";
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "==";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "x";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "y";
__n48["right"] := __n50;
__n47["test"] := __n48;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ReturnStatement";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 0.;
__n54["raw"] := "0";
__n53["argument"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n47["consequent"] := __n51;
__n47["alternate"] := null;
__n29 := [ __n30, __n39, __n47 ];
__n28["body"] := __n29;
__n55 := [  ];
__n28["variableDeclarations"] := __n55;
__n56 := [  ];
__n28["functionDeclarations"] := __n56;
__n28["codeType"] := "function";
__n28["strict"] := false;
__n26["body"] := __n28;
__n26["generator"] := false;
__n26["async"] := false;
__n26["expression"] := false;
__n25 := [ __n26 ];
__n21["arguments"] := __n25;
__n20["expression"] := __n21;
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "__arr";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "toString";
__n62["raw"] := "\"toString\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n63 := [  ];
__n59["arguments"] := __n63;
__n58["left"] := __n59;
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "MemberExpression";
__n66 := {  };
__n66["type"] := "ArrayExpression";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 4.;
__n68["raw"] := "4";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 4.;
__n69["raw"] := "4";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 4.;
__n70["raw"] := "4";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 3.;
__n71["raw"] := "3";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 3.;
__n72["raw"] := "3";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 3.;
__n73["raw"] := "3";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 2.;
__n74["raw"] := "2";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 2.;
__n75["raw"] := "2";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 2.;
__n76["raw"] := "2";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 1.;
__n77["raw"] := "1";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 1.;
__n78["raw"] := "1";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 1.;
__n79["raw"] := "1";
__n67 := [ __n68, __n69, __n70, __n71, __n72, __n73, __n74, __n75, __n76, __n77, __n78, __n79 ];
__n66["elements"] := __n67;
__n65["object"] := __n66;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "toString";
__n80["raw"] := "\"toString\"";
__n65["property"] := __n80;
__n65["computed"] := true;
__n64["callee"] := __n65;
__n81 := [  ];
__n64["arguments"] := __n81;
__n58["right"] := __n64;
__n57["test"] := __n58;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$ERROR";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "+";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "#1: __arr.toString() === [4,4,4,3,3,3,2,2,2,1,1,1].toString(). Actual: __arr.toString() ===";
__n89["raw"] := "'#1: __arr.toString() === [4,4,4,3,3,3,2,2,2,1,1,1].toString(). Actual: __arr.toString() ==='";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "__arr";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "toString";
__n93["raw"] := "\"toString\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n90["callee"] := __n91;
__n94 := [  ];
__n90["arguments"] := __n94;
__n88["right"] := __n90;
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n57["consequent"] := __n82;
__n57["alternate"] := null;
__n1 := [ __n2, __n20, __n57 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n95 := [ "__arr" ];
__n0["variableDeclarations"] := __n95;
__n96 := [  ];
__n0["functionDeclarations"] := __n96;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}