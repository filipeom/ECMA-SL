function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__func";
__n4["id"] := __n5;
__n4["init"] := null;
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "y";
__n6["id"] := __n7;
__n6["init"] := null;
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "b";
__n8["id"] := __n9;
__n8["init"] := null;
__n3 := [ __n4, __n6, __n8 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "__func";
__n10["expression"] := __n11;
__n12 := {  };
__n12["type"] := "EmptyStatement";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "x";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 1.;
__n17["raw"] := "1";
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "AssignmentExpression";
__n19["operator"] := "=";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "y";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 2.;
__n21["raw"] := "2";
__n19["right"] := __n21;
__n18["expression"] := __n19;
__n22 := {  };
__n22["type"] := "VariableDeclaration";
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "a";
__n24["id"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "AB";
__n26["raw"] := "\"AB\"";
__n24["init"] := __n26;
__n23 := [ __n24 ];
__n22["declarations"] := __n23;
__n22["kind"] := "var";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "AssignmentExpression";
__n28["operator"] := "=";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "b";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "SAM";
__n30["raw"] := "\"SAM\"";
__n28["right"] := __n30;
__n27["expression"] := __n28;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "__func";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "x";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "a";
__n34 := [ __n35, __n36 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "__func";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "y";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "b";
__n40 := [ __n41, __n42 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n43 := {  };
__n43["type"] := "IfStatement";
__n44 := {  };
__n44["type"] := "LogicalExpression";
__n44["operator"] := "||";
__n45 := {  };
__n45["type"] := "LogicalExpression";
__n45["operator"] := "||";
__n46 := {  };
__n46["type"] := "LogicalExpression";
__n46["operator"] := "||";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "!==";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "x";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.;
__n49["raw"] := "1";
__n47["right"] := __n49;
__n46["left"] := __n47;
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "!==";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "y";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 2.;
__n52["raw"] := "2";
__n50["right"] := __n52;
__n46["right"] := __n50;
__n45["left"] := __n46;
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "!==";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "a";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "AB";
__n55["raw"] := "\"AB\"";
__n53["right"] := __n55;
__n45["right"] := __n53;
__n44["left"] := __n45;
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "!==";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "b";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "SAM";
__n58["raw"] := "\"SAM\"";
__n56["right"] := __n58;
__n44["right"] := __n56;
__n43["test"] := __n44;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "+";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "+";
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "+";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "+";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "+";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "+";
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "+";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "#1: x === 1 and y === 2 and a === \"AB\" and b === \"SAM\". Actual: x ===";
__n72["raw"] := "'#1: x === 1 and y === 2 and a === \"AB\" and b === \"SAM\". Actual: x ==='";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "x";
__n71["right"] := __n73;
__n70["left"] := __n71;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := " and y ===";
__n74["raw"] := "' and y ==='";
__n70["right"] := __n74;
__n69["left"] := __n70;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "y";
__n69["right"] := __n75;
__n68["left"] := __n69;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := " and a ===";
__n76["raw"] := "' and a ==='";
__n68["right"] := __n76;
__n67["left"] := __n68;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "a";
__n67["right"] := __n77;
__n66["left"] := __n67;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := " and b ===";
__n78["raw"] := "' and b ==='";
__n66["right"] := __n78;
__n65["left"] := __n66;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "b";
__n65["right"] := __n79;
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n43["consequent"] := __n59;
__n43["alternate"] := null;
__n1 := [ __n2, __n10, __n12, __n13, __n18, __n22, __n27, __n31, __n37, __n43 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n80 := [ "__func", "y", "b", "x", "a" ];
__n0["variableDeclarations"] := __n80;
__n82 := {  };
__n82["type"] := "FunctionDeclaration";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "__func";
__n82["id"] := __n83;
__n84 := [ "arg1", "arg2" ];
__n82["params"] := __n84;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "UpdateExpression";
__n88["operator"] := "++";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "arg1";
__n88["argument"] := __n89;
__n88["prefix"] := false;
__n87["expression"] := __n88;
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "AssignmentExpression";
__n91["operator"] := "+=";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "arg2";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "BA";
__n93["raw"] := "\"BA\"";
__n91["right"] := __n93;
__n90["expression"] := __n91;
__n86 := [ __n87, __n90 ];
__n85["body"] := __n86;
__n94 := [  ];
__n85["variableDeclarations"] := __n94;
__n95 := [  ];
__n85["functionDeclarations"] := __n95;
__n85["codeType"] := "function";
__n85["strict"] := false;
__n82["body"] := __n85;
__n82["generator"] := false;
__n82["expression"] := false;
__n82["async"] := false;
__n81 := [ __n82 ];
__n0["functionDeclarations"] := __n81;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}