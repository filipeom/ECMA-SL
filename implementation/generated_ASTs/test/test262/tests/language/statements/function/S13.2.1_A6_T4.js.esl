function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__func";
__n4["id"] := __n5;
__n4["init"] := null;
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "y";
__n6["id"] := __n7;
__n6["init"] := null;
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "b";
__n8["id"] := __n9;
__n8["init"] := null;
__n3 := [ __n4, __n6, __n8 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "AssignmentExpression";
__n11["operator"] := "=";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "__func";
__n11["left"] := __n12;
__n13 := {  };
__n13["type"] := "FunctionExpression";
__n13["id"] := null;
__n14 := [ "arg1", "arg2" ];
__n13["params"] := __n14;
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "UpdateExpression";
__n18["operator"] := "++";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "arg1";
__n18["argument"] := __n19;
__n18["prefix"] := false;
__n17["expression"] := __n18;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "+=";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "arg2";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "BA";
__n23["raw"] := "\"BA\"";
__n21["right"] := __n23;
__n20["expression"] := __n21;
__n16 := [ __n17, __n20 ];
__n15["body"] := __n16;
__n24 := [  ];
__n15["variableDeclarations"] := __n24;
__n25 := [  ];
__n15["functionDeclarations"] := __n25;
__n15["codeType"] := "function";
__n15["strict"] := false;
__n13["body"] := __n15;
__n13["generator"] := false;
__n13["expression"] := false;
__n13["async"] := false;
__n11["right"] := __n13;
__n10["expression"] := __n11;
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "x";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 1.;
__n30["raw"] := "1";
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "y";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 2.;
__n34["raw"] := "2";
__n32["right"] := __n34;
__n31["expression"] := __n32;
__n35 := {  };
__n35["type"] := "VariableDeclaration";
__n37 := {  };
__n37["type"] := "VariableDeclarator";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "a";
__n37["id"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "AB";
__n39["raw"] := "\"AB\"";
__n37["init"] := __n39;
__n36 := [ __n37 ];
__n35["declarations"] := __n36;
__n35["kind"] := "var";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "AssignmentExpression";
__n41["operator"] := "=";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "b";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "SAM";
__n43["raw"] := "\"SAM\"";
__n41["right"] := __n43;
__n40["expression"] := __n41;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "__func";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "x";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "a";
__n47 := [ __n48, __n49 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "__func";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "y";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "b";
__n53 := [ __n54, __n55 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "LogicalExpression";
__n57["operator"] := "||";
__n58 := {  };
__n58["type"] := "LogicalExpression";
__n58["operator"] := "||";
__n59 := {  };
__n59["type"] := "LogicalExpression";
__n59["operator"] := "||";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "!==";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "x";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 1.;
__n62["raw"] := "1";
__n60["right"] := __n62;
__n59["left"] := __n60;
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "!==";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "y";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 2.;
__n65["raw"] := "2";
__n63["right"] := __n65;
__n59["right"] := __n63;
__n58["left"] := __n59;
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "a";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "AB";
__n68["raw"] := "\"AB\"";
__n66["right"] := __n68;
__n58["right"] := __n66;
__n57["left"] := __n58;
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "!==";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "b";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "SAM";
__n71["raw"] := "\"SAM\"";
__n69["right"] := __n71;
__n57["right"] := __n69;
__n56["test"] := __n57;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "$ERROR";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "+";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "+";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "+";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "+";
__n82 := {  };
__n82["type"] := "BinaryExpression";
__n82["operator"] := "+";
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "+";
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "+";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "#1: x === 1 and y === 2 and a === \"AB\" and b === \"SAM\". Actual: x ===";
__n85["raw"] := "'#1: x === 1 and y === 2 and a === \"AB\" and b === \"SAM\". Actual: x ==='";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "x";
__n84["right"] := __n86;
__n83["left"] := __n84;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := " and y ===";
__n87["raw"] := "' and y ==='";
__n83["right"] := __n87;
__n82["left"] := __n83;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "y";
__n82["right"] := __n88;
__n81["left"] := __n82;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := " and a ===";
__n89["raw"] := "' and a ==='";
__n81["right"] := __n89;
__n80["left"] := __n81;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "a";
__n80["right"] := __n90;
__n79["left"] := __n80;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := " and b ===";
__n91["raw"] := "' and b ==='";
__n79["right"] := __n91;
__n78["left"] := __n79;
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "b";
__n78["right"] := __n92;
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n56["consequent"] := __n72;
__n56["alternate"] := null;
__n1 := [ __n2, __n10, __n26, __n31, __n35, __n40, __n44, __n50, __n56 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n93 := [ "__func", "y", "b", "x", "a" ];
__n0["variableDeclarations"] := __n93;
__n94 := [  ];
__n0["functionDeclarations"] := __n94;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}