function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "FACTORY";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "TryStatement";
__n5 := {  };
__n5["type"] := "BlockStatement";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "obj";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "NewExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "FACTORY";
__n11["callee"] := __n12;
__n13 := [  ];
__n11["arguments"] := __n13;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "$ERROR";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: var obj = new FACTORY() lead to throwing exception";
__n18["raw"] := "'#1: var obj = new FACTORY() lead to throwing exception'";
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n6 := [ __n7, __n14 ];
__n5["body"] := __n6;
__n4["block"] := __n5;
__n19 := {  };
__n19["type"] := "CatchClause";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "e";
__n19["param"] := __n20;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "IfStatement";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "instanceof";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "e";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Test262Error";
__n24["right"] := __n26;
__n23["test"] := __n24;
__n27 := {  };
__n27["type"] := "ThrowStatement";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "e";
__n27["argument"] := __n28;
__n23["consequent"] := __n27;
__n23["alternate"] := null;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n19["body"] := __n21;
__n4["handler"] := __n19;
__n4["finalizer"] := null;
__n1 := [ __n2, __n4 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n29 := [ "obj" ];
__n0["variableDeclarations"] := __n29;
__n31 := {  };
__n31["type"] := "FunctionDeclaration";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "FACTORY";
__n31["id"] := __n32;
__n33 := [  ];
__n31["params"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "AssignmentExpression";
__n37["operator"] := "=";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "ThisExpression";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "id";
__n40["raw"] := "\"id\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["left"] := __n38;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 0.;
__n41["raw"] := "0";
__n37["right"] := __n41;
__n36["expression"] := __n37;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "ThisExpression";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "id";
__n46["raw"] := "\"id\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["left"] := __n44;
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "func";
__n47["callee"] := __n48;
__n49 := [  ];
__n47["arguments"] := __n49;
__n43["right"] := __n47;
__n42["expression"] := __n43;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "eval";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "function func(){return \"id_string\";}";
__n54["raw"] := "\"function func(){return \\\"id_string\\\";}\"";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n35 := [ __n36, __n42, __n50 ];
__n34["body"] := __n35;
__n55 := [  ];
__n34["variableDeclarations"] := __n55;
__n56 := [  ];
__n34["functionDeclarations"] := __n56;
__n34["codeType"] := "function";
__n34["strict"] := false;
__n31["body"] := __n34;
__n31["generator"] := false;
__n31["expression"] := false;
__n31["async"] := false;
__n30 := [ __n31 ];
__n0["functionDeclarations"] := __n30;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}