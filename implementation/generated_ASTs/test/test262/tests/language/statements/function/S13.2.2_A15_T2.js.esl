function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "__obj";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "NewExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "__FACTORY";
__n10["callee"] := __n11;
__n12 := [  ];
__n10["arguments"] := __n12;
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n13 := {  };
__n13["type"] := "IfStatement";
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "!==";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "obj";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "prop";
__n17["raw"] := "\"prop\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["left"] := __n15;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "A";
__n18["raw"] := "\"A\"";
__n14["right"] := __n18;
__n13["test"] := __n14;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "$ERROR";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "+";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "#1: obj.prop === \"A\". Actual: obj.prop ===";
__n26["raw"] := "'#1: obj.prop === \"A\". Actual: obj.prop ==='";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "obj";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "prop";
__n29["raw"] := "\"prop\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n25["right"] := __n27;
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n13["consequent"] := __n19;
__n13["alternate"] := null;
__n30 := {  };
__n30["type"] := "IfStatement";
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "!==";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "__obj";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "prop";
__n34["raw"] := "\"prop\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["left"] := __n32;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "A";
__n35["raw"] := "\"A\"";
__n31["right"] := __n35;
__n30["test"] := __n31;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "$ERROR";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "+";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "#2: __obj.prop === \"A\". Actual: __obj.prop ===";
__n43["raw"] := "'#2: __obj.prop === \"A\". Actual: __obj.prop ==='";
__n42["left"] := __n43;
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "__obj";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "prop";
__n46["raw"] := "\"prop\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n42["right"] := __n44;
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n30["consequent"] := __n36;
__n30["alternate"] := null;
__n47 := {  };
__n47["type"] := "IfStatement";
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "!==";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "__obj";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "slot";
__n52["raw"] := "\"slot\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["object"] := __n50;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "prop";
__n53["raw"] := "\"prop\"";
__n49["property"] := __n53;
__n49["computed"] := true;
__n48["left"] := __n49;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 1.;
__n54["raw"] := "1";
__n48["right"] := __n54;
__n47["test"] := __n48;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "#3: __obj.slot.prop === 1. Actual: __obj.slot.prop ===";
__n62["raw"] := "'#3: __obj.slot.prop === 1. Actual: __obj.slot.prop ==='";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "__obj";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "slot";
__n66["raw"] := "\"slot\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["object"] := __n64;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "prop";
__n67["raw"] := "\"prop\"";
__n63["property"] := __n67;
__n63["computed"] := true;
__n61["right"] := __n63;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n47["consequent"] := __n55;
__n47["alternate"] := null;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "__FACTORY";
__n68["expression"] := __n69;
__n1 := [ __n2, __n6, __n13, __n30, __n47, __n68 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n70 := [ "obj", "__obj" ];
__n0["variableDeclarations"] := __n70;
__n72 := {  };
__n72["type"] := "FunctionDeclaration";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "__FACTORY";
__n72["id"] := __n73;
__n74 := [  ];
__n72["params"] := __n74;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "AssignmentExpression";
__n78["operator"] := "=";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "ThisExpression";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "prop";
__n81["raw"] := "\"prop\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n78["left"] := __n79;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 1.;
__n82["raw"] := "1";
__n78["right"] := __n82;
__n77["expression"] := __n78;
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "AssignmentExpression";
__n84["operator"] := "=";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "obj";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "ObjectExpression";
__n87 := [  ];
__n86["properties"] := __n87;
__n84["right"] := __n86;
__n83["expression"] := __n84;
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "AssignmentExpression";
__n89["operator"] := "=";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "obj";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "prop";
__n92["raw"] := "\"prop\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n89["left"] := __n90;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "A";
__n93["raw"] := "\"A\"";
__n89["right"] := __n93;
__n88["expression"] := __n89;
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "AssignmentExpression";
__n95["operator"] := "=";
__n96 := {  };
__n96["type"] := "MemberExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "obj";
__n96["object"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "slot";
__n98["raw"] := "\"slot\"";
__n96["property"] := __n98;
__n96["computed"] := true;
__n95["left"] := __n96;
__n99 := {  };
__n99["type"] := "ThisExpression";
__n95["right"] := __n99;
__n94["expression"] := __n95;
__n100 := {  };
__n100["type"] := "ReturnStatement";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "obj";
__n100["argument"] := __n101;
__n76 := [ __n77, __n83, __n88, __n94, __n100 ];
__n75["body"] := __n76;
__n102 := [  ];
__n75["variableDeclarations"] := __n102;
__n103 := [  ];
__n75["functionDeclarations"] := __n103;
__n75["codeType"] := "function";
__n75["strict"] := false;
__n72["body"] := __n75;
__n72["generator"] := false;
__n72["expression"] := false;
__n72["async"] := false;
__n71 := [ __n72 ];
__n0["functionDeclarations"] := __n71;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}