function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callee";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "b";
__n7["id"] := __n8;
__n7["init"] := null;
__n3 := [ __n4, __n7 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "__obj";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ObjectExpression";
__n15 := {  };
__n15["type"] := "Property";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "callee";
__n15["key"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "a";
__n17["raw"] := "\"a\"";
__n15["value"] := __n17;
__n15["computed"] := false;
__n15["kind"] := "init";
__n15["shorthand"] := false;
__n14 := [ __n15 ];
__n13["properties"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "AssignmentExpression";
__n19["operator"] := "=";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "result";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "FunctionExpression";
__n22["id"] := null;
__n23 := [  ];
__n22["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "WithStatement";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "arguments";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "AssignmentExpression";
__n31["operator"] := "=";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "callee";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 1.;
__n33["raw"] := "1";
__n31["right"] := __n33;
__n30["expression"] := __n31;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "AssignmentExpression";
__n35["operator"] := "=";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "b";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := true;
__n37["raw"] := "true";
__n35["right"] := __n37;
__n34["expression"] := __n35;
__n29 := [ __n30, __n34 ];
__n28["body"] := __n29;
__n26["body"] := __n28;
__n38 := {  };
__n38["type"] := "ReturnStatement";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "arguments";
__n38["argument"] := __n39;
__n25 := [ __n26, __n38 ];
__n24["body"] := __n25;
__n40 := [  ];
__n24["variableDeclarations"] := __n40;
__n41 := [  ];
__n24["functionDeclarations"] := __n41;
__n24["codeType"] := "function";
__n24["strict"] := false;
__n22["body"] := __n24;
__n22["generator"] := false;
__n22["async"] := false;
__n22["expression"] := false;
__n21["callee"] := __n22;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "__obj";
__n42 := [ __n43 ];
__n21["arguments"] := __n42;
__n19["right"] := __n21;
__n18["expression"] := __n19;
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "callee";
__n45["left"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 0.;
__n47["raw"] := "0";
__n45["right"] := __n47;
__n44["test"] := __n45;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "$ERROR";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "+";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "#1: callee === 0. Actual: callee ===";
__n55["raw"] := "'#1: callee === 0. Actual: callee ==='";
__n54["left"] := __n55;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "callee";
__n54["right"] := __n56;
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n44["consequent"] := __n48;
__n44["alternate"] := null;
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "__obj";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "callee";
__n61["raw"] := "\"callee\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n58["left"] := __n59;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "a";
__n62["raw"] := "\"a\"";
__n58["right"] := __n62;
__n57["test"] := __n58;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$ERROR";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "+";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "#2: __obj.callee === \"a\". Actual: __obj.callee===";
__n70["raw"] := "'#2: __obj.callee === \"a\". Actual: __obj.callee==='";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "MemberExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "__obj";
__n71["object"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "callee";
__n73["raw"] := "\"callee\"";
__n71["property"] := __n73;
__n71["computed"] := true;
__n69["right"] := __n71;
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n57["consequent"] := __n63;
__n57["alternate"] := null;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "!==";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "result";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "callee";
__n78["raw"] := "\"callee\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["left"] := __n76;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 1.;
__n79["raw"] := "1";
__n75["right"] := __n79;
__n74["test"] := __n75;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#3: result.callee === 1. Actual: result.callee ===";
__n87["raw"] := "'#3: result.callee === 1. Actual: result.callee ==='";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "result";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "callee";
__n90["raw"] := "\"callee\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n86["right"] := __n88;
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n74["consequent"] := __n80;
__n74["alternate"] := null;
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "UnaryExpression";
__n92["operator"] := "!";
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "ThisExpression";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "b";
__n95["raw"] := "\"b\"";
__n93["property"] := __n95;
__n93["computed"] := true;
__n92["argument"] := __n93;
__n92["prefix"] := true;
__n91["test"] := __n92;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "$ERROR";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "+";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "#4: this.b === true. Actual: this.b ===";
__n103["raw"] := "'#4: this.b === true. Actual: this.b ==='";
__n102["left"] := __n103;
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "ThisExpression";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "b";
__n106["raw"] := "\"b\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n102["right"] := __n104;
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n91["consequent"] := __n96;
__n91["alternate"] := null;
__n1 := [ __n2, __n9, __n18, __n44, __n57, __n74, __n91 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n107 := [ "callee", "b", "__obj" ];
__n0["variableDeclarations"] := __n107;
__n108 := [  ];
__n0["functionDeclarations"] := __n108;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}