function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "a";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 1.;
__n6["raw"] := "1";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "__obj";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "a";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 2.;
__n15["raw"] := "2";
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "init";
__n13["shorthand"] := false;
__n12 := [ __n13 ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n16 := {  };
__n16["type"] := "WithStatement";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "__obj";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "=";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "result";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "FunctionExpression";
__n24["id"] := null;
__n25 := [  ];
__n24["params"] := __n25;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ReturnStatement";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "a";
__n28["argument"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n30 := [  ];
__n26["variableDeclarations"] := __n30;
__n31 := [  ];
__n26["functionDeclarations"] := __n31;
__n26["codeType"] := "function";
__n26["strict"] := false;
__n24["body"] := __n26;
__n24["generator"] := false;
__n24["async"] := false;
__n24["expression"] := false;
__n23["callee"] := __n24;
__n32 := [  ];
__n23["arguments"] := __n32;
__n21["right"] := __n23;
__n20["expression"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n16["body"] := __n18;
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "!==";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "result";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 2.;
__n36["raw"] := "2";
__n34["right"] := __n36;
__n33["test"] := __n34;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$ERROR";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "#1: result === 2. Actual: result ===";
__n44["raw"] := "'#1: result === 2. Actual: result ==='";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "result";
__n43["right"] := __n45;
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n33["consequent"] := __n37;
__n33["alternate"] := null;
__n1 := [ __n2, __n7, __n16, __n33 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n46 := [ "a", "__obj" ];
__n0["variableDeclarations"] := __n46;
__n47 := [  ];
__n0["functionDeclarations"] := __n47;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}