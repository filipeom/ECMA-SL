function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "__FACTORY";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "EmptyStatement";
__n5 := {  };
__n5["type"] := "ExpressionStatement";
__n6 := {  };
__n6["type"] := "AssignmentExpression";
__n6["operator"] := "=";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "__FACTORY";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "prototype";
__n9["raw"] := "\"prototype\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["left"] := __n7;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n6["right"] := __n10;
__n5["expression"] := __n6;
__n11 := {  };
__n11["type"] := "IfStatement";
__n12 := {  };
__n12["type"] := "BinaryExpression";
__n12["operator"] := "!==";
__n13 := {  };
__n13["type"] := "UnaryExpression";
__n13["operator"] := "typeof";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "__FACTORY";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "prototype";
__n16["raw"] := "\"prototype\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["argument"] := __n14;
__n13["prefix"] := true;
__n12["left"] := __n13;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "number";
__n17["raw"] := "'number'";
__n12["right"] := __n17;
__n11["test"] := __n12;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "$ERROR";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "+";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "#1: typeof __FACTORY.prototype === 'number'. Actual: typeof __FACTORY.prototype ===";
__n25["raw"] := "'#1: typeof __FACTORY.prototype === \\'number\\'. Actual: typeof __FACTORY.prototype ==='";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "UnaryExpression";
__n26["operator"] := "typeof";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "__FACTORY";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "prototype";
__n29["raw"] := "\"prototype\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["argument"] := __n27;
__n26["prefix"] := true;
__n24["right"] := __n26;
__n23 := [ __n24 ];
__n21["arguments"] := __n23;
__n20["expression"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n11["consequent"] := __n18;
__n11["alternate"] := null;
__n30 := {  };
__n30["type"] := "VariableDeclaration";
__n32 := {  };
__n32["type"] := "VariableDeclarator";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "__device";
__n32["id"] := __n33;
__n34 := {  };
__n34["type"] := "NewExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "__FACTORY";
__n34["callee"] := __n35;
__n36 := [  ];
__n34["arguments"] := __n36;
__n32["init"] := __n34;
__n31 := [ __n32 ];
__n30["declarations"] := __n31;
__n30["kind"] := "var";
__n37 := {  };
__n37["type"] := "IfStatement";
__n38 := {  };
__n38["type"] := "UnaryExpression";
__n38["operator"] := "!";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Object";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "prototype";
__n43["raw"] := "\"prototype\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["object"] := __n41;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "isPrototypeOf";
__n44["raw"] := "\"isPrototypeOf\"";
__n40["property"] := __n44;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "__device";
__n45 := [ __n46 ];
__n39["arguments"] := __n45;
__n38["argument"] := __n39;
__n38["prefix"] := true;
__n37["test"] := __n38;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#2: Object.prototype.isPrototypeOf(__device) === true";
__n53["raw"] := "'#2: Object.prototype.isPrototypeOf(__device) === true'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n37["consequent"] := __n47;
__n37["alternate"] := null;
__n1 := [ __n2, __n4, __n5, __n11, __n30, __n37 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n54 := [ "__device" ];
__n0["variableDeclarations"] := __n54;
__n56 := {  };
__n56["type"] := "FunctionDeclaration";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "__FACTORY";
__n56["id"] := __n57;
__n58 := [  ];
__n56["params"] := __n58;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n60 := [  ];
__n59["body"] := __n60;
__n61 := [  ];
__n59["variableDeclarations"] := __n61;
__n62 := [  ];
__n59["functionDeclarations"] := __n62;
__n59["codeType"] := "function";
__n59["strict"] := false;
__n56["body"] := __n59;
__n56["generator"] := false;
__n56["expression"] := false;
__n56["async"] := false;
__n55 := [ __n56 ];
__n0["functionDeclarations"] := __n55;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}