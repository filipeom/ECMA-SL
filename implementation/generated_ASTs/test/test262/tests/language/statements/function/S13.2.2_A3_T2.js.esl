function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__FACTORY";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "FunctionExpression";
__n6["id"] := null;
__n7 := [  ];
__n6["params"] := __n7;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n9 := [  ];
__n8["body"] := __n9;
__n10 := [  ];
__n8["variableDeclarations"] := __n10;
__n11 := [  ];
__n8["functionDeclarations"] := __n11;
__n8["codeType"] := "function";
__n8["strict"] := false;
__n6["body"] := __n8;
__n6["generator"] := false;
__n6["expression"] := false;
__n6["async"] := false;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "AssignmentExpression";
__n13["operator"] := "=";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "__FACTORY";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "prototype";
__n16["raw"] := "\"prototype\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["left"] := __n14;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 1.;
__n17["raw"] := "1";
__n13["right"] := __n17;
__n12["expression"] := __n13;
__n18 := {  };
__n18["type"] := "IfStatement";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "!==";
__n20 := {  };
__n20["type"] := "UnaryExpression";
__n20["operator"] := "typeof";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "__FACTORY";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "prototype";
__n23["raw"] := "\"prototype\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["argument"] := __n21;
__n20["prefix"] := true;
__n19["left"] := __n20;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "number";
__n24["raw"] := "'number'";
__n19["right"] := __n24;
__n18["test"] := __n19;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "$ERROR";
__n28["callee"] := __n29;
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "+";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "#1: typeof __FACTORY.prototype === 'number'. Actual: typeof __FACTORY.prototype ===";
__n32["raw"] := "'#1: typeof __FACTORY.prototype === \\'number\\'. Actual: typeof __FACTORY.prototype ==='";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "UnaryExpression";
__n33["operator"] := "typeof";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "__FACTORY";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "prototype";
__n36["raw"] := "\"prototype\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["argument"] := __n34;
__n33["prefix"] := true;
__n31["right"] := __n33;
__n30 := [ __n31 ];
__n28["arguments"] := __n30;
__n27["expression"] := __n28;
__n26 := [ __n27 ];
__n25["body"] := __n26;
__n18["consequent"] := __n25;
__n18["alternate"] := null;
__n37 := {  };
__n37["type"] := "VariableDeclaration";
__n39 := {  };
__n39["type"] := "VariableDeclarator";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "__device";
__n39["id"] := __n40;
__n41 := {  };
__n41["type"] := "NewExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "__FACTORY";
__n41["callee"] := __n42;
__n43 := [  ];
__n41["arguments"] := __n43;
__n39["init"] := __n41;
__n38 := [ __n39 ];
__n37["declarations"] := __n38;
__n37["kind"] := "var";
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "UnaryExpression";
__n45["operator"] := "!";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "Object";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "prototype";
__n50["raw"] := "\"prototype\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["object"] := __n48;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "isPrototypeOf";
__n51["raw"] := "\"isPrototypeOf\"";
__n47["property"] := __n51;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "__device";
__n52 := [ __n53 ];
__n46["arguments"] := __n52;
__n45["argument"] := __n46;
__n45["prefix"] := true;
__n44["test"] := __n45;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "$ERROR";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "#2: Object.prototype.isPrototypeOf(__device) === true";
__n60["raw"] := "'#2: Object.prototype.isPrototypeOf(__device) === true'";
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n44["consequent"] := __n54;
__n44["alternate"] := null;
__n1 := [ __n2, __n12, __n18, __n37, __n44 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n61 := [ "__FACTORY", "__device" ];
__n0["variableDeclarations"] := __n61;
__n62 := [  ];
__n0["functionDeclarations"] := __n62;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}