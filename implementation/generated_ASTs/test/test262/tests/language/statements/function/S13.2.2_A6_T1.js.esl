function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__FOO";
__n4["id"] := __n5;
__n4["init"] := null;
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "__BAR";
__n6["id"] := __n7;
__n6["init"] := null;
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "__func";
__n8["id"] := __n9;
__n8["init"] := null;
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "__obj";
__n10["id"] := __n11;
__n10["init"] := null;
__n3 := [ __n4, __n6, __n8, __n10 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "AssignmentExpression";
__n13["operator"] := "=";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "__FOO";
__n13["left"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "fooValue";
__n15["raw"] := "\"fooValue\"";
__n13["right"] := __n15;
__n12["expression"] := __n13;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "AssignmentExpression";
__n17["operator"] := "=";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "__BAR";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "barValue";
__n19["raw"] := "\"barValue\"";
__n17["right"] := __n19;
__n16["expression"] := __n17;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "=";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "__func";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "FunctionExpression";
__n23["id"] := null;
__n24 := [ "arg" ];
__n23["params"] := __n24;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "AssignmentExpression";
__n28["operator"] := "=";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "ThisExpression";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "foo";
__n31["raw"] := "\"foo\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["left"] := __n29;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "arg";
__n28["right"] := __n32;
__n27["expression"] := __n28;
__n33 := {  };
__n33["type"] := "ReturnStatement";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 0.;
__n34["raw"] := "0";
__n33["argument"] := __n34;
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "AssignmentExpression";
__n36["operator"] := "=";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "ThisExpression";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "bar";
__n39["raw"] := "\"bar\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n40["computed"] := true;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "arguments";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 1.;
__n42["raw"] := "1";
__n40["property"] := __n42;
__n36["right"] := __n40;
__n35["expression"] := __n36;
__n26 := [ __n27, __n33, __n35 ];
__n25["body"] := __n26;
__n43 := [  ];
__n25["variableDeclarations"] := __n43;
__n44 := [  ];
__n25["functionDeclarations"] := __n44;
__n25["codeType"] := "function";
__n25["strict"] := false;
__n23["body"] := __n25;
__n23["generator"] := false;
__n23["expression"] := false;
__n23["async"] := false;
__n21["right"] := __n23;
__n20["expression"] := __n21;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "AssignmentExpression";
__n46["operator"] := "=";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "__obj";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "NewExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "__func";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "__FOO";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "__BAR";
__n50 := [ __n51, __n52 ];
__n48["arguments"] := __n50;
__n46["right"] := __n48;
__n45["expression"] := __n46;
__n53 := {  };
__n53["type"] := "IfStatement";
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "!==";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "__obj";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "foo";
__n57["raw"] := "\"foo\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["left"] := __n55;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "__FOO";
__n54["right"] := __n58;
__n53["test"] := __n54;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "+";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "#1: __obj.foo === __FOO. Actual: __obj.foo===";
__n66["raw"] := "'#1: __obj.foo === __FOO. Actual: __obj.foo==='";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "__obj";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "foo";
__n69["raw"] := "\"foo\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n65["right"] := __n67;
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n53["consequent"] := __n59;
__n53["alternate"] := null;
__n70 := {  };
__n70["type"] := "IfStatement";
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "!==";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "__obj";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "bar";
__n74["raw"] := "\"bar\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["left"] := __n72;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "undefined";
__n71["right"] := __n75;
__n70["test"] := __n71;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "$ERROR";
__n79["callee"] := __n80;
__n82 := {  };
__n82["type"] := "BinaryExpression";
__n82["operator"] := "+";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "#2: __obj.bar === undefined. Actual: __obj.bar===";
__n83["raw"] := "'#2: __obj.bar === undefined. Actual: __obj.bar==='";
__n82["left"] := __n83;
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "__obj";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "bar";
__n86["raw"] := "\"bar\"";
__n84["property"] := __n86;
__n84["computed"] := true;
__n82["right"] := __n84;
__n81 := [ __n82 ];
__n79["arguments"] := __n81;
__n78["expression"] := __n79;
__n77 := [ __n78 ];
__n76["body"] := __n77;
__n70["consequent"] := __n76;
__n70["alternate"] := null;
__n1 := [ __n2, __n12, __n16, __n20, __n45, __n53, __n70 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n87 := [ "__FOO", "__BAR", "__func", "__obj" ];
__n0["variableDeclarations"] := __n87;
__n88 := [  ];
__n0["functionDeclarations"] := __n88;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}