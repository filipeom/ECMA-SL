function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__FOO";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "fooValue";
__n6["raw"] := "\"fooValue\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "__BAR";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "barValue";
__n11["raw"] := "\"barValue\"";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "__func";
__n12["expression"] := __n13;
__n14 := {  };
__n14["type"] := "EmptyStatement";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "__obj";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "NewExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "__func";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "__FOO";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__BAR";
__n21 := [ __n22, __n23 ];
__n19["arguments"] := __n21;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n24 := {  };
__n24["type"] := "IfStatement";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "!==";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "__obj";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "foo";
__n28["raw"] := "\"foo\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["left"] := __n26;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "__FOO";
__n25["right"] := __n29;
__n24["test"] := __n25;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "$ERROR";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "+";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "#1: __obj.foo === __FOO. Actual: __obj.foo===";
__n37["raw"] := "'#1: __obj.foo === __FOO. Actual: __obj.foo==='";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "__obj";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "foo";
__n40["raw"] := "\"foo\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n36["right"] := __n38;
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n24["consequent"] := __n30;
__n24["alternate"] := null;
__n41 := {  };
__n41["type"] := "IfStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "!==";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "__obj";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "bar";
__n45["raw"] := "\"bar\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["left"] := __n43;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "undefined";
__n42["right"] := __n46;
__n41["test"] := __n42;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "+";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#2: __obj.bar === undefined. Actual: __obj.bar===";
__n54["raw"] := "'#2: __obj.bar === undefined. Actual: __obj.bar==='";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "__obj";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "bar";
__n57["raw"] := "\"bar\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n53["right"] := __n55;
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n41["consequent"] := __n47;
__n41["alternate"] := null;
__n1 := [ __n2, __n7, __n12, __n14, __n15, __n24, __n41 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n58 := [ "__FOO", "__BAR", "__obj" ];
__n0["variableDeclarations"] := __n58;
__n60 := {  };
__n60["type"] := "FunctionDeclaration";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "__func";
__n60["id"] := __n61;
__n62 := [ "arg" ];
__n60["params"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "AssignmentExpression";
__n66["operator"] := "=";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "ThisExpression";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "foo";
__n69["raw"] := "\"foo\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["left"] := __n67;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "arg";
__n66["right"] := __n70;
__n65["expression"] := __n66;
__n71 := {  };
__n71["type"] := "ReturnStatement";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := true;
__n72["raw"] := "true";
__n71["argument"] := __n72;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "AssignmentExpression";
__n74["operator"] := "=";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "ThisExpression";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "bar";
__n77["raw"] := "\"bar\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["left"] := __n75;
__n78 := {  };
__n78["type"] := "MemberExpression";
__n78["computed"] := true;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "arguments";
__n78["object"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 1.;
__n80["raw"] := "1";
__n78["property"] := __n80;
__n74["right"] := __n78;
__n73["expression"] := __n74;
__n64 := [ __n65, __n71, __n73 ];
__n63["body"] := __n64;
__n81 := [  ];
__n63["variableDeclarations"] := __n81;
__n82 := [  ];
__n63["functionDeclarations"] := __n82;
__n63["codeType"] := "function";
__n63["strict"] := false;
__n60["body"] := __n63;
__n60["generator"] := false;
__n60["expression"] := false;
__n60["async"] := false;
__n59 := [ __n60 ];
__n0["functionDeclarations"] := __n59;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}