function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__FRST";
__n4["id"] := __n5;
__n4["init"] := null;
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "__SCND";
__n6["id"] := __n7;
__n6["init"] := null;
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "__func";
__n8["id"] := __n9;
__n8["init"] := null;
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "__obj__";
__n10["id"] := __n11;
__n10["init"] := null;
__n3 := [ __n4, __n6, __n8, __n10 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "AssignmentExpression";
__n13["operator"] := "=";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "__FRST";
__n13["left"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "one";
__n15["raw"] := "\"one\"";
__n13["right"] := __n15;
__n12["expression"] := __n13;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "AssignmentExpression";
__n17["operator"] := "=";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "__SCND";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "two";
__n19["raw"] := "\"two\"";
__n17["right"] := __n19;
__n16["expression"] := __n17;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "=";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "__func";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "FunctionExpression";
__n23["id"] := null;
__n24 := [ "arg1", "arg2" ];
__n23["params"] := __n24;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "AssignmentExpression";
__n28["operator"] := "=";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "ThisExpression";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "first";
__n31["raw"] := "\"first\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["left"] := __n29;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "arg1";
__n28["right"] := __n32;
__n27["expression"] := __n28;
__n33 := {  };
__n33["type"] := "VariableDeclaration";
__n35 := {  };
__n35["type"] := "VariableDeclarator";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "__obj";
__n35["id"] := __n36;
__n37 := {  };
__n37["type"] := "ObjectExpression";
__n39 := {  };
__n39["type"] := "Property";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "second";
__n39["key"] := __n40;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "arg2";
__n39["value"] := __n41;
__n39["computed"] := false;
__n39["kind"] := "init";
__n39["shorthand"] := false;
__n38 := [ __n39 ];
__n37["properties"] := __n38;
__n35["init"] := __n37;
__n34 := [ __n35 ];
__n33["declarations"] := __n34;
__n33["kind"] := "var";
__n42 := {  };
__n42["type"] := "ReturnStatement";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "__obj";
__n42["argument"] := __n43;
__n26 := [ __n27, __n33, __n42 ];
__n25["body"] := __n26;
__n44 := [ "__obj" ];
__n25["variableDeclarations"] := __n44;
__n45 := [  ];
__n25["functionDeclarations"] := __n45;
__n25["codeType"] := "function";
__n25["strict"] := false;
__n23["body"] := __n25;
__n23["generator"] := false;
__n23["expression"] := false;
__n23["async"] := false;
__n21["right"] := __n23;
__n20["expression"] := __n21;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "AssignmentExpression";
__n47["operator"] := "=";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "__obj__";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "NewExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "__func";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "__FRST";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "__SCND";
__n51 := [ __n52, __n53 ];
__n49["arguments"] := __n51;
__n47["right"] := __n49;
__n46["expression"] := __n47;
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "__obj__";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "first";
__n58["raw"] := "\"first\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["left"] := __n56;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "undefined";
__n55["right"] := __n59;
__n54["test"] := __n55;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "$ERROR";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "+";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "#1: __obj__.first === undefined. Actual: __obj__.first===";
__n67["raw"] := "'#1: __obj__.first === undefined. Actual: __obj__.first==='";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "__obj__";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "first";
__n70["raw"] := "\"first\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n66["right"] := __n68;
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n54["consequent"] := __n60;
__n54["alternate"] := null;
__n71 := {  };
__n71["type"] := "IfStatement";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "!==";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "__obj__";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "second";
__n75["raw"] := "\"second\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n72["left"] := __n73;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "__SCND";
__n72["right"] := __n76;
__n71["test"] := __n72;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "$ERROR";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "+";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "#2: __obj__.second === __SCND. Actual: __obj__.second ===";
__n84["raw"] := "'#2: __obj__.second === __SCND. Actual: __obj__.second ==='";
__n83["left"] := __n84;
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "__obj__";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "second";
__n87["raw"] := "\"second\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n83["right"] := __n85;
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n78 := [ __n79 ];
__n77["body"] := __n78;
__n71["consequent"] := __n77;
__n71["alternate"] := null;
__n1 := [ __n2, __n12, __n16, __n20, __n46, __n54, __n71 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n88 := [ "__FRST", "__SCND", "__func", "__obj__" ];
__n0["variableDeclarations"] := __n88;
__n89 := [  ];
__n0["functionDeclarations"] := __n89;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}