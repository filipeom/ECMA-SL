function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__JEDI";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "jedi";
__n6["raw"] := "\"jedi\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "__FUNC";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "EmptyStatement";
__n10 := {  };
__n10["type"] := "IfStatement";
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "!==";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "__FUNC";
__n13["callee"] := __n14;
__n15 := [  ];
__n13["arguments"] := __n15;
__n12["callee"] := __n13;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "__JEDI";
__n16 := [ __n17 ];
__n12["arguments"] := __n16;
__n11["left"] := __n12;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "__JEDI";
__n11["right"] := __n18;
__n10["test"] := __n11;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "$ERROR";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "+";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "#1: __FUNC()(__JEDI) === __JEDI. Actual: __FUNC()(__JEDI) ===";
__n26["raw"] := "'#1: __FUNC()(__JEDI) === __JEDI. Actual: __FUNC()(__JEDI) ==='";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "__FUNC";
__n28["callee"] := __n29;
__n30 := [  ];
__n28["arguments"] := __n30;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "__JEDI";
__n31 := [ __n32 ];
__n27["arguments"] := __n31;
__n25["right"] := __n27;
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n10["consequent"] := __n19;
__n10["alternate"] := null;
__n1 := [ __n2, __n7, __n9, __n10 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n33 := [ "__JEDI" ];
__n0["variableDeclarations"] := __n33;
__n35 := {  };
__n35["type"] := "FunctionDeclaration";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "__FUNC";
__n35["id"] := __n36;
__n37 := [  ];
__n35["params"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "__GUNC";
__n40["expression"] := __n41;
__n42 := {  };
__n42["type"] := "EmptyStatement";
__n43 := {  };
__n43["type"] := "ReturnStatement";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "__GUNC";
__n43["argument"] := __n44;
__n39 := [ __n40, __n42, __n43 ];
__n38["body"] := __n39;
__n45 := [  ];
__n38["variableDeclarations"] := __n45;
__n47 := {  };
__n47["type"] := "FunctionDeclaration";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "__GUNC";
__n47["id"] := __n48;
__n49 := [  ];
__n47["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ReturnStatement";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n53["computed"] := true;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "arguments";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 0.;
__n55["raw"] := "0";
__n53["property"] := __n55;
__n52["argument"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n56 := [  ];
__n50["variableDeclarations"] := __n56;
__n57 := [  ];
__n50["functionDeclarations"] := __n57;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n47["body"] := __n50;
__n47["generator"] := false;
__n47["expression"] := false;
__n47["async"] := false;
__n46 := [ __n47 ];
__n38["functionDeclarations"] := __n46;
__n38["codeType"] := "function";
__n38["strict"] := false;
__n35["body"] := __n38;
__n35["generator"] := false;
__n35["expression"] := false;
__n35["async"] := false;
__n34 := [ __n35 ];
__n0["functionDeclarations"] := __n34;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}