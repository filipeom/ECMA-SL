function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "__ziggy__func";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "__music_box";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ObjectExpression";
__n9 := [  ];
__n8["properties"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "AssignmentExpression";
__n11["operator"] := "=";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "__music_box";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "ziggy";
__n14["raw"] := "\"ziggy\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["left"] := __n12;
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "__ziggy__func";
__n11["right"] := __n15;
__n10["expression"] := __n11;
__n16 := {  };
__n16["type"] := "IfStatement";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "!==";
__n18 := {  };
__n18["type"] := "UnaryExpression";
__n18["operator"] := "typeof";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "__music_box";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "ziggy";
__n21["raw"] := "\"ziggy\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["argument"] := __n19;
__n18["prefix"] := true;
__n17["left"] := __n18;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "function";
__n22["raw"] := "\"function\"";
__n17["right"] := __n22;
__n16["test"] := __n17;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "$ERROR";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "+";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "#1: typeof __music_box.ziggy === \"function\". Actual: typeof __music_box.ziggy ===";
__n30["raw"] := "'#1: typeof __music_box.ziggy === \"function\". Actual: typeof __music_box.ziggy ==='";
__n29["left"] := __n30;
__n31 := {  };
__n31["type"] := "UnaryExpression";
__n31["operator"] := "typeof";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "__music_box";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "ziggy";
__n34["raw"] := "\"ziggy\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["argument"] := __n32;
__n31["prefix"] := true;
__n29["right"] := __n31;
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n16["consequent"] := __n23;
__n16["alternate"] := null;
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "__music_box";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "ziggy";
__n40["raw"] := "\"ziggy\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n41 := [  ];
__n37["arguments"] := __n41;
__n36["left"] := __n37;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "ziggy stardust";
__n42["raw"] := "\"ziggy stardust\"";
__n36["right"] := __n42;
__n35["test"] := __n36;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "+";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "#2: __music_box.ziggy() === \"ziggy stardust\". Actual: __music_box.ziggy() ===";
__n50["raw"] := "'#2: __music_box.ziggy() === \"ziggy stardust\". Actual: __music_box.ziggy() ==='";
__n49["left"] := __n50;
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "__music_box";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "ziggy";
__n54["raw"] := "\"ziggy\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n55 := [  ];
__n51["arguments"] := __n55;
__n49["right"] := __n51;
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n35["consequent"] := __n43;
__n35["alternate"] := null;
__n1 := [ __n2, __n4, __n10, __n16, __n35 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n56 := [ "__music_box" ];
__n0["variableDeclarations"] := __n56;
__n58 := {  };
__n58["type"] := "FunctionDeclaration";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "__ziggy__func";
__n58["id"] := __n59;
__n60 := [  ];
__n58["params"] := __n60;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ReturnStatement";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "ziggy stardust";
__n64["raw"] := "\"ziggy stardust\"";
__n63["argument"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n65 := [  ];
__n61["variableDeclarations"] := __n65;
__n66 := [  ];
__n61["functionDeclarations"] := __n66;
__n61["codeType"] := "function";
__n61["strict"] := false;
__n58["body"] := __n61;
__n58["generator"] := false;
__n58["expression"] := false;
__n58["async"] := false;
__n57 := [ __n58 ];
__n0["functionDeclarations"] := __n57;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}