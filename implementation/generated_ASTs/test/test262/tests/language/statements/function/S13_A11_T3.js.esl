function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "__func";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "IfStatement";
__n5 := {  };
__n5["type"] := "UnaryExpression";
__n5["operator"] := "!";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "__func";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "A";
__n9["raw"] := "\"A\"";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "B";
__n10["raw"] := "\"B\"";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 1.;
__n11["raw"] := "1";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 2.;
__n12["raw"] := "2";
__n8 := [ __n9, __n10, __n11, __n12 ];
__n6["arguments"] := __n8;
__n5["argument"] := __n6;
__n5["prefix"] := true;
__n4["test"] := __n5;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "$ERROR";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "#1: Since arguments property has attribute { DontDelete } elements of arguments can be deleted";
__n19["raw"] := "'#1: Since arguments property has attribute { DontDelete } elements of arguments can be deleted'";
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n15["expression"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n4["consequent"] := __n13;
__n4["alternate"] := null;
__n1 := [ __n2, __n4 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n20 := [  ];
__n0["variableDeclarations"] := __n20;
__n22 := {  };
__n22["type"] := "FunctionDeclaration";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__func";
__n22["id"] := __n23;
__n24 := [  ];
__n22["params"] := __n24;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "VariableDeclaration";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "was_del";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := false;
__n31["raw"] := "false";
__n29["init"] := __n31;
__n28 := [ __n29 ];
__n27["declarations"] := __n28;
__n27["kind"] := "var";
__n32 := {  };
__n32["type"] := "ForStatement";
__n33 := {  };
__n33["type"] := "VariableDeclaration";
__n35 := {  };
__n35["type"] := "VariableDeclarator";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "i";
__n35["id"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 0.;
__n37["raw"] := "0";
__n35["init"] := __n37;
__n34 := [ __n35 ];
__n33["declarations"] := __n34;
__n33["kind"] := "var";
__n32["init"] := __n33;
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "<";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "i";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "arguments";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "length";
__n42["raw"] := "\"length\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n38["right"] := __n40;
__n32["test"] := __n38;
__n43 := {  };
__n43["type"] := "UpdateExpression";
__n43["operator"] := "++";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "i";
__n43["argument"] := __n44;
__n43["prefix"] := false;
__n32["update"] := __n43;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "AssignmentExpression";
__n46["operator"] := "=";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "was_del";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "LogicalExpression";
__n48["operator"] := "||";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "was_del";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "UnaryExpression";
__n50["operator"] := "delete";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n51["computed"] := true;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "arguments";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "i";
__n51["property"] := __n53;
__n50["argument"] := __n51;
__n50["prefix"] := true;
__n48["right"] := __n50;
__n46["right"] := __n48;
__n45["expression"] := __n46;
__n32["body"] := __n45;
__n54 := {  };
__n54["type"] := "ReturnStatement";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "was_del";
__n54["argument"] := __n55;
__n26 := [ __n27, __n32, __n54 ];
__n25["body"] := __n26;
__n56 := [ "was_del", "i" ];
__n25["variableDeclarations"] := __n56;
__n57 := [  ];
__n25["functionDeclarations"] := __n57;
__n25["codeType"] := "function";
__n25["strict"] := false;
__n22["body"] := __n25;
__n22["generator"] := false;
__n22["expression"] := false;
__n22["async"] := false;
__n21 := [ __n22 ];
__n0["functionDeclarations"] := __n21;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}