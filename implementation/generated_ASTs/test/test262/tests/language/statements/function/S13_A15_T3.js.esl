function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "Identifier";
__n4["name"] := "THE_ANSWER";
__n3["left"] := __n4;
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := "Answer to Life, the Universe, and Everything";
__n5["raw"] := "\"Answer to Life, the Universe, and Everything\"";
__n3["right"] := __n5;
__n2["expression"] := __n3;
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "arguments";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "THE_ANSWER";
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "__func";
__n11["expression"] := __n12;
__n13 := {  };
__n13["type"] := "EmptyStatement";
__n14 := {  };
__n14["type"] := "IfStatement";
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "!==";
__n16 := {  };
__n16["type"] := "UnaryExpression";
__n16["operator"] := "typeof";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "__func";
__n17["callee"] := __n18;
__n19 := [  ];
__n17["arguments"] := __n19;
__n16["argument"] := __n17;
__n16["prefix"] := true;
__n15["left"] := __n16;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "undefined";
__n20["raw"] := "\"undefined\"";
__n15["right"] := __n20;
__n14["test"] := __n15;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "$ERROR";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "+";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "#1: typeof __func() === \"undefined\". Actual: typeof __func() ===";
__n28["raw"] := "'#1: typeof __func() === \"undefined\". Actual: typeof __func() ==='";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "UnaryExpression";
__n29["operator"] := "typeof";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "__func";
__n30["callee"] := __n31;
__n32 := [  ];
__n30["arguments"] := __n32;
__n29["argument"] := __n30;
__n29["prefix"] := true;
__n27["right"] := __n29;
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n14["consequent"] := __n21;
__n14["alternate"] := null;
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "!==";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "__func";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "The Ultimate Question";
__n38["raw"] := "\"The Ultimate Question\"";
__n37 := [ __n38 ];
__n35["arguments"] := __n37;
__n34["left"] := __n35;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "The Ultimate Question";
__n39["raw"] := "\"The Ultimate Question\"";
__n34["right"] := __n39;
__n33["test"] := __n34;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "+";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#2: __func(\"The Ultimate Question\") === \"The Ultimate Question\". Actual: __func(\"The Ultimate Question\")===";
__n47["raw"] := "'#2: __func(\"The Ultimate Question\") === \"The Ultimate Question\". Actual: __func(\"The Ultimate Question\")==='";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "__func";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "The Ultimate Question";
__n51["raw"] := "\"The Ultimate Question\"";
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n46["right"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n33["consequent"] := __n40;
__n33["alternate"] := null;
__n1 := [ __n2, __n6, __n11, __n13, __n14, __n33 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n52 := [ "arguments" ];
__n0["variableDeclarations"] := __n52;
__n54 := {  };
__n54["type"] := "FunctionDeclaration";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "__func";
__n54["id"] := __n55;
__n56 := [ "arguments" ];
__n54["params"] := __n56;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ReturnStatement";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "arguments";
__n59["argument"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n61 := [  ];
__n57["variableDeclarations"] := __n61;
__n62 := [  ];
__n57["functionDeclarations"] := __n62;
__n57["codeType"] := "function";
__n57["strict"] := false;
__n54["body"] := __n57;
__n54["generator"] := false;
__n54["async"] := false;
__n54["expression"] := false;
__n53 := [ __n54 ];
__n0["functionDeclarations"] := __n53;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}