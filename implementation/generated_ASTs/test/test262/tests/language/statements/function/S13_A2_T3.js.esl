function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "FunctionExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "__func";
__n7["id"] := __n8;
__n9 := [  ];
__n7["params"] := __n9;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ReturnStatement";
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "+";
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "+";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n15["computed"] := true;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arguments";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n15["property"] := __n17;
__n14["left"] := __n15;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "-";
__n18["raw"] := "\"-\"";
__n14["right"] := __n18;
__n13["left"] := __n14;
__n19 := {  };
__n19["type"] := "MemberExpression";
__n19["computed"] := true;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "arguments";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 1.;
__n21["raw"] := "1";
__n19["property"] := __n21;
__n13["right"] := __n19;
__n12["argument"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n22 := [  ];
__n10["variableDeclarations"] := __n22;
__n23 := [  ];
__n10["functionDeclarations"] := __n23;
__n10["codeType"] := "function";
__n10["strict"] := false;
__n7["body"] := __n10;
__n7["generator"] := false;
__n7["expression"] := false;
__n7["async"] := false;
__n6["callee"] := __n7;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "Obi";
__n25["raw"] := "\"Obi\"";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "Wan";
__n26["raw"] := "\"Wan\"";
__n24 := [ __n25, __n26 ];
__n6["arguments"] := __n24;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n27 := {  };
__n27["type"] := "IfStatement";
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "!==";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "x";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "Obi-Wan";
__n30["raw"] := "\"Obi-Wan\"";
__n28["right"] := __n30;
__n27["test"] := __n28;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "$ERROR";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "+";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "#1: x === \"Obi-Wan\". Actual: x ===";
__n38["raw"] := "'#1: x === \"Obi-Wan\". Actual: x ==='";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "x";
__n37["right"] := __n39;
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33["expression"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n27["consequent"] := __n31;
__n27["alternate"] := null;
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "!==";
__n42 := {  };
__n42["type"] := "UnaryExpression";
__n42["operator"] := "typeof";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "__func";
__n42["argument"] := __n43;
__n42["prefix"] := true;
__n41["left"] := __n42;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "undefined";
__n44["raw"] := "'undefined'";
__n41["right"] := __n44;
__n40["test"] := __n41;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "$ERROR";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "+";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "#2: typeof __func === 'undefined'. Actual: typeof __func ===";
__n52["raw"] := "'#2: typeof __func === \\'undefined\\'. Actual: typeof __func ==='";
__n51["left"] := __n52;
__n53 := {  };
__n53["type"] := "UnaryExpression";
__n53["operator"] := "typeof";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "__func";
__n53["argument"] := __n54;
__n53["prefix"] := true;
__n51["right"] := __n53;
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n40["consequent"] := __n45;
__n40["alternate"] := null;
__n1 := [ __n2, __n27, __n40 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n55 := [ "x" ];
__n0["variableDeclarations"] := __n55;
__n56 := [  ];
__n0["functionDeclarations"] := __n56;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}