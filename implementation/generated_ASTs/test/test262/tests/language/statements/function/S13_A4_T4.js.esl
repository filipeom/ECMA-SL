function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "__func";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "EmptyStatement";
__n5 := {  };
__n5["type"] := "IfStatement";
__n6 := {  };
__n6["type"] := "BinaryExpression";
__n6["operator"] := "!==";
__n7 := {  };
__n7["type"] := "UnaryExpression";
__n7["operator"] := "typeof";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "__func";
__n7["argument"] := __n8;
__n7["prefix"] := true;
__n6["left"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "function";
__n9["raw"] := "\"function\"";
__n6["right"] := __n9;
__n5["test"] := __n6;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "$ERROR";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "+";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "#1: typeof __func === \"function\". Actual: typeof __func ===";
__n17["raw"] := "'#1: typeof __func === \"function\". Actual: typeof __func ==='";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "UnaryExpression";
__n18["operator"] := "typeof";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "__func";
__n18["argument"] := __n19;
__n18["prefix"] := true;
__n16["right"] := __n18;
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["expression"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n5["consequent"] := __n10;
__n5["alternate"] := null;
__n20 := {  };
__n20["type"] := "IfStatement";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "!==";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__func";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "ObjectExpression";
__n27 := {  };
__n27["type"] := "Property";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "name";
__n27["key"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "fox";
__n29["raw"] := "'fox'";
__n27["value"] := __n29;
__n27["computed"] := false;
__n27["kind"] := "init";
__n27["shorthand"] := false;
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "surname";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "malder";
__n32["raw"] := "'malder'";
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n26 := [ __n27, __n30 ];
__n25["properties"] := __n26;
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["left"] := __n22;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "fox malder";
__n33["raw"] := "\"fox malder\"";
__n21["right"] := __n33;
__n20["test"] := __n21;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "+";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "#2: __func({name:'fox', surname:'malder'}) === \"fox malder\". Actual: __func({name:'fox', surname:'malder'}) ===";
__n41["raw"] := "'#2: __func({name:\\'fox\\', surname:\\'malder\\'}) === \"fox malder\". Actual: __func({name:\\'fox\\', surname:\\'malder\\'}) ==='";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "__func";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "ObjectExpression";
__n47 := {  };
__n47["type"] := "Property";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "name";
__n47["key"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "fox";
__n49["raw"] := "'fox'";
__n47["value"] := __n49;
__n47["computed"] := false;
__n47["kind"] := "init";
__n47["shorthand"] := false;
__n50 := {  };
__n50["type"] := "Property";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "surname";
__n50["key"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "malder";
__n52["raw"] := "'malder'";
__n50["value"] := __n52;
__n50["computed"] := false;
__n50["kind"] := "init";
__n50["shorthand"] := false;
__n46 := [ __n47, __n50 ];
__n45["properties"] := __n46;
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n40["right"] := __n42;
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n20["consequent"] := __n34;
__n20["alternate"] := null;
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "func__";
__n53["expression"] := __n54;
__n55 := {  };
__n55["type"] := "EmptyStatement";
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "!==";
__n58 := {  };
__n58["type"] := "UnaryExpression";
__n58["operator"] := "typeof";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "func__";
__n58["argument"] := __n59;
__n58["prefix"] := true;
__n57["left"] := __n58;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "function";
__n60["raw"] := "\"function\"";
__n57["right"] := __n60;
__n56["test"] := __n57;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$ERROR";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "+";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "#3: typeof func__ === \"function\". Actual: typeof __func ===";
__n68["raw"] := "'#3: typeof func__ === \"function\". Actual: typeof __func ==='";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "UnaryExpression";
__n69["operator"] := "typeof";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "__func";
__n69["argument"] := __n70;
__n69["prefix"] := true;
__n67["right"] := __n69;
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n56["consequent"] := __n61;
__n56["alternate"] := null;
__n71 := {  };
__n71["type"] := "IfStatement";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "!==";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "func__";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "ObjectExpression";
__n78 := {  };
__n78["type"] := "Property";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "name";
__n78["key"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "john";
__n80["raw"] := "'john'";
__n78["value"] := __n80;
__n78["computed"] := false;
__n78["kind"] := "init";
__n78["shorthand"] := false;
__n81 := {  };
__n81["type"] := "Property";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "surname";
__n81["key"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "lennon";
__n83["raw"] := "'lennon'";
__n81["value"] := __n83;
__n81["computed"] := false;
__n81["kind"] := "init";
__n81["shorthand"] := false;
__n77 := [ __n78, __n81 ];
__n76["properties"] := __n77;
__n75 := [ __n76 ];
__n73["arguments"] := __n75;
__n72["left"] := __n73;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "john lennon";
__n84["raw"] := "\"john lennon\"";
__n72["right"] := __n84;
__n71["test"] := __n72;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "$ERROR";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "+";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "#4: func__({name:'john', surname:'lennon'}) === \"john lennon\". Actual: __func({name:'john', surname:'lennon'}) ===";
__n92["raw"] := "'#4: func__({name:\\'john\\', surname:\\'lennon\\'}) === \"john lennon\". Actual: __func({name:\\'john\\', surname:\\'lennon\\'}) ==='";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "__func";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "ObjectExpression";
__n98 := {  };
__n98["type"] := "Property";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "name";
__n98["key"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "john";
__n100["raw"] := "'john'";
__n98["value"] := __n100;
__n98["computed"] := false;
__n98["kind"] := "init";
__n98["shorthand"] := false;
__n101 := {  };
__n101["type"] := "Property";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "surname";
__n101["key"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "lennon";
__n103["raw"] := "'lennon'";
__n101["value"] := __n103;
__n101["computed"] := false;
__n101["kind"] := "init";
__n101["shorthand"] := false;
__n97 := [ __n98, __n101 ];
__n96["properties"] := __n97;
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n91["right"] := __n93;
__n90 := [ __n91 ];
__n88["arguments"] := __n90;
__n87["expression"] := __n88;
__n86 := [ __n87 ];
__n85["body"] := __n86;
__n71["consequent"] := __n85;
__n71["alternate"] := null;
__n1 := [ __n2, __n4, __n5, __n20, __n53, __n55, __n56, __n71 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n104 := [  ];
__n0["variableDeclarations"] := __n104;
__n106 := {  };
__n106["type"] := "FunctionDeclaration";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "__func";
__n106["id"] := __n107;
__n108 := [  ];
__n106["params"] := __n108;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "ReturnStatement";
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "+";
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := "+";
__n114 := {  };
__n114["type"] := "MemberExpression";
__n115 := {  };
__n115["type"] := "MemberExpression";
__n115["computed"] := true;
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "arguments";
__n115["object"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 0.;
__n117["raw"] := "0";
__n115["property"] := __n117;
__n114["object"] := __n115;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "name";
__n118["raw"] := "\"name\"";
__n114["property"] := __n118;
__n114["computed"] := true;
__n113["left"] := __n114;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := " ";
__n119["raw"] := "\" \"";
__n113["right"] := __n119;
__n112["left"] := __n113;
__n120 := {  };
__n120["type"] := "MemberExpression";
__n121 := {  };
__n121["type"] := "MemberExpression";
__n121["computed"] := true;
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "arguments";
__n121["object"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 0.;
__n123["raw"] := "0";
__n121["property"] := __n123;
__n120["object"] := __n121;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "surname";
__n124["raw"] := "\"surname\"";
__n120["property"] := __n124;
__n120["computed"] := true;
__n112["right"] := __n120;
__n111["argument"] := __n112;
__n110 := [ __n111 ];
__n109["body"] := __n110;
__n125 := [  ];
__n109["variableDeclarations"] := __n125;
__n126 := [  ];
__n109["functionDeclarations"] := __n126;
__n109["codeType"] := "function";
__n109["strict"] := false;
__n106["body"] := __n109;
__n106["generator"] := false;
__n106["expression"] := false;
__n106["async"] := false;
__n127 := {  };
__n127["type"] := "FunctionDeclaration";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "func__";
__n127["id"] := __n128;
__n129 := [ "arg" ];
__n127["params"] := __n129;
__n130 := {  };
__n130["type"] := "BlockStatement";
__n132 := {  };
__n132["type"] := "ReturnStatement";
__n133 := {  };
__n133["type"] := "BinaryExpression";
__n133["operator"] := "+";
__n134 := {  };
__n134["type"] := "BinaryExpression";
__n134["operator"] := "+";
__n135 := {  };
__n135["type"] := "MemberExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "arg";
__n135["object"] := __n136;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "name";
__n137["raw"] := "\"name\"";
__n135["property"] := __n137;
__n135["computed"] := true;
__n134["left"] := __n135;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := " ";
__n138["raw"] := "\" \"";
__n134["right"] := __n138;
__n133["left"] := __n134;
__n139 := {  };
__n139["type"] := "MemberExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "arg";
__n139["object"] := __n140;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "surname";
__n141["raw"] := "\"surname\"";
__n139["property"] := __n141;
__n139["computed"] := true;
__n133["right"] := __n139;
__n132["argument"] := __n133;
__n131 := [ __n132 ];
__n130["body"] := __n131;
__n142 := [  ];
__n130["variableDeclarations"] := __n142;
__n143 := [  ];
__n130["functionDeclarations"] := __n143;
__n130["codeType"] := "function";
__n130["strict"] := false;
__n127["body"] := __n130;
__n127["generator"] := false;
__n127["expression"] := false;
__n127["async"] := false;
__n105 := [ __n106, __n127 ];
__n0["functionDeclarations"] := __n105;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}