function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "object";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "p1";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n11 := {  };
__n11["type"] := "Property";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "p2";
__n11["key"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 1.;
__n13["raw"] := "1";
__n11["value"] := __n13;
__n11["computed"] := false;
__n11["kind"] := "init";
__n11["shorthand"] := false;
__n7 := [ __n8, __n11 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "result";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 0.;
__n18["raw"] := "0";
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n19 := {  };
__n19["type"] := "LabeledStatement";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "lbl";
__n19["label"] := __n20;
__n21 := {  };
__n21["type"] := "ForInStatement";
__n22 := {  };
__n22["type"] := "VariableDeclaration";
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "i";
__n24["id"] := __n25;
__n24["init"] := null;
__n23 := [ __n24 ];
__n22["declarations"] := __n23;
__n22["kind"] := "var";
__n21["left"] := __n22;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "object";
__n21["right"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "AssignmentExpression";
__n30["operator"] := "+=";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "result";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "MemberExpression";
__n32["computed"] := true;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "object";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "i";
__n32["property"] := __n34;
__n30["right"] := __n32;
__n29["expression"] := __n30;
__n35 := {  };
__n35["type"] := "BreakStatement";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "lbl";
__n35["label"] := __n36;
__n28 := [ __n29, __n35 ];
__n27["body"] := __n28;
__n21["body"] := __n27;
__n21["each"] := false;
__n19["body"] := __n21;
__n37 := {  };
__n37["type"] := "IfStatement";
__n38 := {  };
__n38["type"] := "UnaryExpression";
__n38["operator"] := "!";
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "===";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "result";
__n39["left"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 1.;
__n41["raw"] := "1";
__n39["right"] := __n41;
__n38["argument"] := __n39;
__n38["prefix"] := true;
__n37["test"] := __n38;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$ERROR";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "'break label' should break execution of labelled iteration statement";
__n48["raw"] := "\"'break label' should break execution of labelled iteration statement\"";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n37["consequent"] := __n42;
__n37["alternate"] := null;
__n1 := [ __n2, __n14, __n19, __n37 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n49 := [ "object", "result", "i" ];
__n0["variableDeclarations"] := __n49;
__n50 := [  ];
__n0["functionDeclarations"] := __n50;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}