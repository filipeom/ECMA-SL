function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "IfStatement";
__n6 := {  };
__n6["type"] := "BinaryExpression";
__n6["operator"] := "!==";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "eval";
__n7["callee"] := __n8;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "(function(){var x = 1;return
x;var y=2;})()";
__n10["raw"] := "\"(function(){var x = 1;return\\u000Ax;var y=2;})()\"";
__n9 := [ __n10 ];
__n7["arguments"] := __n9;
__n6["left"] := __n7;
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "undefined";
__n6["right"] := __n11;
__n5["test"] := __n6;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "$ERROR";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: LineTerminator(U-000A) between return and Identifier_opt yields return without Identifier_opt";
__n18["raw"] := "\"#1: LineTerminator(U-000A) between return and Identifier_opt yields return without Identifier_opt\"";
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n5["consequent"] := __n12;
__n5["alternate"] := null;
__n4 := [ __n5 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n19 := {  };
__n19["type"] := "CatchClause";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "e";
__n19["param"] := __n20;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "$ERROR";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "#1: eval(\"(function(){var x = 1;return\\u000Ax;var y=2;})()\") does not lead to throwing exception";
__n27["raw"] := "'#1: eval(\"(function(){var x = 1;return\\\\u000Ax;var y=2;})()\") does not lead to throwing exception'";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n19["body"] := __n21;
__n2["handler"] := __n19;
__n2["finalizer"] := null;
__n28 := {  };
__n28["type"] := "TryStatement";
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "IfStatement";
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "!==";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "eval";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "(function(){var x = 1;returnx;var y=2;})()";
__n36["raw"] := "\"(function(){var x = 1;return\\u000Dx;var y=2;})()\"";
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n32["left"] := __n33;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "undefined";
__n32["right"] := __n37;
__n31["test"] := __n32;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "$ERROR";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "#1: LineTerminator(U-000D) between return and Identifier_opt yields return without Identifier_opt";
__n44["raw"] := "\"#1: LineTerminator(U-000D) between return and Identifier_opt yields return without Identifier_opt\"";
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n31["consequent"] := __n38;
__n31["alternate"] := null;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n28["block"] := __n29;
__n45 := {  };
__n45["type"] := "CatchClause";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "e";
__n45["param"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#2: eval(\"(function(){var x = 1;return\\u000Dx;var y=2;})()\") does not lead to throwing exception";
__n53["raw"] := "'#2: eval(\"(function(){var x = 1;return\\\\u000Dx;var y=2;})()\") does not lead to throwing exception'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n45["body"] := __n47;
__n28["handler"] := __n45;
__n28["finalizer"] := null;
__n54 := {  };
__n54["type"] := "TryStatement";
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "eval";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "(function(){var x = 1;return x;var y=2;})()";
__n62["raw"] := "\"(function(){var x = 1;return\\u2028x;var y=2;})()\"";
__n61 := [ __n62 ];
__n59["arguments"] := __n61;
__n58["left"] := __n59;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "undefined";
__n58["right"] := __n63;
__n57["test"] := __n58;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$ERROR";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "#1: LineTerminator(U-2028) between return and Identifier_opt yields return without Identifier_opt";
__n70["raw"] := "\"#1: LineTerminator(U-2028) between return and Identifier_opt yields return without Identifier_opt\"";
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n57["consequent"] := __n64;
__n57["alternate"] := null;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n54["block"] := __n55;
__n71 := {  };
__n71["type"] := "CatchClause";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "e";
__n71["param"] := __n72;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "$ERROR";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "#3: eval(\"(function(){var x = 1;return\\u2028x;var y=2;})()\") does not lead to throwing exception";
__n79["raw"] := "'#3: eval(\"(function(){var x = 1;return\\\\u2028x;var y=2;})()\") does not lead to throwing exception'";
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["expression"] := __n76;
__n74 := [ __n75 ];
__n73["body"] := __n74;
__n71["body"] := __n73;
__n54["handler"] := __n71;
__n54["finalizer"] := null;
__n80 := {  };
__n80["type"] := "TryStatement";
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "IfStatement";
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "!==";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "eval";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "(function(){var x =1;return x;var y=2;})()";
__n88["raw"] := "\"(function(){var x =1;return\\u2029x;var y=2;})()\"";
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["left"] := __n85;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "undefined";
__n84["right"] := __n89;
__n83["test"] := __n84;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "$ERROR";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "#1: LineTerminator(U-2029) between return and Identifier_opt yields return without Identifier_opt";
__n96["raw"] := "\"#1: LineTerminator(U-2029) between return and Identifier_opt yields return without Identifier_opt\"";
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n83["consequent"] := __n90;
__n83["alternate"] := null;
__n82 := [ __n83 ];
__n81["body"] := __n82;
__n80["block"] := __n81;
__n97 := {  };
__n97["type"] := "CatchClause";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "e";
__n97["param"] := __n98;
__n99 := {  };
__n99["type"] := "BlockStatement";
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "$ERROR";
__n102["callee"] := __n103;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "#4: eval(\"(function(){var x =1;return\\u2029x;var y=2;})()\") does not lead to throwing exception";
__n105["raw"] := "'#4: eval(\"(function(){var x =1;return\\\\u2029x;var y=2;})()\") does not lead to throwing exception'";
__n104 := [ __n105 ];
__n102["arguments"] := __n104;
__n101["expression"] := __n102;
__n100 := [ __n101 ];
__n99["body"] := __n100;
__n97["body"] := __n99;
__n80["handler"] := __n97;
__n80["finalizer"] := null;
__n1 := [ __n2, __n28, __n54, __n80 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n106 := [  ];
__n0["variableDeclarations"] := __n106;
__n107 := [  ];
__n0["functionDeclarations"] := __n107;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}