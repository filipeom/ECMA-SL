function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "DD_operator";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "DDsin";
__n6["id"] := __n7;
__n6["init"] := null;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "DDsin";
__n9["left"] := __n10;
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "DD_operator";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Math";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "sin";
__n16["raw"] := "\"sin\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.00001;
__n17["raw"] := "0.00001";
__n13 := [ __n14, __n17 ];
__n11["arguments"] := __n13;
__n9["right"] := __n11;
__n8["expression"] := __n9;
__n18 := {  };
__n18["type"] := "IfStatement";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := ">";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "+";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "DDsin";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "/";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Math";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "PI";
__n27["raw"] := "\"PI\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["left"] := __n25;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 2.;
__n28["raw"] := "2";
__n24["right"] := __n28;
__n23 := [ __n24 ];
__n21["arguments"] := __n23;
__n20["left"] := __n21;
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Math";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "sin";
__n32["raw"] := "\"sin\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "/";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Math";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "PI";
__n37["raw"] := "\"PI\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["left"] := __n35;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 2.;
__n38["raw"] := "2";
__n34["right"] := __n38;
__n33 := [ __n34 ];
__n29["arguments"] := __n33;
__n20["right"] := __n29;
__n19["left"] := __n20;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 0.00001;
__n39["raw"] := "0.00001";
__n19["right"] := __n39;
__n18["test"] := __n19;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "#1: return Expression yields to Return (return, GetValue(Evaluate Expression), empty)";
__n46["raw"] := "'#1: return Expression yields to Return (return, GetValue(Evaluate Expression), empty)'";
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n18["consequent"] := __n40;
__n18["alternate"] := null;
__n1 := [ __n2, __n4, __n8, __n18 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n47 := [ "DDsin" ];
__n0["variableDeclarations"] := __n47;
__n49 := {  };
__n49["type"] := "FunctionDeclaration";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "DD_operator";
__n49["id"] := __n50;
__n51 := [ "f", "delta" ];
__n49["params"] := __n51;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ReturnStatement";
__n55 := {  };
__n55["type"] := "FunctionExpression";
__n55["id"] := null;
__n56 := [ "x" ];
__n55["params"] := __n56;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ReturnStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "/";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "-";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "f";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "+";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "x";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "delta";
__n66["right"] := __n68;
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["left"] := __n63;
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "*";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 2.;
__n70["raw"] := "2";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "f";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "x";
__n73 := [ __n74 ];
__n71["arguments"] := __n73;
__n69["right"] := __n71;
__n62["right"] := __n69;
__n61["left"] := __n62;
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "f";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "-";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "x";
__n78["left"] := __n79;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "delta";
__n78["right"] := __n80;
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n61["right"] := __n75;
__n60["left"] := __n61;
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "*";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "delta";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "delta";
__n81["right"] := __n83;
__n60["right"] := __n81;
__n59["argument"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n84 := [  ];
__n57["variableDeclarations"] := __n84;
__n85 := [  ];
__n57["functionDeclarations"] := __n85;
__n57["codeType"] := "function";
__n57["strict"] := false;
__n55["body"] := __n57;
__n55["generator"] := false;
__n55["expression"] := false;
__n55["async"] := false;
__n54["argument"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n86 := [  ];
__n52["variableDeclarations"] := __n86;
__n87 := [  ];
__n52["functionDeclarations"] := __n87;
__n52["codeType"] := "function";
__n52["strict"] := false;
__n49["body"] := __n52;
__n49["generator"] := false;
__n49["expression"] := false;
__n49["async"] := false;
__n48 := [ __n49 ];
__n0["functionDeclarations"] := __n48;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}