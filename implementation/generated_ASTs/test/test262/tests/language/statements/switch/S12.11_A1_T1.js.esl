function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "SwitchTest";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "IfStatement";
__n5 := {  };
__n5["type"] := "UnaryExpression";
__n5["operator"] := "!";
__n6 := {  };
__n6["type"] := "BinaryExpression";
__n6["operator"] := "===";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "SwitchTest";
__n7["callee"] := __n8;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n9 := [ __n10 ];
__n7["arguments"] := __n9;
__n6["left"] := __n7;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 6.;
__n11["raw"] := "6";
__n6["right"] := __n11;
__n5["argument"] := __n6;
__n5["prefix"] := true;
__n4["test"] := __n5;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "$ERROR";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "+";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "#1: SwitchTest(0) === 6. Actual:  SwitchTest(0) ===";
__n19["raw"] := "\"#1: SwitchTest(0) === 6. Actual:  SwitchTest(0) ===\"";
__n18["left"] := __n19;
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "SwitchTest";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 0.;
__n23["raw"] := "0";
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n18["right"] := __n20;
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n4["consequent"] := __n12;
__n4["alternate"] := null;
__n24 := {  };
__n24["type"] := "IfStatement";
__n25 := {  };
__n25["type"] := "UnaryExpression";
__n25["operator"] := "!";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "===";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "SwitchTest";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 1.;
__n30["raw"] := "1";
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["left"] := __n27;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 4.;
__n31["raw"] := "4";
__n26["right"] := __n31;
__n25["argument"] := __n26;
__n25["prefix"] := true;
__n24["test"] := __n25;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "$ERROR";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "+";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "#2: SwitchTest(1) === 4. Actual:  SwitchTest(1) ===";
__n39["raw"] := "\"#2: SwitchTest(1) === 4. Actual:  SwitchTest(1) ===\"";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "SwitchTest";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 1.;
__n43["raw"] := "1";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n38["right"] := __n40;
__n37 := [ __n38 ];
__n35["arguments"] := __n37;
__n34["expression"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n24["consequent"] := __n32;
__n24["alternate"] := null;
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "UnaryExpression";
__n45["operator"] := "!";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "===";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "SwitchTest";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 2.;
__n50["raw"] := "2";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["left"] := __n47;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 56.;
__n51["raw"] := "56";
__n46["right"] := __n51;
__n45["argument"] := __n46;
__n45["prefix"] := true;
__n44["test"] := __n45;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "+";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#3: SwitchTest(2) === 56. Actual:  SwitchTest(2) ===";
__n59["raw"] := "\"#3: SwitchTest(2) === 56. Actual:  SwitchTest(2) ===\"";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "SwitchTest";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 2.;
__n63["raw"] := "2";
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n58["right"] := __n60;
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n44["consequent"] := __n52;
__n44["alternate"] := null;
__n64 := {  };
__n64["type"] := "IfStatement";
__n65 := {  };
__n65["type"] := "UnaryExpression";
__n65["operator"] := "!";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "===";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "SwitchTest";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 3.;
__n70["raw"] := "3";
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["left"] := __n67;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 48.;
__n71["raw"] := "48";
__n66["right"] := __n71;
__n65["argument"] := __n66;
__n65["prefix"] := true;
__n64["test"] := __n65;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "$ERROR";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "+";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "#4: SwitchTest(3) === 48. Actual:  SwitchTest(3) ===";
__n79["raw"] := "\"#4: SwitchTest(3) === 48. Actual:  SwitchTest(3) ===\"";
__n78["left"] := __n79;
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "SwitchTest";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 3.;
__n83["raw"] := "3";
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n78["right"] := __n80;
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n64["consequent"] := __n72;
__n64["alternate"] := null;
__n84 := {  };
__n84["type"] := "IfStatement";
__n85 := {  };
__n85["type"] := "UnaryExpression";
__n85["operator"] := "!";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "===";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "SwitchTest";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 4.;
__n90["raw"] := "4";
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86["left"] := __n87;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 64.;
__n91["raw"] := "64";
__n86["right"] := __n91;
__n85["argument"] := __n86;
__n85["prefix"] := true;
__n84["test"] := __n85;
__n92 := {  };
__n92["type"] := "BlockStatement";
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "$ERROR";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "+";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "#5: SwitchTest(4) === 64. Actual:  SwitchTest(4) ===";
__n99["raw"] := "\"#5: SwitchTest(4) === 64. Actual:  SwitchTest(4) ===\"";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "SwitchTest";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := 4.;
__n103["raw"] := "4";
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n98["right"] := __n100;
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n94["expression"] := __n95;
__n93 := [ __n94 ];
__n92["body"] := __n93;
__n84["consequent"] := __n92;
__n84["alternate"] := null;
__n104 := {  };
__n104["type"] := "IfStatement";
__n105 := {  };
__n105["type"] := "UnaryExpression";
__n105["operator"] := "!";
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "===";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "SwitchTest";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := true;
__n110["raw"] := "true";
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n106["left"] := __n107;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 32.;
__n111["raw"] := "32";
__n106["right"] := __n111;
__n105["argument"] := __n106;
__n105["prefix"] := true;
__n104["test"] := __n105;
__n112 := {  };
__n112["type"] := "BlockStatement";
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "$ERROR";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "BinaryExpression";
__n118["operator"] := "+";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "#6: SwitchTest(true) === 32. Actual:  SwitchTest(true) ===";
__n119["raw"] := "\"#6: SwitchTest(true) === 32. Actual:  SwitchTest(true) ===\"";
__n118["left"] := __n119;
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "SwitchTest";
__n120["callee"] := __n121;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := true;
__n123["raw"] := "true";
__n122 := [ __n123 ];
__n120["arguments"] := __n122;
__n118["right"] := __n120;
__n117 := [ __n118 ];
__n115["arguments"] := __n117;
__n114["expression"] := __n115;
__n113 := [ __n114 ];
__n112["body"] := __n113;
__n104["consequent"] := __n112;
__n104["alternate"] := null;
__n124 := {  };
__n124["type"] := "IfStatement";
__n125 := {  };
__n125["type"] := "UnaryExpression";
__n125["operator"] := "!";
__n126 := {  };
__n126["type"] := "BinaryExpression";
__n126["operator"] := "===";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "SwitchTest";
__n127["callee"] := __n128;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := false;
__n130["raw"] := "false";
__n129 := [ __n130 ];
__n127["arguments"] := __n129;
__n126["left"] := __n127;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := 32.;
__n131["raw"] := "32";
__n126["right"] := __n131;
__n125["argument"] := __n126;
__n125["prefix"] := true;
__n124["test"] := __n125;
__n132 := {  };
__n132["type"] := "BlockStatement";
__n134 := {  };
__n134["type"] := "ExpressionStatement";
__n135 := {  };
__n135["type"] := "CallExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "$ERROR";
__n135["callee"] := __n136;
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "+";
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "#7: SwitchTest(false) === 32. Actual:  SwitchTest(false) ===";
__n139["raw"] := "\"#7: SwitchTest(false) === 32. Actual:  SwitchTest(false) ===\"";
__n138["left"] := __n139;
__n140 := {  };
__n140["type"] := "CallExpression";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "SwitchTest";
__n140["callee"] := __n141;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := false;
__n143["raw"] := "false";
__n142 := [ __n143 ];
__n140["arguments"] := __n142;
__n138["right"] := __n140;
__n137 := [ __n138 ];
__n135["arguments"] := __n137;
__n134["expression"] := __n135;
__n133 := [ __n134 ];
__n132["body"] := __n133;
__n124["consequent"] := __n132;
__n124["alternate"] := null;
__n144 := {  };
__n144["type"] := "IfStatement";
__n145 := {  };
__n145["type"] := "UnaryExpression";
__n145["operator"] := "!";
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "===";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "SwitchTest";
__n147["callee"] := __n148;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 'null;
__n150["raw"] := "\"'null\"";
__n149 := [ __n150 ];
__n147["arguments"] := __n149;
__n146["left"] := __n147;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := 32.;
__n151["raw"] := "32";
__n146["right"] := __n151;
__n145["argument"] := __n146;
__n145["prefix"] := true;
__n144["test"] := __n145;
__n152 := {  };
__n152["type"] := "BlockStatement";
__n154 := {  };
__n154["type"] := "ExpressionStatement";
__n155 := {  };
__n155["type"] := "CallExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "$ERROR";
__n155["callee"] := __n156;
__n158 := {  };
__n158["type"] := "BinaryExpression";
__n158["operator"] := "+";
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "#8: SwitchTest(null) === 32. Actual:  SwitchTest(null) ===";
__n159["raw"] := "\"#8: SwitchTest(null) === 32. Actual:  SwitchTest(null) ===\"";
__n158["left"] := __n159;
__n160 := {  };
__n160["type"] := "CallExpression";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "SwitchTest";
__n160["callee"] := __n161;
__n163 := {  };
__n163["type"] := "Literal";
__n163["value"] := 'null;
__n163["raw"] := "\"'null\"";
__n162 := [ __n163 ];
__n160["arguments"] := __n162;
__n158["right"] := __n160;
__n157 := [ __n158 ];
__n155["arguments"] := __n157;
__n154["expression"] := __n155;
__n153 := [ __n154 ];
__n152["body"] := __n153;
__n144["consequent"] := __n152;
__n144["alternate"] := null;
__n164 := {  };
__n164["type"] := "IfStatement";
__n165 := {  };
__n165["type"] := "UnaryExpression";
__n165["operator"] := "!";
__n166 := {  };
__n166["type"] := "BinaryExpression";
__n166["operator"] := "===";
__n167 := {  };
__n167["type"] := "CallExpression";
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "SwitchTest";
__n167["callee"] := __n168;
__n170 := {  };
__n170["type"] := "UnaryExpression";
__n170["operator"] := "void";
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := 0.;
__n171["raw"] := "0";
__n170["argument"] := __n171;
__n170["prefix"] := true;
__n169 := [ __n170 ];
__n167["arguments"] := __n169;
__n166["left"] := __n167;
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := 32.;
__n172["raw"] := "32";
__n166["right"] := __n172;
__n165["argument"] := __n166;
__n165["prefix"] := true;
__n164["test"] := __n165;
__n173 := {  };
__n173["type"] := "BlockStatement";
__n175 := {  };
__n175["type"] := "ExpressionStatement";
__n176 := {  };
__n176["type"] := "CallExpression";
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "$ERROR";
__n176["callee"] := __n177;
__n179 := {  };
__n179["type"] := "BinaryExpression";
__n179["operator"] := "+";
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := "#9: SwitchTest(void 0) === 32. Actual:  SwitchTest(void 0) ===";
__n180["raw"] := "\"#9: SwitchTest(void 0) === 32. Actual:  SwitchTest(void 0) ===\"";
__n179["left"] := __n180;
__n181 := {  };
__n181["type"] := "CallExpression";
__n182 := {  };
__n182["type"] := "Identifier";
__n182["name"] := "SwitchTest";
__n181["callee"] := __n182;
__n184 := {  };
__n184["type"] := "UnaryExpression";
__n184["operator"] := "void";
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := 0.;
__n185["raw"] := "0";
__n184["argument"] := __n185;
__n184["prefix"] := true;
__n183 := [ __n184 ];
__n181["arguments"] := __n183;
__n179["right"] := __n181;
__n178 := [ __n179 ];
__n176["arguments"] := __n178;
__n175["expression"] := __n176;
__n174 := [ __n175 ];
__n173["body"] := __n174;
__n164["consequent"] := __n173;
__n164["alternate"] := null;
__n186 := {  };
__n186["type"] := "IfStatement";
__n187 := {  };
__n187["type"] := "UnaryExpression";
__n187["operator"] := "!";
__n188 := {  };
__n188["type"] := "BinaryExpression";
__n188["operator"] := "===";
__n189 := {  };
__n189["type"] := "CallExpression";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "SwitchTest";
__n189["callee"] := __n190;
__n192 := {  };
__n192["type"] := "Literal";
__n192["value"] := "0";
__n192["raw"] := "'0'";
__n191 := [ __n192 ];
__n189["arguments"] := __n191;
__n188["left"] := __n189;
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := 32.;
__n193["raw"] := "32";
__n188["right"] := __n193;
__n187["argument"] := __n188;
__n187["prefix"] := true;
__n186["test"] := __n187;
__n194 := {  };
__n194["type"] := "BlockStatement";
__n196 := {  };
__n196["type"] := "ExpressionStatement";
__n197 := {  };
__n197["type"] := "CallExpression";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "$ERROR";
__n197["callee"] := __n198;
__n200 := {  };
__n200["type"] := "BinaryExpression";
__n200["operator"] := "+";
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := "#10: SwitchTest('0') === 32. Actual:  SwitchTest('0') ===";
__n201["raw"] := "\"#10: SwitchTest('0') === 32. Actual:  SwitchTest('0') ===\"";
__n200["left"] := __n201;
__n202 := {  };
__n202["type"] := "CallExpression";
__n203 := {  };
__n203["type"] := "Identifier";
__n203["name"] := "SwitchTest";
__n202["callee"] := __n203;
__n205 := {  };
__n205["type"] := "Literal";
__n205["value"] := "0";
__n205["raw"] := "'0'";
__n204 := [ __n205 ];
__n202["arguments"] := __n204;
__n200["right"] := __n202;
__n199 := [ __n200 ];
__n197["arguments"] := __n199;
__n196["expression"] := __n197;
__n195 := [ __n196 ];
__n194["body"] := __n195;
__n186["consequent"] := __n194;
__n186["alternate"] := null;
__n1 := [ __n2, __n4, __n24, __n44, __n64, __n84, __n104, __n124, __n144, __n164, __n186 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n206 := [  ];
__n0["variableDeclarations"] := __n206;
__n208 := {  };
__n208["type"] := "FunctionDeclaration";
__n209 := {  };
__n209["type"] := "Identifier";
__n209["name"] := "SwitchTest";
__n208["id"] := __n209;
__n210 := [ "value" ];
__n208["params"] := __n210;
__n211 := {  };
__n211["type"] := "BlockStatement";
__n213 := {  };
__n213["type"] := "VariableDeclaration";
__n215 := {  };
__n215["type"] := "VariableDeclarator";
__n216 := {  };
__n216["type"] := "Identifier";
__n216["name"] := "result";
__n215["id"] := __n216;
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := 0.;
__n217["raw"] := "0";
__n215["init"] := __n217;
__n214 := [ __n215 ];
__n213["declarations"] := __n214;
__n213["kind"] := "var";
__n218 := {  };
__n218["type"] := "SwitchStatement";
__n219 := {  };
__n219["type"] := "Identifier";
__n219["name"] := "value";
__n218["discriminant"] := __n219;
__n222 := {  };
__n222["type"] := "SwitchCase";
__n223 := {  };
__n223["type"] := "Literal";
__n223["value"] := 0.;
__n223["raw"] := "0";
__n222["test"] := __n223;
__n225 := {  };
__n225["type"] := "ExpressionStatement";
__n226 := {  };
__n226["type"] := "AssignmentExpression";
__n226["operator"] := "+=";
__n227 := {  };
__n227["type"] := "Identifier";
__n227["name"] := "result";
__n226["left"] := __n227;
__n228 := {  };
__n228["type"] := "Literal";
__n228["value"] := 2.;
__n228["raw"] := "2";
__n226["right"] := __n228;
__n225["expression"] := __n226;
__n224 := [ __n225 ];
__n222["consequent"] := __n224;
__n229 := {  };
__n229["type"] := "SwitchCase";
__n230 := {  };
__n230["type"] := "Literal";
__n230["value"] := 1.;
__n230["raw"] := "1";
__n229["test"] := __n230;
__n232 := {  };
__n232["type"] := "ExpressionStatement";
__n233 := {  };
__n233["type"] := "AssignmentExpression";
__n233["operator"] := "+=";
__n234 := {  };
__n234["type"] := "Identifier";
__n234["name"] := "result";
__n233["left"] := __n234;
__n235 := {  };
__n235["type"] := "Literal";
__n235["value"] := 4.;
__n235["raw"] := "4";
__n233["right"] := __n235;
__n232["expression"] := __n233;
__n236 := {  };
__n236["type"] := "BreakStatement";
__n236["label"] := null;
__n231 := [ __n232, __n236 ];
__n229["consequent"] := __n231;
__n237 := {  };
__n237["type"] := "SwitchCase";
__n238 := {  };
__n238["type"] := "Literal";
__n238["value"] := 2.;
__n238["raw"] := "2";
__n237["test"] := __n238;
__n240 := {  };
__n240["type"] := "ExpressionStatement";
__n241 := {  };
__n241["type"] := "AssignmentExpression";
__n241["operator"] := "+=";
__n242 := {  };
__n242["type"] := "Identifier";
__n242["name"] := "result";
__n241["left"] := __n242;
__n243 := {  };
__n243["type"] := "Literal";
__n243["value"] := 8.;
__n243["raw"] := "8";
__n241["right"] := __n243;
__n240["expression"] := __n241;
__n239 := [ __n240 ];
__n237["consequent"] := __n239;
__n244 := {  };
__n244["type"] := "SwitchCase";
__n245 := {  };
__n245["type"] := "Literal";
__n245["value"] := 3.;
__n245["raw"] := "3";
__n244["test"] := __n245;
__n247 := {  };
__n247["type"] := "ExpressionStatement";
__n248 := {  };
__n248["type"] := "AssignmentExpression";
__n248["operator"] := "+=";
__n249 := {  };
__n249["type"] := "Identifier";
__n249["name"] := "result";
__n248["left"] := __n249;
__n250 := {  };
__n250["type"] := "Literal";
__n250["value"] := 16.;
__n250["raw"] := "16";
__n248["right"] := __n250;
__n247["expression"] := __n248;
__n246 := [ __n247 ];
__n244["consequent"] := __n246;
__n221 := [ __n222, __n229, __n237, __n244 ];
__n251 := {  };
__n251["type"] := "SwitchCase";
__n251["test"] := null;
__n253 := {  };
__n253["type"] := "ExpressionStatement";
__n254 := {  };
__n254["type"] := "AssignmentExpression";
__n254["operator"] := "+=";
__n255 := {  };
__n255["type"] := "Identifier";
__n255["name"] := "result";
__n254["left"] := __n255;
__n256 := {  };
__n256["type"] := "Literal";
__n256["value"] := 32.;
__n256["raw"] := "32";
__n254["right"] := __n256;
__n253["expression"] := __n254;
__n257 := {  };
__n257["type"] := "BreakStatement";
__n257["label"] := null;
__n252 := [ __n253, __n257 ];
__n251["consequent"] := __n252;
__n259 := {  };
__n259["type"] := "SwitchCase";
__n260 := {  };
__n260["type"] := "Literal";
__n260["value"] := 4.;
__n260["raw"] := "4";
__n259["test"] := __n260;
__n262 := {  };
__n262["type"] := "ExpressionStatement";
__n263 := {  };
__n263["type"] := "AssignmentExpression";
__n263["operator"] := "+=";
__n264 := {  };
__n264["type"] := "Identifier";
__n264["name"] := "result";
__n263["left"] := __n264;
__n265 := {  };
__n265["type"] := "Literal";
__n265["value"] := 64.;
__n265["raw"] := "64";
__n263["right"] := __n265;
__n262["expression"] := __n263;
__n261 := [ __n262 ];
__n259["consequent"] := __n261;
__n258 := [ __n259 ];
__n220 := [ __n221, __n251, __n258 ];
__n218["cases"] := __n220;
__n266 := {  };
__n266["type"] := "ReturnStatement";
__n267 := {  };
__n267["type"] := "Identifier";
__n267["name"] := "result";
__n266["argument"] := __n267;
__n212 := [ __n213, __n218, __n266 ];
__n211["body"] := __n212;
__n268 := [ "result" ];
__n211["variableDeclarations"] := __n268;
__n269 := [  ];
__n211["functionDeclarations"] := __n269;
__n211["codeType"] := "function";
__n211["strict"] := false;
__n208["body"] := __n211;
__n208["generator"] := false;
__n208["expression"] := false;
__n208["async"] := false;
__n207 := [ __n208 ];
__n0["functionDeclarations"] := __n207;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}