function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Number";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 2.;
__n9["raw"] := "2";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "SwitchTest";
__n10["expression"] := __n11;
__n12 := {  };
__n12["type"] := "IfStatement";
__n13 := {  };
__n13["type"] := "UnaryExpression";
__n13["operator"] := "!";
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "===";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "SwitchTest";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 0.;
__n18["raw"] := "0";
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["left"] := __n15;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 6.;
__n19["raw"] := "6";
__n14["right"] := __n19;
__n13["argument"] := __n14;
__n13["prefix"] := true;
__n12["test"] := __n13;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "$ERROR";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "+";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "#1: SwitchTest(0) === 6. Actual:  SwitchTest(0) ===";
__n27["raw"] := "\"#1: SwitchTest(0) === 6. Actual:  SwitchTest(0) ===\"";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "SwitchTest";
__n28["callee"] := __n29;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 0.;
__n31["raw"] := "0";
__n30 := [ __n31 ];
__n28["arguments"] := __n30;
__n26["right"] := __n28;
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n12["consequent"] := __n20;
__n12["alternate"] := null;
__n32 := {  };
__n32["type"] := "IfStatement";
__n33 := {  };
__n33["type"] := "UnaryExpression";
__n33["operator"] := "!";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "===";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "SwitchTest";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 1.;
__n38["raw"] := "1";
__n37 := [ __n38 ];
__n35["arguments"] := __n37;
__n34["left"] := __n35;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 512.;
__n39["raw"] := "512";
__n34["right"] := __n39;
__n33["argument"] := __n34;
__n33["prefix"] := true;
__n32["test"] := __n33;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "+";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#2: SwitchTest(1) === 512. Actual:  SwitchTest(1) ===";
__n47["raw"] := "\"#2: SwitchTest(1) === 512. Actual:  SwitchTest(1) ===\"";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "SwitchTest";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 1.;
__n51["raw"] := "1";
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n46["right"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n32["consequent"] := __n40;
__n32["alternate"] := null;
__n52 := {  };
__n52["type"] := "IfStatement";
__n53 := {  };
__n53["type"] := "UnaryExpression";
__n53["operator"] := "!";
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "===";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "SwitchTest";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 2.;
__n58["raw"] := "2";
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["left"] := __n55;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 32.;
__n59["raw"] := "32";
__n54["right"] := __n59;
__n53["argument"] := __n54;
__n53["prefix"] := true;
__n52["test"] := __n53;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "$ERROR";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "+";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "#3: SwitchTest(2) === 32. Actual:  SwitchTest(2) ===";
__n67["raw"] := "\"#3: SwitchTest(2) === 32. Actual:  SwitchTest(2) ===\"";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "SwitchTest";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 2.;
__n71["raw"] := "2";
__n70 := [ __n71 ];
__n68["arguments"] := __n70;
__n66["right"] := __n68;
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n52["consequent"] := __n60;
__n52["alternate"] := null;
__n72 := {  };
__n72["type"] := "IfStatement";
__n73 := {  };
__n73["type"] := "UnaryExpression";
__n73["operator"] := "!";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "===";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "SwitchTest";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 3.;
__n78["raw"] := "3";
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["left"] := __n75;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 48.;
__n79["raw"] := "48";
__n74["right"] := __n79;
__n73["argument"] := __n74;
__n73["prefix"] := true;
__n72["test"] := __n73;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#4: SwitchTest(3) === 48. Actual:  SwitchTest(3) ===";
__n87["raw"] := "\"#4: SwitchTest(3) === 48. Actual:  SwitchTest(3) ===\"";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "SwitchTest";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 3.;
__n91["raw"] := "3";
__n90 := [ __n91 ];
__n88["arguments"] := __n90;
__n86["right"] := __n88;
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n72["consequent"] := __n80;
__n72["alternate"] := null;
__n92 := {  };
__n92["type"] := "IfStatement";
__n93 := {  };
__n93["type"] := "UnaryExpression";
__n93["operator"] := "!";
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "===";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "SwitchTest";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 4.;
__n98["raw"] := "4";
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n94["left"] := __n95;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 64.;
__n99["raw"] := "64";
__n94["right"] := __n99;
__n93["argument"] := __n94;
__n93["prefix"] := true;
__n92["test"] := __n93;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "$ERROR";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "+";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "#5: SwitchTest(4) === 64. Actual:  SwitchTest(4) ===";
__n107["raw"] := "\"#5: SwitchTest(4) === 64. Actual:  SwitchTest(4) ===\"";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "SwitchTest";
__n108["callee"] := __n109;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 4.;
__n111["raw"] := "4";
__n110 := [ __n111 ];
__n108["arguments"] := __n110;
__n106["right"] := __n108;
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n102["expression"] := __n103;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n92["consequent"] := __n100;
__n92["alternate"] := null;
__n112 := {  };
__n112["type"] := "IfStatement";
__n113 := {  };
__n113["type"] := "UnaryExpression";
__n113["operator"] := "!";
__n114 := {  };
__n114["type"] := "BinaryExpression";
__n114["operator"] := "===";
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "SwitchTest";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := true;
__n118["raw"] := "true";
__n117 := [ __n118 ];
__n115["arguments"] := __n117;
__n114["left"] := __n115;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 32.;
__n119["raw"] := "32";
__n114["right"] := __n119;
__n113["argument"] := __n114;
__n113["prefix"] := true;
__n112["test"] := __n113;
__n120 := {  };
__n120["type"] := "BlockStatement";
__n122 := {  };
__n122["type"] := "ExpressionStatement";
__n123 := {  };
__n123["type"] := "CallExpression";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "$ERROR";
__n123["callee"] := __n124;
__n126 := {  };
__n126["type"] := "BinaryExpression";
__n126["operator"] := "+";
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "#6: SwitchTest(true) === 32. Actual:  SwitchTest(true) ===";
__n127["raw"] := "\"#6: SwitchTest(true) === 32. Actual:  SwitchTest(true) ===\"";
__n126["left"] := __n127;
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "SwitchTest";
__n128["callee"] := __n129;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := true;
__n131["raw"] := "true";
__n130 := [ __n131 ];
__n128["arguments"] := __n130;
__n126["right"] := __n128;
__n125 := [ __n126 ];
__n123["arguments"] := __n125;
__n122["expression"] := __n123;
__n121 := [ __n122 ];
__n120["body"] := __n121;
__n112["consequent"] := __n120;
__n112["alternate"] := null;
__n132 := {  };
__n132["type"] := "IfStatement";
__n133 := {  };
__n133["type"] := "UnaryExpression";
__n133["operator"] := "!";
__n134 := {  };
__n134["type"] := "BinaryExpression";
__n134["operator"] := "===";
__n135 := {  };
__n135["type"] := "CallExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "SwitchTest";
__n135["callee"] := __n136;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := false;
__n138["raw"] := "false";
__n137 := [ __n138 ];
__n135["arguments"] := __n137;
__n134["left"] := __n135;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := 32.;
__n139["raw"] := "32";
__n134["right"] := __n139;
__n133["argument"] := __n134;
__n133["prefix"] := true;
__n132["test"] := __n133;
__n140 := {  };
__n140["type"] := "BlockStatement";
__n142 := {  };
__n142["type"] := "ExpressionStatement";
__n143 := {  };
__n143["type"] := "CallExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "$ERROR";
__n143["callee"] := __n144;
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "+";
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "#7: SwitchTest(false) === 32. Actual:  SwitchTest(false) ===";
__n147["raw"] := "\"#7: SwitchTest(false) === 32. Actual:  SwitchTest(false) ===\"";
__n146["left"] := __n147;
__n148 := {  };
__n148["type"] := "CallExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "SwitchTest";
__n148["callee"] := __n149;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := false;
__n151["raw"] := "false";
__n150 := [ __n151 ];
__n148["arguments"] := __n150;
__n146["right"] := __n148;
__n145 := [ __n146 ];
__n143["arguments"] := __n145;
__n142["expression"] := __n143;
__n141 := [ __n142 ];
__n140["body"] := __n141;
__n132["consequent"] := __n140;
__n132["alternate"] := null;
__n152 := {  };
__n152["type"] := "IfStatement";
__n153 := {  };
__n153["type"] := "UnaryExpression";
__n153["operator"] := "!";
__n154 := {  };
__n154["type"] := "BinaryExpression";
__n154["operator"] := "===";
__n155 := {  };
__n155["type"] := "CallExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "SwitchTest";
__n155["callee"] := __n156;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := 'null;
__n158["raw"] := "\"'null\"";
__n157 := [ __n158 ];
__n155["arguments"] := __n157;
__n154["left"] := __n155;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := 32.;
__n159["raw"] := "32";
__n154["right"] := __n159;
__n153["argument"] := __n154;
__n153["prefix"] := true;
__n152["test"] := __n153;
__n160 := {  };
__n160["type"] := "BlockStatement";
__n162 := {  };
__n162["type"] := "ExpressionStatement";
__n163 := {  };
__n163["type"] := "CallExpression";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "$ERROR";
__n163["callee"] := __n164;
__n166 := {  };
__n166["type"] := "BinaryExpression";
__n166["operator"] := "+";
__n167 := {  };
__n167["type"] := "Literal";
__n167["value"] := "#8: SwitchTest(null) === 32. Actual:  SwitchTest(null) ===";
__n167["raw"] := "\"#8: SwitchTest(null) === 32. Actual:  SwitchTest(null) ===\"";
__n166["left"] := __n167;
__n168 := {  };
__n168["type"] := "CallExpression";
__n169 := {  };
__n169["type"] := "Identifier";
__n169["name"] := "SwitchTest";
__n168["callee"] := __n169;
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := 'null;
__n171["raw"] := "\"'null\"";
__n170 := [ __n171 ];
__n168["arguments"] := __n170;
__n166["right"] := __n168;
__n165 := [ __n166 ];
__n163["arguments"] := __n165;
__n162["expression"] := __n163;
__n161 := [ __n162 ];
__n160["body"] := __n161;
__n152["consequent"] := __n160;
__n152["alternate"] := null;
__n172 := {  };
__n172["type"] := "IfStatement";
__n173 := {  };
__n173["type"] := "UnaryExpression";
__n173["operator"] := "!";
__n174 := {  };
__n174["type"] := "BinaryExpression";
__n174["operator"] := "===";
__n175 := {  };
__n175["type"] := "CallExpression";
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "SwitchTest";
__n175["callee"] := __n176;
__n178 := {  };
__n178["type"] := "UnaryExpression";
__n178["operator"] := "void";
__n179 := {  };
__n179["type"] := "Literal";
__n179["value"] := 0.;
__n179["raw"] := "0";
__n178["argument"] := __n179;
__n178["prefix"] := true;
__n177 := [ __n178 ];
__n175["arguments"] := __n177;
__n174["left"] := __n175;
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := 32.;
__n180["raw"] := "32";
__n174["right"] := __n180;
__n173["argument"] := __n174;
__n173["prefix"] := true;
__n172["test"] := __n173;
__n181 := {  };
__n181["type"] := "BlockStatement";
__n183 := {  };
__n183["type"] := "ExpressionStatement";
__n184 := {  };
__n184["type"] := "CallExpression";
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "$ERROR";
__n184["callee"] := __n185;
__n187 := {  };
__n187["type"] := "BinaryExpression";
__n187["operator"] := "+";
__n188 := {  };
__n188["type"] := "Literal";
__n188["value"] := "#9: SwitchTest(void 0) === 32. Actual:  SwitchTest(void 0) ===";
__n188["raw"] := "\"#9: SwitchTest(void 0) === 32. Actual:  SwitchTest(void 0) ===\"";
__n187["left"] := __n188;
__n189 := {  };
__n189["type"] := "CallExpression";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "SwitchTest";
__n189["callee"] := __n190;
__n192 := {  };
__n192["type"] := "UnaryExpression";
__n192["operator"] := "void";
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := 0.;
__n193["raw"] := "0";
__n192["argument"] := __n193;
__n192["prefix"] := true;
__n191 := [ __n192 ];
__n189["arguments"] := __n191;
__n187["right"] := __n189;
__n186 := [ __n187 ];
__n184["arguments"] := __n186;
__n183["expression"] := __n184;
__n182 := [ __n183 ];
__n181["body"] := __n182;
__n172["consequent"] := __n181;
__n172["alternate"] := null;
__n194 := {  };
__n194["type"] := "IfStatement";
__n195 := {  };
__n195["type"] := "UnaryExpression";
__n195["operator"] := "!";
__n196 := {  };
__n196["type"] := "BinaryExpression";
__n196["operator"] := "===";
__n197 := {  };
__n197["type"] := "CallExpression";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "SwitchTest";
__n197["callee"] := __n198;
__n200 := {  };
__n200["type"] := "Literal";
__n200["value"] := "0";
__n200["raw"] := "'0'";
__n199 := [ __n200 ];
__n197["arguments"] := __n199;
__n196["left"] := __n197;
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := 32.;
__n201["raw"] := "32";
__n196["right"] := __n201;
__n195["argument"] := __n196;
__n195["prefix"] := true;
__n194["test"] := __n195;
__n202 := {  };
__n202["type"] := "BlockStatement";
__n204 := {  };
__n204["type"] := "ExpressionStatement";
__n205 := {  };
__n205["type"] := "CallExpression";
__n206 := {  };
__n206["type"] := "Identifier";
__n206["name"] := "$ERROR";
__n205["callee"] := __n206;
__n208 := {  };
__n208["type"] := "BinaryExpression";
__n208["operator"] := "+";
__n209 := {  };
__n209["type"] := "Literal";
__n209["value"] := "#10: SwitchTest('0') === 32. Actual:  SwitchTest('0') ===";
__n209["raw"] := "\"#10: SwitchTest('0') === 32. Actual:  SwitchTest('0') ===\"";
__n208["left"] := __n209;
__n210 := {  };
__n210["type"] := "CallExpression";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "SwitchTest";
__n210["callee"] := __n211;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := "0";
__n213["raw"] := "'0'";
__n212 := [ __n213 ];
__n210["arguments"] := __n212;
__n208["right"] := __n210;
__n207 := [ __n208 ];
__n205["arguments"] := __n207;
__n204["expression"] := __n205;
__n203 := [ __n204 ];
__n202["body"] := __n203;
__n194["consequent"] := __n202;
__n194["alternate"] := null;
__n214 := {  };
__n214["type"] := "IfStatement";
__n215 := {  };
__n215["type"] := "UnaryExpression";
__n215["operator"] := "!";
__n216 := {  };
__n216["type"] := "BinaryExpression";
__n216["operator"] := "===";
__n217 := {  };
__n217["type"] := "CallExpression";
__n218 := {  };
__n218["type"] := "Identifier";
__n218["name"] := "SwitchTest";
__n217["callee"] := __n218;
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "x";
__n219 := [ __n220 ];
__n217["arguments"] := __n219;
__n216["left"] := __n217;
__n221 := {  };
__n221["type"] := "Literal";
__n221["value"] := 128.;
__n221["raw"] := "128";
__n216["right"] := __n221;
__n215["argument"] := __n216;
__n215["prefix"] := true;
__n214["test"] := __n215;
__n222 := {  };
__n222["type"] := "BlockStatement";
__n224 := {  };
__n224["type"] := "ExpressionStatement";
__n225 := {  };
__n225["type"] := "CallExpression";
__n226 := {  };
__n226["type"] := "Identifier";
__n226["name"] := "$ERROR";
__n225["callee"] := __n226;
__n228 := {  };
__n228["type"] := "BinaryExpression";
__n228["operator"] := "+";
__n229 := {  };
__n229["type"] := "Literal";
__n229["value"] := "#10: SwitchTest(x) === 128. Actual:  SwitchTest(x) ===";
__n229["raw"] := "\"#10: SwitchTest(x) === 128. Actual:  SwitchTest(x) ===\"";
__n228["left"] := __n229;
__n230 := {  };
__n230["type"] := "CallExpression";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "SwitchTest";
__n230["callee"] := __n231;
__n233 := {  };
__n233["type"] := "Identifier";
__n233["name"] := "x";
__n232 := [ __n233 ];
__n230["arguments"] := __n232;
__n228["right"] := __n230;
__n227 := [ __n228 ];
__n225["arguments"] := __n227;
__n224["expression"] := __n225;
__n223 := [ __n224 ];
__n222["body"] := __n223;
__n214["consequent"] := __n222;
__n214["alternate"] := null;
__n1 := [ __n2, __n10, __n12, __n32, __n52, __n72, __n92, __n112, __n132, __n152, __n172, __n194, __n214 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n234 := [ "x" ];
__n0["variableDeclarations"] := __n234;
__n236 := {  };
__n236["type"] := "FunctionDeclaration";
__n237 := {  };
__n237["type"] := "Identifier";
__n237["name"] := "SwitchTest";
__n236["id"] := __n237;
__n238 := [ "value" ];
__n236["params"] := __n238;
__n239 := {  };
__n239["type"] := "BlockStatement";
__n241 := {  };
__n241["type"] := "VariableDeclaration";
__n243 := {  };
__n243["type"] := "VariableDeclarator";
__n244 := {  };
__n244["type"] := "Identifier";
__n244["name"] := "result";
__n243["id"] := __n244;
__n245 := {  };
__n245["type"] := "Literal";
__n245["value"] := 0.;
__n245["raw"] := "0";
__n243["init"] := __n245;
__n242 := [ __n243 ];
__n241["declarations"] := __n242;
__n241["kind"] := "var";
__n246 := {  };
__n246["type"] := "SwitchStatement";
__n247 := {  };
__n247["type"] := "Identifier";
__n247["name"] := "value";
__n246["discriminant"] := __n247;
__n250 := {  };
__n250["type"] := "SwitchCase";
__n251 := {  };
__n251["type"] := "Literal";
__n251["value"] := 0.;
__n251["raw"] := "0";
__n250["test"] := __n251;
__n253 := {  };
__n253["type"] := "ExpressionStatement";
__n254 := {  };
__n254["type"] := "AssignmentExpression";
__n254["operator"] := "+=";
__n255 := {  };
__n255["type"] := "Identifier";
__n255["name"] := "result";
__n254["left"] := __n255;
__n256 := {  };
__n256["type"] := "Literal";
__n256["value"] := 2.;
__n256["raw"] := "2";
__n254["right"] := __n256;
__n253["expression"] := __n254;
__n252 := [ __n253 ];
__n250["consequent"] := __n252;
__n257 := {  };
__n257["type"] := "SwitchCase";
__n258 := {  };
__n258["type"] := "Literal";
__n258["value"] := "1";
__n258["raw"] := "'1'";
__n257["test"] := __n258;
__n260 := {  };
__n260["type"] := "ExpressionStatement";
__n261 := {  };
__n261["type"] := "AssignmentExpression";
__n261["operator"] := "+=";
__n262 := {  };
__n262["type"] := "Identifier";
__n262["name"] := "result";
__n261["left"] := __n262;
__n263 := {  };
__n263["type"] := "Literal";
__n263["value"] := 4.;
__n263["raw"] := "4";
__n261["right"] := __n263;
__n260["expression"] := __n261;
__n264 := {  };
__n264["type"] := "BreakStatement";
__n264["label"] := null;
__n259 := [ __n260, __n264 ];
__n257["consequent"] := __n259;
__n265 := {  };
__n265["type"] := "SwitchCase";
__n266 := {  };
__n266["type"] := "NewExpression";
__n267 := {  };
__n267["type"] := "Identifier";
__n267["name"] := "Number";
__n266["callee"] := __n267;
__n269 := {  };
__n269["type"] := "Literal";
__n269["value"] := 2.;
__n269["raw"] := "2";
__n268 := [ __n269 ];
__n266["arguments"] := __n268;
__n265["test"] := __n266;
__n271 := {  };
__n271["type"] := "ExpressionStatement";
__n272 := {  };
__n272["type"] := "AssignmentExpression";
__n272["operator"] := "+=";
__n273 := {  };
__n273["type"] := "Identifier";
__n273["name"] := "result";
__n272["left"] := __n273;
__n274 := {  };
__n274["type"] := "Literal";
__n274["value"] := 8.;
__n274["raw"] := "8";
__n272["right"] := __n274;
__n271["expression"] := __n272;
__n270 := [ __n271 ];
__n265["consequent"] := __n270;
__n275 := {  };
__n275["type"] := "SwitchCase";
__n276 := {  };
__n276["type"] := "Literal";
__n276["value"] := 3.;
__n276["raw"] := "3";
__n275["test"] := __n276;
__n278 := {  };
__n278["type"] := "ExpressionStatement";
__n279 := {  };
__n279["type"] := "AssignmentExpression";
__n279["operator"] := "+=";
__n280 := {  };
__n280["type"] := "Identifier";
__n280["name"] := "result";
__n279["left"] := __n280;
__n281 := {  };
__n281["type"] := "Literal";
__n281["value"] := 16.;
__n281["raw"] := "16";
__n279["right"] := __n281;
__n278["expression"] := __n279;
__n277 := [ __n278 ];
__n275["consequent"] := __n277;
__n249 := [ __n250, __n257, __n265, __n275 ];
__n282 := {  };
__n282["type"] := "SwitchCase";
__n282["test"] := null;
__n284 := {  };
__n284["type"] := "ExpressionStatement";
__n285 := {  };
__n285["type"] := "AssignmentExpression";
__n285["operator"] := "+=";
__n286 := {  };
__n286["type"] := "Identifier";
__n286["name"] := "result";
__n285["left"] := __n286;
__n287 := {  };
__n287["type"] := "Literal";
__n287["value"] := 32.;
__n287["raw"] := "32";
__n285["right"] := __n287;
__n284["expression"] := __n285;
__n288 := {  };
__n288["type"] := "BreakStatement";
__n288["label"] := null;
__n283 := [ __n284, __n288 ];
__n282["consequent"] := __n283;
__n290 := {  };
__n290["type"] := "SwitchCase";
__n291 := {  };
__n291["type"] := "Literal";
__n291["value"] := 4.;
__n291["raw"] := "4";
__n290["test"] := __n291;
__n293 := {  };
__n293["type"] := "ExpressionStatement";
__n294 := {  };
__n294["type"] := "AssignmentExpression";
__n294["operator"] := "+=";
__n295 := {  };
__n295["type"] := "Identifier";
__n295["name"] := "result";
__n294["left"] := __n295;
__n296 := {  };
__n296["type"] := "Literal";
__n296["value"] := 64.;
__n296["raw"] := "64";
__n294["right"] := __n296;
__n293["expression"] := __n294;
__n297 := {  };
__n297["type"] := "BreakStatement";
__n297["label"] := null;
__n292 := [ __n293, __n297 ];
__n290["consequent"] := __n292;
__n298 := {  };
__n298["type"] := "SwitchCase";
__n299 := {  };
__n299["type"] := "Identifier";
__n299["name"] := "x";
__n298["test"] := __n299;
__n301 := {  };
__n301["type"] := "ExpressionStatement";
__n302 := {  };
__n302["type"] := "AssignmentExpression";
__n302["operator"] := "+=";
__n303 := {  };
__n303["type"] := "Identifier";
__n303["name"] := "result";
__n302["left"] := __n303;
__n304 := {  };
__n304["type"] := "Literal";
__n304["value"] := 128.;
__n304["raw"] := "128";
__n302["right"] := __n304;
__n301["expression"] := __n302;
__n305 := {  };
__n305["type"] := "BreakStatement";
__n305["label"] := null;
__n300 := [ __n301, __n305 ];
__n298["consequent"] := __n300;
__n306 := {  };
__n306["type"] := "SwitchCase";
__n307 := {  };
__n307["type"] := "Literal";
__n307["value"] := 0.;
__n307["raw"] := "0";
__n306["test"] := __n307;
__n309 := {  };
__n309["type"] := "ExpressionStatement";
__n310 := {  };
__n310["type"] := "AssignmentExpression";
__n310["operator"] := "+=";
__n311 := {  };
__n311["type"] := "Identifier";
__n311["name"] := "result";
__n310["left"] := __n311;
__n312 := {  };
__n312["type"] := "Literal";
__n312["value"] := 256.;
__n312["raw"] := "256";
__n310["right"] := __n312;
__n309["expression"] := __n310;
__n308 := [ __n309 ];
__n306["consequent"] := __n308;
__n313 := {  };
__n313["type"] := "SwitchCase";
__n314 := {  };
__n314["type"] := "Literal";
__n314["value"] := 1.;
__n314["raw"] := "1";
__n313["test"] := __n314;
__n316 := {  };
__n316["type"] := "ExpressionStatement";
__n317 := {  };
__n317["type"] := "AssignmentExpression";
__n317["operator"] := "+=";
__n318 := {  };
__n318["type"] := "Identifier";
__n318["name"] := "result";
__n317["left"] := __n318;
__n319 := {  };
__n319["type"] := "Literal";
__n319["value"] := 512.;
__n319["raw"] := "512";
__n317["right"] := __n319;
__n316["expression"] := __n317;
__n315 := [ __n316 ];
__n313["consequent"] := __n315;
__n289 := [ __n290, __n298, __n306, __n313 ];
__n248 := [ __n249, __n282, __n289 ];
__n246["cases"] := __n248;
__n320 := {  };
__n320["type"] := "ReturnStatement";
__n321 := {  };
__n321["type"] := "Identifier";
__n321["name"] := "result";
__n320["argument"] := __n321;
__n240 := [ __n241, __n246, __n320 ];
__n239["body"] := __n240;
__n322 := [ "result" ];
__n239["variableDeclarations"] := __n322;
__n323 := [  ];
__n239["functionDeclarations"] := __n323;
__n239["codeType"] := "function";
__n239["strict"] := false;
__n236["body"] := __n239;
__n236["generator"] := false;
__n236["expression"] := false;
__n236["async"] := false;
__n235 := [ __n236 ];
__n0["functionDeclarations"] := __n235;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}