function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "SwitchStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := 0.;
__n3["raw"] := "0";
__n2["discriminant"] := __n3;
__n6 := {  };
__n6["type"] := "SwitchCase";
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 1.;
__n7["raw"] := "1";
__n6["test"] := __n7;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "f";
__n11["id"] := __n12;
__n11["init"] := null;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n8 := [ __n9 ];
__n6["consequent"] := __n8;
__n5 := [ __n6 ];
__n13 := {  };
__n13["type"] := "SwitchCase";
__n13["test"] := null;
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "f";
__n17["id"] := __n18;
__n17["init"] := null;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n14 := [ __n15 ];
__n13["consequent"] := __n14;
__n19 := [  ];
__n4 := [ __n5, __n13, __n19 ];
__n2["cases"] := __n4;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n20 := [ "f" ];
__n0["variableDeclarations"] := __n20;
__n21 := [  ];
__n0["functionDeclarations"] := __n21;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}