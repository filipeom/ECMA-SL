function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "ThrowStatement";
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 13.;
__n6["raw"] := "13";
__n5["argument"] := __n6;
__n4 := [ __n5 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n7 := {  };
__n7["type"] := "CatchClause";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "e";
__n7["param"] := __n8;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "IfStatement";
__n12 := {  };
__n12["type"] := "BinaryExpression";
__n12["operator"] := "!==";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "e";
__n12["left"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 13.;
__n14["raw"] := "13";
__n12["right"] := __n14;
__n11["test"] := __n12;
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "$ERROR";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "+";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "#1: Exception ===13. Actual:  Exception ===";
__n20["raw"] := "'#1: Exception ===13. Actual:  Exception ==='";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "e";
__n19["right"] := __n21;
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n15["expression"] := __n16;
__n11["consequent"] := __n15;
__n11["alternate"] := null;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n7["body"] := __n9;
__n2["handler"] := __n7;
__n2["finalizer"] := null;
__n22 := {  };
__n22["type"] := "VariableDeclaration";
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "b";
__n24["id"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 13.;
__n26["raw"] := "13";
__n24["init"] := __n26;
__n23 := [ __n24 ];
__n22["declarations"] := __n23;
__n22["kind"] := "var";
__n27 := {  };
__n27["type"] := "TryStatement";
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ThrowStatement";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "b";
__n30["argument"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n27["block"] := __n28;
__n32 := {  };
__n32["type"] := "CatchClause";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "e";
__n32["param"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "IfStatement";
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "!==";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "e";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 13.;
__n39["raw"] := "13";
__n37["right"] := __n39;
__n36["test"] := __n37;
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "$ERROR";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "+";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "#2: Exception ===13. Actual:  Exception ===";
__n45["raw"] := "'#2: Exception ===13. Actual:  Exception ==='";
__n44["left"] := __n45;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "e";
__n44["right"] := __n46;
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n40["expression"] := __n41;
__n36["consequent"] := __n40;
__n36["alternate"] := null;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n32["body"] := __n34;
__n27["handler"] := __n32;
__n27["finalizer"] := null;
__n47 := {  };
__n47["type"] := "TryStatement";
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ThrowStatement";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 2.13;
__n51["raw"] := "2.13";
__n50["argument"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n47["block"] := __n48;
__n52 := {  };
__n52["type"] := "CatchClause";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "e";
__n52["param"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "!==";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "e";
__n57["left"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 2.13;
__n59["raw"] := "2.13";
__n57["right"] := __n59;
__n56["test"] := __n57;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$ERROR";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "+";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "#3: Exception ===2.13. Actual:  Exception ===";
__n65["raw"] := "'#3: Exception ===2.13. Actual:  Exception ==='";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "e";
__n64["right"] := __n66;
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n56["consequent"] := __n60;
__n56["alternate"] := null;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n52["body"] := __n54;
__n47["handler"] := __n52;
__n47["finalizer"] := null;
__n67 := {  };
__n67["type"] := "TryStatement";
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ThrowStatement";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "NaN";
__n70["argument"] := __n71;
__n69 := [ __n70 ];
__n68["body"] := __n69;
__n67["block"] := __n68;
__n72 := {  };
__n72["type"] := "CatchClause";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "e";
__n72["param"] := __n73;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "IfStatement";
__n77 := {  };
__n77["type"] := "UnaryExpression";
__n77["operator"] := "!";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "isNaN";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "e";
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["argument"] := __n78;
__n77["prefix"] := true;
__n76["test"] := __n77;
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "#4: Exception is NaN";
__n86["raw"] := "'#4: Exception is NaN'";
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n76["consequent"] := __n82;
__n76["alternate"] := null;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n72["body"] := __n74;
__n67["handler"] := __n72;
__n67["finalizer"] := null;
__n87 := {  };
__n87["type"] := "TryStatement";
__n88 := {  };
__n88["type"] := "BlockStatement";
__n90 := {  };
__n90["type"] := "ThrowStatement";
__n91 := {  };
__n91["type"] := "UnaryExpression";
__n91["operator"] := "+";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "Infinity";
__n91["argument"] := __n92;
__n91["prefix"] := true;
__n90["argument"] := __n91;
__n89 := [ __n90 ];
__n88["body"] := __n89;
__n87["block"] := __n88;
__n93 := {  };
__n93["type"] := "CatchClause";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "e";
__n93["param"] := __n94;
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "IfStatement";
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "!==";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "e";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "UnaryExpression";
__n100["operator"] := "+";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "Infinity";
__n100["argument"] := __n101;
__n100["prefix"] := true;
__n98["right"] := __n100;
__n97["test"] := __n98;
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "$ERROR";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "+";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "#5: Exception ===+Infinity. Actual:  Exception ===";
__n107["raw"] := "'#5: Exception ===+Infinity. Actual:  Exception ==='";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "e";
__n106["right"] := __n108;
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n102["expression"] := __n103;
__n97["consequent"] := __n102;
__n97["alternate"] := null;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n93["body"] := __n95;
__n87["handler"] := __n93;
__n87["finalizer"] := null;
__n109 := {  };
__n109["type"] := "TryStatement";
__n110 := {  };
__n110["type"] := "BlockStatement";
__n112 := {  };
__n112["type"] := "ThrowStatement";
__n113 := {  };
__n113["type"] := "UnaryExpression";
__n113["operator"] := "-";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "Infinity";
__n113["argument"] := __n114;
__n113["prefix"] := true;
__n112["argument"] := __n113;
__n111 := [ __n112 ];
__n110["body"] := __n111;
__n109["block"] := __n110;
__n115 := {  };
__n115["type"] := "CatchClause";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "e";
__n115["param"] := __n116;
__n117 := {  };
__n117["type"] := "BlockStatement";
__n119 := {  };
__n119["type"] := "IfStatement";
__n120 := {  };
__n120["type"] := "BinaryExpression";
__n120["operator"] := "!==";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "e";
__n120["left"] := __n121;
__n122 := {  };
__n122["type"] := "UnaryExpression";
__n122["operator"] := "-";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "Infinity";
__n122["argument"] := __n123;
__n122["prefix"] := true;
__n120["right"] := __n122;
__n119["test"] := __n120;
__n124 := {  };
__n124["type"] := "ExpressionStatement";
__n125 := {  };
__n125["type"] := "CallExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "$ERROR";
__n125["callee"] := __n126;
__n128 := {  };
__n128["type"] := "BinaryExpression";
__n128["operator"] := "+";
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "#6: Exception ===-Infinity. Actual:  Exception ===";
__n129["raw"] := "'#6: Exception ===-Infinity. Actual:  Exception ==='";
__n128["left"] := __n129;
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "e";
__n128["right"] := __n130;
__n127 := [ __n128 ];
__n125["arguments"] := __n127;
__n124["expression"] := __n125;
__n119["consequent"] := __n124;
__n119["alternate"] := null;
__n118 := [ __n119 ];
__n117["body"] := __n118;
__n115["body"] := __n117;
__n109["handler"] := __n115;
__n109["finalizer"] := null;
__n131 := {  };
__n131["type"] := "TryStatement";
__n132 := {  };
__n132["type"] := "BlockStatement";
__n134 := {  };
__n134["type"] := "ThrowStatement";
__n135 := {  };
__n135["type"] := "UnaryExpression";
__n135["operator"] := "+";
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := 0.;
__n136["raw"] := "0";
__n135["argument"] := __n136;
__n135["prefix"] := true;
__n134["argument"] := __n135;
__n133 := [ __n134 ];
__n132["body"] := __n133;
__n131["block"] := __n132;
__n137 := {  };
__n137["type"] := "CatchClause";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "e";
__n137["param"] := __n138;
__n139 := {  };
__n139["type"] := "BlockStatement";
__n141 := {  };
__n141["type"] := "IfStatement";
__n142 := {  };
__n142["type"] := "BinaryExpression";
__n142["operator"] := "!==";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "e";
__n142["left"] := __n143;
__n144 := {  };
__n144["type"] := "UnaryExpression";
__n144["operator"] := "+";
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := 0.;
__n145["raw"] := "0";
__n144["argument"] := __n145;
__n144["prefix"] := true;
__n142["right"] := __n144;
__n141["test"] := __n142;
__n146 := {  };
__n146["type"] := "ExpressionStatement";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "$ERROR";
__n147["callee"] := __n148;
__n150 := {  };
__n150["type"] := "BinaryExpression";
__n150["operator"] := "+";
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "#7: Exception ===+0. Actual:  Exception ===";
__n151["raw"] := "'#7: Exception ===+0. Actual:  Exception ==='";
__n150["left"] := __n151;
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "e";
__n150["right"] := __n152;
__n149 := [ __n150 ];
__n147["arguments"] := __n149;
__n146["expression"] := __n147;
__n141["consequent"] := __n146;
__n141["alternate"] := null;
__n140 := [ __n141 ];
__n139["body"] := __n140;
__n137["body"] := __n139;
__n131["handler"] := __n137;
__n131["finalizer"] := null;
__n153 := {  };
__n153["type"] := "TryStatement";
__n154 := {  };
__n154["type"] := "BlockStatement";
__n156 := {  };
__n156["type"] := "ThrowStatement";
__n157 := {  };
__n157["type"] := "UnaryExpression";
__n157["operator"] := "-";
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := 0.;
__n158["raw"] := "0";
__n157["argument"] := __n158;
__n157["prefix"] := true;
__n156["argument"] := __n157;
__n155 := [ __n156 ];
__n154["body"] := __n155;
__n153["block"] := __n154;
__n159 := {  };
__n159["type"] := "CatchClause";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "e";
__n159["param"] := __n160;
__n161 := {  };
__n161["type"] := "BlockStatement";
__n163 := {  };
__n163["type"] := "IfStatement";
__n164 := {  };
__n164["type"] := "BinaryExpression";
__n164["operator"] := "!==";
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "e";
__n164["left"] := __n165;
__n166 := {  };
__n166["type"] := "UnaryExpression";
__n166["operator"] := "-";
__n167 := {  };
__n167["type"] := "Literal";
__n167["value"] := 0.;
__n167["raw"] := "0";
__n166["argument"] := __n167;
__n166["prefix"] := true;
__n164["right"] := __n166;
__n163["test"] := __n164;
__n168 := {  };
__n168["type"] := "ExpressionStatement";
__n169 := {  };
__n169["type"] := "CallExpression";
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "$ERROR";
__n169["callee"] := __n170;
__n172 := {  };
__n172["type"] := "BinaryExpression";
__n172["operator"] := "+";
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := "#8: Exception ===-0. Actual:  Exception ===";
__n173["raw"] := "'#8: Exception ===-0. Actual:  Exception ==='";
__n172["left"] := __n173;
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "e";
__n172["right"] := __n174;
__n171 := [ __n172 ];
__n169["arguments"] := __n171;
__n168["expression"] := __n169;
__n163["consequent"] := __n168;
__n163["alternate"] := null;
__n162 := [ __n163 ];
__n161["body"] := __n162;
__n159["body"] := __n161;
__n153["handler"] := __n159;
__n153["finalizer"] := null;
__n1 := [ __n2, __n22, __n27, __n47, __n67, __n87, __n109, __n131, __n153 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n175 := [ "b" ];
__n0["variableDeclarations"] := __n175;
__n176 := [  ];
__n0["functionDeclarations"] := __n176;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}