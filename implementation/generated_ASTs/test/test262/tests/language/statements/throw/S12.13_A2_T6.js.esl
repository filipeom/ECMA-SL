function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "myObj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "p1";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "a";
__n10["raw"] := "'a'";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n11 := {  };
__n11["type"] := "Property";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "p2";
__n11["key"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "b";
__n13["raw"] := "'b'";
__n11["value"] := __n13;
__n11["computed"] := false;
__n11["kind"] := "init";
__n11["shorthand"] := false;
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "p3";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "c";
__n16["raw"] := "'c'";
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n17 := {  };
__n17["type"] := "Property";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "value";
__n17["key"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "myObj_value";
__n19["raw"] := "'myObj_value'";
__n17["value"] := __n19;
__n17["computed"] := false;
__n17["kind"] := "init";
__n17["shorthand"] := false;
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "valueOf";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "FunctionExpression";
__n22["id"] := null;
__n23 := [  ];
__n22["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ReturnStatement";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "obj_valueOf";
__n27["raw"] := "'obj_valueOf'";
__n26["argument"] := __n27;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n28 := [  ];
__n24["variableDeclarations"] := __n28;
__n29 := [  ];
__n24["functionDeclarations"] := __n29;
__n24["codeType"] := "function";
__n24["strict"] := false;
__n22["body"] := __n24;
__n22["generator"] := false;
__n22["expression"] := false;
__n22["async"] := false;
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "parseInt";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "FunctionExpression";
__n32["id"] := null;
__n33 := [  ];
__n32["params"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ReturnStatement";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "obj_parseInt";
__n37["raw"] := "'obj_parseInt'";
__n36["argument"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n38 := [  ];
__n34["variableDeclarations"] := __n38;
__n39 := [  ];
__n34["functionDeclarations"] := __n39;
__n34["codeType"] := "function";
__n34["strict"] := false;
__n32["body"] := __n34;
__n32["generator"] := false;
__n32["expression"] := false;
__n32["async"] := false;
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n40 := {  };
__n40["type"] := "Property";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "NaN";
__n40["key"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "obj_NaN";
__n42["raw"] := "'obj_NaN'";
__n40["value"] := __n42;
__n40["computed"] := false;
__n40["kind"] := "init";
__n40["shorthand"] := false;
__n43 := {  };
__n43["type"] := "Property";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Infinity";
__n43["key"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "obj_Infinity";
__n45["raw"] := "'obj_Infinity'";
__n43["value"] := __n45;
__n43["computed"] := false;
__n43["kind"] := "init";
__n43["shorthand"] := false;
__n46 := {  };
__n46["type"] := "Property";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "eval";
__n46["key"] := __n47;
__n48 := {  };
__n48["type"] := "FunctionExpression";
__n48["id"] := null;
__n49 := [  ];
__n48["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ReturnStatement";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "obj_eval";
__n53["raw"] := "'obj_eval'";
__n52["argument"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n54 := [  ];
__n50["variableDeclarations"] := __n54;
__n55 := [  ];
__n50["functionDeclarations"] := __n55;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n48["body"] := __n50;
__n48["generator"] := false;
__n48["expression"] := false;
__n48["async"] := false;
__n46["value"] := __n48;
__n46["computed"] := false;
__n46["kind"] := "init";
__n46["shorthand"] := false;
__n56 := {  };
__n56["type"] := "Property";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "parseFloat";
__n56["key"] := __n57;
__n58 := {  };
__n58["type"] := "FunctionExpression";
__n58["id"] := null;
__n59 := [  ];
__n58["params"] := __n59;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ReturnStatement";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "obj_parseFloat";
__n63["raw"] := "'obj_parseFloat'";
__n62["argument"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n64 := [  ];
__n60["variableDeclarations"] := __n64;
__n65 := [  ];
__n60["functionDeclarations"] := __n65;
__n60["codeType"] := "function";
__n60["strict"] := false;
__n58["body"] := __n60;
__n58["generator"] := false;
__n58["expression"] := false;
__n58["async"] := false;
__n56["value"] := __n58;
__n56["computed"] := false;
__n56["kind"] := "init";
__n56["shorthand"] := false;
__n66 := {  };
__n66["type"] := "Property";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "isNaN";
__n66["key"] := __n67;
__n68 := {  };
__n68["type"] := "FunctionExpression";
__n68["id"] := null;
__n69 := [  ];
__n68["params"] := __n69;
__n70 := {  };
__n70["type"] := "BlockStatement";
__n72 := {  };
__n72["type"] := "ReturnStatement";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "obj_isNaN";
__n73["raw"] := "'obj_isNaN'";
__n72["argument"] := __n73;
__n71 := [ __n72 ];
__n70["body"] := __n71;
__n74 := [  ];
__n70["variableDeclarations"] := __n74;
__n75 := [  ];
__n70["functionDeclarations"] := __n75;
__n70["codeType"] := "function";
__n70["strict"] := false;
__n68["body"] := __n70;
__n68["generator"] := false;
__n68["expression"] := false;
__n68["async"] := false;
__n66["value"] := __n68;
__n66["computed"] := false;
__n66["kind"] := "init";
__n66["shorthand"] := false;
__n76 := {  };
__n76["type"] := "Property";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "isFinite";
__n76["key"] := __n77;
__n78 := {  };
__n78["type"] := "FunctionExpression";
__n78["id"] := null;
__n79 := [  ];
__n78["params"] := __n79;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ReturnStatement";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "obj_isFinite";
__n83["raw"] := "'obj_isFinite'";
__n82["argument"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n84 := [  ];
__n80["variableDeclarations"] := __n84;
__n85 := [  ];
__n80["functionDeclarations"] := __n85;
__n80["codeType"] := "function";
__n80["strict"] := false;
__n78["body"] := __n80;
__n78["generator"] := false;
__n78["expression"] := false;
__n78["async"] := false;
__n76["value"] := __n78;
__n76["computed"] := false;
__n76["kind"] := "init";
__n76["shorthand"] := false;
__n86 := {  };
__n86["type"] := "Property";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "i";
__n86["key"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 7.;
__n88["raw"] := "7";
__n86["value"] := __n88;
__n86["computed"] := false;
__n86["kind"] := "init";
__n86["shorthand"] := false;
__n7 := [ __n8, __n11, __n14, __n17, __n20, __n30, __n40, __n43, __n46, __n56, __n66, __n76, __n86 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n89 := {  };
__n89["type"] := "TryStatement";
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ThrowStatement";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "myObj";
__n92["argument"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n89["block"] := __n90;
__n94 := {  };
__n94["type"] := "CatchClause";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "e";
__n94["param"] := __n95;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "IfStatement";
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "!==";
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "e";
__n100["object"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "p1";
__n102["raw"] := "\"p1\"";
__n100["property"] := __n102;
__n100["computed"] := true;
__n99["left"] := __n100;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "a";
__n103["raw"] := "\"a\"";
__n99["right"] := __n103;
__n98["test"] := __n99;
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "$ERROR";
__n105["callee"] := __n106;
__n108 := {  };
__n108["type"] := "BinaryExpression";
__n108["operator"] := "+";
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "#1: e.p1 === \"a\". Actual:  e.p1 ===";
__n109["raw"] := "'#1: e.p1 === \"a\". Actual:  e.p1 ==='";
__n108["left"] := __n109;
__n110 := {  };
__n110["type"] := "MemberExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "e";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "p1";
__n112["raw"] := "\"p1\"";
__n110["property"] := __n112;
__n110["computed"] := true;
__n108["right"] := __n110;
__n107 := [ __n108 ];
__n105["arguments"] := __n107;
__n104["expression"] := __n105;
__n98["consequent"] := __n104;
__n98["alternate"] := null;
__n113 := {  };
__n113["type"] := "IfStatement";
__n114 := {  };
__n114["type"] := "BinaryExpression";
__n114["operator"] := "!==";
__n115 := {  };
__n115["type"] := "MemberExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "e";
__n115["object"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "value";
__n117["raw"] := "\"value\"";
__n115["property"] := __n117;
__n115["computed"] := true;
__n114["left"] := __n115;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "myObj_value";
__n118["raw"] := "'myObj_value'";
__n114["right"] := __n118;
__n113["test"] := __n114;
__n119 := {  };
__n119["type"] := "ExpressionStatement";
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "$ERROR";
__n120["callee"] := __n121;
__n123 := {  };
__n123["type"] := "BinaryExpression";
__n123["operator"] := "+";
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "#2: e.p1 === 'myObj_value'. Actual:  e.p1 ===";
__n124["raw"] := "'#2: e.p1 === \\'myObj_value\\'. Actual:  e.p1 ==='";
__n123["left"] := __n124;
__n125 := {  };
__n125["type"] := "MemberExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "e";
__n125["object"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "p1";
__n127["raw"] := "\"p1\"";
__n125["property"] := __n127;
__n125["computed"] := true;
__n123["right"] := __n125;
__n122 := [ __n123 ];
__n120["arguments"] := __n122;
__n119["expression"] := __n120;
__n113["consequent"] := __n119;
__n113["alternate"] := null;
__n128 := {  };
__n128["type"] := "IfStatement";
__n129 := {  };
__n129["type"] := "BinaryExpression";
__n129["operator"] := "!==";
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "MemberExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "e";
__n131["object"] := __n132;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "eval";
__n133["raw"] := "\"eval\"";
__n131["property"] := __n133;
__n131["computed"] := true;
__n130["callee"] := __n131;
__n134 := [  ];
__n130["arguments"] := __n134;
__n129["left"] := __n130;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "obj_eval";
__n135["raw"] := "'obj_eval'";
__n129["right"] := __n135;
__n128["test"] := __n129;
__n136 := {  };
__n136["type"] := "ExpressionStatement";
__n137 := {  };
__n137["type"] := "CallExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "$ERROR";
__n137["callee"] := __n138;
__n140 := {  };
__n140["type"] := "BinaryExpression";
__n140["operator"] := "+";
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "#3: e.p1 === 'obj_eval'. Actual:  e.p1 ===";
__n141["raw"] := "'#3: e.p1 === \\'obj_eval\\'. Actual:  e.p1 ==='";
__n140["left"] := __n141;
__n142 := {  };
__n142["type"] := "MemberExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "e";
__n142["object"] := __n143;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "p1";
__n144["raw"] := "\"p1\"";
__n142["property"] := __n144;
__n142["computed"] := true;
__n140["right"] := __n142;
__n139 := [ __n140 ];
__n137["arguments"] := __n139;
__n136["expression"] := __n137;
__n128["consequent"] := __n136;
__n128["alternate"] := null;
__n97 := [ __n98, __n113, __n128 ];
__n96["body"] := __n97;
__n94["body"] := __n96;
__n89["handler"] := __n94;
__n89["finalizer"] := null;
__n145 := {  };
__n145["type"] := "ExpressionStatement";
__n146 := {  };
__n146["type"] := "AssignmentExpression";
__n146["operator"] := "=";
__n147 := {  };
__n147["type"] := "MemberExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "myObj";
__n147["object"] := __n148;
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := "i";
__n149["raw"] := "\"i\"";
__n147["property"] := __n149;
__n147["computed"] := true;
__n146["left"] := __n147;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 6.;
__n150["raw"] := "6";
__n146["right"] := __n150;
__n145["expression"] := __n146;
__n151 := {  };
__n151["type"] := "TryStatement";
__n152 := {  };
__n152["type"] := "BlockStatement";
__n154 := {  };
__n154["type"] := "ThrowStatement";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "myObj";
__n154["argument"] := __n155;
__n153 := [ __n154 ];
__n152["body"] := __n153;
__n151["block"] := __n152;
__n156 := {  };
__n156["type"] := "CatchClause";
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "e";
__n156["param"] := __n157;
__n158 := {  };
__n158["type"] := "BlockStatement";
__n159 := [  ];
__n158["body"] := __n159;
__n156["body"] := __n158;
__n151["handler"] := __n156;
__n151["finalizer"] := null;
__n160 := {  };
__n160["type"] := "IfStatement";
__n161 := {  };
__n161["type"] := "BinaryExpression";
__n161["operator"] := "!==";
__n162 := {  };
__n162["type"] := "MemberExpression";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "myObj";
__n162["object"] := __n163;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := "i";
__n164["raw"] := "\"i\"";
__n162["property"] := __n164;
__n162["computed"] := true;
__n161["left"] := __n162;
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := 6.;
__n165["raw"] := "6";
__n161["right"] := __n165;
__n160["test"] := __n161;
__n166 := {  };
__n166["type"] := "ExpressionStatement";
__n167 := {  };
__n167["type"] := "CallExpression";
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "$ERROR";
__n167["callee"] := __n168;
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := "#4: Handling of catch must be correct";
__n170["raw"] := "'#4: Handling of catch must be correct'";
__n169 := [ __n170 ];
__n167["arguments"] := __n169;
__n166["expression"] := __n167;
__n160["consequent"] := __n166;
__n160["alternate"] := null;
__n1 := [ __n2, __n89, __n145, __n151, __n160 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n171 := [ "myObj" ];
__n0["variableDeclarations"] := __n171;
__n172 := [  ];
__n0["functionDeclarations"] := __n172;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}