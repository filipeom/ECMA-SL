function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "ThrowStatement";
__n6 := {  };
__n6["type"] := "BinaryExpression";
__n6["operator"] := "+";
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 10.;
__n7["raw"] := "10";
__n6["left"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 3.;
__n8["raw"] := "3";
__n6["right"] := __n8;
__n5["argument"] := __n6;
__n4 := [ __n5 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n9 := {  };
__n9["type"] := "CatchClause";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "e";
__n9["param"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "IfStatement";
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "!==";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "e";
__n14["left"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 13.;
__n16["raw"] := "13";
__n14["right"] := __n16;
__n13["test"] := __n14;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "$ERROR";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "+";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "#1: Exception ===13(operaton +). Actual:  Exception ===";
__n22["raw"] := "'#1: Exception ===13(operaton +). Actual:  Exception ==='";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "e";
__n21["right"] := __n23;
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n17["expression"] := __n18;
__n13["consequent"] := __n17;
__n13["alternate"] := null;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n9["body"] := __n11;
__n2["handler"] := __n9;
__n2["finalizer"] := null;
__n24 := {  };
__n24["type"] := "VariableDeclaration";
__n26 := {  };
__n26["type"] := "VariableDeclarator";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "b";
__n26["id"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 10.;
__n28["raw"] := "10";
__n26["init"] := __n28;
__n25 := [ __n26 ];
__n24["declarations"] := __n25;
__n24["kind"] := "var";
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "a";
__n31["id"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 3.;
__n33["raw"] := "3";
__n31["init"] := __n33;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n34 := {  };
__n34["type"] := "TryStatement";
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ThrowStatement";
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "+";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "a";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "b";
__n38["right"] := __n40;
__n37["argument"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n34["block"] := __n35;
__n41 := {  };
__n41["type"] := "CatchClause";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "e";
__n41["param"] := __n42;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "IfStatement";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "e";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 13.;
__n48["raw"] := "13";
__n46["right"] := __n48;
__n45["test"] := __n46;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "+";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#2: Exception ===13(operaton +). Actual:  Exception ===";
__n54["raw"] := "'#2: Exception ===13(operaton +). Actual:  Exception ==='";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "e";
__n53["right"] := __n55;
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n45["consequent"] := __n49;
__n45["alternate"] := null;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n41["body"] := __n43;
__n34["handler"] := __n41;
__n34["finalizer"] := null;
__n56 := {  };
__n56["type"] := "TryStatement";
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ThrowStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "-";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 3.15;
__n61["raw"] := "3.15";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 1.02;
__n62["raw"] := "1.02";
__n60["right"] := __n62;
__n59["argument"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n56["block"] := __n57;
__n63 := {  };
__n63["type"] := "CatchClause";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "e";
__n63["param"] := __n64;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "IfStatement";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "!==";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "e";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 2.13;
__n70["raw"] := "2.13";
__n68["right"] := __n70;
__n67["test"] := __n68;
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "$ERROR";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "+";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "#3: Exception ===2.13(operaton -). Actual:  Exception ===";
__n76["raw"] := "'#3: Exception ===2.13(operaton -). Actual:  Exception ==='";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "e";
__n75["right"] := __n77;
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n67["consequent"] := __n71;
__n67["alternate"] := null;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n63["body"] := __n65;
__n56["handler"] := __n63;
__n56["finalizer"] := null;
__n78 := {  };
__n78["type"] := "TryStatement";
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ThrowStatement";
__n82 := {  };
__n82["type"] := "BinaryExpression";
__n82["operator"] := "*";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 2.;
__n83["raw"] := "2";
__n82["left"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := 2.;
__n84["raw"] := "2";
__n82["right"] := __n84;
__n81["argument"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n78["block"] := __n79;
__n85 := {  };
__n85["type"] := "CatchClause";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "e";
__n85["param"] := __n86;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "!==";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "e";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 4.;
__n92["raw"] := "4";
__n90["right"] := __n92;
__n89["test"] := __n90;
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "#4: Exception ===4(operaton *). Actual:  Exception ===";
__n98["raw"] := "'#4: Exception ===4(operaton *). Actual:  Exception ==='";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "e";
__n97["right"] := __n99;
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n89["consequent"] := __n93;
__n89["alternate"] := null;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n85["body"] := __n87;
__n78["handler"] := __n85;
__n78["finalizer"] := null;
__n100 := {  };
__n100["type"] := "TryStatement";
__n101 := {  };
__n101["type"] := "BlockStatement";
__n103 := {  };
__n103["type"] := "ThrowStatement";
__n104 := {  };
__n104["type"] := "BinaryExpression";
__n104["operator"] := "+";
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 1.;
__n105["raw"] := "1";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "Infinity";
__n104["right"] := __n106;
__n103["argument"] := __n104;
__n102 := [ __n103 ];
__n101["body"] := __n102;
__n100["block"] := __n101;
__n107 := {  };
__n107["type"] := "CatchClause";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "e";
__n107["param"] := __n108;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "IfStatement";
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "!==";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "e";
__n112["left"] := __n113;
__n114 := {  };
__n114["type"] := "UnaryExpression";
__n114["operator"] := "+";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "Infinity";
__n114["argument"] := __n115;
__n114["prefix"] := true;
__n112["right"] := __n114;
__n111["test"] := __n112;
__n116 := {  };
__n116["type"] := "ExpressionStatement";
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "$ERROR";
__n117["callee"] := __n118;
__n120 := {  };
__n120["type"] := "BinaryExpression";
__n120["operator"] := "+";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "#5: Exception ===+Infinity(operaton +). Actual:  Exception ===";
__n121["raw"] := "'#5: Exception ===+Infinity(operaton +). Actual:  Exception ==='";
__n120["left"] := __n121;
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "e";
__n120["right"] := __n122;
__n119 := [ __n120 ];
__n117["arguments"] := __n119;
__n116["expression"] := __n117;
__n111["consequent"] := __n116;
__n111["alternate"] := null;
__n110 := [ __n111 ];
__n109["body"] := __n110;
__n107["body"] := __n109;
__n100["handler"] := __n107;
__n100["finalizer"] := null;
__n123 := {  };
__n123["type"] := "TryStatement";
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "ThrowStatement";
__n127 := {  };
__n127["type"] := "BinaryExpression";
__n127["operator"] := "-";
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := 1.;
__n128["raw"] := "1";
__n127["left"] := __n128;
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "Infinity";
__n127["right"] := __n129;
__n126["argument"] := __n127;
__n125 := [ __n126 ];
__n124["body"] := __n125;
__n123["block"] := __n124;
__n130 := {  };
__n130["type"] := "CatchClause";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "e";
__n130["param"] := __n131;
__n132 := {  };
__n132["type"] := "BlockStatement";
__n134 := {  };
__n134["type"] := "IfStatement";
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "!==";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "e";
__n135["left"] := __n136;
__n137 := {  };
__n137["type"] := "UnaryExpression";
__n137["operator"] := "-";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "Infinity";
__n137["argument"] := __n138;
__n137["prefix"] := true;
__n135["right"] := __n137;
__n134["test"] := __n135;
__n139 := {  };
__n139["type"] := "ExpressionStatement";
__n140 := {  };
__n140["type"] := "CallExpression";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "$ERROR";
__n140["callee"] := __n141;
__n143 := {  };
__n143["type"] := "BinaryExpression";
__n143["operator"] := "+";
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "#6: Exception ===-Infinity(operaton -). Actual:  Exception ===";
__n144["raw"] := "'#6: Exception ===-Infinity(operaton -). Actual:  Exception ==='";
__n143["left"] := __n144;
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "e";
__n143["right"] := __n145;
__n142 := [ __n143 ];
__n140["arguments"] := __n142;
__n139["expression"] := __n140;
__n134["consequent"] := __n139;
__n134["alternate"] := null;
__n133 := [ __n134 ];
__n132["body"] := __n133;
__n130["body"] := __n132;
__n123["handler"] := __n130;
__n123["finalizer"] := null;
__n146 := {  };
__n146["type"] := "TryStatement";
__n147 := {  };
__n147["type"] := "BlockStatement";
__n149 := {  };
__n149["type"] := "ThrowStatement";
__n150 := {  };
__n150["type"] := "BinaryExpression";
__n150["operator"] := "/";
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := 10.;
__n151["raw"] := "10";
__n150["left"] := __n151;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := 5.;
__n152["raw"] := "5";
__n150["right"] := __n152;
__n149["argument"] := __n150;
__n148 := [ __n149 ];
__n147["body"] := __n148;
__n146["block"] := __n147;
__n153 := {  };
__n153["type"] := "CatchClause";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "e";
__n153["param"] := __n154;
__n155 := {  };
__n155["type"] := "BlockStatement";
__n157 := {  };
__n157["type"] := "IfStatement";
__n158 := {  };
__n158["type"] := "BinaryExpression";
__n158["operator"] := "!==";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "e";
__n158["left"] := __n159;
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := 2.;
__n160["raw"] := "2";
__n158["right"] := __n160;
__n157["test"] := __n158;
__n161 := {  };
__n161["type"] := "ExpressionStatement";
__n162 := {  };
__n162["type"] := "CallExpression";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "$ERROR";
__n162["callee"] := __n163;
__n165 := {  };
__n165["type"] := "BinaryExpression";
__n165["operator"] := "+";
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "#7: Exception ===2(operaton /). Actual:  Exception ===";
__n166["raw"] := "'#7: Exception ===2(operaton /). Actual:  Exception ==='";
__n165["left"] := __n166;
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "e";
__n165["right"] := __n167;
__n164 := [ __n165 ];
__n162["arguments"] := __n164;
__n161["expression"] := __n162;
__n157["consequent"] := __n161;
__n157["alternate"] := null;
__n156 := [ __n157 ];
__n155["body"] := __n156;
__n153["body"] := __n155;
__n146["handler"] := __n153;
__n146["finalizer"] := null;
__n168 := {  };
__n168["type"] := "TryStatement";
__n169 := {  };
__n169["type"] := "BlockStatement";
__n171 := {  };
__n171["type"] := "ThrowStatement";
__n172 := {  };
__n172["type"] := "BinaryExpression";
__n172["operator"] := ">>";
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := 8.;
__n173["raw"] := "8";
__n172["left"] := __n173;
__n174 := {  };
__n174["type"] := "Literal";
__n174["value"] := 2.;
__n174["raw"] := "2";
__n172["right"] := __n174;
__n171["argument"] := __n172;
__n170 := [ __n171 ];
__n169["body"] := __n170;
__n168["block"] := __n169;
__n175 := {  };
__n175["type"] := "CatchClause";
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "e";
__n175["param"] := __n176;
__n177 := {  };
__n177["type"] := "BlockStatement";
__n179 := {  };
__n179["type"] := "IfStatement";
__n180 := {  };
__n180["type"] := "BinaryExpression";
__n180["operator"] := "!==";
__n181 := {  };
__n181["type"] := "Identifier";
__n181["name"] := "e";
__n180["left"] := __n181;
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := 2.;
__n182["raw"] := "2";
__n180["right"] := __n182;
__n179["test"] := __n180;
__n183 := {  };
__n183["type"] := "ExpressionStatement";
__n184 := {  };
__n184["type"] := "CallExpression";
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "$ERROR";
__n184["callee"] := __n185;
__n187 := {  };
__n187["type"] := "BinaryExpression";
__n187["operator"] := "+";
__n188 := {  };
__n188["type"] := "Literal";
__n188["value"] := "#8: Exception ===2(operaton >>). Actual:  Exception ===";
__n188["raw"] := "'#8: Exception ===2(operaton >>). Actual:  Exception ==='";
__n187["left"] := __n188;
__n189 := {  };
__n189["type"] := "Identifier";
__n189["name"] := "e";
__n187["right"] := __n189;
__n186 := [ __n187 ];
__n184["arguments"] := __n186;
__n183["expression"] := __n184;
__n179["consequent"] := __n183;
__n179["alternate"] := null;
__n178 := [ __n179 ];
__n177["body"] := __n178;
__n175["body"] := __n177;
__n168["handler"] := __n175;
__n168["finalizer"] := null;
__n190 := {  };
__n190["type"] := "TryStatement";
__n191 := {  };
__n191["type"] := "BlockStatement";
__n193 := {  };
__n193["type"] := "ThrowStatement";
__n194 := {  };
__n194["type"] := "BinaryExpression";
__n194["operator"] := "<<";
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := 2.;
__n195["raw"] := "2";
__n194["left"] := __n195;
__n196 := {  };
__n196["type"] := "Literal";
__n196["value"] := 2.;
__n196["raw"] := "2";
__n194["right"] := __n196;
__n193["argument"] := __n194;
__n192 := [ __n193 ];
__n191["body"] := __n192;
__n190["block"] := __n191;
__n197 := {  };
__n197["type"] := "CatchClause";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "e";
__n197["param"] := __n198;
__n199 := {  };
__n199["type"] := "BlockStatement";
__n201 := {  };
__n201["type"] := "IfStatement";
__n202 := {  };
__n202["type"] := "BinaryExpression";
__n202["operator"] := "!==";
__n203 := {  };
__n203["type"] := "Identifier";
__n203["name"] := "e";
__n202["left"] := __n203;
__n204 := {  };
__n204["type"] := "Literal";
__n204["value"] := 8.;
__n204["raw"] := "8";
__n202["right"] := __n204;
__n201["test"] := __n202;
__n205 := {  };
__n205["type"] := "ExpressionStatement";
__n206 := {  };
__n206["type"] := "CallExpression";
__n207 := {  };
__n207["type"] := "Identifier";
__n207["name"] := "$ERROR";
__n206["callee"] := __n207;
__n209 := {  };
__n209["type"] := "BinaryExpression";
__n209["operator"] := "+";
__n210 := {  };
__n210["type"] := "Literal";
__n210["value"] := "#9: Exception ===8(operaton <<). Actual:  Exception ===";
__n210["raw"] := "'#9: Exception ===8(operaton <<). Actual:  Exception ==='";
__n209["left"] := __n210;
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "e";
__n209["right"] := __n211;
__n208 := [ __n209 ];
__n206["arguments"] := __n208;
__n205["expression"] := __n206;
__n201["consequent"] := __n205;
__n201["alternate"] := null;
__n200 := [ __n201 ];
__n199["body"] := __n200;
__n197["body"] := __n199;
__n190["handler"] := __n197;
__n190["finalizer"] := null;
__n212 := {  };
__n212["type"] := "TryStatement";
__n213 := {  };
__n213["type"] := "BlockStatement";
__n215 := {  };
__n215["type"] := "ThrowStatement";
__n216 := {  };
__n216["type"] := "BinaryExpression";
__n216["operator"] := "%";
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := 123.;
__n217["raw"] := "123";
__n216["left"] := __n217;
__n218 := {  };
__n218["type"] := "Literal";
__n218["value"] := 100.;
__n218["raw"] := "100";
__n216["right"] := __n218;
__n215["argument"] := __n216;
__n214 := [ __n215 ];
__n213["body"] := __n214;
__n212["block"] := __n213;
__n219 := {  };
__n219["type"] := "CatchClause";
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "e";
__n219["param"] := __n220;
__n221 := {  };
__n221["type"] := "BlockStatement";
__n223 := {  };
__n223["type"] := "IfStatement";
__n224 := {  };
__n224["type"] := "BinaryExpression";
__n224["operator"] := "!==";
__n225 := {  };
__n225["type"] := "Identifier";
__n225["name"] := "e";
__n224["left"] := __n225;
__n226 := {  };
__n226["type"] := "Literal";
__n226["value"] := 23.;
__n226["raw"] := "23";
__n224["right"] := __n226;
__n223["test"] := __n224;
__n227 := {  };
__n227["type"] := "ExpressionStatement";
__n228 := {  };
__n228["type"] := "CallExpression";
__n229 := {  };
__n229["type"] := "Identifier";
__n229["name"] := "$ERROR";
__n228["callee"] := __n229;
__n231 := {  };
__n231["type"] := "BinaryExpression";
__n231["operator"] := "+";
__n232 := {  };
__n232["type"] := "Literal";
__n232["value"] := "#10: Exception ===23(operaton %). Actual:  Exception ===";
__n232["raw"] := "'#10: Exception ===23(operaton %). Actual:  Exception ==='";
__n231["left"] := __n232;
__n233 := {  };
__n233["type"] := "Identifier";
__n233["name"] := "e";
__n231["right"] := __n233;
__n230 := [ __n231 ];
__n228["arguments"] := __n230;
__n227["expression"] := __n228;
__n223["consequent"] := __n227;
__n223["alternate"] := null;
__n222 := [ __n223 ];
__n221["body"] := __n222;
__n219["body"] := __n221;
__n212["handler"] := __n219;
__n212["finalizer"] := null;
__n1 := [ __n2, __n24, __n29, __n34, __n56, __n78, __n100, __n123, __n146, __n168, __n190, __n212 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n234 := [ "b", "a" ];
__n0["variableDeclarations"] := __n234;
__n235 := [  ];
__n0["functionDeclarations"] := __n235;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}