function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "c1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "fin";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0";
__n7["init"] := __n9;
__n3 := [ __n4, __n7 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "WhileStatement";
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "<";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "c1";
__n11["left"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 2.;
__n13["raw"] := "2";
__n11["right"] := __n13;
__n10["test"] := __n11;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "TryStatement";
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "AssignmentExpression";
__n20["operator"] := "+=";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "c1";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 1.;
__n22["raw"] := "1";
__n20["right"] := __n22;
__n19["expression"] := __n20;
__n23 := {  };
__n23["type"] := "BreakStatement";
__n23["label"] := null;
__n18 := [ __n19, __n23 ];
__n17["body"] := __n18;
__n16["block"] := __n17;
__n24 := {  };
__n24["type"] := "CatchClause";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "er1";
__n24["param"] := __n25;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n27 := [  ];
__n26["body"] := __n27;
__n24["body"] := __n26;
__n16["handler"] := __n24;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "AssignmentExpression";
__n31["operator"] := "=";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "fin";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 1.;
__n33["raw"] := "1";
__n31["right"] := __n33;
__n30["expression"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n16["finalizer"] := __n28;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "AssignmentExpression";
__n35["operator"] := "=";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "fin";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "-";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 1.;
__n38["raw"] := "1";
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n35["right"] := __n37;
__n34["expression"] := __n35;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "AssignmentExpression";
__n40["operator"] := "+=";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "c1";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 2.;
__n42["raw"] := "2";
__n40["right"] := __n42;
__n39["expression"] := __n40;
__n15 := [ __n16, __n34, __n39 ];
__n14["body"] := __n15;
__n10["body"] := __n14;
__n43 := {  };
__n43["type"] := "IfStatement";
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "!==";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "fin";
__n44["left"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 1.;
__n46["raw"] := "1";
__n44["right"] := __n46;
__n43["test"] := __n44;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#1.1: \"finally\" block must be evaluated";
__n53["raw"] := "'#1.1: \"finally\" block must be evaluated'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n43["consequent"] := __n47;
__n43["alternate"] := null;
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "c1";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 1.;
__n57["raw"] := "1";
__n55["right"] := __n57;
__n54["test"] := __n55;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$ERROR";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#1.2: \"try{break}catch finally\" must work correctly";
__n64["raw"] := "'#1.2: \"try{break}catch finally\" must work correctly'";
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n54["consequent"] := __n58;
__n54["alternate"] := null;
__n65 := {  };
__n65["type"] := "VariableDeclaration";
__n67 := {  };
__n67["type"] := "VariableDeclarator";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "c2";
__n67["id"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 0.;
__n69["raw"] := "0";
__n67["init"] := __n69;
__n70 := {  };
__n70["type"] := "VariableDeclarator";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "fin2";
__n70["id"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 0.;
__n72["raw"] := "0";
__n70["init"] := __n72;
__n66 := [ __n67, __n70 ];
__n65["declarations"] := __n66;
__n65["kind"] := "var";
__n73 := {  };
__n73["type"] := "WhileStatement";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "<";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "c2";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 2.;
__n76["raw"] := "2";
__n74["right"] := __n76;
__n73["test"] := __n74;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "TryStatement";
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ThrowStatement";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "ex1";
__n83["raw"] := "\"ex1\"";
__n82["argument"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n79["block"] := __n80;
__n84 := {  };
__n84["type"] := "CatchClause";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "er1";
__n84["param"] := __n85;
__n86 := {  };
__n86["type"] := "BlockStatement";
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "AssignmentExpression";
__n89["operator"] := "+=";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "c2";
__n89["left"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 1.;
__n91["raw"] := "1";
__n89["right"] := __n91;
__n88["expression"] := __n89;
__n92 := {  };
__n92["type"] := "BreakStatement";
__n92["label"] := null;
__n87 := [ __n88, __n92 ];
__n86["body"] := __n87;
__n84["body"] := __n86;
__n79["handler"] := __n84;
__n93 := {  };
__n93["type"] := "BlockStatement";
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "AssignmentExpression";
__n96["operator"] := "=";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "fin2";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 1.;
__n98["raw"] := "1";
__n96["right"] := __n98;
__n95["expression"] := __n96;
__n94 := [ __n95 ];
__n93["body"] := __n94;
__n79["finalizer"] := __n93;
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "AssignmentExpression";
__n100["operator"] := "+=";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "c2";
__n100["left"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 2.;
__n102["raw"] := "2";
__n100["right"] := __n102;
__n99["expression"] := __n100;
__n103 := {  };
__n103["type"] := "ExpressionStatement";
__n104 := {  };
__n104["type"] := "AssignmentExpression";
__n104["operator"] := "=";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "fin2";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "UnaryExpression";
__n106["operator"] := "-";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 1.;
__n107["raw"] := "1";
__n106["argument"] := __n107;
__n106["prefix"] := true;
__n104["right"] := __n106;
__n103["expression"] := __n104;
__n78 := [ __n79, __n99, __n103 ];
__n77["body"] := __n78;
__n73["body"] := __n77;
__n108 := {  };
__n108["type"] := "IfStatement";
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "!==";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "fin2";
__n109["left"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 1.;
__n111["raw"] := "1";
__n109["right"] := __n111;
__n108["test"] := __n109;
__n112 := {  };
__n112["type"] := "BlockStatement";
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "$ERROR";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "#2.1: \"finally\" block must be evaluated";
__n118["raw"] := "'#2.1: \"finally\" block must be evaluated'";
__n117 := [ __n118 ];
__n115["arguments"] := __n117;
__n114["expression"] := __n115;
__n113 := [ __n114 ];
__n112["body"] := __n113;
__n108["consequent"] := __n112;
__n108["alternate"] := null;
__n119 := {  };
__n119["type"] := "IfStatement";
__n120 := {  };
__n120["type"] := "BinaryExpression";
__n120["operator"] := "!==";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "c2";
__n120["left"] := __n121;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := 1.;
__n122["raw"] := "1";
__n120["right"] := __n122;
__n119["test"] := __n120;
__n123 := {  };
__n123["type"] := "BlockStatement";
__n125 := {  };
__n125["type"] := "ExpressionStatement";
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "$ERROR";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "#2.2: \"try catch{break} finally\" must work correctly";
__n129["raw"] := "'#2.2: \"try catch{break} finally\" must work correctly'";
__n128 := [ __n129 ];
__n126["arguments"] := __n128;
__n125["expression"] := __n126;
__n124 := [ __n125 ];
__n123["body"] := __n124;
__n119["consequent"] := __n123;
__n119["alternate"] := null;
__n130 := {  };
__n130["type"] := "VariableDeclaration";
__n132 := {  };
__n132["type"] := "VariableDeclarator";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "c3";
__n132["id"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 0.;
__n134["raw"] := "0";
__n132["init"] := __n134;
__n135 := {  };
__n135["type"] := "VariableDeclarator";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "fin3";
__n135["id"] := __n136;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := 0.;
__n137["raw"] := "0";
__n135["init"] := __n137;
__n131 := [ __n132, __n135 ];
__n130["declarations"] := __n131;
__n130["kind"] := "var";
__n138 := {  };
__n138["type"] := "WhileStatement";
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "<";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "c3";
__n139["left"] := __n140;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := 2.;
__n141["raw"] := "2";
__n139["right"] := __n141;
__n138["test"] := __n139;
__n142 := {  };
__n142["type"] := "BlockStatement";
__n144 := {  };
__n144["type"] := "TryStatement";
__n145 := {  };
__n145["type"] := "BlockStatement";
__n147 := {  };
__n147["type"] := "ThrowStatement";
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "ex1";
__n148["raw"] := "\"ex1\"";
__n147["argument"] := __n148;
__n146 := [ __n147 ];
__n145["body"] := __n146;
__n144["block"] := __n145;
__n149 := {  };
__n149["type"] := "CatchClause";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "er1";
__n149["param"] := __n150;
__n151 := {  };
__n151["type"] := "BlockStatement";
__n153 := {  };
__n153["type"] := "ExpressionStatement";
__n154 := {  };
__n154["type"] := "AssignmentExpression";
__n154["operator"] := "+=";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "c3";
__n154["left"] := __n155;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := 1.;
__n156["raw"] := "1";
__n154["right"] := __n156;
__n153["expression"] := __n154;
__n152 := [ __n153 ];
__n151["body"] := __n152;
__n149["body"] := __n151;
__n144["handler"] := __n149;
__n157 := {  };
__n157["type"] := "BlockStatement";
__n159 := {  };
__n159["type"] := "ExpressionStatement";
__n160 := {  };
__n160["type"] := "AssignmentExpression";
__n160["operator"] := "=";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "fin3";
__n160["left"] := __n161;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := 1.;
__n162["raw"] := "1";
__n160["right"] := __n162;
__n159["expression"] := __n160;
__n163 := {  };
__n163["type"] := "BreakStatement";
__n163["label"] := null;
__n158 := [ __n159, __n163 ];
__n157["body"] := __n158;
__n144["finalizer"] := __n157;
__n164 := {  };
__n164["type"] := "ExpressionStatement";
__n165 := {  };
__n165["type"] := "AssignmentExpression";
__n165["operator"] := "+=";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "c3";
__n165["left"] := __n166;
__n167 := {  };
__n167["type"] := "Literal";
__n167["value"] := 2.;
__n167["raw"] := "2";
__n165["right"] := __n167;
__n164["expression"] := __n165;
__n168 := {  };
__n168["type"] := "ExpressionStatement";
__n169 := {  };
__n169["type"] := "AssignmentExpression";
__n169["operator"] := "=";
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "fin3";
__n169["left"] := __n170;
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := 0.;
__n171["raw"] := "0";
__n169["right"] := __n171;
__n168["expression"] := __n169;
__n143 := [ __n144, __n164, __n168 ];
__n142["body"] := __n143;
__n138["body"] := __n142;
__n172 := {  };
__n172["type"] := "IfStatement";
__n173 := {  };
__n173["type"] := "BinaryExpression";
__n173["operator"] := "!==";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "fin3";
__n173["left"] := __n174;
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := 1.;
__n175["raw"] := "1";
__n173["right"] := __n175;
__n172["test"] := __n173;
__n176 := {  };
__n176["type"] := "BlockStatement";
__n178 := {  };
__n178["type"] := "ExpressionStatement";
__n179 := {  };
__n179["type"] := "CallExpression";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "$ERROR";
__n179["callee"] := __n180;
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := "#3.1: \"finally\" block must be evaluated";
__n182["raw"] := "'#3.1: \"finally\" block must be evaluated'";
__n181 := [ __n182 ];
__n179["arguments"] := __n181;
__n178["expression"] := __n179;
__n177 := [ __n178 ];
__n176["body"] := __n177;
__n172["consequent"] := __n176;
__n172["alternate"] := null;
__n183 := {  };
__n183["type"] := "IfStatement";
__n184 := {  };
__n184["type"] := "BinaryExpression";
__n184["operator"] := "!==";
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "c3";
__n184["left"] := __n185;
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := 1.;
__n186["raw"] := "1";
__n184["right"] := __n186;
__n183["test"] := __n184;
__n187 := {  };
__n187["type"] := "BlockStatement";
__n189 := {  };
__n189["type"] := "ExpressionStatement";
__n190 := {  };
__n190["type"] := "CallExpression";
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "$ERROR";
__n190["callee"] := __n191;
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := "#3.2: \"try catch finally{break}\" must work correctly";
__n193["raw"] := "'#3.2: \"try catch finally{break}\" must work correctly'";
__n192 := [ __n193 ];
__n190["arguments"] := __n192;
__n189["expression"] := __n190;
__n188 := [ __n189 ];
__n187["body"] := __n188;
__n183["consequent"] := __n187;
__n183["alternate"] := null;
__n194 := {  };
__n194["type"] := "VariableDeclaration";
__n196 := {  };
__n196["type"] := "VariableDeclarator";
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "c4";
__n196["id"] := __n197;
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := 0.;
__n198["raw"] := "0";
__n196["init"] := __n198;
__n199 := {  };
__n199["type"] := "VariableDeclarator";
__n200 := {  };
__n200["type"] := "Identifier";
__n200["name"] := "fin4";
__n199["id"] := __n200;
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := 0.;
__n201["raw"] := "0";
__n199["init"] := __n201;
__n195 := [ __n196, __n199 ];
__n194["declarations"] := __n195;
__n194["kind"] := "var";
__n202 := {  };
__n202["type"] := "WhileStatement";
__n203 := {  };
__n203["type"] := "BinaryExpression";
__n203["operator"] := "<";
__n204 := {  };
__n204["type"] := "Identifier";
__n204["name"] := "c4";
__n203["left"] := __n204;
__n205 := {  };
__n205["type"] := "Literal";
__n205["value"] := 2.;
__n205["raw"] := "2";
__n203["right"] := __n205;
__n202["test"] := __n203;
__n206 := {  };
__n206["type"] := "BlockStatement";
__n208 := {  };
__n208["type"] := "TryStatement";
__n209 := {  };
__n209["type"] := "BlockStatement";
__n211 := {  };
__n211["type"] := "ExpressionStatement";
__n212 := {  };
__n212["type"] := "AssignmentExpression";
__n212["operator"] := "+=";
__n213 := {  };
__n213["type"] := "Identifier";
__n213["name"] := "c4";
__n212["left"] := __n213;
__n214 := {  };
__n214["type"] := "Literal";
__n214["value"] := 1.;
__n214["raw"] := "1";
__n212["right"] := __n214;
__n211["expression"] := __n212;
__n215 := {  };
__n215["type"] := "BreakStatement";
__n215["label"] := null;
__n210 := [ __n211, __n215 ];
__n209["body"] := __n210;
__n208["block"] := __n209;
__n208["handler"] := null;
__n216 := {  };
__n216["type"] := "BlockStatement";
__n218 := {  };
__n218["type"] := "ExpressionStatement";
__n219 := {  };
__n219["type"] := "AssignmentExpression";
__n219["operator"] := "=";
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "fin4";
__n219["left"] := __n220;
__n221 := {  };
__n221["type"] := "Literal";
__n221["value"] := 1.;
__n221["raw"] := "1";
__n219["right"] := __n221;
__n218["expression"] := __n219;
__n217 := [ __n218 ];
__n216["body"] := __n217;
__n208["finalizer"] := __n216;
__n222 := {  };
__n222["type"] := "ExpressionStatement";
__n223 := {  };
__n223["type"] := "AssignmentExpression";
__n223["operator"] := "=";
__n224 := {  };
__n224["type"] := "Identifier";
__n224["name"] := "fin4";
__n223["left"] := __n224;
__n225 := {  };
__n225["type"] := "UnaryExpression";
__n225["operator"] := "-";
__n226 := {  };
__n226["type"] := "Literal";
__n226["value"] := 1.;
__n226["raw"] := "1";
__n225["argument"] := __n226;
__n225["prefix"] := true;
__n223["right"] := __n225;
__n222["expression"] := __n223;
__n227 := {  };
__n227["type"] := "ExpressionStatement";
__n228 := {  };
__n228["type"] := "AssignmentExpression";
__n228["operator"] := "+=";
__n229 := {  };
__n229["type"] := "Identifier";
__n229["name"] := "c4";
__n228["left"] := __n229;
__n230 := {  };
__n230["type"] := "Literal";
__n230["value"] := 2.;
__n230["raw"] := "2";
__n228["right"] := __n230;
__n227["expression"] := __n228;
__n207 := [ __n208, __n222, __n227 ];
__n206["body"] := __n207;
__n202["body"] := __n206;
__n231 := {  };
__n231["type"] := "IfStatement";
__n232 := {  };
__n232["type"] := "BinaryExpression";
__n232["operator"] := "!==";
__n233 := {  };
__n233["type"] := "Identifier";
__n233["name"] := "fin4";
__n232["left"] := __n233;
__n234 := {  };
__n234["type"] := "Literal";
__n234["value"] := 1.;
__n234["raw"] := "1";
__n232["right"] := __n234;
__n231["test"] := __n232;
__n235 := {  };
__n235["type"] := "BlockStatement";
__n237 := {  };
__n237["type"] := "ExpressionStatement";
__n238 := {  };
__n238["type"] := "CallExpression";
__n239 := {  };
__n239["type"] := "Identifier";
__n239["name"] := "$ERROR";
__n238["callee"] := __n239;
__n241 := {  };
__n241["type"] := "Literal";
__n241["value"] := "#4.1: \"finally\" block must be evaluated";
__n241["raw"] := "'#4.1: \"finally\" block must be evaluated'";
__n240 := [ __n241 ];
__n238["arguments"] := __n240;
__n237["expression"] := __n238;
__n236 := [ __n237 ];
__n235["body"] := __n236;
__n231["consequent"] := __n235;
__n231["alternate"] := null;
__n242 := {  };
__n242["type"] := "IfStatement";
__n243 := {  };
__n243["type"] := "BinaryExpression";
__n243["operator"] := "!==";
__n244 := {  };
__n244["type"] := "Identifier";
__n244["name"] := "c4";
__n243["left"] := __n244;
__n245 := {  };
__n245["type"] := "Literal";
__n245["value"] := 1.;
__n245["raw"] := "1";
__n243["right"] := __n245;
__n242["test"] := __n243;
__n246 := {  };
__n246["type"] := "BlockStatement";
__n248 := {  };
__n248["type"] := "ExpressionStatement";
__n249 := {  };
__n249["type"] := "CallExpression";
__n250 := {  };
__n250["type"] := "Identifier";
__n250["name"] := "$ERROR";
__n249["callee"] := __n250;
__n252 := {  };
__n252["type"] := "Literal";
__n252["value"] := "#4.2: \"try{break} finally\" must work correctly";
__n252["raw"] := "'#4.2: \"try{break} finally\" must work correctly'";
__n251 := [ __n252 ];
__n249["arguments"] := __n251;
__n248["expression"] := __n249;
__n247 := [ __n248 ];
__n246["body"] := __n247;
__n242["consequent"] := __n246;
__n242["alternate"] := null;
__n253 := {  };
__n253["type"] := "VariableDeclaration";
__n255 := {  };
__n255["type"] := "VariableDeclarator";
__n256 := {  };
__n256["type"] := "Identifier";
__n256["name"] := "c5";
__n255["id"] := __n256;
__n257 := {  };
__n257["type"] := "Literal";
__n257["value"] := 0.;
__n257["raw"] := "0";
__n255["init"] := __n257;
__n254 := [ __n255 ];
__n253["declarations"] := __n254;
__n253["kind"] := "var";
__n258 := {  };
__n258["type"] := "WhileStatement";
__n259 := {  };
__n259["type"] := "BinaryExpression";
__n259["operator"] := "<";
__n260 := {  };
__n260["type"] := "Identifier";
__n260["name"] := "c5";
__n259["left"] := __n260;
__n261 := {  };
__n261["type"] := "Literal";
__n261["value"] := 2.;
__n261["raw"] := "2";
__n259["right"] := __n261;
__n258["test"] := __n259;
__n262 := {  };
__n262["type"] := "BlockStatement";
__n264 := {  };
__n264["type"] := "TryStatement";
__n265 := {  };
__n265["type"] := "BlockStatement";
__n267 := {  };
__n267["type"] := "ThrowStatement";
__n268 := {  };
__n268["type"] := "Literal";
__n268["value"] := "ex1";
__n268["raw"] := "\"ex1\"";
__n267["argument"] := __n268;
__n266 := [ __n267 ];
__n265["body"] := __n266;
__n264["block"] := __n265;
__n269 := {  };
__n269["type"] := "CatchClause";
__n270 := {  };
__n270["type"] := "Identifier";
__n270["name"] := "er1";
__n269["param"] := __n270;
__n271 := {  };
__n271["type"] := "BlockStatement";
__n273 := {  };
__n273["type"] := "BreakStatement";
__n273["label"] := null;
__n272 := [ __n273 ];
__n271["body"] := __n272;
__n269["body"] := __n271;
__n264["handler"] := __n269;
__n264["finalizer"] := null;
__n263 := [ __n264 ];
__n262["body"] := __n263;
__n258["body"] := __n262;
__n274 := {  };
__n274["type"] := "IfStatement";
__n275 := {  };
__n275["type"] := "BinaryExpression";
__n275["operator"] := "!==";
__n276 := {  };
__n276["type"] := "Identifier";
__n276["name"] := "c5";
__n275["left"] := __n276;
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := 0.;
__n277["raw"] := "0";
__n275["right"] := __n277;
__n274["test"] := __n275;
__n278 := {  };
__n278["type"] := "BlockStatement";
__n280 := {  };
__n280["type"] := "ExpressionStatement";
__n281 := {  };
__n281["type"] := "CallExpression";
__n282 := {  };
__n282["type"] := "Identifier";
__n282["name"] := "$ERROR";
__n281["callee"] := __n282;
__n284 := {  };
__n284["type"] := "Literal";
__n284["value"] := "#5: \"try catch{break}\" must work correctly";
__n284["raw"] := "'#5: \"try catch{break}\" must work correctly'";
__n283 := [ __n284 ];
__n281["arguments"] := __n283;
__n280["expression"] := __n281;
__n279 := [ __n280 ];
__n278["body"] := __n279;
__n274["consequent"] := __n278;
__n274["alternate"] := null;
__n285 := {  };
__n285["type"] := "VariableDeclaration";
__n287 := {  };
__n287["type"] := "VariableDeclarator";
__n288 := {  };
__n288["type"] := "Identifier";
__n288["name"] := "c6";
__n287["id"] := __n288;
__n289 := {  };
__n289["type"] := "Literal";
__n289["value"] := 0.;
__n289["raw"] := "0";
__n287["init"] := __n289;
__n286 := [ __n287 ];
__n285["declarations"] := __n286;
__n285["kind"] := "var";
__n290 := {  };
__n290["type"] := "WhileStatement";
__n291 := {  };
__n291["type"] := "BinaryExpression";
__n291["operator"] := "<";
__n292 := {  };
__n292["type"] := "Identifier";
__n292["name"] := "c6";
__n291["left"] := __n292;
__n293 := {  };
__n293["type"] := "Literal";
__n293["value"] := 2.;
__n293["raw"] := "2";
__n291["right"] := __n293;
__n290["test"] := __n291;
__n294 := {  };
__n294["type"] := "BlockStatement";
__n296 := {  };
__n296["type"] := "TryStatement";
__n297 := {  };
__n297["type"] := "BlockStatement";
__n299 := {  };
__n299["type"] := "ExpressionStatement";
__n300 := {  };
__n300["type"] := "AssignmentExpression";
__n300["operator"] := "+=";
__n301 := {  };
__n301["type"] := "Identifier";
__n301["name"] := "c6";
__n300["left"] := __n301;
__n302 := {  };
__n302["type"] := "Literal";
__n302["value"] := 1.;
__n302["raw"] := "1";
__n300["right"] := __n302;
__n299["expression"] := __n300;
__n303 := {  };
__n303["type"] := "BreakStatement";
__n303["label"] := null;
__n298 := [ __n299, __n303 ];
__n297["body"] := __n298;
__n296["block"] := __n297;
__n304 := {  };
__n304["type"] := "CatchClause";
__n305 := {  };
__n305["type"] := "Identifier";
__n305["name"] := "er1";
__n304["param"] := __n305;
__n306 := {  };
__n306["type"] := "BlockStatement";
__n307 := [  ];
__n306["body"] := __n307;
__n304["body"] := __n306;
__n296["handler"] := __n304;
__n296["finalizer"] := null;
__n308 := {  };
__n308["type"] := "ExpressionStatement";
__n309 := {  };
__n309["type"] := "AssignmentExpression";
__n309["operator"] := "+=";
__n310 := {  };
__n310["type"] := "Identifier";
__n310["name"] := "c6";
__n309["left"] := __n310;
__n311 := {  };
__n311["type"] := "Literal";
__n311["value"] := 2.;
__n311["raw"] := "2";
__n309["right"] := __n311;
__n308["expression"] := __n309;
__n295 := [ __n296, __n308 ];
__n294["body"] := __n295;
__n290["body"] := __n294;
__n312 := {  };
__n312["type"] := "IfStatement";
__n313 := {  };
__n313["type"] := "BinaryExpression";
__n313["operator"] := "!==";
__n314 := {  };
__n314["type"] := "Identifier";
__n314["name"] := "c6";
__n313["left"] := __n314;
__n315 := {  };
__n315["type"] := "Literal";
__n315["value"] := 1.;
__n315["raw"] := "1";
__n313["right"] := __n315;
__n312["test"] := __n313;
__n316 := {  };
__n316["type"] := "BlockStatement";
__n318 := {  };
__n318["type"] := "ExpressionStatement";
__n319 := {  };
__n319["type"] := "CallExpression";
__n320 := {  };
__n320["type"] := "Identifier";
__n320["name"] := "$ERROR";
__n319["callee"] := __n320;
__n322 := {  };
__n322["type"] := "Literal";
__n322["value"] := "#6: \"try{break} catch\" must work correctly";
__n322["raw"] := "'#6: \"try{break} catch\" must work correctly'";
__n321 := [ __n322 ];
__n319["arguments"] := __n321;
__n318["expression"] := __n319;
__n317 := [ __n318 ];
__n316["body"] := __n317;
__n312["consequent"] := __n316;
__n312["alternate"] := null;
__n323 := {  };
__n323["type"] := "VariableDeclaration";
__n325 := {  };
__n325["type"] := "VariableDeclarator";
__n326 := {  };
__n326["type"] := "Identifier";
__n326["name"] := "c7";
__n325["id"] := __n326;
__n327 := {  };
__n327["type"] := "Literal";
__n327["value"] := 0.;
__n327["raw"] := "0";
__n325["init"] := __n327;
__n328 := {  };
__n328["type"] := "VariableDeclarator";
__n329 := {  };
__n329["type"] := "Identifier";
__n329["name"] := "fin7";
__n328["id"] := __n329;
__n330 := {  };
__n330["type"] := "Literal";
__n330["value"] := 0.;
__n330["raw"] := "0";
__n328["init"] := __n330;
__n324 := [ __n325, __n328 ];
__n323["declarations"] := __n324;
__n323["kind"] := "var";
__n331 := {  };
__n331["type"] := "TryStatement";
__n332 := {  };
__n332["type"] := "BlockStatement";
__n334 := {  };
__n334["type"] := "WhileStatement";
__n335 := {  };
__n335["type"] := "BinaryExpression";
__n335["operator"] := "<";
__n336 := {  };
__n336["type"] := "Identifier";
__n336["name"] := "c7";
__n335["left"] := __n336;
__n337 := {  };
__n337["type"] := "Literal";
__n337["value"] := 2.;
__n337["raw"] := "2";
__n335["right"] := __n337;
__n334["test"] := __n335;
__n338 := {  };
__n338["type"] := "BlockStatement";
__n340 := {  };
__n340["type"] := "TryStatement";
__n341 := {  };
__n341["type"] := "BlockStatement";
__n343 := {  };
__n343["type"] := "ExpressionStatement";
__n344 := {  };
__n344["type"] := "AssignmentExpression";
__n344["operator"] := "+=";
__n345 := {  };
__n345["type"] := "Identifier";
__n345["name"] := "c7";
__n344["left"] := __n345;
__n346 := {  };
__n346["type"] := "Literal";
__n346["value"] := 1.;
__n346["raw"] := "1";
__n344["right"] := __n346;
__n343["expression"] := __n344;
__n347 := {  };
__n347["type"] := "ThrowStatement";
__n348 := {  };
__n348["type"] := "Literal";
__n348["value"] := "ex1";
__n348["raw"] := "\"ex1\"";
__n347["argument"] := __n348;
__n342 := [ __n343, __n347 ];
__n341["body"] := __n342;
__n340["block"] := __n341;
__n340["handler"] := null;
__n349 := {  };
__n349["type"] := "BlockStatement";
__n351 := {  };
__n351["type"] := "ExpressionStatement";
__n352 := {  };
__n352["type"] := "AssignmentExpression";
__n352["operator"] := "=";
__n353 := {  };
__n353["type"] := "Identifier";
__n353["name"] := "fin7";
__n352["left"] := __n353;
__n354 := {  };
__n354["type"] := "Literal";
__n354["value"] := 1.;
__n354["raw"] := "1";
__n352["right"] := __n354;
__n351["expression"] := __n352;
__n355 := {  };
__n355["type"] := "BreakStatement";
__n355["label"] := null;
__n350 := [ __n351, __n355 ];
__n349["body"] := __n350;
__n340["finalizer"] := __n349;
__n356 := {  };
__n356["type"] := "ExpressionStatement";
__n357 := {  };
__n357["type"] := "AssignmentExpression";
__n357["operator"] := "=";
__n358 := {  };
__n358["type"] := "Identifier";
__n358["name"] := "fin7";
__n357["left"] := __n358;
__n359 := {  };
__n359["type"] := "UnaryExpression";
__n359["operator"] := "-";
__n360 := {  };
__n360["type"] := "Literal";
__n360["value"] := 1.;
__n360["raw"] := "1";
__n359["argument"] := __n360;
__n359["prefix"] := true;
__n357["right"] := __n359;
__n356["expression"] := __n357;
__n361 := {  };
__n361["type"] := "ExpressionStatement";
__n362 := {  };
__n362["type"] := "AssignmentExpression";
__n362["operator"] := "+=";
__n363 := {  };
__n363["type"] := "Identifier";
__n363["name"] := "c7";
__n362["left"] := __n363;
__n364 := {  };
__n364["type"] := "Literal";
__n364["value"] := 2.;
__n364["raw"] := "2";
__n362["right"] := __n364;
__n361["expression"] := __n362;
__n339 := [ __n340, __n356, __n361 ];
__n338["body"] := __n339;
__n334["body"] := __n338;
__n333 := [ __n334 ];
__n332["body"] := __n333;
__n331["block"] := __n332;
__n365 := {  };
__n365["type"] := "CatchClause";
__n366 := {  };
__n366["type"] := "Identifier";
__n366["name"] := "ex1";
__n365["param"] := __n366;
__n367 := {  };
__n367["type"] := "BlockStatement";
__n369 := {  };
__n369["type"] := "ExpressionStatement";
__n370 := {  };
__n370["type"] := "AssignmentExpression";
__n370["operator"] := "=";
__n371 := {  };
__n371["type"] := "Identifier";
__n371["name"] := "c7";
__n370["left"] := __n371;
__n372 := {  };
__n372["type"] := "Literal";
__n372["value"] := 10.;
__n372["raw"] := "10";
__n370["right"] := __n372;
__n369["expression"] := __n370;
__n368 := [ __n369 ];
__n367["body"] := __n368;
__n365["body"] := __n367;
__n331["handler"] := __n365;
__n331["finalizer"] := null;
__n373 := {  };
__n373["type"] := "IfStatement";
__n374 := {  };
__n374["type"] := "BinaryExpression";
__n374["operator"] := "!==";
__n375 := {  };
__n375["type"] := "Identifier";
__n375["name"] := "fin7";
__n374["left"] := __n375;
__n376 := {  };
__n376["type"] := "Literal";
__n376["value"] := 1.;
__n376["raw"] := "1";
__n374["right"] := __n376;
__n373["test"] := __n374;
__n377 := {  };
__n377["type"] := "BlockStatement";
__n379 := {  };
__n379["type"] := "ExpressionStatement";
__n380 := {  };
__n380["type"] := "CallExpression";
__n381 := {  };
__n381["type"] := "Identifier";
__n381["name"] := "$ERROR";
__n380["callee"] := __n381;
__n383 := {  };
__n383["type"] := "Literal";
__n383["value"] := "#7.1: \"finally\" block must be evaluated";
__n383["raw"] := "'#7.1: \"finally\" block must be evaluated'";
__n382 := [ __n383 ];
__n380["arguments"] := __n382;
__n379["expression"] := __n380;
__n378 := [ __n379 ];
__n377["body"] := __n378;
__n373["consequent"] := __n377;
__n373["alternate"] := null;
__n384 := {  };
__n384["type"] := "IfStatement";
__n385 := {  };
__n385["type"] := "BinaryExpression";
__n385["operator"] := "!==";
__n386 := {  };
__n386["type"] := "Identifier";
__n386["name"] := "c7";
__n385["left"] := __n386;
__n387 := {  };
__n387["type"] := "Literal";
__n387["value"] := 1.;
__n387["raw"] := "1";
__n385["right"] := __n387;
__n384["test"] := __n385;
__n388 := {  };
__n388["type"] := "BlockStatement";
__n390 := {  };
__n390["type"] := "ExpressionStatement";
__n391 := {  };
__n391["type"] := "CallExpression";
__n392 := {  };
__n392["type"] := "Identifier";
__n392["name"] := "$ERROR";
__n391["callee"] := __n392;
__n394 := {  };
__n394["type"] := "Literal";
__n394["value"] := "#7.2: \"try finally{break}\" must work correctly";
__n394["raw"] := "'#7.2: \"try finally{break}\" must work correctly'";
__n393 := [ __n394 ];
__n391["arguments"] := __n393;
__n390["expression"] := __n391;
__n389 := [ __n390 ];
__n388["body"] := __n389;
__n384["consequent"] := __n388;
__n384["alternate"] := null;
__n1 := [ __n2, __n10, __n43, __n54, __n65, __n73, __n108, __n119, __n130, __n138, __n172, __n183, __n194, __n202, __n231, __n242, __n253, __n258, __n274, __n285, __n290, __n312, __n323, __n331, __n373, __n384 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n395 := [ "c1", "fin", "c2", "fin2", "c3", "fin3", "c4", "fin4", "c5", "c6", "c7", "fin7" ];
__n0["variableDeclarations"] := __n395;
__n396 := [  ];
__n0["functionDeclarations"] := __n396;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}