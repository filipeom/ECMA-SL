function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "c1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "fin";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0";
__n7["init"] := __n9;
__n3 := [ __n4, __n7 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "ForStatement";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "i";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 0.;
__n15["raw"] := "0";
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n10["init"] := __n11;
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "<";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "i";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 5.;
__n18["raw"] := "5";
__n16["right"] := __n18;
__n10["test"] := __n16;
__n19 := {  };
__n19["type"] := "UpdateExpression";
__n19["operator"] := "++";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "i";
__n19["argument"] := __n20;
__n19["prefix"] := false;
__n10["update"] := __n19;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "TryStatement";
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "AssignmentExpression";
__n27["operator"] := "+=";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "c1";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 1.;
__n29["raw"] := "1";
__n27["right"] := __n29;
__n26["expression"] := __n27;
__n30 := {  };
__n30["type"] := "BreakStatement";
__n30["label"] := null;
__n25 := [ __n26, __n30 ];
__n24["body"] := __n25;
__n23["block"] := __n24;
__n31 := {  };
__n31["type"] := "CatchClause";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "er1";
__n31["param"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n34 := [  ];
__n33["body"] := __n34;
__n31["body"] := __n33;
__n23["handler"] := __n31;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "AssignmentExpression";
__n38["operator"] := "=";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "fin";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 1.;
__n40["raw"] := "1";
__n38["right"] := __n40;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n23["finalizer"] := __n35;
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "AssignmentExpression";
__n42["operator"] := "=";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "fin";
__n42["left"] := __n43;
__n44 := {  };
__n44["type"] := "UnaryExpression";
__n44["operator"] := "-";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 1.;
__n45["raw"] := "1";
__n44["argument"] := __n45;
__n44["prefix"] := true;
__n42["right"] := __n44;
__n41["expression"] := __n42;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "AssignmentExpression";
__n47["operator"] := "+=";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "c1";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 2.;
__n49["raw"] := "2";
__n47["right"] := __n49;
__n46["expression"] := __n47;
__n22 := [ __n23, __n41, __n46 ];
__n21["body"] := __n22;
__n10["body"] := __n21;
__n50 := {  };
__n50["type"] := "EmptyStatement";
__n51 := {  };
__n51["type"] := "IfStatement";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "!==";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "fin";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 1.;
__n54["raw"] := "1";
__n52["right"] := __n54;
__n51["test"] := __n52;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#1.1: \"finally\" block must be evaluated";
__n61["raw"] := "'#1.1: \"finally\" block must be evaluated'";
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n51["consequent"] := __n55;
__n51["alternate"] := null;
__n62 := {  };
__n62["type"] := "IfStatement";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "!==";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "c1";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 1.;
__n65["raw"] := "1";
__n63["right"] := __n65;
__n62["test"] := __n63;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "#1.2: \"try{break}catch finally\" must work correctly";
__n72["raw"] := "'#1.2: \"try{break}catch finally\" must work correctly'";
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n62["consequent"] := __n66;
__n62["alternate"] := null;
__n73 := {  };
__n73["type"] := "VariableDeclaration";
__n75 := {  };
__n75["type"] := "VariableDeclarator";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "c2";
__n75["id"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 0.;
__n77["raw"] := "0";
__n75["init"] := __n77;
__n78 := {  };
__n78["type"] := "VariableDeclarator";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "fin2";
__n78["id"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 0.;
__n80["raw"] := "0";
__n78["init"] := __n80;
__n74 := [ __n75, __n78 ];
__n73["declarations"] := __n74;
__n73["kind"] := "var";
__n81 := {  };
__n81["type"] := "ForStatement";
__n82 := {  };
__n82["type"] := "VariableDeclaration";
__n84 := {  };
__n84["type"] := "VariableDeclarator";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "i";
__n84["id"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 0.;
__n86["raw"] := "0";
__n84["init"] := __n86;
__n83 := [ __n84 ];
__n82["declarations"] := __n83;
__n82["kind"] := "var";
__n81["init"] := __n82;
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "<";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "i";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 5.;
__n89["raw"] := "5";
__n87["right"] := __n89;
__n81["test"] := __n87;
__n90 := {  };
__n90["type"] := "UpdateExpression";
__n90["operator"] := "++";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "i";
__n90["argument"] := __n91;
__n90["prefix"] := false;
__n81["update"] := __n90;
__n92 := {  };
__n92["type"] := "BlockStatement";
__n94 := {  };
__n94["type"] := "TryStatement";
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "ThrowStatement";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "ex1";
__n98["raw"] := "\"ex1\"";
__n97["argument"] := __n98;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n94["block"] := __n95;
__n99 := {  };
__n99["type"] := "CatchClause";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "er1";
__n99["param"] := __n100;
__n101 := {  };
__n101["type"] := "BlockStatement";
__n103 := {  };
__n103["type"] := "ExpressionStatement";
__n104 := {  };
__n104["type"] := "AssignmentExpression";
__n104["operator"] := "+=";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "c2";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 1.;
__n106["raw"] := "1";
__n104["right"] := __n106;
__n103["expression"] := __n104;
__n107 := {  };
__n107["type"] := "BreakStatement";
__n107["label"] := null;
__n102 := [ __n103, __n107 ];
__n101["body"] := __n102;
__n99["body"] := __n101;
__n94["handler"] := __n99;
__n108 := {  };
__n108["type"] := "BlockStatement";
__n110 := {  };
__n110["type"] := "ExpressionStatement";
__n111 := {  };
__n111["type"] := "AssignmentExpression";
__n111["operator"] := "=";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "fin2";
__n111["left"] := __n112;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 1.;
__n113["raw"] := "1";
__n111["right"] := __n113;
__n110["expression"] := __n111;
__n109 := [ __n110 ];
__n108["body"] := __n109;
__n94["finalizer"] := __n108;
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "AssignmentExpression";
__n115["operator"] := "+=";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "c2";
__n115["left"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 2.;
__n117["raw"] := "2";
__n115["right"] := __n117;
__n114["expression"] := __n115;
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "AssignmentExpression";
__n119["operator"] := "=";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "fin2";
__n119["left"] := __n120;
__n121 := {  };
__n121["type"] := "UnaryExpression";
__n121["operator"] := "-";
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := 1.;
__n122["raw"] := "1";
__n121["argument"] := __n122;
__n121["prefix"] := true;
__n119["right"] := __n121;
__n118["expression"] := __n119;
__n93 := [ __n94, __n114, __n118 ];
__n92["body"] := __n93;
__n81["body"] := __n92;
__n123 := {  };
__n123["type"] := "EmptyStatement";
__n124 := {  };
__n124["type"] := "IfStatement";
__n125 := {  };
__n125["type"] := "BinaryExpression";
__n125["operator"] := "!==";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "fin2";
__n125["left"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := 1.;
__n127["raw"] := "1";
__n125["right"] := __n127;
__n124["test"] := __n125;
__n128 := {  };
__n128["type"] := "BlockStatement";
__n130 := {  };
__n130["type"] := "ExpressionStatement";
__n131 := {  };
__n131["type"] := "CallExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "$ERROR";
__n131["callee"] := __n132;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "#2.1: \"finally\" block must be evaluated";
__n134["raw"] := "'#2.1: \"finally\" block must be evaluated'";
__n133 := [ __n134 ];
__n131["arguments"] := __n133;
__n130["expression"] := __n131;
__n129 := [ __n130 ];
__n128["body"] := __n129;
__n124["consequent"] := __n128;
__n124["alternate"] := null;
__n135 := {  };
__n135["type"] := "IfStatement";
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "!==";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "c2";
__n136["left"] := __n137;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := 1.;
__n138["raw"] := "1";
__n136["right"] := __n138;
__n135["test"] := __n136;
__n139 := {  };
__n139["type"] := "BlockStatement";
__n141 := {  };
__n141["type"] := "ExpressionStatement";
__n142 := {  };
__n142["type"] := "CallExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "$ERROR";
__n142["callee"] := __n143;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "#2.2: \"try catch{break} finally\" must work correctly";
__n145["raw"] := "'#2.2: \"try catch{break} finally\" must work correctly'";
__n144 := [ __n145 ];
__n142["arguments"] := __n144;
__n141["expression"] := __n142;
__n140 := [ __n141 ];
__n139["body"] := __n140;
__n135["consequent"] := __n139;
__n135["alternate"] := null;
__n146 := {  };
__n146["type"] := "VariableDeclaration";
__n148 := {  };
__n148["type"] := "VariableDeclarator";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "c3";
__n148["id"] := __n149;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 0.;
__n150["raw"] := "0";
__n148["init"] := __n150;
__n151 := {  };
__n151["type"] := "VariableDeclarator";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "fin3";
__n151["id"] := __n152;
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := 0.;
__n153["raw"] := "0";
__n151["init"] := __n153;
__n147 := [ __n148, __n151 ];
__n146["declarations"] := __n147;
__n146["kind"] := "var";
__n154 := {  };
__n154["type"] := "ForStatement";
__n155 := {  };
__n155["type"] := "VariableDeclaration";
__n157 := {  };
__n157["type"] := "VariableDeclarator";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "i";
__n157["id"] := __n158;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := 0.;
__n159["raw"] := "0";
__n157["init"] := __n159;
__n156 := [ __n157 ];
__n155["declarations"] := __n156;
__n155["kind"] := "var";
__n154["init"] := __n155;
__n160 := {  };
__n160["type"] := "BinaryExpression";
__n160["operator"] := "<";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "i";
__n160["left"] := __n161;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := 5.;
__n162["raw"] := "5";
__n160["right"] := __n162;
__n154["test"] := __n160;
__n163 := {  };
__n163["type"] := "UpdateExpression";
__n163["operator"] := "++";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "i";
__n163["argument"] := __n164;
__n163["prefix"] := false;
__n154["update"] := __n163;
__n165 := {  };
__n165["type"] := "BlockStatement";
__n167 := {  };
__n167["type"] := "TryStatement";
__n168 := {  };
__n168["type"] := "BlockStatement";
__n170 := {  };
__n170["type"] := "ThrowStatement";
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := "ex1";
__n171["raw"] := "\"ex1\"";
__n170["argument"] := __n171;
__n169 := [ __n170 ];
__n168["body"] := __n169;
__n167["block"] := __n168;
__n172 := {  };
__n172["type"] := "CatchClause";
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "er1";
__n172["param"] := __n173;
__n174 := {  };
__n174["type"] := "BlockStatement";
__n176 := {  };
__n176["type"] := "ExpressionStatement";
__n177 := {  };
__n177["type"] := "AssignmentExpression";
__n177["operator"] := "+=";
__n178 := {  };
__n178["type"] := "Identifier";
__n178["name"] := "c3";
__n177["left"] := __n178;
__n179 := {  };
__n179["type"] := "Literal";
__n179["value"] := 1.;
__n179["raw"] := "1";
__n177["right"] := __n179;
__n176["expression"] := __n177;
__n175 := [ __n176 ];
__n174["body"] := __n175;
__n172["body"] := __n174;
__n167["handler"] := __n172;
__n180 := {  };
__n180["type"] := "BlockStatement";
__n182 := {  };
__n182["type"] := "ExpressionStatement";
__n183 := {  };
__n183["type"] := "AssignmentExpression";
__n183["operator"] := "=";
__n184 := {  };
__n184["type"] := "Identifier";
__n184["name"] := "fin3";
__n183["left"] := __n184;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := 1.;
__n185["raw"] := "1";
__n183["right"] := __n185;
__n182["expression"] := __n183;
__n186 := {  };
__n186["type"] := "BreakStatement";
__n186["label"] := null;
__n181 := [ __n182, __n186 ];
__n180["body"] := __n181;
__n167["finalizer"] := __n180;
__n187 := {  };
__n187["type"] := "ExpressionStatement";
__n188 := {  };
__n188["type"] := "AssignmentExpression";
__n188["operator"] := "+=";
__n189 := {  };
__n189["type"] := "Identifier";
__n189["name"] := "c3";
__n188["left"] := __n189;
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := 2.;
__n190["raw"] := "2";
__n188["right"] := __n190;
__n187["expression"] := __n188;
__n191 := {  };
__n191["type"] := "ExpressionStatement";
__n192 := {  };
__n192["type"] := "AssignmentExpression";
__n192["operator"] := "=";
__n193 := {  };
__n193["type"] := "Identifier";
__n193["name"] := "fin3";
__n192["left"] := __n193;
__n194 := {  };
__n194["type"] := "Literal";
__n194["value"] := 0.;
__n194["raw"] := "0";
__n192["right"] := __n194;
__n191["expression"] := __n192;
__n166 := [ __n167, __n187, __n191 ];
__n165["body"] := __n166;
__n154["body"] := __n165;
__n195 := {  };
__n195["type"] := "EmptyStatement";
__n196 := {  };
__n196["type"] := "IfStatement";
__n197 := {  };
__n197["type"] := "BinaryExpression";
__n197["operator"] := "!==";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "fin3";
__n197["left"] := __n198;
__n199 := {  };
__n199["type"] := "Literal";
__n199["value"] := 1.;
__n199["raw"] := "1";
__n197["right"] := __n199;
__n196["test"] := __n197;
__n200 := {  };
__n200["type"] := "BlockStatement";
__n202 := {  };
__n202["type"] := "ExpressionStatement";
__n203 := {  };
__n203["type"] := "CallExpression";
__n204 := {  };
__n204["type"] := "Identifier";
__n204["name"] := "$ERROR";
__n203["callee"] := __n204;
__n206 := {  };
__n206["type"] := "Literal";
__n206["value"] := "#3.1: \"finally\" block must be evaluated";
__n206["raw"] := "'#3.1: \"finally\" block must be evaluated'";
__n205 := [ __n206 ];
__n203["arguments"] := __n205;
__n202["expression"] := __n203;
__n201 := [ __n202 ];
__n200["body"] := __n201;
__n196["consequent"] := __n200;
__n196["alternate"] := null;
__n207 := {  };
__n207["type"] := "IfStatement";
__n208 := {  };
__n208["type"] := "BinaryExpression";
__n208["operator"] := "!==";
__n209 := {  };
__n209["type"] := "Identifier";
__n209["name"] := "c3";
__n208["left"] := __n209;
__n210 := {  };
__n210["type"] := "Literal";
__n210["value"] := 1.;
__n210["raw"] := "1";
__n208["right"] := __n210;
__n207["test"] := __n208;
__n211 := {  };
__n211["type"] := "BlockStatement";
__n213 := {  };
__n213["type"] := "ExpressionStatement";
__n214 := {  };
__n214["type"] := "CallExpression";
__n215 := {  };
__n215["type"] := "Identifier";
__n215["name"] := "$ERROR";
__n214["callee"] := __n215;
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := "#3.2: \"try catch finally{break}\" must work correctly";
__n217["raw"] := "'#3.2: \"try catch finally{break}\" must work correctly'";
__n216 := [ __n217 ];
__n214["arguments"] := __n216;
__n213["expression"] := __n214;
__n212 := [ __n213 ];
__n211["body"] := __n212;
__n207["consequent"] := __n211;
__n207["alternate"] := null;
__n218 := {  };
__n218["type"] := "VariableDeclaration";
__n220 := {  };
__n220["type"] := "VariableDeclarator";
__n221 := {  };
__n221["type"] := "Identifier";
__n221["name"] := "c4";
__n220["id"] := __n221;
__n222 := {  };
__n222["type"] := "Literal";
__n222["value"] := 0.;
__n222["raw"] := "0";
__n220["init"] := __n222;
__n223 := {  };
__n223["type"] := "VariableDeclarator";
__n224 := {  };
__n224["type"] := "Identifier";
__n224["name"] := "fin4";
__n223["id"] := __n224;
__n225 := {  };
__n225["type"] := "Literal";
__n225["value"] := 0.;
__n225["raw"] := "0";
__n223["init"] := __n225;
__n219 := [ __n220, __n223 ];
__n218["declarations"] := __n219;
__n218["kind"] := "var";
__n226 := {  };
__n226["type"] := "ForStatement";
__n227 := {  };
__n227["type"] := "VariableDeclaration";
__n229 := {  };
__n229["type"] := "VariableDeclarator";
__n230 := {  };
__n230["type"] := "Identifier";
__n230["name"] := "i";
__n229["id"] := __n230;
__n231 := {  };
__n231["type"] := "Literal";
__n231["value"] := 0.;
__n231["raw"] := "0";
__n229["init"] := __n231;
__n228 := [ __n229 ];
__n227["declarations"] := __n228;
__n227["kind"] := "var";
__n226["init"] := __n227;
__n232 := {  };
__n232["type"] := "BinaryExpression";
__n232["operator"] := "<";
__n233 := {  };
__n233["type"] := "Identifier";
__n233["name"] := "i";
__n232["left"] := __n233;
__n234 := {  };
__n234["type"] := "Literal";
__n234["value"] := 5.;
__n234["raw"] := "5";
__n232["right"] := __n234;
__n226["test"] := __n232;
__n235 := {  };
__n235["type"] := "UpdateExpression";
__n235["operator"] := "++";
__n236 := {  };
__n236["type"] := "Identifier";
__n236["name"] := "i";
__n235["argument"] := __n236;
__n235["prefix"] := false;
__n226["update"] := __n235;
__n237 := {  };
__n237["type"] := "BlockStatement";
__n239 := {  };
__n239["type"] := "TryStatement";
__n240 := {  };
__n240["type"] := "BlockStatement";
__n242 := {  };
__n242["type"] := "ExpressionStatement";
__n243 := {  };
__n243["type"] := "AssignmentExpression";
__n243["operator"] := "+=";
__n244 := {  };
__n244["type"] := "Identifier";
__n244["name"] := "c4";
__n243["left"] := __n244;
__n245 := {  };
__n245["type"] := "Literal";
__n245["value"] := 1.;
__n245["raw"] := "1";
__n243["right"] := __n245;
__n242["expression"] := __n243;
__n246 := {  };
__n246["type"] := "BreakStatement";
__n246["label"] := null;
__n241 := [ __n242, __n246 ];
__n240["body"] := __n241;
__n239["block"] := __n240;
__n239["handler"] := null;
__n247 := {  };
__n247["type"] := "BlockStatement";
__n249 := {  };
__n249["type"] := "ExpressionStatement";
__n250 := {  };
__n250["type"] := "AssignmentExpression";
__n250["operator"] := "=";
__n251 := {  };
__n251["type"] := "Identifier";
__n251["name"] := "fin4";
__n250["left"] := __n251;
__n252 := {  };
__n252["type"] := "Literal";
__n252["value"] := 1.;
__n252["raw"] := "1";
__n250["right"] := __n252;
__n249["expression"] := __n250;
__n248 := [ __n249 ];
__n247["body"] := __n248;
__n239["finalizer"] := __n247;
__n253 := {  };
__n253["type"] := "ExpressionStatement";
__n254 := {  };
__n254["type"] := "AssignmentExpression";
__n254["operator"] := "=";
__n255 := {  };
__n255["type"] := "Identifier";
__n255["name"] := "fin4";
__n254["left"] := __n255;
__n256 := {  };
__n256["type"] := "UnaryExpression";
__n256["operator"] := "-";
__n257 := {  };
__n257["type"] := "Literal";
__n257["value"] := 1.;
__n257["raw"] := "1";
__n256["argument"] := __n257;
__n256["prefix"] := true;
__n254["right"] := __n256;
__n253["expression"] := __n254;
__n258 := {  };
__n258["type"] := "ExpressionStatement";
__n259 := {  };
__n259["type"] := "AssignmentExpression";
__n259["operator"] := "+=";
__n260 := {  };
__n260["type"] := "Identifier";
__n260["name"] := "c4";
__n259["left"] := __n260;
__n261 := {  };
__n261["type"] := "Literal";
__n261["value"] := 2.;
__n261["raw"] := "2";
__n259["right"] := __n261;
__n258["expression"] := __n259;
__n238 := [ __n239, __n253, __n258 ];
__n237["body"] := __n238;
__n226["body"] := __n237;
__n262 := {  };
__n262["type"] := "EmptyStatement";
__n263 := {  };
__n263["type"] := "IfStatement";
__n264 := {  };
__n264["type"] := "BinaryExpression";
__n264["operator"] := "!==";
__n265 := {  };
__n265["type"] := "Identifier";
__n265["name"] := "fin4";
__n264["left"] := __n265;
__n266 := {  };
__n266["type"] := "Literal";
__n266["value"] := 1.;
__n266["raw"] := "1";
__n264["right"] := __n266;
__n263["test"] := __n264;
__n267 := {  };
__n267["type"] := "BlockStatement";
__n269 := {  };
__n269["type"] := "ExpressionStatement";
__n270 := {  };
__n270["type"] := "CallExpression";
__n271 := {  };
__n271["type"] := "Identifier";
__n271["name"] := "$ERROR";
__n270["callee"] := __n271;
__n273 := {  };
__n273["type"] := "Literal";
__n273["value"] := "#4.1: \"finally\" block must be evaluated";
__n273["raw"] := "'#4.1: \"finally\" block must be evaluated'";
__n272 := [ __n273 ];
__n270["arguments"] := __n272;
__n269["expression"] := __n270;
__n268 := [ __n269 ];
__n267["body"] := __n268;
__n263["consequent"] := __n267;
__n263["alternate"] := null;
__n274 := {  };
__n274["type"] := "IfStatement";
__n275 := {  };
__n275["type"] := "BinaryExpression";
__n275["operator"] := "!==";
__n276 := {  };
__n276["type"] := "Identifier";
__n276["name"] := "c4";
__n275["left"] := __n276;
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := 1.;
__n277["raw"] := "1";
__n275["right"] := __n277;
__n274["test"] := __n275;
__n278 := {  };
__n278["type"] := "BlockStatement";
__n280 := {  };
__n280["type"] := "ExpressionStatement";
__n281 := {  };
__n281["type"] := "CallExpression";
__n282 := {  };
__n282["type"] := "Identifier";
__n282["name"] := "$ERROR";
__n281["callee"] := __n282;
__n284 := {  };
__n284["type"] := "Literal";
__n284["value"] := "#4.2: \"try{break} finally\" must work correctly";
__n284["raw"] := "'#4.2: \"try{break} finally\" must work correctly'";
__n283 := [ __n284 ];
__n281["arguments"] := __n283;
__n280["expression"] := __n281;
__n279 := [ __n280 ];
__n278["body"] := __n279;
__n274["consequent"] := __n278;
__n274["alternate"] := null;
__n285 := {  };
__n285["type"] := "ForStatement";
__n286 := {  };
__n286["type"] := "VariableDeclaration";
__n288 := {  };
__n288["type"] := "VariableDeclarator";
__n289 := {  };
__n289["type"] := "Identifier";
__n289["name"] := "i";
__n288["id"] := __n289;
__n290 := {  };
__n290["type"] := "Literal";
__n290["value"] := 0.;
__n290["raw"] := "0";
__n288["init"] := __n290;
__n287 := [ __n288 ];
__n286["declarations"] := __n287;
__n286["kind"] := "var";
__n285["init"] := __n286;
__n291 := {  };
__n291["type"] := "BinaryExpression";
__n291["operator"] := "<";
__n292 := {  };
__n292["type"] := "Identifier";
__n292["name"] := "i";
__n291["left"] := __n292;
__n293 := {  };
__n293["type"] := "Literal";
__n293["value"] := 5.;
__n293["raw"] := "5";
__n291["right"] := __n293;
__n285["test"] := __n291;
__n294 := {  };
__n294["type"] := "UpdateExpression";
__n294["operator"] := "++";
__n295 := {  };
__n295["type"] := "Identifier";
__n295["name"] := "i";
__n294["argument"] := __n295;
__n294["prefix"] := false;
__n285["update"] := __n294;
__n296 := {  };
__n296["type"] := "BlockStatement";
__n298 := {  };
__n298["type"] := "TryStatement";
__n299 := {  };
__n299["type"] := "BlockStatement";
__n301 := {  };
__n301["type"] := "ThrowStatement";
__n302 := {  };
__n302["type"] := "Literal";
__n302["value"] := "ex1";
__n302["raw"] := "\"ex1\"";
__n301["argument"] := __n302;
__n300 := [ __n301 ];
__n299["body"] := __n300;
__n298["block"] := __n299;
__n303 := {  };
__n303["type"] := "CatchClause";
__n304 := {  };
__n304["type"] := "Identifier";
__n304["name"] := "er1";
__n303["param"] := __n304;
__n305 := {  };
__n305["type"] := "BlockStatement";
__n307 := {  };
__n307["type"] := "BreakStatement";
__n307["label"] := null;
__n306 := [ __n307 ];
__n305["body"] := __n306;
__n303["body"] := __n305;
__n298["handler"] := __n303;
__n298["finalizer"] := null;
__n297 := [ __n298 ];
__n296["body"] := __n297;
__n285["body"] := __n296;
__n308 := {  };
__n308["type"] := "EmptyStatement";
__n309 := {  };
__n309["type"] := "IfStatement";
__n310 := {  };
__n310["type"] := "BinaryExpression";
__n310["operator"] := "!==";
__n311 := {  };
__n311["type"] := "Identifier";
__n311["name"] := "i";
__n310["left"] := __n311;
__n312 := {  };
__n312["type"] := "Literal";
__n312["value"] := 0.;
__n312["raw"] := "0";
__n310["right"] := __n312;
__n309["test"] := __n310;
__n313 := {  };
__n313["type"] := "BlockStatement";
__n315 := {  };
__n315["type"] := "ExpressionStatement";
__n316 := {  };
__n316["type"] := "CallExpression";
__n317 := {  };
__n317["type"] := "Identifier";
__n317["name"] := "$ERROR";
__n316["callee"] := __n317;
__n319 := {  };
__n319["type"] := "Literal";
__n319["value"] := "#5: \"try catch{break}\" must work correctly";
__n319["raw"] := "'#5: \"try catch{break}\" must work correctly'";
__n318 := [ __n319 ];
__n316["arguments"] := __n318;
__n315["expression"] := __n316;
__n314 := [ __n315 ];
__n313["body"] := __n314;
__n309["consequent"] := __n313;
__n309["alternate"] := null;
__n320 := {  };
__n320["type"] := "VariableDeclaration";
__n322 := {  };
__n322["type"] := "VariableDeclarator";
__n323 := {  };
__n323["type"] := "Identifier";
__n323["name"] := "c6";
__n322["id"] := __n323;
__n324 := {  };
__n324["type"] := "Literal";
__n324["value"] := 0.;
__n324["raw"] := "0";
__n322["init"] := __n324;
__n321 := [ __n322 ];
__n320["declarations"] := __n321;
__n320["kind"] := "var";
__n325 := {  };
__n325["type"] := "ForStatement";
__n326 := {  };
__n326["type"] := "VariableDeclaration";
__n328 := {  };
__n328["type"] := "VariableDeclarator";
__n329 := {  };
__n329["type"] := "Identifier";
__n329["name"] := "c6";
__n328["id"] := __n329;
__n330 := {  };
__n330["type"] := "Literal";
__n330["value"] := 0.;
__n330["raw"] := "0";
__n328["init"] := __n330;
__n327 := [ __n328 ];
__n326["declarations"] := __n327;
__n326["kind"] := "var";
__n325["init"] := __n326;
__n331 := {  };
__n331["type"] := "BinaryExpression";
__n331["operator"] := "<";
__n332 := {  };
__n332["type"] := "Identifier";
__n332["name"] := "c6";
__n331["left"] := __n332;
__n333 := {  };
__n333["type"] := "Literal";
__n333["value"] := 5.;
__n333["raw"] := "5";
__n331["right"] := __n333;
__n325["test"] := __n331;
__n325["update"] := null;
__n334 := {  };
__n334["type"] := "BlockStatement";
__n336 := {  };
__n336["type"] := "TryStatement";
__n337 := {  };
__n337["type"] := "BlockStatement";
__n339 := {  };
__n339["type"] := "ExpressionStatement";
__n340 := {  };
__n340["type"] := "AssignmentExpression";
__n340["operator"] := "+=";
__n341 := {  };
__n341["type"] := "Identifier";
__n341["name"] := "c6";
__n340["left"] := __n341;
__n342 := {  };
__n342["type"] := "Literal";
__n342["value"] := 1.;
__n342["raw"] := "1";
__n340["right"] := __n342;
__n339["expression"] := __n340;
__n343 := {  };
__n343["type"] := "BreakStatement";
__n343["label"] := null;
__n338 := [ __n339, __n343 ];
__n337["body"] := __n338;
__n336["block"] := __n337;
__n344 := {  };
__n344["type"] := "CatchClause";
__n345 := {  };
__n345["type"] := "Identifier";
__n345["name"] := "er1";
__n344["param"] := __n345;
__n346 := {  };
__n346["type"] := "BlockStatement";
__n347 := [  ];
__n346["body"] := __n347;
__n344["body"] := __n346;
__n336["handler"] := __n344;
__n336["finalizer"] := null;
__n348 := {  };
__n348["type"] := "ExpressionStatement";
__n349 := {  };
__n349["type"] := "AssignmentExpression";
__n349["operator"] := "+=";
__n350 := {  };
__n350["type"] := "Identifier";
__n350["name"] := "c6";
__n349["left"] := __n350;
__n351 := {  };
__n351["type"] := "Literal";
__n351["value"] := 2.;
__n351["raw"] := "2";
__n349["right"] := __n351;
__n348["expression"] := __n349;
__n335 := [ __n336, __n348 ];
__n334["body"] := __n335;
__n325["body"] := __n334;
__n352 := {  };
__n352["type"] := "EmptyStatement";
__n353 := {  };
__n353["type"] := "IfStatement";
__n354 := {  };
__n354["type"] := "BinaryExpression";
__n354["operator"] := "!==";
__n355 := {  };
__n355["type"] := "Identifier";
__n355["name"] := "c6";
__n354["left"] := __n355;
__n356 := {  };
__n356["type"] := "Literal";
__n356["value"] := 1.;
__n356["raw"] := "1";
__n354["right"] := __n356;
__n353["test"] := __n354;
__n357 := {  };
__n357["type"] := "BlockStatement";
__n359 := {  };
__n359["type"] := "ExpressionStatement";
__n360 := {  };
__n360["type"] := "CallExpression";
__n361 := {  };
__n361["type"] := "Identifier";
__n361["name"] := "$ERROR";
__n360["callee"] := __n361;
__n363 := {  };
__n363["type"] := "Literal";
__n363["value"] := "#6: \"try{break} catch\" must work correctly";
__n363["raw"] := "'#6: \"try{break} catch\" must work correctly'";
__n362 := [ __n363 ];
__n360["arguments"] := __n362;
__n359["expression"] := __n360;
__n358 := [ __n359 ];
__n357["body"] := __n358;
__n353["consequent"] := __n357;
__n353["alternate"] := null;
__n364 := {  };
__n364["type"] := "VariableDeclaration";
__n366 := {  };
__n366["type"] := "VariableDeclarator";
__n367 := {  };
__n367["type"] := "Identifier";
__n367["name"] := "c7";
__n366["id"] := __n367;
__n368 := {  };
__n368["type"] := "Literal";
__n368["value"] := 0.;
__n368["raw"] := "0";
__n366["init"] := __n368;
__n369 := {  };
__n369["type"] := "VariableDeclarator";
__n370 := {  };
__n370["type"] := "Identifier";
__n370["name"] := "fin7";
__n369["id"] := __n370;
__n371 := {  };
__n371["type"] := "Literal";
__n371["value"] := 0.;
__n371["raw"] := "0";
__n369["init"] := __n371;
__n365 := [ __n366, __n369 ];
__n364["declarations"] := __n365;
__n364["kind"] := "var";
__n372 := {  };
__n372["type"] := "TryStatement";
__n373 := {  };
__n373["type"] := "BlockStatement";
__n375 := {  };
__n375["type"] := "ForStatement";
__n376 := {  };
__n376["type"] := "VariableDeclaration";
__n378 := {  };
__n378["type"] := "VariableDeclarator";
__n379 := {  };
__n379["type"] := "Identifier";
__n379["name"] := "c7";
__n378["id"] := __n379;
__n380 := {  };
__n380["type"] := "Literal";
__n380["value"] := 0.;
__n380["raw"] := "0";
__n378["init"] := __n380;
__n377 := [ __n378 ];
__n376["declarations"] := __n377;
__n376["kind"] := "var";
__n375["init"] := __n376;
__n381 := {  };
__n381["type"] := "BinaryExpression";
__n381["operator"] := "<";
__n382 := {  };
__n382["type"] := "Identifier";
__n382["name"] := "c7";
__n381["left"] := __n382;
__n383 := {  };
__n383["type"] := "Literal";
__n383["value"] := 5.;
__n383["raw"] := "5";
__n381["right"] := __n383;
__n375["test"] := __n381;
__n375["update"] := null;
__n384 := {  };
__n384["type"] := "BlockStatement";
__n386 := {  };
__n386["type"] := "TryStatement";
__n387 := {  };
__n387["type"] := "BlockStatement";
__n389 := {  };
__n389["type"] := "ExpressionStatement";
__n390 := {  };
__n390["type"] := "AssignmentExpression";
__n390["operator"] := "+=";
__n391 := {  };
__n391["type"] := "Identifier";
__n391["name"] := "c7";
__n390["left"] := __n391;
__n392 := {  };
__n392["type"] := "Literal";
__n392["value"] := 1.;
__n392["raw"] := "1";
__n390["right"] := __n392;
__n389["expression"] := __n390;
__n393 := {  };
__n393["type"] := "ThrowStatement";
__n394 := {  };
__n394["type"] := "Literal";
__n394["value"] := "ex1";
__n394["raw"] := "\"ex1\"";
__n393["argument"] := __n394;
__n388 := [ __n389, __n393 ];
__n387["body"] := __n388;
__n386["block"] := __n387;
__n386["handler"] := null;
__n395 := {  };
__n395["type"] := "BlockStatement";
__n397 := {  };
__n397["type"] := "ExpressionStatement";
__n398 := {  };
__n398["type"] := "AssignmentExpression";
__n398["operator"] := "=";
__n399 := {  };
__n399["type"] := "Identifier";
__n399["name"] := "fin7";
__n398["left"] := __n399;
__n400 := {  };
__n400["type"] := "Literal";
__n400["value"] := 1.;
__n400["raw"] := "1";
__n398["right"] := __n400;
__n397["expression"] := __n398;
__n401 := {  };
__n401["type"] := "BreakStatement";
__n401["label"] := null;
__n396 := [ __n397, __n401 ];
__n395["body"] := __n396;
__n386["finalizer"] := __n395;
__n402 := {  };
__n402["type"] := "ExpressionStatement";
__n403 := {  };
__n403["type"] := "AssignmentExpression";
__n403["operator"] := "=";
__n404 := {  };
__n404["type"] := "Identifier";
__n404["name"] := "fin7";
__n403["left"] := __n404;
__n405 := {  };
__n405["type"] := "UnaryExpression";
__n405["operator"] := "-";
__n406 := {  };
__n406["type"] := "Literal";
__n406["value"] := 1.;
__n406["raw"] := "1";
__n405["argument"] := __n406;
__n405["prefix"] := true;
__n403["right"] := __n405;
__n402["expression"] := __n403;
__n407 := {  };
__n407["type"] := "ExpressionStatement";
__n408 := {  };
__n408["type"] := "AssignmentExpression";
__n408["operator"] := "+=";
__n409 := {  };
__n409["type"] := "Identifier";
__n409["name"] := "c7";
__n408["left"] := __n409;
__n410 := {  };
__n410["type"] := "Literal";
__n410["value"] := 2.;
__n410["raw"] := "2";
__n408["right"] := __n410;
__n407["expression"] := __n408;
__n385 := [ __n386, __n402, __n407 ];
__n384["body"] := __n385;
__n375["body"] := __n384;
__n374 := [ __n375 ];
__n373["body"] := __n374;
__n372["block"] := __n373;
__n411 := {  };
__n411["type"] := "CatchClause";
__n412 := {  };
__n412["type"] := "Identifier";
__n412["name"] := "ex1";
__n411["param"] := __n412;
__n413 := {  };
__n413["type"] := "BlockStatement";
__n415 := {  };
__n415["type"] := "ExpressionStatement";
__n416 := {  };
__n416["type"] := "AssignmentExpression";
__n416["operator"] := "=";
__n417 := {  };
__n417["type"] := "Identifier";
__n417["name"] := "c7";
__n416["left"] := __n417;
__n418 := {  };
__n418["type"] := "Literal";
__n418["value"] := 10.;
__n418["raw"] := "10";
__n416["right"] := __n418;
__n415["expression"] := __n416;
__n414 := [ __n415 ];
__n413["body"] := __n414;
__n411["body"] := __n413;
__n372["handler"] := __n411;
__n372["finalizer"] := null;
__n419 := {  };
__n419["type"] := "IfStatement";
__n420 := {  };
__n420["type"] := "BinaryExpression";
__n420["operator"] := "!==";
__n421 := {  };
__n421["type"] := "Identifier";
__n421["name"] := "fin7";
__n420["left"] := __n421;
__n422 := {  };
__n422["type"] := "Literal";
__n422["value"] := 1.;
__n422["raw"] := "1";
__n420["right"] := __n422;
__n419["test"] := __n420;
__n423 := {  };
__n423["type"] := "BlockStatement";
__n425 := {  };
__n425["type"] := "ExpressionStatement";
__n426 := {  };
__n426["type"] := "CallExpression";
__n427 := {  };
__n427["type"] := "Identifier";
__n427["name"] := "$ERROR";
__n426["callee"] := __n427;
__n429 := {  };
__n429["type"] := "Literal";
__n429["value"] := "#7.1: \"finally\" block must be evaluated";
__n429["raw"] := "'#7.1: \"finally\" block must be evaluated'";
__n428 := [ __n429 ];
__n426["arguments"] := __n428;
__n425["expression"] := __n426;
__n424 := [ __n425 ];
__n423["body"] := __n424;
__n419["consequent"] := __n423;
__n419["alternate"] := null;
__n430 := {  };
__n430["type"] := "IfStatement";
__n431 := {  };
__n431["type"] := "BinaryExpression";
__n431["operator"] := "!==";
__n432 := {  };
__n432["type"] := "Identifier";
__n432["name"] := "c7";
__n431["left"] := __n432;
__n433 := {  };
__n433["type"] := "Literal";
__n433["value"] := 1.;
__n433["raw"] := "1";
__n431["right"] := __n433;
__n430["test"] := __n431;
__n434 := {  };
__n434["type"] := "BlockStatement";
__n436 := {  };
__n436["type"] := "ExpressionStatement";
__n437 := {  };
__n437["type"] := "CallExpression";
__n438 := {  };
__n438["type"] := "Identifier";
__n438["name"] := "$ERROR";
__n437["callee"] := __n438;
__n440 := {  };
__n440["type"] := "Literal";
__n440["value"] := "#7.2: \"try finally{break}\" must work correctly";
__n440["raw"] := "'#7.2: \"try finally{break}\" must work correctly'";
__n439 := [ __n440 ];
__n437["arguments"] := __n439;
__n436["expression"] := __n437;
__n435 := [ __n436 ];
__n434["body"] := __n435;
__n430["consequent"] := __n434;
__n430["alternate"] := null;
__n1 := [ __n2, __n10, __n50, __n51, __n62, __n73, __n81, __n123, __n124, __n135, __n146, __n154, __n195, __n196, __n207, __n218, __n226, __n262, __n263, __n274, __n285, __n308, __n309, __n320, __n325, __n352, __n353, __n364, __n372, __n419, __n430 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n441 := [ "c1", "fin", "i", "c2", "fin2", "c3", "fin3", "c4", "fin4", "c6", "c7", "fin7" ];
__n0["variableDeclarations"] := __n441;
__n442 := [  ];
__n0["functionDeclarations"] := __n442;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}