function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "c1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "fin";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0";
__n7["init"] := __n9;
__n3 := [ __n4, __n7 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "ForStatement";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "i";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 0.;
__n15["raw"] := "0";
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n10["init"] := __n11;
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "<";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "i";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 5.;
__n18["raw"] := "5";
__n16["right"] := __n18;
__n10["test"] := __n16;
__n19 := {  };
__n19["type"] := "UpdateExpression";
__n19["operator"] := "++";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "i";
__n19["argument"] := __n20;
__n19["prefix"] := false;
__n10["update"] := __n19;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "TryStatement";
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "AssignmentExpression";
__n27["operator"] := "+=";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "c1";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 1.;
__n29["raw"] := "1";
__n27["right"] := __n29;
__n26["expression"] := __n27;
__n30 := {  };
__n30["type"] := "BreakStatement";
__n30["label"] := null;
__n25 := [ __n26, __n30 ];
__n24["body"] := __n25;
__n23["block"] := __n24;
__n31 := {  };
__n31["type"] := "CatchClause";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "er1";
__n31["param"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n34 := [  ];
__n33["body"] := __n34;
__n31["body"] := __n33;
__n23["handler"] := __n31;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "AssignmentExpression";
__n38["operator"] := "=";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "fin";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 1.;
__n40["raw"] := "1";
__n38["right"] := __n40;
__n37["expression"] := __n38;
__n41 := {  };
__n41["type"] := "ContinueStatement";
__n41["label"] := null;
__n36 := [ __n37, __n41 ];
__n35["body"] := __n36;
__n23["finalizer"] := __n35;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "fin";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "UnaryExpression";
__n45["operator"] := "-";
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 1.;
__n46["raw"] := "1";
__n45["argument"] := __n46;
__n45["prefix"] := true;
__n43["right"] := __n45;
__n42["expression"] := __n43;
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "AssignmentExpression";
__n48["operator"] := "+=";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "c1";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 2.;
__n50["raw"] := "2";
__n48["right"] := __n50;
__n47["expression"] := __n48;
__n22 := [ __n23, __n42, __n47 ];
__n21["body"] := __n22;
__n10["body"] := __n21;
__n51 := {  };
__n51["type"] := "IfStatement";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "!==";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "fin";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 1.;
__n54["raw"] := "1";
__n52["right"] := __n54;
__n51["test"] := __n52;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#1.1: \"finally\" block must be evaluated";
__n61["raw"] := "'#1.1: \"finally\" block must be evaluated'";
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n51["consequent"] := __n55;
__n51["alternate"] := null;
__n62 := {  };
__n62["type"] := "IfStatement";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "!==";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "c1";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 5.;
__n65["raw"] := "5";
__n63["right"] := __n65;
__n62["test"] := __n63;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "#1.2: \"try{break} catch finally{continue}\" must work correctly";
__n72["raw"] := "'#1.2: \"try{break} catch finally{continue}\" must work correctly'";
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n62["consequent"] := __n66;
__n62["alternate"] := null;
__n73 := {  };
__n73["type"] := "VariableDeclaration";
__n75 := {  };
__n75["type"] := "VariableDeclarator";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "c2";
__n75["id"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 0.;
__n77["raw"] := "0";
__n75["init"] := __n77;
__n78 := {  };
__n78["type"] := "VariableDeclarator";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "fin2";
__n78["id"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 0.;
__n80["raw"] := "0";
__n78["init"] := __n80;
__n74 := [ __n75, __n78 ];
__n73["declarations"] := __n74;
__n73["kind"] := "var";
__n81 := {  };
__n81["type"] := "ForStatement";
__n82 := {  };
__n82["type"] := "VariableDeclaration";
__n84 := {  };
__n84["type"] := "VariableDeclarator";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "i";
__n84["id"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 0.;
__n86["raw"] := "0";
__n84["init"] := __n86;
__n83 := [ __n84 ];
__n82["declarations"] := __n83;
__n82["kind"] := "var";
__n81["init"] := __n82;
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "<";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "i";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 5.;
__n89["raw"] := "5";
__n87["right"] := __n89;
__n81["test"] := __n87;
__n90 := {  };
__n90["type"] := "UpdateExpression";
__n90["operator"] := "++";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "i";
__n90["argument"] := __n91;
__n90["prefix"] := false;
__n81["update"] := __n90;
__n92 := {  };
__n92["type"] := "BlockStatement";
__n94 := {  };
__n94["type"] := "TryStatement";
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "ThrowStatement";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "ex1";
__n98["raw"] := "\"ex1\"";
__n97["argument"] := __n98;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n94["block"] := __n95;
__n99 := {  };
__n99["type"] := "CatchClause";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "er1";
__n99["param"] := __n100;
__n101 := {  };
__n101["type"] := "BlockStatement";
__n103 := {  };
__n103["type"] := "ExpressionStatement";
__n104 := {  };
__n104["type"] := "AssignmentExpression";
__n104["operator"] := "+=";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "c2";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 1.;
__n106["raw"] := "1";
__n104["right"] := __n106;
__n103["expression"] := __n104;
__n107 := {  };
__n107["type"] := "BreakStatement";
__n107["label"] := null;
__n102 := [ __n103, __n107 ];
__n101["body"] := __n102;
__n99["body"] := __n101;
__n94["handler"] := __n99;
__n108 := {  };
__n108["type"] := "BlockStatement";
__n110 := {  };
__n110["type"] := "ExpressionStatement";
__n111 := {  };
__n111["type"] := "AssignmentExpression";
__n111["operator"] := "=";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "fin2";
__n111["left"] := __n112;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 1.;
__n113["raw"] := "1";
__n111["right"] := __n113;
__n110["expression"] := __n111;
__n114 := {  };
__n114["type"] := "ContinueStatement";
__n114["label"] := null;
__n109 := [ __n110, __n114 ];
__n108["body"] := __n109;
__n94["finalizer"] := __n108;
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "AssignmentExpression";
__n116["operator"] := "+=";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "c2";
__n116["left"] := __n117;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 2.;
__n118["raw"] := "2";
__n116["right"] := __n118;
__n115["expression"] := __n116;
__n119 := {  };
__n119["type"] := "ExpressionStatement";
__n120 := {  };
__n120["type"] := "AssignmentExpression";
__n120["operator"] := "=";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "fin2";
__n120["left"] := __n121;
__n122 := {  };
__n122["type"] := "UnaryExpression";
__n122["operator"] := "-";
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 1.;
__n123["raw"] := "1";
__n122["argument"] := __n123;
__n122["prefix"] := true;
__n120["right"] := __n122;
__n119["expression"] := __n120;
__n93 := [ __n94, __n115, __n119 ];
__n92["body"] := __n93;
__n81["body"] := __n92;
__n124 := {  };
__n124["type"] := "IfStatement";
__n125 := {  };
__n125["type"] := "BinaryExpression";
__n125["operator"] := "!==";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "fin2";
__n125["left"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := 1.;
__n127["raw"] := "1";
__n125["right"] := __n127;
__n124["test"] := __n125;
__n128 := {  };
__n128["type"] := "BlockStatement";
__n130 := {  };
__n130["type"] := "ExpressionStatement";
__n131 := {  };
__n131["type"] := "CallExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "$ERROR";
__n131["callee"] := __n132;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "#2.1: \"finally\" block must be evaluated";
__n134["raw"] := "'#2.1: \"finally\" block must be evaluated'";
__n133 := [ __n134 ];
__n131["arguments"] := __n133;
__n130["expression"] := __n131;
__n129 := [ __n130 ];
__n128["body"] := __n129;
__n124["consequent"] := __n128;
__n124["alternate"] := null;
__n135 := {  };
__n135["type"] := "IfStatement";
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "!==";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "c2";
__n136["left"] := __n137;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := 5.;
__n138["raw"] := "5";
__n136["right"] := __n138;
__n135["test"] := __n136;
__n139 := {  };
__n139["type"] := "BlockStatement";
__n141 := {  };
__n141["type"] := "ExpressionStatement";
__n142 := {  };
__n142["type"] := "CallExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "$ERROR";
__n142["callee"] := __n143;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "#2.2: \"try catch{break} finally{continue}\" must work correctly";
__n145["raw"] := "'#2.2: \"try catch{break} finally{continue}\" must work correctly'";
__n144 := [ __n145 ];
__n142["arguments"] := __n144;
__n141["expression"] := __n142;
__n140 := [ __n141 ];
__n139["body"] := __n140;
__n135["consequent"] := __n139;
__n135["alternate"] := null;
__n1 := [ __n2, __n10, __n51, __n62, __n73, __n81, __n124, __n135 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n146 := [ "c1", "fin", "i", "c2", "fin2" ];
__n0["variableDeclarations"] := __n146;
__n147 := [  ];
__n0["functionDeclarations"] := __n147;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}