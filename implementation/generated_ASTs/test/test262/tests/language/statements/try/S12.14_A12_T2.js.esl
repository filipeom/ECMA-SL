function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "mycars";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "NewExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Array";
__n10["callee"] := __n11;
__n12 := [  ];
__n10["arguments"] := __n12;
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "AssignmentExpression";
__n14["operator"] := "=";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n15["computed"] := true;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "mycars";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n15["property"] := __n17;
__n14["left"] := __n15;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "Saab";
__n18["raw"] := "\"Saab\"";
__n14["right"] := __n18;
__n13["expression"] := __n14;
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "AssignmentExpression";
__n20["operator"] := "=";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n21["computed"] := true;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "mycars";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 1.;
__n23["raw"] := "1";
__n21["property"] := __n23;
__n20["left"] := __n21;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "Volvo";
__n24["raw"] := "\"Volvo\"";
__n20["right"] := __n24;
__n19["expression"] := __n20;
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "AssignmentExpression";
__n26["operator"] := "=";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n27["computed"] := true;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "mycars";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 2.;
__n29["raw"] := "2";
__n27["property"] := __n29;
__n26["left"] := __n27;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "BMW";
__n30["raw"] := "\"BMW\"";
__n26["right"] := __n30;
__n25["expression"] := __n26;
__n31 := {  };
__n31["type"] := "VariableDeclaration";
__n33 := {  };
__n33["type"] := "VariableDeclarator";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "fin";
__n33["id"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 0.;
__n35["raw"] := "0";
__n33["init"] := __n35;
__n32 := [ __n33 ];
__n31["declarations"] := __n32;
__n31["kind"] := "var";
__n36 := {  };
__n36["type"] := "VariableDeclaration";
__n38 := {  };
__n38["type"] := "VariableDeclarator";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "i";
__n38["id"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 0.;
__n40["raw"] := "0";
__n38["init"] := __n40;
__n37 := [ __n38 ];
__n36["declarations"] := __n37;
__n36["kind"] := "var";
__n41 := {  };
__n41["type"] := "ForInStatement";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "x";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "mycars";
__n41["right"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "TryStatement";
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "AssignmentExpression";
__n50["operator"] := "+=";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "i";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 1.;
__n52["raw"] := "1";
__n50["right"] := __n52;
__n49["expression"] := __n50;
__n53 := {  };
__n53["type"] := "ContinueStatement";
__n53["label"] := null;
__n48 := [ __n49, __n53 ];
__n47["body"] := __n48;
__n46["block"] := __n47;
__n54 := {  };
__n54["type"] := "CatchClause";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "er1";
__n54["param"] := __n55;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n57 := [  ];
__n56["body"] := __n57;
__n54["body"] := __n56;
__n46["handler"] := __n54;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "AssignmentExpression";
__n61["operator"] := "=";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "fin";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 1.;
__n63["raw"] := "1";
__n61["right"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n46["finalizer"] := __n58;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "AssignmentExpression";
__n65["operator"] := "=";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "fin";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "UnaryExpression";
__n67["operator"] := "-";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 1.;
__n68["raw"] := "1";
__n67["argument"] := __n68;
__n67["prefix"] := true;
__n65["right"] := __n67;
__n64["expression"] := __n65;
__n45 := [ __n46, __n64 ];
__n44["body"] := __n45;
__n41["body"] := __n44;
__n41["each"] := false;
__n69 := {  };
__n69["type"] := "IfStatement";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "!==";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "fin";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.;
__n72["raw"] := "1";
__n70["right"] := __n72;
__n69["test"] := __n70;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "$ERROR";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "#1.1: \"finally\" block must be evaluated";
__n79["raw"] := "'#1.1: \"finally\" block must be evaluated'";
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["expression"] := __n76;
__n74 := [ __n75 ];
__n73["body"] := __n74;
__n69["consequent"] := __n73;
__n69["alternate"] := null;
__n80 := {  };
__n80["type"] := "IfStatement";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "!==";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "i";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 3.;
__n83["raw"] := "3";
__n81["right"] := __n83;
__n80["test"] := __n81;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "$ERROR";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "#1.2:  \"try{continue} catch finally\" must work correctly";
__n90["raw"] := "'#1.2:  \"try{continue} catch finally\" must work correctly'";
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86["expression"] := __n87;
__n85 := [ __n86 ];
__n84["body"] := __n85;
__n80["consequent"] := __n84;
__n80["alternate"] := null;
__n91 := {  };
__n91["type"] := "VariableDeclaration";
__n93 := {  };
__n93["type"] := "VariableDeclarator";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "c2";
__n93["id"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 0.;
__n95["raw"] := "0";
__n93["init"] := __n95;
__n96 := {  };
__n96["type"] := "VariableDeclarator";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "fin2";
__n96["id"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 0.;
__n98["raw"] := "0";
__n96["init"] := __n98;
__n92 := [ __n93, __n96 ];
__n91["declarations"] := __n92;
__n91["kind"] := "var";
__n99 := {  };
__n99["type"] := "ForInStatement";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "x";
__n99["left"] := __n100;
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "mycars";
__n99["right"] := __n101;
__n102 := {  };
__n102["type"] := "BlockStatement";
__n104 := {  };
__n104["type"] := "TryStatement";
__n105 := {  };
__n105["type"] := "BlockStatement";
__n107 := {  };
__n107["type"] := "ThrowStatement";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "ex1";
__n108["raw"] := "\"ex1\"";
__n107["argument"] := __n108;
__n106 := [ __n107 ];
__n105["body"] := __n106;
__n104["block"] := __n105;
__n109 := {  };
__n109["type"] := "CatchClause";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "er1";
__n109["param"] := __n110;
__n111 := {  };
__n111["type"] := "BlockStatement";
__n113 := {  };
__n113["type"] := "ExpressionStatement";
__n114 := {  };
__n114["type"] := "AssignmentExpression";
__n114["operator"] := "+=";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "c2";
__n114["left"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 1.;
__n116["raw"] := "1";
__n114["right"] := __n116;
__n113["expression"] := __n114;
__n117 := {  };
__n117["type"] := "ContinueStatement";
__n117["label"] := null;
__n112 := [ __n113, __n117 ];
__n111["body"] := __n112;
__n109["body"] := __n111;
__n104["handler"] := __n109;
__n118 := {  };
__n118["type"] := "BlockStatement";
__n120 := {  };
__n120["type"] := "ExpressionStatement";
__n121 := {  };
__n121["type"] := "AssignmentExpression";
__n121["operator"] := "=";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "fin2";
__n121["left"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 1.;
__n123["raw"] := "1";
__n121["right"] := __n123;
__n120["expression"] := __n121;
__n119 := [ __n120 ];
__n118["body"] := __n119;
__n104["finalizer"] := __n118;
__n124 := {  };
__n124["type"] := "ExpressionStatement";
__n125 := {  };
__n125["type"] := "AssignmentExpression";
__n125["operator"] := "=";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "fin2";
__n125["left"] := __n126;
__n127 := {  };
__n127["type"] := "UnaryExpression";
__n127["operator"] := "-";
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := 1.;
__n128["raw"] := "1";
__n127["argument"] := __n128;
__n127["prefix"] := true;
__n125["right"] := __n127;
__n124["expression"] := __n125;
__n103 := [ __n104, __n124 ];
__n102["body"] := __n103;
__n99["body"] := __n102;
__n99["each"] := false;
__n129 := {  };
__n129["type"] := "IfStatement";
__n130 := {  };
__n130["type"] := "BinaryExpression";
__n130["operator"] := "!==";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "fin2";
__n130["left"] := __n131;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := 1.;
__n132["raw"] := "1";
__n130["right"] := __n132;
__n129["test"] := __n130;
__n133 := {  };
__n133["type"] := "BlockStatement";
__n135 := {  };
__n135["type"] := "ExpressionStatement";
__n136 := {  };
__n136["type"] := "CallExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "$ERROR";
__n136["callee"] := __n137;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "#2.1: \"finally\" block must be evaluated";
__n139["raw"] := "'#2.1: \"finally\" block must be evaluated'";
__n138 := [ __n139 ];
__n136["arguments"] := __n138;
__n135["expression"] := __n136;
__n134 := [ __n135 ];
__n133["body"] := __n134;
__n129["consequent"] := __n133;
__n129["alternate"] := null;
__n140 := {  };
__n140["type"] := "IfStatement";
__n141 := {  };
__n141["type"] := "BinaryExpression";
__n141["operator"] := "!==";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "c2";
__n141["left"] := __n142;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := 3.;
__n143["raw"] := "3";
__n141["right"] := __n143;
__n140["test"] := __n141;
__n144 := {  };
__n144["type"] := "BlockStatement";
__n146 := {  };
__n146["type"] := "ExpressionStatement";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "$ERROR";
__n147["callee"] := __n148;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "#2.1: \"try catch{continue} finally\" must work correctly";
__n150["raw"] := "'#2.1: \"try catch{continue} finally\" must work correctly'";
__n149 := [ __n150 ];
__n147["arguments"] := __n149;
__n146["expression"] := __n147;
__n145 := [ __n146 ];
__n144["body"] := __n145;
__n140["consequent"] := __n144;
__n140["alternate"] := null;
__n151 := {  };
__n151["type"] := "VariableDeclaration";
__n153 := {  };
__n153["type"] := "VariableDeclarator";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "c3";
__n153["id"] := __n154;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := 0.;
__n155["raw"] := "0";
__n153["init"] := __n155;
__n156 := {  };
__n156["type"] := "VariableDeclarator";
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "fin3";
__n156["id"] := __n157;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := 0.;
__n158["raw"] := "0";
__n156["init"] := __n158;
__n152 := [ __n153, __n156 ];
__n151["declarations"] := __n152;
__n151["kind"] := "var";
__n159 := {  };
__n159["type"] := "ForInStatement";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "x";
__n159["left"] := __n160;
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "mycars";
__n159["right"] := __n161;
__n162 := {  };
__n162["type"] := "BlockStatement";
__n164 := {  };
__n164["type"] := "TryStatement";
__n165 := {  };
__n165["type"] := "BlockStatement";
__n167 := {  };
__n167["type"] := "ThrowStatement";
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := "ex1";
__n168["raw"] := "\"ex1\"";
__n167["argument"] := __n168;
__n166 := [ __n167 ];
__n165["body"] := __n166;
__n164["block"] := __n165;
__n169 := {  };
__n169["type"] := "CatchClause";
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "er1";
__n169["param"] := __n170;
__n171 := {  };
__n171["type"] := "BlockStatement";
__n173 := {  };
__n173["type"] := "ExpressionStatement";
__n174 := {  };
__n174["type"] := "AssignmentExpression";
__n174["operator"] := "+=";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "c3";
__n174["left"] := __n175;
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := 1.;
__n176["raw"] := "1";
__n174["right"] := __n176;
__n173["expression"] := __n174;
__n172 := [ __n173 ];
__n171["body"] := __n172;
__n169["body"] := __n171;
__n164["handler"] := __n169;
__n177 := {  };
__n177["type"] := "BlockStatement";
__n179 := {  };
__n179["type"] := "ExpressionStatement";
__n180 := {  };
__n180["type"] := "AssignmentExpression";
__n180["operator"] := "=";
__n181 := {  };
__n181["type"] := "Identifier";
__n181["name"] := "fin3";
__n180["left"] := __n181;
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := 1.;
__n182["raw"] := "1";
__n180["right"] := __n182;
__n179["expression"] := __n180;
__n183 := {  };
__n183["type"] := "ContinueStatement";
__n183["label"] := null;
__n178 := [ __n179, __n183 ];
__n177["body"] := __n178;
__n164["finalizer"] := __n177;
__n184 := {  };
__n184["type"] := "ExpressionStatement";
__n185 := {  };
__n185["type"] := "AssignmentExpression";
__n185["operator"] := "=";
__n186 := {  };
__n186["type"] := "Identifier";
__n186["name"] := "fin3";
__n185["left"] := __n186;
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := 0.;
__n187["raw"] := "0";
__n185["right"] := __n187;
__n184["expression"] := __n185;
__n163 := [ __n164, __n184 ];
__n162["body"] := __n163;
__n159["body"] := __n162;
__n159["each"] := false;
__n188 := {  };
__n188["type"] := "IfStatement";
__n189 := {  };
__n189["type"] := "BinaryExpression";
__n189["operator"] := "!==";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "c3";
__n189["left"] := __n190;
__n191 := {  };
__n191["type"] := "Literal";
__n191["value"] := 3.;
__n191["raw"] := "3";
__n189["right"] := __n191;
__n188["test"] := __n189;
__n192 := {  };
__n192["type"] := "BlockStatement";
__n194 := {  };
__n194["type"] := "ExpressionStatement";
__n195 := {  };
__n195["type"] := "CallExpression";
__n196 := {  };
__n196["type"] := "Identifier";
__n196["name"] := "$ERROR";
__n195["callee"] := __n196;
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := "#3.1: \"finally\" block must be evaluated";
__n198["raw"] := "'#3.1: \"finally\" block must be evaluated'";
__n197 := [ __n198 ];
__n195["arguments"] := __n197;
__n194["expression"] := __n195;
__n193 := [ __n194 ];
__n192["body"] := __n193;
__n188["consequent"] := __n192;
__n188["alternate"] := null;
__n199 := {  };
__n199["type"] := "IfStatement";
__n200 := {  };
__n200["type"] := "BinaryExpression";
__n200["operator"] := "!==";
__n201 := {  };
__n201["type"] := "Identifier";
__n201["name"] := "fin3";
__n200["left"] := __n201;
__n202 := {  };
__n202["type"] := "Literal";
__n202["value"] := 1.;
__n202["raw"] := "1";
__n200["right"] := __n202;
__n199["test"] := __n200;
__n203 := {  };
__n203["type"] := "BlockStatement";
__n205 := {  };
__n205["type"] := "ExpressionStatement";
__n206 := {  };
__n206["type"] := "CallExpression";
__n207 := {  };
__n207["type"] := "Identifier";
__n207["name"] := "$ERROR";
__n206["callee"] := __n207;
__n209 := {  };
__n209["type"] := "Literal";
__n209["value"] := "#3.2: \"try catch finally{continue}\" must work correctly";
__n209["raw"] := "'#3.2: \"try catch finally{continue}\" must work correctly'";
__n208 := [ __n209 ];
__n206["arguments"] := __n208;
__n205["expression"] := __n206;
__n204 := [ __n205 ];
__n203["body"] := __n204;
__n199["consequent"] := __n203;
__n199["alternate"] := null;
__n210 := {  };
__n210["type"] := "VariableDeclaration";
__n212 := {  };
__n212["type"] := "VariableDeclarator";
__n213 := {  };
__n213["type"] := "Identifier";
__n213["name"] := "fin";
__n212["id"] := __n213;
__n214 := {  };
__n214["type"] := "Literal";
__n214["value"] := 0.;
__n214["raw"] := "0";
__n212["init"] := __n214;
__n211 := [ __n212 ];
__n210["declarations"] := __n211;
__n210["kind"] := "var";
__n215 := {  };
__n215["type"] := "ForInStatement";
__n216 := {  };
__n216["type"] := "Identifier";
__n216["name"] := "x";
__n215["left"] := __n216;
__n217 := {  };
__n217["type"] := "Identifier";
__n217["name"] := "mycars";
__n215["right"] := __n217;
__n218 := {  };
__n218["type"] := "BlockStatement";
__n220 := {  };
__n220["type"] := "TryStatement";
__n221 := {  };
__n221["type"] := "BlockStatement";
__n223 := {  };
__n223["type"] := "ContinueStatement";
__n223["label"] := null;
__n222 := [ __n223 ];
__n221["body"] := __n222;
__n220["block"] := __n221;
__n220["handler"] := null;
__n224 := {  };
__n224["type"] := "BlockStatement";
__n226 := {  };
__n226["type"] := "ExpressionStatement";
__n227 := {  };
__n227["type"] := "AssignmentExpression";
__n227["operator"] := "=";
__n228 := {  };
__n228["type"] := "Identifier";
__n228["name"] := "fin";
__n227["left"] := __n228;
__n229 := {  };
__n229["type"] := "Literal";
__n229["value"] := 1.;
__n229["raw"] := "1";
__n227["right"] := __n229;
__n226["expression"] := __n227;
__n225 := [ __n226 ];
__n224["body"] := __n225;
__n220["finalizer"] := __n224;
__n230 := {  };
__n230["type"] := "ExpressionStatement";
__n231 := {  };
__n231["type"] := "AssignmentExpression";
__n231["operator"] := "=";
__n232 := {  };
__n232["type"] := "Identifier";
__n232["name"] := "fin";
__n231["left"] := __n232;
__n233 := {  };
__n233["type"] := "UnaryExpression";
__n233["operator"] := "-";
__n234 := {  };
__n234["type"] := "Literal";
__n234["value"] := 1.;
__n234["raw"] := "1";
__n233["argument"] := __n234;
__n233["prefix"] := true;
__n231["right"] := __n233;
__n230["expression"] := __n231;
__n219 := [ __n220, __n230 ];
__n218["body"] := __n219;
__n215["body"] := __n218;
__n215["each"] := false;
__n235 := {  };
__n235["type"] := "IfStatement";
__n236 := {  };
__n236["type"] := "BinaryExpression";
__n236["operator"] := "!==";
__n237 := {  };
__n237["type"] := "Identifier";
__n237["name"] := "fin";
__n236["left"] := __n237;
__n238 := {  };
__n238["type"] := "Literal";
__n238["value"] := 1.;
__n238["raw"] := "1";
__n236["right"] := __n238;
__n235["test"] := __n236;
__n239 := {  };
__n239["type"] := "BlockStatement";
__n241 := {  };
__n241["type"] := "ExpressionStatement";
__n242 := {  };
__n242["type"] := "CallExpression";
__n243 := {  };
__n243["type"] := "Identifier";
__n243["name"] := "$ERROR";
__n242["callee"] := __n243;
__n245 := {  };
__n245["type"] := "Literal";
__n245["value"] := "#4: \"finally\" block must be evaluated at \"try{continue} finally\" construction";
__n245["raw"] := "'#4: \"finally\" block must be evaluated at \"try{continue} finally\" construction'";
__n244 := [ __n245 ];
__n242["arguments"] := __n244;
__n241["expression"] := __n242;
__n240 := [ __n241 ];
__n239["body"] := __n240;
__n235["consequent"] := __n239;
__n235["alternate"] := null;
__n246 := {  };
__n246["type"] := "VariableDeclaration";
__n248 := {  };
__n248["type"] := "VariableDeclarator";
__n249 := {  };
__n249["type"] := "Identifier";
__n249["name"] := "c5";
__n248["id"] := __n249;
__n250 := {  };
__n250["type"] := "Literal";
__n250["value"] := 0.;
__n250["raw"] := "0";
__n248["init"] := __n250;
__n247 := [ __n248 ];
__n246["declarations"] := __n247;
__n246["kind"] := "var";
__n251 := {  };
__n251["type"] := "ForInStatement";
__n252 := {  };
__n252["type"] := "Identifier";
__n252["name"] := "x";
__n251["left"] := __n252;
__n253 := {  };
__n253["type"] := "Identifier";
__n253["name"] := "mycars";
__n251["right"] := __n253;
__n254 := {  };
__n254["type"] := "BlockStatement";
__n256 := {  };
__n256["type"] := "TryStatement";
__n257 := {  };
__n257["type"] := "BlockStatement";
__n259 := {  };
__n259["type"] := "ThrowStatement";
__n260 := {  };
__n260["type"] := "Literal";
__n260["value"] := "ex1";
__n260["raw"] := "\"ex1\"";
__n259["argument"] := __n260;
__n258 := [ __n259 ];
__n257["body"] := __n258;
__n256["block"] := __n257;
__n261 := {  };
__n261["type"] := "CatchClause";
__n262 := {  };
__n262["type"] := "Identifier";
__n262["name"] := "er1";
__n261["param"] := __n262;
__n263 := {  };
__n263["type"] := "BlockStatement";
__n265 := {  };
__n265["type"] := "ExpressionStatement";
__n266 := {  };
__n266["type"] := "AssignmentExpression";
__n266["operator"] := "+=";
__n267 := {  };
__n267["type"] := "Identifier";
__n267["name"] := "c5";
__n266["left"] := __n267;
__n268 := {  };
__n268["type"] := "Literal";
__n268["value"] := 1.;
__n268["raw"] := "1";
__n266["right"] := __n268;
__n265["expression"] := __n266;
__n269 := {  };
__n269["type"] := "ContinueStatement";
__n269["label"] := null;
__n264 := [ __n265, __n269 ];
__n263["body"] := __n264;
__n261["body"] := __n263;
__n256["handler"] := __n261;
__n256["finalizer"] := null;
__n270 := {  };
__n270["type"] := "ExpressionStatement";
__n271 := {  };
__n271["type"] := "AssignmentExpression";
__n271["operator"] := "+=";
__n272 := {  };
__n272["type"] := "Identifier";
__n272["name"] := "c5";
__n271["left"] := __n272;
__n273 := {  };
__n273["type"] := "Literal";
__n273["value"] := 12.;
__n273["raw"] := "12";
__n271["right"] := __n273;
__n270["expression"] := __n271;
__n255 := [ __n256, __n270 ];
__n254["body"] := __n255;
__n251["body"] := __n254;
__n251["each"] := false;
__n274 := {  };
__n274["type"] := "IfStatement";
__n275 := {  };
__n275["type"] := "BinaryExpression";
__n275["operator"] := "!==";
__n276 := {  };
__n276["type"] := "Identifier";
__n276["name"] := "c5";
__n275["left"] := __n276;
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := 3.;
__n277["raw"] := "3";
__n275["right"] := __n277;
__n274["test"] := __n275;
__n278 := {  };
__n278["type"] := "BlockStatement";
__n280 := {  };
__n280["type"] := "ExpressionStatement";
__n281 := {  };
__n281["type"] := "CallExpression";
__n282 := {  };
__n282["type"] := "Identifier";
__n282["name"] := "$ERROR";
__n281["callee"] := __n282;
__n284 := {  };
__n284["type"] := "Literal";
__n284["value"] := "#5: \"try catch{continue}\" must work correctly";
__n284["raw"] := "'#5: \"try catch{continue}\" must work correctly'";
__n283 := [ __n284 ];
__n281["arguments"] := __n283;
__n280["expression"] := __n281;
__n279 := [ __n280 ];
__n278["body"] := __n279;
__n274["consequent"] := __n278;
__n274["alternate"] := null;
__n285 := {  };
__n285["type"] := "VariableDeclaration";
__n287 := {  };
__n287["type"] := "VariableDeclarator";
__n288 := {  };
__n288["type"] := "Identifier";
__n288["name"] := "c6";
__n287["id"] := __n288;
__n289 := {  };
__n289["type"] := "Literal";
__n289["value"] := 0.;
__n289["raw"] := "0";
__n287["init"] := __n289;
__n290 := {  };
__n290["type"] := "VariableDeclarator";
__n291 := {  };
__n291["type"] := "Identifier";
__n291["name"] := "fin6";
__n290["id"] := __n291;
__n292 := {  };
__n292["type"] := "Literal";
__n292["value"] := 0.;
__n292["raw"] := "0";
__n290["init"] := __n292;
__n286 := [ __n287, __n290 ];
__n285["declarations"] := __n286;
__n285["kind"] := "var";
__n293 := {  };
__n293["type"] := "ForInStatement";
__n294 := {  };
__n294["type"] := "Identifier";
__n294["name"] := "x";
__n293["left"] := __n294;
__n295 := {  };
__n295["type"] := "Identifier";
__n295["name"] := "mycars";
__n293["right"] := __n295;
__n296 := {  };
__n296["type"] := "BlockStatement";
__n298 := {  };
__n298["type"] := "TryStatement";
__n299 := {  };
__n299["type"] := "BlockStatement";
__n301 := {  };
__n301["type"] := "ExpressionStatement";
__n302 := {  };
__n302["type"] := "AssignmentExpression";
__n302["operator"] := "+=";
__n303 := {  };
__n303["type"] := "Identifier";
__n303["name"] := "c6";
__n302["left"] := __n303;
__n304 := {  };
__n304["type"] := "Literal";
__n304["value"] := 1.;
__n304["raw"] := "1";
__n302["right"] := __n304;
__n301["expression"] := __n302;
__n305 := {  };
__n305["type"] := "ThrowStatement";
__n306 := {  };
__n306["type"] := "Literal";
__n306["value"] := "ex1";
__n306["raw"] := "\"ex1\"";
__n305["argument"] := __n306;
__n300 := [ __n301, __n305 ];
__n299["body"] := __n300;
__n298["block"] := __n299;
__n298["handler"] := null;
__n307 := {  };
__n307["type"] := "BlockStatement";
__n309 := {  };
__n309["type"] := "ExpressionStatement";
__n310 := {  };
__n310["type"] := "AssignmentExpression";
__n310["operator"] := "=";
__n311 := {  };
__n311["type"] := "Identifier";
__n311["name"] := "fin6";
__n310["left"] := __n311;
__n312 := {  };
__n312["type"] := "Literal";
__n312["value"] := 1.;
__n312["raw"] := "1";
__n310["right"] := __n312;
__n309["expression"] := __n310;
__n313 := {  };
__n313["type"] := "ContinueStatement";
__n313["label"] := null;
__n308 := [ __n309, __n313 ];
__n307["body"] := __n308;
__n298["finalizer"] := __n307;
__n314 := {  };
__n314["type"] := "ExpressionStatement";
__n315 := {  };
__n315["type"] := "AssignmentExpression";
__n315["operator"] := "=";
__n316 := {  };
__n316["type"] := "Identifier";
__n316["name"] := "fin6";
__n315["left"] := __n316;
__n317 := {  };
__n317["type"] := "UnaryExpression";
__n317["operator"] := "-";
__n318 := {  };
__n318["type"] := "Literal";
__n318["value"] := 1.;
__n318["raw"] := "1";
__n317["argument"] := __n318;
__n317["prefix"] := true;
__n315["right"] := __n317;
__n314["expression"] := __n315;
__n297 := [ __n298, __n314 ];
__n296["body"] := __n297;
__n293["body"] := __n296;
__n293["each"] := false;
__n319 := {  };
__n319["type"] := "IfStatement";
__n320 := {  };
__n320["type"] := "BinaryExpression";
__n320["operator"] := "!==";
__n321 := {  };
__n321["type"] := "Identifier";
__n321["name"] := "fin6";
__n320["left"] := __n321;
__n322 := {  };
__n322["type"] := "Literal";
__n322["value"] := 1.;
__n322["raw"] := "1";
__n320["right"] := __n322;
__n319["test"] := __n320;
__n323 := {  };
__n323["type"] := "BlockStatement";
__n325 := {  };
__n325["type"] := "ExpressionStatement";
__n326 := {  };
__n326["type"] := "CallExpression";
__n327 := {  };
__n327["type"] := "Identifier";
__n327["name"] := "$ERROR";
__n326["callee"] := __n327;
__n329 := {  };
__n329["type"] := "Literal";
__n329["value"] := "#6.1: \"finally\" block must be evaluated";
__n329["raw"] := "'#6.1: \"finally\" block must be evaluated'";
__n328 := [ __n329 ];
__n326["arguments"] := __n328;
__n325["expression"] := __n326;
__n324 := [ __n325 ];
__n323["body"] := __n324;
__n319["consequent"] := __n323;
__n319["alternate"] := null;
__n330 := {  };
__n330["type"] := "IfStatement";
__n331 := {  };
__n331["type"] := "BinaryExpression";
__n331["operator"] := "!==";
__n332 := {  };
__n332["type"] := "Identifier";
__n332["name"] := "c6";
__n331["left"] := __n332;
__n333 := {  };
__n333["type"] := "Literal";
__n333["value"] := 3.;
__n333["raw"] := "3";
__n331["right"] := __n333;
__n330["test"] := __n331;
__n334 := {  };
__n334["type"] := "BlockStatement";
__n336 := {  };
__n336["type"] := "ExpressionStatement";
__n337 := {  };
__n337["type"] := "CallExpression";
__n338 := {  };
__n338["type"] := "Identifier";
__n338["name"] := "$ERROR";
__n337["callee"] := __n338;
__n340 := {  };
__n340["type"] := "Literal";
__n340["value"] := "#6.2: \"try finally{continue}\" must work correctly";
__n340["raw"] := "'#6.2: \"try finally{continue}\" must work correctly'";
__n339 := [ __n340 ];
__n337["arguments"] := __n339;
__n336["expression"] := __n337;
__n335 := [ __n336 ];
__n334["body"] := __n335;
__n330["consequent"] := __n334;
__n330["alternate"] := null;
__n1 := [ __n2, __n6, __n13, __n19, __n25, __n31, __n36, __n41, __n69, __n80, __n91, __n99, __n129, __n140, __n151, __n159, __n188, __n199, __n210, __n215, __n235, __n246, __n251, __n274, __n285, __n293, __n319, __n330 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n341 := [ "x", "mycars", "fin", "i", "c2", "fin2", "c3", "fin3", "c5", "c6", "fin6" ];
__n0["variableDeclarations"] := __n341;
__n342 := [  ];
__n0["functionDeclarations"] := __n342;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}