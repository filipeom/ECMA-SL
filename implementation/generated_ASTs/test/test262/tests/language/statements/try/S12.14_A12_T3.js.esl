function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "mycars";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "NewExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Array";
__n10["callee"] := __n11;
__n12 := [  ];
__n10["arguments"] := __n12;
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "AssignmentExpression";
__n14["operator"] := "=";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n15["computed"] := true;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "mycars";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n15["property"] := __n17;
__n14["left"] := __n15;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "Saab";
__n18["raw"] := "\"Saab\"";
__n14["right"] := __n18;
__n13["expression"] := __n14;
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "AssignmentExpression";
__n20["operator"] := "=";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n21["computed"] := true;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "mycars";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 1.;
__n23["raw"] := "1";
__n21["property"] := __n23;
__n20["left"] := __n21;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "Volvo";
__n24["raw"] := "\"Volvo\"";
__n20["right"] := __n24;
__n19["expression"] := __n20;
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "AssignmentExpression";
__n26["operator"] := "=";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n27["computed"] := true;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "mycars";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 2.;
__n29["raw"] := "2";
__n27["property"] := __n29;
__n26["left"] := __n27;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "BMW";
__n30["raw"] := "\"BMW\"";
__n26["right"] := __n30;
__n25["expression"] := __n26;
__n31 := {  };
__n31["type"] := "VariableDeclaration";
__n33 := {  };
__n33["type"] := "VariableDeclarator";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "c1";
__n33["id"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 0.;
__n35["raw"] := "0";
__n33["init"] := __n35;
__n36 := {  };
__n36["type"] := "VariableDeclarator";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "fin";
__n36["id"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 0.;
__n38["raw"] := "0";
__n36["init"] := __n38;
__n32 := [ __n33, __n36 ];
__n31["declarations"] := __n32;
__n31["kind"] := "var";
__n39 := {  };
__n39["type"] := "ForInStatement";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "x";
__n39["left"] := __n40;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "mycars";
__n39["right"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "TryStatement";
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "AssignmentExpression";
__n48["operator"] := "+=";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "c1";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 1.;
__n50["raw"] := "1";
__n48["right"] := __n50;
__n47["expression"] := __n48;
__n51 := {  };
__n51["type"] := "BreakStatement";
__n51["label"] := null;
__n46 := [ __n47, __n51 ];
__n45["body"] := __n46;
__n44["block"] := __n45;
__n52 := {  };
__n52["type"] := "CatchClause";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "er1";
__n52["param"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "AssignmentExpression";
__n57["operator"] := "+=";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "c1";
__n57["left"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 1.;
__n59["raw"] := "1";
__n57["right"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n52["body"] := __n54;
__n44["handler"] := __n52;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "AssignmentExpression";
__n63["operator"] := "=";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "fin";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 1.;
__n65["raw"] := "1";
__n63["right"] := __n65;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n44["finalizer"] := __n60;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "AssignmentExpression";
__n67["operator"] := "=";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "fin";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "UnaryExpression";
__n69["operator"] := "-";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 1.;
__n70["raw"] := "1";
__n69["argument"] := __n70;
__n69["prefix"] := true;
__n67["right"] := __n69;
__n66["expression"] := __n67;
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "AssignmentExpression";
__n72["operator"] := "+=";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "c1";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 2.;
__n74["raw"] := "2";
__n72["right"] := __n74;
__n71["expression"] := __n72;
__n43 := [ __n44, __n66, __n71 ];
__n42["body"] := __n43;
__n39["body"] := __n42;
__n39["each"] := false;
__n75 := {  };
__n75["type"] := "EmptyStatement";
__n76 := {  };
__n76["type"] := "IfStatement";
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "!==";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "fin";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 1.;
__n79["raw"] := "1";
__n77["right"] := __n79;
__n76["test"] := __n77;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "#1.1: \"finally\" block must be evaluated";
__n86["raw"] := "'#1.1: \"finally\" block must be evaluated'";
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n76["consequent"] := __n80;
__n76["alternate"] := null;
__n87 := {  };
__n87["type"] := "IfStatement";
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "!==";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "c1";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 1.;
__n90["raw"] := "1";
__n88["right"] := __n90;
__n87["test"] := __n88;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "#1.2: \"try{break}catch finally\" must work correctly";
__n97["raw"] := "'#1.2: \"try{break}catch finally\" must work correctly'";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n87["consequent"] := __n91;
__n87["alternate"] := null;
__n98 := {  };
__n98["type"] := "VariableDeclaration";
__n100 := {  };
__n100["type"] := "VariableDeclarator";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "c2";
__n100["id"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 0.;
__n102["raw"] := "0";
__n100["init"] := __n102;
__n103 := {  };
__n103["type"] := "VariableDeclarator";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "fin2";
__n103["id"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 0.;
__n105["raw"] := "0";
__n103["init"] := __n105;
__n99 := [ __n100, __n103 ];
__n98["declarations"] := __n99;
__n98["kind"] := "var";
__n106 := {  };
__n106["type"] := "ForInStatement";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "x";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "mycars";
__n106["right"] := __n108;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "TryStatement";
__n112 := {  };
__n112["type"] := "BlockStatement";
__n114 := {  };
__n114["type"] := "ThrowStatement";
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "ex1";
__n115["raw"] := "\"ex1\"";
__n114["argument"] := __n115;
__n113 := [ __n114 ];
__n112["body"] := __n113;
__n111["block"] := __n112;
__n116 := {  };
__n116["type"] := "CatchClause";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "er1";
__n116["param"] := __n117;
__n118 := {  };
__n118["type"] := "BlockStatement";
__n120 := {  };
__n120["type"] := "ExpressionStatement";
__n121 := {  };
__n121["type"] := "AssignmentExpression";
__n121["operator"] := "+=";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "c2";
__n121["left"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 1.;
__n123["raw"] := "1";
__n121["right"] := __n123;
__n120["expression"] := __n121;
__n124 := {  };
__n124["type"] := "BreakStatement";
__n124["label"] := null;
__n119 := [ __n120, __n124 ];
__n118["body"] := __n119;
__n116["body"] := __n118;
__n111["handler"] := __n116;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "AssignmentExpression";
__n128["operator"] := "=";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "fin2";
__n128["left"] := __n129;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := 1.;
__n130["raw"] := "1";
__n128["right"] := __n130;
__n127["expression"] := __n128;
__n126 := [ __n127 ];
__n125["body"] := __n126;
__n111["finalizer"] := __n125;
__n131 := {  };
__n131["type"] := "ExpressionStatement";
__n132 := {  };
__n132["type"] := "AssignmentExpression";
__n132["operator"] := "+=";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "c2";
__n132["left"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 2.;
__n134["raw"] := "2";
__n132["right"] := __n134;
__n131["expression"] := __n132;
__n135 := {  };
__n135["type"] := "ExpressionStatement";
__n136 := {  };
__n136["type"] := "AssignmentExpression";
__n136["operator"] := "=";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "fin2";
__n136["left"] := __n137;
__n138 := {  };
__n138["type"] := "UnaryExpression";
__n138["operator"] := "-";
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := 1.;
__n139["raw"] := "1";
__n138["argument"] := __n139;
__n138["prefix"] := true;
__n136["right"] := __n138;
__n135["expression"] := __n136;
__n110 := [ __n111, __n131, __n135 ];
__n109["body"] := __n110;
__n106["body"] := __n109;
__n106["each"] := false;
__n140 := {  };
__n140["type"] := "IfStatement";
__n141 := {  };
__n141["type"] := "BinaryExpression";
__n141["operator"] := "!==";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "fin2";
__n141["left"] := __n142;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := 1.;
__n143["raw"] := "1";
__n141["right"] := __n143;
__n140["test"] := __n141;
__n144 := {  };
__n144["type"] := "BlockStatement";
__n146 := {  };
__n146["type"] := "ExpressionStatement";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "$ERROR";
__n147["callee"] := __n148;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "#2.1: \"finally\" block must be evaluated";
__n150["raw"] := "'#2.1: \"finally\" block must be evaluated'";
__n149 := [ __n150 ];
__n147["arguments"] := __n149;
__n146["expression"] := __n147;
__n145 := [ __n146 ];
__n144["body"] := __n145;
__n140["consequent"] := __n144;
__n140["alternate"] := null;
__n151 := {  };
__n151["type"] := "IfStatement";
__n152 := {  };
__n152["type"] := "BinaryExpression";
__n152["operator"] := "!==";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "c2";
__n152["left"] := __n153;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := 1.;
__n154["raw"] := "1";
__n152["right"] := __n154;
__n151["test"] := __n152;
__n155 := {  };
__n155["type"] := "BlockStatement";
__n157 := {  };
__n157["type"] := "ExpressionStatement";
__n158 := {  };
__n158["type"] := "CallExpression";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "$ERROR";
__n158["callee"] := __n159;
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := "#2.2: \"try catch{break} finally\" must work correctly";
__n161["raw"] := "'#2.2: \"try catch{break} finally\" must work correctly'";
__n160 := [ __n161 ];
__n158["arguments"] := __n160;
__n157["expression"] := __n158;
__n156 := [ __n157 ];
__n155["body"] := __n156;
__n151["consequent"] := __n155;
__n151["alternate"] := null;
__n162 := {  };
__n162["type"] := "VariableDeclaration";
__n164 := {  };
__n164["type"] := "VariableDeclarator";
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "c3";
__n164["id"] := __n165;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := 0.;
__n166["raw"] := "0";
__n164["init"] := __n166;
__n167 := {  };
__n167["type"] := "VariableDeclarator";
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "fin3";
__n167["id"] := __n168;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := 0.;
__n169["raw"] := "0";
__n167["init"] := __n169;
__n163 := [ __n164, __n167 ];
__n162["declarations"] := __n163;
__n162["kind"] := "var";
__n170 := {  };
__n170["type"] := "ForInStatement";
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "x";
__n170["left"] := __n171;
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "mycars";
__n170["right"] := __n172;
__n173 := {  };
__n173["type"] := "BlockStatement";
__n175 := {  };
__n175["type"] := "TryStatement";
__n176 := {  };
__n176["type"] := "BlockStatement";
__n178 := {  };
__n178["type"] := "ThrowStatement";
__n179 := {  };
__n179["type"] := "Literal";
__n179["value"] := "ex1";
__n179["raw"] := "\"ex1\"";
__n178["argument"] := __n179;
__n177 := [ __n178 ];
__n176["body"] := __n177;
__n175["block"] := __n176;
__n180 := {  };
__n180["type"] := "CatchClause";
__n181 := {  };
__n181["type"] := "Identifier";
__n181["name"] := "er1";
__n180["param"] := __n181;
__n182 := {  };
__n182["type"] := "BlockStatement";
__n184 := {  };
__n184["type"] := "ExpressionStatement";
__n185 := {  };
__n185["type"] := "AssignmentExpression";
__n185["operator"] := "+=";
__n186 := {  };
__n186["type"] := "Identifier";
__n186["name"] := "c3";
__n185["left"] := __n186;
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := 1.;
__n187["raw"] := "1";
__n185["right"] := __n187;
__n184["expression"] := __n185;
__n183 := [ __n184 ];
__n182["body"] := __n183;
__n180["body"] := __n182;
__n175["handler"] := __n180;
__n188 := {  };
__n188["type"] := "BlockStatement";
__n190 := {  };
__n190["type"] := "ExpressionStatement";
__n191 := {  };
__n191["type"] := "AssignmentExpression";
__n191["operator"] := "=";
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "fin3";
__n191["left"] := __n192;
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := 1.;
__n193["raw"] := "1";
__n191["right"] := __n193;
__n190["expression"] := __n191;
__n194 := {  };
__n194["type"] := "BreakStatement";
__n194["label"] := null;
__n189 := [ __n190, __n194 ];
__n188["body"] := __n189;
__n175["finalizer"] := __n188;
__n195 := {  };
__n195["type"] := "ExpressionStatement";
__n196 := {  };
__n196["type"] := "AssignmentExpression";
__n196["operator"] := "+=";
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "c3";
__n196["left"] := __n197;
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := 2.;
__n198["raw"] := "2";
__n196["right"] := __n198;
__n195["expression"] := __n196;
__n199 := {  };
__n199["type"] := "ExpressionStatement";
__n200 := {  };
__n200["type"] := "AssignmentExpression";
__n200["operator"] := "=";
__n201 := {  };
__n201["type"] := "Identifier";
__n201["name"] := "fin3";
__n200["left"] := __n201;
__n202 := {  };
__n202["type"] := "Literal";
__n202["value"] := 0.;
__n202["raw"] := "0";
__n200["right"] := __n202;
__n199["expression"] := __n200;
__n174 := [ __n175, __n195, __n199 ];
__n173["body"] := __n174;
__n170["body"] := __n173;
__n170["each"] := false;
__n203 := {  };
__n203["type"] := "IfStatement";
__n204 := {  };
__n204["type"] := "BinaryExpression";
__n204["operator"] := "!==";
__n205 := {  };
__n205["type"] := "Identifier";
__n205["name"] := "fin3";
__n204["left"] := __n205;
__n206 := {  };
__n206["type"] := "Literal";
__n206["value"] := 1.;
__n206["raw"] := "1";
__n204["right"] := __n206;
__n203["test"] := __n204;
__n207 := {  };
__n207["type"] := "BlockStatement";
__n209 := {  };
__n209["type"] := "ExpressionStatement";
__n210 := {  };
__n210["type"] := "CallExpression";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "$ERROR";
__n210["callee"] := __n211;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := "#3.1: \"finally\" block must be evaluated";
__n213["raw"] := "'#3.1: \"finally\" block must be evaluated'";
__n212 := [ __n213 ];
__n210["arguments"] := __n212;
__n209["expression"] := __n210;
__n208 := [ __n209 ];
__n207["body"] := __n208;
__n203["consequent"] := __n207;
__n203["alternate"] := null;
__n214 := {  };
__n214["type"] := "IfStatement";
__n215 := {  };
__n215["type"] := "BinaryExpression";
__n215["operator"] := "!==";
__n216 := {  };
__n216["type"] := "Identifier";
__n216["name"] := "c3";
__n215["left"] := __n216;
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := 1.;
__n217["raw"] := "1";
__n215["right"] := __n217;
__n214["test"] := __n215;
__n218 := {  };
__n218["type"] := "BlockStatement";
__n220 := {  };
__n220["type"] := "ExpressionStatement";
__n221 := {  };
__n221["type"] := "CallExpression";
__n222 := {  };
__n222["type"] := "Identifier";
__n222["name"] := "$ERROR";
__n221["callee"] := __n222;
__n224 := {  };
__n224["type"] := "Literal";
__n224["value"] := "#3.2: \"try catch finally{break}\" must work correctly";
__n224["raw"] := "'#3.2: \"try catch finally{break}\" must work correctly'";
__n223 := [ __n224 ];
__n221["arguments"] := __n223;
__n220["expression"] := __n221;
__n219 := [ __n220 ];
__n218["body"] := __n219;
__n214["consequent"] := __n218;
__n214["alternate"] := null;
__n225 := {  };
__n225["type"] := "VariableDeclaration";
__n227 := {  };
__n227["type"] := "VariableDeclarator";
__n228 := {  };
__n228["type"] := "Identifier";
__n228["name"] := "c4";
__n227["id"] := __n228;
__n229 := {  };
__n229["type"] := "Literal";
__n229["value"] := 0.;
__n229["raw"] := "0";
__n227["init"] := __n229;
__n230 := {  };
__n230["type"] := "VariableDeclarator";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "fin4";
__n230["id"] := __n231;
__n232 := {  };
__n232["type"] := "Literal";
__n232["value"] := 0.;
__n232["raw"] := "0";
__n230["init"] := __n232;
__n226 := [ __n227, __n230 ];
__n225["declarations"] := __n226;
__n225["kind"] := "var";
__n233 := {  };
__n233["type"] := "ForInStatement";
__n234 := {  };
__n234["type"] := "Identifier";
__n234["name"] := "x";
__n233["left"] := __n234;
__n235 := {  };
__n235["type"] := "Identifier";
__n235["name"] := "mycars";
__n233["right"] := __n235;
__n236 := {  };
__n236["type"] := "BlockStatement";
__n238 := {  };
__n238["type"] := "TryStatement";
__n239 := {  };
__n239["type"] := "BlockStatement";
__n241 := {  };
__n241["type"] := "ExpressionStatement";
__n242 := {  };
__n242["type"] := "AssignmentExpression";
__n242["operator"] := "+=";
__n243 := {  };
__n243["type"] := "Identifier";
__n243["name"] := "c4";
__n242["left"] := __n243;
__n244 := {  };
__n244["type"] := "Literal";
__n244["value"] := 1.;
__n244["raw"] := "1";
__n242["right"] := __n244;
__n241["expression"] := __n242;
__n245 := {  };
__n245["type"] := "BreakStatement";
__n245["label"] := null;
__n240 := [ __n241, __n245 ];
__n239["body"] := __n240;
__n238["block"] := __n239;
__n238["handler"] := null;
__n246 := {  };
__n246["type"] := "BlockStatement";
__n248 := {  };
__n248["type"] := "ExpressionStatement";
__n249 := {  };
__n249["type"] := "AssignmentExpression";
__n249["operator"] := "=";
__n250 := {  };
__n250["type"] := "Identifier";
__n250["name"] := "fin4";
__n249["left"] := __n250;
__n251 := {  };
__n251["type"] := "Literal";
__n251["value"] := 1.;
__n251["raw"] := "1";
__n249["right"] := __n251;
__n248["expression"] := __n249;
__n247 := [ __n248 ];
__n246["body"] := __n247;
__n238["finalizer"] := __n246;
__n252 := {  };
__n252["type"] := "ExpressionStatement";
__n253 := {  };
__n253["type"] := "AssignmentExpression";
__n253["operator"] := "=";
__n254 := {  };
__n254["type"] := "Identifier";
__n254["name"] := "fin4";
__n253["left"] := __n254;
__n255 := {  };
__n255["type"] := "UnaryExpression";
__n255["operator"] := "-";
__n256 := {  };
__n256["type"] := "Literal";
__n256["value"] := 1.;
__n256["raw"] := "1";
__n255["argument"] := __n256;
__n255["prefix"] := true;
__n253["right"] := __n255;
__n252["expression"] := __n253;
__n257 := {  };
__n257["type"] := "ExpressionStatement";
__n258 := {  };
__n258["type"] := "AssignmentExpression";
__n258["operator"] := "+=";
__n259 := {  };
__n259["type"] := "Identifier";
__n259["name"] := "c4";
__n258["left"] := __n259;
__n260 := {  };
__n260["type"] := "Literal";
__n260["value"] := 2.;
__n260["raw"] := "2";
__n258["right"] := __n260;
__n257["expression"] := __n258;
__n237 := [ __n238, __n252, __n257 ];
__n236["body"] := __n237;
__n233["body"] := __n236;
__n233["each"] := false;
__n261 := {  };
__n261["type"] := "IfStatement";
__n262 := {  };
__n262["type"] := "BinaryExpression";
__n262["operator"] := "!==";
__n263 := {  };
__n263["type"] := "Identifier";
__n263["name"] := "fin4";
__n262["left"] := __n263;
__n264 := {  };
__n264["type"] := "Literal";
__n264["value"] := 1.;
__n264["raw"] := "1";
__n262["right"] := __n264;
__n261["test"] := __n262;
__n265 := {  };
__n265["type"] := "BlockStatement";
__n267 := {  };
__n267["type"] := "ExpressionStatement";
__n268 := {  };
__n268["type"] := "CallExpression";
__n269 := {  };
__n269["type"] := "Identifier";
__n269["name"] := "$ERROR";
__n268["callee"] := __n269;
__n271 := {  };
__n271["type"] := "Literal";
__n271["value"] := "#4.1: \"finally\" block must be evaluated";
__n271["raw"] := "'#4.1: \"finally\" block must be evaluated'";
__n270 := [ __n271 ];
__n268["arguments"] := __n270;
__n267["expression"] := __n268;
__n266 := [ __n267 ];
__n265["body"] := __n266;
__n261["consequent"] := __n265;
__n261["alternate"] := null;
__n272 := {  };
__n272["type"] := "IfStatement";
__n273 := {  };
__n273["type"] := "BinaryExpression";
__n273["operator"] := "!==";
__n274 := {  };
__n274["type"] := "Identifier";
__n274["name"] := "c4";
__n273["left"] := __n274;
__n275 := {  };
__n275["type"] := "Literal";
__n275["value"] := 1.;
__n275["raw"] := "1";
__n273["right"] := __n275;
__n272["test"] := __n273;
__n276 := {  };
__n276["type"] := "BlockStatement";
__n278 := {  };
__n278["type"] := "ExpressionStatement";
__n279 := {  };
__n279["type"] := "CallExpression";
__n280 := {  };
__n280["type"] := "Identifier";
__n280["name"] := "$ERROR";
__n279["callee"] := __n280;
__n282 := {  };
__n282["type"] := "Literal";
__n282["value"] := "#4.2: \"try{break} finally\" must work correctly";
__n282["raw"] := "'#4.2: \"try{break} finally\" must work correctly'";
__n281 := [ __n282 ];
__n279["arguments"] := __n281;
__n278["expression"] := __n279;
__n277 := [ __n278 ];
__n276["body"] := __n277;
__n272["consequent"] := __n276;
__n272["alternate"] := null;
__n283 := {  };
__n283["type"] := "VariableDeclaration";
__n285 := {  };
__n285["type"] := "VariableDeclarator";
__n286 := {  };
__n286["type"] := "Identifier";
__n286["name"] := "c5";
__n285["id"] := __n286;
__n287 := {  };
__n287["type"] := "Literal";
__n287["value"] := 0.;
__n287["raw"] := "0";
__n285["init"] := __n287;
__n284 := [ __n285 ];
__n283["declarations"] := __n284;
__n283["kind"] := "var";
__n288 := {  };
__n288["type"] := "ForInStatement";
__n289 := {  };
__n289["type"] := "Identifier";
__n289["name"] := "x";
__n288["left"] := __n289;
__n290 := {  };
__n290["type"] := "Identifier";
__n290["name"] := "mycars";
__n288["right"] := __n290;
__n291 := {  };
__n291["type"] := "BlockStatement";
__n293 := {  };
__n293["type"] := "TryStatement";
__n294 := {  };
__n294["type"] := "BlockStatement";
__n296 := {  };
__n296["type"] := "ThrowStatement";
__n297 := {  };
__n297["type"] := "Literal";
__n297["value"] := "ex1";
__n297["raw"] := "\"ex1\"";
__n296["argument"] := __n297;
__n298 := {  };
__n298["type"] := "ExpressionStatement";
__n299 := {  };
__n299["type"] := "UpdateExpression";
__n299["operator"] := "++";
__n300 := {  };
__n300["type"] := "Identifier";
__n300["name"] := "c5";
__n299["argument"] := __n300;
__n299["prefix"] := false;
__n298["expression"] := __n299;
__n295 := [ __n296, __n298 ];
__n294["body"] := __n295;
__n293["block"] := __n294;
__n301 := {  };
__n301["type"] := "CatchClause";
__n302 := {  };
__n302["type"] := "Identifier";
__n302["name"] := "er1";
__n301["param"] := __n302;
__n303 := {  };
__n303["type"] := "BlockStatement";
__n305 := {  };
__n305["type"] := "BreakStatement";
__n305["label"] := null;
__n306 := {  };
__n306["type"] := "ExpressionStatement";
__n307 := {  };
__n307["type"] := "UpdateExpression";
__n307["operator"] := "++";
__n308 := {  };
__n308["type"] := "Identifier";
__n308["name"] := "c5";
__n307["argument"] := __n308;
__n307["prefix"] := false;
__n306["expression"] := __n307;
__n304 := [ __n305, __n306 ];
__n303["body"] := __n304;
__n301["body"] := __n303;
__n293["handler"] := __n301;
__n293["finalizer"] := null;
__n309 := {  };
__n309["type"] := "ExpressionStatement";
__n310 := {  };
__n310["type"] := "UpdateExpression";
__n310["operator"] := "++";
__n311 := {  };
__n311["type"] := "Identifier";
__n311["name"] := "c5";
__n310["argument"] := __n311;
__n310["prefix"] := false;
__n309["expression"] := __n310;
__n292 := [ __n293, __n309 ];
__n291["body"] := __n292;
__n288["body"] := __n291;
__n288["each"] := false;
__n312 := {  };
__n312["type"] := "IfStatement";
__n313 := {  };
__n313["type"] := "BinaryExpression";
__n313["operator"] := "!==";
__n314 := {  };
__n314["type"] := "Identifier";
__n314["name"] := "c5";
__n313["left"] := __n314;
__n315 := {  };
__n315["type"] := "Literal";
__n315["value"] := 0.;
__n315["raw"] := "0";
__n313["right"] := __n315;
__n312["test"] := __n313;
__n316 := {  };
__n316["type"] := "BlockStatement";
__n318 := {  };
__n318["type"] := "ExpressionStatement";
__n319 := {  };
__n319["type"] := "CallExpression";
__n320 := {  };
__n320["type"] := "Identifier";
__n320["name"] := "$ERROR";
__n319["callee"] := __n320;
__n322 := {  };
__n322["type"] := "Literal";
__n322["value"] := "#5: \"try catch{break}\" must work correctly";
__n322["raw"] := "'#5: \"try catch{break}\" must work correctly'";
__n321 := [ __n322 ];
__n319["arguments"] := __n321;
__n318["expression"] := __n319;
__n317 := [ __n318 ];
__n316["body"] := __n317;
__n312["consequent"] := __n316;
__n312["alternate"] := null;
__n323 := {  };
__n323["type"] := "VariableDeclaration";
__n325 := {  };
__n325["type"] := "VariableDeclarator";
__n326 := {  };
__n326["type"] := "Identifier";
__n326["name"] := "c6";
__n325["id"] := __n326;
__n327 := {  };
__n327["type"] := "Literal";
__n327["value"] := 0.;
__n327["raw"] := "0";
__n325["init"] := __n327;
__n324 := [ __n325 ];
__n323["declarations"] := __n324;
__n323["kind"] := "var";
__n328 := {  };
__n328["type"] := "ForInStatement";
__n329 := {  };
__n329["type"] := "Identifier";
__n329["name"] := "x";
__n328["left"] := __n329;
__n330 := {  };
__n330["type"] := "Identifier";
__n330["name"] := "mycars";
__n328["right"] := __n330;
__n331 := {  };
__n331["type"] := "BlockStatement";
__n333 := {  };
__n333["type"] := "TryStatement";
__n334 := {  };
__n334["type"] := "BlockStatement";
__n336 := {  };
__n336["type"] := "ExpressionStatement";
__n337 := {  };
__n337["type"] := "AssignmentExpression";
__n337["operator"] := "+=";
__n338 := {  };
__n338["type"] := "Identifier";
__n338["name"] := "c6";
__n337["left"] := __n338;
__n339 := {  };
__n339["type"] := "Literal";
__n339["value"] := 1.;
__n339["raw"] := "1";
__n337["right"] := __n339;
__n336["expression"] := __n337;
__n340 := {  };
__n340["type"] := "BreakStatement";
__n340["label"] := null;
__n335 := [ __n336, __n340 ];
__n334["body"] := __n335;
__n333["block"] := __n334;
__n341 := {  };
__n341["type"] := "CatchClause";
__n342 := {  };
__n342["type"] := "Identifier";
__n342["name"] := "er1";
__n341["param"] := __n342;
__n343 := {  };
__n343["type"] := "BlockStatement";
__n344 := [  ];
__n343["body"] := __n344;
__n341["body"] := __n343;
__n333["handler"] := __n341;
__n333["finalizer"] := null;
__n345 := {  };
__n345["type"] := "ExpressionStatement";
__n346 := {  };
__n346["type"] := "AssignmentExpression";
__n346["operator"] := "+=";
__n347 := {  };
__n347["type"] := "Identifier";
__n347["name"] := "c6";
__n346["left"] := __n347;
__n348 := {  };
__n348["type"] := "Literal";
__n348["value"] := 2.;
__n348["raw"] := "2";
__n346["right"] := __n348;
__n345["expression"] := __n346;
__n332 := [ __n333, __n345 ];
__n331["body"] := __n332;
__n328["body"] := __n331;
__n328["each"] := false;
__n349 := {  };
__n349["type"] := "IfStatement";
__n350 := {  };
__n350["type"] := "BinaryExpression";
__n350["operator"] := "!==";
__n351 := {  };
__n351["type"] := "Identifier";
__n351["name"] := "c6";
__n350["left"] := __n351;
__n352 := {  };
__n352["type"] := "Literal";
__n352["value"] := 1.;
__n352["raw"] := "1";
__n350["right"] := __n352;
__n349["test"] := __n350;
__n353 := {  };
__n353["type"] := "BlockStatement";
__n355 := {  };
__n355["type"] := "ExpressionStatement";
__n356 := {  };
__n356["type"] := "CallExpression";
__n357 := {  };
__n357["type"] := "Identifier";
__n357["name"] := "$ERROR";
__n356["callee"] := __n357;
__n359 := {  };
__n359["type"] := "Literal";
__n359["value"] := "#6: \"try{break} catch\" must work correctly";
__n359["raw"] := "'#6: \"try{break} catch\" must work correctly'";
__n358 := [ __n359 ];
__n356["arguments"] := __n358;
__n355["expression"] := __n356;
__n354 := [ __n355 ];
__n353["body"] := __n354;
__n349["consequent"] := __n353;
__n349["alternate"] := null;
__n360 := {  };
__n360["type"] := "VariableDeclaration";
__n362 := {  };
__n362["type"] := "VariableDeclarator";
__n363 := {  };
__n363["type"] := "Identifier";
__n363["name"] := "c7";
__n362["id"] := __n363;
__n364 := {  };
__n364["type"] := "Literal";
__n364["value"] := 0.;
__n364["raw"] := "0";
__n362["init"] := __n364;
__n365 := {  };
__n365["type"] := "VariableDeclarator";
__n366 := {  };
__n366["type"] := "Identifier";
__n366["name"] := "fin7";
__n365["id"] := __n366;
__n367 := {  };
__n367["type"] := "Literal";
__n367["value"] := 0.;
__n367["raw"] := "0";
__n365["init"] := __n367;
__n361 := [ __n362, __n365 ];
__n360["declarations"] := __n361;
__n360["kind"] := "var";
__n368 := {  };
__n368["type"] := "TryStatement";
__n369 := {  };
__n369["type"] := "BlockStatement";
__n371 := {  };
__n371["type"] := "ForInStatement";
__n372 := {  };
__n372["type"] := "Identifier";
__n372["name"] := "x";
__n371["left"] := __n372;
__n373 := {  };
__n373["type"] := "Identifier";
__n373["name"] := "mycars";
__n371["right"] := __n373;
__n374 := {  };
__n374["type"] := "BlockStatement";
__n376 := {  };
__n376["type"] := "TryStatement";
__n377 := {  };
__n377["type"] := "BlockStatement";
__n379 := {  };
__n379["type"] := "ExpressionStatement";
__n380 := {  };
__n380["type"] := "AssignmentExpression";
__n380["operator"] := "+=";
__n381 := {  };
__n381["type"] := "Identifier";
__n381["name"] := "c7";
__n380["left"] := __n381;
__n382 := {  };
__n382["type"] := "Literal";
__n382["value"] := 1.;
__n382["raw"] := "1";
__n380["right"] := __n382;
__n379["expression"] := __n380;
__n383 := {  };
__n383["type"] := "ThrowStatement";
__n384 := {  };
__n384["type"] := "Literal";
__n384["value"] := "ex1";
__n384["raw"] := "\"ex1\"";
__n383["argument"] := __n384;
__n378 := [ __n379, __n383 ];
__n377["body"] := __n378;
__n376["block"] := __n377;
__n376["handler"] := null;
__n385 := {  };
__n385["type"] := "BlockStatement";
__n387 := {  };
__n387["type"] := "ExpressionStatement";
__n388 := {  };
__n388["type"] := "AssignmentExpression";
__n388["operator"] := "=";
__n389 := {  };
__n389["type"] := "Identifier";
__n389["name"] := "fin7";
__n388["left"] := __n389;
__n390 := {  };
__n390["type"] := "Literal";
__n390["value"] := 1.;
__n390["raw"] := "1";
__n388["right"] := __n390;
__n387["expression"] := __n388;
__n391 := {  };
__n391["type"] := "BreakStatement";
__n391["label"] := null;
__n386 := [ __n387, __n391 ];
__n385["body"] := __n386;
__n376["finalizer"] := __n385;
__n392 := {  };
__n392["type"] := "ExpressionStatement";
__n393 := {  };
__n393["type"] := "AssignmentExpression";
__n393["operator"] := "=";
__n394 := {  };
__n394["type"] := "Identifier";
__n394["name"] := "fin7";
__n393["left"] := __n394;
__n395 := {  };
__n395["type"] := "UnaryExpression";
__n395["operator"] := "-";
__n396 := {  };
__n396["type"] := "Literal";
__n396["value"] := 1.;
__n396["raw"] := "1";
__n395["argument"] := __n396;
__n395["prefix"] := true;
__n393["right"] := __n395;
__n392["expression"] := __n393;
__n397 := {  };
__n397["type"] := "ExpressionStatement";
__n398 := {  };
__n398["type"] := "AssignmentExpression";
__n398["operator"] := "+=";
__n399 := {  };
__n399["type"] := "Identifier";
__n399["name"] := "c7";
__n398["left"] := __n399;
__n400 := {  };
__n400["type"] := "Literal";
__n400["value"] := 2.;
__n400["raw"] := "2";
__n398["right"] := __n400;
__n397["expression"] := __n398;
__n375 := [ __n376, __n392, __n397 ];
__n374["body"] := __n375;
__n371["body"] := __n374;
__n371["each"] := false;
__n370 := [ __n371 ];
__n369["body"] := __n370;
__n368["block"] := __n369;
__n401 := {  };
__n401["type"] := "CatchClause";
__n402 := {  };
__n402["type"] := "Identifier";
__n402["name"] := "ex1";
__n401["param"] := __n402;
__n403 := {  };
__n403["type"] := "BlockStatement";
__n405 := {  };
__n405["type"] := "ExpressionStatement";
__n406 := {  };
__n406["type"] := "AssignmentExpression";
__n406["operator"] := "=";
__n407 := {  };
__n407["type"] := "Identifier";
__n407["name"] := "c7";
__n406["left"] := __n407;
__n408 := {  };
__n408["type"] := "Literal";
__n408["value"] := 10.;
__n408["raw"] := "10";
__n406["right"] := __n408;
__n405["expression"] := __n406;
__n404 := [ __n405 ];
__n403["body"] := __n404;
__n401["body"] := __n403;
__n368["handler"] := __n401;
__n368["finalizer"] := null;
__n409 := {  };
__n409["type"] := "IfStatement";
__n410 := {  };
__n410["type"] := "BinaryExpression";
__n410["operator"] := "!==";
__n411 := {  };
__n411["type"] := "Identifier";
__n411["name"] := "fin7";
__n410["left"] := __n411;
__n412 := {  };
__n412["type"] := "Literal";
__n412["value"] := 1.;
__n412["raw"] := "1";
__n410["right"] := __n412;
__n409["test"] := __n410;
__n413 := {  };
__n413["type"] := "BlockStatement";
__n415 := {  };
__n415["type"] := "ExpressionStatement";
__n416 := {  };
__n416["type"] := "CallExpression";
__n417 := {  };
__n417["type"] := "Identifier";
__n417["name"] := "$ERROR";
__n416["callee"] := __n417;
__n419 := {  };
__n419["type"] := "Literal";
__n419["value"] := "#7.1: \"finally\" block must be evaluated";
__n419["raw"] := "'#7.1: \"finally\" block must be evaluated'";
__n418 := [ __n419 ];
__n416["arguments"] := __n418;
__n415["expression"] := __n416;
__n414 := [ __n415 ];
__n413["body"] := __n414;
__n409["consequent"] := __n413;
__n409["alternate"] := null;
__n420 := {  };
__n420["type"] := "IfStatement";
__n421 := {  };
__n421["type"] := "BinaryExpression";
__n421["operator"] := "!==";
__n422 := {  };
__n422["type"] := "Identifier";
__n422["name"] := "c7";
__n421["left"] := __n422;
__n423 := {  };
__n423["type"] := "Literal";
__n423["value"] := 1.;
__n423["raw"] := "1";
__n421["right"] := __n423;
__n420["test"] := __n421;
__n424 := {  };
__n424["type"] := "BlockStatement";
__n426 := {  };
__n426["type"] := "ExpressionStatement";
__n427 := {  };
__n427["type"] := "CallExpression";
__n428 := {  };
__n428["type"] := "Identifier";
__n428["name"] := "$ERROR";
__n427["callee"] := __n428;
__n430 := {  };
__n430["type"] := "Literal";
__n430["value"] := "#7.2: \"try finally{break}\" must work correctly";
__n430["raw"] := "'#7.2: \"try finally{break}\" must work correctly'";
__n429 := [ __n430 ];
__n427["arguments"] := __n429;
__n426["expression"] := __n427;
__n425 := [ __n426 ];
__n424["body"] := __n425;
__n420["consequent"] := __n424;
__n420["alternate"] := null;
__n1 := [ __n2, __n6, __n13, __n19, __n25, __n31, __n39, __n75, __n76, __n87, __n98, __n106, __n140, __n151, __n162, __n170, __n203, __n214, __n225, __n233, __n261, __n272, __n283, __n288, __n312, __n323, __n328, __n349, __n360, __n368, __n409, __n420 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n431 := [ "x", "mycars", "c1", "fin", "c2", "fin2", "c3", "fin3", "c4", "fin4", "c5", "c6", "c7", "fin7" ];
__n0["variableDeclarations"] := __n431;
__n432 := [  ];
__n0["functionDeclarations"] := __n432;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}