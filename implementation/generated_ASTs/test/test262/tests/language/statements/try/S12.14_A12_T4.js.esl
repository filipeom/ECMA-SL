function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "mycars";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "NewExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Array";
__n10["callee"] := __n11;
__n12 := [  ];
__n10["arguments"] := __n12;
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "AssignmentExpression";
__n14["operator"] := "=";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n15["computed"] := true;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "mycars";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 0.;
__n17["raw"] := "0";
__n15["property"] := __n17;
__n14["left"] := __n15;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "Saab";
__n18["raw"] := "\"Saab\"";
__n14["right"] := __n18;
__n13["expression"] := __n14;
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "AssignmentExpression";
__n20["operator"] := "=";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n21["computed"] := true;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "mycars";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 1.;
__n23["raw"] := "1";
__n21["property"] := __n23;
__n20["left"] := __n21;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "Volvo";
__n24["raw"] := "\"Volvo\"";
__n20["right"] := __n24;
__n19["expression"] := __n20;
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "AssignmentExpression";
__n26["operator"] := "=";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n27["computed"] := true;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "mycars";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 2.;
__n29["raw"] := "2";
__n27["property"] := __n29;
__n26["left"] := __n27;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "BMW";
__n30["raw"] := "\"BMW\"";
__n26["right"] := __n30;
__n25["expression"] := __n26;
__n31 := {  };
__n31["type"] := "VariableDeclaration";
__n33 := {  };
__n33["type"] := "VariableDeclarator";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "c1";
__n33["id"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 0.;
__n35["raw"] := "0";
__n33["init"] := __n35;
__n36 := {  };
__n36["type"] := "VariableDeclarator";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "fin";
__n36["id"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 0.;
__n38["raw"] := "0";
__n36["init"] := __n38;
__n32 := [ __n33, __n36 ];
__n31["declarations"] := __n32;
__n31["kind"] := "var";
__n39 := {  };
__n39["type"] := "ForInStatement";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "x";
__n39["left"] := __n40;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "mycars";
__n39["right"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "TryStatement";
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "AssignmentExpression";
__n48["operator"] := "+=";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "c1";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 1.;
__n50["raw"] := "1";
__n48["right"] := __n50;
__n47["expression"] := __n48;
__n51 := {  };
__n51["type"] := "BreakStatement";
__n51["label"] := null;
__n46 := [ __n47, __n51 ];
__n45["body"] := __n46;
__n44["block"] := __n45;
__n52 := {  };
__n52["type"] := "CatchClause";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "er1";
__n52["param"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n55 := [  ];
__n54["body"] := __n55;
__n52["body"] := __n54;
__n44["handler"] := __n52;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "AssignmentExpression";
__n59["operator"] := "=";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "fin";
__n59["left"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 1.;
__n61["raw"] := "1";
__n59["right"] := __n61;
__n58["expression"] := __n59;
__n62 := {  };
__n62["type"] := "ContinueStatement";
__n62["label"] := null;
__n57 := [ __n58, __n62 ];
__n56["body"] := __n57;
__n44["finalizer"] := __n56;
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "AssignmentExpression";
__n64["operator"] := "=";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "fin";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "UnaryExpression";
__n66["operator"] := "-";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 1.;
__n67["raw"] := "1";
__n66["argument"] := __n67;
__n66["prefix"] := true;
__n64["right"] := __n66;
__n63["expression"] := __n64;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "AssignmentExpression";
__n69["operator"] := "+=";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "c1";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 2.;
__n71["raw"] := "2";
__n69["right"] := __n71;
__n68["expression"] := __n69;
__n43 := [ __n44, __n63, __n68 ];
__n42["body"] := __n43;
__n39["body"] := __n42;
__n39["each"] := false;
__n72 := {  };
__n72["type"] := "IfStatement";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "!==";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "fin";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 1.;
__n75["raw"] := "1";
__n73["right"] := __n75;
__n72["test"] := __n73;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "$ERROR";
__n79["callee"] := __n80;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "#1.1: \"finally\" block must be evaluated";
__n82["raw"] := "'#1.1: \"finally\" block must be evaluated'";
__n81 := [ __n82 ];
__n79["arguments"] := __n81;
__n78["expression"] := __n79;
__n77 := [ __n78 ];
__n76["body"] := __n77;
__n72["consequent"] := __n76;
__n72["alternate"] := null;
__n83 := {  };
__n83["type"] := "IfStatement";
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "!==";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "c1";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 3.;
__n86["raw"] := "3";
__n84["right"] := __n86;
__n83["test"] := __n84;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "$ERROR";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "#1.2: \"try{break} catch finally{continue}\" must work correctly";
__n93["raw"] := "'#1.2: \"try{break} catch finally{continue}\" must work correctly'";
__n92 := [ __n93 ];
__n90["arguments"] := __n92;
__n89["expression"] := __n90;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n83["consequent"] := __n87;
__n83["alternate"] := null;
__n94 := {  };
__n94["type"] := "VariableDeclaration";
__n96 := {  };
__n96["type"] := "VariableDeclarator";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "c2";
__n96["id"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 0.;
__n98["raw"] := "0";
__n96["init"] := __n98;
__n99 := {  };
__n99["type"] := "VariableDeclarator";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "fin2";
__n99["id"] := __n100;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 0.;
__n101["raw"] := "0";
__n99["init"] := __n101;
__n95 := [ __n96, __n99 ];
__n94["declarations"] := __n95;
__n94["kind"] := "var";
__n102 := {  };
__n102["type"] := "ForInStatement";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "x";
__n102["left"] := __n103;
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "mycars";
__n102["right"] := __n104;
__n105 := {  };
__n105["type"] := "BlockStatement";
__n107 := {  };
__n107["type"] := "TryStatement";
__n108 := {  };
__n108["type"] := "BlockStatement";
__n110 := {  };
__n110["type"] := "ThrowStatement";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "ex1";
__n111["raw"] := "\"ex1\"";
__n110["argument"] := __n111;
__n109 := [ __n110 ];
__n108["body"] := __n109;
__n107["block"] := __n108;
__n112 := {  };
__n112["type"] := "CatchClause";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "er1";
__n112["param"] := __n113;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n116 := {  };
__n116["type"] := "ExpressionStatement";
__n117 := {  };
__n117["type"] := "AssignmentExpression";
__n117["operator"] := "+=";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "c2";
__n117["left"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 1.;
__n119["raw"] := "1";
__n117["right"] := __n119;
__n116["expression"] := __n117;
__n120 := {  };
__n120["type"] := "BreakStatement";
__n120["label"] := null;
__n115 := [ __n116, __n120 ];
__n114["body"] := __n115;
__n112["body"] := __n114;
__n107["handler"] := __n112;
__n121 := {  };
__n121["type"] := "BlockStatement";
__n123 := {  };
__n123["type"] := "ExpressionStatement";
__n124 := {  };
__n124["type"] := "AssignmentExpression";
__n124["operator"] := "=";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "fin2";
__n124["left"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := 1.;
__n126["raw"] := "1";
__n124["right"] := __n126;
__n123["expression"] := __n124;
__n127 := {  };
__n127["type"] := "ContinueStatement";
__n127["label"] := null;
__n122 := [ __n123, __n127 ];
__n121["body"] := __n122;
__n107["finalizer"] := __n121;
__n128 := {  };
__n128["type"] := "ExpressionStatement";
__n129 := {  };
__n129["type"] := "AssignmentExpression";
__n129["operator"] := "+=";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "c2";
__n129["left"] := __n130;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := 2.;
__n131["raw"] := "2";
__n129["right"] := __n131;
__n128["expression"] := __n129;
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "AssignmentExpression";
__n133["operator"] := "=";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "fin2";
__n133["left"] := __n134;
__n135 := {  };
__n135["type"] := "UnaryExpression";
__n135["operator"] := "-";
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := 1.;
__n136["raw"] := "1";
__n135["argument"] := __n136;
__n135["prefix"] := true;
__n133["right"] := __n135;
__n132["expression"] := __n133;
__n106 := [ __n107, __n128, __n132 ];
__n105["body"] := __n106;
__n102["body"] := __n105;
__n102["each"] := false;
__n137 := {  };
__n137["type"] := "IfStatement";
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "!==";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "fin2";
__n138["left"] := __n139;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := 1.;
__n140["raw"] := "1";
__n138["right"] := __n140;
__n137["test"] := __n138;
__n141 := {  };
__n141["type"] := "BlockStatement";
__n143 := {  };
__n143["type"] := "ExpressionStatement";
__n144 := {  };
__n144["type"] := "CallExpression";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "$ERROR";
__n144["callee"] := __n145;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "#2.1: \"finally\" block must be evaluated";
__n147["raw"] := "'#2.1: \"finally\" block must be evaluated'";
__n146 := [ __n147 ];
__n144["arguments"] := __n146;
__n143["expression"] := __n144;
__n142 := [ __n143 ];
__n141["body"] := __n142;
__n137["consequent"] := __n141;
__n137["alternate"] := null;
__n148 := {  };
__n148["type"] := "IfStatement";
__n149 := {  };
__n149["type"] := "BinaryExpression";
__n149["operator"] := "!==";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "c2";
__n149["left"] := __n150;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := 3.;
__n151["raw"] := "3";
__n149["right"] := __n151;
__n148["test"] := __n149;
__n152 := {  };
__n152["type"] := "BlockStatement";
__n154 := {  };
__n154["type"] := "ExpressionStatement";
__n155 := {  };
__n155["type"] := "CallExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "$ERROR";
__n155["callee"] := __n156;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := "#2.2: \"try catch{break} finally{continue}\" must work correctly";
__n158["raw"] := "'#2.2: \"try catch{break} finally{continue}\" must work correctly'";
__n157 := [ __n158 ];
__n155["arguments"] := __n157;
__n154["expression"] := __n155;
__n153 := [ __n154 ];
__n152["body"] := __n153;
__n148["consequent"] := __n152;
__n148["alternate"] := null;
__n1 := [ __n2, __n6, __n13, __n19, __n25, __n31, __n39, __n72, __n83, __n94, __n102, __n137, __n148 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n159 := [ "x", "mycars", "c1", "fin", "c2", "fin2" ];
__n0["variableDeclarations"] := __n159;
__n160 := [  ];
__n0["functionDeclarations"] := __n160;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}