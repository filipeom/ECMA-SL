function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "c1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "myFunction1";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "x1";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "myFunction1";
__n13["callee"] := __n14;
__n15 := [  ];
__n13["arguments"] := __n15;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n16 := {  };
__n16["type"] := "IfStatement";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "!==";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "x1";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n17["right"] := __n19;
__n16["test"] := __n17;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "$ERROR";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "+";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "#1.1: x1===1. Actual: x1===";
__n27["raw"] := "'#1.1: x1===1. Actual: x1==='";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "x1";
__n26["right"] := __n28;
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n16["consequent"] := __n20;
__n16["alternate"] := null;
__n29 := {  };
__n29["type"] := "IfStatement";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "!==";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "c1";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 1.;
__n32["raw"] := "1";
__n30["right"] := __n32;
__n29["test"] := __n30;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "$ERROR";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "#1.2: \"finally\" block must be evaluated";
__n39["raw"] := "'#1.2: \"finally\" block must be evaluated'";
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["expression"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n29["consequent"] := __n33;
__n29["alternate"] := null;
__n40 := {  };
__n40["type"] := "VariableDeclaration";
__n42 := {  };
__n42["type"] := "VariableDeclarator";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "c2";
__n42["id"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 0.;
__n44["raw"] := "0";
__n42["init"] := __n44;
__n41 := [ __n42 ];
__n40["declarations"] := __n41;
__n40["kind"] := "var";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "myFunction2";
__n45["expression"] := __n46;
__n47 := {  };
__n47["type"] := "TryStatement";
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "VariableDeclaration";
__n52 := {  };
__n52["type"] := "VariableDeclarator";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "x2";
__n52["id"] := __n53;
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "myFunction2";
__n54["callee"] := __n55;
__n56 := [  ];
__n54["arguments"] := __n56;
__n52["init"] := __n54;
__n51 := [ __n52 ];
__n50["declarations"] := __n51;
__n50["kind"] := "var";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#2.1: Throwing exception inside function lead to throwing exception outside this function";
__n61["raw"] := "'#2.1: Throwing exception inside function lead to throwing exception outside this function'";
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n49 := [ __n50, __n57 ];
__n48["body"] := __n49;
__n47["block"] := __n48;
__n62 := {  };
__n62["type"] := "CatchClause";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "e";
__n62["param"] := __n63;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "IfStatement";
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "!==";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "c2";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 1.;
__n69["raw"] := "1";
__n67["right"] := __n69;
__n66["test"] := __n67;
__n70 := {  };
__n70["type"] := "BlockStatement";
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "$ERROR";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "#2.2: \"finally\" block must be evaluated";
__n76["raw"] := "'#2.2: \"finally\" block must be evaluated'";
__n75 := [ __n76 ];
__n73["arguments"] := __n75;
__n72["expression"] := __n73;
__n71 := [ __n72 ];
__n70["body"] := __n71;
__n66["consequent"] := __n70;
__n66["alternate"] := null;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n62["body"] := __n64;
__n47["handler"] := __n62;
__n47["finalizer"] := null;
__n77 := {  };
__n77["type"] := "VariableDeclaration";
__n79 := {  };
__n79["type"] := "VariableDeclarator";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "c3";
__n79["id"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 0.;
__n81["raw"] := "0";
__n79["init"] := __n81;
__n78 := [ __n79 ];
__n77["declarations"] := __n78;
__n77["kind"] := "var";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "myFunction3";
__n82["expression"] := __n83;
__n84 := {  };
__n84["type"] := "TryStatement";
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "VariableDeclaration";
__n89 := {  };
__n89["type"] := "VariableDeclarator";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "x3";
__n89["id"] := __n90;
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "myFunction3";
__n91["callee"] := __n92;
__n93 := [  ];
__n91["arguments"] := __n93;
__n89["init"] := __n91;
__n88 := [ __n89 ];
__n87["declarations"] := __n88;
__n87["kind"] := "var";
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "$ERROR";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "#3.1: Throwing exception inside function lead to throwing exception outside this function";
__n98["raw"] := "'#3.1: Throwing exception inside function lead to throwing exception outside this function'";
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n94["expression"] := __n95;
__n86 := [ __n87, __n94 ];
__n85["body"] := __n86;
__n84["block"] := __n85;
__n99 := {  };
__n99["type"] := "CatchClause";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "e";
__n99["param"] := __n100;
__n101 := {  };
__n101["type"] := "BlockStatement";
__n103 := {  };
__n103["type"] := "IfStatement";
__n104 := {  };
__n104["type"] := "BinaryExpression";
__n104["operator"] := "!==";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "c3";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 1.;
__n106["raw"] := "1";
__n104["right"] := __n106;
__n103["test"] := __n104;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "$ERROR";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "#3.2: \"finally\" block must be evaluated";
__n113["raw"] := "'#3.2: \"finally\" block must be evaluated'";
__n112 := [ __n113 ];
__n110["arguments"] := __n112;
__n109["expression"] := __n110;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n103["consequent"] := __n107;
__n103["alternate"] := null;
__n102 := [ __n103 ];
__n101["body"] := __n102;
__n99["body"] := __n101;
__n84["handler"] := __n99;
__n84["finalizer"] := null;
__n114 := {  };
__n114["type"] := "VariableDeclaration";
__n116 := {  };
__n116["type"] := "VariableDeclarator";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "c4";
__n116["id"] := __n117;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 0.;
__n118["raw"] := "0";
__n116["init"] := __n118;
__n115 := [ __n116 ];
__n114["declarations"] := __n115;
__n114["kind"] := "var";
__n119 := {  };
__n119["type"] := "ExpressionStatement";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "myFunction4";
__n119["expression"] := __n120;
__n121 := {  };
__n121["type"] := "TryStatement";
__n122 := {  };
__n122["type"] := "BlockStatement";
__n124 := {  };
__n124["type"] := "VariableDeclaration";
__n126 := {  };
__n126["type"] := "VariableDeclarator";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "x4";
__n126["id"] := __n127;
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "myFunction4";
__n128["callee"] := __n129;
__n130 := [  ];
__n128["arguments"] := __n130;
__n126["init"] := __n128;
__n125 := [ __n126 ];
__n124["declarations"] := __n125;
__n124["kind"] := "var";
__n131 := {  };
__n131["type"] := "ExpressionStatement";
__n132 := {  };
__n132["type"] := "CallExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "$ERROR";
__n132["callee"] := __n133;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "#4.2: Throwing exception inside function lead to throwing exception outside this function";
__n135["raw"] := "'#4.2: Throwing exception inside function lead to throwing exception outside this function'";
__n134 := [ __n135 ];
__n132["arguments"] := __n134;
__n131["expression"] := __n132;
__n123 := [ __n124, __n131 ];
__n122["body"] := __n123;
__n121["block"] := __n122;
__n136 := {  };
__n136["type"] := "CatchClause";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "e";
__n136["param"] := __n137;
__n138 := {  };
__n138["type"] := "BlockStatement";
__n140 := {  };
__n140["type"] := "IfStatement";
__n141 := {  };
__n141["type"] := "BinaryExpression";
__n141["operator"] := "!==";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "c4";
__n141["left"] := __n142;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := 1.;
__n143["raw"] := "1";
__n141["right"] := __n143;
__n140["test"] := __n141;
__n144 := {  };
__n144["type"] := "BlockStatement";
__n146 := {  };
__n146["type"] := "ExpressionStatement";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "$ERROR";
__n147["callee"] := __n148;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "#4.3: \"finally\" block must be evaluated";
__n150["raw"] := "'#4.3: \"finally\" block must be evaluated'";
__n149 := [ __n150 ];
__n147["arguments"] := __n149;
__n146["expression"] := __n147;
__n145 := [ __n146 ];
__n144["body"] := __n145;
__n140["consequent"] := __n144;
__n140["alternate"] := null;
__n139 := [ __n140 ];
__n138["body"] := __n139;
__n136["body"] := __n138;
__n121["handler"] := __n136;
__n121["finalizer"] := null;
__n151 := {  };
__n151["type"] := "VariableDeclaration";
__n153 := {  };
__n153["type"] := "VariableDeclarator";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "c5";
__n153["id"] := __n154;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := 0.;
__n155["raw"] := "0";
__n153["init"] := __n155;
__n152 := [ __n153 ];
__n151["declarations"] := __n152;
__n151["kind"] := "var";
__n156 := {  };
__n156["type"] := "ExpressionStatement";
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "myFunction5";
__n156["expression"] := __n157;
__n158 := {  };
__n158["type"] := "TryStatement";
__n159 := {  };
__n159["type"] := "BlockStatement";
__n161 := {  };
__n161["type"] := "VariableDeclaration";
__n163 := {  };
__n163["type"] := "VariableDeclarator";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "x5";
__n163["id"] := __n164;
__n165 := {  };
__n165["type"] := "CallExpression";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "myFunction5";
__n165["callee"] := __n166;
__n167 := [  ];
__n165["arguments"] := __n167;
__n163["init"] := __n165;
__n162 := [ __n163 ];
__n161["declarations"] := __n162;
__n161["kind"] := "var";
__n168 := {  };
__n168["type"] := "ExpressionStatement";
__n169 := {  };
__n169["type"] := "CallExpression";
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "$ERROR";
__n169["callee"] := __n170;
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := "#5.2: Throwing exception inside function lead to throwing exception outside this function";
__n172["raw"] := "'#5.2: Throwing exception inside function lead to throwing exception outside this function'";
__n171 := [ __n172 ];
__n169["arguments"] := __n171;
__n168["expression"] := __n169;
__n160 := [ __n161, __n168 ];
__n159["body"] := __n160;
__n158["block"] := __n159;
__n173 := {  };
__n173["type"] := "CatchClause";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "e";
__n173["param"] := __n174;
__n175 := {  };
__n175["type"] := "BlockStatement";
__n177 := {  };
__n177["type"] := "IfStatement";
__n178 := {  };
__n178["type"] := "BinaryExpression";
__n178["operator"] := "!==";
__n179 := {  };
__n179["type"] := "Identifier";
__n179["name"] := "c5";
__n178["left"] := __n179;
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := 1.;
__n180["raw"] := "1";
__n178["right"] := __n180;
__n177["test"] := __n178;
__n181 := {  };
__n181["type"] := "BlockStatement";
__n183 := {  };
__n183["type"] := "ExpressionStatement";
__n184 := {  };
__n184["type"] := "CallExpression";
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "$ERROR";
__n184["callee"] := __n185;
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := "#5.3: \"finally\" block must be evaluated";
__n187["raw"] := "'#5.3: \"finally\" block must be evaluated'";
__n186 := [ __n187 ];
__n184["arguments"] := __n186;
__n183["expression"] := __n184;
__n182 := [ __n183 ];
__n181["body"] := __n182;
__n177["consequent"] := __n181;
__n177["alternate"] := null;
__n176 := [ __n177 ];
__n175["body"] := __n176;
__n173["body"] := __n175;
__n158["handler"] := __n173;
__n158["finalizer"] := null;
__n188 := {  };
__n188["type"] := "VariableDeclaration";
__n190 := {  };
__n190["type"] := "VariableDeclarator";
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "c6";
__n190["id"] := __n191;
__n192 := {  };
__n192["type"] := "Literal";
__n192["value"] := 0.;
__n192["raw"] := "0";
__n190["init"] := __n192;
__n189 := [ __n190 ];
__n188["declarations"] := __n189;
__n188["kind"] := "var";
__n193 := {  };
__n193["type"] := "ExpressionStatement";
__n194 := {  };
__n194["type"] := "Identifier";
__n194["name"] := "myFunction6";
__n193["expression"] := __n194;
__n195 := {  };
__n195["type"] := "TryStatement";
__n196 := {  };
__n196["type"] := "BlockStatement";
__n198 := {  };
__n198["type"] := "VariableDeclaration";
__n200 := {  };
__n200["type"] := "VariableDeclarator";
__n201 := {  };
__n201["type"] := "Identifier";
__n201["name"] := "x6";
__n200["id"] := __n201;
__n202 := {  };
__n202["type"] := "CallExpression";
__n203 := {  };
__n203["type"] := "Identifier";
__n203["name"] := "myFunction6";
__n202["callee"] := __n203;
__n204 := [  ];
__n202["arguments"] := __n204;
__n200["init"] := __n202;
__n199 := [ __n200 ];
__n198["declarations"] := __n199;
__n198["kind"] := "var";
__n205 := {  };
__n205["type"] := "ExpressionStatement";
__n206 := {  };
__n206["type"] := "CallExpression";
__n207 := {  };
__n207["type"] := "Identifier";
__n207["name"] := "$ERROR";
__n206["callee"] := __n207;
__n209 := {  };
__n209["type"] := "Literal";
__n209["value"] := "#6.1: Throwing exception inside function lead to throwing exception outside this function";
__n209["raw"] := "'#6.1: Throwing exception inside function lead to throwing exception outside this function'";
__n208 := [ __n209 ];
__n206["arguments"] := __n208;
__n205["expression"] := __n206;
__n197 := [ __n198, __n205 ];
__n196["body"] := __n197;
__n195["block"] := __n196;
__n210 := {  };
__n210["type"] := "CatchClause";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "e";
__n210["param"] := __n211;
__n212 := {  };
__n212["type"] := "BlockStatement";
__n214 := {  };
__n214["type"] := "IfStatement";
__n215 := {  };
__n215["type"] := "BinaryExpression";
__n215["operator"] := "===";
__n216 := {  };
__n216["type"] := "Identifier";
__n216["name"] := "e";
__n215["left"] := __n216;
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := "ex1";
__n217["raw"] := "\"ex1\"";
__n215["right"] := __n217;
__n214["test"] := __n215;
__n218 := {  };
__n218["type"] := "BlockStatement";
__n220 := {  };
__n220["type"] := "ExpressionStatement";
__n221 := {  };
__n221["type"] := "CallExpression";
__n222 := {  };
__n222["type"] := "Identifier";
__n222["name"] := "$ERROR";
__n221["callee"] := __n222;
__n224 := {  };
__n224["type"] := "Literal";
__n224["value"] := "#6.2: Exception !==\"ex1\". Actual: catch previous exception";
__n224["raw"] := "'#6.2: Exception !==\"ex1\". Actual: catch previous exception'";
__n223 := [ __n224 ];
__n221["arguments"] := __n223;
__n220["expression"] := __n221;
__n219 := [ __n220 ];
__n218["body"] := __n219;
__n214["consequent"] := __n218;
__n214["alternate"] := null;
__n225 := {  };
__n225["type"] := "IfStatement";
__n226 := {  };
__n226["type"] := "BinaryExpression";
__n226["operator"] := "!==";
__n227 := {  };
__n227["type"] := "Identifier";
__n227["name"] := "e";
__n226["left"] := __n227;
__n228 := {  };
__n228["type"] := "Literal";
__n228["value"] := "ex2";
__n228["raw"] := "\"ex2\"";
__n226["right"] := __n228;
__n225["test"] := __n226;
__n229 := {  };
__n229["type"] := "BlockStatement";
__n231 := {  };
__n231["type"] := "ExpressionStatement";
__n232 := {  };
__n232["type"] := "CallExpression";
__n233 := {  };
__n233["type"] := "Identifier";
__n233["name"] := "$ERROR";
__n232["callee"] := __n233;
__n235 := {  };
__n235["type"] := "BinaryExpression";
__n235["operator"] := "+";
__n236 := {  };
__n236["type"] := "Literal";
__n236["value"] := "#6.3: Exception !==\"ex1\". Actual: ";
__n236["raw"] := "'#6.3: Exception !==\"ex1\". Actual: '";
__n235["left"] := __n236;
__n237 := {  };
__n237["type"] := "Identifier";
__n237["name"] := "e";
__n235["right"] := __n237;
__n234 := [ __n235 ];
__n232["arguments"] := __n234;
__n231["expression"] := __n232;
__n230 := [ __n231 ];
__n229["body"] := __n230;
__n225["consequent"] := __n229;
__n225["alternate"] := null;
__n238 := {  };
__n238["type"] := "IfStatement";
__n239 := {  };
__n239["type"] := "BinaryExpression";
__n239["operator"] := "!==";
__n240 := {  };
__n240["type"] := "Identifier";
__n240["name"] := "c6";
__n239["left"] := __n240;
__n241 := {  };
__n241["type"] := "Literal";
__n241["value"] := 1.;
__n241["raw"] := "1";
__n239["right"] := __n241;
__n238["test"] := __n239;
__n242 := {  };
__n242["type"] := "BlockStatement";
__n244 := {  };
__n244["type"] := "ExpressionStatement";
__n245 := {  };
__n245["type"] := "CallExpression";
__n246 := {  };
__n246["type"] := "Identifier";
__n246["name"] := "$ERROR";
__n245["callee"] := __n246;
__n248 := {  };
__n248["type"] := "Literal";
__n248["value"] := "#6.4: \"finally\" block must be evaluated";
__n248["raw"] := "'#6.4: \"finally\" block must be evaluated'";
__n247 := [ __n248 ];
__n245["arguments"] := __n247;
__n244["expression"] := __n245;
__n243 := [ __n244 ];
__n242["body"] := __n243;
__n238["consequent"] := __n242;
__n238["alternate"] := null;
__n213 := [ __n214, __n225, __n238 ];
__n212["body"] := __n213;
__n210["body"] := __n212;
__n195["handler"] := __n210;
__n195["finalizer"] := null;
__n249 := {  };
__n249["type"] := "VariableDeclaration";
__n251 := {  };
__n251["type"] := "VariableDeclarator";
__n252 := {  };
__n252["type"] := "Identifier";
__n252["name"] := "c7";
__n251["id"] := __n252;
__n253 := {  };
__n253["type"] := "Literal";
__n253["value"] := 0.;
__n253["raw"] := "0";
__n251["init"] := __n253;
__n250 := [ __n251 ];
__n249["declarations"] := __n250;
__n249["kind"] := "var";
__n254 := {  };
__n254["type"] := "ExpressionStatement";
__n255 := {  };
__n255["type"] := "Identifier";
__n255["name"] := "myFunction7";
__n254["expression"] := __n255;
__n256 := {  };
__n256["type"] := "VariableDeclaration";
__n258 := {  };
__n258["type"] := "VariableDeclarator";
__n259 := {  };
__n259["type"] := "Identifier";
__n259["name"] := "x7";
__n258["id"] := __n259;
__n260 := {  };
__n260["type"] := "CallExpression";
__n261 := {  };
__n261["type"] := "Identifier";
__n261["name"] := "myFunction7";
__n260["callee"] := __n261;
__n262 := [  ];
__n260["arguments"] := __n262;
__n258["init"] := __n260;
__n257 := [ __n258 ];
__n256["declarations"] := __n257;
__n256["kind"] := "var";
__n263 := {  };
__n263["type"] := "IfStatement";
__n264 := {  };
__n264["type"] := "BinaryExpression";
__n264["operator"] := "!==";
__n265 := {  };
__n265["type"] := "Identifier";
__n265["name"] := "x7";
__n264["left"] := __n265;
__n266 := {  };
__n266["type"] := "Literal";
__n266["value"] := 2.;
__n266["raw"] := "2";
__n264["right"] := __n266;
__n263["test"] := __n264;
__n267 := {  };
__n267["type"] := "BlockStatement";
__n269 := {  };
__n269["type"] := "ExpressionStatement";
__n270 := {  };
__n270["type"] := "CallExpression";
__n271 := {  };
__n271["type"] := "Identifier";
__n271["name"] := "$ERROR";
__n270["callee"] := __n271;
__n273 := {  };
__n273["type"] := "Literal";
__n273["value"] := "#7.1: \"catch\" block must be evaluated";
__n273["raw"] := "'#7.1: \"catch\" block must be evaluated'";
__n272 := [ __n273 ];
__n270["arguments"] := __n272;
__n269["expression"] := __n270;
__n268 := [ __n269 ];
__n267["body"] := __n268;
__n263["consequent"] := __n267;
__n263["alternate"] := null;
__n274 := {  };
__n274["type"] := "IfStatement";
__n275 := {  };
__n275["type"] := "BinaryExpression";
__n275["operator"] := "!==";
__n276 := {  };
__n276["type"] := "Identifier";
__n276["name"] := "c7";
__n275["left"] := __n276;
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := 1.;
__n277["raw"] := "1";
__n275["right"] := __n277;
__n274["test"] := __n275;
__n278 := {  };
__n278["type"] := "BlockStatement";
__n280 := {  };
__n280["type"] := "ExpressionStatement";
__n281 := {  };
__n281["type"] := "CallExpression";
__n282 := {  };
__n282["type"] := "Identifier";
__n282["name"] := "$ERROR";
__n281["callee"] := __n282;
__n284 := {  };
__n284["type"] := "Literal";
__n284["value"] := "#7.2: \"finally\" block must be evaluated";
__n284["raw"] := "'#7.2: \"finally\" block must be evaluated'";
__n283 := [ __n284 ];
__n281["arguments"] := __n283;
__n280["expression"] := __n281;
__n279 := [ __n280 ];
__n278["body"] := __n279;
__n274["consequent"] := __n278;
__n274["alternate"] := null;
__n285 := {  };
__n285["type"] := "VariableDeclaration";
__n287 := {  };
__n287["type"] := "VariableDeclarator";
__n288 := {  };
__n288["type"] := "Identifier";
__n288["name"] := "c8";
__n287["id"] := __n288;
__n289 := {  };
__n289["type"] := "Literal";
__n289["value"] := 0.;
__n289["raw"] := "0";
__n287["init"] := __n289;
__n286 := [ __n287 ];
__n285["declarations"] := __n286;
__n285["kind"] := "var";
__n290 := {  };
__n290["type"] := "ExpressionStatement";
__n291 := {  };
__n291["type"] := "Identifier";
__n291["name"] := "myFunction8";
__n290["expression"] := __n291;
__n292 := {  };
__n292["type"] := "TryStatement";
__n293 := {  };
__n293["type"] := "BlockStatement";
__n295 := {  };
__n295["type"] := "VariableDeclaration";
__n297 := {  };
__n297["type"] := "VariableDeclarator";
__n298 := {  };
__n298["type"] := "Identifier";
__n298["name"] := "x8";
__n297["id"] := __n298;
__n299 := {  };
__n299["type"] := "CallExpression";
__n300 := {  };
__n300["type"] := "Identifier";
__n300["name"] := "myFunction8";
__n299["callee"] := __n300;
__n301 := [  ];
__n299["arguments"] := __n301;
__n297["init"] := __n299;
__n296 := [ __n297 ];
__n295["declarations"] := __n296;
__n295["kind"] := "var";
__n294 := [ __n295 ];
__n293["body"] := __n294;
__n292["block"] := __n293;
__n302 := {  };
__n302["type"] := "CatchClause";
__n303 := {  };
__n303["type"] := "Identifier";
__n303["name"] := "ex1";
__n302["param"] := __n303;
__n304 := {  };
__n304["type"] := "BlockStatement";
__n306 := {  };
__n306["type"] := "ExpressionStatement";
__n307 := {  };
__n307["type"] := "AssignmentExpression";
__n307["operator"] := "=";
__n308 := {  };
__n308["type"] := "Identifier";
__n308["name"] := "c8";
__n307["left"] := __n308;
__n309 := {  };
__n309["type"] := "Literal";
__n309["value"] := 10.;
__n309["raw"] := "10";
__n307["right"] := __n309;
__n306["expression"] := __n307;
__n305 := [ __n306 ];
__n304["body"] := __n305;
__n302["body"] := __n304;
__n292["handler"] := __n302;
__n292["finalizer"] := null;
__n310 := {  };
__n310["type"] := "IfStatement";
__n311 := {  };
__n311["type"] := "BinaryExpression";
__n311["operator"] := "!==";
__n312 := {  };
__n312["type"] := "Identifier";
__n312["name"] := "c8";
__n311["left"] := __n312;
__n313 := {  };
__n313["type"] := "Literal";
__n313["value"] := 1.;
__n313["raw"] := "1";
__n311["right"] := __n313;
__n310["test"] := __n311;
__n314 := {  };
__n314["type"] := "BlockStatement";
__n316 := {  };
__n316["type"] := "ExpressionStatement";
__n317 := {  };
__n317["type"] := "CallExpression";
__n318 := {  };
__n318["type"] := "Identifier";
__n318["name"] := "$ERROR";
__n317["callee"] := __n318;
__n320 := {  };
__n320["type"] := "Literal";
__n320["value"] := "#8: \"finally\" block must be evaluated";
__n320["raw"] := "'#8: \"finally\" block must be evaluated'";
__n319 := [ __n320 ];
__n317["arguments"] := __n319;
__n316["expression"] := __n317;
__n315 := [ __n316 ];
__n314["body"] := __n315;
__n310["consequent"] := __n314;
__n310["alternate"] := null;
__n1 := [ __n2, __n7, __n9, __n16, __n29, __n40, __n45, __n47, __n77, __n82, __n84, __n114, __n119, __n121, __n151, __n156, __n158, __n188, __n193, __n195, __n249, __n254, __n256, __n263, __n274, __n285, __n290, __n292, __n310 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n321 := [ "c1", "x1", "c2", "x2", "c3", "x3", "c4", "x4", "c5", "x5", "c6", "x6", "c7", "x7", "c8", "x8" ];
__n0["variableDeclarations"] := __n321;
__n323 := {  };
__n323["type"] := "FunctionDeclaration";
__n324 := {  };
__n324["type"] := "Identifier";
__n324["name"] := "myFunction1";
__n323["id"] := __n324;
__n325 := [  ];
__n323["params"] := __n325;
__n326 := {  };
__n326["type"] := "BlockStatement";
__n328 := {  };
__n328["type"] := "TryStatement";
__n329 := {  };
__n329["type"] := "BlockStatement";
__n331 := {  };
__n331["type"] := "ReturnStatement";
__n332 := {  };
__n332["type"] := "Literal";
__n332["value"] := 1.;
__n332["raw"] := "1";
__n331["argument"] := __n332;
__n330 := [ __n331 ];
__n329["body"] := __n330;
__n328["block"] := __n329;
__n328["handler"] := null;
__n333 := {  };
__n333["type"] := "BlockStatement";
__n335 := {  };
__n335["type"] := "ExpressionStatement";
__n336 := {  };
__n336["type"] := "AssignmentExpression";
__n336["operator"] := "=";
__n337 := {  };
__n337["type"] := "Identifier";
__n337["name"] := "c1";
__n336["left"] := __n337;
__n338 := {  };
__n338["type"] := "Literal";
__n338["value"] := 1.;
__n338["raw"] := "1";
__n336["right"] := __n338;
__n335["expression"] := __n336;
__n334 := [ __n335 ];
__n333["body"] := __n334;
__n328["finalizer"] := __n333;
__n339 := {  };
__n339["type"] := "ReturnStatement";
__n340 := {  };
__n340["type"] := "Literal";
__n340["value"] := 2.;
__n340["raw"] := "2";
__n339["argument"] := __n340;
__n327 := [ __n328, __n339 ];
__n326["body"] := __n327;
__n341 := [  ];
__n326["variableDeclarations"] := __n341;
__n342 := [  ];
__n326["functionDeclarations"] := __n342;
__n326["codeType"] := "function";
__n326["strict"] := false;
__n323["body"] := __n326;
__n323["generator"] := false;
__n323["async"] := false;
__n323["expression"] := false;
__n343 := {  };
__n343["type"] := "FunctionDeclaration";
__n344 := {  };
__n344["type"] := "Identifier";
__n344["name"] := "myFunction2";
__n343["id"] := __n344;
__n345 := [  ];
__n343["params"] := __n345;
__n346 := {  };
__n346["type"] := "BlockStatement";
__n348 := {  };
__n348["type"] := "TryStatement";
__n349 := {  };
__n349["type"] := "BlockStatement";
__n351 := {  };
__n351["type"] := "ThrowStatement";
__n352 := {  };
__n352["type"] := "Literal";
__n352["value"] := "exc";
__n352["raw"] := "\"exc\"";
__n351["argument"] := __n352;
__n353 := {  };
__n353["type"] := "ReturnStatement";
__n354 := {  };
__n354["type"] := "Literal";
__n354["value"] := 1.;
__n354["raw"] := "1";
__n353["argument"] := __n354;
__n350 := [ __n351, __n353 ];
__n349["body"] := __n350;
__n348["block"] := __n349;
__n348["handler"] := null;
__n355 := {  };
__n355["type"] := "BlockStatement";
__n357 := {  };
__n357["type"] := "ExpressionStatement";
__n358 := {  };
__n358["type"] := "AssignmentExpression";
__n358["operator"] := "=";
__n359 := {  };
__n359["type"] := "Identifier";
__n359["name"] := "c2";
__n358["left"] := __n359;
__n360 := {  };
__n360["type"] := "Literal";
__n360["value"] := 1.;
__n360["raw"] := "1";
__n358["right"] := __n360;
__n357["expression"] := __n358;
__n356 := [ __n357 ];
__n355["body"] := __n356;
__n348["finalizer"] := __n355;
__n361 := {  };
__n361["type"] := "ReturnStatement";
__n362 := {  };
__n362["type"] := "Literal";
__n362["value"] := 2.;
__n362["raw"] := "2";
__n361["argument"] := __n362;
__n347 := [ __n348, __n361 ];
__n346["body"] := __n347;
__n363 := [  ];
__n346["variableDeclarations"] := __n363;
__n364 := [  ];
__n346["functionDeclarations"] := __n364;
__n346["codeType"] := "function";
__n346["strict"] := false;
__n343["body"] := __n346;
__n343["generator"] := false;
__n343["async"] := false;
__n343["expression"] := false;
__n365 := {  };
__n365["type"] := "FunctionDeclaration";
__n366 := {  };
__n366["type"] := "Identifier";
__n366["name"] := "myFunction3";
__n365["id"] := __n366;
__n367 := [  ];
__n365["params"] := __n367;
__n368 := {  };
__n368["type"] := "BlockStatement";
__n370 := {  };
__n370["type"] := "TryStatement";
__n371 := {  };
__n371["type"] := "BlockStatement";
__n373 := {  };
__n373["type"] := "ReturnStatement";
__n374 := {  };
__n374["type"] := "Identifier";
__n374["name"] := "someValue";
__n373["argument"] := __n374;
__n372 := [ __n373 ];
__n371["body"] := __n372;
__n370["block"] := __n371;
__n370["handler"] := null;
__n375 := {  };
__n375["type"] := "BlockStatement";
__n377 := {  };
__n377["type"] := "ExpressionStatement";
__n378 := {  };
__n378["type"] := "AssignmentExpression";
__n378["operator"] := "=";
__n379 := {  };
__n379["type"] := "Identifier";
__n379["name"] := "c3";
__n378["left"] := __n379;
__n380 := {  };
__n380["type"] := "Literal";
__n380["value"] := 1.;
__n380["raw"] := "1";
__n378["right"] := __n380;
__n377["expression"] := __n378;
__n376 := [ __n377 ];
__n375["body"] := __n376;
__n370["finalizer"] := __n375;
__n381 := {  };
__n381["type"] := "ReturnStatement";
__n382 := {  };
__n382["type"] := "Literal";
__n382["value"] := 2.;
__n382["raw"] := "2";
__n381["argument"] := __n382;
__n369 := [ __n370, __n381 ];
__n368["body"] := __n369;
__n383 := [  ];
__n368["variableDeclarations"] := __n383;
__n384 := [  ];
__n368["functionDeclarations"] := __n384;
__n368["codeType"] := "function";
__n368["strict"] := false;
__n365["body"] := __n368;
__n365["generator"] := false;
__n365["async"] := false;
__n365["expression"] := false;
__n385 := {  };
__n385["type"] := "FunctionDeclaration";
__n386 := {  };
__n386["type"] := "Identifier";
__n386["name"] := "myFunction4";
__n385["id"] := __n386;
__n387 := [  ];
__n385["params"] := __n387;
__n388 := {  };
__n388["type"] := "BlockStatement";
__n390 := {  };
__n390["type"] := "TryStatement";
__n391 := {  };
__n391["type"] := "BlockStatement";
__n393 := {  };
__n393["type"] := "ReturnStatement";
__n394 := {  };
__n394["type"] := "Literal";
__n394["value"] := 1.;
__n394["raw"] := "1";
__n393["argument"] := __n394;
__n392 := [ __n393 ];
__n391["body"] := __n392;
__n390["block"] := __n391;
__n390["handler"] := null;
__n395 := {  };
__n395["type"] := "BlockStatement";
__n397 := {  };
__n397["type"] := "ExpressionStatement";
__n398 := {  };
__n398["type"] := "AssignmentExpression";
__n398["operator"] := "=";
__n399 := {  };
__n399["type"] := "Identifier";
__n399["name"] := "c4";
__n398["left"] := __n399;
__n400 := {  };
__n400["type"] := "Literal";
__n400["value"] := 1.;
__n400["raw"] := "1";
__n398["right"] := __n400;
__n397["expression"] := __n398;
__n401 := {  };
__n401["type"] := "ThrowStatement";
__n402 := {  };
__n402["type"] := "Literal";
__n402["value"] := "exc";
__n402["raw"] := "\"exc\"";
__n401["argument"] := __n402;
__n403 := {  };
__n403["type"] := "ReturnStatement";
__n404 := {  };
__n404["type"] := "Literal";
__n404["value"] := 0.;
__n404["raw"] := "0";
__n403["argument"] := __n404;
__n396 := [ __n397, __n401, __n403 ];
__n395["body"] := __n396;
__n390["finalizer"] := __n395;
__n405 := {  };
__n405["type"] := "ReturnStatement";
__n406 := {  };
__n406["type"] := "Literal";
__n406["value"] := 2.;
__n406["raw"] := "2";
__n405["argument"] := __n406;
__n389 := [ __n390, __n405 ];
__n388["body"] := __n389;
__n407 := [  ];
__n388["variableDeclarations"] := __n407;
__n408 := [  ];
__n388["functionDeclarations"] := __n408;
__n388["codeType"] := "function";
__n388["strict"] := false;
__n385["body"] := __n388;
__n385["generator"] := false;
__n385["async"] := false;
__n385["expression"] := false;
__n409 := {  };
__n409["type"] := "FunctionDeclaration";
__n410 := {  };
__n410["type"] := "Identifier";
__n410["name"] := "myFunction5";
__n409["id"] := __n410;
__n411 := [  ];
__n409["params"] := __n411;
__n412 := {  };
__n412["type"] := "BlockStatement";
__n414 := {  };
__n414["type"] := "TryStatement";
__n415 := {  };
__n415["type"] := "BlockStatement";
__n417 := {  };
__n417["type"] := "ReturnStatement";
__n418 := {  };
__n418["type"] := "Literal";
__n418["value"] := 1.;
__n418["raw"] := "1";
__n417["argument"] := __n418;
__n416 := [ __n417 ];
__n415["body"] := __n416;
__n414["block"] := __n415;
__n414["handler"] := null;
__n419 := {  };
__n419["type"] := "BlockStatement";
__n421 := {  };
__n421["type"] := "ExpressionStatement";
__n422 := {  };
__n422["type"] := "AssignmentExpression";
__n422["operator"] := "=";
__n423 := {  };
__n423["type"] := "Identifier";
__n423["name"] := "c5";
__n422["left"] := __n423;
__n424 := {  };
__n424["type"] := "Literal";
__n424["value"] := 1.;
__n424["raw"] := "1";
__n422["right"] := __n424;
__n421["expression"] := __n422;
__n425 := {  };
__n425["type"] := "ReturnStatement";
__n426 := {  };
__n426["type"] := "Identifier";
__n426["name"] := "someValue";
__n425["argument"] := __n426;
__n427 := {  };
__n427["type"] := "ReturnStatement";
__n428 := {  };
__n428["type"] := "Literal";
__n428["value"] := 0.;
__n428["raw"] := "0";
__n427["argument"] := __n428;
__n420 := [ __n421, __n425, __n427 ];
__n419["body"] := __n420;
__n414["finalizer"] := __n419;
__n429 := {  };
__n429["type"] := "ReturnStatement";
__n430 := {  };
__n430["type"] := "Literal";
__n430["value"] := 2.;
__n430["raw"] := "2";
__n429["argument"] := __n430;
__n413 := [ __n414, __n429 ];
__n412["body"] := __n413;
__n431 := [  ];
__n412["variableDeclarations"] := __n431;
__n432 := [  ];
__n412["functionDeclarations"] := __n432;
__n412["codeType"] := "function";
__n412["strict"] := false;
__n409["body"] := __n412;
__n409["generator"] := false;
__n409["async"] := false;
__n409["expression"] := false;
__n433 := {  };
__n433["type"] := "FunctionDeclaration";
__n434 := {  };
__n434["type"] := "Identifier";
__n434["name"] := "myFunction6";
__n433["id"] := __n434;
__n435 := [  ];
__n433["params"] := __n435;
__n436 := {  };
__n436["type"] := "BlockStatement";
__n438 := {  };
__n438["type"] := "TryStatement";
__n439 := {  };
__n439["type"] := "BlockStatement";
__n441 := {  };
__n441["type"] := "ThrowStatement";
__n442 := {  };
__n442["type"] := "Literal";
__n442["value"] := "ex1";
__n442["raw"] := "\"ex1\"";
__n441["argument"] := __n442;
__n443 := {  };
__n443["type"] := "ReturnStatement";
__n444 := {  };
__n444["type"] := "Literal";
__n444["value"] := 1.;
__n444["raw"] := "1";
__n443["argument"] := __n444;
__n440 := [ __n441, __n443 ];
__n439["body"] := __n440;
__n438["block"] := __n439;
__n438["handler"] := null;
__n445 := {  };
__n445["type"] := "BlockStatement";
__n447 := {  };
__n447["type"] := "ExpressionStatement";
__n448 := {  };
__n448["type"] := "AssignmentExpression";
__n448["operator"] := "=";
__n449 := {  };
__n449["type"] := "Identifier";
__n449["name"] := "c6";
__n448["left"] := __n449;
__n450 := {  };
__n450["type"] := "Literal";
__n450["value"] := 1.;
__n450["raw"] := "1";
__n448["right"] := __n450;
__n447["expression"] := __n448;
__n451 := {  };
__n451["type"] := "ThrowStatement";
__n452 := {  };
__n452["type"] := "Literal";
__n452["value"] := "ex2";
__n452["raw"] := "\"ex2\"";
__n451["argument"] := __n452;
__n453 := {  };
__n453["type"] := "ReturnStatement";
__n454 := {  };
__n454["type"] := "Literal";
__n454["value"] := 2.;
__n454["raw"] := "2";
__n453["argument"] := __n454;
__n446 := [ __n447, __n451, __n453 ];
__n445["body"] := __n446;
__n438["finalizer"] := __n445;
__n455 := {  };
__n455["type"] := "ReturnStatement";
__n456 := {  };
__n456["type"] := "Literal";
__n456["value"] := 3.;
__n456["raw"] := "3";
__n455["argument"] := __n456;
__n437 := [ __n438, __n455 ];
__n436["body"] := __n437;
__n457 := [  ];
__n436["variableDeclarations"] := __n457;
__n458 := [  ];
__n436["functionDeclarations"] := __n458;
__n436["codeType"] := "function";
__n436["strict"] := false;
__n433["body"] := __n436;
__n433["generator"] := false;
__n433["async"] := false;
__n433["expression"] := false;
__n459 := {  };
__n459["type"] := "FunctionDeclaration";
__n460 := {  };
__n460["type"] := "Identifier";
__n460["name"] := "myFunction7";
__n459["id"] := __n460;
__n461 := [  ];
__n459["params"] := __n461;
__n462 := {  };
__n462["type"] := "BlockStatement";
__n464 := {  };
__n464["type"] := "TryStatement";
__n465 := {  };
__n465["type"] := "BlockStatement";
__n467 := {  };
__n467["type"] := "ReturnStatement";
__n468 := {  };
__n468["type"] := "Literal";
__n468["value"] := 1.;
__n468["raw"] := "1";
__n467["argument"] := __n468;
__n466 := [ __n467 ];
__n465["body"] := __n466;
__n464["block"] := __n465;
__n464["handler"] := null;
__n469 := {  };
__n469["type"] := "BlockStatement";
__n471 := {  };
__n471["type"] := "ExpressionStatement";
__n472 := {  };
__n472["type"] := "AssignmentExpression";
__n472["operator"] := "=";
__n473 := {  };
__n473["type"] := "Identifier";
__n473["name"] := "c7";
__n472["left"] := __n473;
__n474 := {  };
__n474["type"] := "Literal";
__n474["value"] := 1.;
__n474["raw"] := "1";
__n472["right"] := __n474;
__n471["expression"] := __n472;
__n475 := {  };
__n475["type"] := "ReturnStatement";
__n476 := {  };
__n476["type"] := "Literal";
__n476["value"] := 2.;
__n476["raw"] := "2";
__n475["argument"] := __n476;
__n470 := [ __n471, __n475 ];
__n469["body"] := __n470;
__n464["finalizer"] := __n469;
__n477 := {  };
__n477["type"] := "ReturnStatement";
__n478 := {  };
__n478["type"] := "Literal";
__n478["value"] := 3.;
__n478["raw"] := "3";
__n477["argument"] := __n478;
__n463 := [ __n464, __n477 ];
__n462["body"] := __n463;
__n479 := [  ];
__n462["variableDeclarations"] := __n479;
__n480 := [  ];
__n462["functionDeclarations"] := __n480;
__n462["codeType"] := "function";
__n462["strict"] := false;
__n459["body"] := __n462;
__n459["generator"] := false;
__n459["async"] := false;
__n459["expression"] := false;
__n481 := {  };
__n481["type"] := "FunctionDeclaration";
__n482 := {  };
__n482["type"] := "Identifier";
__n482["name"] := "myFunction8";
__n481["id"] := __n482;
__n483 := [  ];
__n481["params"] := __n483;
__n484 := {  };
__n484["type"] := "BlockStatement";
__n486 := {  };
__n486["type"] := "TryStatement";
__n487 := {  };
__n487["type"] := "BlockStatement";
__n489 := {  };
__n489["type"] := "ThrowStatement";
__n490 := {  };
__n490["type"] := "Literal";
__n490["value"] := "ex1";
__n490["raw"] := "\"ex1\"";
__n489["argument"] := __n490;
__n488 := [ __n489 ];
__n487["body"] := __n488;
__n486["block"] := __n487;
__n486["handler"] := null;
__n491 := {  };
__n491["type"] := "BlockStatement";
__n493 := {  };
__n493["type"] := "ExpressionStatement";
__n494 := {  };
__n494["type"] := "AssignmentExpression";
__n494["operator"] := "=";
__n495 := {  };
__n495["type"] := "Identifier";
__n495["name"] := "c8";
__n494["left"] := __n495;
__n496 := {  };
__n496["type"] := "Literal";
__n496["value"] := 1.;
__n496["raw"] := "1";
__n494["right"] := __n496;
__n493["expression"] := __n494;
__n497 := {  };
__n497["type"] := "ReturnStatement";
__n498 := {  };
__n498["type"] := "Literal";
__n498["value"] := 2.;
__n498["raw"] := "2";
__n497["argument"] := __n498;
__n492 := [ __n493, __n497 ];
__n491["body"] := __n492;
__n486["finalizer"] := __n491;
__n499 := {  };
__n499["type"] := "ReturnStatement";
__n500 := {  };
__n500["type"] := "Literal";
__n500["value"] := 3.;
__n500["raw"] := "3";
__n499["argument"] := __n500;
__n485 := [ __n486, __n499 ];
__n484["body"] := __n485;
__n501 := [  ];
__n484["variableDeclarations"] := __n501;
__n502 := [  ];
__n484["functionDeclarations"] := __n502;
__n484["codeType"] := "function";
__n484["strict"] := false;
__n481["body"] := __n484;
__n481["generator"] := false;
__n481["async"] := false;
__n481["expression"] := false;
__n322 := [ __n323, __n343, __n365, __n385, __n409, __n433, __n459, __n481 ];
__n0["functionDeclarations"] := __n322;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}