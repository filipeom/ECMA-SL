function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "c1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "myFunction1";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "x1";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "myFunction1";
__n13["callee"] := __n14;
__n15 := [  ];
__n13["arguments"] := __n15;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n16 := {  };
__n16["type"] := "IfStatement";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "!==";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "x1";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n17["right"] := __n19;
__n16["test"] := __n17;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "$ERROR";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "+";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "#1.3: x1===1. Actual: x1===";
__n27["raw"] := "'#1.3: x1===1. Actual: x1==='";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "x1";
__n26["right"] := __n28;
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n16["consequent"] := __n20;
__n16["alternate"] := null;
__n29 := {  };
__n29["type"] := "IfStatement";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "!==";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "c1";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 1.;
__n32["raw"] := "1";
__n30["right"] := __n32;
__n29["test"] := __n30;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "$ERROR";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "#1.4: \"finally\" block must be evaluated";
__n39["raw"] := "'#1.4: \"finally\" block must be evaluated'";
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["expression"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n29["consequent"] := __n33;
__n29["alternate"] := null;
__n40 := {  };
__n40["type"] := "VariableDeclaration";
__n42 := {  };
__n42["type"] := "VariableDeclarator";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "c2";
__n42["id"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 0.;
__n44["raw"] := "0";
__n42["init"] := __n44;
__n41 := [ __n42 ];
__n40["declarations"] := __n41;
__n40["kind"] := "var";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "myFunction2";
__n45["expression"] := __n46;
__n47 := {  };
__n47["type"] := "VariableDeclaration";
__n49 := {  };
__n49["type"] := "VariableDeclarator";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "x2";
__n49["id"] := __n50;
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "myFunction2";
__n51["callee"] := __n52;
__n53 := [  ];
__n51["arguments"] := __n53;
__n49["init"] := __n51;
__n48 := [ __n49 ];
__n47["declarations"] := __n48;
__n47["kind"] := "var";
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "c2";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 1.;
__n57["raw"] := "1";
__n55["right"] := __n57;
__n54["test"] := __n55;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$ERROR";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#2.1: \"finally\" block must be evaluated";
__n64["raw"] := "'#2.1: \"finally\" block must be evaluated'";
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n54["consequent"] := __n58;
__n54["alternate"] := null;
__n65 := {  };
__n65["type"] := "IfStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "x2";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 0.;
__n68["raw"] := "0";
__n66["right"] := __n68;
__n65["test"] := __n66;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "$ERROR";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "+";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "#2.2: x2===0. Actual: x2===";
__n76["raw"] := "'#2.2: x2===0. Actual: x2==='";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "x2";
__n75["right"] := __n77;
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n65["consequent"] := __n69;
__n65["alternate"] := null;
__n78 := {  };
__n78["type"] := "VariableDeclaration";
__n80 := {  };
__n80["type"] := "VariableDeclarator";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "c3";
__n80["id"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 0.;
__n82["raw"] := "0";
__n80["init"] := __n82;
__n79 := [ __n80 ];
__n78["declarations"] := __n79;
__n78["kind"] := "var";
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "myFunction3";
__n83["expression"] := __n84;
__n85 := {  };
__n85["type"] := "VariableDeclaration";
__n87 := {  };
__n87["type"] := "VariableDeclarator";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "x3";
__n87["id"] := __n88;
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "myFunction3";
__n89["callee"] := __n90;
__n91 := [  ];
__n89["arguments"] := __n91;
__n87["init"] := __n89;
__n86 := [ __n87 ];
__n85["declarations"] := __n86;
__n85["kind"] := "var";
__n92 := {  };
__n92["type"] := "IfStatement";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "!==";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "c3";
__n93["left"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 1.;
__n95["raw"] := "1";
__n93["right"] := __n95;
__n92["test"] := __n93;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "$ERROR";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "#3.1: \"finally\" block must be evaluated";
__n102["raw"] := "'#3.1: \"finally\" block must be evaluated'";
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n92["consequent"] := __n96;
__n92["alternate"] := null;
__n103 := {  };
__n103["type"] := "IfStatement";
__n104 := {  };
__n104["type"] := "BinaryExpression";
__n104["operator"] := "!==";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "x3";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 1.;
__n106["raw"] := "1";
__n104["right"] := __n106;
__n103["test"] := __n104;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "$ERROR";
__n110["callee"] := __n111;
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := "+";
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "#3.2: x3===1. Actual: x3===";
__n114["raw"] := "'#3.2: x3===1. Actual: x3==='";
__n113["left"] := __n114;
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "x3";
__n113["right"] := __n115;
__n112 := [ __n113 ];
__n110["arguments"] := __n112;
__n109["expression"] := __n110;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n103["consequent"] := __n107;
__n103["alternate"] := null;
__n116 := {  };
__n116["type"] := "VariableDeclaration";
__n118 := {  };
__n118["type"] := "VariableDeclarator";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "c4";
__n118["id"] := __n119;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := 0.;
__n120["raw"] := "0";
__n118["init"] := __n120;
__n117 := [ __n118 ];
__n116["declarations"] := __n117;
__n116["kind"] := "var";
__n121 := {  };
__n121["type"] := "ExpressionStatement";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "myFunction4";
__n121["expression"] := __n122;
__n123 := {  };
__n123["type"] := "TryStatement";
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "VariableDeclaration";
__n128 := {  };
__n128["type"] := "VariableDeclarator";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "x4";
__n128["id"] := __n129;
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "myFunction4";
__n130["callee"] := __n131;
__n132 := [  ];
__n130["arguments"] := __n132;
__n128["init"] := __n130;
__n127 := [ __n128 ];
__n126["declarations"] := __n127;
__n126["kind"] := "var";
__n133 := {  };
__n133["type"] := "ExpressionStatement";
__n134 := {  };
__n134["type"] := "CallExpression";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "$ERROR";
__n134["callee"] := __n135;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "#4.1: Throwing exception inside function lead to throwing exception outside this function";
__n137["raw"] := "'#4.1: Throwing exception inside function lead to throwing exception outside this function'";
__n136 := [ __n137 ];
__n134["arguments"] := __n136;
__n133["expression"] := __n134;
__n125 := [ __n126, __n133 ];
__n124["body"] := __n125;
__n123["block"] := __n124;
__n138 := {  };
__n138["type"] := "CatchClause";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "e";
__n138["param"] := __n139;
__n140 := {  };
__n140["type"] := "BlockStatement";
__n142 := {  };
__n142["type"] := "IfStatement";
__n143 := {  };
__n143["type"] := "BinaryExpression";
__n143["operator"] := "===";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "e";
__n143["left"] := __n144;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "ex1";
__n145["raw"] := "\"ex1\"";
__n143["right"] := __n145;
__n142["test"] := __n143;
__n146 := {  };
__n146["type"] := "BlockStatement";
__n148 := {  };
__n148["type"] := "ExpressionStatement";
__n149 := {  };
__n149["type"] := "CallExpression";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "$ERROR";
__n149["callee"] := __n150;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := "#4.2: Exception !== \"ex1\". Actual: catch previous exception";
__n152["raw"] := "'#4.2: Exception !== \"ex1\". Actual: catch previous exception'";
__n151 := [ __n152 ];
__n149["arguments"] := __n151;
__n148["expression"] := __n149;
__n147 := [ __n148 ];
__n146["body"] := __n147;
__n142["consequent"] := __n146;
__n142["alternate"] := null;
__n153 := {  };
__n153["type"] := "IfStatement";
__n154 := {  };
__n154["type"] := "BinaryExpression";
__n154["operator"] := "!==";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "e";
__n154["left"] := __n155;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := "ex2";
__n156["raw"] := "\"ex2\"";
__n154["right"] := __n156;
__n153["test"] := __n154;
__n157 := {  };
__n157["type"] := "BlockStatement";
__n159 := {  };
__n159["type"] := "ExpressionStatement";
__n160 := {  };
__n160["type"] := "CallExpression";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "$ERROR";
__n160["callee"] := __n161;
__n163 := {  };
__n163["type"] := "BinaryExpression";
__n163["operator"] := "+";
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := "#4.3: Exception === \"ex2\". Actual:  Exception ===";
__n164["raw"] := "'#4.3: Exception === \"ex2\". Actual:  Exception ==='";
__n163["left"] := __n164;
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "e";
__n163["right"] := __n165;
__n162 := [ __n163 ];
__n160["arguments"] := __n162;
__n159["expression"] := __n160;
__n158 := [ __n159 ];
__n157["body"] := __n158;
__n153["consequent"] := __n157;
__n153["alternate"] := null;
__n166 := {  };
__n166["type"] := "IfStatement";
__n167 := {  };
__n167["type"] := "BinaryExpression";
__n167["operator"] := "!==";
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "c4";
__n167["left"] := __n168;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := 1.;
__n169["raw"] := "1";
__n167["right"] := __n169;
__n166["test"] := __n167;
__n170 := {  };
__n170["type"] := "BlockStatement";
__n172 := {  };
__n172["type"] := "ExpressionStatement";
__n173 := {  };
__n173["type"] := "CallExpression";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "$ERROR";
__n173["callee"] := __n174;
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := "#4.4: \"finally\" block must be evaluated";
__n176["raw"] := "'#4.4: \"finally\" block must be evaluated'";
__n175 := [ __n176 ];
__n173["arguments"] := __n175;
__n172["expression"] := __n173;
__n171 := [ __n172 ];
__n170["body"] := __n171;
__n166["consequent"] := __n170;
__n166["alternate"] := null;
__n141 := [ __n142, __n153, __n166 ];
__n140["body"] := __n141;
__n138["body"] := __n140;
__n123["handler"] := __n138;
__n123["finalizer"] := null;
__n177 := {  };
__n177["type"] := "VariableDeclaration";
__n179 := {  };
__n179["type"] := "VariableDeclarator";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "c5";
__n179["id"] := __n180;
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := 0.;
__n181["raw"] := "0";
__n179["init"] := __n181;
__n178 := [ __n179 ];
__n177["declarations"] := __n178;
__n177["kind"] := "var";
__n182 := {  };
__n182["type"] := "ExpressionStatement";
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "myFunction5";
__n182["expression"] := __n183;
__n184 := {  };
__n184["type"] := "TryStatement";
__n185 := {  };
__n185["type"] := "BlockStatement";
__n187 := {  };
__n187["type"] := "VariableDeclaration";
__n189 := {  };
__n189["type"] := "VariableDeclarator";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "x5";
__n189["id"] := __n190;
__n191 := {  };
__n191["type"] := "CallExpression";
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "myFunction5";
__n191["callee"] := __n192;
__n193 := [  ];
__n191["arguments"] := __n193;
__n189["init"] := __n191;
__n188 := [ __n189 ];
__n187["declarations"] := __n188;
__n187["kind"] := "var";
__n194 := {  };
__n194["type"] := "ExpressionStatement";
__n195 := {  };
__n195["type"] := "CallExpression";
__n196 := {  };
__n196["type"] := "Identifier";
__n196["name"] := "$ERROR";
__n195["callee"] := __n196;
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := "#5.1: Throwing exception inside function lead to throwing exception outside this function";
__n198["raw"] := "'#5.1: Throwing exception inside function lead to throwing exception outside this function'";
__n197 := [ __n198 ];
__n195["arguments"] := __n197;
__n194["expression"] := __n195;
__n186 := [ __n187, __n194 ];
__n185["body"] := __n186;
__n184["block"] := __n185;
__n199 := {  };
__n199["type"] := "CatchClause";
__n200 := {  };
__n200["type"] := "Identifier";
__n200["name"] := "e";
__n199["param"] := __n200;
__n201 := {  };
__n201["type"] := "BlockStatement";
__n203 := {  };
__n203["type"] := "IfStatement";
__n204 := {  };
__n204["type"] := "BinaryExpression";
__n204["operator"] := "===";
__n205 := {  };
__n205["type"] := "Identifier";
__n205["name"] := "e";
__n204["left"] := __n205;
__n206 := {  };
__n206["type"] := "Literal";
__n206["value"] := "ex1";
__n206["raw"] := "\"ex1\"";
__n204["right"] := __n206;
__n203["test"] := __n204;
__n207 := {  };
__n207["type"] := "BlockStatement";
__n209 := {  };
__n209["type"] := "ExpressionStatement";
__n210 := {  };
__n210["type"] := "CallExpression";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "$ERROR";
__n210["callee"] := __n211;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := "#5.2: Exception !== \"ex1\". Actual: catch previous exception";
__n213["raw"] := "'#5.2: Exception !== \"ex1\". Actual: catch previous exception'";
__n212 := [ __n213 ];
__n210["arguments"] := __n212;
__n209["expression"] := __n210;
__n208 := [ __n209 ];
__n207["body"] := __n208;
__n203["consequent"] := __n207;
__n203["alternate"] := null;
__n214 := {  };
__n214["type"] := "IfStatement";
__n215 := {  };
__n215["type"] := "BinaryExpression";
__n215["operator"] := "!==";
__n216 := {  };
__n216["type"] := "Identifier";
__n216["name"] := "e";
__n215["left"] := __n216;
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := "ex2";
__n217["raw"] := "\"ex2\"";
__n215["right"] := __n217;
__n214["test"] := __n215;
__n218 := {  };
__n218["type"] := "BlockStatement";
__n220 := {  };
__n220["type"] := "ExpressionStatement";
__n221 := {  };
__n221["type"] := "CallExpression";
__n222 := {  };
__n222["type"] := "Identifier";
__n222["name"] := "$ERROR";
__n221["callee"] := __n222;
__n224 := {  };
__n224["type"] := "BinaryExpression";
__n224["operator"] := "+";
__n225 := {  };
__n225["type"] := "Literal";
__n225["value"] := "#5.3: Exception === \"ex2\". Actual:  Exception ===";
__n225["raw"] := "'#5.3: Exception === \"ex2\". Actual:  Exception ==='";
__n224["left"] := __n225;
__n226 := {  };
__n226["type"] := "Identifier";
__n226["name"] := "e";
__n224["right"] := __n226;
__n223 := [ __n224 ];
__n221["arguments"] := __n223;
__n220["expression"] := __n221;
__n219 := [ __n220 ];
__n218["body"] := __n219;
__n214["consequent"] := __n218;
__n214["alternate"] := null;
__n227 := {  };
__n227["type"] := "IfStatement";
__n228 := {  };
__n228["type"] := "BinaryExpression";
__n228["operator"] := "!==";
__n229 := {  };
__n229["type"] := "Identifier";
__n229["name"] := "c5";
__n228["left"] := __n229;
__n230 := {  };
__n230["type"] := "Literal";
__n230["value"] := 1.;
__n230["raw"] := "1";
__n228["right"] := __n230;
__n227["test"] := __n228;
__n231 := {  };
__n231["type"] := "BlockStatement";
__n233 := {  };
__n233["type"] := "ExpressionStatement";
__n234 := {  };
__n234["type"] := "CallExpression";
__n235 := {  };
__n235["type"] := "Identifier";
__n235["name"] := "$ERROR";
__n234["callee"] := __n235;
__n237 := {  };
__n237["type"] := "Literal";
__n237["value"] := "#5.4: \"finally\" block must be evaluated";
__n237["raw"] := "'#5.4: \"finally\" block must be evaluated'";
__n236 := [ __n237 ];
__n234["arguments"] := __n236;
__n233["expression"] := __n234;
__n232 := [ __n233 ];
__n231["body"] := __n232;
__n227["consequent"] := __n231;
__n227["alternate"] := null;
__n202 := [ __n203, __n214, __n227 ];
__n201["body"] := __n202;
__n199["body"] := __n201;
__n184["handler"] := __n199;
__n184["finalizer"] := null;
__n238 := {  };
__n238["type"] := "VariableDeclaration";
__n240 := {  };
__n240["type"] := "VariableDeclarator";
__n241 := {  };
__n241["type"] := "Identifier";
__n241["name"] := "c6";
__n240["id"] := __n241;
__n242 := {  };
__n242["type"] := "Literal";
__n242["value"] := 0.;
__n242["raw"] := "0";
__n240["init"] := __n242;
__n239 := [ __n240 ];
__n238["declarations"] := __n239;
__n238["kind"] := "var";
__n243 := {  };
__n243["type"] := "ExpressionStatement";
__n244 := {  };
__n244["type"] := "Identifier";
__n244["name"] := "myFunction6";
__n243["expression"] := __n244;
__n245 := {  };
__n245["type"] := "TryStatement";
__n246 := {  };
__n246["type"] := "BlockStatement";
__n248 := {  };
__n248["type"] := "VariableDeclaration";
__n250 := {  };
__n250["type"] := "VariableDeclarator";
__n251 := {  };
__n251["type"] := "Identifier";
__n251["name"] := "x6";
__n250["id"] := __n251;
__n252 := {  };
__n252["type"] := "CallExpression";
__n253 := {  };
__n253["type"] := "Identifier";
__n253["name"] := "myFunction6";
__n252["callee"] := __n253;
__n254 := [  ];
__n252["arguments"] := __n254;
__n250["init"] := __n252;
__n249 := [ __n250 ];
__n248["declarations"] := __n249;
__n248["kind"] := "var";
__n255 := {  };
__n255["type"] := "ExpressionStatement";
__n256 := {  };
__n256["type"] := "CallExpression";
__n257 := {  };
__n257["type"] := "Identifier";
__n257["name"] := "$ERROR";
__n256["callee"] := __n257;
__n259 := {  };
__n259["type"] := "Literal";
__n259["value"] := "#6.1: Throwing exception inside function lead to throwing exception outside this function";
__n259["raw"] := "'#6.1: Throwing exception inside function lead to throwing exception outside this function'";
__n258 := [ __n259 ];
__n256["arguments"] := __n258;
__n255["expression"] := __n256;
__n247 := [ __n248, __n255 ];
__n246["body"] := __n247;
__n245["block"] := __n246;
__n260 := {  };
__n260["type"] := "CatchClause";
__n261 := {  };
__n261["type"] := "Identifier";
__n261["name"] := "e";
__n260["param"] := __n261;
__n262 := {  };
__n262["type"] := "BlockStatement";
__n264 := {  };
__n264["type"] := "IfStatement";
__n265 := {  };
__n265["type"] := "BinaryExpression";
__n265["operator"] := "===";
__n266 := {  };
__n266["type"] := "Identifier";
__n266["name"] := "e";
__n265["left"] := __n266;
__n267 := {  };
__n267["type"] := "Literal";
__n267["value"] := "ex1";
__n267["raw"] := "\"ex1\"";
__n265["right"] := __n267;
__n264["test"] := __n265;
__n268 := {  };
__n268["type"] := "BlockStatement";
__n270 := {  };
__n270["type"] := "ExpressionStatement";
__n271 := {  };
__n271["type"] := "CallExpression";
__n272 := {  };
__n272["type"] := "Identifier";
__n272["name"] := "$ERROR";
__n271["callee"] := __n272;
__n274 := {  };
__n274["type"] := "Literal";
__n274["value"] := "#6.2: Exception !== \"ex1\". Actual: catch previous exception";
__n274["raw"] := "'#6.2: Exception !== \"ex1\". Actual: catch previous exception'";
__n273 := [ __n274 ];
__n271["arguments"] := __n273;
__n270["expression"] := __n271;
__n269 := [ __n270 ];
__n268["body"] := __n269;
__n264["consequent"] := __n268;
__n264["alternate"] := null;
__n275 := {  };
__n275["type"] := "IfStatement";
__n276 := {  };
__n276["type"] := "BinaryExpression";
__n276["operator"] := "===";
__n277 := {  };
__n277["type"] := "Identifier";
__n277["name"] := "e";
__n276["left"] := __n277;
__n278 := {  };
__n278["type"] := "Literal";
__n278["value"] := "ex2";
__n278["raw"] := "\"ex2\"";
__n276["right"] := __n278;
__n275["test"] := __n276;
__n279 := {  };
__n279["type"] := "BlockStatement";
__n281 := {  };
__n281["type"] := "ExpressionStatement";
__n282 := {  };
__n282["type"] := "CallExpression";
__n283 := {  };
__n283["type"] := "Identifier";
__n283["name"] := "$ERROR";
__n282["callee"] := __n283;
__n285 := {  };
__n285["type"] := "Literal";
__n285["value"] := "#6.3: Exception !== \"ex2\". Actual: catch previous exception";
__n285["raw"] := "'#6.3: Exception !== \"ex2\". Actual: catch previous exception'";
__n284 := [ __n285 ];
__n282["arguments"] := __n284;
__n281["expression"] := __n282;
__n280 := [ __n281 ];
__n279["body"] := __n280;
__n275["consequent"] := __n279;
__n275["alternate"] := null;
__n286 := {  };
__n286["type"] := "IfStatement";
__n287 := {  };
__n287["type"] := "BinaryExpression";
__n287["operator"] := "!==";
__n288 := {  };
__n288["type"] := "Identifier";
__n288["name"] := "e";
__n287["left"] := __n288;
__n289 := {  };
__n289["type"] := "Literal";
__n289["value"] := "ex3";
__n289["raw"] := "\"ex3\"";
__n287["right"] := __n289;
__n286["test"] := __n287;
__n290 := {  };
__n290["type"] := "BlockStatement";
__n292 := {  };
__n292["type"] := "ExpressionStatement";
__n293 := {  };
__n293["type"] := "CallExpression";
__n294 := {  };
__n294["type"] := "Identifier";
__n294["name"] := "$ERROR";
__n293["callee"] := __n294;
__n296 := {  };
__n296["type"] := "BinaryExpression";
__n296["operator"] := "+";
__n297 := {  };
__n297["type"] := "Literal";
__n297["value"] := "#6.4: Exception === \"ex3\". Actual:  Exception ===";
__n297["raw"] := "'#6.4: Exception === \"ex3\". Actual:  Exception ==='";
__n296["left"] := __n297;
__n298 := {  };
__n298["type"] := "Identifier";
__n298["name"] := "e";
__n296["right"] := __n298;
__n295 := [ __n296 ];
__n293["arguments"] := __n295;
__n292["expression"] := __n293;
__n291 := [ __n292 ];
__n290["body"] := __n291;
__n286["consequent"] := __n290;
__n286["alternate"] := null;
__n299 := {  };
__n299["type"] := "IfStatement";
__n300 := {  };
__n300["type"] := "BinaryExpression";
__n300["operator"] := "!==";
__n301 := {  };
__n301["type"] := "Identifier";
__n301["name"] := "c6";
__n300["left"] := __n301;
__n302 := {  };
__n302["type"] := "Literal";
__n302["value"] := 1.;
__n302["raw"] := "1";
__n300["right"] := __n302;
__n299["test"] := __n300;
__n303 := {  };
__n303["type"] := "ExpressionStatement";
__n304 := {  };
__n304["type"] := "CallExpression";
__n305 := {  };
__n305["type"] := "Identifier";
__n305["name"] := "$ERROR";
__n304["callee"] := __n305;
__n307 := {  };
__n307["type"] := "Literal";
__n307["value"] := "#6.5: \"finally\" block must be evaluated";
__n307["raw"] := "'#6.5: \"finally\" block must be evaluated'";
__n306 := [ __n307 ];
__n304["arguments"] := __n306;
__n303["expression"] := __n304;
__n299["consequent"] := __n303;
__n299["alternate"] := null;
__n263 := [ __n264, __n275, __n286, __n299 ];
__n262["body"] := __n263;
__n260["body"] := __n262;
__n245["handler"] := __n260;
__n245["finalizer"] := null;
__n308 := {  };
__n308["type"] := "VariableDeclaration";
__n310 := {  };
__n310["type"] := "VariableDeclarator";
__n311 := {  };
__n311["type"] := "Identifier";
__n311["name"] := "c7";
__n310["id"] := __n311;
__n312 := {  };
__n312["type"] := "Literal";
__n312["value"] := 0.;
__n312["raw"] := "0";
__n310["init"] := __n312;
__n309 := [ __n310 ];
__n308["declarations"] := __n309;
__n308["kind"] := "var";
__n313 := {  };
__n313["type"] := "ExpressionStatement";
__n314 := {  };
__n314["type"] := "Identifier";
__n314["name"] := "myFunction7";
__n313["expression"] := __n314;
__n315 := {  };
__n315["type"] := "TryStatement";
__n316 := {  };
__n316["type"] := "BlockStatement";
__n318 := {  };
__n318["type"] := "VariableDeclaration";
__n320 := {  };
__n320["type"] := "VariableDeclarator";
__n321 := {  };
__n321["type"] := "Identifier";
__n321["name"] := "x7";
__n320["id"] := __n321;
__n322 := {  };
__n322["type"] := "CallExpression";
__n323 := {  };
__n323["type"] := "Identifier";
__n323["name"] := "myFunction7";
__n322["callee"] := __n323;
__n324 := [  ];
__n322["arguments"] := __n324;
__n320["init"] := __n322;
__n319 := [ __n320 ];
__n318["declarations"] := __n319;
__n318["kind"] := "var";
__n325 := {  };
__n325["type"] := "IfStatement";
__n326 := {  };
__n326["type"] := "BinaryExpression";
__n326["operator"] := "!==";
__n327 := {  };
__n327["type"] := "Identifier";
__n327["name"] := "x7";
__n326["left"] := __n327;
__n328 := {  };
__n328["type"] := "Literal";
__n328["value"] := 2.;
__n328["raw"] := "2";
__n326["right"] := __n328;
__n325["test"] := __n326;
__n329 := {  };
__n329["type"] := "ExpressionStatement";
__n330 := {  };
__n330["type"] := "CallExpression";
__n331 := {  };
__n331["type"] := "Identifier";
__n331["name"] := "$ERROR";
__n330["callee"] := __n331;
__n333 := {  };
__n333["type"] := "BinaryExpression";
__n333["operator"] := "+";
__n334 := {  };
__n334["type"] := "Literal";
__n334["value"] := "#7.1: x7===2. Actual: x7===";
__n334["raw"] := "'#7.1: x7===2. Actual: x7==='";
__n333["left"] := __n334;
__n335 := {  };
__n335["type"] := "Identifier";
__n335["name"] := "x7";
__n333["right"] := __n335;
__n332 := [ __n333 ];
__n330["arguments"] := __n332;
__n329["expression"] := __n330;
__n325["consequent"] := __n329;
__n325["alternate"] := null;
__n317 := [ __n318, __n325 ];
__n316["body"] := __n317;
__n315["block"] := __n316;
__n336 := {  };
__n336["type"] := "CatchClause";
__n337 := {  };
__n337["type"] := "Identifier";
__n337["name"] := "e";
__n336["param"] := __n337;
__n338 := {  };
__n338["type"] := "BlockStatement";
__n339 := [  ];
__n338["body"] := __n339;
__n336["body"] := __n338;
__n315["handler"] := __n336;
__n315["finalizer"] := null;
__n340 := {  };
__n340["type"] := "IfStatement";
__n341 := {  };
__n341["type"] := "BinaryExpression";
__n341["operator"] := "!==";
__n342 := {  };
__n342["type"] := "Identifier";
__n342["name"] := "c7";
__n341["left"] := __n342;
__n343 := {  };
__n343["type"] := "Literal";
__n343["value"] := 1.;
__n343["raw"] := "1";
__n341["right"] := __n343;
__n340["test"] := __n341;
__n344 := {  };
__n344["type"] := "ExpressionStatement";
__n345 := {  };
__n345["type"] := "CallExpression";
__n346 := {  };
__n346["type"] := "Identifier";
__n346["name"] := "$ERROR";
__n345["callee"] := __n346;
__n348 := {  };
__n348["type"] := "Literal";
__n348["value"] := "#7.2: \"finally\" block must be evaluated";
__n348["raw"] := "'#7.2: \"finally\" block must be evaluated'";
__n347 := [ __n348 ];
__n345["arguments"] := __n347;
__n344["expression"] := __n345;
__n340["consequent"] := __n344;
__n340["alternate"] := null;
__n1 := [ __n2, __n7, __n9, __n16, __n29, __n40, __n45, __n47, __n54, __n65, __n78, __n83, __n85, __n92, __n103, __n116, __n121, __n123, __n177, __n182, __n184, __n238, __n243, __n245, __n308, __n313, __n315, __n340 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n349 := [ "c1", "x1", "c2", "x2", "c3", "x3", "c4", "x4", "c5", "x5", "c6", "x6", "c7", "x7" ];
__n0["variableDeclarations"] := __n349;
__n351 := {  };
__n351["type"] := "FunctionDeclaration";
__n352 := {  };
__n352["type"] := "Identifier";
__n352["name"] := "myFunction1";
__n351["id"] := __n352;
__n353 := [  ];
__n351["params"] := __n353;
__n354 := {  };
__n354["type"] := "BlockStatement";
__n356 := {  };
__n356["type"] := "TryStatement";
__n357 := {  };
__n357["type"] := "BlockStatement";
__n359 := {  };
__n359["type"] := "ReturnStatement";
__n360 := {  };
__n360["type"] := "Literal";
__n360["value"] := 1.;
__n360["raw"] := "1";
__n359["argument"] := __n360;
__n358 := [ __n359 ];
__n357["body"] := __n358;
__n356["block"] := __n357;
__n361 := {  };
__n361["type"] := "CatchClause";
__n362 := {  };
__n362["type"] := "Identifier";
__n362["name"] := "err";
__n361["param"] := __n362;
__n363 := {  };
__n363["type"] := "BlockStatement";
__n365 := {  };
__n365["type"] := "ExpressionStatement";
__n366 := {  };
__n366["type"] := "CallExpression";
__n367 := {  };
__n367["type"] := "Identifier";
__n367["name"] := "$ERROR";
__n366["callee"] := __n367;
__n369 := {  };
__n369["type"] := "Literal";
__n369["value"] := "#1.1: \"return 1\" inside function does not lead to throwing exception";
__n369["raw"] := "'#1.1: \"return 1\" inside function does not lead to throwing exception'";
__n368 := [ __n369 ];
__n366["arguments"] := __n368;
__n365["expression"] := __n366;
__n370 := {  };
__n370["type"] := "ReturnStatement";
__n371 := {  };
__n371["type"] := "Literal";
__n371["value"] := 0.;
__n371["raw"] := "0";
__n370["argument"] := __n371;
__n364 := [ __n365, __n370 ];
__n363["body"] := __n364;
__n361["body"] := __n363;
__n356["handler"] := __n361;
__n372 := {  };
__n372["type"] := "BlockStatement";
__n374 := {  };
__n374["type"] := "ExpressionStatement";
__n375 := {  };
__n375["type"] := "AssignmentExpression";
__n375["operator"] := "=";
__n376 := {  };
__n376["type"] := "Identifier";
__n376["name"] := "c1";
__n375["left"] := __n376;
__n377 := {  };
__n377["type"] := "Literal";
__n377["value"] := 1.;
__n377["raw"] := "1";
__n375["right"] := __n377;
__n374["expression"] := __n375;
__n373 := [ __n374 ];
__n372["body"] := __n373;
__n356["finalizer"] := __n372;
__n378 := {  };
__n378["type"] := "ReturnStatement";
__n379 := {  };
__n379["type"] := "Literal";
__n379["value"] := 2.;
__n379["raw"] := "2";
__n378["argument"] := __n379;
__n355 := [ __n356, __n378 ];
__n354["body"] := __n355;
__n380 := [  ];
__n354["variableDeclarations"] := __n380;
__n381 := [  ];
__n354["functionDeclarations"] := __n381;
__n354["codeType"] := "function";
__n354["strict"] := false;
__n351["body"] := __n354;
__n351["generator"] := false;
__n351["expression"] := false;
__n351["async"] := false;
__n382 := {  };
__n382["type"] := "FunctionDeclaration";
__n383 := {  };
__n383["type"] := "Identifier";
__n383["name"] := "myFunction2";
__n382["id"] := __n383;
__n384 := [  ];
__n382["params"] := __n384;
__n385 := {  };
__n385["type"] := "BlockStatement";
__n387 := {  };
__n387["type"] := "TryStatement";
__n388 := {  };
__n388["type"] := "BlockStatement";
__n390 := {  };
__n390["type"] := "ThrowStatement";
__n391 := {  };
__n391["type"] := "Literal";
__n391["value"] := "exc";
__n391["raw"] := "\"exc\"";
__n390["argument"] := __n391;
__n392 := {  };
__n392["type"] := "ReturnStatement";
__n393 := {  };
__n393["type"] := "Literal";
__n393["value"] := 1.;
__n393["raw"] := "1";
__n392["argument"] := __n393;
__n389 := [ __n390, __n392 ];
__n388["body"] := __n389;
__n387["block"] := __n388;
__n394 := {  };
__n394["type"] := "CatchClause";
__n395 := {  };
__n395["type"] := "Identifier";
__n395["name"] := "err";
__n394["param"] := __n395;
__n396 := {  };
__n396["type"] := "BlockStatement";
__n398 := {  };
__n398["type"] := "ReturnStatement";
__n399 := {  };
__n399["type"] := "Literal";
__n399["value"] := 0.;
__n399["raw"] := "0";
__n398["argument"] := __n399;
__n397 := [ __n398 ];
__n396["body"] := __n397;
__n394["body"] := __n396;
__n387["handler"] := __n394;
__n400 := {  };
__n400["type"] := "BlockStatement";
__n402 := {  };
__n402["type"] := "ExpressionStatement";
__n403 := {  };
__n403["type"] := "AssignmentExpression";
__n403["operator"] := "=";
__n404 := {  };
__n404["type"] := "Identifier";
__n404["name"] := "c2";
__n403["left"] := __n404;
__n405 := {  };
__n405["type"] := "Literal";
__n405["value"] := 1.;
__n405["raw"] := "1";
__n403["right"] := __n405;
__n402["expression"] := __n403;
__n401 := [ __n402 ];
__n400["body"] := __n401;
__n387["finalizer"] := __n400;
__n406 := {  };
__n406["type"] := "ReturnStatement";
__n407 := {  };
__n407["type"] := "Literal";
__n407["value"] := 2.;
__n407["raw"] := "2";
__n406["argument"] := __n407;
__n386 := [ __n387, __n406 ];
__n385["body"] := __n386;
__n408 := [  ];
__n385["variableDeclarations"] := __n408;
__n409 := [  ];
__n385["functionDeclarations"] := __n409;
__n385["codeType"] := "function";
__n385["strict"] := false;
__n382["body"] := __n385;
__n382["generator"] := false;
__n382["expression"] := false;
__n382["async"] := false;
__n410 := {  };
__n410["type"] := "FunctionDeclaration";
__n411 := {  };
__n411["type"] := "Identifier";
__n411["name"] := "myFunction3";
__n410["id"] := __n411;
__n412 := [  ];
__n410["params"] := __n412;
__n413 := {  };
__n413["type"] := "BlockStatement";
__n415 := {  };
__n415["type"] := "TryStatement";
__n416 := {  };
__n416["type"] := "BlockStatement";
__n418 := {  };
__n418["type"] := "ReturnStatement";
__n419 := {  };
__n419["type"] := "Identifier";
__n419["name"] := "someValue";
__n418["argument"] := __n419;
__n417 := [ __n418 ];
__n416["body"] := __n417;
__n415["block"] := __n416;
__n420 := {  };
__n420["type"] := "CatchClause";
__n421 := {  };
__n421["type"] := "Identifier";
__n421["name"] := "err";
__n420["param"] := __n421;
__n422 := {  };
__n422["type"] := "BlockStatement";
__n424 := {  };
__n424["type"] := "ReturnStatement";
__n425 := {  };
__n425["type"] := "Literal";
__n425["value"] := 1.;
__n425["raw"] := "1";
__n424["argument"] := __n425;
__n423 := [ __n424 ];
__n422["body"] := __n423;
__n420["body"] := __n422;
__n415["handler"] := __n420;
__n426 := {  };
__n426["type"] := "BlockStatement";
__n428 := {  };
__n428["type"] := "ExpressionStatement";
__n429 := {  };
__n429["type"] := "AssignmentExpression";
__n429["operator"] := "=";
__n430 := {  };
__n430["type"] := "Identifier";
__n430["name"] := "c3";
__n429["left"] := __n430;
__n431 := {  };
__n431["type"] := "Literal";
__n431["value"] := 1.;
__n431["raw"] := "1";
__n429["right"] := __n431;
__n428["expression"] := __n429;
__n427 := [ __n428 ];
__n426["body"] := __n427;
__n415["finalizer"] := __n426;
__n432 := {  };
__n432["type"] := "ReturnStatement";
__n433 := {  };
__n433["type"] := "Literal";
__n433["value"] := 2.;
__n433["raw"] := "2";
__n432["argument"] := __n433;
__n414 := [ __n415, __n432 ];
__n413["body"] := __n414;
__n434 := [  ];
__n413["variableDeclarations"] := __n434;
__n435 := [  ];
__n413["functionDeclarations"] := __n435;
__n413["codeType"] := "function";
__n413["strict"] := false;
__n410["body"] := __n413;
__n410["generator"] := false;
__n410["expression"] := false;
__n410["async"] := false;
__n436 := {  };
__n436["type"] := "FunctionDeclaration";
__n437 := {  };
__n437["type"] := "Identifier";
__n437["name"] := "myFunction4";
__n436["id"] := __n437;
__n438 := [  ];
__n436["params"] := __n438;
__n439 := {  };
__n439["type"] := "BlockStatement";
__n441 := {  };
__n441["type"] := "TryStatement";
__n442 := {  };
__n442["type"] := "BlockStatement";
__n444 := {  };
__n444["type"] := "ThrowStatement";
__n445 := {  };
__n445["type"] := "Literal";
__n445["value"] := "ex1";
__n445["raw"] := "\"ex1\"";
__n444["argument"] := __n445;
__n446 := {  };
__n446["type"] := "ReturnStatement";
__n447 := {  };
__n447["type"] := "Literal";
__n447["value"] := 1.;
__n447["raw"] := "1";
__n446["argument"] := __n447;
__n443 := [ __n444, __n446 ];
__n442["body"] := __n443;
__n441["block"] := __n442;
__n448 := {  };
__n448["type"] := "CatchClause";
__n449 := {  };
__n449["type"] := "Identifier";
__n449["name"] := "err";
__n448["param"] := __n449;
__n450 := {  };
__n450["type"] := "BlockStatement";
__n452 := {  };
__n452["type"] := "ThrowStatement";
__n453 := {  };
__n453["type"] := "Literal";
__n453["value"] := "ex2";
__n453["raw"] := "\"ex2\"";
__n452["argument"] := __n453;
__n454 := {  };
__n454["type"] := "ReturnStatement";
__n455 := {  };
__n455["type"] := "Literal";
__n455["value"] := 0.;
__n455["raw"] := "0";
__n454["argument"] := __n455;
__n451 := [ __n452, __n454 ];
__n450["body"] := __n451;
__n448["body"] := __n450;
__n441["handler"] := __n448;
__n456 := {  };
__n456["type"] := "BlockStatement";
__n458 := {  };
__n458["type"] := "ExpressionStatement";
__n459 := {  };
__n459["type"] := "AssignmentExpression";
__n459["operator"] := "=";
__n460 := {  };
__n460["type"] := "Identifier";
__n460["name"] := "c4";
__n459["left"] := __n460;
__n461 := {  };
__n461["type"] := "Literal";
__n461["value"] := 1.;
__n461["raw"] := "1";
__n459["right"] := __n461;
__n458["expression"] := __n459;
__n457 := [ __n458 ];
__n456["body"] := __n457;
__n441["finalizer"] := __n456;
__n462 := {  };
__n462["type"] := "ReturnStatement";
__n463 := {  };
__n463["type"] := "Literal";
__n463["value"] := 2.;
__n463["raw"] := "2";
__n462["argument"] := __n463;
__n440 := [ __n441, __n462 ];
__n439["body"] := __n440;
__n464 := [  ];
__n439["variableDeclarations"] := __n464;
__n465 := [  ];
__n439["functionDeclarations"] := __n465;
__n439["codeType"] := "function";
__n439["strict"] := false;
__n436["body"] := __n439;
__n436["generator"] := false;
__n436["expression"] := false;
__n436["async"] := false;
__n466 := {  };
__n466["type"] := "FunctionDeclaration";
__n467 := {  };
__n467["type"] := "Identifier";
__n467["name"] := "myFunction5";
__n466["id"] := __n467;
__n468 := [  ];
__n466["params"] := __n468;
__n469 := {  };
__n469["type"] := "BlockStatement";
__n471 := {  };
__n471["type"] := "TryStatement";
__n472 := {  };
__n472["type"] := "BlockStatement";
__n474 := {  };
__n474["type"] := "ThrowStatement";
__n475 := {  };
__n475["type"] := "Literal";
__n475["value"] := "ex1";
__n475["raw"] := "\"ex1\"";
__n474["argument"] := __n475;
__n476 := {  };
__n476["type"] := "ReturnStatement";
__n477 := {  };
__n477["type"] := "Literal";
__n477["value"] := 1.;
__n477["raw"] := "1";
__n476["argument"] := __n477;
__n473 := [ __n474, __n476 ];
__n472["body"] := __n473;
__n471["block"] := __n472;
__n478 := {  };
__n478["type"] := "CatchClause";
__n479 := {  };
__n479["type"] := "Identifier";
__n479["name"] := "err";
__n478["param"] := __n479;
__n480 := {  };
__n480["type"] := "BlockStatement";
__n482 := {  };
__n482["type"] := "ReturnStatement";
__n483 := {  };
__n483["type"] := "Literal";
__n483["value"] := 0.;
__n483["raw"] := "0";
__n482["argument"] := __n483;
__n481 := [ __n482 ];
__n480["body"] := __n481;
__n478["body"] := __n480;
__n471["handler"] := __n478;
__n484 := {  };
__n484["type"] := "BlockStatement";
__n486 := {  };
__n486["type"] := "ExpressionStatement";
__n487 := {  };
__n487["type"] := "AssignmentExpression";
__n487["operator"] := "=";
__n488 := {  };
__n488["type"] := "Identifier";
__n488["name"] := "c5";
__n487["left"] := __n488;
__n489 := {  };
__n489["type"] := "Literal";
__n489["value"] := 1.;
__n489["raw"] := "1";
__n487["right"] := __n489;
__n486["expression"] := __n487;
__n490 := {  };
__n490["type"] := "ThrowStatement";
__n491 := {  };
__n491["type"] := "Literal";
__n491["value"] := "ex2";
__n491["raw"] := "\"ex2\"";
__n490["argument"] := __n491;
__n485 := [ __n486, __n490 ];
__n484["body"] := __n485;
__n471["finalizer"] := __n484;
__n492 := {  };
__n492["type"] := "ReturnStatement";
__n493 := {  };
__n493["type"] := "Literal";
__n493["value"] := 2.;
__n493["raw"] := "2";
__n492["argument"] := __n493;
__n470 := [ __n471, __n492 ];
__n469["body"] := __n470;
__n494 := [  ];
__n469["variableDeclarations"] := __n494;
__n495 := [  ];
__n469["functionDeclarations"] := __n495;
__n469["codeType"] := "function";
__n469["strict"] := false;
__n466["body"] := __n469;
__n466["generator"] := false;
__n466["expression"] := false;
__n466["async"] := false;
__n496 := {  };
__n496["type"] := "FunctionDeclaration";
__n497 := {  };
__n497["type"] := "Identifier";
__n497["name"] := "myFunction6";
__n496["id"] := __n497;
__n498 := [  ];
__n496["params"] := __n498;
__n499 := {  };
__n499["type"] := "BlockStatement";
__n501 := {  };
__n501["type"] := "TryStatement";
__n502 := {  };
__n502["type"] := "BlockStatement";
__n504 := {  };
__n504["type"] := "ThrowStatement";
__n505 := {  };
__n505["type"] := "Literal";
__n505["value"] := "ex1";
__n505["raw"] := "\"ex1\"";
__n504["argument"] := __n505;
__n506 := {  };
__n506["type"] := "ReturnStatement";
__n507 := {  };
__n507["type"] := "Literal";
__n507["value"] := 1.;
__n507["raw"] := "1";
__n506["argument"] := __n507;
__n503 := [ __n504, __n506 ];
__n502["body"] := __n503;
__n501["block"] := __n502;
__n508 := {  };
__n508["type"] := "CatchClause";
__n509 := {  };
__n509["type"] := "Identifier";
__n509["name"] := "err";
__n508["param"] := __n509;
__n510 := {  };
__n510["type"] := "BlockStatement";
__n512 := {  };
__n512["type"] := "ThrowStatement";
__n513 := {  };
__n513["type"] := "Literal";
__n513["value"] := "ex2";
__n513["raw"] := "\"ex2\"";
__n512["argument"] := __n513;
__n514 := {  };
__n514["type"] := "ReturnStatement";
__n515 := {  };
__n515["type"] := "Literal";
__n515["value"] := 0.;
__n515["raw"] := "0";
__n514["argument"] := __n515;
__n511 := [ __n512, __n514 ];
__n510["body"] := __n511;
__n508["body"] := __n510;
__n501["handler"] := __n508;
__n516 := {  };
__n516["type"] := "BlockStatement";
__n518 := {  };
__n518["type"] := "ExpressionStatement";
__n519 := {  };
__n519["type"] := "AssignmentExpression";
__n519["operator"] := "=";
__n520 := {  };
__n520["type"] := "Identifier";
__n520["name"] := "c6";
__n519["left"] := __n520;
__n521 := {  };
__n521["type"] := "Literal";
__n521["value"] := 1.;
__n521["raw"] := "1";
__n519["right"] := __n521;
__n518["expression"] := __n519;
__n522 := {  };
__n522["type"] := "ThrowStatement";
__n523 := {  };
__n523["type"] := "Literal";
__n523["value"] := "ex3";
__n523["raw"] := "\"ex3\"";
__n522["argument"] := __n523;
__n517 := [ __n518, __n522 ];
__n516["body"] := __n517;
__n501["finalizer"] := __n516;
__n524 := {  };
__n524["type"] := "ReturnStatement";
__n525 := {  };
__n525["type"] := "Literal";
__n525["value"] := 2.;
__n525["raw"] := "2";
__n524["argument"] := __n525;
__n500 := [ __n501, __n524 ];
__n499["body"] := __n500;
__n526 := [  ];
__n499["variableDeclarations"] := __n526;
__n527 := [  ];
__n499["functionDeclarations"] := __n527;
__n499["codeType"] := "function";
__n499["strict"] := false;
__n496["body"] := __n499;
__n496["generator"] := false;
__n496["expression"] := false;
__n496["async"] := false;
__n528 := {  };
__n528["type"] := "FunctionDeclaration";
__n529 := {  };
__n529["type"] := "Identifier";
__n529["name"] := "myFunction7";
__n528["id"] := __n529;
__n530 := [  ];
__n528["params"] := __n530;
__n531 := {  };
__n531["type"] := "BlockStatement";
__n533 := {  };
__n533["type"] := "TryStatement";
__n534 := {  };
__n534["type"] := "BlockStatement";
__n536 := {  };
__n536["type"] := "ThrowStatement";
__n537 := {  };
__n537["type"] := "Literal";
__n537["value"] := "ex1";
__n537["raw"] := "\"ex1\"";
__n536["argument"] := __n537;
__n538 := {  };
__n538["type"] := "ReturnStatement";
__n539 := {  };
__n539["type"] := "Literal";
__n539["value"] := 1.;
__n539["raw"] := "1";
__n538["argument"] := __n539;
__n535 := [ __n536, __n538 ];
__n534["body"] := __n535;
__n533["block"] := __n534;
__n540 := {  };
__n540["type"] := "CatchClause";
__n541 := {  };
__n541["type"] := "Identifier";
__n541["name"] := "err";
__n540["param"] := __n541;
__n542 := {  };
__n542["type"] := "BlockStatement";
__n544 := {  };
__n544["type"] := "ThrowStatement";
__n545 := {  };
__n545["type"] := "Literal";
__n545["value"] := "ex2";
__n545["raw"] := "\"ex2\"";
__n544["argument"] := __n545;
__n546 := {  };
__n546["type"] := "ReturnStatement";
__n547 := {  };
__n547["type"] := "Literal";
__n547["value"] := 0.;
__n547["raw"] := "0";
__n546["argument"] := __n547;
__n543 := [ __n544, __n546 ];
__n542["body"] := __n543;
__n540["body"] := __n542;
__n533["handler"] := __n540;
__n548 := {  };
__n548["type"] := "BlockStatement";
__n550 := {  };
__n550["type"] := "ExpressionStatement";
__n551 := {  };
__n551["type"] := "AssignmentExpression";
__n551["operator"] := "=";
__n552 := {  };
__n552["type"] := "Identifier";
__n552["name"] := "c7";
__n551["left"] := __n552;
__n553 := {  };
__n553["type"] := "Literal";
__n553["value"] := 1.;
__n553["raw"] := "1";
__n551["right"] := __n553;
__n550["expression"] := __n551;
__n554 := {  };
__n554["type"] := "ReturnStatement";
__n555 := {  };
__n555["type"] := "Literal";
__n555["value"] := 2.;
__n555["raw"] := "2";
__n554["argument"] := __n555;
__n549 := [ __n550, __n554 ];
__n548["body"] := __n549;
__n533["finalizer"] := __n548;
__n556 := {  };
__n556["type"] := "ReturnStatement";
__n557 := {  };
__n557["type"] := "Literal";
__n557["value"] := 3.;
__n557["raw"] := "3";
__n556["argument"] := __n557;
__n532 := [ __n533, __n556 ];
__n531["body"] := __n532;
__n558 := [  ];
__n531["variableDeclarations"] := __n558;
__n559 := [  ];
__n531["functionDeclarations"] := __n559;
__n531["codeType"] := "function";
__n531["strict"] := false;
__n528["body"] := __n531;
__n528["generator"] := false;
__n528["expression"] := false;
__n528["async"] := false;
__n350 := [ __n351, __n382, __n410, __n436, __n466, __n496, __n528 ];
__n0["functionDeclarations"] := __n350;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}