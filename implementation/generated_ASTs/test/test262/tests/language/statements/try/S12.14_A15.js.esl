function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "SwitchTest1";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "IfStatement";
__n5 := {  };
__n5["type"] := "BinaryExpression";
__n5["operator"] := "!==";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "SwitchTest1";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n5["left"] := __n6;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 4.;
__n10["raw"] := "4";
__n5["right"] := __n10;
__n4["test"] := __n5;
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "$ERROR";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "+";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "#1.3: SwitchTest1(1)===4. Actual:  SwitchTest1(1)===";
__n16["raw"] := "'#1.3: SwitchTest1(1)===4. Actual:  SwitchTest1(1)==='";
__n15["left"] := __n16;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "SwitchTest1";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 1.;
__n20["raw"] := "1";
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n15["right"] := __n17;
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n4["consequent"] := __n11;
__n4["alternate"] := null;
__n21 := {  };
__n21["type"] := "IfStatement";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "!==";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "SwitchTest1";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 4.;
__n26["raw"] := "4";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["left"] := __n23;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 64.;
__n27["raw"] := "64";
__n22["right"] := __n27;
__n21["test"] := __n22;
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "$ERROR";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "+";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "#1.4: SwitchTest1(4)===64. Actual:  SwitchTest1(4)===";
__n33["raw"] := "'#1.4: SwitchTest1(4)===64. Actual:  SwitchTest1(4)==='";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "SwitchTest1";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 4.;
__n37["raw"] := "4";
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n32["right"] := __n34;
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n21["consequent"] := __n28;
__n21["alternate"] := null;
__n38 := {  };
__n38["type"] := "VariableDeclaration";
__n40 := {  };
__n40["type"] := "VariableDeclarator";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "c2";
__n40["id"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 0.;
__n42["raw"] := "0";
__n40["init"] := __n42;
__n39 := [ __n40 ];
__n38["declarations"] := __n39;
__n38["kind"] := "var";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "SwitchTest2";
__n43["expression"] := __n44;
__n45 := {  };
__n45["type"] := "IfStatement";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "SwitchTest2";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 1.;
__n50["raw"] := "1";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["left"] := __n47;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 4.;
__n51["raw"] := "4";
__n46["right"] := __n51;
__n45["test"] := __n46;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "$ERROR";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "+";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "#2.1: SwitchTest1(1)===4. Actual:  SwitchTest1(1)===";
__n57["raw"] := "'#2.1: SwitchTest1(1)===4. Actual:  SwitchTest1(1)==='";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "SwitchTest1";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 1.;
__n61["raw"] := "1";
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n56["right"] := __n58;
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n45["consequent"] := __n52;
__n45["alternate"] := null;
__n62 := {  };
__n62["type"] := "IfStatement";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "===";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "c2";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 1.;
__n65["raw"] := "1";
__n63["right"] := __n65;
__n62["test"] := __n63;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$ERROR";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "#2.2: Evaluate finally block";
__n70["raw"] := "'#2.2: Evaluate finally block'";
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n62["consequent"] := __n66;
__n62["alternate"] := null;
__n71 := {  };
__n71["type"] := "IfStatement";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "!==";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "SwitchTest2";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 0.;
__n76["raw"] := "0";
__n75 := [ __n76 ];
__n73["arguments"] := __n75;
__n72["left"] := __n73;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 2.;
__n77["raw"] := "2";
__n72["right"] := __n77;
__n71["test"] := __n72;
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "$ERROR";
__n79["callee"] := __n80;
__n82 := {  };
__n82["type"] := "BinaryExpression";
__n82["operator"] := "+";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "#2.3: SwitchTest1(0)===2. Actual:  SwitchTest1(0)===";
__n83["raw"] := "'#2.3: SwitchTest1(0)===2. Actual:  SwitchTest1(0)==='";
__n82["left"] := __n83;
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "SwitchTest1";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 0.;
__n87["raw"] := "0";
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n82["right"] := __n84;
__n81 := [ __n82 ];
__n79["arguments"] := __n81;
__n78["expression"] := __n79;
__n71["consequent"] := __n78;
__n71["alternate"] := null;
__n88 := {  };
__n88["type"] := "IfStatement";
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "!==";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "c2";
__n89["left"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 1.;
__n91["raw"] := "1";
__n89["right"] := __n91;
__n88["test"] := __n89;
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "$ERROR";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "#2.4: \"finally\" block must be evaluated";
__n96["raw"] := "'#2.4: \"finally\" block must be evaluated'";
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n88["consequent"] := __n92;
__n88["alternate"] := null;
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "SwitchTest3";
__n97["expression"] := __n98;
__n99 := {  };
__n99["type"] := "TryStatement";
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "VariableDeclaration";
__n104 := {  };
__n104["type"] := "VariableDeclarator";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "x3";
__n104["id"] := __n105;
__n106 := {  };
__n106["type"] := "CallExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "SwitchTest3";
__n106["callee"] := __n107;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := 0.;
__n109["raw"] := "0";
__n108 := [ __n109 ];
__n106["arguments"] := __n108;
__n104["init"] := __n106;
__n103 := [ __n104 ];
__n102["declarations"] := __n103;
__n102["kind"] := "var";
__n110 := {  };
__n110["type"] := "IfStatement";
__n111 := {  };
__n111["type"] := "BinaryExpression";
__n111["operator"] := "!==";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "x3";
__n111["left"] := __n112;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 2.;
__n113["raw"] := "2";
__n111["right"] := __n113;
__n110["test"] := __n111;
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "$ERROR";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "BinaryExpression";
__n118["operator"] := "+";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "#3.1: x3===2. Actual: x3===";
__n119["raw"] := "'#3.1: x3===2. Actual: x3==='";
__n118["left"] := __n119;
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "x3";
__n118["right"] := __n120;
__n117 := [ __n118 ];
__n115["arguments"] := __n117;
__n114["expression"] := __n115;
__n110["consequent"] := __n114;
__n110["alternate"] := null;
__n101 := [ __n102, __n110 ];
__n100["body"] := __n101;
__n99["block"] := __n100;
__n121 := {  };
__n121["type"] := "CatchClause";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "e";
__n121["param"] := __n122;
__n123 := {  };
__n123["type"] := "BlockStatement";
__n125 := {  };
__n125["type"] := "ExpressionStatement";
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "$ERROR";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "#3.2: Catching exception inside function does not lead to throwing exception outside this function";
__n129["raw"] := "'#3.2: Catching exception inside function does not lead to throwing exception outside this function'";
__n128 := [ __n129 ];
__n126["arguments"] := __n128;
__n125["expression"] := __n126;
__n124 := [ __n125 ];
__n123["body"] := __n124;
__n121["body"] := __n123;
__n99["handler"] := __n121;
__n99["finalizer"] := null;
__n1 := [ __n2, __n4, __n21, __n38, __n43, __n45, __n62, __n71, __n88, __n97, __n99 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n130 := [ "c2", "x3" ];
__n0["variableDeclarations"] := __n130;
__n132 := {  };
__n132["type"] := "FunctionDeclaration";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "SwitchTest1";
__n132["id"] := __n133;
__n134 := [ "value" ];
__n132["params"] := __n134;
__n135 := {  };
__n135["type"] := "BlockStatement";
__n137 := {  };
__n137["type"] := "VariableDeclaration";
__n139 := {  };
__n139["type"] := "VariableDeclarator";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "result";
__n139["id"] := __n140;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := 0.;
__n141["raw"] := "0";
__n139["init"] := __n141;
__n138 := [ __n139 ];
__n137["declarations"] := __n138;
__n137["kind"] := "var";
__n142 := {  };
__n142["type"] := "TryStatement";
__n143 := {  };
__n143["type"] := "BlockStatement";
__n145 := {  };
__n145["type"] := "SwitchStatement";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "value";
__n145["discriminant"] := __n146;
__n149 := {  };
__n149["type"] := "SwitchCase";
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 1.;
__n150["raw"] := "1";
__n149["test"] := __n150;
__n152 := {  };
__n152["type"] := "ExpressionStatement";
__n153 := {  };
__n153["type"] := "AssignmentExpression";
__n153["operator"] := "+=";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "result";
__n153["left"] := __n154;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := 4.;
__n155["raw"] := "4";
__n153["right"] := __n155;
__n152["expression"] := __n153;
__n156 := {  };
__n156["type"] := "ThrowStatement";
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "result";
__n156["argument"] := __n157;
__n158 := {  };
__n158["type"] := "BreakStatement";
__n158["label"] := null;
__n151 := [ __n152, __n156, __n158 ];
__n149["consequent"] := __n151;
__n148 := [ __n149 ];
__n159 := {  };
__n159["type"] := "SwitchCase";
__n159["test"] := null;
__n161 := {  };
__n161["type"] := "ExpressionStatement";
__n162 := {  };
__n162["type"] := "AssignmentExpression";
__n162["operator"] := "+=";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "result";
__n162["left"] := __n163;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := 32.;
__n164["raw"] := "32";
__n162["right"] := __n164;
__n161["expression"] := __n162;
__n165 := {  };
__n165["type"] := "BreakStatement";
__n165["label"] := null;
__n160 := [ __n161, __n165 ];
__n159["consequent"] := __n160;
__n167 := {  };
__n167["type"] := "SwitchCase";
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := 4.;
__n168["raw"] := "4";
__n167["test"] := __n168;
__n170 := {  };
__n170["type"] := "ExpressionStatement";
__n171 := {  };
__n171["type"] := "AssignmentExpression";
__n171["operator"] := "+=";
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "result";
__n171["left"] := __n172;
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := 64.;
__n173["raw"] := "64";
__n171["right"] := __n173;
__n170["expression"] := __n171;
__n174 := {  };
__n174["type"] := "ThrowStatement";
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := "ex";
__n175["raw"] := "\"ex\"";
__n174["argument"] := __n175;
__n169 := [ __n170, __n174 ];
__n167["consequent"] := __n169;
__n166 := [ __n167 ];
__n147 := [ __n148, __n159, __n166 ];
__n145["cases"] := __n147;
__n176 := {  };
__n176["type"] := "ReturnStatement";
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "result";
__n176["argument"] := __n177;
__n144 := [ __n145, __n176 ];
__n143["body"] := __n144;
__n142["block"] := __n143;
__n178 := {  };
__n178["type"] := "CatchClause";
__n179 := {  };
__n179["type"] := "Identifier";
__n179["name"] := "e";
__n178["param"] := __n179;
__n180 := {  };
__n180["type"] := "BlockStatement";
__n182 := {  };
__n182["type"] := "IfStatement";
__n183 := {  };
__n183["type"] := "LogicalExpression";
__n183["operator"] := "&&";
__n184 := {  };
__n184["type"] := "BinaryExpression";
__n184["operator"] := "===";
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "value";
__n184["left"] := __n185;
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := 1.;
__n186["raw"] := "1";
__n184["right"] := __n186;
__n183["left"] := __n184;
__n187 := {  };
__n187["type"] := "BinaryExpression";
__n187["operator"] := "!==";
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "e";
__n187["left"] := __n188;
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := 4.;
__n189["raw"] := "4";
__n187["right"] := __n189;
__n183["right"] := __n187;
__n182["test"] := __n183;
__n190 := {  };
__n190["type"] := "ExpressionStatement";
__n191 := {  };
__n191["type"] := "CallExpression";
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "$ERROR";
__n191["callee"] := __n192;
__n194 := {  };
__n194["type"] := "BinaryExpression";
__n194["operator"] := "+";
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "#1.1: Exception ===4. Actual:  Exception ===";
__n195["raw"] := "'#1.1: Exception ===4. Actual:  Exception ==='";
__n194["left"] := __n195;
__n196 := {  };
__n196["type"] := "Identifier";
__n196["name"] := "e";
__n194["right"] := __n196;
__n193 := [ __n194 ];
__n191["arguments"] := __n193;
__n190["expression"] := __n191;
__n182["consequent"] := __n190;
__n182["alternate"] := null;
__n197 := {  };
__n197["type"] := "IfStatement";
__n198 := {  };
__n198["type"] := "LogicalExpression";
__n198["operator"] := "&&";
__n199 := {  };
__n199["type"] := "BinaryExpression";
__n199["operator"] := "===";
__n200 := {  };
__n200["type"] := "Identifier";
__n200["name"] := "value";
__n199["left"] := __n200;
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := 4.;
__n201["raw"] := "4";
__n199["right"] := __n201;
__n198["left"] := __n199;
__n202 := {  };
__n202["type"] := "BinaryExpression";
__n202["operator"] := "!==";
__n203 := {  };
__n203["type"] := "Identifier";
__n203["name"] := "e";
__n202["left"] := __n203;
__n204 := {  };
__n204["type"] := "Literal";
__n204["value"] := "ex";
__n204["raw"] := "\"ex\"";
__n202["right"] := __n204;
__n198["right"] := __n202;
__n197["test"] := __n198;
__n205 := {  };
__n205["type"] := "ExpressionStatement";
__n206 := {  };
__n206["type"] := "CallExpression";
__n207 := {  };
__n207["type"] := "Identifier";
__n207["name"] := "$ERROR";
__n206["callee"] := __n207;
__n209 := {  };
__n209["type"] := "BinaryExpression";
__n209["operator"] := "+";
__n210 := {  };
__n210["type"] := "Literal";
__n210["value"] := "#1.2: Exception ===\"ex\". Actual:  Exception ===";
__n210["raw"] := "'#1.2: Exception ===\"ex\". Actual:  Exception ==='";
__n209["left"] := __n210;
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "e";
__n209["right"] := __n211;
__n208 := [ __n209 ];
__n206["arguments"] := __n208;
__n205["expression"] := __n206;
__n197["consequent"] := __n205;
__n197["alternate"] := null;
__n181 := [ __n182, __n197 ];
__n180["body"] := __n181;
__n178["body"] := __n180;
__n142["handler"] := __n178;
__n212 := {  };
__n212["type"] := "BlockStatement";
__n214 := {  };
__n214["type"] := "ReturnStatement";
__n215 := {  };
__n215["type"] := "Identifier";
__n215["name"] := "result";
__n214["argument"] := __n215;
__n213 := [ __n214 ];
__n212["body"] := __n213;
__n142["finalizer"] := __n212;
__n136 := [ __n137, __n142 ];
__n135["body"] := __n136;
__n216 := [ "result" ];
__n135["variableDeclarations"] := __n216;
__n217 := [  ];
__n135["functionDeclarations"] := __n217;
__n135["codeType"] := "function";
__n135["strict"] := false;
__n132["body"] := __n135;
__n132["generator"] := false;
__n132["expression"] := false;
__n132["async"] := false;
__n218 := {  };
__n218["type"] := "FunctionDeclaration";
__n219 := {  };
__n219["type"] := "Identifier";
__n219["name"] := "SwitchTest2";
__n218["id"] := __n219;
__n220 := [ "value" ];
__n218["params"] := __n220;
__n221 := {  };
__n221["type"] := "BlockStatement";
__n223 := {  };
__n223["type"] := "VariableDeclaration";
__n225 := {  };
__n225["type"] := "VariableDeclarator";
__n226 := {  };
__n226["type"] := "Identifier";
__n226["name"] := "result";
__n225["id"] := __n226;
__n227 := {  };
__n227["type"] := "Literal";
__n227["value"] := 0.;
__n227["raw"] := "0";
__n225["init"] := __n227;
__n224 := [ __n225 ];
__n223["declarations"] := __n224;
__n223["kind"] := "var";
__n228 := {  };
__n228["type"] := "SwitchStatement";
__n229 := {  };
__n229["type"] := "Identifier";
__n229["name"] := "value";
__n228["discriminant"] := __n229;
__n232 := {  };
__n232["type"] := "SwitchCase";
__n233 := {  };
__n233["type"] := "Literal";
__n233["value"] := 0.;
__n233["raw"] := "0";
__n232["test"] := __n233;
__n235 := {  };
__n235["type"] := "TryStatement";
__n236 := {  };
__n236["type"] := "BlockStatement";
__n238 := {  };
__n238["type"] := "ExpressionStatement";
__n239 := {  };
__n239["type"] := "AssignmentExpression";
__n239["operator"] := "+=";
__n240 := {  };
__n240["type"] := "Identifier";
__n240["name"] := "result";
__n239["left"] := __n240;
__n241 := {  };
__n241["type"] := "Literal";
__n241["value"] := 2.;
__n241["raw"] := "2";
__n239["right"] := __n241;
__n238["expression"] := __n239;
__n242 := {  };
__n242["type"] := "BreakStatement";
__n242["label"] := null;
__n237 := [ __n238, __n242 ];
__n236["body"] := __n237;
__n235["block"] := __n236;
__n235["handler"] := null;
__n243 := {  };
__n243["type"] := "BlockStatement";
__n245 := {  };
__n245["type"] := "ExpressionStatement";
__n246 := {  };
__n246["type"] := "AssignmentExpression";
__n246["operator"] := "=";
__n247 := {  };
__n247["type"] := "Identifier";
__n247["name"] := "c2";
__n246["left"] := __n247;
__n248 := {  };
__n248["type"] := "Literal";
__n248["value"] := 1.;
__n248["raw"] := "1";
__n246["right"] := __n248;
__n245["expression"] := __n246;
__n244 := [ __n245 ];
__n243["body"] := __n244;
__n235["finalizer"] := __n243;
__n234 := [ __n235 ];
__n232["consequent"] := __n234;
__n249 := {  };
__n249["type"] := "SwitchCase";
__n250 := {  };
__n250["type"] := "Literal";
__n250["value"] := 1.;
__n250["raw"] := "1";
__n249["test"] := __n250;
__n252 := {  };
__n252["type"] := "ExpressionStatement";
__n253 := {  };
__n253["type"] := "AssignmentExpression";
__n253["operator"] := "+=";
__n254 := {  };
__n254["type"] := "Identifier";
__n254["name"] := "result";
__n253["left"] := __n254;
__n255 := {  };
__n255["type"] := "Literal";
__n255["value"] := 4.;
__n255["raw"] := "4";
__n253["right"] := __n255;
__n252["expression"] := __n253;
__n256 := {  };
__n256["type"] := "BreakStatement";
__n256["label"] := null;
__n251 := [ __n252, __n256 ];
__n249["consequent"] := __n251;
__n231 := [ __n232, __n249 ];
__n257 := {  };
__n257["type"] := "SwitchCase";
__n257["test"] := null;
__n259 := {  };
__n259["type"] := "ExpressionStatement";
__n260 := {  };
__n260["type"] := "AssignmentExpression";
__n260["operator"] := "+=";
__n261 := {  };
__n261["type"] := "Identifier";
__n261["name"] := "result";
__n260["left"] := __n261;
__n262 := {  };
__n262["type"] := "Literal";
__n262["value"] := 32.;
__n262["raw"] := "32";
__n260["right"] := __n262;
__n259["expression"] := __n260;
__n263 := {  };
__n263["type"] := "BreakStatement";
__n263["label"] := null;
__n258 := [ __n259, __n263 ];
__n257["consequent"] := __n258;
__n264 := [  ];
__n230 := [ __n231, __n257, __n264 ];
__n228["cases"] := __n230;
__n265 := {  };
__n265["type"] := "ReturnStatement";
__n266 := {  };
__n266["type"] := "Identifier";
__n266["name"] := "result";
__n265["argument"] := __n266;
__n222 := [ __n223, __n228, __n265 ];
__n221["body"] := __n222;
__n267 := [ "result" ];
__n221["variableDeclarations"] := __n267;
__n268 := [  ];
__n221["functionDeclarations"] := __n268;
__n221["codeType"] := "function";
__n221["strict"] := false;
__n218["body"] := __n221;
__n218["generator"] := false;
__n218["expression"] := false;
__n218["async"] := false;
__n269 := {  };
__n269["type"] := "FunctionDeclaration";
__n270 := {  };
__n270["type"] := "Identifier";
__n270["name"] := "SwitchTest3";
__n269["id"] := __n270;
__n271 := [ "value" ];
__n269["params"] := __n271;
__n272 := {  };
__n272["type"] := "BlockStatement";
__n274 := {  };
__n274["type"] := "VariableDeclaration";
__n276 := {  };
__n276["type"] := "VariableDeclarator";
__n277 := {  };
__n277["type"] := "Identifier";
__n277["name"] := "result";
__n276["id"] := __n277;
__n278 := {  };
__n278["type"] := "Literal";
__n278["value"] := 0.;
__n278["raw"] := "0";
__n276["init"] := __n278;
__n275 := [ __n276 ];
__n274["declarations"] := __n275;
__n274["kind"] := "var";
__n279 := {  };
__n279["type"] := "SwitchStatement";
__n280 := {  };
__n280["type"] := "Identifier";
__n280["name"] := "value";
__n279["discriminant"] := __n280;
__n283 := {  };
__n283["type"] := "SwitchCase";
__n284 := {  };
__n284["type"] := "Literal";
__n284["value"] := 0.;
__n284["raw"] := "0";
__n283["test"] := __n284;
__n286 := {  };
__n286["type"] := "TryStatement";
__n287 := {  };
__n287["type"] := "BlockStatement";
__n289 := {  };
__n289["type"] := "ExpressionStatement";
__n290 := {  };
__n290["type"] := "AssignmentExpression";
__n290["operator"] := "+=";
__n291 := {  };
__n291["type"] := "Identifier";
__n291["name"] := "result";
__n290["left"] := __n291;
__n292 := {  };
__n292["type"] := "Literal";
__n292["value"] := 2.;
__n292["raw"] := "2";
__n290["right"] := __n292;
__n289["expression"] := __n290;
__n293 := {  };
__n293["type"] := "ThrowStatement";
__n294 := {  };
__n294["type"] := "Literal";
__n294["value"] := "ex";
__n294["raw"] := "\"ex\"";
__n293["argument"] := __n294;
__n288 := [ __n289, __n293 ];
__n287["body"] := __n288;
__n286["block"] := __n287;
__n286["handler"] := null;
__n295 := {  };
__n295["type"] := "BlockStatement";
__n297 := {  };
__n297["type"] := "BreakStatement";
__n297["label"] := null;
__n296 := [ __n297 ];
__n295["body"] := __n296;
__n286["finalizer"] := __n295;
__n285 := [ __n286 ];
__n283["consequent"] := __n285;
__n282 := [ __n283 ];
__n298 := {  };
__n298["type"] := "SwitchCase";
__n298["test"] := null;
__n300 := {  };
__n300["type"] := "ExpressionStatement";
__n301 := {  };
__n301["type"] := "AssignmentExpression";
__n301["operator"] := "+=";
__n302 := {  };
__n302["type"] := "Identifier";
__n302["name"] := "result";
__n301["left"] := __n302;
__n303 := {  };
__n303["type"] := "Literal";
__n303["value"] := 32.;
__n303["raw"] := "32";
__n301["right"] := __n303;
__n300["expression"] := __n301;
__n304 := {  };
__n304["type"] := "BreakStatement";
__n304["label"] := null;
__n299 := [ __n300, __n304 ];
__n298["consequent"] := __n299;
__n305 := [  ];
__n281 := [ __n282, __n298, __n305 ];
__n279["cases"] := __n281;
__n306 := {  };
__n306["type"] := "ReturnStatement";
__n307 := {  };
__n307["type"] := "Identifier";
__n307["name"] := "result";
__n306["argument"] := __n307;
__n273 := [ __n274, __n279, __n306 ];
__n272["body"] := __n273;
__n308 := [ "result" ];
__n272["variableDeclarations"] := __n308;
__n309 := [  ];
__n272["functionDeclarations"] := __n309;
__n272["codeType"] := "function";
__n272["strict"] := false;
__n269["body"] := __n272;
__n269["generator"] := false;
__n269["expression"] := false;
__n269["async"] := false;
__n131 := [ __n132, __n218, __n269 ];
__n0["functionDeclarations"] := __n131;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}