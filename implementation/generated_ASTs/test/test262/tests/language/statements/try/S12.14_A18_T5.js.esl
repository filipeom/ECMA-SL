function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "ThrowStatement";
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 13.;
__n6["raw"] := "13";
__n5["argument"] := __n6;
__n4 := [ __n5 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n7 := {  };
__n7["type"] := "CatchClause";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "e";
__n7["param"] := __n8;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "IfStatement";
__n12 := {  };
__n12["type"] := "BinaryExpression";
__n12["operator"] := "!==";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "e";
__n12["left"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 13.;
__n14["raw"] := "13";
__n12["right"] := __n14;
__n11["test"] := __n12;
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "$ERROR";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "+";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "#1: Exception ===13. Actual:  Exception ===";
__n20["raw"] := "'#1: Exception ===13. Actual:  Exception ==='";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "e";
__n19["right"] := __n21;
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n15["expression"] := __n16;
__n11["consequent"] := __n15;
__n11["alternate"] := null;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n7["body"] := __n9;
__n2["handler"] := __n7;
__n2["finalizer"] := null;
__n22 := {  };
__n22["type"] := "TryStatement";
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ThrowStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "+";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 10.;
__n27["raw"] := "10";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 3.;
__n28["raw"] := "3";
__n26["right"] := __n28;
__n25["argument"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n22["block"] := __n23;
__n29 := {  };
__n29["type"] := "CatchClause";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "e";
__n29["param"] := __n30;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "!==";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "e";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 13.;
__n36["raw"] := "13";
__n34["right"] := __n36;
__n33["test"] := __n34;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#2: Exception ===13. Actual:  Exception ===";
__n42["raw"] := "'#2: Exception ===13. Actual:  Exception ==='";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "e";
__n41["right"] := __n43;
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n33["consequent"] := __n37;
__n33["alternate"] := null;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n29["body"] := __n31;
__n22["handler"] := __n29;
__n22["finalizer"] := null;
__n44 := {  };
__n44["type"] := "VariableDeclaration";
__n46 := {  };
__n46["type"] := "VariableDeclarator";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "b";
__n46["id"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 13.;
__n48["raw"] := "13";
__n46["init"] := __n48;
__n45 := [ __n46 ];
__n44["declarations"] := __n45;
__n44["kind"] := "var";
__n49 := {  };
__n49["type"] := "TryStatement";
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ThrowStatement";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "b";
__n52["argument"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n49["block"] := __n50;
__n54 := {  };
__n54["type"] := "CatchClause";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "e";
__n54["param"] := __n55;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "IfStatement";
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "!==";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "e";
__n59["left"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 13.;
__n61["raw"] := "13";
__n59["right"] := __n61;
__n58["test"] := __n59;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "$ERROR";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "+";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "#3: Exception ===13. Actual:  Exception ===";
__n67["raw"] := "'#3: Exception ===13. Actual:  Exception ==='";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "e";
__n66["right"] := __n68;
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n58["consequent"] := __n62;
__n58["alternate"] := null;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n54["body"] := __n56;
__n49["handler"] := __n54;
__n49["finalizer"] := null;
__n69 := {  };
__n69["type"] := "VariableDeclaration";
__n71 := {  };
__n71["type"] := "VariableDeclarator";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "a";
__n71["id"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 3.;
__n73["raw"] := "3";
__n71["init"] := __n73;
__n70 := [ __n71 ];
__n69["declarations"] := __n70;
__n69["kind"] := "var";
__n74 := {  };
__n74["type"] := "VariableDeclaration";
__n76 := {  };
__n76["type"] := "VariableDeclarator";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "b";
__n76["id"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 10.;
__n78["raw"] := "10";
__n76["init"] := __n78;
__n75 := [ __n76 ];
__n74["declarations"] := __n75;
__n74["kind"] := "var";
__n79 := {  };
__n79["type"] := "TryStatement";
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ThrowStatement";
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "+";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "a";
__n83["left"] := __n84;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "b";
__n83["right"] := __n85;
__n82["argument"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n79["block"] := __n80;
__n86 := {  };
__n86["type"] := "CatchClause";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "e";
__n86["param"] := __n87;
__n88 := {  };
__n88["type"] := "BlockStatement";
__n90 := {  };
__n90["type"] := "IfStatement";
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "!==";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "e";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 13.;
__n93["raw"] := "13";
__n91["right"] := __n93;
__n90["test"] := __n91;
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "$ERROR";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "+";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "#4: Exception ===13. Actual:  Exception ===";
__n99["raw"] := "'#4: Exception ===13. Actual:  Exception ==='";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "e";
__n98["right"] := __n100;
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n94["expression"] := __n95;
__n90["consequent"] := __n94;
__n90["alternate"] := null;
__n89 := [ __n90 ];
__n88["body"] := __n89;
__n86["body"] := __n88;
__n79["handler"] := __n86;
__n79["finalizer"] := null;
__n101 := {  };
__n101["type"] := "TryStatement";
__n102 := {  };
__n102["type"] := "BlockStatement";
__n104 := {  };
__n104["type"] := "ThrowStatement";
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 2.13;
__n105["raw"] := "2.13";
__n104["argument"] := __n105;
__n103 := [ __n104 ];
__n102["body"] := __n103;
__n101["block"] := __n102;
__n106 := {  };
__n106["type"] := "CatchClause";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "e";
__n106["param"] := __n107;
__n108 := {  };
__n108["type"] := "BlockStatement";
__n110 := {  };
__n110["type"] := "IfStatement";
__n111 := {  };
__n111["type"] := "BinaryExpression";
__n111["operator"] := "!==";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "e";
__n111["left"] := __n112;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 2.13;
__n113["raw"] := "2.13";
__n111["right"] := __n113;
__n110["test"] := __n111;
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "$ERROR";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "BinaryExpression";
__n118["operator"] := "+";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "#5: Exception ===2.13. Actual:  Exception ===";
__n119["raw"] := "'#5: Exception ===2.13. Actual:  Exception ==='";
__n118["left"] := __n119;
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "e";
__n118["right"] := __n120;
__n117 := [ __n118 ];
__n115["arguments"] := __n117;
__n114["expression"] := __n115;
__n110["consequent"] := __n114;
__n110["alternate"] := null;
__n109 := [ __n110 ];
__n108["body"] := __n109;
__n106["body"] := __n108;
__n101["handler"] := __n106;
__n101["finalizer"] := null;
__n121 := {  };
__n121["type"] := "VariableDeclaration";
__n123 := {  };
__n123["type"] := "VariableDeclarator";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "ex";
__n123["id"] := __n124;
__n125 := {  };
__n125["type"] := "BinaryExpression";
__n125["operator"] := "/";
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := 2.;
__n126["raw"] := "2";
__n125["left"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := 3.;
__n127["raw"] := "3";
__n125["right"] := __n127;
__n123["init"] := __n125;
__n122 := [ __n123 ];
__n121["declarations"] := __n122;
__n121["kind"] := "var";
__n128 := {  };
__n128["type"] := "TryStatement";
__n129 := {  };
__n129["type"] := "BlockStatement";
__n131 := {  };
__n131["type"] := "ThrowStatement";
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := "/";
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := 2.;
__n133["raw"] := "2";
__n132["left"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 3.;
__n134["raw"] := "3";
__n132["right"] := __n134;
__n131["argument"] := __n132;
__n130 := [ __n131 ];
__n129["body"] := __n130;
__n128["block"] := __n129;
__n135 := {  };
__n135["type"] := "CatchClause";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "e";
__n135["param"] := __n136;
__n137 := {  };
__n137["type"] := "BlockStatement";
__n139 := {  };
__n139["type"] := "IfStatement";
__n140 := {  };
__n140["type"] := "BinaryExpression";
__n140["operator"] := "!==";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "e";
__n140["left"] := __n141;
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "ex";
__n140["right"] := __n142;
__n139["test"] := __n140;
__n143 := {  };
__n143["type"] := "ExpressionStatement";
__n144 := {  };
__n144["type"] := "CallExpression";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "$ERROR";
__n144["callee"] := __n145;
__n147 := {  };
__n147["type"] := "BinaryExpression";
__n147["operator"] := "+";
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "#6: Exception ===2/3. Actual:  Exception ===";
__n148["raw"] := "'#6: Exception ===2/3. Actual:  Exception ==='";
__n147["left"] := __n148;
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "e";
__n147["right"] := __n149;
__n146 := [ __n147 ];
__n144["arguments"] := __n146;
__n143["expression"] := __n144;
__n139["consequent"] := __n143;
__n139["alternate"] := null;
__n138 := [ __n139 ];
__n137["body"] := __n138;
__n135["body"] := __n137;
__n128["handler"] := __n135;
__n128["finalizer"] := null;
__n150 := {  };
__n150["type"] := "TryStatement";
__n151 := {  };
__n151["type"] := "BlockStatement";
__n153 := {  };
__n153["type"] := "ThrowStatement";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "NaN";
__n153["argument"] := __n154;
__n152 := [ __n153 ];
__n151["body"] := __n152;
__n150["block"] := __n151;
__n155 := {  };
__n155["type"] := "CatchClause";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "e";
__n155["param"] := __n156;
__n157 := {  };
__n157["type"] := "BlockStatement";
__n159 := {  };
__n159["type"] := "IfStatement";
__n160 := {  };
__n160["type"] := "UnaryExpression";
__n160["operator"] := "!";
__n161 := {  };
__n161["type"] := "CallExpression";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "isNaN";
__n161["callee"] := __n162;
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "e";
__n163 := [ __n164 ];
__n161["arguments"] := __n163;
__n160["argument"] := __n161;
__n160["prefix"] := true;
__n159["test"] := __n160;
__n165 := {  };
__n165["type"] := "ExpressionStatement";
__n166 := {  };
__n166["type"] := "CallExpression";
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "$ERROR";
__n166["callee"] := __n167;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := "#7: Exception is NaN";
__n169["raw"] := "'#7: Exception is NaN'";
__n168 := [ __n169 ];
__n166["arguments"] := __n168;
__n165["expression"] := __n166;
__n159["consequent"] := __n165;
__n159["alternate"] := null;
__n158 := [ __n159 ];
__n157["body"] := __n158;
__n155["body"] := __n157;
__n150["handler"] := __n155;
__n150["finalizer"] := null;
__n170 := {  };
__n170["type"] := "TryStatement";
__n171 := {  };
__n171["type"] := "BlockStatement";
__n173 := {  };
__n173["type"] := "ThrowStatement";
__n174 := {  };
__n174["type"] := "UnaryExpression";
__n174["operator"] := "+";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "Infinity";
__n174["argument"] := __n175;
__n174["prefix"] := true;
__n173["argument"] := __n174;
__n172 := [ __n173 ];
__n171["body"] := __n172;
__n170["block"] := __n171;
__n176 := {  };
__n176["type"] := "CatchClause";
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "e";
__n176["param"] := __n177;
__n178 := {  };
__n178["type"] := "BlockStatement";
__n180 := {  };
__n180["type"] := "IfStatement";
__n181 := {  };
__n181["type"] := "BinaryExpression";
__n181["operator"] := "!==";
__n182 := {  };
__n182["type"] := "Identifier";
__n182["name"] := "e";
__n181["left"] := __n182;
__n183 := {  };
__n183["type"] := "UnaryExpression";
__n183["operator"] := "+";
__n184 := {  };
__n184["type"] := "Identifier";
__n184["name"] := "Infinity";
__n183["argument"] := __n184;
__n183["prefix"] := true;
__n181["right"] := __n183;
__n180["test"] := __n181;
__n185 := {  };
__n185["type"] := "ExpressionStatement";
__n186 := {  };
__n186["type"] := "CallExpression";
__n187 := {  };
__n187["type"] := "Identifier";
__n187["name"] := "$ERROR";
__n186["callee"] := __n187;
__n189 := {  };
__n189["type"] := "BinaryExpression";
__n189["operator"] := "+";
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := "#8: Exception ===+Infinity. Actual:  Exception ===";
__n190["raw"] := "'#8: Exception ===+Infinity. Actual:  Exception ==='";
__n189["left"] := __n190;
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "e";
__n189["right"] := __n191;
__n188 := [ __n189 ];
__n186["arguments"] := __n188;
__n185["expression"] := __n186;
__n180["consequent"] := __n185;
__n180["alternate"] := null;
__n179 := [ __n180 ];
__n178["body"] := __n179;
__n176["body"] := __n178;
__n170["handler"] := __n176;
__n170["finalizer"] := null;
__n192 := {  };
__n192["type"] := "TryStatement";
__n193 := {  };
__n193["type"] := "BlockStatement";
__n195 := {  };
__n195["type"] := "ThrowStatement";
__n196 := {  };
__n196["type"] := "UnaryExpression";
__n196["operator"] := "-";
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "Infinity";
__n196["argument"] := __n197;
__n196["prefix"] := true;
__n195["argument"] := __n196;
__n194 := [ __n195 ];
__n193["body"] := __n194;
__n192["block"] := __n193;
__n198 := {  };
__n198["type"] := "CatchClause";
__n199 := {  };
__n199["type"] := "Identifier";
__n199["name"] := "e";
__n198["param"] := __n199;
__n200 := {  };
__n200["type"] := "BlockStatement";
__n202 := {  };
__n202["type"] := "IfStatement";
__n203 := {  };
__n203["type"] := "BinaryExpression";
__n203["operator"] := "!==";
__n204 := {  };
__n204["type"] := "Identifier";
__n204["name"] := "e";
__n203["left"] := __n204;
__n205 := {  };
__n205["type"] := "UnaryExpression";
__n205["operator"] := "-";
__n206 := {  };
__n206["type"] := "Identifier";
__n206["name"] := "Infinity";
__n205["argument"] := __n206;
__n205["prefix"] := true;
__n203["right"] := __n205;
__n202["test"] := __n203;
__n207 := {  };
__n207["type"] := "ExpressionStatement";
__n208 := {  };
__n208["type"] := "CallExpression";
__n209 := {  };
__n209["type"] := "Identifier";
__n209["name"] := "$ERROR";
__n208["callee"] := __n209;
__n211 := {  };
__n211["type"] := "BinaryExpression";
__n211["operator"] := "+";
__n212 := {  };
__n212["type"] := "Literal";
__n212["value"] := "#9: Exception ===-Infinity. Actual:  Exception ===";
__n212["raw"] := "'#9: Exception ===-Infinity. Actual:  Exception ==='";
__n211["left"] := __n212;
__n213 := {  };
__n213["type"] := "Identifier";
__n213["name"] := "e";
__n211["right"] := __n213;
__n210 := [ __n211 ];
__n208["arguments"] := __n210;
__n207["expression"] := __n208;
__n202["consequent"] := __n207;
__n202["alternate"] := null;
__n201 := [ __n202 ];
__n200["body"] := __n201;
__n198["body"] := __n200;
__n192["handler"] := __n198;
__n192["finalizer"] := null;
__n214 := {  };
__n214["type"] := "TryStatement";
__n215 := {  };
__n215["type"] := "BlockStatement";
__n217 := {  };
__n217["type"] := "ThrowStatement";
__n218 := {  };
__n218["type"] := "UnaryExpression";
__n218["operator"] := "+";
__n219 := {  };
__n219["type"] := "Literal";
__n219["value"] := 0.;
__n219["raw"] := "0";
__n218["argument"] := __n219;
__n218["prefix"] := true;
__n217["argument"] := __n218;
__n216 := [ __n217 ];
__n215["body"] := __n216;
__n214["block"] := __n215;
__n220 := {  };
__n220["type"] := "CatchClause";
__n221 := {  };
__n221["type"] := "Identifier";
__n221["name"] := "e";
__n220["param"] := __n221;
__n222 := {  };
__n222["type"] := "BlockStatement";
__n224 := {  };
__n224["type"] := "IfStatement";
__n225 := {  };
__n225["type"] := "BinaryExpression";
__n225["operator"] := "!==";
__n226 := {  };
__n226["type"] := "Identifier";
__n226["name"] := "e";
__n225["left"] := __n226;
__n227 := {  };
__n227["type"] := "UnaryExpression";
__n227["operator"] := "+";
__n228 := {  };
__n228["type"] := "Literal";
__n228["value"] := 0.;
__n228["raw"] := "0";
__n227["argument"] := __n228;
__n227["prefix"] := true;
__n225["right"] := __n227;
__n224["test"] := __n225;
__n229 := {  };
__n229["type"] := "ExpressionStatement";
__n230 := {  };
__n230["type"] := "CallExpression";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "$ERROR";
__n230["callee"] := __n231;
__n233 := {  };
__n233["type"] := "BinaryExpression";
__n233["operator"] := "+";
__n234 := {  };
__n234["type"] := "Literal";
__n234["value"] := "#10: Exception ===+0. Actual:  Exception ===";
__n234["raw"] := "'#10: Exception ===+0. Actual:  Exception ==='";
__n233["left"] := __n234;
__n235 := {  };
__n235["type"] := "Identifier";
__n235["name"] := "e";
__n233["right"] := __n235;
__n232 := [ __n233 ];
__n230["arguments"] := __n232;
__n229["expression"] := __n230;
__n224["consequent"] := __n229;
__n224["alternate"] := null;
__n223 := [ __n224 ];
__n222["body"] := __n223;
__n220["body"] := __n222;
__n214["handler"] := __n220;
__n214["finalizer"] := null;
__n236 := {  };
__n236["type"] := "TryStatement";
__n237 := {  };
__n237["type"] := "BlockStatement";
__n239 := {  };
__n239["type"] := "ThrowStatement";
__n240 := {  };
__n240["type"] := "UnaryExpression";
__n240["operator"] := "-";
__n241 := {  };
__n241["type"] := "Literal";
__n241["value"] := 0.;
__n241["raw"] := "0";
__n240["argument"] := __n241;
__n240["prefix"] := true;
__n239["argument"] := __n240;
__n238 := [ __n239 ];
__n237["body"] := __n238;
__n236["block"] := __n237;
__n242 := {  };
__n242["type"] := "CatchClause";
__n243 := {  };
__n243["type"] := "Identifier";
__n243["name"] := "e";
__n242["param"] := __n243;
__n244 := {  };
__n244["type"] := "BlockStatement";
__n246 := {  };
__n246["type"] := "IfStatement";
__n247 := {  };
__n247["type"] := "BinaryExpression";
__n247["operator"] := "!==";
__n248 := {  };
__n248["type"] := "Identifier";
__n248["name"] := "e";
__n247["left"] := __n248;
__n249 := {  };
__n249["type"] := "UnaryExpression";
__n249["operator"] := "-";
__n250 := {  };
__n250["type"] := "Literal";
__n250["value"] := 0.;
__n250["raw"] := "0";
__n249["argument"] := __n250;
__n249["prefix"] := true;
__n247["right"] := __n249;
__n246["test"] := __n247;
__n251 := {  };
__n251["type"] := "ExpressionStatement";
__n252 := {  };
__n252["type"] := "CallExpression";
__n253 := {  };
__n253["type"] := "Identifier";
__n253["name"] := "$ERROR";
__n252["callee"] := __n253;
__n255 := {  };
__n255["type"] := "BinaryExpression";
__n255["operator"] := "+";
__n256 := {  };
__n256["type"] := "Literal";
__n256["value"] := "#11: Exception ===-0. Actual:  Exception ===";
__n256["raw"] := "'#11: Exception ===-0. Actual:  Exception ==='";
__n255["left"] := __n256;
__n257 := {  };
__n257["type"] := "Identifier";
__n257["name"] := "e";
__n255["right"] := __n257;
__n254 := [ __n255 ];
__n252["arguments"] := __n254;
__n251["expression"] := __n252;
__n246["consequent"] := __n251;
__n246["alternate"] := null;
__n245 := [ __n246 ];
__n244["body"] := __n245;
__n242["body"] := __n244;
__n236["handler"] := __n242;
__n236["finalizer"] := null;
__n1 := [ __n2, __n22, __n44, __n49, __n69, __n74, __n79, __n101, __n121, __n128, __n150, __n170, __n192, __n214, __n236 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n258 := [ "b", "a", "ex" ];
__n0["variableDeclarations"] := __n258;
__n259 := [  ];
__n0["functionDeclarations"] := __n259;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}