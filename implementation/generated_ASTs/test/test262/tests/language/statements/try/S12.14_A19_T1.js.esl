function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "ThrowStatement";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Error";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "hello";
__n9["raw"] := "\"hello\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n5["argument"] := __n6;
__n4 := [ __n5 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n10 := {  };
__n10["type"] := "CatchClause";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "e";
__n10["param"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "IfStatement";
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "!==";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "e";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "toString";
__n19["raw"] := "\"toString\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n20 := [  ];
__n16["arguments"] := __n20;
__n15["left"] := __n16;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "Error: hello";
__n21["raw"] := "\"Error: hello\"";
__n15["right"] := __n21;
__n14["test"] := __n15;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "$ERROR";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "+";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "#1: Exception.toString()===\"Error: hello\". Actual: Exception is ";
__n27["raw"] := "'#1: Exception.toString()===\"Error: hello\". Actual: Exception is '";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "e";
__n26["right"] := __n28;
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n14["consequent"] := __n22;
__n14["alternate"] := null;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n10["body"] := __n12;
__n2["handler"] := __n10;
__n2["finalizer"] := null;
__n29 := {  };
__n29["type"] := "TryStatement";
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ThrowStatement";
__n33 := {  };
__n33["type"] := "NewExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Error";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "hello";
__n36["raw"] := "\"hello\"";
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n32["argument"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n29["block"] := __n30;
__n37 := {  };
__n37["type"] := "CatchClause";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "e";
__n37["param"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "IfStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "!==";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "e";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "toString";
__n46["raw"] := "\"toString\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n47 := [  ];
__n43["arguments"] := __n47;
__n42["left"] := __n43;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "Error: hello";
__n48["raw"] := "\"Error: hello\"";
__n42["right"] := __n48;
__n41["test"] := __n42;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "+";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#2: Exception.toString()===\"Error: hello\". Actual: Exception is ";
__n54["raw"] := "'#2: Exception.toString()===\"Error: hello\". Actual: Exception is '";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "e";
__n53["right"] := __n55;
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n41["consequent"] := __n49;
__n41["alternate"] := null;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n37["body"] := __n39;
__n29["handler"] := __n37;
__n29["finalizer"] := null;
__n56 := {  };
__n56["type"] := "VariableDeclaration";
__n58 := {  };
__n58["type"] := "VariableDeclarator";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "c3";
__n58["id"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 0.;
__n60["raw"] := "0";
__n58["init"] := __n60;
__n57 := [ __n58 ];
__n56["declarations"] := __n57;
__n56["kind"] := "var";
__n61 := {  };
__n61["type"] := "TryStatement";
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ThrowStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "EvalError";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 1.;
__n68["raw"] := "1";
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["argument"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n61["block"] := __n62;
__n69 := {  };
__n69["type"] := "CatchClause";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "e";
__n69["param"] := __n70;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "IfStatement";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "!==";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "e";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "toString";
__n78["raw"] := "\"toString\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["callee"] := __n76;
__n79 := [  ];
__n75["arguments"] := __n79;
__n74["left"] := __n75;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "EvalError: 1";
__n80["raw"] := "\"EvalError: 1\"";
__n74["right"] := __n80;
__n73["test"] := __n74;
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "$ERROR";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "+";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "#3: Exception.toString()===\"EvalError: 1\". Actual: Exception is ";
__n86["raw"] := "'#3: Exception.toString()===\"EvalError: 1\". Actual: Exception is '";
__n85["left"] := __n86;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "e";
__n85["right"] := __n87;
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n73["consequent"] := __n81;
__n73["alternate"] := null;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n69["body"] := __n71;
__n61["handler"] := __n69;
__n61["finalizer"] := null;
__n88 := {  };
__n88["type"] := "TryStatement";
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "ThrowStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "RangeError";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 1.;
__n95["raw"] := "1";
__n94 := [ __n95 ];
__n92["arguments"] := __n94;
__n91["argument"] := __n92;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n88["block"] := __n89;
__n96 := {  };
__n96["type"] := "CatchClause";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "e";
__n96["param"] := __n97;
__n98 := {  };
__n98["type"] := "BlockStatement";
__n100 := {  };
__n100["type"] := "IfStatement";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "!==";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "e";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "toString";
__n105["raw"] := "\"toString\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n102["callee"] := __n103;
__n106 := [  ];
__n102["arguments"] := __n106;
__n101["left"] := __n102;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "RangeError: 1";
__n107["raw"] := "\"RangeError: 1\"";
__n101["right"] := __n107;
__n100["test"] := __n101;
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "$ERROR";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "+";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "#4: Exception.toString()===\"RangeError: 1\". Actual: Exception is ";
__n113["raw"] := "'#4: Exception.toString()===\"RangeError: 1\". Actual: Exception is '";
__n112["left"] := __n113;
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "e";
__n112["right"] := __n114;
__n111 := [ __n112 ];
__n109["arguments"] := __n111;
__n108["expression"] := __n109;
__n100["consequent"] := __n108;
__n100["alternate"] := null;
__n99 := [ __n100 ];
__n98["body"] := __n99;
__n96["body"] := __n98;
__n88["handler"] := __n96;
__n88["finalizer"] := null;
__n115 := {  };
__n115["type"] := "TryStatement";
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ThrowStatement";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "ReferenceError";
__n119["callee"] := __n120;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := 1.;
__n122["raw"] := "1";
__n121 := [ __n122 ];
__n119["arguments"] := __n121;
__n118["argument"] := __n119;
__n117 := [ __n118 ];
__n116["body"] := __n117;
__n115["block"] := __n116;
__n123 := {  };
__n123["type"] := "CatchClause";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "e";
__n123["param"] := __n124;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "IfStatement";
__n128 := {  };
__n128["type"] := "BinaryExpression";
__n128["operator"] := "!==";
__n129 := {  };
__n129["type"] := "CallExpression";
__n130 := {  };
__n130["type"] := "MemberExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "e";
__n130["object"] := __n131;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := "toString";
__n132["raw"] := "\"toString\"";
__n130["property"] := __n132;
__n130["computed"] := true;
__n129["callee"] := __n130;
__n133 := [  ];
__n129["arguments"] := __n133;
__n128["left"] := __n129;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "ReferenceError: 1";
__n134["raw"] := "\"ReferenceError: 1\"";
__n128["right"] := __n134;
__n127["test"] := __n128;
__n135 := {  };
__n135["type"] := "ExpressionStatement";
__n136 := {  };
__n136["type"] := "CallExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "$ERROR";
__n136["callee"] := __n137;
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "+";
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "#5: Exception.toString()===\"ReferenceError: 1\". Actual: Exception is ";
__n140["raw"] := "'#5: Exception.toString()===\"ReferenceError: 1\". Actual: Exception is '";
__n139["left"] := __n140;
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "e";
__n139["right"] := __n141;
__n138 := [ __n139 ];
__n136["arguments"] := __n138;
__n135["expression"] := __n136;
__n127["consequent"] := __n135;
__n127["alternate"] := null;
__n126 := [ __n127 ];
__n125["body"] := __n126;
__n123["body"] := __n125;
__n115["handler"] := __n123;
__n115["finalizer"] := null;
__n142 := {  };
__n142["type"] := "VariableDeclaration";
__n144 := {  };
__n144["type"] := "VariableDeclarator";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "c6";
__n144["id"] := __n145;
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := 0.;
__n146["raw"] := "0";
__n144["init"] := __n146;
__n143 := [ __n144 ];
__n142["declarations"] := __n143;
__n142["kind"] := "var";
__n147 := {  };
__n147["type"] := "TryStatement";
__n148 := {  };
__n148["type"] := "BlockStatement";
__n150 := {  };
__n150["type"] := "ThrowStatement";
__n151 := {  };
__n151["type"] := "CallExpression";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "TypeError";
__n151["callee"] := __n152;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := 1.;
__n154["raw"] := "1";
__n153 := [ __n154 ];
__n151["arguments"] := __n153;
__n150["argument"] := __n151;
__n149 := [ __n150 ];
__n148["body"] := __n149;
__n147["block"] := __n148;
__n155 := {  };
__n155["type"] := "CatchClause";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "e";
__n155["param"] := __n156;
__n157 := {  };
__n157["type"] := "BlockStatement";
__n159 := {  };
__n159["type"] := "IfStatement";
__n160 := {  };
__n160["type"] := "BinaryExpression";
__n160["operator"] := "!==";
__n161 := {  };
__n161["type"] := "CallExpression";
__n162 := {  };
__n162["type"] := "MemberExpression";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "e";
__n162["object"] := __n163;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := "toString";
__n164["raw"] := "\"toString\"";
__n162["property"] := __n164;
__n162["computed"] := true;
__n161["callee"] := __n162;
__n165 := [  ];
__n161["arguments"] := __n165;
__n160["left"] := __n161;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "TypeError: 1";
__n166["raw"] := "\"TypeError: 1\"";
__n160["right"] := __n166;
__n159["test"] := __n160;
__n167 := {  };
__n167["type"] := "ExpressionStatement";
__n168 := {  };
__n168["type"] := "CallExpression";
__n169 := {  };
__n169["type"] := "Identifier";
__n169["name"] := "$ERROR";
__n168["callee"] := __n169;
__n171 := {  };
__n171["type"] := "BinaryExpression";
__n171["operator"] := "+";
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := "#6: Exception.toString()===\"TypeError: 1\". Actual: Exception is ";
__n172["raw"] := "'#6: Exception.toString()===\"TypeError: 1\". Actual: Exception is '";
__n171["left"] := __n172;
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "e";
__n171["right"] := __n173;
__n170 := [ __n171 ];
__n168["arguments"] := __n170;
__n167["expression"] := __n168;
__n159["consequent"] := __n167;
__n159["alternate"] := null;
__n158 := [ __n159 ];
__n157["body"] := __n158;
__n155["body"] := __n157;
__n147["handler"] := __n155;
__n147["finalizer"] := null;
__n174 := {  };
__n174["type"] := "TryStatement";
__n175 := {  };
__n175["type"] := "BlockStatement";
__n177 := {  };
__n177["type"] := "ThrowStatement";
__n178 := {  };
__n178["type"] := "CallExpression";
__n179 := {  };
__n179["type"] := "Identifier";
__n179["name"] := "URIError";
__n178["callee"] := __n179;
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := "message";
__n181["raw"] := "\"message\"";
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := "fileName";
__n182["raw"] := "\"fileName\"";
__n183 := {  };
__n183["type"] := "Literal";
__n183["value"] := "1";
__n183["raw"] := "\"1\"";
__n180 := [ __n181, __n182, __n183 ];
__n178["arguments"] := __n180;
__n177["argument"] := __n178;
__n176 := [ __n177 ];
__n175["body"] := __n176;
__n174["block"] := __n175;
__n184 := {  };
__n184["type"] := "CatchClause";
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "e";
__n184["param"] := __n185;
__n186 := {  };
__n186["type"] := "BlockStatement";
__n188 := {  };
__n188["type"] := "IfStatement";
__n189 := {  };
__n189["type"] := "BinaryExpression";
__n189["operator"] := "!==";
__n190 := {  };
__n190["type"] := "CallExpression";
__n191 := {  };
__n191["type"] := "MemberExpression";
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "e";
__n191["object"] := __n192;
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := "toString";
__n193["raw"] := "\"toString\"";
__n191["property"] := __n193;
__n191["computed"] := true;
__n190["callee"] := __n191;
__n194 := [  ];
__n190["arguments"] := __n194;
__n189["left"] := __n190;
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "URIError: message";
__n195["raw"] := "\"URIError: message\"";
__n189["right"] := __n195;
__n188["test"] := __n189;
__n196 := {  };
__n196["type"] := "ExpressionStatement";
__n197 := {  };
__n197["type"] := "CallExpression";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "$ERROR";
__n197["callee"] := __n198;
__n200 := {  };
__n200["type"] := "BinaryExpression";
__n200["operator"] := "+";
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := "#7: Exception.toString()===\"URIError: message\". Actual: Exception is ";
__n201["raw"] := "'#7: Exception.toString()===\"URIError: message\". Actual: Exception is '";
__n200["left"] := __n201;
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "e";
__n200["right"] := __n202;
__n199 := [ __n200 ];
__n197["arguments"] := __n199;
__n196["expression"] := __n197;
__n188["consequent"] := __n196;
__n188["alternate"] := null;
__n187 := [ __n188 ];
__n186["body"] := __n187;
__n184["body"] := __n186;
__n174["handler"] := __n184;
__n174["finalizer"] := null;
__n1 := [ __n2, __n29, __n56, __n61, __n88, __n115, __n142, __n147, __n174 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n203 := [ "c3", "c6" ];
__n0["variableDeclarations"] := __n203;
__n204 := [  ];
__n0["functionDeclarations"] := __n204;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}