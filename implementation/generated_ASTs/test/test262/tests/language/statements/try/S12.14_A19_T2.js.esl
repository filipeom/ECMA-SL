function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "fin";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "TryStatement";
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ThrowStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Error";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "hello";
__n14["raw"] := "\"hello\"";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["argument"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n7["block"] := __n8;
__n15 := {  };
__n15["type"] := "CatchClause";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "e";
__n15["param"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!==";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "e";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "toString";
__n24["raw"] := "\"toString\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n25 := [  ];
__n21["arguments"] := __n25;
__n20["left"] := __n21;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "Error: hello";
__n26["raw"] := "\"Error: hello\"";
__n20["right"] := __n26;
__n19["test"] := __n20;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "$ERROR";
__n28["callee"] := __n29;
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "+";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "#1.1: Exception.toString()===\"Error: hello\". Actual: Exception is ";
__n32["raw"] := "'#1.1: Exception.toString()===\"Error: hello\". Actual: Exception is '";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "e";
__n31["right"] := __n33;
__n30 := [ __n31 ];
__n28["arguments"] := __n30;
__n27["expression"] := __n28;
__n19["consequent"] := __n27;
__n19["alternate"] := null;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n15["body"] := __n17;
__n7["handler"] := __n15;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "AssignmentExpression";
__n37["operator"] := "=";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "fin";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 1.;
__n39["raw"] := "1";
__n37["right"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n7["finalizer"] := __n34;
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "!==";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "fin";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 1.;
__n43["raw"] := "1";
__n41["right"] := __n43;
__n40["test"] := __n41;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$ERROR";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "#1.2: \"finally\" block must be evaluated";
__n48["raw"] := "'#1.2: \"finally\" block must be evaluated'";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n40["consequent"] := __n44;
__n40["alternate"] := null;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "AssignmentExpression";
__n50["operator"] := "=";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "fin";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 0.;
__n52["raw"] := "0";
__n50["right"] := __n52;
__n49["expression"] := __n50;
__n53 := {  };
__n53["type"] := "TryStatement";
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ThrowStatement";
__n57 := {  };
__n57["type"] := "NewExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "Error";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "hello";
__n60["raw"] := "\"hello\"";
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["argument"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n53["block"] := __n54;
__n61 := {  };
__n61["type"] := "CatchClause";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "e";
__n61["param"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "IfStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "e";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "toString";
__n70["raw"] := "\"toString\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n71 := [  ];
__n67["arguments"] := __n71;
__n66["left"] := __n67;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "Error: hello";
__n72["raw"] := "\"Error: hello\"";
__n66["right"] := __n72;
__n65["test"] := __n66;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "$ERROR";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "#2.1: Exception.toString()===\"Error: hello\". Actual: Exception is ";
__n78["raw"] := "'#2.1: Exception.toString()===\"Error: hello\". Actual: Exception is '";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "e";
__n77["right"] := __n79;
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n65["consequent"] := __n73;
__n65["alternate"] := null;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n61["body"] := __n63;
__n53["handler"] := __n61;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "AssignmentExpression";
__n83["operator"] := "=";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "fin";
__n83["left"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := 1.;
__n85["raw"] := "1";
__n83["right"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n53["finalizer"] := __n80;
__n86 := {  };
__n86["type"] := "IfStatement";
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "!==";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "fin";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 1.;
__n89["raw"] := "1";
__n87["right"] := __n89;
__n86["test"] := __n87;
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "$ERROR";
__n91["callee"] := __n92;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "#2.2: \"finally\" block must be evaluated";
__n94["raw"] := "'#2.2: \"finally\" block must be evaluated'";
__n93 := [ __n94 ];
__n91["arguments"] := __n93;
__n90["expression"] := __n91;
__n86["consequent"] := __n90;
__n86["alternate"] := null;
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "AssignmentExpression";
__n96["operator"] := "=";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "fin";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 0.;
__n98["raw"] := "0";
__n96["right"] := __n98;
__n95["expression"] := __n96;
__n99 := {  };
__n99["type"] := "VariableDeclaration";
__n101 := {  };
__n101["type"] := "VariableDeclarator";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "c3";
__n101["id"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := 0.;
__n103["raw"] := "0";
__n101["init"] := __n103;
__n100 := [ __n101 ];
__n99["declarations"] := __n100;
__n99["kind"] := "var";
__n104 := {  };
__n104["type"] := "TryStatement";
__n105 := {  };
__n105["type"] := "BlockStatement";
__n107 := {  };
__n107["type"] := "ThrowStatement";
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "EvalError";
__n108["callee"] := __n109;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 1.;
__n111["raw"] := "1";
__n110 := [ __n111 ];
__n108["arguments"] := __n110;
__n107["argument"] := __n108;
__n106 := [ __n107 ];
__n105["body"] := __n106;
__n104["block"] := __n105;
__n112 := {  };
__n112["type"] := "CatchClause";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "e";
__n112["param"] := __n113;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n116 := {  };
__n116["type"] := "IfStatement";
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "!==";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "MemberExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "e";
__n119["object"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "toString";
__n121["raw"] := "\"toString\"";
__n119["property"] := __n121;
__n119["computed"] := true;
__n118["callee"] := __n119;
__n122 := [  ];
__n118["arguments"] := __n122;
__n117["left"] := __n118;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "EvalError: 1";
__n123["raw"] := "\"EvalError: 1\"";
__n117["right"] := __n123;
__n116["test"] := __n117;
__n124 := {  };
__n124["type"] := "ExpressionStatement";
__n125 := {  };
__n125["type"] := "CallExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "$ERROR";
__n125["callee"] := __n126;
__n128 := {  };
__n128["type"] := "BinaryExpression";
__n128["operator"] := "+";
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "#3.1: Exception.toString()===\"EvalError: 1\". Actual: Exception is ";
__n129["raw"] := "'#3.1: Exception.toString()===\"EvalError: 1\". Actual: Exception is '";
__n128["left"] := __n129;
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "e";
__n128["right"] := __n130;
__n127 := [ __n128 ];
__n125["arguments"] := __n127;
__n124["expression"] := __n125;
__n116["consequent"] := __n124;
__n116["alternate"] := null;
__n115 := [ __n116 ];
__n114["body"] := __n115;
__n112["body"] := __n114;
__n104["handler"] := __n112;
__n131 := {  };
__n131["type"] := "BlockStatement";
__n133 := {  };
__n133["type"] := "ExpressionStatement";
__n134 := {  };
__n134["type"] := "AssignmentExpression";
__n134["operator"] := "=";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "fin";
__n134["left"] := __n135;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := 1.;
__n136["raw"] := "1";
__n134["right"] := __n136;
__n133["expression"] := __n134;
__n132 := [ __n133 ];
__n131["body"] := __n132;
__n104["finalizer"] := __n131;
__n137 := {  };
__n137["type"] := "IfStatement";
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := "!==";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "fin";
__n138["left"] := __n139;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := 1.;
__n140["raw"] := "1";
__n138["right"] := __n140;
__n137["test"] := __n138;
__n141 := {  };
__n141["type"] := "ExpressionStatement";
__n142 := {  };
__n142["type"] := "CallExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "$ERROR";
__n142["callee"] := __n143;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "#3.2: \"finally\" block must be evaluated";
__n145["raw"] := "'#3.2: \"finally\" block must be evaluated'";
__n144 := [ __n145 ];
__n142["arguments"] := __n144;
__n141["expression"] := __n142;
__n137["consequent"] := __n141;
__n137["alternate"] := null;
__n146 := {  };
__n146["type"] := "ExpressionStatement";
__n147 := {  };
__n147["type"] := "AssignmentExpression";
__n147["operator"] := "=";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "fin";
__n147["left"] := __n148;
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := 0.;
__n149["raw"] := "0";
__n147["right"] := __n149;
__n146["expression"] := __n147;
__n150 := {  };
__n150["type"] := "TryStatement";
__n151 := {  };
__n151["type"] := "BlockStatement";
__n153 := {  };
__n153["type"] := "ThrowStatement";
__n154 := {  };
__n154["type"] := "CallExpression";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "RangeError";
__n154["callee"] := __n155;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := 1.;
__n157["raw"] := "1";
__n156 := [ __n157 ];
__n154["arguments"] := __n156;
__n153["argument"] := __n154;
__n152 := [ __n153 ];
__n151["body"] := __n152;
__n150["block"] := __n151;
__n158 := {  };
__n158["type"] := "CatchClause";
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "e";
__n158["param"] := __n159;
__n160 := {  };
__n160["type"] := "BlockStatement";
__n162 := {  };
__n162["type"] := "IfStatement";
__n163 := {  };
__n163["type"] := "BinaryExpression";
__n163["operator"] := "!==";
__n164 := {  };
__n164["type"] := "CallExpression";
__n165 := {  };
__n165["type"] := "MemberExpression";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "e";
__n165["object"] := __n166;
__n167 := {  };
__n167["type"] := "Literal";
__n167["value"] := "toString";
__n167["raw"] := "\"toString\"";
__n165["property"] := __n167;
__n165["computed"] := true;
__n164["callee"] := __n165;
__n168 := [  ];
__n164["arguments"] := __n168;
__n163["left"] := __n164;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := "RangeError: 1";
__n169["raw"] := "\"RangeError: 1\"";
__n163["right"] := __n169;
__n162["test"] := __n163;
__n170 := {  };
__n170["type"] := "ExpressionStatement";
__n171 := {  };
__n171["type"] := "CallExpression";
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "$ERROR";
__n171["callee"] := __n172;
__n174 := {  };
__n174["type"] := "BinaryExpression";
__n174["operator"] := "+";
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := "#4.1: Exception.toString()===\"RangeError: 1\". Actual: Exception is ";
__n175["raw"] := "'#4.1: Exception.toString()===\"RangeError: 1\". Actual: Exception is '";
__n174["left"] := __n175;
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "e";
__n174["right"] := __n176;
__n173 := [ __n174 ];
__n171["arguments"] := __n173;
__n170["expression"] := __n171;
__n162["consequent"] := __n170;
__n162["alternate"] := null;
__n161 := [ __n162 ];
__n160["body"] := __n161;
__n158["body"] := __n160;
__n150["handler"] := __n158;
__n177 := {  };
__n177["type"] := "BlockStatement";
__n179 := {  };
__n179["type"] := "ExpressionStatement";
__n180 := {  };
__n180["type"] := "AssignmentExpression";
__n180["operator"] := "=";
__n181 := {  };
__n181["type"] := "Identifier";
__n181["name"] := "fin";
__n180["left"] := __n181;
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := 1.;
__n182["raw"] := "1";
__n180["right"] := __n182;
__n179["expression"] := __n180;
__n178 := [ __n179 ];
__n177["body"] := __n178;
__n150["finalizer"] := __n177;
__n183 := {  };
__n183["type"] := "IfStatement";
__n184 := {  };
__n184["type"] := "BinaryExpression";
__n184["operator"] := "!==";
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "fin";
__n184["left"] := __n185;
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := 1.;
__n186["raw"] := "1";
__n184["right"] := __n186;
__n183["test"] := __n184;
__n187 := {  };
__n187["type"] := "ExpressionStatement";
__n188 := {  };
__n188["type"] := "CallExpression";
__n189 := {  };
__n189["type"] := "Identifier";
__n189["name"] := "$ERROR";
__n188["callee"] := __n189;
__n191 := {  };
__n191["type"] := "Literal";
__n191["value"] := "#4.2: \"finally\" block must be evaluated";
__n191["raw"] := "'#4.2: \"finally\" block must be evaluated'";
__n190 := [ __n191 ];
__n188["arguments"] := __n190;
__n187["expression"] := __n188;
__n183["consequent"] := __n187;
__n183["alternate"] := null;
__n192 := {  };
__n192["type"] := "ExpressionStatement";
__n193 := {  };
__n193["type"] := "AssignmentExpression";
__n193["operator"] := "=";
__n194 := {  };
__n194["type"] := "Identifier";
__n194["name"] := "fin";
__n193["left"] := __n194;
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := 0.;
__n195["raw"] := "0";
__n193["right"] := __n195;
__n192["expression"] := __n193;
__n196 := {  };
__n196["type"] := "TryStatement";
__n197 := {  };
__n197["type"] := "BlockStatement";
__n199 := {  };
__n199["type"] := "ThrowStatement";
__n200 := {  };
__n200["type"] := "CallExpression";
__n201 := {  };
__n201["type"] := "Identifier";
__n201["name"] := "ReferenceError";
__n200["callee"] := __n201;
__n203 := {  };
__n203["type"] := "Literal";
__n203["value"] := 1.;
__n203["raw"] := "1";
__n202 := [ __n203 ];
__n200["arguments"] := __n202;
__n199["argument"] := __n200;
__n198 := [ __n199 ];
__n197["body"] := __n198;
__n196["block"] := __n197;
__n204 := {  };
__n204["type"] := "CatchClause";
__n205 := {  };
__n205["type"] := "Identifier";
__n205["name"] := "e";
__n204["param"] := __n205;
__n206 := {  };
__n206["type"] := "BlockStatement";
__n208 := {  };
__n208["type"] := "IfStatement";
__n209 := {  };
__n209["type"] := "BinaryExpression";
__n209["operator"] := "!==";
__n210 := {  };
__n210["type"] := "CallExpression";
__n211 := {  };
__n211["type"] := "MemberExpression";
__n212 := {  };
__n212["type"] := "Identifier";
__n212["name"] := "e";
__n211["object"] := __n212;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := "toString";
__n213["raw"] := "\"toString\"";
__n211["property"] := __n213;
__n211["computed"] := true;
__n210["callee"] := __n211;
__n214 := [  ];
__n210["arguments"] := __n214;
__n209["left"] := __n210;
__n215 := {  };
__n215["type"] := "Literal";
__n215["value"] := "ReferenceError: 1";
__n215["raw"] := "\"ReferenceError: 1\"";
__n209["right"] := __n215;
__n208["test"] := __n209;
__n216 := {  };
__n216["type"] := "ExpressionStatement";
__n217 := {  };
__n217["type"] := "CallExpression";
__n218 := {  };
__n218["type"] := "Identifier";
__n218["name"] := "$ERROR";
__n217["callee"] := __n218;
__n220 := {  };
__n220["type"] := "BinaryExpression";
__n220["operator"] := "+";
__n221 := {  };
__n221["type"] := "Literal";
__n221["value"] := "#5.1: Exception.toString()===\"ReferenceError: 1\". Actual: Exception is ";
__n221["raw"] := "'#5.1: Exception.toString()===\"ReferenceError: 1\". Actual: Exception is '";
__n220["left"] := __n221;
__n222 := {  };
__n222["type"] := "Identifier";
__n222["name"] := "e";
__n220["right"] := __n222;
__n219 := [ __n220 ];
__n217["arguments"] := __n219;
__n216["expression"] := __n217;
__n208["consequent"] := __n216;
__n208["alternate"] := null;
__n207 := [ __n208 ];
__n206["body"] := __n207;
__n204["body"] := __n206;
__n196["handler"] := __n204;
__n223 := {  };
__n223["type"] := "BlockStatement";
__n225 := {  };
__n225["type"] := "ExpressionStatement";
__n226 := {  };
__n226["type"] := "AssignmentExpression";
__n226["operator"] := "=";
__n227 := {  };
__n227["type"] := "Identifier";
__n227["name"] := "fin";
__n226["left"] := __n227;
__n228 := {  };
__n228["type"] := "Literal";
__n228["value"] := 1.;
__n228["raw"] := "1";
__n226["right"] := __n228;
__n225["expression"] := __n226;
__n224 := [ __n225 ];
__n223["body"] := __n224;
__n196["finalizer"] := __n223;
__n229 := {  };
__n229["type"] := "IfStatement";
__n230 := {  };
__n230["type"] := "BinaryExpression";
__n230["operator"] := "!==";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "fin";
__n230["left"] := __n231;
__n232 := {  };
__n232["type"] := "Literal";
__n232["value"] := 1.;
__n232["raw"] := "1";
__n230["right"] := __n232;
__n229["test"] := __n230;
__n233 := {  };
__n233["type"] := "ExpressionStatement";
__n234 := {  };
__n234["type"] := "CallExpression";
__n235 := {  };
__n235["type"] := "Identifier";
__n235["name"] := "$ERROR";
__n234["callee"] := __n235;
__n237 := {  };
__n237["type"] := "Literal";
__n237["value"] := "#5.2: \"finally\" block must be evaluated";
__n237["raw"] := "'#5.2: \"finally\" block must be evaluated'";
__n236 := [ __n237 ];
__n234["arguments"] := __n236;
__n233["expression"] := __n234;
__n229["consequent"] := __n233;
__n229["alternate"] := null;
__n238 := {  };
__n238["type"] := "ExpressionStatement";
__n239 := {  };
__n239["type"] := "AssignmentExpression";
__n239["operator"] := "=";
__n240 := {  };
__n240["type"] := "Identifier";
__n240["name"] := "fin";
__n239["left"] := __n240;
__n241 := {  };
__n241["type"] := "Literal";
__n241["value"] := 0.;
__n241["raw"] := "0";
__n239["right"] := __n241;
__n238["expression"] := __n239;
__n242 := {  };
__n242["type"] := "TryStatement";
__n243 := {  };
__n243["type"] := "BlockStatement";
__n245 := {  };
__n245["type"] := "ThrowStatement";
__n246 := {  };
__n246["type"] := "CallExpression";
__n247 := {  };
__n247["type"] := "Identifier";
__n247["name"] := "TypeError";
__n246["callee"] := __n247;
__n249 := {  };
__n249["type"] := "Literal";
__n249["value"] := 1.;
__n249["raw"] := "1";
__n248 := [ __n249 ];
__n246["arguments"] := __n248;
__n245["argument"] := __n246;
__n244 := [ __n245 ];
__n243["body"] := __n244;
__n242["block"] := __n243;
__n250 := {  };
__n250["type"] := "CatchClause";
__n251 := {  };
__n251["type"] := "Identifier";
__n251["name"] := "e";
__n250["param"] := __n251;
__n252 := {  };
__n252["type"] := "BlockStatement";
__n254 := {  };
__n254["type"] := "IfStatement";
__n255 := {  };
__n255["type"] := "BinaryExpression";
__n255["operator"] := "!==";
__n256 := {  };
__n256["type"] := "CallExpression";
__n257 := {  };
__n257["type"] := "MemberExpression";
__n258 := {  };
__n258["type"] := "Identifier";
__n258["name"] := "e";
__n257["object"] := __n258;
__n259 := {  };
__n259["type"] := "Literal";
__n259["value"] := "toString";
__n259["raw"] := "\"toString\"";
__n257["property"] := __n259;
__n257["computed"] := true;
__n256["callee"] := __n257;
__n260 := [  ];
__n256["arguments"] := __n260;
__n255["left"] := __n256;
__n261 := {  };
__n261["type"] := "Literal";
__n261["value"] := "TypeError: 1";
__n261["raw"] := "\"TypeError: 1\"";
__n255["right"] := __n261;
__n254["test"] := __n255;
__n262 := {  };
__n262["type"] := "ExpressionStatement";
__n263 := {  };
__n263["type"] := "CallExpression";
__n264 := {  };
__n264["type"] := "Identifier";
__n264["name"] := "$ERROR";
__n263["callee"] := __n264;
__n266 := {  };
__n266["type"] := "BinaryExpression";
__n266["operator"] := "+";
__n267 := {  };
__n267["type"] := "Literal";
__n267["value"] := "#6.1: Exception.toString()===\"TypeError: 1\". Actual: Exception is ";
__n267["raw"] := "'#6.1: Exception.toString()===\"TypeError: 1\". Actual: Exception is '";
__n266["left"] := __n267;
__n268 := {  };
__n268["type"] := "Identifier";
__n268["name"] := "e";
__n266["right"] := __n268;
__n265 := [ __n266 ];
__n263["arguments"] := __n265;
__n262["expression"] := __n263;
__n254["consequent"] := __n262;
__n254["alternate"] := null;
__n253 := [ __n254 ];
__n252["body"] := __n253;
__n250["body"] := __n252;
__n242["handler"] := __n250;
__n269 := {  };
__n269["type"] := "BlockStatement";
__n271 := {  };
__n271["type"] := "ExpressionStatement";
__n272 := {  };
__n272["type"] := "AssignmentExpression";
__n272["operator"] := "=";
__n273 := {  };
__n273["type"] := "Identifier";
__n273["name"] := "fin";
__n272["left"] := __n273;
__n274 := {  };
__n274["type"] := "Literal";
__n274["value"] := 1.;
__n274["raw"] := "1";
__n272["right"] := __n274;
__n271["expression"] := __n272;
__n270 := [ __n271 ];
__n269["body"] := __n270;
__n242["finalizer"] := __n269;
__n275 := {  };
__n275["type"] := "IfStatement";
__n276 := {  };
__n276["type"] := "BinaryExpression";
__n276["operator"] := "!==";
__n277 := {  };
__n277["type"] := "Identifier";
__n277["name"] := "fin";
__n276["left"] := __n277;
__n278 := {  };
__n278["type"] := "Literal";
__n278["value"] := 1.;
__n278["raw"] := "1";
__n276["right"] := __n278;
__n275["test"] := __n276;
__n279 := {  };
__n279["type"] := "ExpressionStatement";
__n280 := {  };
__n280["type"] := "CallExpression";
__n281 := {  };
__n281["type"] := "Identifier";
__n281["name"] := "$ERROR";
__n280["callee"] := __n281;
__n283 := {  };
__n283["type"] := "Literal";
__n283["value"] := "#6.2: \"finally\" block must be evaluated";
__n283["raw"] := "'#6.2: \"finally\" block must be evaluated'";
__n282 := [ __n283 ];
__n280["arguments"] := __n282;
__n279["expression"] := __n280;
__n275["consequent"] := __n279;
__n275["alternate"] := null;
__n284 := {  };
__n284["type"] := "ExpressionStatement";
__n285 := {  };
__n285["type"] := "AssignmentExpression";
__n285["operator"] := "=";
__n286 := {  };
__n286["type"] := "Identifier";
__n286["name"] := "fin";
__n285["left"] := __n286;
__n287 := {  };
__n287["type"] := "Literal";
__n287["value"] := 0.;
__n287["raw"] := "0";
__n285["right"] := __n287;
__n284["expression"] := __n285;
__n288 := {  };
__n288["type"] := "TryStatement";
__n289 := {  };
__n289["type"] := "BlockStatement";
__n291 := {  };
__n291["type"] := "ThrowStatement";
__n292 := {  };
__n292["type"] := "CallExpression";
__n293 := {  };
__n293["type"] := "Identifier";
__n293["name"] := "URIError";
__n292["callee"] := __n293;
__n295 := {  };
__n295["type"] := "Literal";
__n295["value"] := "message";
__n295["raw"] := "\"message\"";
__n296 := {  };
__n296["type"] := "Literal";
__n296["value"] := "fileName";
__n296["raw"] := "\"fileName\"";
__n297 := {  };
__n297["type"] := "Literal";
__n297["value"] := "1";
__n297["raw"] := "\"1\"";
__n294 := [ __n295, __n296, __n297 ];
__n292["arguments"] := __n294;
__n291["argument"] := __n292;
__n290 := [ __n291 ];
__n289["body"] := __n290;
__n288["block"] := __n289;
__n298 := {  };
__n298["type"] := "CatchClause";
__n299 := {  };
__n299["type"] := "Identifier";
__n299["name"] := "e";
__n298["param"] := __n299;
__n300 := {  };
__n300["type"] := "BlockStatement";
__n302 := {  };
__n302["type"] := "IfStatement";
__n303 := {  };
__n303["type"] := "BinaryExpression";
__n303["operator"] := "!==";
__n304 := {  };
__n304["type"] := "CallExpression";
__n305 := {  };
__n305["type"] := "MemberExpression";
__n306 := {  };
__n306["type"] := "Identifier";
__n306["name"] := "e";
__n305["object"] := __n306;
__n307 := {  };
__n307["type"] := "Literal";
__n307["value"] := "toString";
__n307["raw"] := "\"toString\"";
__n305["property"] := __n307;
__n305["computed"] := true;
__n304["callee"] := __n305;
__n308 := [  ];
__n304["arguments"] := __n308;
__n303["left"] := __n304;
__n309 := {  };
__n309["type"] := "Literal";
__n309["value"] := "URIError: message";
__n309["raw"] := "\"URIError: message\"";
__n303["right"] := __n309;
__n302["test"] := __n303;
__n310 := {  };
__n310["type"] := "ExpressionStatement";
__n311 := {  };
__n311["type"] := "CallExpression";
__n312 := {  };
__n312["type"] := "Identifier";
__n312["name"] := "$ERROR";
__n311["callee"] := __n312;
__n314 := {  };
__n314["type"] := "BinaryExpression";
__n314["operator"] := "+";
__n315 := {  };
__n315["type"] := "Literal";
__n315["value"] := "#7.1: Exception.toString()===\"URIError: message\". Actual: Exception is ";
__n315["raw"] := "'#7.1: Exception.toString()===\"URIError: message\". Actual: Exception is '";
__n314["left"] := __n315;
__n316 := {  };
__n316["type"] := "Identifier";
__n316["name"] := "e";
__n314["right"] := __n316;
__n313 := [ __n314 ];
__n311["arguments"] := __n313;
__n310["expression"] := __n311;
__n302["consequent"] := __n310;
__n302["alternate"] := null;
__n301 := [ __n302 ];
__n300["body"] := __n301;
__n298["body"] := __n300;
__n288["handler"] := __n298;
__n317 := {  };
__n317["type"] := "BlockStatement";
__n319 := {  };
__n319["type"] := "ExpressionStatement";
__n320 := {  };
__n320["type"] := "AssignmentExpression";
__n320["operator"] := "=";
__n321 := {  };
__n321["type"] := "Identifier";
__n321["name"] := "fin";
__n320["left"] := __n321;
__n322 := {  };
__n322["type"] := "Literal";
__n322["value"] := 1.;
__n322["raw"] := "1";
__n320["right"] := __n322;
__n319["expression"] := __n320;
__n318 := [ __n319 ];
__n317["body"] := __n318;
__n288["finalizer"] := __n317;
__n323 := {  };
__n323["type"] := "IfStatement";
__n324 := {  };
__n324["type"] := "BinaryExpression";
__n324["operator"] := "!==";
__n325 := {  };
__n325["type"] := "Identifier";
__n325["name"] := "fin";
__n324["left"] := __n325;
__n326 := {  };
__n326["type"] := "Literal";
__n326["value"] := 1.;
__n326["raw"] := "1";
__n324["right"] := __n326;
__n323["test"] := __n324;
__n327 := {  };
__n327["type"] := "ExpressionStatement";
__n328 := {  };
__n328["type"] := "CallExpression";
__n329 := {  };
__n329["type"] := "Identifier";
__n329["name"] := "$ERROR";
__n328["callee"] := __n329;
__n331 := {  };
__n331["type"] := "Literal";
__n331["value"] := "#7.2: \"finally\" block must be evaluated";
__n331["raw"] := "'#7.2: \"finally\" block must be evaluated'";
__n330 := [ __n331 ];
__n328["arguments"] := __n330;
__n327["expression"] := __n328;
__n323["consequent"] := __n327;
__n323["alternate"] := null;
__n1 := [ __n2, __n7, __n40, __n49, __n53, __n86, __n95, __n99, __n104, __n137, __n146, __n150, __n183, __n192, __n196, __n229, __n238, __n242, __n275, __n284, __n288, __n323 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n332 := [ "fin", "c3" ];
__n0["variableDeclarations"] := __n332;
__n333 := [  ];
__n0["functionDeclarations"] := __n333;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}