function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "TryStatement";
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "ThrowStatement";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "ex2";
__n9["raw"] := "\"ex2\"";
__n8["argument"] := __n9;
__n7 := [ __n8 ];
__n6["body"] := __n7;
__n5["block"] := __n6;
__n10 := {  };
__n10["type"] := "CatchClause";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "er2";
__n10["param"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "IfStatement";
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "!==";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "er2";
__n15["left"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "ex2";
__n17["raw"] := "\"ex2\"";
__n15["right"] := __n17;
__n14["test"] := __n15;
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "$ERROR";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "+";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "#1.1: Exception === \"ex2\". Actual:  Exception ===";
__n23["raw"] := "'#1.1: Exception === \"ex2\". Actual:  Exception ==='";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "e";
__n22["right"] := __n24;
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n18["expression"] := __n19;
__n14["consequent"] := __n18;
__n14["alternate"] := null;
__n25 := {  };
__n25["type"] := "ThrowStatement";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "ex1";
__n26["raw"] := "\"ex1\"";
__n25["argument"] := __n26;
__n13 := [ __n14, __n25 ];
__n12["body"] := __n13;
__n10["body"] := __n12;
__n5["handler"] := __n10;
__n5["finalizer"] := null;
__n4 := [ __n5 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n27 := {  };
__n27["type"] := "CatchClause";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "er1";
__n27["param"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "IfStatement";
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "!==";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "er1";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "ex1";
__n34["raw"] := "\"ex1\"";
__n32["right"] := __n34;
__n31["test"] := __n32;
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "$ERROR";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "BinaryExpression";
__n39["operator"] := "+";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "#1.2: Exception === \"ex1\". Actual: ";
__n40["raw"] := "'#1.2: Exception === \"ex1\". Actual: '";
__n39["left"] := __n40;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "er1";
__n39["right"] := __n41;
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["expression"] := __n36;
__n31["consequent"] := __n35;
__n31["alternate"] := null;
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "===";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "er1";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "ex2";
__n45["raw"] := "\"ex2\"";
__n43["right"] := __n45;
__n42["test"] := __n43;
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$ERROR";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "#1.3: Exception !== \"ex2\". Actual: catch previous embedded exception";
__n50["raw"] := "'#1.3: Exception !== \"ex2\". Actual: catch previous embedded exception'";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n42["consequent"] := __n46;
__n42["alternate"] := null;
__n30 := [ __n31, __n42 ];
__n29["body"] := __n30;
__n27["body"] := __n29;
__n2["handler"] := __n27;
__n2["finalizer"] := null;
__n51 := {  };
__n51["type"] := "TryStatement";
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ThrowStatement";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "ex1";
__n55["raw"] := "\"ex1\"";
__n54["argument"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n51["block"] := __n52;
__n56 := {  };
__n56["type"] := "CatchClause";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "er1";
__n56["param"] := __n57;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "TryStatement";
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ThrowStatement";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "ex2";
__n64["raw"] := "\"ex2\"";
__n63["argument"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n60["block"] := __n61;
__n65 := {  };
__n65["type"] := "CatchClause";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "er1";
__n65["param"] := __n66;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "IfStatement";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "===";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "er1";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "ex1";
__n72["raw"] := "\"ex1\"";
__n70["right"] := __n72;
__n69["test"] := __n70;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "$ERROR";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "#2.1: Exception !== \"ex1\". Actual: catch previous catching exception";
__n77["raw"] := "'#2.1: Exception !== \"ex1\". Actual: catch previous catching exception'";
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n69["consequent"] := __n73;
__n69["alternate"] := null;
__n78 := {  };
__n78["type"] := "IfStatement";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "!==";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "er1";
__n79["left"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "ex2";
__n81["raw"] := "\"ex2\"";
__n79["right"] := __n81;
__n78["test"] := __n79;
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#2.2: Exception === \"ex2\". Actual:  Exception ===";
__n87["raw"] := "'#2.2: Exception === \"ex2\". Actual:  Exception ==='";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "er1";
__n86["right"] := __n88;
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n78["consequent"] := __n82;
__n78["alternate"] := null;
__n68 := [ __n69, __n78 ];
__n67["body"] := __n68;
__n65["body"] := __n67;
__n60["handler"] := __n65;
__n60["finalizer"] := null;
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "!==";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "er1";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "ex1";
__n92["raw"] := "\"ex1\"";
__n90["right"] := __n92;
__n89["test"] := __n90;
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "#2.3: Exception === \"ex1\". Actual:  Exception ===";
__n98["raw"] := "'#2.3: Exception === \"ex1\". Actual:  Exception ==='";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "er1";
__n97["right"] := __n99;
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n89["consequent"] := __n93;
__n89["alternate"] := null;
__n100 := {  };
__n100["type"] := "IfStatement";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "===";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "er1";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "ex2";
__n103["raw"] := "\"ex2\"";
__n101["right"] := __n103;
__n100["test"] := __n101;
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "$ERROR";
__n105["callee"] := __n106;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "#2.4: Exception !== \"ex2\". Actual: catch previous catching exception";
__n108["raw"] := "'#2.4: Exception !== \"ex2\". Actual: catch previous catching exception'";
__n107 := [ __n108 ];
__n105["arguments"] := __n107;
__n104["expression"] := __n105;
__n100["consequent"] := __n104;
__n100["alternate"] := null;
__n59 := [ __n60, __n89, __n100 ];
__n58["body"] := __n59;
__n56["body"] := __n58;
__n51["handler"] := __n56;
__n51["finalizer"] := null;
__n109 := {  };
__n109["type"] := "TryStatement";
__n110 := {  };
__n110["type"] := "BlockStatement";
__n112 := {  };
__n112["type"] := "ThrowStatement";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "ex1";
__n113["raw"] := "\"ex1\"";
__n112["argument"] := __n113;
__n111 := [ __n112 ];
__n110["body"] := __n111;
__n109["block"] := __n110;
__n114 := {  };
__n114["type"] := "CatchClause";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "er1";
__n114["param"] := __n115;
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "IfStatement";
__n119 := {  };
__n119["type"] := "BinaryExpression";
__n119["operator"] := "!==";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "er1";
__n119["left"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "ex1";
__n121["raw"] := "\"ex1\"";
__n119["right"] := __n121;
__n118["test"] := __n119;
__n122 := {  };
__n122["type"] := "ExpressionStatement";
__n123 := {  };
__n123["type"] := "CallExpression";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "$ERROR";
__n123["callee"] := __n124;
__n126 := {  };
__n126["type"] := "BinaryExpression";
__n126["operator"] := "+";
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "#3.1: Exception ===\"ex1\". Actual:  Exception ===";
__n127["raw"] := "'#3.1: Exception ===\"ex1\". Actual:  Exception ==='";
__n126["left"] := __n127;
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "er1";
__n126["right"] := __n128;
__n125 := [ __n126 ];
__n123["arguments"] := __n125;
__n122["expression"] := __n123;
__n118["consequent"] := __n122;
__n118["alternate"] := null;
__n117 := [ __n118 ];
__n116["body"] := __n117;
__n114["body"] := __n116;
__n109["handler"] := __n114;
__n129 := {  };
__n129["type"] := "BlockStatement";
__n131 := {  };
__n131["type"] := "TryStatement";
__n132 := {  };
__n132["type"] := "BlockStatement";
__n134 := {  };
__n134["type"] := "ThrowStatement";
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "ex2";
__n135["raw"] := "\"ex2\"";
__n134["argument"] := __n135;
__n133 := [ __n134 ];
__n132["body"] := __n133;
__n131["block"] := __n132;
__n136 := {  };
__n136["type"] := "CatchClause";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "er1";
__n136["param"] := __n137;
__n138 := {  };
__n138["type"] := "BlockStatement";
__n140 := {  };
__n140["type"] := "IfStatement";
__n141 := {  };
__n141["type"] := "BinaryExpression";
__n141["operator"] := "===";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "er1";
__n141["left"] := __n142;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := "ex1";
__n143["raw"] := "\"ex1\"";
__n141["right"] := __n143;
__n140["test"] := __n141;
__n144 := {  };
__n144["type"] := "ExpressionStatement";
__n145 := {  };
__n145["type"] := "CallExpression";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "$ERROR";
__n145["callee"] := __n146;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "#3.2: Exception !==\"ex1\". Actual: catch previous embedded exception";
__n148["raw"] := "'#3.2: Exception !==\"ex1\". Actual: catch previous embedded exception'";
__n147 := [ __n148 ];
__n145["arguments"] := __n147;
__n144["expression"] := __n145;
__n140["consequent"] := __n144;
__n140["alternate"] := null;
__n149 := {  };
__n149["type"] := "IfStatement";
__n150 := {  };
__n150["type"] := "BinaryExpression";
__n150["operator"] := "!==";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "er1";
__n150["left"] := __n151;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := "ex2";
__n152["raw"] := "\"ex2\"";
__n150["right"] := __n152;
__n149["test"] := __n150;
__n153 := {  };
__n153["type"] := "ExpressionStatement";
__n154 := {  };
__n154["type"] := "CallExpression";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "$ERROR";
__n154["callee"] := __n155;
__n157 := {  };
__n157["type"] := "BinaryExpression";
__n157["operator"] := "+";
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := "#3.3: Exception ===\"ex2\". Actual:  Exception ===";
__n158["raw"] := "'#3.3: Exception ===\"ex2\". Actual:  Exception ==='";
__n157["left"] := __n158;
__n159 := {  };
__n159["type"] := "Identifier";
__n159["name"] := "er1";
__n157["right"] := __n159;
__n156 := [ __n157 ];
__n154["arguments"] := __n156;
__n153["expression"] := __n154;
__n149["consequent"] := __n153;
__n149["alternate"] := null;
__n139 := [ __n140, __n149 ];
__n138["body"] := __n139;
__n136["body"] := __n138;
__n131["handler"] := __n136;
__n131["finalizer"] := null;
__n130 := [ __n131 ];
__n129["body"] := __n130;
__n109["finalizer"] := __n129;
__n160 := {  };
__n160["type"] := "VariableDeclaration";
__n162 := {  };
__n162["type"] := "VariableDeclarator";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "c4";
__n162["id"] := __n163;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := 0.;
__n164["raw"] := "0";
__n162["init"] := __n164;
__n161 := [ __n162 ];
__n160["declarations"] := __n161;
__n160["kind"] := "var";
__n165 := {  };
__n165["type"] := "TryStatement";
__n166 := {  };
__n166["type"] := "BlockStatement";
__n168 := {  };
__n168["type"] := "ThrowStatement";
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := "ex1";
__n169["raw"] := "\"ex1\"";
__n168["argument"] := __n169;
__n167 := [ __n168 ];
__n166["body"] := __n167;
__n165["block"] := __n166;
__n170 := {  };
__n170["type"] := "CatchClause";
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "er1";
__n170["param"] := __n171;
__n172 := {  };
__n172["type"] := "BlockStatement";
__n174 := {  };
__n174["type"] := "TryStatement";
__n175 := {  };
__n175["type"] := "BlockStatement";
__n177 := {  };
__n177["type"] := "ThrowStatement";
__n178 := {  };
__n178["type"] := "Literal";
__n178["value"] := "ex2";
__n178["raw"] := "\"ex2\"";
__n177["argument"] := __n178;
__n176 := [ __n177 ];
__n175["body"] := __n176;
__n174["block"] := __n175;
__n179 := {  };
__n179["type"] := "CatchClause";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "er1";
__n179["param"] := __n180;
__n181 := {  };
__n181["type"] := "BlockStatement";
__n183 := {  };
__n183["type"] := "IfStatement";
__n184 := {  };
__n184["type"] := "BinaryExpression";
__n184["operator"] := "===";
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "er1";
__n184["left"] := __n185;
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := "ex1";
__n186["raw"] := "\"ex1\"";
__n184["right"] := __n186;
__n183["test"] := __n184;
__n187 := {  };
__n187["type"] := "ExpressionStatement";
__n188 := {  };
__n188["type"] := "CallExpression";
__n189 := {  };
__n189["type"] := "Identifier";
__n189["name"] := "$ERROR";
__n188["callee"] := __n189;
__n191 := {  };
__n191["type"] := "Literal";
__n191["value"] := "#4.1: Exception !==\"ex1\". Actual: catch previous catching exception";
__n191["raw"] := "'#4.1: Exception !==\"ex1\". Actual: catch previous catching exception'";
__n190 := [ __n191 ];
__n188["arguments"] := __n190;
__n187["expression"] := __n188;
__n183["consequent"] := __n187;
__n183["alternate"] := null;
__n192 := {  };
__n192["type"] := "IfStatement";
__n193 := {  };
__n193["type"] := "BinaryExpression";
__n193["operator"] := "!==";
__n194 := {  };
__n194["type"] := "Identifier";
__n194["name"] := "er1";
__n193["left"] := __n194;
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "ex2";
__n195["raw"] := "\"ex2\"";
__n193["right"] := __n195;
__n192["test"] := __n193;
__n196 := {  };
__n196["type"] := "ExpressionStatement";
__n197 := {  };
__n197["type"] := "CallExpression";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "$ERROR";
__n197["callee"] := __n198;
__n200 := {  };
__n200["type"] := "BinaryExpression";
__n200["operator"] := "+";
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := "#4.2: Exception ===\"ex2\". Actual:  Exception ===";
__n201["raw"] := "'#4.2: Exception ===\"ex2\". Actual:  Exception ==='";
__n200["left"] := __n201;
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "er1";
__n200["right"] := __n202;
__n199 := [ __n200 ];
__n197["arguments"] := __n199;
__n196["expression"] := __n197;
__n192["consequent"] := __n196;
__n192["alternate"] := null;
__n182 := [ __n183, __n192 ];
__n181["body"] := __n182;
__n179["body"] := __n181;
__n174["handler"] := __n179;
__n174["finalizer"] := null;
__n203 := {  };
__n203["type"] := "IfStatement";
__n204 := {  };
__n204["type"] := "BinaryExpression";
__n204["operator"] := "!==";
__n205 := {  };
__n205["type"] := "Identifier";
__n205["name"] := "er1";
__n204["left"] := __n205;
__n206 := {  };
__n206["type"] := "Literal";
__n206["value"] := "ex1";
__n206["raw"] := "\"ex1\"";
__n204["right"] := __n206;
__n203["test"] := __n204;
__n207 := {  };
__n207["type"] := "ExpressionStatement";
__n208 := {  };
__n208["type"] := "CallExpression";
__n209 := {  };
__n209["type"] := "Identifier";
__n209["name"] := "$ERROR";
__n208["callee"] := __n209;
__n211 := {  };
__n211["type"] := "BinaryExpression";
__n211["operator"] := "+";
__n212 := {  };
__n212["type"] := "Literal";
__n212["value"] := "#4.3: Exception ===\"ex1\". Actual:  Exception ===";
__n212["raw"] := "'#4.3: Exception ===\"ex1\". Actual:  Exception ==='";
__n211["left"] := __n212;
__n213 := {  };
__n213["type"] := "Identifier";
__n213["name"] := "er1";
__n211["right"] := __n213;
__n210 := [ __n211 ];
__n208["arguments"] := __n210;
__n207["expression"] := __n208;
__n203["consequent"] := __n207;
__n203["alternate"] := null;
__n214 := {  };
__n214["type"] := "IfStatement";
__n215 := {  };
__n215["type"] := "BinaryExpression";
__n215["operator"] := "===";
__n216 := {  };
__n216["type"] := "Identifier";
__n216["name"] := "er1";
__n215["left"] := __n216;
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := "ex2";
__n217["raw"] := "\"ex2\"";
__n215["right"] := __n217;
__n214["test"] := __n215;
__n218 := {  };
__n218["type"] := "ExpressionStatement";
__n219 := {  };
__n219["type"] := "CallExpression";
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "$ERROR";
__n219["callee"] := __n220;
__n222 := {  };
__n222["type"] := "Literal";
__n222["value"] := "#4.4: Exception !==\"ex2\". Actual: Catch previous embedded exception";
__n222["raw"] := "'#4.4: Exception !==\"ex2\". Actual: Catch previous embedded exception'";
__n221 := [ __n222 ];
__n219["arguments"] := __n221;
__n218["expression"] := __n219;
__n214["consequent"] := __n218;
__n214["alternate"] := null;
__n173 := [ __n174, __n203, __n214 ];
__n172["body"] := __n173;
__n170["body"] := __n172;
__n165["handler"] := __n170;
__n223 := {  };
__n223["type"] := "BlockStatement";
__n225 := {  };
__n225["type"] := "ExpressionStatement";
__n226 := {  };
__n226["type"] := "AssignmentExpression";
__n226["operator"] := "=";
__n227 := {  };
__n227["type"] := "Identifier";
__n227["name"] := "c4";
__n226["left"] := __n227;
__n228 := {  };
__n228["type"] := "Literal";
__n228["value"] := 1.;
__n228["raw"] := "1";
__n226["right"] := __n228;
__n225["expression"] := __n226;
__n224 := [ __n225 ];
__n223["body"] := __n224;
__n165["finalizer"] := __n223;
__n229 := {  };
__n229["type"] := "IfStatement";
__n230 := {  };
__n230["type"] := "BinaryExpression";
__n230["operator"] := "!==";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "c4";
__n230["left"] := __n231;
__n232 := {  };
__n232["type"] := "Literal";
__n232["value"] := 1.;
__n232["raw"] := "1";
__n230["right"] := __n232;
__n229["test"] := __n230;
__n233 := {  };
__n233["type"] := "ExpressionStatement";
__n234 := {  };
__n234["type"] := "CallExpression";
__n235 := {  };
__n235["type"] := "Identifier";
__n235["name"] := "$ERROR";
__n234["callee"] := __n235;
__n237 := {  };
__n237["type"] := "Literal";
__n237["value"] := "#4.5: \"finally\" block must be evaluated";
__n237["raw"] := "'#4.5: \"finally\" block must be evaluated'";
__n236 := [ __n237 ];
__n234["arguments"] := __n236;
__n233["expression"] := __n234;
__n229["consequent"] := __n233;
__n229["alternate"] := null;
__n238 := {  };
__n238["type"] := "VariableDeclaration";
__n240 := {  };
__n240["type"] := "VariableDeclarator";
__n241 := {  };
__n241["type"] := "Identifier";
__n241["name"] := "c5";
__n240["id"] := __n241;
__n242 := {  };
__n242["type"] := "Literal";
__n242["value"] := 0.;
__n242["raw"] := "0";
__n240["init"] := __n242;
__n239 := [ __n240 ];
__n238["declarations"] := __n239;
__n238["kind"] := "var";
__n243 := {  };
__n243["type"] := "TryStatement";
__n244 := {  };
__n244["type"] := "BlockStatement";
__n246 := {  };
__n246["type"] := "TryStatement";
__n247 := {  };
__n247["type"] := "BlockStatement";
__n249 := {  };
__n249["type"] := "ThrowStatement";
__n250 := {  };
__n250["type"] := "Literal";
__n250["value"] := "ex2";
__n250["raw"] := "\"ex2\"";
__n249["argument"] := __n250;
__n248 := [ __n249 ];
__n247["body"] := __n248;
__n246["block"] := __n247;
__n251 := {  };
__n251["type"] := "CatchClause";
__n252 := {  };
__n252["type"] := "Identifier";
__n252["name"] := "er1";
__n251["param"] := __n252;
__n253 := {  };
__n253["type"] := "BlockStatement";
__n255 := {  };
__n255["type"] := "IfStatement";
__n256 := {  };
__n256["type"] := "BinaryExpression";
__n256["operator"] := "!==";
__n257 := {  };
__n257["type"] := "Identifier";
__n257["name"] := "er1";
__n256["left"] := __n257;
__n258 := {  };
__n258["type"] := "Literal";
__n258["value"] := "ex2";
__n258["raw"] := "\"ex2\"";
__n256["right"] := __n258;
__n255["test"] := __n256;
__n259 := {  };
__n259["type"] := "ExpressionStatement";
__n260 := {  };
__n260["type"] := "CallExpression";
__n261 := {  };
__n261["type"] := "Identifier";
__n261["name"] := "$ERROR";
__n260["callee"] := __n261;
__n263 := {  };
__n263["type"] := "BinaryExpression";
__n263["operator"] := "+";
__n264 := {  };
__n264["type"] := "Literal";
__n264["value"] := "#5.1: Exception ===\"ex2\". Actual:  Exception ===";
__n264["raw"] := "'#5.1: Exception ===\"ex2\". Actual:  Exception ==='";
__n263["left"] := __n264;
__n265 := {  };
__n265["type"] := "Identifier";
__n265["name"] := "er1";
__n263["right"] := __n265;
__n262 := [ __n263 ];
__n260["arguments"] := __n262;
__n259["expression"] := __n260;
__n255["consequent"] := __n259;
__n255["alternate"] := null;
__n254 := [ __n255 ];
__n253["body"] := __n254;
__n251["body"] := __n253;
__n246["handler"] := __n251;
__n246["finalizer"] := null;
__n266 := {  };
__n266["type"] := "ThrowStatement";
__n267 := {  };
__n267["type"] := "Literal";
__n267["value"] := "ex1";
__n267["raw"] := "\"ex1\"";
__n266["argument"] := __n267;
__n245 := [ __n246, __n266 ];
__n244["body"] := __n245;
__n243["block"] := __n244;
__n268 := {  };
__n268["type"] := "CatchClause";
__n269 := {  };
__n269["type"] := "Identifier";
__n269["name"] := "er1";
__n268["param"] := __n269;
__n270 := {  };
__n270["type"] := "BlockStatement";
__n272 := {  };
__n272["type"] := "IfStatement";
__n273 := {  };
__n273["type"] := "BinaryExpression";
__n273["operator"] := "!==";
__n274 := {  };
__n274["type"] := "Identifier";
__n274["name"] := "er1";
__n273["left"] := __n274;
__n275 := {  };
__n275["type"] := "Literal";
__n275["value"] := "ex1";
__n275["raw"] := "\"ex1\"";
__n273["right"] := __n275;
__n272["test"] := __n273;
__n276 := {  };
__n276["type"] := "ExpressionStatement";
__n277 := {  };
__n277["type"] := "CallExpression";
__n278 := {  };
__n278["type"] := "Identifier";
__n278["name"] := "$ERROR";
__n277["callee"] := __n278;
__n280 := {  };
__n280["type"] := "BinaryExpression";
__n280["operator"] := "+";
__n281 := {  };
__n281["type"] := "Literal";
__n281["value"] := "#5.2: Exception ===\"ex1\". Actual:  Exception ===";
__n281["raw"] := "'#5.2: Exception ===\"ex1\". Actual:  Exception ==='";
__n280["left"] := __n281;
__n282 := {  };
__n282["type"] := "Identifier";
__n282["name"] := "er1";
__n280["right"] := __n282;
__n279 := [ __n280 ];
__n277["arguments"] := __n279;
__n276["expression"] := __n277;
__n272["consequent"] := __n276;
__n272["alternate"] := null;
__n283 := {  };
__n283["type"] := "IfStatement";
__n284 := {  };
__n284["type"] := "BinaryExpression";
__n284["operator"] := "===";
__n285 := {  };
__n285["type"] := "Identifier";
__n285["name"] := "er1";
__n284["left"] := __n285;
__n286 := {  };
__n286["type"] := "Literal";
__n286["value"] := "ex2";
__n286["raw"] := "\"ex2\"";
__n284["right"] := __n286;
__n283["test"] := __n284;
__n287 := {  };
__n287["type"] := "ExpressionStatement";
__n288 := {  };
__n288["type"] := "CallExpression";
__n289 := {  };
__n289["type"] := "Identifier";
__n289["name"] := "$ERROR";
__n288["callee"] := __n289;
__n291 := {  };
__n291["type"] := "Literal";
__n291["value"] := "#5.3: Exception !==\"ex2\". Actual: catch previous embedded exception";
__n291["raw"] := "'#5.3: Exception !==\"ex2\". Actual: catch previous embedded exception'";
__n290 := [ __n291 ];
__n288["arguments"] := __n290;
__n287["expression"] := __n288;
__n283["consequent"] := __n287;
__n283["alternate"] := null;
__n271 := [ __n272, __n283 ];
__n270["body"] := __n271;
__n268["body"] := __n270;
__n243["handler"] := __n268;
__n292 := {  };
__n292["type"] := "BlockStatement";
__n294 := {  };
__n294["type"] := "ExpressionStatement";
__n295 := {  };
__n295["type"] := "AssignmentExpression";
__n295["operator"] := "=";
__n296 := {  };
__n296["type"] := "Identifier";
__n296["name"] := "c5";
__n295["left"] := __n296;
__n297 := {  };
__n297["type"] := "Literal";
__n297["value"] := 1.;
__n297["raw"] := "1";
__n295["right"] := __n297;
__n294["expression"] := __n295;
__n293 := [ __n294 ];
__n292["body"] := __n293;
__n243["finalizer"] := __n292;
__n298 := {  };
__n298["type"] := "IfStatement";
__n299 := {  };
__n299["type"] := "BinaryExpression";
__n299["operator"] := "!==";
__n300 := {  };
__n300["type"] := "Identifier";
__n300["name"] := "c5";
__n299["left"] := __n300;
__n301 := {  };
__n301["type"] := "Literal";
__n301["value"] := 1.;
__n301["raw"] := "1";
__n299["right"] := __n301;
__n298["test"] := __n299;
__n302 := {  };
__n302["type"] := "ExpressionStatement";
__n303 := {  };
__n303["type"] := "CallExpression";
__n304 := {  };
__n304["type"] := "Identifier";
__n304["name"] := "$ERROR";
__n303["callee"] := __n304;
__n306 := {  };
__n306["type"] := "Literal";
__n306["value"] := "#5.4: \"finally\" block must be evaluated";
__n306["raw"] := "'#5.4: \"finally\" block must be evaluated'";
__n305 := [ __n306 ];
__n303["arguments"] := __n305;
__n302["expression"] := __n303;
__n298["consequent"] := __n302;
__n298["alternate"] := null;
__n307 := {  };
__n307["type"] := "VariableDeclaration";
__n309 := {  };
__n309["type"] := "VariableDeclarator";
__n310 := {  };
__n310["type"] := "Identifier";
__n310["name"] := "c6";
__n309["id"] := __n310;
__n311 := {  };
__n311["type"] := "Literal";
__n311["value"] := 0.;
__n311["raw"] := "0";
__n309["init"] := __n311;
__n308 := [ __n309 ];
__n307["declarations"] := __n308;
__n307["kind"] := "var";
__n312 := {  };
__n312["type"] := "TryStatement";
__n313 := {  };
__n313["type"] := "BlockStatement";
__n315 := {  };
__n315["type"] := "TryStatement";
__n316 := {  };
__n316["type"] := "BlockStatement";
__n318 := {  };
__n318["type"] := "ThrowStatement";
__n319 := {  };
__n319["type"] := "Literal";
__n319["value"] := "ex1";
__n319["raw"] := "\"ex1\"";
__n318["argument"] := __n319;
__n317 := [ __n318 ];
__n316["body"] := __n317;
__n315["block"] := __n316;
__n320 := {  };
__n320["type"] := "CatchClause";
__n321 := {  };
__n321["type"] := "Identifier";
__n321["name"] := "er1";
__n320["param"] := __n321;
__n322 := {  };
__n322["type"] := "BlockStatement";
__n324 := {  };
__n324["type"] := "IfStatement";
__n325 := {  };
__n325["type"] := "BinaryExpression";
__n325["operator"] := "!==";
__n326 := {  };
__n326["type"] := "Identifier";
__n326["name"] := "er1";
__n325["left"] := __n326;
__n327 := {  };
__n327["type"] := "Literal";
__n327["value"] := "ex1";
__n327["raw"] := "\"ex1\"";
__n325["right"] := __n327;
__n324["test"] := __n325;
__n328 := {  };
__n328["type"] := "ExpressionStatement";
__n329 := {  };
__n329["type"] := "CallExpression";
__n330 := {  };
__n330["type"] := "Identifier";
__n330["name"] := "$ERROR";
__n329["callee"] := __n330;
__n332 := {  };
__n332["type"] := "BinaryExpression";
__n332["operator"] := "+";
__n333 := {  };
__n333["type"] := "Literal";
__n333["value"] := "#6.1: Exception ===\"ex1\". Actual:  Exception ===";
__n333["raw"] := "'#6.1: Exception ===\"ex1\". Actual:  Exception ==='";
__n332["left"] := __n333;
__n334 := {  };
__n334["type"] := "Identifier";
__n334["name"] := "er1";
__n332["right"] := __n334;
__n331 := [ __n332 ];
__n329["arguments"] := __n331;
__n328["expression"] := __n329;
__n324["consequent"] := __n328;
__n324["alternate"] := null;
__n323 := [ __n324 ];
__n322["body"] := __n323;
__n320["body"] := __n322;
__n315["handler"] := __n320;
__n315["finalizer"] := null;
__n314 := [ __n315 ];
__n313["body"] := __n314;
__n312["block"] := __n313;
__n312["handler"] := null;
__n335 := {  };
__n335["type"] := "BlockStatement";
__n337 := {  };
__n337["type"] := "ExpressionStatement";
__n338 := {  };
__n338["type"] := "AssignmentExpression";
__n338["operator"] := "=";
__n339 := {  };
__n339["type"] := "Identifier";
__n339["name"] := "c6";
__n338["left"] := __n339;
__n340 := {  };
__n340["type"] := "Literal";
__n340["value"] := 1.;
__n340["raw"] := "1";
__n338["right"] := __n340;
__n337["expression"] := __n338;
__n336 := [ __n337 ];
__n335["body"] := __n336;
__n312["finalizer"] := __n335;
__n341 := {  };
__n341["type"] := "IfStatement";
__n342 := {  };
__n342["type"] := "BinaryExpression";
__n342["operator"] := "!==";
__n343 := {  };
__n343["type"] := "Identifier";
__n343["name"] := "c6";
__n342["left"] := __n343;
__n344 := {  };
__n344["type"] := "Literal";
__n344["value"] := 1.;
__n344["raw"] := "1";
__n342["right"] := __n344;
__n341["test"] := __n342;
__n345 := {  };
__n345["type"] := "ExpressionStatement";
__n346 := {  };
__n346["type"] := "CallExpression";
__n347 := {  };
__n347["type"] := "Identifier";
__n347["name"] := "$ERROR";
__n346["callee"] := __n347;
__n349 := {  };
__n349["type"] := "Literal";
__n349["value"] := "#6.2: \"finally\" block must be evaluated";
__n349["raw"] := "'#6.2: \"finally\" block must be evaluated'";
__n348 := [ __n349 ];
__n346["arguments"] := __n348;
__n345["expression"] := __n346;
__n341["consequent"] := __n345;
__n341["alternate"] := null;
__n350 := {  };
__n350["type"] := "VariableDeclaration";
__n352 := {  };
__n352["type"] := "VariableDeclarator";
__n353 := {  };
__n353["type"] := "Identifier";
__n353["name"] := "c7";
__n352["id"] := __n353;
__n354 := {  };
__n354["type"] := "Literal";
__n354["value"] := 0.;
__n354["raw"] := "0";
__n352["init"] := __n354;
__n351 := [ __n352 ];
__n350["declarations"] := __n351;
__n350["kind"] := "var";
__n355 := {  };
__n355["type"] := "TryStatement";
__n356 := {  };
__n356["type"] := "BlockStatement";
__n358 := {  };
__n358["type"] := "TryStatement";
__n359 := {  };
__n359["type"] := "BlockStatement";
__n361 := {  };
__n361["type"] := "ThrowStatement";
__n362 := {  };
__n362["type"] := "Literal";
__n362["value"] := "ex1";
__n362["raw"] := "\"ex1\"";
__n361["argument"] := __n362;
__n360 := [ __n361 ];
__n359["body"] := __n360;
__n358["block"] := __n359;
__n358["handler"] := null;
__n363 := {  };
__n363["type"] := "BlockStatement";
__n365 := {  };
__n365["type"] := "TryStatement";
__n366 := {  };
__n366["type"] := "BlockStatement";
__n368 := {  };
__n368["type"] := "ExpressionStatement";
__n369 := {  };
__n369["type"] := "AssignmentExpression";
__n369["operator"] := "=";
__n370 := {  };
__n370["type"] := "Identifier";
__n370["name"] := "c7";
__n369["left"] := __n370;
__n371 := {  };
__n371["type"] := "Literal";
__n371["value"] := 1.;
__n371["raw"] := "1";
__n369["right"] := __n371;
__n368["expression"] := __n369;
__n372 := {  };
__n372["type"] := "ThrowStatement";
__n373 := {  };
__n373["type"] := "Literal";
__n373["value"] := "ex2";
__n373["raw"] := "\"ex2\"";
__n372["argument"] := __n373;
__n367 := [ __n368, __n372 ];
__n366["body"] := __n367;
__n365["block"] := __n366;
__n374 := {  };
__n374["type"] := "CatchClause";
__n375 := {  };
__n375["type"] := "Identifier";
__n375["name"] := "er1";
__n374["param"] := __n375;
__n376 := {  };
__n376["type"] := "BlockStatement";
__n378 := {  };
__n378["type"] := "IfStatement";
__n379 := {  };
__n379["type"] := "BinaryExpression";
__n379["operator"] := "!==";
__n380 := {  };
__n380["type"] := "Identifier";
__n380["name"] := "er1";
__n379["left"] := __n380;
__n381 := {  };
__n381["type"] := "Literal";
__n381["value"] := "ex2";
__n381["raw"] := "\"ex2\"";
__n379["right"] := __n381;
__n378["test"] := __n379;
__n382 := {  };
__n382["type"] := "ExpressionStatement";
__n383 := {  };
__n383["type"] := "CallExpression";
__n384 := {  };
__n384["type"] := "Identifier";
__n384["name"] := "$ERROR";
__n383["callee"] := __n384;
__n386 := {  };
__n386["type"] := "BinaryExpression";
__n386["operator"] := "+";
__n387 := {  };
__n387["type"] := "Literal";
__n387["value"] := "#7.1: Exception ===\"ex2\". Actual:  Exception ===";
__n387["raw"] := "'#7.1: Exception ===\"ex2\". Actual:  Exception ==='";
__n386["left"] := __n387;
__n388 := {  };
__n388["type"] := "Identifier";
__n388["name"] := "er1";
__n386["right"] := __n388;
__n385 := [ __n386 ];
__n383["arguments"] := __n385;
__n382["expression"] := __n383;
__n378["consequent"] := __n382;
__n378["alternate"] := null;
__n389 := {  };
__n389["type"] := "IfStatement";
__n390 := {  };
__n390["type"] := "BinaryExpression";
__n390["operator"] := "===";
__n391 := {  };
__n391["type"] := "Identifier";
__n391["name"] := "er1";
__n390["left"] := __n391;
__n392 := {  };
__n392["type"] := "Literal";
__n392["value"] := "ex1";
__n392["raw"] := "\"ex1\"";
__n390["right"] := __n392;
__n389["test"] := __n390;
__n393 := {  };
__n393["type"] := "ExpressionStatement";
__n394 := {  };
__n394["type"] := "CallExpression";
__n395 := {  };
__n395["type"] := "Identifier";
__n395["name"] := "$ERROR";
__n394["callee"] := __n395;
__n397 := {  };
__n397["type"] := "Literal";
__n397["value"] := "#7.2: Exception !==\"ex1\". Actual: catch previous embedded exception";
__n397["raw"] := "'#7.2: Exception !==\"ex1\". Actual: catch previous embedded exception'";
__n396 := [ __n397 ];
__n394["arguments"] := __n396;
__n393["expression"] := __n394;
__n389["consequent"] := __n393;
__n389["alternate"] := null;
__n398 := {  };
__n398["type"] := "ExpressionStatement";
__n399 := {  };
__n399["type"] := "UpdateExpression";
__n399["operator"] := "++";
__n400 := {  };
__n400["type"] := "Identifier";
__n400["name"] := "c7";
__n399["argument"] := __n400;
__n399["prefix"] := false;
__n398["expression"] := __n399;
__n377 := [ __n378, __n389, __n398 ];
__n376["body"] := __n377;
__n374["body"] := __n376;
__n365["handler"] := __n374;
__n365["finalizer"] := null;
__n364 := [ __n365 ];
__n363["body"] := __n364;
__n358["finalizer"] := __n363;
__n357 := [ __n358 ];
__n356["body"] := __n357;
__n355["block"] := __n356;
__n401 := {  };
__n401["type"] := "CatchClause";
__n402 := {  };
__n402["type"] := "Identifier";
__n402["name"] := "er1";
__n401["param"] := __n402;
__n403 := {  };
__n403["type"] := "BlockStatement";
__n405 := {  };
__n405["type"] := "IfStatement";
__n406 := {  };
__n406["type"] := "BinaryExpression";
__n406["operator"] := "!==";
__n407 := {  };
__n407["type"] := "Identifier";
__n407["name"] := "er1";
__n406["left"] := __n407;
__n408 := {  };
__n408["type"] := "Literal";
__n408["value"] := "ex1";
__n408["raw"] := "\"ex1\"";
__n406["right"] := __n408;
__n405["test"] := __n406;
__n409 := {  };
__n409["type"] := "ExpressionStatement";
__n410 := {  };
__n410["type"] := "CallExpression";
__n411 := {  };
__n411["type"] := "Identifier";
__n411["name"] := "$ERROR";
__n410["callee"] := __n411;
__n413 := {  };
__n413["type"] := "BinaryExpression";
__n413["operator"] := "+";
__n414 := {  };
__n414["type"] := "Literal";
__n414["value"] := "#7.3: Exception ===\"ex1\". Actual:  Exception ===";
__n414["raw"] := "'#7.3: Exception ===\"ex1\". Actual:  Exception ==='";
__n413["left"] := __n414;
__n415 := {  };
__n415["type"] := "Identifier";
__n415["name"] := "er1";
__n413["right"] := __n415;
__n412 := [ __n413 ];
__n410["arguments"] := __n412;
__n409["expression"] := __n410;
__n405["consequent"] := __n409;
__n405["alternate"] := null;
__n404 := [ __n405 ];
__n403["body"] := __n404;
__n401["body"] := __n403;
__n355["handler"] := __n401;
__n355["finalizer"] := null;
__n416 := {  };
__n416["type"] := "IfStatement";
__n417 := {  };
__n417["type"] := "BinaryExpression";
__n417["operator"] := "!==";
__n418 := {  };
__n418["type"] := "Identifier";
__n418["name"] := "c7";
__n417["left"] := __n418;
__n419 := {  };
__n419["type"] := "Literal";
__n419["value"] := 2.;
__n419["raw"] := "2";
__n417["right"] := __n419;
__n416["test"] := __n417;
__n420 := {  };
__n420["type"] := "ExpressionStatement";
__n421 := {  };
__n421["type"] := "CallExpression";
__n422 := {  };
__n422["type"] := "Identifier";
__n422["name"] := "$ERROR";
__n421["callee"] := __n422;
__n424 := {  };
__n424["type"] := "Literal";
__n424["value"] := "#7.4: \"finally\" block must be evaluated";
__n424["raw"] := "'#7.4: \"finally\" block must be evaluated'";
__n423 := [ __n424 ];
__n421["arguments"] := __n423;
__n420["expression"] := __n421;
__n416["consequent"] := __n420;
__n416["alternate"] := null;
__n1 := [ __n2, __n51, __n109, __n160, __n165, __n229, __n238, __n243, __n298, __n307, __n312, __n341, __n350, __n355, __n416 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n425 := [ "c4", "c5", "c6", "c7" ];
__n0["variableDeclarations"] := __n425;
__n426 := [  ];
__n0["functionDeclarations"] := __n426;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}