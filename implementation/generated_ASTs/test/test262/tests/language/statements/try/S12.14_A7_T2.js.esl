function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "TryStatement";
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "ThrowStatement";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "ex2";
__n9["raw"] := "\"ex2\"";
__n8["argument"] := __n9;
__n7 := [ __n8 ];
__n6["body"] := __n7;
__n5["block"] := __n6;
__n5["handler"] := null;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ThrowStatement";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "ex1";
__n13["raw"] := "\"ex1\"";
__n12["argument"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n5["finalizer"] := __n10;
__n4 := [ __n5 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n14 := {  };
__n14["type"] := "CatchClause";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "er1";
__n14["param"] := __n15;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "IfStatement";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "!==";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "er1";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "ex1";
__n21["raw"] := "\"ex1\"";
__n19["right"] := __n21;
__n18["test"] := __n19;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "$ERROR";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "+";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "#1.2: Exception === \"ex1\". Actual:  Exception ===";
__n27["raw"] := "'#1.2: Exception === \"ex1\". Actual:  Exception ==='";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "er1";
__n26["right"] := __n28;
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n18["consequent"] := __n22;
__n18["alternate"] := null;
__n29 := {  };
__n29["type"] := "IfStatement";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "===";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "er1";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "ex2";
__n32["raw"] := "\"ex2\"";
__n30["right"] := __n32;
__n29["test"] := __n30;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "$ERROR";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "#1.3: Exception !== \"ex2\". Actual: catch previous embedded exception";
__n37["raw"] := "'#1.3: Exception !== \"ex2\". Actual: catch previous embedded exception'";
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33["expression"] := __n34;
__n29["consequent"] := __n33;
__n29["alternate"] := null;
__n17 := [ __n18, __n29 ];
__n16["body"] := __n17;
__n14["body"] := __n16;
__n2["handler"] := __n14;
__n2["finalizer"] := null;
__n38 := {  };
__n38["type"] := "TryStatement";
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "TryStatement";
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ThrowStatement";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "ex1";
__n45["raw"] := "\"ex1\"";
__n44["argument"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n41["block"] := __n42;
__n46 := {  };
__n46["type"] := "CatchClause";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "er1";
__n46["param"] := __n47;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "er1";
__n51["left"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "ex1";
__n53["raw"] := "\"ex1\"";
__n51["right"] := __n53;
__n50["test"] := __n51;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "+";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#2.1: Exception === \"ex1\". Actual:  Exception ===";
__n59["raw"] := "'#2.1: Exception === \"ex1\". Actual:  Exception ==='";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "er1";
__n58["right"] := __n60;
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n50["consequent"] := __n54;
__n50["alternate"] := null;
__n61 := {  };
__n61["type"] := "TryStatement";
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ThrowStatement";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "ex2";
__n65["raw"] := "\"ex2\"";
__n64["argument"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n61["block"] := __n62;
__n61["handler"] := null;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ThrowStatement";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "ex3";
__n69["raw"] := "\"ex3\"";
__n68["argument"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n61["finalizer"] := __n66;
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "$ERROR";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "#2.2: throw \"ex1\" lead to throwing exception";
__n74["raw"] := "'#2.2: throw \"ex1\" lead to throwing exception'";
__n73 := [ __n74 ];
__n71["arguments"] := __n73;
__n70["expression"] := __n71;
__n49 := [ __n50, __n61, __n70 ];
__n48["body"] := __n49;
__n46["body"] := __n48;
__n41["handler"] := __n46;
__n41["finalizer"] := null;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n38["block"] := __n39;
__n75 := {  };
__n75["type"] := "CatchClause";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "er1";
__n75["param"] := __n76;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!==";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "er1";
__n80["left"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "ex3";
__n82["raw"] := "\"ex3\"";
__n80["right"] := __n82;
__n79["test"] := __n80;
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "$ERROR";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "+";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "#2.3: Exception === \"ex3\". Actual:  Exception ===";
__n88["raw"] := "'#2.3: Exception === \"ex3\". Actual:  Exception ==='";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "er1";
__n87["right"] := __n89;
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n79["consequent"] := __n83;
__n79["alternate"] := null;
__n78 := [ __n79 ];
__n77["body"] := __n78;
__n75["body"] := __n77;
__n38["handler"] := __n75;
__n38["finalizer"] := null;
__n90 := {  };
__n90["type"] := "TryStatement";
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "TryStatement";
__n94 := {  };
__n94["type"] := "BlockStatement";
__n96 := {  };
__n96["type"] := "ThrowStatement";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "ex1";
__n97["raw"] := "\"ex1\"";
__n96["argument"] := __n97;
__n95 := [ __n96 ];
__n94["body"] := __n95;
__n93["block"] := __n94;
__n98 := {  };
__n98["type"] := "CatchClause";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "er1";
__n98["param"] := __n99;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "IfStatement";
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "!==";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "er1";
__n103["left"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "ex1";
__n105["raw"] := "\"ex1\"";
__n103["right"] := __n105;
__n102["test"] := __n103;
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "$ERROR";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "BinaryExpression";
__n110["operator"] := "+";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "#3.1: Exception === \"ex1\". Actual:  Exception ===";
__n111["raw"] := "'#3.1: Exception === \"ex1\". Actual:  Exception ==='";
__n110["left"] := __n111;
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "er1";
__n110["right"] := __n112;
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n102["consequent"] := __n106;
__n102["alternate"] := null;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n98["body"] := __n100;
__n93["handler"] := __n98;
__n113 := {  };
__n113["type"] := "BlockStatement";
__n115 := {  };
__n115["type"] := "TryStatement";
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ThrowStatement";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "ex2";
__n119["raw"] := "\"ex2\"";
__n118["argument"] := __n119;
__n117 := [ __n118 ];
__n116["body"] := __n117;
__n115["block"] := __n116;
__n115["handler"] := null;
__n120 := {  };
__n120["type"] := "BlockStatement";
__n122 := {  };
__n122["type"] := "ThrowStatement";
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "ex3";
__n123["raw"] := "\"ex3\"";
__n122["argument"] := __n123;
__n121 := [ __n122 ];
__n120["body"] := __n121;
__n115["finalizer"] := __n120;
__n114 := [ __n115 ];
__n113["body"] := __n114;
__n93["finalizer"] := __n113;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n90["block"] := __n91;
__n124 := {  };
__n124["type"] := "CatchClause";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "er1";
__n124["param"] := __n125;
__n126 := {  };
__n126["type"] := "BlockStatement";
__n128 := {  };
__n128["type"] := "IfStatement";
__n129 := {  };
__n129["type"] := "BinaryExpression";
__n129["operator"] := "!==";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "er1";
__n129["left"] := __n130;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "ex3";
__n131["raw"] := "\"ex3\"";
__n129["right"] := __n131;
__n128["test"] := __n129;
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "$ERROR";
__n133["callee"] := __n134;
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "+";
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "#3.2: Exception === \"ex3\". Actual:  Exception ===";
__n137["raw"] := "'#3.2: Exception === \"ex3\". Actual:  Exception ==='";
__n136["left"] := __n137;
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "er1";
__n136["right"] := __n138;
__n135 := [ __n136 ];
__n133["arguments"] := __n135;
__n132["expression"] := __n133;
__n128["consequent"] := __n132;
__n128["alternate"] := null;
__n127 := [ __n128 ];
__n126["body"] := __n127;
__n124["body"] := __n126;
__n90["handler"] := __n124;
__n90["finalizer"] := null;
__n139 := {  };
__n139["type"] := "VariableDeclaration";
__n141 := {  };
__n141["type"] := "VariableDeclarator";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "c4";
__n141["id"] := __n142;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := 0.;
__n143["raw"] := "0";
__n141["init"] := __n143;
__n140 := [ __n141 ];
__n139["declarations"] := __n140;
__n139["kind"] := "var";
__n144 := {  };
__n144["type"] := "TryStatement";
__n145 := {  };
__n145["type"] := "BlockStatement";
__n147 := {  };
__n147["type"] := "TryStatement";
__n148 := {  };
__n148["type"] := "BlockStatement";
__n150 := {  };
__n150["type"] := "ThrowStatement";
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "ex1";
__n151["raw"] := "\"ex1\"";
__n150["argument"] := __n151;
__n149 := [ __n150 ];
__n148["body"] := __n149;
__n147["block"] := __n148;
__n152 := {  };
__n152["type"] := "CatchClause";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "er1";
__n152["param"] := __n153;
__n154 := {  };
__n154["type"] := "BlockStatement";
__n156 := {  };
__n156["type"] := "IfStatement";
__n157 := {  };
__n157["type"] := "BinaryExpression";
__n157["operator"] := "!==";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "er1";
__n157["left"] := __n158;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "ex1";
__n159["raw"] := "\"ex1\"";
__n157["right"] := __n159;
__n156["test"] := __n157;
__n160 := {  };
__n160["type"] := "ExpressionStatement";
__n161 := {  };
__n161["type"] := "CallExpression";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "$ERROR";
__n161["callee"] := __n162;
__n164 := {  };
__n164["type"] := "BinaryExpression";
__n164["operator"] := "+";
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := "#4.1: Exception === \"ex1\". Actual:  Exception ===";
__n165["raw"] := "'#4.1: Exception === \"ex1\". Actual:  Exception ==='";
__n164["left"] := __n165;
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "er1";
__n164["right"] := __n166;
__n163 := [ __n164 ];
__n161["arguments"] := __n163;
__n160["expression"] := __n161;
__n156["consequent"] := __n160;
__n156["alternate"] := null;
__n167 := {  };
__n167["type"] := "TryStatement";
__n168 := {  };
__n168["type"] := "BlockStatement";
__n170 := {  };
__n170["type"] := "ThrowStatement";
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := "ex2";
__n171["raw"] := "\"ex2\"";
__n170["argument"] := __n171;
__n169 := [ __n170 ];
__n168["body"] := __n169;
__n167["block"] := __n168;
__n167["handler"] := null;
__n172 := {  };
__n172["type"] := "BlockStatement";
__n174 := {  };
__n174["type"] := "ThrowStatement";
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := "ex3";
__n175["raw"] := "\"ex3\"";
__n174["argument"] := __n175;
__n173 := [ __n174 ];
__n172["body"] := __n173;
__n167["finalizer"] := __n172;
__n155 := [ __n156, __n167 ];
__n154["body"] := __n155;
__n152["body"] := __n154;
__n147["handler"] := __n152;
__n176 := {  };
__n176["type"] := "BlockStatement";
__n178 := {  };
__n178["type"] := "ExpressionStatement";
__n179 := {  };
__n179["type"] := "AssignmentExpression";
__n179["operator"] := "=";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "c4";
__n179["left"] := __n180;
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := 1.;
__n181["raw"] := "1";
__n179["right"] := __n181;
__n178["expression"] := __n179;
__n177 := [ __n178 ];
__n176["body"] := __n177;
__n147["finalizer"] := __n176;
__n146 := [ __n147 ];
__n145["body"] := __n146;
__n144["block"] := __n145;
__n182 := {  };
__n182["type"] := "CatchClause";
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "er1";
__n182["param"] := __n183;
__n184 := {  };
__n184["type"] := "BlockStatement";
__n186 := {  };
__n186["type"] := "IfStatement";
__n187 := {  };
__n187["type"] := "BinaryExpression";
__n187["operator"] := "!==";
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "er1";
__n187["left"] := __n188;
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := "ex3";
__n189["raw"] := "\"ex3\"";
__n187["right"] := __n189;
__n186["test"] := __n187;
__n190 := {  };
__n190["type"] := "ExpressionStatement";
__n191 := {  };
__n191["type"] := "CallExpression";
__n192 := {  };
__n192["type"] := "Identifier";
__n192["name"] := "$ERROR";
__n191["callee"] := __n192;
__n194 := {  };
__n194["type"] := "BinaryExpression";
__n194["operator"] := "+";
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "#4.2: Exception === \"ex3\". Actual:  Exception ===";
__n195["raw"] := "'#4.2: Exception === \"ex3\". Actual:  Exception ==='";
__n194["left"] := __n195;
__n196 := {  };
__n196["type"] := "Identifier";
__n196["name"] := "er1";
__n194["right"] := __n196;
__n193 := [ __n194 ];
__n191["arguments"] := __n193;
__n190["expression"] := __n191;
__n186["consequent"] := __n190;
__n186["alternate"] := null;
__n185 := [ __n186 ];
__n184["body"] := __n185;
__n182["body"] := __n184;
__n144["handler"] := __n182;
__n144["finalizer"] := null;
__n197 := {  };
__n197["type"] := "IfStatement";
__n198 := {  };
__n198["type"] := "BinaryExpression";
__n198["operator"] := "!==";
__n199 := {  };
__n199["type"] := "Identifier";
__n199["name"] := "c4";
__n198["left"] := __n199;
__n200 := {  };
__n200["type"] := "Literal";
__n200["value"] := 1.;
__n200["raw"] := "1";
__n198["right"] := __n200;
__n197["test"] := __n198;
__n201 := {  };
__n201["type"] := "ExpressionStatement";
__n202 := {  };
__n202["type"] := "CallExpression";
__n203 := {  };
__n203["type"] := "Identifier";
__n203["name"] := "$ERROR";
__n202["callee"] := __n203;
__n205 := {  };
__n205["type"] := "Literal";
__n205["value"] := "#4.3: \"finally\" block must be evaluated";
__n205["raw"] := "'#4.3: \"finally\" block must be evaluated'";
__n204 := [ __n205 ];
__n202["arguments"] := __n204;
__n201["expression"] := __n202;
__n197["consequent"] := __n201;
__n197["alternate"] := null;
__n206 := {  };
__n206["type"] := "VariableDeclaration";
__n208 := {  };
__n208["type"] := "VariableDeclarator";
__n209 := {  };
__n209["type"] := "Identifier";
__n209["name"] := "c5";
__n208["id"] := __n209;
__n210 := {  };
__n210["type"] := "Literal";
__n210["value"] := 0.;
__n210["raw"] := "0";
__n208["init"] := __n210;
__n207 := [ __n208 ];
__n206["declarations"] := __n207;
__n206["kind"] := "var";
__n211 := {  };
__n211["type"] := "TryStatement";
__n212 := {  };
__n212["type"] := "BlockStatement";
__n214 := {  };
__n214["type"] := "TryStatement";
__n215 := {  };
__n215["type"] := "BlockStatement";
__n217 := {  };
__n217["type"] := "ThrowStatement";
__n218 := {  };
__n218["type"] := "Literal";
__n218["value"] := "ex2";
__n218["raw"] := "\"ex2\"";
__n217["argument"] := __n218;
__n216 := [ __n217 ];
__n215["body"] := __n216;
__n214["block"] := __n215;
__n214["handler"] := null;
__n219 := {  };
__n219["type"] := "BlockStatement";
__n221 := {  };
__n221["type"] := "ThrowStatement";
__n222 := {  };
__n222["type"] := "Literal";
__n222["value"] := "ex3";
__n222["raw"] := "\"ex3\"";
__n221["argument"] := __n222;
__n220 := [ __n221 ];
__n219["body"] := __n220;
__n214["finalizer"] := __n219;
__n223 := {  };
__n223["type"] := "ThrowStatement";
__n224 := {  };
__n224["type"] := "Literal";
__n224["value"] := "ex1";
__n224["raw"] := "\"ex1\"";
__n223["argument"] := __n224;
__n213 := [ __n214, __n223 ];
__n212["body"] := __n213;
__n211["block"] := __n212;
__n225 := {  };
__n225["type"] := "CatchClause";
__n226 := {  };
__n226["type"] := "Identifier";
__n226["name"] := "er1";
__n225["param"] := __n226;
__n227 := {  };
__n227["type"] := "BlockStatement";
__n229 := {  };
__n229["type"] := "IfStatement";
__n230 := {  };
__n230["type"] := "BinaryExpression";
__n230["operator"] := "!==";
__n231 := {  };
__n231["type"] := "Identifier";
__n231["name"] := "er1";
__n230["left"] := __n231;
__n232 := {  };
__n232["type"] := "Literal";
__n232["value"] := "ex3";
__n232["raw"] := "\"ex3\"";
__n230["right"] := __n232;
__n229["test"] := __n230;
__n233 := {  };
__n233["type"] := "ExpressionStatement";
__n234 := {  };
__n234["type"] := "CallExpression";
__n235 := {  };
__n235["type"] := "Identifier";
__n235["name"] := "$ERROR";
__n234["callee"] := __n235;
__n237 := {  };
__n237["type"] := "BinaryExpression";
__n237["operator"] := "+";
__n238 := {  };
__n238["type"] := "Literal";
__n238["value"] := "#5.1: Exception === \"ex3\". Actual:  Exception ===";
__n238["raw"] := "'#5.1: Exception === \"ex3\". Actual:  Exception ==='";
__n237["left"] := __n238;
__n239 := {  };
__n239["type"] := "Identifier";
__n239["name"] := "er1";
__n237["right"] := __n239;
__n236 := [ __n237 ];
__n234["arguments"] := __n236;
__n233["expression"] := __n234;
__n229["consequent"] := __n233;
__n229["alternate"] := null;
__n240 := {  };
__n240["type"] := "IfStatement";
__n241 := {  };
__n241["type"] := "BinaryExpression";
__n241["operator"] := "===";
__n242 := {  };
__n242["type"] := "Identifier";
__n242["name"] := "er1";
__n241["left"] := __n242;
__n243 := {  };
__n243["type"] := "Literal";
__n243["value"] := "ex2";
__n243["raw"] := "\"ex2\"";
__n241["right"] := __n243;
__n240["test"] := __n241;
__n244 := {  };
__n244["type"] := "ExpressionStatement";
__n245 := {  };
__n245["type"] := "CallExpression";
__n246 := {  };
__n246["type"] := "Identifier";
__n246["name"] := "$ERROR";
__n245["callee"] := __n246;
__n248 := {  };
__n248["type"] := "Literal";
__n248["value"] := "#5.2: Exception !== \"ex2\". Actual: catch previous embedded exception";
__n248["raw"] := "'#5.2: Exception !== \"ex2\". Actual: catch previous embedded exception'";
__n247 := [ __n248 ];
__n245["arguments"] := __n247;
__n244["expression"] := __n245;
__n240["consequent"] := __n244;
__n240["alternate"] := null;
__n249 := {  };
__n249["type"] := "IfStatement";
__n250 := {  };
__n250["type"] := "BinaryExpression";
__n250["operator"] := "===";
__n251 := {  };
__n251["type"] := "Identifier";
__n251["name"] := "er1";
__n250["left"] := __n251;
__n252 := {  };
__n252["type"] := "Literal";
__n252["value"] := "ex1";
__n252["raw"] := "\"ex1\"";
__n250["right"] := __n252;
__n249["test"] := __n250;
__n253 := {  };
__n253["type"] := "ExpressionStatement";
__n254 := {  };
__n254["type"] := "CallExpression";
__n255 := {  };
__n255["type"] := "Identifier";
__n255["name"] := "$ERROR";
__n254["callee"] := __n255;
__n257 := {  };
__n257["type"] := "Literal";
__n257["value"] := "#5.3: Exception !==\"ex1\". Actual: catch previous embedded exception";
__n257["raw"] := "'#5.3: Exception !==\"ex1\". Actual: catch previous embedded exception'";
__n256 := [ __n257 ];
__n254["arguments"] := __n256;
__n253["expression"] := __n254;
__n249["consequent"] := __n253;
__n249["alternate"] := null;
__n228 := [ __n229, __n240, __n249 ];
__n227["body"] := __n228;
__n225["body"] := __n227;
__n211["handler"] := __n225;
__n258 := {  };
__n258["type"] := "BlockStatement";
__n260 := {  };
__n260["type"] := "ExpressionStatement";
__n261 := {  };
__n261["type"] := "AssignmentExpression";
__n261["operator"] := "=";
__n262 := {  };
__n262["type"] := "Identifier";
__n262["name"] := "c5";
__n261["left"] := __n262;
__n263 := {  };
__n263["type"] := "Literal";
__n263["value"] := 1.;
__n263["raw"] := "1";
__n261["right"] := __n263;
__n260["expression"] := __n261;
__n259 := [ __n260 ];
__n258["body"] := __n259;
__n211["finalizer"] := __n258;
__n264 := {  };
__n264["type"] := "IfStatement";
__n265 := {  };
__n265["type"] := "BinaryExpression";
__n265["operator"] := "!==";
__n266 := {  };
__n266["type"] := "Identifier";
__n266["name"] := "c5";
__n265["left"] := __n266;
__n267 := {  };
__n267["type"] := "Literal";
__n267["value"] := 1.;
__n267["raw"] := "1";
__n265["right"] := __n267;
__n264["test"] := __n265;
__n268 := {  };
__n268["type"] := "ExpressionStatement";
__n269 := {  };
__n269["type"] := "CallExpression";
__n270 := {  };
__n270["type"] := "Identifier";
__n270["name"] := "$ERROR";
__n269["callee"] := __n270;
__n272 := {  };
__n272["type"] := "Literal";
__n272["value"] := "#5.4: \"finally\" block must be evaluated";
__n272["raw"] := "'#5.4: \"finally\" block must be evaluated'";
__n271 := [ __n272 ];
__n269["arguments"] := __n271;
__n268["expression"] := __n269;
__n264["consequent"] := __n268;
__n264["alternate"] := null;
__n273 := {  };
__n273["type"] := "VariableDeclaration";
__n275 := {  };
__n275["type"] := "VariableDeclarator";
__n276 := {  };
__n276["type"] := "Identifier";
__n276["name"] := "c6";
__n275["id"] := __n276;
__n277 := {  };
__n277["type"] := "Literal";
__n277["value"] := 0.;
__n277["raw"] := "0";
__n275["init"] := __n277;
__n274 := [ __n275 ];
__n273["declarations"] := __n274;
__n273["kind"] := "var";
__n278 := {  };
__n278["type"] := "TryStatement";
__n279 := {  };
__n279["type"] := "BlockStatement";
__n281 := {  };
__n281["type"] := "TryStatement";
__n282 := {  };
__n282["type"] := "BlockStatement";
__n284 := {  };
__n284["type"] := "TryStatement";
__n285 := {  };
__n285["type"] := "BlockStatement";
__n287 := {  };
__n287["type"] := "ThrowStatement";
__n288 := {  };
__n288["type"] := "Literal";
__n288["value"] := "ex1";
__n288["raw"] := "\"ex1\"";
__n287["argument"] := __n288;
__n286 := [ __n287 ];
__n285["body"] := __n286;
__n284["block"] := __n285;
__n284["handler"] := null;
__n289 := {  };
__n289["type"] := "BlockStatement";
__n291 := {  };
__n291["type"] := "ThrowStatement";
__n292 := {  };
__n292["type"] := "Literal";
__n292["value"] := "ex2";
__n292["raw"] := "\"ex2\"";
__n291["argument"] := __n292;
__n290 := [ __n291 ];
__n289["body"] := __n290;
__n284["finalizer"] := __n289;
__n283 := [ __n284 ];
__n282["body"] := __n283;
__n281["block"] := __n282;
__n281["handler"] := null;
__n293 := {  };
__n293["type"] := "BlockStatement";
__n295 := {  };
__n295["type"] := "ExpressionStatement";
__n296 := {  };
__n296["type"] := "AssignmentExpression";
__n296["operator"] := "=";
__n297 := {  };
__n297["type"] := "Identifier";
__n297["name"] := "c6";
__n296["left"] := __n297;
__n298 := {  };
__n298["type"] := "Literal";
__n298["value"] := 1.;
__n298["raw"] := "1";
__n296["right"] := __n298;
__n295["expression"] := __n296;
__n294 := [ __n295 ];
__n293["body"] := __n294;
__n281["finalizer"] := __n293;
__n280 := [ __n281 ];
__n279["body"] := __n280;
__n278["block"] := __n279;
__n299 := {  };
__n299["type"] := "CatchClause";
__n300 := {  };
__n300["type"] := "Identifier";
__n300["name"] := "er1";
__n299["param"] := __n300;
__n301 := {  };
__n301["type"] := "BlockStatement";
__n303 := {  };
__n303["type"] := "IfStatement";
__n304 := {  };
__n304["type"] := "BinaryExpression";
__n304["operator"] := "!==";
__n305 := {  };
__n305["type"] := "Identifier";
__n305["name"] := "er1";
__n304["left"] := __n305;
__n306 := {  };
__n306["type"] := "Literal";
__n306["value"] := "ex2";
__n306["raw"] := "\"ex2\"";
__n304["right"] := __n306;
__n303["test"] := __n304;
__n307 := {  };
__n307["type"] := "ExpressionStatement";
__n308 := {  };
__n308["type"] := "CallExpression";
__n309 := {  };
__n309["type"] := "Identifier";
__n309["name"] := "$ERROR";
__n308["callee"] := __n309;
__n311 := {  };
__n311["type"] := "BinaryExpression";
__n311["operator"] := "+";
__n312 := {  };
__n312["type"] := "Literal";
__n312["value"] := "#6.1: Exception === \"ex2\". Actual:  Exception ===";
__n312["raw"] := "'#6.1: Exception === \"ex2\". Actual:  Exception ==='";
__n311["left"] := __n312;
__n313 := {  };
__n313["type"] := "Identifier";
__n313["name"] := "er1";
__n311["right"] := __n313;
__n310 := [ __n311 ];
__n308["arguments"] := __n310;
__n307["expression"] := __n308;
__n303["consequent"] := __n307;
__n303["alternate"] := null;
__n302 := [ __n303 ];
__n301["body"] := __n302;
__n299["body"] := __n301;
__n278["handler"] := __n299;
__n278["finalizer"] := null;
__n314 := {  };
__n314["type"] := "IfStatement";
__n315 := {  };
__n315["type"] := "BinaryExpression";
__n315["operator"] := "!==";
__n316 := {  };
__n316["type"] := "Identifier";
__n316["name"] := "c6";
__n315["left"] := __n316;
__n317 := {  };
__n317["type"] := "Literal";
__n317["value"] := 1.;
__n317["raw"] := "1";
__n315["right"] := __n317;
__n314["test"] := __n315;
__n318 := {  };
__n318["type"] := "ExpressionStatement";
__n319 := {  };
__n319["type"] := "CallExpression";
__n320 := {  };
__n320["type"] := "Identifier";
__n320["name"] := "$ERROR";
__n319["callee"] := __n320;
__n322 := {  };
__n322["type"] := "Literal";
__n322["value"] := "#6.2: \"finally\" block must be evaluated";
__n322["raw"] := "'#6.2: \"finally\" block must be evaluated'";
__n321 := [ __n322 ];
__n319["arguments"] := __n321;
__n318["expression"] := __n319;
__n314["consequent"] := __n318;
__n314["alternate"] := null;
__n323 := {  };
__n323["type"] := "VariableDeclaration";
__n325 := {  };
__n325["type"] := "VariableDeclarator";
__n326 := {  };
__n326["type"] := "Identifier";
__n326["name"] := "c7";
__n325["id"] := __n326;
__n327 := {  };
__n327["type"] := "Literal";
__n327["value"] := 0.;
__n327["raw"] := "0";
__n325["init"] := __n327;
__n324 := [ __n325 ];
__n323["declarations"] := __n324;
__n323["kind"] := "var";
__n328 := {  };
__n328["type"] := "TryStatement";
__n329 := {  };
__n329["type"] := "BlockStatement";
__n331 := {  };
__n331["type"] := "TryStatement";
__n332 := {  };
__n332["type"] := "BlockStatement";
__n334 := {  };
__n334["type"] := "ThrowStatement";
__n335 := {  };
__n335["type"] := "Literal";
__n335["value"] := "ex1";
__n335["raw"] := "\"ex1\"";
__n334["argument"] := __n335;
__n333 := [ __n334 ];
__n332["body"] := __n333;
__n331["block"] := __n332;
__n331["handler"] := null;
__n336 := {  };
__n336["type"] := "BlockStatement";
__n338 := {  };
__n338["type"] := "TryStatement";
__n339 := {  };
__n339["type"] := "BlockStatement";
__n341 := {  };
__n341["type"] := "ExpressionStatement";
__n342 := {  };
__n342["type"] := "AssignmentExpression";
__n342["operator"] := "=";
__n343 := {  };
__n343["type"] := "Identifier";
__n343["name"] := "c7";
__n342["left"] := __n343;
__n344 := {  };
__n344["type"] := "Literal";
__n344["value"] := 1.;
__n344["raw"] := "1";
__n342["right"] := __n344;
__n341["expression"] := __n342;
__n345 := {  };
__n345["type"] := "ThrowStatement";
__n346 := {  };
__n346["type"] := "Literal";
__n346["value"] := "ex2";
__n346["raw"] := "\"ex2\"";
__n345["argument"] := __n346;
__n340 := [ __n341, __n345 ];
__n339["body"] := __n340;
__n338["block"] := __n339;
__n338["handler"] := null;
__n347 := {  };
__n347["type"] := "BlockStatement";
__n349 := {  };
__n349["type"] := "ExpressionStatement";
__n350 := {  };
__n350["type"] := "UpdateExpression";
__n350["operator"] := "++";
__n351 := {  };
__n351["type"] := "Identifier";
__n351["name"] := "c7";
__n350["argument"] := __n351;
__n350["prefix"] := false;
__n349["expression"] := __n350;
__n352 := {  };
__n352["type"] := "ThrowStatement";
__n353 := {  };
__n353["type"] := "Literal";
__n353["value"] := "ex3";
__n353["raw"] := "\"ex3\"";
__n352["argument"] := __n353;
__n348 := [ __n349, __n352 ];
__n347["body"] := __n348;
__n338["finalizer"] := __n347;
__n337 := [ __n338 ];
__n336["body"] := __n337;
__n331["finalizer"] := __n336;
__n330 := [ __n331 ];
__n329["body"] := __n330;
__n328["block"] := __n329;
__n354 := {  };
__n354["type"] := "CatchClause";
__n355 := {  };
__n355["type"] := "Identifier";
__n355["name"] := "er1";
__n354["param"] := __n355;
__n356 := {  };
__n356["type"] := "BlockStatement";
__n358 := {  };
__n358["type"] := "IfStatement";
__n359 := {  };
__n359["type"] := "BinaryExpression";
__n359["operator"] := "!==";
__n360 := {  };
__n360["type"] := "Identifier";
__n360["name"] := "er1";
__n359["left"] := __n360;
__n361 := {  };
__n361["type"] := "Literal";
__n361["value"] := "ex3";
__n361["raw"] := "\"ex3\"";
__n359["right"] := __n361;
__n358["test"] := __n359;
__n362 := {  };
__n362["type"] := "ExpressionStatement";
__n363 := {  };
__n363["type"] := "CallExpression";
__n364 := {  };
__n364["type"] := "Identifier";
__n364["name"] := "$ERROR";
__n363["callee"] := __n364;
__n366 := {  };
__n366["type"] := "BinaryExpression";
__n366["operator"] := "+";
__n367 := {  };
__n367["type"] := "Literal";
__n367["value"] := "#7.1: Exception === \"ex3\". Actual:  Exception ===";
__n367["raw"] := "'#7.1: Exception === \"ex3\". Actual:  Exception ==='";
__n366["left"] := __n367;
__n368 := {  };
__n368["type"] := "Identifier";
__n368["name"] := "er1";
__n366["right"] := __n368;
__n365 := [ __n366 ];
__n363["arguments"] := __n365;
__n362["expression"] := __n363;
__n358["consequent"] := __n362;
__n358["alternate"] := null;
__n357 := [ __n358 ];
__n356["body"] := __n357;
__n354["body"] := __n356;
__n328["handler"] := __n354;
__n328["finalizer"] := null;
__n369 := {  };
__n369["type"] := "IfStatement";
__n370 := {  };
__n370["type"] := "BinaryExpression";
__n370["operator"] := "!==";
__n371 := {  };
__n371["type"] := "Identifier";
__n371["name"] := "c7";
__n370["left"] := __n371;
__n372 := {  };
__n372["type"] := "Literal";
__n372["value"] := 2.;
__n372["raw"] := "2";
__n370["right"] := __n372;
__n369["test"] := __n370;
__n373 := {  };
__n373["type"] := "ExpressionStatement";
__n374 := {  };
__n374["type"] := "CallExpression";
__n375 := {  };
__n375["type"] := "Identifier";
__n375["name"] := "$ERROR";
__n374["callee"] := __n375;
__n377 := {  };
__n377["type"] := "Literal";
__n377["value"] := "#7.2: Embedded \"try/finally\" blocks must be evaluated";
__n377["raw"] := "'#7.2: Embedded \"try/finally\" blocks must be evaluated'";
__n376 := [ __n377 ];
__n374["arguments"] := __n376;
__n373["expression"] := __n374;
__n369["consequent"] := __n373;
__n369["alternate"] := null;
__n1 := [ __n2, __n38, __n90, __n139, __n144, __n197, __n206, __n211, __n264, __n273, __n278, __n314, __n323, __n328, __n369 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n378 := [ "c4", "c5", "c6", "c7" ];
__n0["variableDeclarations"] := __n378;
__n379 := [  ];
__n0["functionDeclarations"] := __n379;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}