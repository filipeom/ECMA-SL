function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "TryStatement";
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "ThrowStatement";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "ex2";
__n9["raw"] := "\"ex2\"";
__n8["argument"] := __n9;
__n7 := [ __n8 ];
__n6["body"] := __n7;
__n5["block"] := __n6;
__n10 := {  };
__n10["type"] := "CatchClause";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "er2";
__n10["param"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "IfStatement";
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "!==";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "er2";
__n15["left"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "ex2";
__n17["raw"] := "\"ex2\"";
__n15["right"] := __n17;
__n14["test"] := __n15;
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "$ERROR";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "+";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "#1.1: Exception === \"ex2\". Actual:  Exception ===";
__n23["raw"] := "'#1.1: Exception === \"ex2\". Actual:  Exception ==='";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "er2";
__n22["right"] := __n24;
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n18["expression"] := __n19;
__n14["consequent"] := __n18;
__n14["alternate"] := null;
__n25 := {  };
__n25["type"] := "ThrowStatement";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "ex1";
__n26["raw"] := "\"ex1\"";
__n25["argument"] := __n26;
__n13 := [ __n14, __n25 ];
__n12["body"] := __n13;
__n10["body"] := __n12;
__n5["handler"] := __n10;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ThrowStatement";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "ex3";
__n30["raw"] := "\"ex3\"";
__n29["argument"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n5["finalizer"] := __n27;
__n4 := [ __n5 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n31 := {  };
__n31["type"] := "CatchClause";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "er1";
__n31["param"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "er1";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "ex3";
__n38["raw"] := "\"ex3\"";
__n36["right"] := __n38;
__n35["test"] := __n36;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$ERROR";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "#1.2: Exception === \"ex3\". Actual:  Exception ===";
__n44["raw"] := "'#1.2: Exception === \"ex3\". Actual:  Exception ==='";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "er1";
__n43["right"] := __n45;
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n35["consequent"] := __n39;
__n35["alternate"] := null;
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "===";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "er1";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "ex2";
__n49["raw"] := "\"ex2\"";
__n47["right"] := __n49;
__n46["test"] := __n47;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "$ERROR";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#1.3: Exception !==\"ex2\". Actual: catch previous catched exception";
__n54["raw"] := "'#1.3: Exception !==\"ex2\". Actual: catch previous catched exception'";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n46["consequent"] := __n50;
__n46["alternate"] := null;
__n55 := {  };
__n55["type"] := "IfStatement";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "===";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "er1";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "ex1";
__n58["raw"] := "\"ex1\"";
__n56["right"] := __n58;
__n55["test"] := __n56;
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "$ERROR";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "#1.4: Exception !==\"ex1\". Actual: catch previous embedded exception";
__n63["raw"] := "'#1.4: Exception !==\"ex1\". Actual: catch previous embedded exception'";
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n55["consequent"] := __n59;
__n55["alternate"] := null;
__n34 := [ __n35, __n46, __n55 ];
__n33["body"] := __n34;
__n31["body"] := __n33;
__n2["handler"] := __n31;
__n2["finalizer"] := null;
__n64 := {  };
__n64["type"] := "VariableDeclaration";
__n66 := {  };
__n66["type"] := "VariableDeclarator";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "c2";
__n66["id"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 0.;
__n68["raw"] := "0";
__n66["init"] := __n68;
__n65 := [ __n66 ];
__n64["declarations"] := __n65;
__n64["kind"] := "var";
__n69 := {  };
__n69["type"] := "TryStatement";
__n70 := {  };
__n70["type"] := "BlockStatement";
__n72 := {  };
__n72["type"] := "ThrowStatement";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "ex1";
__n73["raw"] := "\"ex1\"";
__n72["argument"] := __n73;
__n71 := [ __n72 ];
__n70["body"] := __n71;
__n69["block"] := __n70;
__n74 := {  };
__n74["type"] := "CatchClause";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "er1";
__n74["param"] := __n75;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n78 := {  };
__n78["type"] := "TryStatement";
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ThrowStatement";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "ex2";
__n82["raw"] := "\"ex2\"";
__n81["argument"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n78["block"] := __n79;
__n83 := {  };
__n83["type"] := "CatchClause";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "er1";
__n83["param"] := __n84;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "IfStatement";
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "===";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "er1";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "ex1";
__n90["raw"] := "\"ex1\"";
__n88["right"] := __n90;
__n87["test"] := __n88;
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "$ERROR";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "#2.1: Exception !==\"ex1\". Actual: catch previous catched exception";
__n95["raw"] := "'#2.1: Exception !==\"ex1\". Actual: catch previous catched exception'";
__n94 := [ __n95 ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n87["consequent"] := __n91;
__n87["alternate"] := null;
__n96 := {  };
__n96["type"] := "IfStatement";
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "!==";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "er1";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "ex2";
__n99["raw"] := "\"ex2\"";
__n97["right"] := __n99;
__n96["test"] := __n97;
__n100 := {  };
__n100["type"] := "ExpressionStatement";
__n101 := {  };
__n101["type"] := "CallExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "$ERROR";
__n101["callee"] := __n102;
__n104 := {  };
__n104["type"] := "BinaryExpression";
__n104["operator"] := "+";
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "#2.2: Exception === \"ex2\". Actual:  Exception ===";
__n105["raw"] := "'#2.2: Exception === \"ex2\". Actual:  Exception ==='";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "er1";
__n104["right"] := __n106;
__n103 := [ __n104 ];
__n101["arguments"] := __n103;
__n100["expression"] := __n101;
__n96["consequent"] := __n100;
__n96["alternate"] := null;
__n86 := [ __n87, __n96 ];
__n85["body"] := __n86;
__n83["body"] := __n85;
__n78["handler"] := __n83;
__n107 := {  };
__n107["type"] := "BlockStatement";
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "AssignmentExpression";
__n110["operator"] := "=";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "c2";
__n110["left"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 1.;
__n112["raw"] := "1";
__n110["right"] := __n112;
__n109["expression"] := __n110;
__n108 := [ __n109 ];
__n107["body"] := __n108;
__n78["finalizer"] := __n107;
__n113 := {  };
__n113["type"] := "IfStatement";
__n114 := {  };
__n114["type"] := "BinaryExpression";
__n114["operator"] := "!==";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "er1";
__n114["left"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "ex1";
__n116["raw"] := "\"ex1\"";
__n114["right"] := __n116;
__n113["test"] := __n114;
__n117 := {  };
__n117["type"] := "ExpressionStatement";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "$ERROR";
__n118["callee"] := __n119;
__n121 := {  };
__n121["type"] := "BinaryExpression";
__n121["operator"] := "+";
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "#2.3: Exception === \"ex1\". Actual:  Exception ===";
__n122["raw"] := "'#2.3: Exception === \"ex1\". Actual:  Exception ==='";
__n121["left"] := __n122;
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "er1";
__n121["right"] := __n123;
__n120 := [ __n121 ];
__n118["arguments"] := __n120;
__n117["expression"] := __n118;
__n113["consequent"] := __n117;
__n113["alternate"] := null;
__n124 := {  };
__n124["type"] := "IfStatement";
__n125 := {  };
__n125["type"] := "BinaryExpression";
__n125["operator"] := "===";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "er1";
__n125["left"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "ex2";
__n127["raw"] := "\"ex2\"";
__n125["right"] := __n127;
__n124["test"] := __n125;
__n128 := {  };
__n128["type"] := "ExpressionStatement";
__n129 := {  };
__n129["type"] := "CallExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "$ERROR";
__n129["callee"] := __n130;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := "#2.4: Exception !== \"ex2\". Actual: catch previous embedded exception";
__n132["raw"] := "'#2.4: Exception !== \"ex2\". Actual: catch previous embedded exception'";
__n131 := [ __n132 ];
__n129["arguments"] := __n131;
__n128["expression"] := __n129;
__n124["consequent"] := __n128;
__n124["alternate"] := null;
__n77 := [ __n78, __n113, __n124 ];
__n76["body"] := __n77;
__n74["body"] := __n76;
__n69["handler"] := __n74;
__n69["finalizer"] := null;
__n133 := {  };
__n133["type"] := "IfStatement";
__n134 := {  };
__n134["type"] := "BinaryExpression";
__n134["operator"] := "!==";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "c2";
__n134["left"] := __n135;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := 1.;
__n136["raw"] := "1";
__n134["right"] := __n136;
__n133["test"] := __n134;
__n137 := {  };
__n137["type"] := "ExpressionStatement";
__n138 := {  };
__n138["type"] := "CallExpression";
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "$ERROR";
__n138["callee"] := __n139;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "#2.5: \"finally\" block must be evaluated";
__n141["raw"] := "'#2.5: \"finally\" block must be evaluated'";
__n140 := [ __n141 ];
__n138["arguments"] := __n140;
__n137["expression"] := __n138;
__n133["consequent"] := __n137;
__n133["alternate"] := null;
__n142 := {  };
__n142["type"] := "VariableDeclaration";
__n144 := {  };
__n144["type"] := "VariableDeclarator";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "c3";
__n144["id"] := __n145;
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := 0.;
__n146["raw"] := "0";
__n144["init"] := __n146;
__n143 := [ __n144 ];
__n142["declarations"] := __n143;
__n142["kind"] := "var";
__n147 := {  };
__n147["type"] := "TryStatement";
__n148 := {  };
__n148["type"] := "BlockStatement";
__n150 := {  };
__n150["type"] := "ThrowStatement";
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "ex1";
__n151["raw"] := "\"ex1\"";
__n150["argument"] := __n151;
__n149 := [ __n150 ];
__n148["body"] := __n149;
__n147["block"] := __n148;
__n152 := {  };
__n152["type"] := "CatchClause";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "er1";
__n152["param"] := __n153;
__n154 := {  };
__n154["type"] := "BlockStatement";
__n156 := {  };
__n156["type"] := "IfStatement";
__n157 := {  };
__n157["type"] := "BinaryExpression";
__n157["operator"] := "!==";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "er1";
__n157["left"] := __n158;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "ex1";
__n159["raw"] := "\"ex1\"";
__n157["right"] := __n159;
__n156["test"] := __n157;
__n160 := {  };
__n160["type"] := "ExpressionStatement";
__n161 := {  };
__n161["type"] := "CallExpression";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "$ERROR";
__n161["callee"] := __n162;
__n164 := {  };
__n164["type"] := "BinaryExpression";
__n164["operator"] := "+";
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := "#3.1: Exception === \"ex1\". Actual:  Exception ===";
__n165["raw"] := "'#3.1: Exception === \"ex1\". Actual:  Exception ==='";
__n164["left"] := __n165;
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "er1";
__n164["right"] := __n166;
__n163 := [ __n164 ];
__n161["arguments"] := __n163;
__n160["expression"] := __n161;
__n156["consequent"] := __n160;
__n156["alternate"] := null;
__n155 := [ __n156 ];
__n154["body"] := __n155;
__n152["body"] := __n154;
__n147["handler"] := __n152;
__n167 := {  };
__n167["type"] := "BlockStatement";
__n169 := {  };
__n169["type"] := "TryStatement";
__n170 := {  };
__n170["type"] := "BlockStatement";
__n172 := {  };
__n172["type"] := "ThrowStatement";
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := "ex2";
__n173["raw"] := "\"ex2\"";
__n172["argument"] := __n173;
__n171 := [ __n172 ];
__n170["body"] := __n171;
__n169["block"] := __n170;
__n174 := {  };
__n174["type"] := "CatchClause";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "er1";
__n174["param"] := __n175;
__n176 := {  };
__n176["type"] := "BlockStatement";
__n178 := {  };
__n178["type"] := "IfStatement";
__n179 := {  };
__n179["type"] := "BinaryExpression";
__n179["operator"] := "===";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "er1";
__n179["left"] := __n180;
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := "ex1";
__n181["raw"] := "\"ex1\"";
__n179["right"] := __n181;
__n178["test"] := __n179;
__n182 := {  };
__n182["type"] := "ExpressionStatement";
__n183 := {  };
__n183["type"] := "CallExpression";
__n184 := {  };
__n184["type"] := "Identifier";
__n184["name"] := "$ERROR";
__n183["callee"] := __n184;
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := "#3.2: Exception !==\"ex1\". Actual: catch previous catched exception";
__n186["raw"] := "'#3.2: Exception !==\"ex1\". Actual: catch previous catched exception'";
__n185 := [ __n186 ];
__n183["arguments"] := __n185;
__n182["expression"] := __n183;
__n178["consequent"] := __n182;
__n178["alternate"] := null;
__n187 := {  };
__n187["type"] := "IfStatement";
__n188 := {  };
__n188["type"] := "BinaryExpression";
__n188["operator"] := "!==";
__n189 := {  };
__n189["type"] := "Identifier";
__n189["name"] := "er1";
__n188["left"] := __n189;
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := "ex2";
__n190["raw"] := "\"ex2\"";
__n188["right"] := __n190;
__n187["test"] := __n188;
__n191 := {  };
__n191["type"] := "ExpressionStatement";
__n192 := {  };
__n192["type"] := "CallExpression";
__n193 := {  };
__n193["type"] := "Identifier";
__n193["name"] := "$ERROR";
__n192["callee"] := __n193;
__n195 := {  };
__n195["type"] := "BinaryExpression";
__n195["operator"] := "+";
__n196 := {  };
__n196["type"] := "Literal";
__n196["value"] := "#3.3: Exception === \"ex2\". Actual:  Exception ===";
__n196["raw"] := "'#3.3: Exception === \"ex2\". Actual:  Exception ==='";
__n195["left"] := __n196;
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "er1";
__n195["right"] := __n197;
__n194 := [ __n195 ];
__n192["arguments"] := __n194;
__n191["expression"] := __n192;
__n187["consequent"] := __n191;
__n187["alternate"] := null;
__n177 := [ __n178, __n187 ];
__n176["body"] := __n177;
__n174["body"] := __n176;
__n169["handler"] := __n174;
__n198 := {  };
__n198["type"] := "BlockStatement";
__n200 := {  };
__n200["type"] := "ExpressionStatement";
__n201 := {  };
__n201["type"] := "AssignmentExpression";
__n201["operator"] := "=";
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "c3";
__n201["left"] := __n202;
__n203 := {  };
__n203["type"] := "Literal";
__n203["value"] := 1.;
__n203["raw"] := "1";
__n201["right"] := __n203;
__n200["expression"] := __n201;
__n199 := [ __n200 ];
__n198["body"] := __n199;
__n169["finalizer"] := __n198;
__n168 := [ __n169 ];
__n167["body"] := __n168;
__n147["finalizer"] := __n167;
__n204 := {  };
__n204["type"] := "IfStatement";
__n205 := {  };
__n205["type"] := "BinaryExpression";
__n205["operator"] := "!==";
__n206 := {  };
__n206["type"] := "Identifier";
__n206["name"] := "c3";
__n205["left"] := __n206;
__n207 := {  };
__n207["type"] := "Literal";
__n207["value"] := 1.;
__n207["raw"] := "1";
__n205["right"] := __n207;
__n204["test"] := __n205;
__n208 := {  };
__n208["type"] := "ExpressionStatement";
__n209 := {  };
__n209["type"] := "CallExpression";
__n210 := {  };
__n210["type"] := "Identifier";
__n210["name"] := "$ERROR";
__n209["callee"] := __n210;
__n212 := {  };
__n212["type"] := "Literal";
__n212["value"] := "#3.4: \"finally\" block must be evaluated";
__n212["raw"] := "'#3.4: \"finally\" block must be evaluated'";
__n211 := [ __n212 ];
__n209["arguments"] := __n211;
__n208["expression"] := __n209;
__n204["consequent"] := __n208;
__n204["alternate"] := null;
__n213 := {  };
__n213["type"] := "VariableDeclaration";
__n215 := {  };
__n215["type"] := "VariableDeclarator";
__n216 := {  };
__n216["type"] := "Identifier";
__n216["name"] := "c4";
__n215["id"] := __n216;
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := 0.;
__n217["raw"] := "0";
__n215["init"] := __n217;
__n214 := [ __n215 ];
__n213["declarations"] := __n214;
__n213["kind"] := "var";
__n218 := {  };
__n218["type"] := "TryStatement";
__n219 := {  };
__n219["type"] := "BlockStatement";
__n221 := {  };
__n221["type"] := "TryStatement";
__n222 := {  };
__n222["type"] := "BlockStatement";
__n224 := {  };
__n224["type"] := "ThrowStatement";
__n225 := {  };
__n225["type"] := "Literal";
__n225["value"] := "ex1";
__n225["raw"] := "\"ex1\"";
__n224["argument"] := __n225;
__n223 := [ __n224 ];
__n222["body"] := __n223;
__n221["block"] := __n222;
__n226 := {  };
__n226["type"] := "CatchClause";
__n227 := {  };
__n227["type"] := "Identifier";
__n227["name"] := "er1";
__n226["param"] := __n227;
__n228 := {  };
__n228["type"] := "BlockStatement";
__n230 := {  };
__n230["type"] := "TryStatement";
__n231 := {  };
__n231["type"] := "BlockStatement";
__n233 := {  };
__n233["type"] := "ThrowStatement";
__n234 := {  };
__n234["type"] := "Literal";
__n234["value"] := "ex2";
__n234["raw"] := "\"ex2\"";
__n233["argument"] := __n234;
__n232 := [ __n233 ];
__n231["body"] := __n232;
__n230["block"] := __n231;
__n235 := {  };
__n235["type"] := "CatchClause";
__n236 := {  };
__n236["type"] := "Identifier";
__n236["name"] := "er1";
__n235["param"] := __n236;
__n237 := {  };
__n237["type"] := "BlockStatement";
__n239 := {  };
__n239["type"] := "IfStatement";
__n240 := {  };
__n240["type"] := "BinaryExpression";
__n240["operator"] := "===";
__n241 := {  };
__n241["type"] := "Identifier";
__n241["name"] := "er1";
__n240["left"] := __n241;
__n242 := {  };
__n242["type"] := "Literal";
__n242["value"] := "ex1";
__n242["raw"] := "\"ex1\"";
__n240["right"] := __n242;
__n239["test"] := __n240;
__n243 := {  };
__n243["type"] := "ExpressionStatement";
__n244 := {  };
__n244["type"] := "CallExpression";
__n245 := {  };
__n245["type"] := "Identifier";
__n245["name"] := "$ERROR";
__n244["callee"] := __n245;
__n247 := {  };
__n247["type"] := "Literal";
__n247["value"] := "#4.1: Exception !==\"ex2\". Actual: catch previous catched exception";
__n247["raw"] := "'#4.1: Exception !==\"ex2\". Actual: catch previous catched exception'";
__n246 := [ __n247 ];
__n244["arguments"] := __n246;
__n243["expression"] := __n244;
__n239["consequent"] := __n243;
__n239["alternate"] := null;
__n248 := {  };
__n248["type"] := "IfStatement";
__n249 := {  };
__n249["type"] := "BinaryExpression";
__n249["operator"] := "!==";
__n250 := {  };
__n250["type"] := "Identifier";
__n250["name"] := "er1";
__n249["left"] := __n250;
__n251 := {  };
__n251["type"] := "Literal";
__n251["value"] := "ex2";
__n251["raw"] := "\"ex2\"";
__n249["right"] := __n251;
__n248["test"] := __n249;
__n252 := {  };
__n252["type"] := "ExpressionStatement";
__n253 := {  };
__n253["type"] := "CallExpression";
__n254 := {  };
__n254["type"] := "Identifier";
__n254["name"] := "$ERROR";
__n253["callee"] := __n254;
__n256 := {  };
__n256["type"] := "BinaryExpression";
__n256["operator"] := "+";
__n257 := {  };
__n257["type"] := "Literal";
__n257["value"] := "#4.2: Exception === \"ex2\". Actual:  Exception ===";
__n257["raw"] := "'#4.2: Exception === \"ex2\". Actual:  Exception ==='";
__n256["left"] := __n257;
__n258 := {  };
__n258["type"] := "Identifier";
__n258["name"] := "er1";
__n256["right"] := __n258;
__n255 := [ __n256 ];
__n253["arguments"] := __n255;
__n252["expression"] := __n253;
__n248["consequent"] := __n252;
__n248["alternate"] := null;
__n238 := [ __n239, __n248 ];
__n237["body"] := __n238;
__n235["body"] := __n237;
__n230["handler"] := __n235;
__n259 := {  };
__n259["type"] := "BlockStatement";
__n261 := {  };
__n261["type"] := "ExpressionStatement";
__n262 := {  };
__n262["type"] := "AssignmentExpression";
__n262["operator"] := "=";
__n263 := {  };
__n263["type"] := "Identifier";
__n263["name"] := "c4";
__n262["left"] := __n263;
__n264 := {  };
__n264["type"] := "Literal";
__n264["value"] := 2.;
__n264["raw"] := "2";
__n262["right"] := __n264;
__n261["expression"] := __n262;
__n265 := {  };
__n265["type"] := "ThrowStatement";
__n266 := {  };
__n266["type"] := "Literal";
__n266["value"] := "ex3";
__n266["raw"] := "\"ex3\"";
__n265["argument"] := __n266;
__n260 := [ __n261, __n265 ];
__n259["body"] := __n260;
__n230["finalizer"] := __n259;
__n267 := {  };
__n267["type"] := "IfStatement";
__n268 := {  };
__n268["type"] := "BinaryExpression";
__n268["operator"] := "!==";
__n269 := {  };
__n269["type"] := "Identifier";
__n269["name"] := "er1";
__n268["left"] := __n269;
__n270 := {  };
__n270["type"] := "Literal";
__n270["value"] := "ex1";
__n270["raw"] := "\"ex1\"";
__n268["right"] := __n270;
__n267["test"] := __n268;
__n271 := {  };
__n271["type"] := "ExpressionStatement";
__n272 := {  };
__n272["type"] := "CallExpression";
__n273 := {  };
__n273["type"] := "Identifier";
__n273["name"] := "$ERROR";
__n272["callee"] := __n273;
__n275 := {  };
__n275["type"] := "BinaryExpression";
__n275["operator"] := "+";
__n276 := {  };
__n276["type"] := "Literal";
__n276["value"] := "#4.3: Exception === \"ex2\". Actual:  Exception ===";
__n276["raw"] := "'#4.3: Exception === \"ex2\". Actual:  Exception ==='";
__n275["left"] := __n276;
__n277 := {  };
__n277["type"] := "Identifier";
__n277["name"] := "er1";
__n275["right"] := __n277;
__n274 := [ __n275 ];
__n272["arguments"] := __n274;
__n271["expression"] := __n272;
__n267["consequent"] := __n271;
__n267["alternate"] := null;
__n278 := {  };
__n278["type"] := "IfStatement";
__n279 := {  };
__n279["type"] := "BinaryExpression";
__n279["operator"] := "===";
__n280 := {  };
__n280["type"] := "Identifier";
__n280["name"] := "er1";
__n279["left"] := __n280;
__n281 := {  };
__n281["type"] := "Literal";
__n281["value"] := "ex2";
__n281["raw"] := "\"ex2\"";
__n279["right"] := __n281;
__n278["test"] := __n279;
__n282 := {  };
__n282["type"] := "ExpressionStatement";
__n283 := {  };
__n283["type"] := "CallExpression";
__n284 := {  };
__n284["type"] := "Identifier";
__n284["name"] := "$ERROR";
__n283["callee"] := __n284;
__n286 := {  };
__n286["type"] := "Literal";
__n286["value"] := "#4.4: Exception !==\"ex2\". Actual: catch previous catched exception";
__n286["raw"] := "'#4.4: Exception !==\"ex2\". Actual: catch previous catched exception'";
__n285 := [ __n286 ];
__n283["arguments"] := __n285;
__n282["expression"] := __n283;
__n278["consequent"] := __n282;
__n278["alternate"] := null;
__n287 := {  };
__n287["type"] := "IfStatement";
__n288 := {  };
__n288["type"] := "BinaryExpression";
__n288["operator"] := "===";
__n289 := {  };
__n289["type"] := "Identifier";
__n289["name"] := "er1";
__n288["left"] := __n289;
__n290 := {  };
__n290["type"] := "Literal";
__n290["value"] := "ex3";
__n290["raw"] := "\"ex3\"";
__n288["right"] := __n290;
__n287["test"] := __n288;
__n291 := {  };
__n291["type"] := "ExpressionStatement";
__n292 := {  };
__n292["type"] := "CallExpression";
__n293 := {  };
__n293["type"] := "Identifier";
__n293["name"] := "$ERROR";
__n292["callee"] := __n293;
__n295 := {  };
__n295["type"] := "Literal";
__n295["value"] := "#4.5: Exception !==\"ex3\". Actual: Catch previous embedded exception";
__n295["raw"] := "'#4.5: Exception !==\"ex3\". Actual: Catch previous embedded exception'";
__n294 := [ __n295 ];
__n292["arguments"] := __n294;
__n291["expression"] := __n292;
__n287["consequent"] := __n291;
__n287["alternate"] := null;
__n229 := [ __n230, __n267, __n278, __n287 ];
__n228["body"] := __n229;
__n226["body"] := __n228;
__n221["handler"] := __n226;
__n296 := {  };
__n296["type"] := "BlockStatement";
__n298 := {  };
__n298["type"] := "ExpressionStatement";
__n299 := {  };
__n299["type"] := "AssignmentExpression";
__n299["operator"] := "*=";
__n300 := {  };
__n300["type"] := "Identifier";
__n300["name"] := "c4";
__n299["left"] := __n300;
__n301 := {  };
__n301["type"] := "Literal";
__n301["value"] := 2.;
__n301["raw"] := "2";
__n299["right"] := __n301;
__n298["expression"] := __n299;
__n297 := [ __n298 ];
__n296["body"] := __n297;
__n221["finalizer"] := __n296;
__n220 := [ __n221 ];
__n219["body"] := __n220;
__n218["block"] := __n219;
__n302 := {  };
__n302["type"] := "CatchClause";
__n303 := {  };
__n303["type"] := "Identifier";
__n303["name"] := "er1";
__n302["param"] := __n303;
__n304 := {  };
__n304["type"] := "BlockStatement";
__n305 := [  ];
__n304["body"] := __n305;
__n302["body"] := __n304;
__n218["handler"] := __n302;
__n218["finalizer"] := null;
__n306 := {  };
__n306["type"] := "IfStatement";
__n307 := {  };
__n307["type"] := "BinaryExpression";
__n307["operator"] := "!==";
__n308 := {  };
__n308["type"] := "Identifier";
__n308["name"] := "c4";
__n307["left"] := __n308;
__n309 := {  };
__n309["type"] := "Literal";
__n309["value"] := 4.;
__n309["raw"] := "4";
__n307["right"] := __n309;
__n306["test"] := __n307;
__n310 := {  };
__n310["type"] := "ExpressionStatement";
__n311 := {  };
__n311["type"] := "CallExpression";
__n312 := {  };
__n312["type"] := "Identifier";
__n312["name"] := "$ERROR";
__n311["callee"] := __n312;
__n314 := {  };
__n314["type"] := "Literal";
__n314["value"] := "#4.6: \"finally\" block must be evaluated";
__n314["raw"] := "'#4.6: \"finally\" block must be evaluated'";
__n313 := [ __n314 ];
__n311["arguments"] := __n313;
__n310["expression"] := __n311;
__n306["consequent"] := __n310;
__n306["alternate"] := null;
__n315 := {  };
__n315["type"] := "VariableDeclaration";
__n317 := {  };
__n317["type"] := "VariableDeclarator";
__n318 := {  };
__n318["type"] := "Identifier";
__n318["name"] := "c5";
__n317["id"] := __n318;
__n319 := {  };
__n319["type"] := "Literal";
__n319["value"] := 0.;
__n319["raw"] := "0";
__n317["init"] := __n319;
__n316 := [ __n317 ];
__n315["declarations"] := __n316;
__n315["kind"] := "var";
__n320 := {  };
__n320["type"] := "TryStatement";
__n321 := {  };
__n321["type"] := "BlockStatement";
__n323 := {  };
__n323["type"] := "TryStatement";
__n324 := {  };
__n324["type"] := "BlockStatement";
__n326 := {  };
__n326["type"] := "ThrowStatement";
__n327 := {  };
__n327["type"] := "Literal";
__n327["value"] := "ex2";
__n327["raw"] := "\"ex2\"";
__n326["argument"] := __n327;
__n325 := [ __n326 ];
__n324["body"] := __n325;
__n323["block"] := __n324;
__n328 := {  };
__n328["type"] := "CatchClause";
__n329 := {  };
__n329["type"] := "Identifier";
__n329["name"] := "er1";
__n328["param"] := __n329;
__n330 := {  };
__n330["type"] := "BlockStatement";
__n332 := {  };
__n332["type"] := "IfStatement";
__n333 := {  };
__n333["type"] := "BinaryExpression";
__n333["operator"] := "!==";
__n334 := {  };
__n334["type"] := "Identifier";
__n334["name"] := "er1";
__n333["left"] := __n334;
__n335 := {  };
__n335["type"] := "Literal";
__n335["value"] := "ex2";
__n335["raw"] := "\"ex2\"";
__n333["right"] := __n335;
__n332["test"] := __n333;
__n336 := {  };
__n336["type"] := "ExpressionStatement";
__n337 := {  };
__n337["type"] := "CallExpression";
__n338 := {  };
__n338["type"] := "Identifier";
__n338["name"] := "$ERROR";
__n337["callee"] := __n338;
__n340 := {  };
__n340["type"] := "BinaryExpression";
__n340["operator"] := "+";
__n341 := {  };
__n341["type"] := "Literal";
__n341["value"] := "#5.1: Exception === \"ex2\". Actual:  Exception ===";
__n341["raw"] := "'#5.1: Exception === \"ex2\". Actual:  Exception ==='";
__n340["left"] := __n341;
__n342 := {  };
__n342["type"] := "Identifier";
__n342["name"] := "er1";
__n340["right"] := __n342;
__n339 := [ __n340 ];
__n337["arguments"] := __n339;
__n336["expression"] := __n337;
__n332["consequent"] := __n336;
__n332["alternate"] := null;
__n331 := [ __n332 ];
__n330["body"] := __n331;
__n328["body"] := __n330;
__n323["handler"] := __n328;
__n343 := {  };
__n343["type"] := "BlockStatement";
__n345 := {  };
__n345["type"] := "ThrowStatement";
__n346 := {  };
__n346["type"] := "Literal";
__n346["value"] := "ex3";
__n346["raw"] := "\"ex3\"";
__n345["argument"] := __n346;
__n344 := [ __n345 ];
__n343["body"] := __n344;
__n323["finalizer"] := __n343;
__n347 := {  };
__n347["type"] := "ThrowStatement";
__n348 := {  };
__n348["type"] := "Literal";
__n348["value"] := "ex1";
__n348["raw"] := "\"ex1\"";
__n347["argument"] := __n348;
__n322 := [ __n323, __n347 ];
__n321["body"] := __n322;
__n320["block"] := __n321;
__n349 := {  };
__n349["type"] := "CatchClause";
__n350 := {  };
__n350["type"] := "Identifier";
__n350["name"] := "er1";
__n349["param"] := __n350;
__n351 := {  };
__n351["type"] := "BlockStatement";
__n353 := {  };
__n353["type"] := "IfStatement";
__n354 := {  };
__n354["type"] := "BinaryExpression";
__n354["operator"] := "!==";
__n355 := {  };
__n355["type"] := "Identifier";
__n355["name"] := "er1";
__n354["left"] := __n355;
__n356 := {  };
__n356["type"] := "Literal";
__n356["value"] := "ex3";
__n356["raw"] := "\"ex3\"";
__n354["right"] := __n356;
__n353["test"] := __n354;
__n357 := {  };
__n357["type"] := "ExpressionStatement";
__n358 := {  };
__n358["type"] := "CallExpression";
__n359 := {  };
__n359["type"] := "Identifier";
__n359["name"] := "$ERROR";
__n358["callee"] := __n359;
__n361 := {  };
__n361["type"] := "BinaryExpression";
__n361["operator"] := "+";
__n362 := {  };
__n362["type"] := "Literal";
__n362["value"] := "#5.2: Exception === \"ex3\". Actual:  Exception ===";
__n362["raw"] := "'#5.2: Exception === \"ex3\". Actual:  Exception ==='";
__n361["left"] := __n362;
__n363 := {  };
__n363["type"] := "Identifier";
__n363["name"] := "er1";
__n361["right"] := __n363;
__n360 := [ __n361 ];
__n358["arguments"] := __n360;
__n357["expression"] := __n358;
__n353["consequent"] := __n357;
__n353["alternate"] := null;
__n364 := {  };
__n364["type"] := "IfStatement";
__n365 := {  };
__n365["type"] := "BinaryExpression";
__n365["operator"] := "===";
__n366 := {  };
__n366["type"] := "Identifier";
__n366["name"] := "er1";
__n365["left"] := __n366;
__n367 := {  };
__n367["type"] := "Literal";
__n367["value"] := "ex2";
__n367["raw"] := "\"ex2\"";
__n365["right"] := __n367;
__n364["test"] := __n365;
__n368 := {  };
__n368["type"] := "ExpressionStatement";
__n369 := {  };
__n369["type"] := "CallExpression";
__n370 := {  };
__n370["type"] := "Identifier";
__n370["name"] := "$ERROR";
__n369["callee"] := __n370;
__n372 := {  };
__n372["type"] := "Literal";
__n372["value"] := "#5.3: Exception !==\"ex2\". Actual: catch previous catched exception";
__n372["raw"] := "'#5.3: Exception !==\"ex2\". Actual: catch previous catched exception'";
__n371 := [ __n372 ];
__n369["arguments"] := __n371;
__n368["expression"] := __n369;
__n364["consequent"] := __n368;
__n364["alternate"] := null;
__n373 := {  };
__n373["type"] := "IfStatement";
__n374 := {  };
__n374["type"] := "BinaryExpression";
__n374["operator"] := "===";
__n375 := {  };
__n375["type"] := "Identifier";
__n375["name"] := "er1";
__n374["left"] := __n375;
__n376 := {  };
__n376["type"] := "Literal";
__n376["value"] := "ex1";
__n376["raw"] := "\"ex1\"";
__n374["right"] := __n376;
__n373["test"] := __n374;
__n377 := {  };
__n377["type"] := "ExpressionStatement";
__n378 := {  };
__n378["type"] := "CallExpression";
__n379 := {  };
__n379["type"] := "Identifier";
__n379["name"] := "$ERROR";
__n378["callee"] := __n379;
__n381 := {  };
__n381["type"] := "Literal";
__n381["value"] := "#5.4: Exception !==\"ex1\". Actual: catch previous embedded exception";
__n381["raw"] := "'#5.4: Exception !==\"ex1\". Actual: catch previous embedded exception'";
__n380 := [ __n381 ];
__n378["arguments"] := __n380;
__n377["expression"] := __n378;
__n373["consequent"] := __n377;
__n373["alternate"] := null;
__n352 := [ __n353, __n364, __n373 ];
__n351["body"] := __n352;
__n349["body"] := __n351;
__n320["handler"] := __n349;
__n382 := {  };
__n382["type"] := "BlockStatement";
__n384 := {  };
__n384["type"] := "ExpressionStatement";
__n385 := {  };
__n385["type"] := "AssignmentExpression";
__n385["operator"] := "=";
__n386 := {  };
__n386["type"] := "Identifier";
__n386["name"] := "c5";
__n385["left"] := __n386;
__n387 := {  };
__n387["type"] := "Literal";
__n387["value"] := 1.;
__n387["raw"] := "1";
__n385["right"] := __n387;
__n384["expression"] := __n385;
__n383 := [ __n384 ];
__n382["body"] := __n383;
__n320["finalizer"] := __n382;
__n388 := {  };
__n388["type"] := "IfStatement";
__n389 := {  };
__n389["type"] := "BinaryExpression";
__n389["operator"] := "!==";
__n390 := {  };
__n390["type"] := "Identifier";
__n390["name"] := "c5";
__n389["left"] := __n390;
__n391 := {  };
__n391["type"] := "Literal";
__n391["value"] := 1.;
__n391["raw"] := "1";
__n389["right"] := __n391;
__n388["test"] := __n389;
__n392 := {  };
__n392["type"] := "ExpressionStatement";
__n393 := {  };
__n393["type"] := "CallExpression";
__n394 := {  };
__n394["type"] := "Identifier";
__n394["name"] := "$ERROR";
__n393["callee"] := __n394;
__n396 := {  };
__n396["type"] := "Literal";
__n396["value"] := "#5.5: \"finally\" block must be evaluated";
__n396["raw"] := "'#5.5: \"finally\" block must be evaluated'";
__n395 := [ __n396 ];
__n393["arguments"] := __n395;
__n392["expression"] := __n393;
__n388["consequent"] := __n392;
__n388["alternate"] := null;
__n397 := {  };
__n397["type"] := "VariableDeclaration";
__n399 := {  };
__n399["type"] := "VariableDeclarator";
__n400 := {  };
__n400["type"] := "Identifier";
__n400["name"] := "c6";
__n399["id"] := __n400;
__n401 := {  };
__n401["type"] := "Literal";
__n401["value"] := 0.;
__n401["raw"] := "0";
__n399["init"] := __n401;
__n398 := [ __n399 ];
__n397["declarations"] := __n398;
__n397["kind"] := "var";
__n402 := {  };
__n402["type"] := "TryStatement";
__n403 := {  };
__n403["type"] := "BlockStatement";
__n405 := {  };
__n405["type"] := "TryStatement";
__n406 := {  };
__n406["type"] := "BlockStatement";
__n408 := {  };
__n408["type"] := "ThrowStatement";
__n409 := {  };
__n409["type"] := "Literal";
__n409["value"] := "ex1";
__n409["raw"] := "\"ex1\"";
__n408["argument"] := __n409;
__n407 := [ __n408 ];
__n406["body"] := __n407;
__n405["block"] := __n406;
__n410 := {  };
__n410["type"] := "CatchClause";
__n411 := {  };
__n411["type"] := "Identifier";
__n411["name"] := "er1";
__n410["param"] := __n411;
__n412 := {  };
__n412["type"] := "BlockStatement";
__n414 := {  };
__n414["type"] := "IfStatement";
__n415 := {  };
__n415["type"] := "BinaryExpression";
__n415["operator"] := "!==";
__n416 := {  };
__n416["type"] := "Identifier";
__n416["name"] := "er1";
__n415["left"] := __n416;
__n417 := {  };
__n417["type"] := "Literal";
__n417["value"] := "ex1";
__n417["raw"] := "\"ex1\"";
__n415["right"] := __n417;
__n414["test"] := __n415;
__n418 := {  };
__n418["type"] := "ExpressionStatement";
__n419 := {  };
__n419["type"] := "CallExpression";
__n420 := {  };
__n420["type"] := "Identifier";
__n420["name"] := "$ERROR";
__n419["callee"] := __n420;
__n422 := {  };
__n422["type"] := "BinaryExpression";
__n422["operator"] := "+";
__n423 := {  };
__n423["type"] := "Literal";
__n423["value"] := "#6.1: Exception === \"ex1\". Actual:  Exception ===";
__n423["raw"] := "'#6.1: Exception === \"ex1\". Actual:  Exception ==='";
__n422["left"] := __n423;
__n424 := {  };
__n424["type"] := "Identifier";
__n424["name"] := "er1";
__n422["right"] := __n424;
__n421 := [ __n422 ];
__n419["arguments"] := __n421;
__n418["expression"] := __n419;
__n414["consequent"] := __n418;
__n414["alternate"] := null;
__n413 := [ __n414 ];
__n412["body"] := __n413;
__n410["body"] := __n412;
__n405["handler"] := __n410;
__n425 := {  };
__n425["type"] := "BlockStatement";
__n427 := {  };
__n427["type"] := "ExpressionStatement";
__n428 := {  };
__n428["type"] := "AssignmentExpression";
__n428["operator"] := "=";
__n429 := {  };
__n429["type"] := "Identifier";
__n429["name"] := "c6";
__n428["left"] := __n429;
__n430 := {  };
__n430["type"] := "Literal";
__n430["value"] := 2.;
__n430["raw"] := "2";
__n428["right"] := __n430;
__n427["expression"] := __n428;
__n426 := [ __n427 ];
__n425["body"] := __n426;
__n405["finalizer"] := __n425;
__n404 := [ __n405 ];
__n403["body"] := __n404;
__n402["block"] := __n403;
__n402["handler"] := null;
__n431 := {  };
__n431["type"] := "BlockStatement";
__n433 := {  };
__n433["type"] := "ExpressionStatement";
__n434 := {  };
__n434["type"] := "AssignmentExpression";
__n434["operator"] := "*=";
__n435 := {  };
__n435["type"] := "Identifier";
__n435["name"] := "c6";
__n434["left"] := __n435;
__n436 := {  };
__n436["type"] := "Literal";
__n436["value"] := 2.;
__n436["raw"] := "2";
__n434["right"] := __n436;
__n433["expression"] := __n434;
__n432 := [ __n433 ];
__n431["body"] := __n432;
__n402["finalizer"] := __n431;
__n437 := {  };
__n437["type"] := "IfStatement";
__n438 := {  };
__n438["type"] := "BinaryExpression";
__n438["operator"] := "!==";
__n439 := {  };
__n439["type"] := "Identifier";
__n439["name"] := "c6";
__n438["left"] := __n439;
__n440 := {  };
__n440["type"] := "Literal";
__n440["value"] := 4.;
__n440["raw"] := "4";
__n438["right"] := __n440;
__n437["test"] := __n438;
__n441 := {  };
__n441["type"] := "ExpressionStatement";
__n442 := {  };
__n442["type"] := "CallExpression";
__n443 := {  };
__n443["type"] := "Identifier";
__n443["name"] := "$ERROR";
__n442["callee"] := __n443;
__n445 := {  };
__n445["type"] := "Literal";
__n445["value"] := "#6.2: \"finally\" block must be evaluated";
__n445["raw"] := "'#6.2: \"finally\" block must be evaluated'";
__n444 := [ __n445 ];
__n442["arguments"] := __n444;
__n441["expression"] := __n442;
__n437["consequent"] := __n441;
__n437["alternate"] := null;
__n446 := {  };
__n446["type"] := "VariableDeclaration";
__n448 := {  };
__n448["type"] := "VariableDeclarator";
__n449 := {  };
__n449["type"] := "Identifier";
__n449["name"] := "c7";
__n448["id"] := __n449;
__n450 := {  };
__n450["type"] := "Literal";
__n450["value"] := 0.;
__n450["raw"] := "0";
__n448["init"] := __n450;
__n447 := [ __n448 ];
__n446["declarations"] := __n447;
__n446["kind"] := "var";
__n451 := {  };
__n451["type"] := "TryStatement";
__n452 := {  };
__n452["type"] := "BlockStatement";
__n454 := {  };
__n454["type"] := "TryStatement";
__n455 := {  };
__n455["type"] := "BlockStatement";
__n457 := {  };
__n457["type"] := "ThrowStatement";
__n458 := {  };
__n458["type"] := "Literal";
__n458["value"] := "ex1";
__n458["raw"] := "\"ex1\"";
__n457["argument"] := __n458;
__n456 := [ __n457 ];
__n455["body"] := __n456;
__n454["block"] := __n455;
__n454["handler"] := null;
__n459 := {  };
__n459["type"] := "BlockStatement";
__n461 := {  };
__n461["type"] := "TryStatement";
__n462 := {  };
__n462["type"] := "BlockStatement";
__n464 := {  };
__n464["type"] := "ExpressionStatement";
__n465 := {  };
__n465["type"] := "AssignmentExpression";
__n465["operator"] := "=";
__n466 := {  };
__n466["type"] := "Identifier";
__n466["name"] := "c7";
__n465["left"] := __n466;
__n467 := {  };
__n467["type"] := "Literal";
__n467["value"] := 1.;
__n467["raw"] := "1";
__n465["right"] := __n467;
__n464["expression"] := __n465;
__n468 := {  };
__n468["type"] := "ThrowStatement";
__n469 := {  };
__n469["type"] := "Literal";
__n469["value"] := "ex2";
__n469["raw"] := "\"ex2\"";
__n468["argument"] := __n469;
__n463 := [ __n464, __n468 ];
__n462["body"] := __n463;
__n461["block"] := __n462;
__n470 := {  };
__n470["type"] := "CatchClause";
__n471 := {  };
__n471["type"] := "Identifier";
__n471["name"] := "er1";
__n470["param"] := __n471;
__n472 := {  };
__n472["type"] := "BlockStatement";
__n474 := {  };
__n474["type"] := "IfStatement";
__n475 := {  };
__n475["type"] := "BinaryExpression";
__n475["operator"] := "!==";
__n476 := {  };
__n476["type"] := "Identifier";
__n476["name"] := "er1";
__n475["left"] := __n476;
__n477 := {  };
__n477["type"] := "Literal";
__n477["value"] := "ex2";
__n477["raw"] := "\"ex2\"";
__n475["right"] := __n477;
__n474["test"] := __n475;
__n478 := {  };
__n478["type"] := "ExpressionStatement";
__n479 := {  };
__n479["type"] := "CallExpression";
__n480 := {  };
__n480["type"] := "Identifier";
__n480["name"] := "$ERROR";
__n479["callee"] := __n480;
__n482 := {  };
__n482["type"] := "BinaryExpression";
__n482["operator"] := "+";
__n483 := {  };
__n483["type"] := "Literal";
__n483["value"] := "#7.1: Exception === \"ex2\". Actual:  Exception ===";
__n483["raw"] := "'#7.1: Exception === \"ex2\". Actual:  Exception ==='";
__n482["left"] := __n483;
__n484 := {  };
__n484["type"] := "Identifier";
__n484["name"] := "er1";
__n482["right"] := __n484;
__n481 := [ __n482 ];
__n479["arguments"] := __n481;
__n478["expression"] := __n479;
__n474["consequent"] := __n478;
__n474["alternate"] := null;
__n485 := {  };
__n485["type"] := "IfStatement";
__n486 := {  };
__n486["type"] := "BinaryExpression";
__n486["operator"] := "===";
__n487 := {  };
__n487["type"] := "Identifier";
__n487["name"] := "er1";
__n486["left"] := __n487;
__n488 := {  };
__n488["type"] := "Literal";
__n488["value"] := "ex1";
__n488["raw"] := "\"ex1\"";
__n486["right"] := __n488;
__n485["test"] := __n486;
__n489 := {  };
__n489["type"] := "ExpressionStatement";
__n490 := {  };
__n490["type"] := "CallExpression";
__n491 := {  };
__n491["type"] := "Identifier";
__n491["name"] := "$ERROR";
__n490["callee"] := __n491;
__n493 := {  };
__n493["type"] := "Literal";
__n493["value"] := "#7.2: Exception !==\"ex2\". Actual: catch previous catched exception";
__n493["raw"] := "'#7.2: Exception !==\"ex2\". Actual: catch previous catched exception'";
__n492 := [ __n493 ];
__n490["arguments"] := __n492;
__n489["expression"] := __n490;
__n485["consequent"] := __n489;
__n485["alternate"] := null;
__n494 := {  };
__n494["type"] := "ExpressionStatement";
__n495 := {  };
__n495["type"] := "UpdateExpression";
__n495["operator"] := "++";
__n496 := {  };
__n496["type"] := "Identifier";
__n496["name"] := "c7";
__n495["argument"] := __n496;
__n495["prefix"] := false;
__n494["expression"] := __n495;
__n473 := [ __n474, __n485, __n494 ];
__n472["body"] := __n473;
__n470["body"] := __n472;
__n461["handler"] := __n470;
__n497 := {  };
__n497["type"] := "BlockStatement";
__n499 := {  };
__n499["type"] := "ExpressionStatement";
__n500 := {  };
__n500["type"] := "AssignmentExpression";
__n500["operator"] := "*=";
__n501 := {  };
__n501["type"] := "Identifier";
__n501["name"] := "c7";
__n500["left"] := __n501;
__n502 := {  };
__n502["type"] := "Literal";
__n502["value"] := 2.;
__n502["raw"] := "2";
__n500["right"] := __n502;
__n499["expression"] := __n500;
__n498 := [ __n499 ];
__n497["body"] := __n498;
__n461["finalizer"] := __n497;
__n460 := [ __n461 ];
__n459["body"] := __n460;
__n454["finalizer"] := __n459;
__n453 := [ __n454 ];
__n452["body"] := __n453;
__n451["block"] := __n452;
__n503 := {  };
__n503["type"] := "CatchClause";
__n504 := {  };
__n504["type"] := "Identifier";
__n504["name"] := "er1";
__n503["param"] := __n504;
__n505 := {  };
__n505["type"] := "BlockStatement";
__n507 := {  };
__n507["type"] := "IfStatement";
__n508 := {  };
__n508["type"] := "BinaryExpression";
__n508["operator"] := "!==";
__n509 := {  };
__n509["type"] := "Identifier";
__n509["name"] := "er1";
__n508["left"] := __n509;
__n510 := {  };
__n510["type"] := "Literal";
__n510["value"] := "ex1";
__n510["raw"] := "\"ex1\"";
__n508["right"] := __n510;
__n507["test"] := __n508;
__n511 := {  };
__n511["type"] := "ExpressionStatement";
__n512 := {  };
__n512["type"] := "CallExpression";
__n513 := {  };
__n513["type"] := "Identifier";
__n513["name"] := "$ERROR";
__n512["callee"] := __n513;
__n515 := {  };
__n515["type"] := "BinaryExpression";
__n515["operator"] := "+";
__n516 := {  };
__n516["type"] := "Literal";
__n516["value"] := "#7.3: Exception === \"ex1\". Actual:  Exception ===";
__n516["raw"] := "'#7.3: Exception === \"ex1\". Actual:  Exception ==='";
__n515["left"] := __n516;
__n517 := {  };
__n517["type"] := "Identifier";
__n517["name"] := "er1";
__n515["right"] := __n517;
__n514 := [ __n515 ];
__n512["arguments"] := __n514;
__n511["expression"] := __n512;
__n507["consequent"] := __n511;
__n507["alternate"] := null;
__n506 := [ __n507 ];
__n505["body"] := __n506;
__n503["body"] := __n505;
__n451["handler"] := __n503;
__n451["finalizer"] := null;
__n518 := {  };
__n518["type"] := "IfStatement";
__n519 := {  };
__n519["type"] := "BinaryExpression";
__n519["operator"] := "!==";
__n520 := {  };
__n520["type"] := "Identifier";
__n520["name"] := "c7";
__n519["left"] := __n520;
__n521 := {  };
__n521["type"] := "Literal";
__n521["value"] := 4.;
__n521["raw"] := "4";
__n519["right"] := __n521;
__n518["test"] := __n519;
__n522 := {  };
__n522["type"] := "ExpressionStatement";
__n523 := {  };
__n523["type"] := "CallExpression";
__n524 := {  };
__n524["type"] := "Identifier";
__n524["name"] := "$ERROR";
__n523["callee"] := __n524;
__n526 := {  };
__n526["type"] := "Literal";
__n526["value"] := "#7.4: \"finally\" block must be evaluated";
__n526["raw"] := "'#7.4: \"finally\" block must be evaluated'";
__n525 := [ __n526 ];
__n523["arguments"] := __n525;
__n522["expression"] := __n523;
__n518["consequent"] := __n522;
__n518["alternate"] := null;
__n1 := [ __n2, __n64, __n69, __n133, __n142, __n147, __n204, __n213, __n218, __n306, __n315, __n320, __n388, __n397, __n402, __n437, __n446, __n451, __n518 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n527 := [ "c2", "c3", "c4", "c5", "c6", "c7" ];
__n0["variableDeclarations"] := __n527;
__n528 := [  ];
__n0["functionDeclarations"] := __n528;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}