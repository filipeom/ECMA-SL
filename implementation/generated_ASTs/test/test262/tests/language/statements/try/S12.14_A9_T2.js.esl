function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "c1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "fin";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0";
__n7["init"] := __n9;
__n3 := [ __n4, __n7 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "DoWhileStatement";
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "TryStatement";
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "AssignmentExpression";
__n17["operator"] := "+=";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "c1";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n17["right"] := __n19;
__n16["expression"] := __n17;
__n20 := {  };
__n20["type"] := "ContinueStatement";
__n20["label"] := null;
__n15 := [ __n16, __n20 ];
__n14["body"] := __n15;
__n13["block"] := __n14;
__n21 := {  };
__n21["type"] := "CatchClause";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "er1";
__n21["param"] := __n22;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n24 := [  ];
__n23["body"] := __n24;
__n21["body"] := __n23;
__n13["handler"] := __n21;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "AssignmentExpression";
__n28["operator"] := "=";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "fin";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 1.;
__n30["raw"] := "1";
__n28["right"] := __n30;
__n27["expression"] := __n28;
__n26 := [ __n27 ];
__n25["body"] := __n26;
__n13["finalizer"] := __n25;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "fin";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "UnaryExpression";
__n34["operator"] := "-";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 1.;
__n35["raw"] := "1";
__n34["argument"] := __n35;
__n34["prefix"] := true;
__n32["right"] := __n34;
__n31["expression"] := __n32;
__n12 := [ __n13, __n31 ];
__n11["body"] := __n12;
__n10["body"] := __n11;
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "<";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "c1";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 2.;
__n38["raw"] := "2";
__n36["right"] := __n38;
__n10["test"] := __n36;
__n39 := {  };
__n39["type"] := "IfStatement";
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "!==";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "fin";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 1.;
__n42["raw"] := "1";
__n40["right"] := __n42;
__n39["test"] := __n40;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "#1: \"finally\" block must be evaluated at \"try{continue} catch finally\" construction";
__n49["raw"] := "'#1: \"finally\" block must be evaluated at \"try{continue} catch finally\" construction'";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n39["consequent"] := __n43;
__n39["alternate"] := null;
__n50 := {  };
__n50["type"] := "VariableDeclaration";
__n52 := {  };
__n52["type"] := "VariableDeclarator";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "c2";
__n52["id"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 0.;
__n54["raw"] := "0";
__n52["init"] := __n54;
__n55 := {  };
__n55["type"] := "VariableDeclarator";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "fin2";
__n55["id"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 0.;
__n57["raw"] := "0";
__n55["init"] := __n57;
__n51 := [ __n52, __n55 ];
__n50["declarations"] := __n51;
__n50["kind"] := "var";
__n58 := {  };
__n58["type"] := "DoWhileStatement";
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "TryStatement";
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ThrowStatement";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "ex1";
__n65["raw"] := "\"ex1\"";
__n64["argument"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n61["block"] := __n62;
__n66 := {  };
__n66["type"] := "CatchClause";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "er1";
__n66["param"] := __n67;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "AssignmentExpression";
__n71["operator"] := "+=";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "c2";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 1.;
__n73["raw"] := "1";
__n71["right"] := __n73;
__n70["expression"] := __n71;
__n74 := {  };
__n74["type"] := "ContinueStatement";
__n74["label"] := null;
__n69 := [ __n70, __n74 ];
__n68["body"] := __n69;
__n66["body"] := __n68;
__n61["handler"] := __n66;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "AssignmentExpression";
__n78["operator"] := "=";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "fin2";
__n78["left"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 1.;
__n80["raw"] := "1";
__n78["right"] := __n80;
__n77["expression"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n61["finalizer"] := __n75;
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "AssignmentExpression";
__n82["operator"] := "=";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "fin2";
__n82["left"] := __n83;
__n84 := {  };
__n84["type"] := "UnaryExpression";
__n84["operator"] := "-";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := 1.;
__n85["raw"] := "1";
__n84["argument"] := __n85;
__n84["prefix"] := true;
__n82["right"] := __n84;
__n81["expression"] := __n82;
__n60 := [ __n61, __n81 ];
__n59["body"] := __n60;
__n58["body"] := __n59;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "<";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "c2";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 2.;
__n88["raw"] := "2";
__n86["right"] := __n88;
__n58["test"] := __n86;
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "!==";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "fin2";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 1.;
__n92["raw"] := "1";
__n90["right"] := __n92;
__n89["test"] := __n90;
__n93 := {  };
__n93["type"] := "BlockStatement";
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "CallExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "$ERROR";
__n96["callee"] := __n97;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "#2: \"finally\" block must be evaluated at \"try catch{continue} finally\" construction";
__n99["raw"] := "'#2: \"finally\" block must be evaluated at \"try catch{continue} finally\" construction'";
__n98 := [ __n99 ];
__n96["arguments"] := __n98;
__n95["expression"] := __n96;
__n94 := [ __n95 ];
__n93["body"] := __n94;
__n89["consequent"] := __n93;
__n89["alternate"] := null;
__n100 := {  };
__n100["type"] := "VariableDeclaration";
__n102 := {  };
__n102["type"] := "VariableDeclarator";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "c3";
__n102["id"] := __n103;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := 0.;
__n104["raw"] := "0";
__n102["init"] := __n104;
__n105 := {  };
__n105["type"] := "VariableDeclarator";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "fin3";
__n105["id"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 0.;
__n107["raw"] := "0";
__n105["init"] := __n107;
__n101 := [ __n102, __n105 ];
__n100["declarations"] := __n101;
__n100["kind"] := "var";
__n108 := {  };
__n108["type"] := "DoWhileStatement";
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "TryStatement";
__n112 := {  };
__n112["type"] := "BlockStatement";
__n114 := {  };
__n114["type"] := "ThrowStatement";
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "ex1";
__n115["raw"] := "\"ex1\"";
__n114["argument"] := __n115;
__n113 := [ __n114 ];
__n112["body"] := __n113;
__n111["block"] := __n112;
__n116 := {  };
__n116["type"] := "CatchClause";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "er1";
__n116["param"] := __n117;
__n118 := {  };
__n118["type"] := "BlockStatement";
__n120 := {  };
__n120["type"] := "ExpressionStatement";
__n121 := {  };
__n121["type"] := "AssignmentExpression";
__n121["operator"] := "+=";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "c3";
__n121["left"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 1.;
__n123["raw"] := "1";
__n121["right"] := __n123;
__n120["expression"] := __n121;
__n119 := [ __n120 ];
__n118["body"] := __n119;
__n116["body"] := __n118;
__n111["handler"] := __n116;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "AssignmentExpression";
__n127["operator"] := "=";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "fin3";
__n127["left"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := 1.;
__n129["raw"] := "1";
__n127["right"] := __n129;
__n126["expression"] := __n127;
__n130 := {  };
__n130["type"] := "ContinueStatement";
__n130["label"] := null;
__n125 := [ __n126, __n130 ];
__n124["body"] := __n125;
__n111["finalizer"] := __n124;
__n131 := {  };
__n131["type"] := "ExpressionStatement";
__n132 := {  };
__n132["type"] := "AssignmentExpression";
__n132["operator"] := "=";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "fin3";
__n132["left"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 0.;
__n134["raw"] := "0";
__n132["right"] := __n134;
__n131["expression"] := __n132;
__n110 := [ __n111, __n131 ];
__n109["body"] := __n110;
__n108["body"] := __n109;
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "<";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "c3";
__n135["left"] := __n136;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := 2.;
__n137["raw"] := "2";
__n135["right"] := __n137;
__n108["test"] := __n135;
__n138 := {  };
__n138["type"] := "IfStatement";
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "!==";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "fin3";
__n139["left"] := __n140;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := 1.;
__n141["raw"] := "1";
__n139["right"] := __n141;
__n138["test"] := __n139;
__n142 := {  };
__n142["type"] := "BlockStatement";
__n144 := {  };
__n144["type"] := "ExpressionStatement";
__n145 := {  };
__n145["type"] := "CallExpression";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "$ERROR";
__n145["callee"] := __n146;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "#3: \"finally\" block must be evaluated at \"try catch finally{continue}\" construction";
__n148["raw"] := "'#3: \"finally\" block must be evaluated at \"try catch finally{continue}\" construction'";
__n147 := [ __n148 ];
__n145["arguments"] := __n147;
__n144["expression"] := __n145;
__n143 := [ __n144 ];
__n142["body"] := __n143;
__n138["consequent"] := __n142;
__n138["alternate"] := null;
__n149 := {  };
__n149["type"] := "VariableDeclaration";
__n151 := {  };
__n151["type"] := "VariableDeclarator";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "c4";
__n151["id"] := __n152;
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := 0.;
__n153["raw"] := "0";
__n151["init"] := __n153;
__n154 := {  };
__n154["type"] := "VariableDeclarator";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "fin4";
__n154["id"] := __n155;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := 0.;
__n156["raw"] := "0";
__n154["init"] := __n156;
__n150 := [ __n151, __n154 ];
__n149["declarations"] := __n150;
__n149["kind"] := "var";
__n157 := {  };
__n157["type"] := "DoWhileStatement";
__n158 := {  };
__n158["type"] := "BlockStatement";
__n160 := {  };
__n160["type"] := "TryStatement";
__n161 := {  };
__n161["type"] := "BlockStatement";
__n163 := {  };
__n163["type"] := "ExpressionStatement";
__n164 := {  };
__n164["type"] := "AssignmentExpression";
__n164["operator"] := "+=";
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "c4";
__n164["left"] := __n165;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := 1.;
__n166["raw"] := "1";
__n164["right"] := __n166;
__n163["expression"] := __n164;
__n167 := {  };
__n167["type"] := "ContinueStatement";
__n167["label"] := null;
__n162 := [ __n163, __n167 ];
__n161["body"] := __n162;
__n160["block"] := __n161;
__n160["handler"] := null;
__n168 := {  };
__n168["type"] := "BlockStatement";
__n170 := {  };
__n170["type"] := "ExpressionStatement";
__n171 := {  };
__n171["type"] := "AssignmentExpression";
__n171["operator"] := "=";
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "fin4";
__n171["left"] := __n172;
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := 1.;
__n173["raw"] := "1";
__n171["right"] := __n173;
__n170["expression"] := __n171;
__n169 := [ __n170 ];
__n168["body"] := __n169;
__n160["finalizer"] := __n168;
__n174 := {  };
__n174["type"] := "ExpressionStatement";
__n175 := {  };
__n175["type"] := "AssignmentExpression";
__n175["operator"] := "=";
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "fin4";
__n175["left"] := __n176;
__n177 := {  };
__n177["type"] := "UnaryExpression";
__n177["operator"] := "-";
__n178 := {  };
__n178["type"] := "Literal";
__n178["value"] := 1.;
__n178["raw"] := "1";
__n177["argument"] := __n178;
__n177["prefix"] := true;
__n175["right"] := __n177;
__n174["expression"] := __n175;
__n159 := [ __n160, __n174 ];
__n158["body"] := __n159;
__n157["body"] := __n158;
__n179 := {  };
__n179["type"] := "BinaryExpression";
__n179["operator"] := "<";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "c4";
__n179["left"] := __n180;
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := 2.;
__n181["raw"] := "2";
__n179["right"] := __n181;
__n157["test"] := __n179;
__n182 := {  };
__n182["type"] := "IfStatement";
__n183 := {  };
__n183["type"] := "BinaryExpression";
__n183["operator"] := "!==";
__n184 := {  };
__n184["type"] := "Identifier";
__n184["name"] := "fin4";
__n183["left"] := __n184;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := 1.;
__n185["raw"] := "1";
__n183["right"] := __n185;
__n182["test"] := __n183;
__n186 := {  };
__n186["type"] := "BlockStatement";
__n188 := {  };
__n188["type"] := "ExpressionStatement";
__n189 := {  };
__n189["type"] := "CallExpression";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "$ERROR";
__n189["callee"] := __n190;
__n192 := {  };
__n192["type"] := "Literal";
__n192["value"] := "#4: \"finally\" block must be evaluated at \"try{continue} finally\"  construction";
__n192["raw"] := "'#4: \"finally\" block must be evaluated at \"try{continue} finally\"  construction'";
__n191 := [ __n192 ];
__n189["arguments"] := __n191;
__n188["expression"] := __n189;
__n187 := [ __n188 ];
__n186["body"] := __n187;
__n182["consequent"] := __n186;
__n182["alternate"] := null;
__n193 := {  };
__n193["type"] := "VariableDeclaration";
__n195 := {  };
__n195["type"] := "VariableDeclarator";
__n196 := {  };
__n196["type"] := "Identifier";
__n196["name"] := "c5";
__n195["id"] := __n196;
__n197 := {  };
__n197["type"] := "Literal";
__n197["value"] := 0.;
__n197["raw"] := "0";
__n195["init"] := __n197;
__n194 := [ __n195 ];
__n193["declarations"] := __n194;
__n193["kind"] := "var";
__n198 := {  };
__n198["type"] := "DoWhileStatement";
__n199 := {  };
__n199["type"] := "BlockStatement";
__n201 := {  };
__n201["type"] := "TryStatement";
__n202 := {  };
__n202["type"] := "BlockStatement";
__n204 := {  };
__n204["type"] := "ThrowStatement";
__n205 := {  };
__n205["type"] := "Literal";
__n205["value"] := "ex1";
__n205["raw"] := "\"ex1\"";
__n204["argument"] := __n205;
__n203 := [ __n204 ];
__n202["body"] := __n203;
__n201["block"] := __n202;
__n206 := {  };
__n206["type"] := "CatchClause";
__n207 := {  };
__n207["type"] := "Identifier";
__n207["name"] := "er1";
__n206["param"] := __n207;
__n208 := {  };
__n208["type"] := "BlockStatement";
__n210 := {  };
__n210["type"] := "ExpressionStatement";
__n211 := {  };
__n211["type"] := "AssignmentExpression";
__n211["operator"] := "+=";
__n212 := {  };
__n212["type"] := "Identifier";
__n212["name"] := "c5";
__n211["left"] := __n212;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := 1.;
__n213["raw"] := "1";
__n211["right"] := __n213;
__n210["expression"] := __n211;
__n214 := {  };
__n214["type"] := "ContinueStatement";
__n214["label"] := null;
__n209 := [ __n210, __n214 ];
__n208["body"] := __n209;
__n206["body"] := __n208;
__n201["handler"] := __n206;
__n201["finalizer"] := null;
__n200 := [ __n201 ];
__n199["body"] := __n200;
__n198["body"] := __n199;
__n215 := {  };
__n215["type"] := "BinaryExpression";
__n215["operator"] := "<";
__n216 := {  };
__n216["type"] := "Identifier";
__n216["name"] := "c5";
__n215["left"] := __n216;
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := 2.;
__n217["raw"] := "2";
__n215["right"] := __n217;
__n198["test"] := __n215;
__n218 := {  };
__n218["type"] := "IfStatement";
__n219 := {  };
__n219["type"] := "BinaryExpression";
__n219["operator"] := "!==";
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "c5";
__n219["left"] := __n220;
__n221 := {  };
__n221["type"] := "Literal";
__n221["value"] := 2.;
__n221["raw"] := "2";
__n219["right"] := __n221;
__n218["test"] := __n219;
__n222 := {  };
__n222["type"] := "BlockStatement";
__n224 := {  };
__n224["type"] := "ExpressionStatement";
__n225 := {  };
__n225["type"] := "CallExpression";
__n226 := {  };
__n226["type"] := "Identifier";
__n226["name"] := "$ERROR";
__n225["callee"] := __n226;
__n228 := {  };
__n228["type"] := "Literal";
__n228["value"] := "#5: \"try catch{continue}\" must work correctly";
__n228["raw"] := "'#5: \"try catch{continue}\" must work correctly'";
__n227 := [ __n228 ];
__n225["arguments"] := __n227;
__n224["expression"] := __n225;
__n223 := [ __n224 ];
__n222["body"] := __n223;
__n218["consequent"] := __n222;
__n218["alternate"] := null;
__n229 := {  };
__n229["type"] := "VariableDeclaration";
__n231 := {  };
__n231["type"] := "VariableDeclarator";
__n232 := {  };
__n232["type"] := "Identifier";
__n232["name"] := "c6";
__n231["id"] := __n232;
__n233 := {  };
__n233["type"] := "Literal";
__n233["value"] := 0.;
__n233["raw"] := "0";
__n231["init"] := __n233;
__n234 := {  };
__n234["type"] := "VariableDeclarator";
__n235 := {  };
__n235["type"] := "Identifier";
__n235["name"] := "fin6";
__n234["id"] := __n235;
__n236 := {  };
__n236["type"] := "Literal";
__n236["value"] := 0.;
__n236["raw"] := "0";
__n234["init"] := __n236;
__n230 := [ __n231, __n234 ];
__n229["declarations"] := __n230;
__n229["kind"] := "var";
__n237 := {  };
__n237["type"] := "DoWhileStatement";
__n238 := {  };
__n238["type"] := "BlockStatement";
__n240 := {  };
__n240["type"] := "TryStatement";
__n241 := {  };
__n241["type"] := "BlockStatement";
__n243 := {  };
__n243["type"] := "ExpressionStatement";
__n244 := {  };
__n244["type"] := "AssignmentExpression";
__n244["operator"] := "+=";
__n245 := {  };
__n245["type"] := "Identifier";
__n245["name"] := "c6";
__n244["left"] := __n245;
__n246 := {  };
__n246["type"] := "Literal";
__n246["value"] := 1.;
__n246["raw"] := "1";
__n244["right"] := __n246;
__n243["expression"] := __n244;
__n247 := {  };
__n247["type"] := "ThrowStatement";
__n248 := {  };
__n248["type"] := "Literal";
__n248["value"] := "ex1";
__n248["raw"] := "\"ex1\"";
__n247["argument"] := __n248;
__n242 := [ __n243, __n247 ];
__n241["body"] := __n242;
__n240["block"] := __n241;
__n240["handler"] := null;
__n249 := {  };
__n249["type"] := "BlockStatement";
__n251 := {  };
__n251["type"] := "ExpressionStatement";
__n252 := {  };
__n252["type"] := "AssignmentExpression";
__n252["operator"] := "=";
__n253 := {  };
__n253["type"] := "Identifier";
__n253["name"] := "fin6";
__n252["left"] := __n253;
__n254 := {  };
__n254["type"] := "Literal";
__n254["value"] := 1.;
__n254["raw"] := "1";
__n252["right"] := __n254;
__n251["expression"] := __n252;
__n255 := {  };
__n255["type"] := "ContinueStatement";
__n255["label"] := null;
__n250 := [ __n251, __n255 ];
__n249["body"] := __n250;
__n240["finalizer"] := __n249;
__n256 := {  };
__n256["type"] := "ExpressionStatement";
__n257 := {  };
__n257["type"] := "AssignmentExpression";
__n257["operator"] := "=";
__n258 := {  };
__n258["type"] := "Identifier";
__n258["name"] := "fin6";
__n257["left"] := __n258;
__n259 := {  };
__n259["type"] := "UnaryExpression";
__n259["operator"] := "-";
__n260 := {  };
__n260["type"] := "Literal";
__n260["value"] := 1.;
__n260["raw"] := "1";
__n259["argument"] := __n260;
__n259["prefix"] := true;
__n257["right"] := __n259;
__n256["expression"] := __n257;
__n239 := [ __n240, __n256 ];
__n238["body"] := __n239;
__n237["body"] := __n238;
__n261 := {  };
__n261["type"] := "BinaryExpression";
__n261["operator"] := "<";
__n262 := {  };
__n262["type"] := "Identifier";
__n262["name"] := "c6";
__n261["left"] := __n262;
__n263 := {  };
__n263["type"] := "Literal";
__n263["value"] := 2.;
__n263["raw"] := "2";
__n261["right"] := __n263;
__n237["test"] := __n261;
__n264 := {  };
__n264["type"] := "IfStatement";
__n265 := {  };
__n265["type"] := "BinaryExpression";
__n265["operator"] := "!==";
__n266 := {  };
__n266["type"] := "Identifier";
__n266["name"] := "fin6";
__n265["left"] := __n266;
__n267 := {  };
__n267["type"] := "Literal";
__n267["value"] := 1.;
__n267["raw"] := "1";
__n265["right"] := __n267;
__n264["test"] := __n265;
__n268 := {  };
__n268["type"] := "BlockStatement";
__n270 := {  };
__n270["type"] := "ExpressionStatement";
__n271 := {  };
__n271["type"] := "CallExpression";
__n272 := {  };
__n272["type"] := "Identifier";
__n272["name"] := "$ERROR";
__n271["callee"] := __n272;
__n274 := {  };
__n274["type"] := "Literal";
__n274["value"] := "#6.1: \"finally\" block must be evaluated";
__n274["raw"] := "'#6.1: \"finally\" block must be evaluated'";
__n273 := [ __n274 ];
__n271["arguments"] := __n273;
__n270["expression"] := __n271;
__n269 := [ __n270 ];
__n268["body"] := __n269;
__n264["consequent"] := __n268;
__n264["alternate"] := null;
__n275 := {  };
__n275["type"] := "IfStatement";
__n276 := {  };
__n276["type"] := "BinaryExpression";
__n276["operator"] := "!==";
__n277 := {  };
__n277["type"] := "Identifier";
__n277["name"] := "c6";
__n276["left"] := __n277;
__n278 := {  };
__n278["type"] := "Literal";
__n278["value"] := 2.;
__n278["raw"] := "2";
__n276["right"] := __n278;
__n275["test"] := __n276;
__n279 := {  };
__n279["type"] := "BlockStatement";
__n281 := {  };
__n281["type"] := "ExpressionStatement";
__n282 := {  };
__n282["type"] := "CallExpression";
__n283 := {  };
__n283["type"] := "Identifier";
__n283["name"] := "$ERROR";
__n282["callee"] := __n283;
__n285 := {  };
__n285["type"] := "Literal";
__n285["value"] := "#6.2: \"try finally{continue}\" must work correctly";
__n285["raw"] := "'#6.2: \"try finally{continue}\" must work correctly'";
__n284 := [ __n285 ];
__n282["arguments"] := __n284;
__n281["expression"] := __n282;
__n280 := [ __n281 ];
__n279["body"] := __n280;
__n275["consequent"] := __n279;
__n275["alternate"] := null;
__n1 := [ __n2, __n10, __n39, __n50, __n58, __n89, __n100, __n108, __n138, __n149, __n157, __n182, __n193, __n198, __n218, __n229, __n237, __n264, __n275 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n286 := [ "c1", "fin", "c2", "fin2", "c3", "fin3", "c4", "fin4", "c5", "c6", "fin6" ];
__n0["variableDeclarations"] := __n286;
__n287 := [  ];
__n0["functionDeclarations"] := __n287;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}