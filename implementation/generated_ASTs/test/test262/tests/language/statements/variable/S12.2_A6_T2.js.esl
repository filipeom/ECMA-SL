function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "ExpressionStatement";
__n6 := {  };
__n6["type"] := "AssignmentExpression";
__n6["operator"] := "=";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "intry__intry__var";
__n6["left"] := __n7;
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "intry__intry__var";
__n6["right"] := __n8;
__n5["expression"] := __n6;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "AssignmentExpression";
__n10["operator"] := "=";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "intry__incatch__var";
__n10["left"] := __n11;
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "intry__incatch__var";
__n10["right"] := __n12;
__n9["expression"] := __n10;
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "AssignmentExpression";
__n14["operator"] := "=";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "incatch__intry__var";
__n14["left"] := __n15;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "incatch__intry__var";
__n14["right"] := __n16;
__n13["expression"] := __n14;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "AssignmentExpression";
__n18["operator"] := "=";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "incatch__incatch__var";
__n18["left"] := __n19;
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "incatch__incatch__var";
__n18["right"] := __n20;
__n17["expression"] := __n18;
__n4 := [ __n5, __n9, __n13, __n17 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n21 := {  };
__n21["type"] := "CatchClause";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "e";
__n21["param"] := __n22;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "$ERROR";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "#1: Variable declaration inside \"try-catch\" block is admitted";
__n29["raw"] := "'#1: Variable declaration inside \"try-catch\" block is admitted'";
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n21["body"] := __n23;
__n2["handler"] := __n21;
__n2["finalizer"] := null;
__n30 := {  };
__n30["type"] := "EmptyStatement";
__n31 := {  };
__n31["type"] := "TryStatement";
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "TryStatement";
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "VariableDeclaration";
__n39 := {  };
__n39["type"] := "VariableDeclarator";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "intry__intry__var";
__n39["id"] := __n40;
__n39["init"] := null;
__n38 := [ __n39 ];
__n37["declarations"] := __n38;
__n37["kind"] := "var";
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n34["block"] := __n35;
__n41 := {  };
__n41["type"] := "CatchClause";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "e";
__n41["param"] := __n42;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "VariableDeclaration";
__n47 := {  };
__n47["type"] := "VariableDeclarator";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "intry__incatch__var";
__n47["id"] := __n48;
__n47["init"] := null;
__n46 := [ __n47 ];
__n45["declarations"] := __n46;
__n45["kind"] := "var";
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n41["body"] := __n43;
__n34["handler"] := __n41;
__n34["finalizer"] := null;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n31["block"] := __n32;
__n49 := {  };
__n49["type"] := "CatchClause";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "e";
__n49["param"] := __n50;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "TryStatement";
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "VariableDeclaration";
__n58 := {  };
__n58["type"] := "VariableDeclarator";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "incatch__intry__var";
__n58["id"] := __n59;
__n58["init"] := null;
__n57 := [ __n58 ];
__n56["declarations"] := __n57;
__n56["kind"] := "var";
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n53["block"] := __n54;
__n60 := {  };
__n60["type"] := "CatchClause";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "e";
__n60["param"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "VariableDeclaration";
__n66 := {  };
__n66["type"] := "VariableDeclarator";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "incatch__incatch__var";
__n66["id"] := __n67;
__n66["init"] := null;
__n65 := [ __n66 ];
__n64["declarations"] := __n65;
__n64["kind"] := "var";
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n60["body"] := __n62;
__n53["handler"] := __n60;
__n53["finalizer"] := null;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n49["body"] := __n51;
__n31["handler"] := __n49;
__n31["finalizer"] := null;
__n68 := {  };
__n68["type"] := "EmptyStatement";
__n1 := [ __n2, __n30, __n31, __n68 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n69 := [ "intry__intry__var", "intry__incatch__var", "incatch__intry__var", "incatch__incatch__var" ];
__n0["variableDeclarations"] := __n69;
__n70 := [  ];
__n0["functionDeclarations"] := __n70;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}