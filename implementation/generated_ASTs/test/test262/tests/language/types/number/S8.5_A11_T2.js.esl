function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "p_zero";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "UnaryExpression";
__n6["operator"] := "+";
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 0.;
__n7["raw"] := "0";
__n6["argument"] := __n7;
__n6["prefix"] := true;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "n_zero";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "UnaryExpression";
__n12["operator"] := "-";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 0.;
__n13["raw"] := "0";
__n12["argument"] := __n13;
__n12["prefix"] := true;
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n14 := {  };
__n14["type"] := "IfStatement";
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "!==";
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "==";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "p_zero";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "n_zero";
__n16["right"] := __n18;
__n15["left"] := __n16;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := true;
__n19["raw"] := "true";
__n15["right"] := __n19;
__n14["test"] := __n15;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "$ERROR";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "#1: var p_zero=+0; var n_zero=-0; p_zero != n_zero";
__n26["raw"] := "'#1: var p_zero=+0; var n_zero=-0; p_zero != n_zero'";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n14["consequent"] := __n20;
__n14["alternate"] := null;
__n27 := {  };
__n27["type"] := "IfStatement";
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "!==";
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "==";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "n_zero";
__n29["left"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 0.;
__n31["raw"] := "0";
__n29["right"] := __n31;
__n28["left"] := __n29;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := true;
__n32["raw"] := "true";
__n28["right"] := __n32;
__n27["test"] := __n28;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "$ERROR";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "#2: var p_zero=+0; var n_zero=-0; n_zero == 0";
__n39["raw"] := "'#2: var p_zero=+0; var n_zero=-0; n_zero == 0'";
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["expression"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n27["consequent"] := __n33;
__n27["alternate"] := null;
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "!==";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "==";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "p_zero";
__n42["left"] := __n43;
__n44 := {  };
__n44["type"] := "UnaryExpression";
__n44["operator"] := "-";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 0.;
__n45["raw"] := "0";
__n44["argument"] := __n45;
__n44["prefix"] := true;
__n42["right"] := __n44;
__n41["left"] := __n42;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := true;
__n46["raw"] := "true";
__n41["right"] := __n46;
__n40["test"] := __n41;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#3: var p_zero=+0; var n_zero=-0; p_zero == -0";
__n53["raw"] := "'#3: var p_zero=+0; var n_zero=-0; p_zero == -0'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n40["consequent"] := __n47;
__n40["alternate"] := null;
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "===";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "p_zero";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 0.;
__n58["raw"] := "0";
__n56["right"] := __n58;
__n55["left"] := __n56;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := true;
__n59["raw"] := "true";
__n55["right"] := __n59;
__n54["test"] := __n55;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "$ERROR";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "#4: var p_zero=+0; var n_zero=-0; p_zero === 0";
__n66["raw"] := "'#4: var p_zero=+0; var n_zero=-0; p_zero === 0'";
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n54["consequent"] := __n60;
__n54["alternate"] := null;
__n67 := {  };
__n67["type"] := "IfStatement";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "!==";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "===";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "n_zero";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "UnaryExpression";
__n71["operator"] := "-";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 0.;
__n72["raw"] := "0";
__n71["argument"] := __n72;
__n71["prefix"] := true;
__n69["right"] := __n71;
__n68["left"] := __n69;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := true;
__n73["raw"] := "true";
__n68["right"] := __n73;
__n67["test"] := __n68;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "$ERROR";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "#5: var p_zero=+0; var n_zero=-0; n_zero === -0";
__n80["raw"] := "'#5: var p_zero=+0; var n_zero=-0; n_zero === -0'";
__n79 := [ __n80 ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n67["consequent"] := __n74;
__n67["alternate"] := null;
__n1 := [ __n2, __n8, __n14, __n27, __n40, __n54, __n67 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n81 := [ "p_zero", "n_zero" ];
__n0["variableDeclarations"] := __n81;
__n82 := [  ];
__n0["functionDeclarations"] := __n82;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}