function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "*";
__n5 := {  };
__n5["type"] := "UnaryExpression";
__n5["operator"] := "-";
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 1e+308;
__n6["raw"] := "1e+308";
__n5["argument"] := __n6;
__n5["prefix"] := true;
__n4["left"] := __n5;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 3.;
__n7["raw"] := "3";
__n4["right"] := __n7;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "UnaryExpression";
__n8["operator"] := "-";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Infinity";
__n8["argument"] := __n9;
__n8["prefix"] := true;
__n3["right"] := __n8;
__n2["test"] := __n3;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "$ERROR";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "+";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "#1: -1e+308*3 === Infinity. Actual: ";
__n17["raw"] := "'#1: -1e+308*3 === Infinity. Actual: '";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "*";
__n19 := {  };
__n19["type"] := "UnaryExpression";
__n19["operator"] := "-";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 1e+308;
__n20["raw"] := "1e+308";
__n19["argument"] := __n20;
__n19["prefix"] := true;
__n18["left"] := __n19;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 3.;
__n21["raw"] := "3";
__n18["right"] := __n21;
__n16["right"] := __n18;
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["expression"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n2["consequent"] := __n10;
__n2["alternate"] := null;
__n22 := {  };
__n22["type"] := "IfStatement";
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "!==";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "*";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "*";
__n26 := {  };
__n26["type"] := "UnaryExpression";
__n26["operator"] := "-";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 1.;
__n27["raw"] := "1";
__n26["argument"] := __n27;
__n26["prefix"] := true;
__n25["left"] := __n26;
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Math";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "pow";
__n31["raw"] := "\"pow\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 2.;
__n33["raw"] := "2";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 53.;
__n34["raw"] := "53";
__n32 := [ __n33, __n34 ];
__n28["arguments"] := __n32;
__n25["right"] := __n28;
__n24["left"] := __n25;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Math";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "pow";
__n38["raw"] := "\"pow\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 2.;
__n40["raw"] := "2";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 971.;
__n41["raw"] := "971";
__n39 := [ __n40, __n41 ];
__n35["arguments"] := __n39;
__n24["right"] := __n35;
__n23["left"] := __n24;
__n42 := {  };
__n42["type"] := "UnaryExpression";
__n42["operator"] := "-";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Infinity";
__n42["argument"] := __n43;
__n42["prefix"] := true;
__n23["right"] := __n42;
__n22["test"] := __n23;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$ERROR";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "+";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "#2: (-1*(Math.pow(2,53))*(Math.pow(2,971))) === Infinity. Actual: ";
__n51["raw"] := "'#2: (-1*(Math.pow(2,53))*(Math.pow(2,971))) === Infinity. Actual: '";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "*";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "*";
__n54 := {  };
__n54["type"] := "UnaryExpression";
__n54["operator"] := "-";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 1.;
__n55["raw"] := "1";
__n54["argument"] := __n55;
__n54["prefix"] := true;
__n53["left"] := __n54;
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "Math";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "pow";
__n59["raw"] := "\"pow\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 2.;
__n61["raw"] := "2";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 53.;
__n62["raw"] := "53";
__n60 := [ __n61, __n62 ];
__n56["arguments"] := __n60;
__n53["right"] := __n56;
__n52["left"] := __n53;
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Math";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "pow";
__n66["raw"] := "\"pow\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 2.;
__n68["raw"] := "2";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 971.;
__n69["raw"] := "971";
__n67 := [ __n68, __n69 ];
__n63["arguments"] := __n67;
__n52["right"] := __n63;
__n50["right"] := __n52;
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n22["consequent"] := __n44;
__n22["alternate"] := null;
__n1 := [ __n2, __n22 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n70 := [  ];
__n0["variableDeclarations"] := __n70;
__n71 := [  ];
__n0["functionDeclarations"] := __n71;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}