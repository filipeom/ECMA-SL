function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "bar";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := true;
__n10["raw"] := "true";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n11 := {  };
__n11["type"] := "Property";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "some";
__n11["key"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 1.;
__n13["raw"] := "1";
__n11["value"] := __n13;
__n11["computed"] := false;
__n11["kind"] := "init";
__n11["shorthand"] := false;
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "foo";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "a";
__n16["raw"] := "\"a\"";
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n7 := [ __n8, __n11, __n14 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "count";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 0.;
__n21["raw"] := "0";
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n22 := {  };
__n22["type"] := "ForInStatement";
__n23 := {  };
__n23["type"] := "VariableDeclaration";
__n25 := {  };
__n25["type"] := "VariableDeclarator";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "property";
__n25["id"] := __n26;
__n25["init"] := null;
__n24 := [ __n25 ];
__n23["declarations"] := __n24;
__n23["kind"] := "var";
__n22["left"] := __n23;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "obj";
__n22["right"] := __n27;
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "UpdateExpression";
__n29["operator"] := "++";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "count";
__n29["argument"] := __n30;
__n29["prefix"] := false;
__n28["expression"] := __n29;
__n22["body"] := __n28;
__n22["each"] := false;
__n31 := {  };
__n31["type"] := "IfStatement";
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "!==";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "count";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 3.;
__n34["raw"] := "3";
__n32["right"] := __n34;
__n31["test"] := __n32;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#1: obj = {bar:true, some:1, foo:\"a\"}; count=0; for (property in obj) count++; count === 3. Actual: ";
__n42["raw"] := "'#1: obj = {bar:true, some:1, foo:\"a\"}; count=0; for (property in obj) count++; count === 3. Actual: '";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "count";
__n41["right"] := __n43;
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n31["consequent"] := __n35;
__n31["alternate"] := null;
__n44 := {  };
__n44["type"] := "VariableDeclaration";
__n46 := {  };
__n46["type"] := "VariableDeclarator";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "obj_";
__n46["id"] := __n47;
__n48 := {  };
__n48["type"] := "ObjectExpression";
__n50 := {  };
__n50["type"] := "Property";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "bar";
__n50["key"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := true;
__n52["raw"] := "true";
__n50["value"] := __n52;
__n50["computed"] := false;
__n50["kind"] := "init";
__n50["shorthand"] := false;
__n49 := [ __n50 ];
__n48["properties"] := __n49;
__n46["init"] := __n48;
__n45 := [ __n46 ];
__n44["declarations"] := __n45;
__n44["kind"] := "var";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "AssignmentExpression";
__n54["operator"] := "=";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "obj_";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "some";
__n57["raw"] := "\"some\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["left"] := __n55;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 1.;
__n58["raw"] := "1";
__n54["right"] := __n58;
__n53["expression"] := __n54;
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "AssignmentExpression";
__n60["operator"] := "=";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "obj_";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "foo";
__n63["raw"] := "\"foo\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["left"] := __n61;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "a";
__n64["raw"] := "\"a\"";
__n60["right"] := __n64;
__n59["expression"] := __n60;
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "AssignmentExpression";
__n66["operator"] := "=";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "count";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 0.;
__n68["raw"] := "0";
__n66["right"] := __n68;
__n65["expression"] := __n66;
__n69 := {  };
__n69["type"] := "ForInStatement";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "property";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "obj_";
__n69["right"] := __n71;
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "UpdateExpression";
__n73["operator"] := "++";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "count";
__n73["argument"] := __n74;
__n73["prefix"] := false;
__n72["expression"] := __n73;
__n69["body"] := __n72;
__n69["each"] := false;
__n75 := {  };
__n75["type"] := "IfStatement";
__n76 := {  };
__n76["type"] := "BinaryExpression";
__n76["operator"] := "!==";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "count";
__n76["left"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 3.;
__n78["raw"] := "3";
__n76["right"] := __n78;
__n75["test"] := __n76;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "$ERROR";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "+";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "#2: obj_ = {bar:true}; obj_.some = 1; obj_.foo = \"a\"; count=0; for (property in obj_) count++; count === 3. Actual: ";
__n86["raw"] := "'#2: obj_ = {bar:true}; obj_.some = 1; obj_.foo = \"a\"; count=0; for (property in obj_) count++; count === 3. Actual: '";
__n85["left"] := __n86;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "count";
__n85["right"] := __n87;
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n75["consequent"] := __n79;
__n75["alternate"] := null;
__n88 := {  };
__n88["type"] := "VariableDeclaration";
__n90 := {  };
__n90["type"] := "VariableDeclarator";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "obj__";
__n90["id"] := __n91;
__n92 := {  };
__n92["type"] := "NewExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "Object";
__n92["callee"] := __n93;
__n94 := [  ];
__n92["arguments"] := __n94;
__n90["init"] := __n92;
__n89 := [ __n90 ];
__n88["declarations"] := __n89;
__n88["kind"] := "var";
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "AssignmentExpression";
__n96["operator"] := "=";
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "obj__";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "bar";
__n99["raw"] := "\"bar\"";
__n97["property"] := __n99;
__n97["computed"] := true;
__n96["left"] := __n97;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := true;
__n100["raw"] := "true";
__n96["right"] := __n100;
__n95["expression"] := __n96;
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "AssignmentExpression";
__n102["operator"] := "=";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "obj__";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "some";
__n105["raw"] := "\"some\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n102["left"] := __n103;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 1.;
__n106["raw"] := "1";
__n102["right"] := __n106;
__n101["expression"] := __n102;
__n107 := {  };
__n107["type"] := "ExpressionStatement";
__n108 := {  };
__n108["type"] := "AssignmentExpression";
__n108["operator"] := "=";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "obj__";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "foo";
__n111["raw"] := "\"foo\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n108["left"] := __n109;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "a";
__n112["raw"] := "\"a\"";
__n108["right"] := __n112;
__n107["expression"] := __n108;
__n113 := {  };
__n113["type"] := "ExpressionStatement";
__n114 := {  };
__n114["type"] := "AssignmentExpression";
__n114["operator"] := "=";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "count";
__n114["left"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := 0.;
__n116["raw"] := "0";
__n114["right"] := __n116;
__n113["expression"] := __n114;
__n117 := {  };
__n117["type"] := "ForInStatement";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "property";
__n117["left"] := __n118;
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "obj__";
__n117["right"] := __n119;
__n120 := {  };
__n120["type"] := "ExpressionStatement";
__n121 := {  };
__n121["type"] := "UpdateExpression";
__n121["operator"] := "++";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "count";
__n121["argument"] := __n122;
__n121["prefix"] := false;
__n120["expression"] := __n121;
__n117["body"] := __n120;
__n117["each"] := false;
__n123 := {  };
__n123["type"] := "IfStatement";
__n124 := {  };
__n124["type"] := "BinaryExpression";
__n124["operator"] := "!==";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "count";
__n124["left"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := 3.;
__n126["raw"] := "3";
__n124["right"] := __n126;
__n123["test"] := __n124;
__n127 := {  };
__n127["type"] := "BlockStatement";
__n129 := {  };
__n129["type"] := "ExpressionStatement";
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "$ERROR";
__n130["callee"] := __n131;
__n133 := {  };
__n133["type"] := "BinaryExpression";
__n133["operator"] := "+";
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "#3: obj__ = new Object(); obj__.bar = true; obj__.some = 1; obj__.foo = \"a\"; for (property in obj__)  count++; count === 3. Actual: ";
__n134["raw"] := "'#3: obj__ = new Object(); obj__.bar = true; obj__.some = 1; obj__.foo = \"a\"; for (property in obj__)  count++; count === 3. Actual: '";
__n133["left"] := __n134;
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "count";
__n133["right"] := __n135;
__n132 := [ __n133 ];
__n130["arguments"] := __n132;
__n129["expression"] := __n130;
__n128 := [ __n129 ];
__n127["body"] := __n128;
__n123["consequent"] := __n127;
__n123["alternate"] := null;
__n1 := [ __n2, __n17, __n22, __n31, __n44, __n53, __n59, __n65, __n69, __n75, __n88, __n95, __n101, __n107, __n113, __n117, __n123 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n136 := [ "obj", "count", "property", "obj_", "obj__" ];
__n0["variableDeclarations"] := __n136;
__n137 := [  ];
__n0["functionDeclarations"] := __n137;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}