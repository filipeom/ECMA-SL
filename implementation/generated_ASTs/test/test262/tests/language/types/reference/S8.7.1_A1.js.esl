function buildAST (ignored_arg) {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "ThisExpression";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "y";
__n6["raw"] := "\"y\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 1.;
__n7["raw"] := "1";
__n3["right"] := __n7;
__n2["expression"] := __n3;
__n8 := {  };
__n8["type"] := "IfStatement";
__n9 := {  };
__n9["type"] := "BinaryExpression";
__n9["operator"] := "!==";
__n10 := {  };
__n10["type"] := "UnaryExpression";
__n10["operator"] := "delete";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "ThisExpression";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "y";
__n13["raw"] := "\"y\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["argument"] := __n11;
__n10["prefix"] := true;
__n9["left"] := __n10;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := true;
__n14["raw"] := "true";
__n9["right"] := __n14;
__n8["test"] := __n9;
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "$ERROR";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "+";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "#1: this.y = 1; (delete this.y) === true. Actual: ";
__n22["raw"] := "'#1: this.y = 1; (delete this.y) === true. Actual: '";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "UnaryExpression";
__n23["operator"] := "delete";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "ThisExpression";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "y";
__n26["raw"] := "\"y\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["argument"] := __n24;
__n23["prefix"] := true;
__n21["right"] := __n23;
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n17["expression"] := __n18;
__n16 := [ __n17 ];
__n15["body"] := __n16;
__n8["consequent"] := __n15;
__n8["alternate"] := null;
__n27 := {  };
__n27["type"] := "EmptyStatement";
__n28 := {  };
__n28["type"] := "IfStatement";
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "!==";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "ThisExpression";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "y";
__n32["raw"] := "\"y\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["left"] := __n30;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "undefined";
__n29["right"] := __n33;
__n28["test"] := __n29;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "+";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "#2: this.y = 1; (delete this.y) === true; this.y === undefined. Actual: ";
__n41["raw"] := "'#2: this.y = 1; (delete this.y) === true; this.y === undefined. Actual: '";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "ThisExpression";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "y";
__n44["raw"] := "\"y\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n40["right"] := __n42;
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n28["consequent"] := __n34;
__n28["alternate"] := null;
__n1 := [ __n2, __n8, __n27, __n28 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n45 := [  ];
__n0["variableDeclarations"] := __n45;
__n46 := [  ];
__n0["functionDeclarations"] := __n46;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}