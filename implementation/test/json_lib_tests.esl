
import "ES5_interpreter/ES5_Reference_Interpreter.esl";


function testStringify1(global) {
  O1 := ObjectConstructor(|global|, 'null, false, [null]);
  refA := newPropertyReference(O1, "a", false);
  descA := newDataPropertyDescriptorFull(1., true, true, true);
  PutValue(refA, descA);

  O2 := ObjectConstructor(|global|, 'null, false, [null]);
  refC := newPropertyReference(O2, "c", false);
  descC := newDataPropertyDescriptorFull(2., true, true, true);
  PutValue(refC, descC);

  refB := newPropertyReference(O1, "b", false);
  descB := newDataPropertyDescriptorFull(O2, true, true, true);
  PutValue(refB, descB);

  str := jsonStringify(null, null, false, [O1, 'undefined, 'undefined]);

  return str = "{\"a\":1,\"b\":{\"c\":2}}"
};

function runTests(global, tests) {
  tests_len := l_len tests;
  i := 0;
  while (i < tests_len) {
    test_name := l_nth(tests, i);
    res := {test_name}(global);
    if (res = true) {
      print s_concat(["TEST '", test_name, "': PASS"])
    } else {
      print s_concat(["TEST '", test_name, "': FAIL"])
    };
    i := i + 1
  };
  return null
};

function main() {
  globalObject := initGlobalObject(false);

  |global| := globalObject;

  tests := ["testStringify1"];

  runTests(globalObject, tests);

  return null
}

