function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "arr";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ArrayExpression";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 1.;
__n11["raw"] := "1";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 2.;
__n12["raw"] := "2";
__n9 := [ __n10, __n11, __n12 ];
__n8["elements"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Object";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "defineProperty";
__n17["raw"] := "\"defineProperty\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "arr";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "2";
__n20["raw"] := "\"2\"";
__n21 := {  };
__n21["type"] := "ObjectExpression";
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "get";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "FunctionExpression";
__n25["id"] := null;
__n26 := [  ];
__n25["params"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ReturnStatement";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "unconfigurable";
__n30["raw"] := "\"unconfigurable\"";
__n29["argument"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n31 := [  ];
__n27["variableDeclarations"] := __n31;
__n32 := [  ];
__n27["functionDeclarations"] := __n32;
__n27["codeType"] := "function";
__n27["strict"] := false;
__n25["body"] := __n27;
__n25["generator"] := false;
__n25["async"] := false;
__n25["expression"] := false;
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n33 := {  };
__n33["type"] := "Property";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "configurable";
__n33["key"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := false;
__n35["raw"] := "false";
__n33["value"] := __n35;
__n33["computed"] := false;
__n33["kind"] := "init";
__n33["shorthand"] := false;
__n22 := [ __n23, __n33 ];
__n21["properties"] := __n22;
__n18 := [ __n19, __n20, __n21 ];
__n14["arguments"] := __n18;
__n13["expression"] := __n14;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "Object";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "defineProperty";
__n40["raw"] := "\"defineProperty\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "arr";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "1";
__n43["raw"] := "\"1\"";
__n44 := {  };
__n44["type"] := "ObjectExpression";
__n46 := {  };
__n46["type"] := "Property";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "get";
__n46["key"] := __n47;
__n48 := {  };
__n48["type"] := "FunctionExpression";
__n48["id"] := null;
__n49 := [  ];
__n48["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "AssignmentExpression";
__n53["operator"] := "=";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "arr";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "length";
__n56["raw"] := "\"length\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["left"] := __n54;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 2.;
__n57["raw"] := "2";
__n53["right"] := __n57;
__n52["expression"] := __n53;
__n58 := {  };
__n58["type"] := "ReturnStatement";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 1.;
__n59["raw"] := "1";
__n58["argument"] := __n59;
__n51 := [ __n52, __n58 ];
__n50["body"] := __n51;
__n60 := [  ];
__n50["variableDeclarations"] := __n60;
__n61 := [  ];
__n50["functionDeclarations"] := __n61;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n48["body"] := __n50;
__n48["generator"] := false;
__n48["async"] := false;
__n48["expression"] := false;
__n46["value"] := __n48;
__n46["computed"] := false;
__n46["kind"] := "init";
__n46["shorthand"] := false;
__n62 := {  };
__n62["type"] := "Property";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "configurable";
__n62["key"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := true;
__n64["raw"] := "true";
__n62["value"] := __n64;
__n62["computed"] := false;
__n62["kind"] := "init";
__n62["shorthand"] := false;
__n45 := [ __n46, __n62 ];
__n44["properties"] := __n45;
__n41 := [ __n42, __n43, __n44 ];
__n37["arguments"] := __n41;
__n36["expression"] := __n37;
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "assert";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "sameValue";
__n69["raw"] := "\"sameValue\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["callee"] := __n67;
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "arr";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "every";
__n74["raw"] := "\"every\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "callbackfn";
__n75 := [ __n76 ];
__n71["arguments"] := __n75;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := false;
__n77["raw"] := "false";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "arr.every(callbackfn)";
__n78["raw"] := "'arr.every(callbackfn)'";
__n70 := [ __n71, __n77, __n78 ];
__n66["arguments"] := __n70;
__n65["expression"] := __n66;
__n1 := [ __n2, __n4, __n13, __n36, __n65 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n79 := [ "arr" ];
__n0["variableDeclarations"] := __n79;
__n81 := {  };
__n81["type"] := "FunctionDeclaration";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "callbackfn";
__n81["id"] := __n82;
__n83 := [ "val", "idx", "obj" ];
__n81["params"] := __n83;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "IfStatement";
__n87 := {  };
__n87["type"] := "LogicalExpression";
__n87["operator"] := "&&";
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "===";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "idx";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 2.;
__n90["raw"] := "2";
__n88["right"] := __n90;
__n87["left"] := __n88;
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "===";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "val";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "unconfigurable";
__n93["raw"] := "\"unconfigurable\"";
__n91["right"] := __n93;
__n87["right"] := __n91;
__n86["test"] := __n87;
__n94 := {  };
__n94["type"] := "BlockStatement";
__n96 := {  };
__n96["type"] := "ReturnStatement";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := false;
__n97["raw"] := "false";
__n96["argument"] := __n97;
__n95 := [ __n96 ];
__n94["body"] := __n95;
__n86["consequent"] := __n94;
__n98 := {  };
__n98["type"] := "BlockStatement";
__n100 := {  };
__n100["type"] := "ReturnStatement";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := true;
__n101["raw"] := "true";
__n100["argument"] := __n101;
__n99 := [ __n100 ];
__n98["body"] := __n99;
__n86["alternate"] := __n98;
__n85 := [ __n86 ];
__n84["body"] := __n85;
__n102 := [  ];
__n84["variableDeclarations"] := __n102;
__n103 := [  ];
__n84["functionDeclarations"] := __n103;
__n84["codeType"] := "function";
__n84["strict"] := false;
__n81["body"] := __n84;
__n81["generator"] := false;
__n81["async"] := false;
__n81["expression"] := false;
__n80 := [ __n81 ];
__n0["functionDeclarations"] := __n80;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}