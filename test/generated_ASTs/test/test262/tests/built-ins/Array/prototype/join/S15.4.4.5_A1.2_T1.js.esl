function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Array";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 2.;
__n11["raw"] := "2";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 3.;
__n12["raw"] := "3";
__n8 := [ __n9, __n10, __n11, __n12 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n13 := {  };
__n13["type"] := "IfStatement";
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "!==";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "x";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "join";
__n18["raw"] := "\"join\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n19 := [  ];
__n15["arguments"] := __n19;
__n14["left"] := __n15;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "0,1,2,3";
__n20["raw"] := "\"0,1,2,3\"";
__n14["right"] := __n20;
__n13["test"] := __n14;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "$ERROR";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "+";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "#1: x = new Array(0,1,2,3); x.join() === \"0,1,2,3\". Actual: ";
__n28["raw"] := "'#1: x = new Array(0,1,2,3); x.join() === \"0,1,2,3\". Actual: '";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "x";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "join";
__n32["raw"] := "\"join\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n33 := [  ];
__n29["arguments"] := __n33;
__n27["right"] := __n29;
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n13["consequent"] := __n21;
__n13["alternate"] := null;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "AssignmentExpression";
__n35["operator"] := "=";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "x";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "ArrayExpression";
__n38 := [  ];
__n37["elements"] := __n38;
__n35["right"] := __n37;
__n34["expression"] := __n35;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "AssignmentExpression";
__n40["operator"] := "=";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n41["computed"] := true;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "x";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 0.;
__n43["raw"] := "0";
__n41["property"] := __n43;
__n40["left"] := __n41;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 0.;
__n44["raw"] := "0";
__n40["right"] := __n44;
__n39["expression"] := __n40;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "AssignmentExpression";
__n46["operator"] := "=";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n47["computed"] := true;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "x";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 3.;
__n49["raw"] := "3";
__n47["property"] := __n49;
__n46["left"] := __n47;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 3.;
__n50["raw"] := "3";
__n46["right"] := __n50;
__n45["expression"] := __n46;
__n51 := {  };
__n51["type"] := "IfStatement";
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "!==";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "x";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "join";
__n56["raw"] := "\"join\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["callee"] := __n54;
__n57 := [  ];
__n53["arguments"] := __n57;
__n52["left"] := __n53;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "0,,,3";
__n58["raw"] := "\"0,,,3\"";
__n52["right"] := __n58;
__n51["test"] := __n52;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "+";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "#2: x = []; x[0] = 0; x[3] = 3; x.join() === \"0,,,3\". Actual: ";
__n66["raw"] := "'#2: x = []; x[0] = 0; x[3] = 3; x.join() === \"0,,,3\". Actual: '";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "x";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "join";
__n70["raw"] := "\"join\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n71 := [  ];
__n67["arguments"] := __n71;
__n65["right"] := __n67;
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n51["consequent"] := __n59;
__n51["alternate"] := null;
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "AssignmentExpression";
__n73["operator"] := "=";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "x";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "ArrayExpression";
__n76 := [  ];
__n75["elements"] := __n76;
__n73["right"] := __n75;
__n72["expression"] := __n73;
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "AssignmentExpression";
__n78["operator"] := "=";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n79["computed"] := true;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "x";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 0.;
__n81["raw"] := "0";
__n79["property"] := __n81;
__n78["left"] := __n79;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 0.;
__n82["raw"] := "0";
__n78["right"] := __n82;
__n77["expression"] := __n78;
__n83 := {  };
__n83["type"] := "IfStatement";
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "!==";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "x";
__n86["object"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "join";
__n88["raw"] := "\"join\"";
__n86["property"] := __n88;
__n86["computed"] := true;
__n85["callee"] := __n86;
__n89 := [  ];
__n85["arguments"] := __n89;
__n84["left"] := __n85;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "0";
__n90["raw"] := "\"0\"";
__n84["right"] := __n90;
__n83["test"] := __n84;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "#3: x = []; x[0] = 0; x.join() === \"0\". Actual: ";
__n98["raw"] := "'#3: x = []; x[0] = 0; x.join() === \"0\". Actual: '";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "x";
__n100["object"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "join";
__n102["raw"] := "\"join\"";
__n100["property"] := __n102;
__n100["computed"] := true;
__n99["callee"] := __n100;
__n103 := [  ];
__n99["arguments"] := __n103;
__n97["right"] := __n99;
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n83["consequent"] := __n91;
__n83["alternate"] := null;
__n1 := [ __n2, __n13, __n34, __n39, __n45, __n51, __n72, __n77, __n83 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n104 := [ "x" ];
__n0["variableDeclarations"] := __n104;
__n105 := [  ];
__n0["functionDeclarations"] := __n105;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}