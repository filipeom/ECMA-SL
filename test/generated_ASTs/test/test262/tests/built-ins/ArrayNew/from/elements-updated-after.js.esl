function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "array";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 127.;
__n8["raw"] := "127";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 4.;
__n9["raw"] := "4";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 8.;
__n10["raw"] := "8";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 16.;
__n11["raw"] := "16";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 32.;
__n12["raw"] := "32";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 64.;
__n13["raw"] := "64";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 128.;
__n14["raw"] := "128";
__n7 := [ __n8, __n9, __n10, __n11, __n12, __n13, __n14 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "arrayIndex";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "UnaryExpression";
__n19["operator"] := "-";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 1.;
__n20["raw"] := "1";
__n19["argument"] := __n20;
__n19["prefix"] := true;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "mapFn";
__n21["expression"] := __n22;
__n23 := {  };
__n23["type"] := "VariableDeclaration";
__n25 := {  };
__n25["type"] := "VariableDeclarator";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "a";
__n25["id"] := __n26;
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Array";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "from";
__n30["raw"] := "\"from\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "array";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "mapFn";
__n31 := [ __n32, __n33 ];
__n27["arguments"] := __n31;
__n25["init"] := __n27;
__n24 := [ __n25 ];
__n23["declarations"] := __n24;
__n23["kind"] := "var";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "assert";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "sameValue";
__n38["raw"] := "\"sameValue\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "a";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "length";
__n42["raw"] := "\"length\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "array";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "length";
__n45["raw"] := "\"length\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "The value of a.length is expected to equal the value of array.length";
__n46["raw"] := "'The value of a.length is expected to equal the value of array.length'";
__n39 := [ __n40, __n43, __n46 ];
__n35["arguments"] := __n39;
__n34["expression"] := __n35;
__n47 := {  };
__n47["type"] := "ForStatement";
__n48 := {  };
__n48["type"] := "VariableDeclaration";
__n50 := {  };
__n50["type"] := "VariableDeclarator";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "j";
__n50["id"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 0.;
__n52["raw"] := "0";
__n50["init"] := __n52;
__n49 := [ __n50 ];
__n48["declarations"] := __n49;
__n48["kind"] := "var";
__n47["init"] := __n48;
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "<";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "j";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "a";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "length";
__n57["raw"] := "\"length\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n53["right"] := __n55;
__n47["test"] := __n53;
__n58 := {  };
__n58["type"] := "UpdateExpression";
__n58["operator"] := "++";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "j";
__n58["argument"] := __n59;
__n58["prefix"] := false;
__n47["update"] := __n58;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "assert";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "sameValue";
__n66["raw"] := "\"sameValue\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n68 := {  };
__n68["type"] := "MemberExpression";
__n68["computed"] := true;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "a";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "j";
__n68["property"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := 127.;
__n71["raw"] := "127";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "The value of a[j] is expected to be 127";
__n72["raw"] := "'The value of a[j] is expected to be 127'";
__n67 := [ __n68, __n71, __n72 ];
__n63["arguments"] := __n67;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n47["body"] := __n60;
__n1 := [ __n2, __n15, __n21, __n23, __n34, __n47 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n73 := [ "array", "arrayIndex", "a", "j" ];
__n0["variableDeclarations"] := __n73;
__n75 := {  };
__n75["type"] := "FunctionDeclaration";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "mapFn";
__n75["id"] := __n76;
__n77 := [ "value", "index" ];
__n75["params"] := __n77;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "UpdateExpression";
__n81["operator"] := "++";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "arrayIndex";
__n81["argument"] := __n82;
__n81["prefix"] := false;
__n80["expression"] := __n81;
__n83 := {  };
__n83["type"] := "IfStatement";
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "<";
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "+";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "index";
__n85["left"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 1.;
__n87["raw"] := "1";
__n85["right"] := __n87;
__n84["left"] := __n85;
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "array";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "length";
__n90["raw"] := "\"length\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n84["right"] := __n88;
__n83["test"] := __n84;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "AssignmentExpression";
__n94["operator"] := "=";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n95["computed"] := true;
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "array";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "index";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 1.;
__n99["raw"] := "1";
__n97["right"] := __n99;
__n95["property"] := __n97;
__n94["left"] := __n95;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := 127.;
__n100["raw"] := "127";
__n94["right"] := __n100;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n83["consequent"] := __n91;
__n83["alternate"] := null;
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "assert";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "sameValue";
__n105["raw"] := "\"sameValue\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n102["callee"] := __n103;
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "value";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := 127.;
__n108["raw"] := "127";
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "The value of value is expected to be 127";
__n109["raw"] := "'The value of value is expected to be 127'";
__n106 := [ __n107, __n108, __n109 ];
__n102["arguments"] := __n106;
__n101["expression"] := __n102;
__n110 := {  };
__n110["type"] := "ExpressionStatement";
__n111 := {  };
__n111["type"] := "CallExpression";
__n112 := {  };
__n112["type"] := "MemberExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "assert";
__n112["object"] := __n113;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "sameValue";
__n114["raw"] := "\"sameValue\"";
__n112["property"] := __n114;
__n112["computed"] := true;
__n111["callee"] := __n112;
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "index";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "arrayIndex";
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "The value of index is expected to equal the value of arrayIndex";
__n118["raw"] := "'The value of index is expected to equal the value of arrayIndex'";
__n115 := [ __n116, __n117, __n118 ];
__n111["arguments"] := __n115;
__n110["expression"] := __n111;
__n119 := {  };
__n119["type"] := "ReturnStatement";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "value";
__n119["argument"] := __n120;
__n79 := [ __n80, __n83, __n101, __n110, __n119 ];
__n78["body"] := __n79;
__n121 := [  ];
__n78["variableDeclarations"] := __n121;
__n122 := [  ];
__n78["functionDeclarations"] := __n122;
__n78["codeType"] := "function";
__n78["strict"] := false;
__n75["body"] := __n78;
__n75["generator"] := false;
__n75["async"] := false;
__n75["expression"] := false;
__n74 := [ __n75 ];
__n0["functionDeclarations"] := __n74;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}