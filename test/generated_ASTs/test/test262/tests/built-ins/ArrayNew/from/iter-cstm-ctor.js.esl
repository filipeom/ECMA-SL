function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "thisVal";
__n4["id"] := __n5;
__n4["init"] := null;
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "args";
__n6["id"] := __n7;
__n6["init"] := null;
__n3 := [ __n4, __n6 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "callCount";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 0.;
__n12["raw"] := "0";
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "C";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "FunctionExpression";
__n17["id"] := null;
__n18 := [  ];
__n17["params"] := __n18;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "AssignmentExpression";
__n22["operator"] := "=";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "thisVal";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "ThisExpression";
__n22["right"] := __n24;
__n21["expression"] := __n22;
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "AssignmentExpression";
__n26["operator"] := "=";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "args";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "arguments";
__n26["right"] := __n28;
__n25["expression"] := __n26;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "AssignmentExpression";
__n30["operator"] := "+=";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "callCount";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 1.;
__n32["raw"] := "1";
__n30["right"] := __n32;
__n29["expression"] := __n30;
__n20 := [ __n21, __n25, __n29 ];
__n19["body"] := __n20;
__n33 := [  ];
__n19["variableDeclarations"] := __n33;
__n34 := [  ];
__n19["functionDeclarations"] := __n34;
__n19["codeType"] := "function";
__n19["strict"] := false;
__n17["body"] := __n19;
__n17["generator"] := false;
__n17["async"] := false;
__n17["expression"] := false;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n35 := {  };
__n35["type"] := "VariableDeclaration";
__n37 := {  };
__n37["type"] := "VariableDeclarator";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "result";
__n37["id"] := __n38;
__n37["init"] := null;
__n36 := [ __n37 ];
__n35["declarations"] := __n36;
__n35["kind"] := "var";
__n39 := {  };
__n39["type"] := "VariableDeclaration";
__n41 := {  };
__n41["type"] := "VariableDeclarator";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "items";
__n41["id"] := __n42;
__n43 := {  };
__n43["type"] := "ObjectExpression";
__n44 := [  ];
__n43["properties"] := __n44;
__n41["init"] := __n43;
__n40 := [ __n41 ];
__n39["declarations"] := __n40;
__n39["kind"] := "var";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "AssignmentExpression";
__n46["operator"] := "=";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n47["computed"] := true;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "items";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "Symbol";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "iterator";
__n51["raw"] := "\"iterator\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n47["property"] := __n49;
__n46["left"] := __n47;
__n52 := {  };
__n52["type"] := "FunctionExpression";
__n52["id"] := null;
__n53 := [  ];
__n52["params"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ReturnStatement";
__n57 := {  };
__n57["type"] := "ObjectExpression";
__n59 := {  };
__n59["type"] := "Property";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "next";
__n59["key"] := __n60;
__n61 := {  };
__n61["type"] := "FunctionExpression";
__n61["id"] := null;
__n62 := [  ];
__n61["params"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ReturnStatement";
__n66 := {  };
__n66["type"] := "ObjectExpression";
__n68 := {  };
__n68["type"] := "Property";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "done";
__n68["key"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := true;
__n70["raw"] := "true";
__n68["value"] := __n70;
__n68["computed"] := false;
__n68["kind"] := "init";
__n68["shorthand"] := false;
__n67 := [ __n68 ];
__n66["properties"] := __n67;
__n65["argument"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n71 := [  ];
__n63["variableDeclarations"] := __n71;
__n72 := [  ];
__n63["functionDeclarations"] := __n72;
__n63["codeType"] := "function";
__n63["strict"] := false;
__n61["body"] := __n63;
__n61["generator"] := false;
__n61["async"] := false;
__n61["expression"] := false;
__n59["value"] := __n61;
__n59["computed"] := false;
__n59["kind"] := "init";
__n59["shorthand"] := false;
__n58 := [ __n59 ];
__n57["properties"] := __n58;
__n56["argument"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n73 := [  ];
__n54["variableDeclarations"] := __n73;
__n74 := [  ];
__n54["functionDeclarations"] := __n74;
__n54["codeType"] := "function";
__n54["strict"] := false;
__n52["body"] := __n54;
__n52["generator"] := false;
__n52["async"] := false;
__n52["expression"] := false;
__n46["right"] := __n52;
__n45["expression"] := __n46;
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "AssignmentExpression";
__n76["operator"] := "=";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "result";
__n76["left"] := __n77;
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "Array";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "from";
__n82["raw"] := "\"from\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n79["object"] := __n80;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "call";
__n83["raw"] := "\"call\"";
__n79["property"] := __n83;
__n79["computed"] := true;
__n78["callee"] := __n79;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "C";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "items";
__n84 := [ __n85, __n86 ];
__n78["arguments"] := __n84;
__n76["right"] := __n78;
__n75["expression"] := __n76;
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "assert";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "instanceof";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "result";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "C";
__n91["right"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "The result of evaluating (result instanceof C) is expected to be true";
__n94["raw"] := "'The result of evaluating (result instanceof C) is expected to be true'";
__n90 := [ __n91, __n94 ];
__n88["arguments"] := __n90;
__n87["expression"] := __n88;
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "CallExpression";
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "assert";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "sameValue";
__n99["raw"] := "\"sameValue\"";
__n97["property"] := __n99;
__n97["computed"] := true;
__n96["callee"] := __n97;
__n101 := {  };
__n101["type"] := "MemberExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "result";
__n101["object"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "constructor";
__n103["raw"] := "\"constructor\"";
__n101["property"] := __n103;
__n101["computed"] := true;
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "C";
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "The value of result.constructor is expected to equal the value of C";
__n105["raw"] := "'The value of result.constructor is expected to equal the value of C'";
__n100 := [ __n101, __n104, __n105 ];
__n96["arguments"] := __n100;
__n95["expression"] := __n96;
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "MemberExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "assert";
__n108["object"] := __n109;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "sameValue";
__n110["raw"] := "\"sameValue\"";
__n108["property"] := __n110;
__n108["computed"] := true;
__n107["callee"] := __n108;
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "callCount";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 1.;
__n113["raw"] := "1";
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "The value of callCount is expected to be 1";
__n114["raw"] := "'The value of callCount is expected to be 1'";
__n111 := [ __n112, __n113, __n114 ];
__n107["arguments"] := __n111;
__n106["expression"] := __n107;
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "MemberExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "assert";
__n117["object"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "sameValue";
__n119["raw"] := "\"sameValue\"";
__n117["property"] := __n119;
__n117["computed"] := true;
__n116["callee"] := __n117;
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "thisVal";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "result";
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "The value of thisVal is expected to equal the value of result";
__n123["raw"] := "'The value of thisVal is expected to equal the value of result'";
__n120 := [ __n121, __n122, __n123 ];
__n116["arguments"] := __n120;
__n115["expression"] := __n116;
__n124 := {  };
__n124["type"] := "ExpressionStatement";
__n125 := {  };
__n125["type"] := "CallExpression";
__n126 := {  };
__n126["type"] := "MemberExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "assert";
__n126["object"] := __n127;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := "sameValue";
__n128["raw"] := "\"sameValue\"";
__n126["property"] := __n128;
__n126["computed"] := true;
__n125["callee"] := __n126;
__n130 := {  };
__n130["type"] := "MemberExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "args";
__n130["object"] := __n131;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := "length";
__n132["raw"] := "\"length\"";
__n130["property"] := __n132;
__n130["computed"] := true;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := 0.;
__n133["raw"] := "0";
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "The value of args.length is expected to be 0";
__n134["raw"] := "'The value of args.length is expected to be 0'";
__n129 := [ __n130, __n133, __n134 ];
__n125["arguments"] := __n129;
__n124["expression"] := __n125;
__n1 := [ __n2, __n8, __n13, __n35, __n39, __n45, __n75, __n87, __n95, __n106, __n115, __n124 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n135 := [ "thisVal", "args", "callCount", "C", "result", "items" ];
__n0["variableDeclarations"] := __n135;
__n136 := [  ];
__n0["functionDeclarations"] := __n136;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}