function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Array";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "isArray";
__n11["raw"] := "\"isArray\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 42.;
__n13["raw"] := "42";
__n12 := [ __n13 ];
__n8["arguments"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := false;
__n14["raw"] := "false";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "Array.isArray(42) must return false";
__n15["raw"] := "'Array.isArray(42) must return false'";
__n7 := [ __n8, __n14, __n15 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "assert";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "sameValue";
__n20["raw"] := "\"sameValue\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Array";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "isArray";
__n25["raw"] := "\"isArray\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "undefined";
__n26 := [ __n27 ];
__n22["arguments"] := __n26;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := false;
__n28["raw"] := "false";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "Array.isArray(undefined) must return false";
__n29["raw"] := "'Array.isArray(undefined) must return false'";
__n21 := [ __n22, __n28, __n29 ];
__n17["arguments"] := __n21;
__n16["expression"] := __n17;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "assert";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "sameValue";
__n34["raw"] := "\"sameValue\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Array";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "isArray";
__n39["raw"] := "\"isArray\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := true;
__n41["raw"] := "true";
__n40 := [ __n41 ];
__n36["arguments"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := false;
__n42["raw"] := "false";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "Array.isArray(true) must return false";
__n43["raw"] := "'Array.isArray(true) must return false'";
__n35 := [ __n36, __n42, __n43 ];
__n31["arguments"] := __n35;
__n30["expression"] := __n31;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "assert";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "sameValue";
__n48["raw"] := "\"sameValue\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Array";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "isArray";
__n53["raw"] := "\"isArray\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["callee"] := __n51;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "abc";
__n55["raw"] := "\"abc\"";
__n54 := [ __n55 ];
__n50["arguments"] := __n54;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := false;
__n56["raw"] := "false";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "Array.isArray(\"abc\") must return false";
__n57["raw"] := "'Array.isArray(\"abc\") must return false'";
__n49 := [ __n50, __n56, __n57 ];
__n45["arguments"] := __n49;
__n44["expression"] := __n45;
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "assert";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "sameValue";
__n62["raw"] := "\"sameValue\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "MemberExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "Array";
__n65["object"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "isArray";
__n67["raw"] := "\"isArray\"";
__n65["property"] := __n67;
__n65["computed"] := true;
__n64["callee"] := __n65;
__n69 := {  };
__n69["type"] := "ObjectExpression";
__n70 := [  ];
__n69["properties"] := __n70;
__n68 := [ __n69 ];
__n64["arguments"] := __n68;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := false;
__n71["raw"] := "false";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "Array.isArray({}) must return false";
__n72["raw"] := "'Array.isArray({}) must return false'";
__n63 := [ __n64, __n71, __n72 ];
__n59["arguments"] := __n63;
__n58["expression"] := __n59;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "assert";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "sameValue";
__n77["raw"] := "\"sameValue\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "Array";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "isArray";
__n82["raw"] := "\"isArray\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n79["callee"] := __n80;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := 'null;
__n84["raw"] := "\"'null\"";
__n83 := [ __n84 ];
__n79["arguments"] := __n83;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := false;
__n85["raw"] := "false";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "Array.isArray(null) must return false";
__n86["raw"] := "'Array.isArray(null) must return false'";
__n78 := [ __n79, __n85, __n86 ];
__n74["arguments"] := __n78;
__n73["expression"] := __n74;
__n1 := [ __n2, __n16, __n30, __n44, __n58, __n73 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n87 := [  ];
__n0["variableDeclarations"] := __n87;
__n88 := [  ];
__n0["functionDeclarations"] := __n88;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}