function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "VariableDeclaration";
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "x";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "ArrayExpression";
__n10 := [  ];
__n9["elements"] := __n10;
__n7["init"] := __n9;
__n6 := [ __n7 ];
__n5["declarations"] := __n6;
__n5["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "AssignmentExpression";
__n12["operator"] := "=";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "x";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "length";
__n15["raw"] := "\"length\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["left"] := __n13;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "NaN";
__n12["right"] := __n16;
__n11["expression"] := __n12;
__n17 := {  };
__n17["type"] := "ThrowStatement";
__n18 := {  };
__n18["type"] := "NewExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Test262Error";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "+";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "#1.1: x = []; x.length = NaN throw RangeError. Actual: x.length === ";
__n22["raw"] := "'#1.1: x = []; x.length = NaN throw RangeError. Actual: x.length === '";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "x";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "length";
__n25["raw"] := "\"length\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n21["right"] := __n23;
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n17["argument"] := __n18;
__n4 := [ __n5, __n11, __n17 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n26 := {  };
__n26["type"] := "CatchClause";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "e";
__n26["param"] := __n27;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "assert";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "sameValue";
__n34["raw"] := "\"sameValue\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "instanceof";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "e";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "RangeError";
__n36["right"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := true;
__n39["raw"] := "true";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "The result of evaluating (e instanceof RangeError) is expected to be true";
__n40["raw"] := "'The result of evaluating (e instanceof RangeError) is expected to be true'";
__n35 := [ __n36, __n39, __n40 ];
__n31["arguments"] := __n35;
__n30["expression"] := __n31;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n26["body"] := __n28;
__n2["handler"] := __n26;
__n2["finalizer"] := null;
__n41 := {  };
__n41["type"] := "TryStatement";
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "AssignmentExpression";
__n45["operator"] := "=";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "x";
__n45["left"] := __n46;
__n47 := {  };
__n47["type"] := "ArrayExpression";
__n48 := [  ];
__n47["elements"] := __n48;
__n45["right"] := __n47;
__n44["expression"] := __n45;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "AssignmentExpression";
__n50["operator"] := "=";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "x";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "length";
__n53["raw"] := "\"length\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["left"] := __n51;
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Number";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "POSITIVE_INFINITY";
__n56["raw"] := "\"POSITIVE_INFINITY\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n50["right"] := __n54;
__n49["expression"] := __n50;
__n57 := {  };
__n57["type"] := "ThrowStatement";
__n58 := {  };
__n58["type"] := "NewExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Test262Error";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "#2.1: x = []; x.length = Number.POSITIVE_INFINITY throw RangeError. Actual: x.length === ";
__n62["raw"] := "'#2.1: x = []; x.length = Number.POSITIVE_INFINITY throw RangeError. Actual: x.length === '";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "x";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "length";
__n65["raw"] := "\"length\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n61["right"] := __n63;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["argument"] := __n58;
__n43 := [ __n44, __n49, __n57 ];
__n42["body"] := __n43;
__n41["block"] := __n42;
__n66 := {  };
__n66["type"] := "CatchClause";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "e";
__n66["param"] := __n67;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "assert";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "sameValue";
__n74["raw"] := "\"sameValue\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n76 := {  };
__n76["type"] := "BinaryExpression";
__n76["operator"] := "instanceof";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "e";
__n76["left"] := __n77;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "RangeError";
__n76["right"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := true;
__n79["raw"] := "true";
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "The result of evaluating (e instanceof RangeError) is expected to be true";
__n80["raw"] := "'The result of evaluating (e instanceof RangeError) is expected to be true'";
__n75 := [ __n76, __n79, __n80 ];
__n71["arguments"] := __n75;
__n70["expression"] := __n71;
__n69 := [ __n70 ];
__n68["body"] := __n69;
__n66["body"] := __n68;
__n41["handler"] := __n66;
__n41["finalizer"] := null;
__n81 := {  };
__n81["type"] := "TryStatement";
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "AssignmentExpression";
__n85["operator"] := "=";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "x";
__n85["left"] := __n86;
__n87 := {  };
__n87["type"] := "ArrayExpression";
__n88 := [  ];
__n87["elements"] := __n88;
__n85["right"] := __n87;
__n84["expression"] := __n85;
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "AssignmentExpression";
__n90["operator"] := "=";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "x";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "length";
__n93["raw"] := "\"length\"";
__n91["property"] := __n93;
__n91["computed"] := true;
__n90["left"] := __n91;
__n94 := {  };
__n94["type"] := "MemberExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "Number";
__n94["object"] := __n95;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "NEGATIVE_INFINITY";
__n96["raw"] := "\"NEGATIVE_INFINITY\"";
__n94["property"] := __n96;
__n94["computed"] := true;
__n90["right"] := __n94;
__n89["expression"] := __n90;
__n97 := {  };
__n97["type"] := "ThrowStatement";
__n98 := {  };
__n98["type"] := "NewExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "Test262Error";
__n98["callee"] := __n99;
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "+";
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "#3.1: x = []; x.length = Number.NEGATIVE_INFINITY throw RangeError. Actual: x.length === ";
__n102["raw"] := "'#3.1: x = []; x.length = Number.NEGATIVE_INFINITY throw RangeError. Actual: x.length === '";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "x";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "length";
__n105["raw"] := "\"length\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n101["right"] := __n103;
__n100 := [ __n101 ];
__n98["arguments"] := __n100;
__n97["argument"] := __n98;
__n83 := [ __n84, __n89, __n97 ];
__n82["body"] := __n83;
__n81["block"] := __n82;
__n106 := {  };
__n106["type"] := "CatchClause";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "e";
__n106["param"] := __n107;
__n108 := {  };
__n108["type"] := "BlockStatement";
__n110 := {  };
__n110["type"] := "ExpressionStatement";
__n111 := {  };
__n111["type"] := "CallExpression";
__n112 := {  };
__n112["type"] := "MemberExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "assert";
__n112["object"] := __n113;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "sameValue";
__n114["raw"] := "\"sameValue\"";
__n112["property"] := __n114;
__n112["computed"] := true;
__n111["callee"] := __n112;
__n116 := {  };
__n116["type"] := "BinaryExpression";
__n116["operator"] := "instanceof";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "e";
__n116["left"] := __n117;
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "RangeError";
__n116["right"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := true;
__n119["raw"] := "true";
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "The result of evaluating (e instanceof RangeError) is expected to be true";
__n120["raw"] := "'The result of evaluating (e instanceof RangeError) is expected to be true'";
__n115 := [ __n116, __n119, __n120 ];
__n111["arguments"] := __n115;
__n110["expression"] := __n111;
__n109 := [ __n110 ];
__n108["body"] := __n109;
__n106["body"] := __n108;
__n81["handler"] := __n106;
__n81["finalizer"] := null;
__n121 := {  };
__n121["type"] := "TryStatement";
__n122 := {  };
__n122["type"] := "BlockStatement";
__n124 := {  };
__n124["type"] := "ExpressionStatement";
__n125 := {  };
__n125["type"] := "AssignmentExpression";
__n125["operator"] := "=";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "x";
__n125["left"] := __n126;
__n127 := {  };
__n127["type"] := "ArrayExpression";
__n128 := [  ];
__n127["elements"] := __n128;
__n125["right"] := __n127;
__n124["expression"] := __n125;
__n129 := {  };
__n129["type"] := "ExpressionStatement";
__n130 := {  };
__n130["type"] := "AssignmentExpression";
__n130["operator"] := "=";
__n131 := {  };
__n131["type"] := "MemberExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "x";
__n131["object"] := __n132;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "length";
__n133["raw"] := "\"length\"";
__n131["property"] := __n133;
__n131["computed"] := true;
__n130["left"] := __n131;
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "undefined";
__n130["right"] := __n134;
__n129["expression"] := __n130;
__n135 := {  };
__n135["type"] := "ThrowStatement";
__n136 := {  };
__n136["type"] := "NewExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "Test262Error";
__n136["callee"] := __n137;
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "+";
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "#4.1: x = []; x.length = undefined throw RangeError. Actual: x.length === ";
__n140["raw"] := "'#4.1: x = []; x.length = undefined throw RangeError. Actual: x.length === '";
__n139["left"] := __n140;
__n141 := {  };
__n141["type"] := "MemberExpression";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "x";
__n141["object"] := __n142;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := "length";
__n143["raw"] := "\"length\"";
__n141["property"] := __n143;
__n141["computed"] := true;
__n139["right"] := __n141;
__n138 := [ __n139 ];
__n136["arguments"] := __n138;
__n135["argument"] := __n136;
__n123 := [ __n124, __n129, __n135 ];
__n122["body"] := __n123;
__n121["block"] := __n122;
__n144 := {  };
__n144["type"] := "CatchClause";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "e";
__n144["param"] := __n145;
__n146 := {  };
__n146["type"] := "BlockStatement";
__n148 := {  };
__n148["type"] := "ExpressionStatement";
__n149 := {  };
__n149["type"] := "CallExpression";
__n150 := {  };
__n150["type"] := "MemberExpression";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "assert";
__n150["object"] := __n151;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := "sameValue";
__n152["raw"] := "\"sameValue\"";
__n150["property"] := __n152;
__n150["computed"] := true;
__n149["callee"] := __n150;
__n154 := {  };
__n154["type"] := "BinaryExpression";
__n154["operator"] := "instanceof";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "e";
__n154["left"] := __n155;
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "RangeError";
__n154["right"] := __n156;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := true;
__n157["raw"] := "true";
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := "The result of evaluating (e instanceof RangeError) is expected to be true";
__n158["raw"] := "'The result of evaluating (e instanceof RangeError) is expected to be true'";
__n153 := [ __n154, __n157, __n158 ];
__n149["arguments"] := __n153;
__n148["expression"] := __n149;
__n147 := [ __n148 ];
__n146["body"] := __n147;
__n144["body"] := __n146;
__n121["handler"] := __n144;
__n121["finalizer"] := null;
__n1 := [ __n2, __n41, __n81, __n121 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n159 := [ "x" ];
__n0["variableDeclarations"] := __n159;
__n160 := [  ];
__n0["functionDeclarations"] := __n160;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}