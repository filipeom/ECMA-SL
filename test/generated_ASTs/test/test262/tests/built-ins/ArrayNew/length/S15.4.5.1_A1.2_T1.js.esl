function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 0.;
__n8["raw"] := "0";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 2.;
__n9["raw"] := "2";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 4.;
__n10["raw"] := "4";
__n7 := [ __n8, null, __n9, null, __n10 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "AssignmentExpression";
__n12["operator"] := "=";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "x";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "length";
__n15["raw"] := "\"length\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["left"] := __n13;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 4.;
__n16["raw"] := "4";
__n12["right"] := __n16;
__n11["expression"] := __n12;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "assert";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "sameValue";
__n21["raw"] := "\"sameValue\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "MemberExpression";
__n23["computed"] := true;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "x";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 4.;
__n25["raw"] := "4";
__n23["property"] := __n25;
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "undefined";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "The value of x[4] is expected to equal undefined";
__n27["raw"] := "'The value of x[4] is expected to equal undefined'";
__n22 := [ __n23, __n26, __n27 ];
__n18["arguments"] := __n22;
__n17["expression"] := __n18;
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "AssignmentExpression";
__n29["operator"] := "=";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "x";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "length";
__n32["raw"] := "\"length\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["left"] := __n30;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 3.;
__n33["raw"] := "3";
__n29["right"] := __n33;
__n28["expression"] := __n29;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "assert";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "sameValue";
__n38["raw"] := "\"sameValue\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n40["computed"] := true;
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "x";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 3.;
__n42["raw"] := "3";
__n40["property"] := __n42;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "undefined";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "The value of x[3] is expected to equal undefined";
__n44["raw"] := "'The value of x[3] is expected to equal undefined'";
__n39 := [ __n40, __n43, __n44 ];
__n35["arguments"] := __n39;
__n34["expression"] := __n35;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "assert";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "sameValue";
__n49["raw"] := "\"sameValue\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "MemberExpression";
__n51["computed"] := true;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "x";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 2.;
__n53["raw"] := "2";
__n51["property"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 2.;
__n54["raw"] := "2";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "The value of x[2] is expected to be 2";
__n55["raw"] := "'The value of x[2] is expected to be 2'";
__n50 := [ __n51, __n54, __n55 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n1 := [ __n2, __n11, __n17, __n28, __n34, __n45 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n56 := [ "x" ];
__n0["variableDeclarations"] := __n56;
__n57 := [  ];
__n0["functionDeclarations"] := __n57;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}