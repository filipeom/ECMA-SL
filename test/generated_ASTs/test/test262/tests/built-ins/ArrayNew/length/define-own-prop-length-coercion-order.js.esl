function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "array";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 1.;
__n8["raw"] := "1";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 2.;
__n9["raw"] := "2";
__n7 := [ __n8, __n9 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "valueOfCalls";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 0.;
__n14["raw"] := "0";
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "length";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "ObjectExpression";
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "valueOf";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "FunctionExpression";
__n23["id"] := null;
__n24 := [  ];
__n23["params"] := __n24;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "AssignmentExpression";
__n28["operator"] := "+=";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "valueOfCalls";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 1.;
__n30["raw"] := "1";
__n28["right"] := __n30;
__n27["expression"] := __n28;
__n31 := {  };
__n31["type"] := "IfStatement";
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "!==";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "valueOfCalls";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1.;
__n34["raw"] := "1";
__n32["right"] := __n34;
__n31["test"] := __n32;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Object";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "defineProperty";
__n41["raw"] := "\"defineProperty\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "array";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "length";
__n44["raw"] := "\"length\"";
__n45 := {  };
__n45["type"] := "ObjectExpression";
__n47 := {  };
__n47["type"] := "Property";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "writable";
__n47["key"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := false;
__n49["raw"] := "false";
__n47["value"] := __n49;
__n47["computed"] := false;
__n47["kind"] := "init";
__n47["shorthand"] := false;
__n46 := [ __n47 ];
__n45["properties"] := __n46;
__n42 := [ __n43, __n44, __n45 ];
__n38["arguments"] := __n42;
__n37["expression"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n31["consequent"] := __n35;
__n31["alternate"] := null;
__n50 := {  };
__n50["type"] := "ReturnStatement";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "array";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "length";
__n53["raw"] := "\"length\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["argument"] := __n51;
__n26 := [ __n27, __n31, __n50 ];
__n25["body"] := __n26;
__n54 := [  ];
__n25["variableDeclarations"] := __n54;
__n55 := [  ];
__n25["functionDeclarations"] := __n55;
__n25["codeType"] := "function";
__n25["strict"] := false;
__n23["body"] := __n25;
__n23["generator"] := false;
__n23["async"] := false;
__n23["expression"] := false;
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n20 := [ __n21 ];
__n19["properties"] := __n20;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "assert";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "throws";
__n60["raw"] := "\"throws\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "TypeError";
__n63 := {  };
__n63["type"] := "FunctionExpression";
__n63["id"] := null;
__n64 := [  ];
__n63["params"] := __n64;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "Object";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "defineProperty";
__n71["raw"] := "\"defineProperty\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "array";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "length";
__n74["raw"] := "\"length\"";
__n75 := {  };
__n75["type"] := "ObjectExpression";
__n77 := {  };
__n77["type"] := "Property";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "value";
__n77["key"] := __n78;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "length";
__n77["value"] := __n79;
__n77["computed"] := false;
__n77["kind"] := "init";
__n77["shorthand"] := false;
__n80 := {  };
__n80["type"] := "Property";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "writable";
__n80["key"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := true;
__n82["raw"] := "true";
__n80["value"] := __n82;
__n80["computed"] := false;
__n80["kind"] := "init";
__n80["shorthand"] := false;
__n76 := [ __n77, __n80 ];
__n75["properties"] := __n76;
__n72 := [ __n73, __n74, __n75 ];
__n68["arguments"] := __n72;
__n67["expression"] := __n68;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n83 := [  ];
__n65["variableDeclarations"] := __n83;
__n84 := [  ];
__n65["functionDeclarations"] := __n84;
__n65["codeType"] := "function";
__n65["strict"] := false;
__n63["body"] := __n65;
__n63["generator"] := false;
__n63["async"] := false;
__n63["expression"] := false;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "Object.defineProperty(array, \"length\", {value: length, writable: true}) throws a TypeError exception";
__n85["raw"] := "'Object.defineProperty(array, \"length\", {value: length, writable: true}) throws a TypeError exception'";
__n61 := [ __n62, __n63, __n85 ];
__n57["arguments"] := __n61;
__n56["expression"] := __n57;
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "assert";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "sameValue";
__n90["raw"] := "\"sameValue\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n87["callee"] := __n88;
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "valueOfCalls";
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 2.;
__n93["raw"] := "2";
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "The value of valueOfCalls is expected to be 2";
__n94["raw"] := "'The value of valueOfCalls is expected to be 2'";
__n91 := [ __n92, __n93, __n94 ];
__n87["arguments"] := __n91;
__n86["expression"] := __n87;
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "AssignmentExpression";
__n96["operator"] := "=";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "array";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "ArrayExpression";
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := 1.;
__n100["raw"] := "1";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 2.;
__n101["raw"] := "2";
__n99 := [ __n100, __n101 ];
__n98["elements"] := __n99;
__n96["right"] := __n98;
__n95["expression"] := __n96;
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "AssignmentExpression";
__n103["operator"] := "=";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "valueOfCalls";
__n103["left"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 0.;
__n105["raw"] := "0";
__n103["right"] := __n105;
__n102["expression"] := __n103;
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "assert";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "UnaryExpression";
__n110["operator"] := "!";
__n111 := {  };
__n111["type"] := "CallExpression";
__n112 := {  };
__n112["type"] := "MemberExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "Reflect";
__n112["object"] := __n113;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "defineProperty";
__n114["raw"] := "\"defineProperty\"";
__n112["property"] := __n114;
__n112["computed"] := true;
__n111["callee"] := __n112;
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "array";
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "length";
__n117["raw"] := "\"length\"";
__n118 := {  };
__n118["type"] := "ObjectExpression";
__n120 := {  };
__n120["type"] := "Property";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "value";
__n120["key"] := __n121;
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "length";
__n120["value"] := __n122;
__n120["computed"] := false;
__n120["kind"] := "init";
__n120["shorthand"] := false;
__n123 := {  };
__n123["type"] := "Property";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "writable";
__n123["key"] := __n124;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := true;
__n125["raw"] := "true";
__n123["value"] := __n125;
__n123["computed"] := false;
__n123["kind"] := "init";
__n123["shorthand"] := false;
__n119 := [ __n120, __n123 ];
__n118["properties"] := __n119;
__n115 := [ __n116, __n117, __n118 ];
__n111["arguments"] := __n115;
__n110["argument"] := __n111;
__n110["prefix"] := true;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "The value of !Reflect.defineProperty(array, \"length\", {value: length, writable: true}) is expected to be true";
__n126["raw"] := "'The value of !Reflect.defineProperty(array, \"length\", {value: length, writable: true}) is expected to be true'";
__n109 := [ __n110, __n126 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "MemberExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "assert";
__n129["object"] := __n130;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "sameValue";
__n131["raw"] := "\"sameValue\"";
__n129["property"] := __n131;
__n129["computed"] := true;
__n128["callee"] := __n129;
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "valueOfCalls";
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 2.;
__n134["raw"] := "2";
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "The value of valueOfCalls is expected to be 2";
__n135["raw"] := "'The value of valueOfCalls is expected to be 2'";
__n132 := [ __n133, __n134, __n135 ];
__n128["arguments"] := __n132;
__n127["expression"] := __n128;
__n1 := [ __n2, __n10, __n15, __n56, __n86, __n95, __n102, __n106, __n127 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n136 := [ "array", "valueOfCalls", "length" ];
__n0["variableDeclarations"] := __n136;
__n137 := [  ];
__n0["functionDeclarations"] := __n137;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}