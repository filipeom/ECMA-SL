function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "throws";
__n6["raw"] := "\"throws\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "TypeError";
__n9 := {  };
__n9["type"] := "FunctionExpression";
__n9["id"] := null;
__n10 := [  ];
__n9["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Object";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "defineProperty";
__n17["raw"] := "\"defineProperty\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "ArrayExpression";
__n20 := [  ];
__n19["elements"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "length";
__n21["raw"] := "\"length\"";
__n22 := {  };
__n22["type"] := "ObjectExpression";
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "configurable";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := true;
__n26["raw"] := "true";
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n23 := [ __n24 ];
__n22["properties"] := __n23;
__n18 := [ __n19, __n21, __n22 ];
__n14["arguments"] := __n18;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n27 := [  ];
__n11["variableDeclarations"] := __n27;
__n28 := [  ];
__n11["functionDeclarations"] := __n28;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n9["body"] := __n11;
__n9["generator"] := false;
__n9["async"] := false;
__n9["expression"] := false;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "Object.defineProperty([], \"length\", {configurable: true}) throws a TypeError exception";
__n29["raw"] := "'Object.defineProperty([], \"length\", {configurable: true}) throws a TypeError exception'";
__n7 := [ __n8, __n9, __n29 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "assert";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "UnaryExpression";
__n34["operator"] := "!";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Reflect";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "defineProperty";
__n38["raw"] := "\"defineProperty\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "ArrayExpression";
__n41 := [  ];
__n40["elements"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "length";
__n42["raw"] := "\"length\"";
__n43 := {  };
__n43["type"] := "ObjectExpression";
__n45 := {  };
__n45["type"] := "Property";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "enumerable";
__n45["key"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := true;
__n47["raw"] := "true";
__n45["value"] := __n47;
__n45["computed"] := false;
__n45["kind"] := "init";
__n45["shorthand"] := false;
__n44 := [ __n45 ];
__n43["properties"] := __n44;
__n39 := [ __n40, __n42, __n43 ];
__n35["arguments"] := __n39;
__n34["argument"] := __n35;
__n34["prefix"] := true;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "The value of !Reflect.defineProperty([], \"length\", {enumerable: true}) is expected to be true";
__n48["raw"] := "'The value of !Reflect.defineProperty([], \"length\", {enumerable: true}) is expected to be true'";
__n33 := [ __n34, __n48 ];
__n31["arguments"] := __n33;
__n30["expression"] := __n31;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "assert";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "throws";
__n53["raw"] := "\"throws\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["callee"] := __n51;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "TypeError";
__n56 := {  };
__n56["type"] := "FunctionExpression";
__n56["id"] := null;
__n57 := [  ];
__n56["params"] := __n57;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Object";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "defineProperty";
__n64["raw"] := "\"defineProperty\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n66 := {  };
__n66["type"] := "ArrayExpression";
__n67 := [  ];
__n66["elements"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "length";
__n68["raw"] := "\"length\"";
__n69 := {  };
__n69["type"] := "ObjectExpression";
__n71 := {  };
__n71["type"] := "Property";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "get";
__n71["key"] := __n72;
__n73 := {  };
__n73["type"] := "FunctionExpression";
__n73["id"] := null;
__n74 := [  ];
__n73["params"] := __n74;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ThrowStatement";
__n78 := {  };
__n78["type"] := "NewExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "Test262Error";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "[[Get]] shouldn't be called";
__n81["raw"] := "\"[[Get]] shouldn't be called\"";
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["argument"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n82 := [  ];
__n75["variableDeclarations"] := __n82;
__n83 := [  ];
__n75["functionDeclarations"] := __n83;
__n75["codeType"] := "function";
__n75["strict"] := false;
__n73["body"] := __n75;
__n73["generator"] := false;
__n73["async"] := false;
__n73["expression"] := false;
__n71["value"] := __n73;
__n71["computed"] := false;
__n71["kind"] := "init";
__n71["shorthand"] := false;
__n70 := [ __n71 ];
__n69["properties"] := __n70;
__n65 := [ __n66, __n68, __n69 ];
__n61["arguments"] := __n65;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n84 := [  ];
__n58["variableDeclarations"] := __n84;
__n85 := [  ];
__n58["functionDeclarations"] := __n85;
__n58["codeType"] := "function";
__n58["strict"] := false;
__n56["body"] := __n58;
__n56["generator"] := false;
__n56["async"] := false;
__n56["expression"] := false;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "Object.defineProperty([], \"length\", {get: function() {throw new Test262Error(\"[[Get]] shouldn\"t be called\");},}) throws a TypeError exception";
__n86["raw"] := "'Object.defineProperty([], \"length\", {get: function() {throw new Test262Error(\"[[Get]] shouldn\"t be called\");},}) throws a TypeError exception'";
__n54 := [ __n55, __n56, __n86 ];
__n50["arguments"] := __n54;
__n49["expression"] := __n50;
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "assert";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "UnaryExpression";
__n91["operator"] := "!";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "Reflect";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "defineProperty";
__n95["raw"] := "\"defineProperty\"";
__n93["property"] := __n95;
__n93["computed"] := true;
__n92["callee"] := __n93;
__n97 := {  };
__n97["type"] := "ArrayExpression";
__n98 := [  ];
__n97["elements"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "length";
__n99["raw"] := "\"length\"";
__n100 := {  };
__n100["type"] := "ObjectExpression";
__n102 := {  };
__n102["type"] := "Property";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "set";
__n102["key"] := __n103;
__n104 := {  };
__n104["type"] := "FunctionExpression";
__n104["id"] := null;
__n105 := [ "_value" ];
__n104["params"] := __n105;
__n106 := {  };
__n106["type"] := "BlockStatement";
__n107 := [  ];
__n106["body"] := __n107;
__n108 := [  ];
__n106["variableDeclarations"] := __n108;
__n109 := [  ];
__n106["functionDeclarations"] := __n109;
__n106["codeType"] := "function";
__n106["strict"] := false;
__n104["body"] := __n106;
__n104["generator"] := false;
__n104["async"] := false;
__n104["expression"] := false;
__n102["value"] := __n104;
__n102["computed"] := false;
__n102["kind"] := "init";
__n102["shorthand"] := false;
__n101 := [ __n102 ];
__n100["properties"] := __n101;
__n96 := [ __n97, __n99, __n100 ];
__n92["arguments"] := __n96;
__n91["argument"] := __n92;
__n91["prefix"] := true;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "The value of !Reflect.defineProperty([], \"length\", {set: function(_value) {}}) is expected to be true";
__n110["raw"] := "'The value of !Reflect.defineProperty([], \"length\", {set: function(_value) {}}) is expected to be true'";
__n90 := [ __n91, __n110 ];
__n88["arguments"] := __n90;
__n87["expression"] := __n88;
__n111 := {  };
__n111["type"] := "VariableDeclaration";
__n113 := {  };
__n113["type"] := "VariableDeclarator";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "array";
__n113["id"] := __n114;
__n115 := {  };
__n115["type"] := "ArrayExpression";
__n116 := [  ];
__n115["elements"] := __n116;
__n113["init"] := __n115;
__n112 := [ __n113 ];
__n111["declarations"] := __n112;
__n111["kind"] := "var";
__n117 := {  };
__n117["type"] := "ExpressionStatement";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "MemberExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "Object";
__n119["object"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "defineProperty";
__n121["raw"] := "\"defineProperty\"";
__n119["property"] := __n121;
__n119["computed"] := true;
__n118["callee"] := __n119;
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "array";
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "length";
__n124["raw"] := "\"length\"";
__n125 := {  };
__n125["type"] := "ObjectExpression";
__n127 := {  };
__n127["type"] := "Property";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "writable";
__n127["key"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := false;
__n129["raw"] := "false";
__n127["value"] := __n129;
__n127["computed"] := false;
__n127["kind"] := "init";
__n127["shorthand"] := false;
__n126 := [ __n127 ];
__n125["properties"] := __n126;
__n122 := [ __n123, __n124, __n125 ];
__n118["arguments"] := __n122;
__n117["expression"] := __n118;
__n130 := {  };
__n130["type"] := "ExpressionStatement";
__n131 := {  };
__n131["type"] := "CallExpression";
__n132 := {  };
__n132["type"] := "MemberExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "assert";
__n132["object"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "throws";
__n134["raw"] := "\"throws\"";
__n132["property"] := __n134;
__n132["computed"] := true;
__n131["callee"] := __n132;
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "TypeError";
__n137 := {  };
__n137["type"] := "FunctionExpression";
__n137["id"] := null;
__n138 := [  ];
__n137["params"] := __n138;
__n139 := {  };
__n139["type"] := "BlockStatement";
__n141 := {  };
__n141["type"] := "ExpressionStatement";
__n142 := {  };
__n142["type"] := "CallExpression";
__n143 := {  };
__n143["type"] := "MemberExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "Object";
__n143["object"] := __n144;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "defineProperty";
__n145["raw"] := "\"defineProperty\"";
__n143["property"] := __n145;
__n143["computed"] := true;
__n142["callee"] := __n143;
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "array";
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "length";
__n148["raw"] := "\"length\"";
__n149 := {  };
__n149["type"] := "ObjectExpression";
__n151 := {  };
__n151["type"] := "Property";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "writable";
__n151["key"] := __n152;
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := true;
__n153["raw"] := "true";
__n151["value"] := __n153;
__n151["computed"] := false;
__n151["kind"] := "init";
__n151["shorthand"] := false;
__n150 := [ __n151 ];
__n149["properties"] := __n150;
__n146 := [ __n147, __n148, __n149 ];
__n142["arguments"] := __n146;
__n141["expression"] := __n142;
__n140 := [ __n141 ];
__n139["body"] := __n140;
__n154 := [  ];
__n139["variableDeclarations"] := __n154;
__n155 := [  ];
__n139["functionDeclarations"] := __n155;
__n139["codeType"] := "function";
__n139["strict"] := false;
__n137["body"] := __n139;
__n137["generator"] := false;
__n137["async"] := false;
__n137["expression"] := false;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := "Object.defineProperty(array, \"length\", {writable: true}) throws a TypeError exception";
__n156["raw"] := "'Object.defineProperty(array, \"length\", {writable: true}) throws a TypeError exception'";
__n135 := [ __n136, __n137, __n156 ];
__n131["arguments"] := __n135;
__n130["expression"] := __n131;
__n1 := [ __n2, __n30, __n49, __n87, __n111, __n117, __n130 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n157 := [ "array" ];
__n0["variableDeclarations"] := __n157;
__n158 := [  ];
__n0["functionDeclarations"] := __n158;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}