function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "result";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Array";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "of";
__n9["raw"] := "\"of\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n10 := [  ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "assert";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "instanceof";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "result";
__n15["left"] := __n16;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Array";
__n15["right"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "The result of evaluating (result instanceof Array) is expected to be true";
__n18["raw"] := "'The result of evaluating (result instanceof Array) is expected to be true'";
__n14 := [ __n15, __n18 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "AssignmentExpression";
__n20["operator"] := "=";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "result";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Array";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "of";
__n26["raw"] := "\"of\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["object"] := __n24;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "call";
__n27["raw"] := "\"call\"";
__n23["property"] := __n27;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "undefined";
__n28 := [ __n29 ];
__n22["arguments"] := __n28;
__n20["right"] := __n22;
__n19["expression"] := __n20;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "assert";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "instanceof";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "result";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Array";
__n34["right"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "The result of evaluating (result instanceof Array) is expected to be true";
__n37["raw"] := "'The result of evaluating (result instanceof Array) is expected to be true'";
__n33 := [ __n34, __n37 ];
__n31["arguments"] := __n33;
__n30["expression"] := __n31;
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "AssignmentExpression";
__n39["operator"] := "=";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "result";
__n39["left"] := __n40;
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Array";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "of";
__n45["raw"] := "\"of\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["object"] := __n43;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "call";
__n46["raw"] := "\"call\"";
__n42["property"] := __n46;
__n42["computed"] := true;
__n41["callee"] := __n42;
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "Math";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "cos";
__n50["raw"] := "\"cos\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47 := [ __n48 ];
__n41["arguments"] := __n47;
__n39["right"] := __n41;
__n38["expression"] := __n39;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "assert";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "instanceof";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "result";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "Array";
__n55["right"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "The result of evaluating (result instanceof Array) is expected to be true";
__n58["raw"] := "'The result of evaluating (result instanceof Array) is expected to be true'";
__n54 := [ __n55, __n58 ];
__n52["arguments"] := __n54;
__n51["expression"] := __n52;
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "AssignmentExpression";
__n60["operator"] := "=";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "result";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Array";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "of";
__n66["raw"] := "\"of\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["object"] := __n64;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "call";
__n67["raw"] := "\"call\"";
__n63["property"] := __n67;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "MemberExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "Math";
__n71["object"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "cos";
__n73["raw"] := "\"cos\"";
__n71["property"] := __n73;
__n71["computed"] := true;
__n70["object"] := __n71;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "bind";
__n74["raw"] := "\"bind\"";
__n70["property"] := __n74;
__n70["computed"] := true;
__n69["callee"] := __n70;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "Math";
__n75 := [ __n76 ];
__n69["arguments"] := __n75;
__n68 := [ __n69 ];
__n62["arguments"] := __n68;
__n60["right"] := __n62;
__n59["expression"] := __n60;
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "assert";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "instanceof";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "result";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "Array";
__n81["right"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "The result of evaluating (result instanceof Array) is expected to be true";
__n84["raw"] := "'The result of evaluating (result instanceof Array) is expected to be true'";
__n80 := [ __n81, __n84 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n1 := [ __n2, __n11, __n19, __n30, __n38, __n51, __n59, __n77 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n85 := [ "result" ];
__n0["variableDeclarations"] := __n85;
__n86 := [  ];
__n0["functionDeclarations"] := __n86;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}