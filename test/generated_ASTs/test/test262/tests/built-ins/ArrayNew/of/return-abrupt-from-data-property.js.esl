function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "T1";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "assert";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "throws";
__n8["raw"] := "\"throws\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "TypeError";
__n11 := {  };
__n11["type"] := "FunctionExpression";
__n11["id"] := null;
__n12 := [  ];
__n11["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Array";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "of";
__n20["raw"] := "\"of\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["object"] := __n18;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "call";
__n21["raw"] := "\"call\"";
__n17["property"] := __n21;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "T1";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "Bob";
__n24["raw"] := "'Bob'";
__n22 := [ __n23, __n24 ];
__n16["arguments"] := __n22;
__n15["expression"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n25 := [  ];
__n13["variableDeclarations"] := __n25;
__n26 := [  ];
__n13["functionDeclarations"] := __n26;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n11["body"] := __n13;
__n11["generator"] := false;
__n11["async"] := false;
__n11["expression"] := false;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "Array.of.call(T1, \"Bob\") throws a TypeError exception";
__n27["raw"] := "'Array.of.call(T1, \"Bob\") throws a TypeError exception'";
__n9 := [ __n10, __n11, __n27 ];
__n5["arguments"] := __n9;
__n4["expression"] := __n5;
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "T2";
__n28["expression"] := __n29;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "assert";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "throws";
__n34["raw"] := "\"throws\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "TypeError";
__n37 := {  };
__n37["type"] := "FunctionExpression";
__n37["id"] := null;
__n38 := [  ];
__n37["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Array";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "of";
__n46["raw"] := "\"of\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["object"] := __n44;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "call";
__n47["raw"] := "\"call\"";
__n43["property"] := __n47;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "T2";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "Bob";
__n50["raw"] := "'Bob'";
__n48 := [ __n49, __n50 ];
__n42["arguments"] := __n48;
__n41["expression"] := __n42;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n51 := [  ];
__n39["variableDeclarations"] := __n51;
__n52 := [  ];
__n39["functionDeclarations"] := __n52;
__n39["codeType"] := "function";
__n39["strict"] := false;
__n37["body"] := __n39;
__n37["generator"] := false;
__n37["async"] := false;
__n37["expression"] := false;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "Array.of.call(T2, \"Bob\") throws a TypeError exception";
__n53["raw"] := "'Array.of.call(T2, \"Bob\") throws a TypeError exception'";
__n35 := [ __n36, __n37, __n53 ];
__n31["arguments"] := __n35;
__n30["expression"] := __n31;
__n1 := [ __n2, __n4, __n28, __n30 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n54 := [  ];
__n0["variableDeclarations"] := __n54;
__n56 := {  };
__n56["type"] := "FunctionDeclaration";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "T1";
__n56["id"] := __n57;
__n58 := [  ];
__n56["params"] := __n58;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "Object";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "preventExtensions";
__n65["raw"] := "\"preventExtensions\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n67 := {  };
__n67["type"] := "ThisExpression";
__n66 := [ __n67 ];
__n62["arguments"] := __n66;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n68 := [  ];
__n59["variableDeclarations"] := __n68;
__n69 := [  ];
__n59["functionDeclarations"] := __n69;
__n59["codeType"] := "function";
__n59["strict"] := false;
__n56["body"] := __n59;
__n56["generator"] := false;
__n56["async"] := false;
__n56["expression"] := false;
__n70 := {  };
__n70["type"] := "FunctionDeclaration";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "T2";
__n70["id"] := __n71;
__n72 := [  ];
__n70["params"] := __n72;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "Object";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "defineProperty";
__n79["raw"] := "\"defineProperty\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n76["callee"] := __n77;
__n81 := {  };
__n81["type"] := "ThisExpression";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 0.;
__n82["raw"] := "0";
__n83 := {  };
__n83["type"] := "ObjectExpression";
__n85 := {  };
__n85["type"] := "Property";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "configurable";
__n85["key"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := false;
__n87["raw"] := "false";
__n85["value"] := __n87;
__n85["computed"] := false;
__n85["kind"] := "init";
__n85["shorthand"] := false;
__n88 := {  };
__n88["type"] := "Property";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "writable";
__n88["key"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := true;
__n90["raw"] := "true";
__n88["value"] := __n90;
__n88["computed"] := false;
__n88["kind"] := "init";
__n88["shorthand"] := false;
__n91 := {  };
__n91["type"] := "Property";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "enumerable";
__n91["key"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := true;
__n93["raw"] := "true";
__n91["value"] := __n93;
__n91["computed"] := false;
__n91["kind"] := "init";
__n91["shorthand"] := false;
__n84 := [ __n85, __n88, __n91 ];
__n83["properties"] := __n84;
__n80 := [ __n81, __n82, __n83 ];
__n76["arguments"] := __n80;
__n75["expression"] := __n76;
__n74 := [ __n75 ];
__n73["body"] := __n74;
__n94 := [  ];
__n73["variableDeclarations"] := __n94;
__n95 := [  ];
__n73["functionDeclarations"] := __n95;
__n73["codeType"] := "function";
__n73["strict"] := false;
__n70["body"] := __n73;
__n70["generator"] := false;
__n70["async"] := false;
__n70["expression"] := false;
__n55 := [ __n56, __n70 ];
__n0["functionDeclarations"] := __n55;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}