function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "hits";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "value";
__n9["id"] := __n10;
__n9["init"] := null;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "_this_";
__n13["id"] := __n14;
__n13["init"] := null;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Pack";
__n15["expression"] := __n16;
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "result";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Array";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "of";
__n25["raw"] := "\"of\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["object"] := __n23;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "call";
__n26["raw"] := "\"call\"";
__n22["property"] := __n26;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Pack";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "wolves";
__n29["raw"] := "'wolves'";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "cards";
__n30["raw"] := "'cards'";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "cigarettes";
__n31["raw"] := "'cigarettes'";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "lies";
__n32["raw"] := "'lies'";
__n27 := [ __n28, __n29, __n30, __n31, __n32 ];
__n21["arguments"] := __n27;
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "assert";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "sameValue";
__n37["raw"] := "\"sameValue\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "hits";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 1.;
__n40["raw"] := "1";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "The value of hits is expected to be 1";
__n41["raw"] := "'The value of hits is expected to be 1'";
__n38 := [ __n39, __n40, __n41 ];
__n34["arguments"] := __n38;
__n33["expression"] := __n34;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "assert";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "sameValue";
__n46["raw"] := "\"sameValue\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "value";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 4.;
__n49["raw"] := "4";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "The value of value is expected to be 4";
__n50["raw"] := "'The value of value is expected to be 4'";
__n47 := [ __n48, __n49, __n50 ];
__n43["arguments"] := __n47;
__n42["expression"] := __n43;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "assert";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "sameValue";
__n55["raw"] := "\"sameValue\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "_this_";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "result";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "The value of _this_ is expected to equal the value of result";
__n59["raw"] := "'The value of _this_ is expected to equal the value of result'";
__n56 := [ __n57, __n58, __n59 ];
__n52["arguments"] := __n56;
__n51["expression"] := __n52;
__n1 := [ __n2, __n7, __n11, __n15, __n17, __n33, __n42, __n51 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n60 := [ "hits", "value", "_this_", "result" ];
__n0["variableDeclarations"] := __n60;
__n62 := {  };
__n62["type"] := "FunctionDeclaration";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Pack";
__n62["id"] := __n63;
__n64 := [  ];
__n62["params"] := __n64;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "Object";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "defineProperty";
__n71["raw"] := "\"defineProperty\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n73 := {  };
__n73["type"] := "ThisExpression";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "length";
__n74["raw"] := "\"length\"";
__n75 := {  };
__n75["type"] := "ObjectExpression";
__n77 := {  };
__n77["type"] := "Property";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "set";
__n77["key"] := __n78;
__n79 := {  };
__n79["type"] := "FunctionExpression";
__n79["id"] := null;
__n80 := [ "len" ];
__n79["params"] := __n80;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "UpdateExpression";
__n84["operator"] := "++";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "hits";
__n84["argument"] := __n85;
__n84["prefix"] := false;
__n83["expression"] := __n84;
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "AssignmentExpression";
__n87["operator"] := "=";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "value";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "len";
__n87["right"] := __n89;
__n86["expression"] := __n87;
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "AssignmentExpression";
__n91["operator"] := "=";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "_this_";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "ThisExpression";
__n91["right"] := __n93;
__n90["expression"] := __n91;
__n82 := [ __n83, __n86, __n90 ];
__n81["body"] := __n82;
__n94 := [  ];
__n81["variableDeclarations"] := __n94;
__n95 := [  ];
__n81["functionDeclarations"] := __n95;
__n81["codeType"] := "function";
__n81["strict"] := false;
__n79["body"] := __n81;
__n79["generator"] := false;
__n79["async"] := false;
__n79["expression"] := false;
__n77["value"] := __n79;
__n77["computed"] := false;
__n77["kind"] := "init";
__n77["shorthand"] := false;
__n76 := [ __n77 ];
__n75["properties"] := __n76;
__n72 := [ __n73, __n74, __n75 ];
__n68["arguments"] := __n72;
__n67["expression"] := __n68;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n96 := [  ];
__n65["variableDeclarations"] := __n96;
__n97 := [  ];
__n65["functionDeclarations"] := __n97;
__n65["codeType"] := "function";
__n65["strict"] := false;
__n62["body"] := __n65;
__n62["generator"] := false;
__n62["async"] := false;
__n62["expression"] := false;
__n61 := [ __n62 ];
__n0["functionDeclarations"] := __n61;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}