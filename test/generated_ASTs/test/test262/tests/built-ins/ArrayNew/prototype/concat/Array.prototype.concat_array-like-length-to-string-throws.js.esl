function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "objWithPoisonedLengthToString";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "length";
__n9["raw"] := "\"length\"";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "ObjectExpression";
__n12 := {  };
__n12["type"] := "Property";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "toString";
__n12["key"] := __n13;
__n14 := {  };
__n14["type"] := "FunctionExpression";
__n14["id"] := null;
__n15 := [  ];
__n14["params"] := __n15;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ThrowStatement";
__n19 := {  };
__n19["type"] := "NewExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Test262Error";
__n19["callee"] := __n20;
__n21 := [  ];
__n19["arguments"] := __n21;
__n18["argument"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n22 := [  ];
__n16["variableDeclarations"] := __n22;
__n23 := [  ];
__n16["functionDeclarations"] := __n23;
__n16["codeType"] := "function";
__n16["strict"] := false;
__n14["body"] := __n16;
__n14["generator"] := false;
__n14["async"] := false;
__n14["expression"] := false;
__n12["value"] := __n14;
__n12["computed"] := false;
__n12["kind"] := "init";
__n12["shorthand"] := false;
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "valueOf";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 'null;
__n26["raw"] := "\"'null\"";
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n11 := [ __n12, __n24 ];
__n10["properties"] := __n11;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n27 := {  };
__n27["type"] := "Property";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "1";
__n28["raw"] := "\"1\"";
__n27["key"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "A";
__n29["raw"] := "\"A\"";
__n27["value"] := __n29;
__n27["computed"] := false;
__n27["kind"] := "init";
__n27["shorthand"] := false;
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "3";
__n31["raw"] := "\"3\"";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "B";
__n32["raw"] := "\"B\"";
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n33 := {  };
__n33["type"] := "Property";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "5";
__n34["raw"] := "\"5\"";
__n33["key"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "C";
__n35["raw"] := "\"C\"";
__n33["value"] := __n35;
__n33["computed"] := false;
__n33["kind"] := "init";
__n33["shorthand"] := false;
__n7 := [ __n8, __n27, __n30, __n33 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "AssignmentExpression";
__n37["operator"] := "=";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n38["computed"] := true;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "objWithPoisonedLengthToString";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Symbol";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "isConcatSpreadable";
__n42["raw"] := "\"isConcatSpreadable\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n38["property"] := __n40;
__n37["left"] := __n38;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := true;
__n43["raw"] := "true";
__n37["right"] := __n43;
__n36["expression"] := __n37;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "assert";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "throws";
__n48["raw"] := "\"throws\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "Test262Error";
__n51 := {  };
__n51["type"] := "FunctionExpression";
__n51["id"] := null;
__n52 := [  ];
__n51["params"] := __n52;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "ArrayExpression";
__n59 := [  ];
__n58["elements"] := __n59;
__n57["object"] := __n58;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "concat";
__n60["raw"] := "\"concat\"";
__n57["property"] := __n60;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "objWithPoisonedLengthToString";
__n61 := [ __n62 ];
__n56["arguments"] := __n61;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n63 := [  ];
__n53["variableDeclarations"] := __n63;
__n64 := [  ];
__n53["functionDeclarations"] := __n64;
__n53["codeType"] := "function";
__n53["strict"] := false;
__n51["body"] := __n53;
__n51["generator"] := false;
__n51["async"] := false;
__n51["expression"] := false;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "[].concat(objWithPoisonedLengthToString) throws a Test262Error exception";
__n65["raw"] := "'[].concat(objWithPoisonedLengthToString) throws a Test262Error exception'";
__n49 := [ __n50, __n51, __n65 ];
__n45["arguments"] := __n49;
__n44["expression"] := __n45;
__n1 := [ __n2, __n36, __n44 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n66 := [ "objWithPoisonedLengthToString" ];
__n0["variableDeclarations"] := __n66;
__n67 := [  ];
__n0["functionDeclarations"] := __n67;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}