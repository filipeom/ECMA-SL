function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 1.;
__n8["raw"] := "1";
__n7 := [ null, __n8 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arr";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "x";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "concat";
__n16["raw"] := "\"concat\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "ArrayExpression";
__n19 := [  ];
__n18["elements"] := __n19;
__n20 := {  };
__n20["type"] := "ArrayExpression";
__n21 := [ null ];
__n20["elements"] := __n21;
__n17 := [ __n18, __n20 ];
__n13["arguments"] := __n17;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "AssignmentExpression";
__n23["operator"] := "=";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "arr";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "getClass";
__n26["raw"] := "\"getClass\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["left"] := __n24;
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Object";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "prototype";
__n30["raw"] := "\"prototype\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["object"] := __n28;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "toString";
__n31["raw"] := "\"toString\"";
__n27["property"] := __n31;
__n27["computed"] := true;
__n23["right"] := __n27;
__n22["expression"] := __n23;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "assert";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "sameValue";
__n36["raw"] := "\"sameValue\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "arr";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "getClass";
__n41["raw"] := "\"getClass\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n42 := [  ];
__n38["arguments"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "[object Array]";
__n43["raw"] := "\"[object Array]\"";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "arr.getClass() must return \"[object Array]\"";
__n44["raw"] := "'arr.getClass() must return \"[object Array]\"'";
__n37 := [ __n38, __n43, __n44 ];
__n33["arguments"] := __n37;
__n32["expression"] := __n33;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "assert";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "sameValue";
__n49["raw"] := "\"sameValue\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "MemberExpression";
__n51["computed"] := true;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "arr";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 0.;
__n53["raw"] := "0";
__n51["property"] := __n53;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "undefined";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "The value of arr[0] is expected to equal undefined";
__n55["raw"] := "'The value of arr[0] is expected to equal undefined'";
__n50 := [ __n51, __n54, __n55 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "assert";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "sameValue";
__n60["raw"] := "\"sameValue\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n62 := {  };
__n62["type"] := "MemberExpression";
__n62["computed"] := true;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "arr";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 1.;
__n64["raw"] := "1";
__n62["property"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 1.;
__n65["raw"] := "1";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "The value of arr[1] is expected to be 1";
__n66["raw"] := "'The value of arr[1] is expected to be 1'";
__n61 := [ __n62, __n65, __n66 ];
__n57["arguments"] := __n61;
__n56["expression"] := __n57;
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "assert";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "sameValue";
__n71["raw"] := "\"sameValue\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n73 := {  };
__n73["type"] := "MemberExpression";
__n73["computed"] := true;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "arr";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 2.;
__n75["raw"] := "2";
__n73["property"] := __n75;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "undefined";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "The value of arr[2] is expected to equal undefined";
__n77["raw"] := "'The value of arr[2] is expected to equal undefined'";
__n72 := [ __n73, __n76, __n77 ];
__n68["arguments"] := __n72;
__n67["expression"] := __n68;
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "assert";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "sameValue";
__n82["raw"] := "\"sameValue\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n79["callee"] := __n80;
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "arr";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "length";
__n86["raw"] := "\"length\"";
__n84["property"] := __n86;
__n84["computed"] := true;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 3.;
__n87["raw"] := "3";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "The value of arr.length is expected to be 3";
__n88["raw"] := "'The value of arr.length is expected to be 3'";
__n83 := [ __n84, __n87, __n88 ];
__n79["arguments"] := __n83;
__n78["expression"] := __n79;
__n1 := [ __n2, __n9, __n22, __n32, __n45, __n56, __n67, __n78 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n89 := [ "x", "arr" ];
__n0["variableDeclarations"] := __n89;
__n90 := [  ];
__n0["functionDeclarations"] := __n90;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}