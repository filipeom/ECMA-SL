function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "item";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "result";
__n10["id"] := __n11;
__n10["init"] := null;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "AssignmentExpression";
__n13["operator"] := "=";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n14["computed"] := true;
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "item";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Symbol";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "isConcatSpreadable";
__n18["raw"] := "\"isConcatSpreadable\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n14["property"] := __n16;
__n13["left"] := __n14;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "undefined";
__n13["right"] := __n19;
__n12["expression"] := __n13;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "=";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "result";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "ArrayExpression";
__n26 := [  ];
__n25["elements"] := __n26;
__n24["object"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "concat";
__n27["raw"] := "\"concat\"";
__n24["property"] := __n27;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "item";
__n28 := [ __n29 ];
__n23["arguments"] := __n28;
__n21["right"] := __n23;
__n20["expression"] := __n21;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "assert";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "sameValue";
__n34["raw"] := "\"sameValue\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "result";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "length";
__n38["raw"] := "\"length\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 0.;
__n39["raw"] := "0";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "The value of result.length is expected to be 0";
__n40["raw"] := "'The value of result.length is expected to be 0'";
__n35 := [ __n36, __n39, __n40 ];
__n31["arguments"] := __n35;
__n30["expression"] := __n31;
__n1 := [ __n2, __n8, __n12, __n20, __n30 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n41 := [ "item", "result" ];
__n0["variableDeclarations"] := __n41;
__n42 := [  ];
__n0["functionDeclarations"] := __n42;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}