function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "called";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "func";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "FunctionExpression";
__n13["id"] := null;
__n14 := [ "a", "b" ];
__n13["params"] := __n14;
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "ReturnStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Array";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "prototype";
__n23["raw"] := "\"prototype\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["object"] := __n21;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "every";
__n24["raw"] := "\"every\"";
__n20["property"] := __n24;
__n20["computed"] := true;
__n19["object"] := __n20;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "call";
__n25["raw"] := "\"call\"";
__n19["property"] := __n25;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "arguments";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "callbackfn";
__n26 := [ __n27, __n28 ];
__n18["arguments"] := __n26;
__n17["argument"] := __n18;
__n16 := [ __n17 ];
__n15["body"] := __n16;
__n29 := [  ];
__n15["variableDeclarations"] := __n29;
__n30 := [  ];
__n15["functionDeclarations"] := __n30;
__n15["codeType"] := "function";
__n15["strict"] := false;
__n13["body"] := __n15;
__n13["generator"] := false;
__n13["async"] := false;
__n13["expression"] := false;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "assert";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "func";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 11.;
__n38["raw"] := "11";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 9.;
__n39["raw"] := "9";
__n37 := [ __n38, __n39 ];
__n35["arguments"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "func(11, 9) !== true";
__n40["raw"] := "'func(11, 9) !== true'";
__n34 := [ __n35, __n40 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "assert";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "sameValue";
__n45["raw"] := "\"sameValue\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "called";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 2.;
__n48["raw"] := "2";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "called";
__n49["raw"] := "'called'";
__n46 := [ __n47, __n48, __n49 ];
__n42["arguments"] := __n46;
__n41["expression"] := __n42;
__n1 := [ __n2, __n7, __n9, __n31, __n41 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n50 := [ "called", "func" ];
__n0["variableDeclarations"] := __n50;
__n52 := {  };
__n52["type"] := "FunctionDeclaration";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "callbackfn";
__n52["id"] := __n53;
__n54 := [ "val", "idx", "obj" ];
__n52["params"] := __n54;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "UpdateExpression";
__n58["operator"] := "++";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "called";
__n58["argument"] := __n59;
__n58["prefix"] := false;
__n57["expression"] := __n58;
__n60 := {  };
__n60["type"] := "IfStatement";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "===";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "idx";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 0.;
__n63["raw"] := "0";
__n61["right"] := __n63;
__n60["test"] := __n61;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ReturnStatement";
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "===";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "val";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 11.;
__n69["raw"] := "11";
__n67["right"] := __n69;
__n66["argument"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n60["consequent"] := __n64;
__n70 := {  };
__n70["type"] := "IfStatement";
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "===";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "idx";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 1.;
__n73["raw"] := "1";
__n71["right"] := __n73;
__n70["test"] := __n71;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ReturnStatement";
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "===";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "val";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 9.;
__n79["raw"] := "9";
__n77["right"] := __n79;
__n76["argument"] := __n77;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n70["consequent"] := __n74;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ReturnStatement";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := false;
__n83["raw"] := "false";
__n82["argument"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n70["alternate"] := __n80;
__n60["alternate"] := __n70;
__n56 := [ __n57, __n60 ];
__n55["body"] := __n56;
__n84 := [  ];
__n55["variableDeclarations"] := __n84;
__n85 := [  ];
__n55["functionDeclarations"] := __n85;
__n55["codeType"] := "function";
__n55["strict"] := false;
__n52["body"] := __n55;
__n52["generator"] := false;
__n52["async"] := false;
__n52["expression"] := false;
__n51 := [ __n52 ];
__n0["functionDeclarations"] := __n51;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}