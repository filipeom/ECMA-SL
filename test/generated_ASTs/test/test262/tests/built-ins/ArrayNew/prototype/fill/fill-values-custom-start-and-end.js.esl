function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "compareArray";
__n6["raw"] := "\"compareArray\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "ArrayExpression";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 0.;
__n12["raw"] := "0";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 0.;
__n13["raw"] := "0";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 0.;
__n14["raw"] := "0";
__n11 := [ __n12, __n13, __n14 ];
__n10["elements"] := __n11;
__n9["object"] := __n10;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "fill";
__n15["raw"] := "\"fill\"";
__n9["property"] := __n15;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 8.;
__n17["raw"] := "8";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.;
__n18["raw"] := "1";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 2.;
__n19["raw"] := "2";
__n16 := [ __n17, __n18, __n19 ];
__n8["arguments"] := __n16;
__n20 := {  };
__n20["type"] := "ArrayExpression";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 0.;
__n22["raw"] := "0";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 8.;
__n23["raw"] := "8";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 0.;
__n24["raw"] := "0";
__n21 := [ __n22, __n23, __n24 ];
__n20["elements"] := __n21;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "[0, 0, 0].fill(8, 1, 2) must return [0, 8, 0]";
__n25["raw"] := "'[0, 0, 0].fill(8, 1, 2) must return [0, 8, 0]'";
__n7 := [ __n8, __n20, __n25 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "assert";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "compareArray";
__n30["raw"] := "\"compareArray\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "ArrayExpression";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 0.;
__n36["raw"] := "0";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 0.;
__n37["raw"] := "0";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 0.;
__n38["raw"] := "0";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 0.;
__n39["raw"] := "0";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 0.;
__n40["raw"] := "0";
__n35 := [ __n36, __n37, __n38, __n39, __n40 ];
__n34["elements"] := __n35;
__n33["object"] := __n34;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "fill";
__n41["raw"] := "\"fill\"";
__n33["property"] := __n41;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 8.;
__n43["raw"] := "8";
__n44 := {  };
__n44["type"] := "UnaryExpression";
__n44["operator"] := "-";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 3.;
__n45["raw"] := "3";
__n44["argument"] := __n45;
__n44["prefix"] := true;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 4.;
__n46["raw"] := "4";
__n42 := [ __n43, __n44, __n46 ];
__n32["arguments"] := __n42;
__n47 := {  };
__n47["type"] := "ArrayExpression";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 0.;
__n49["raw"] := "0";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 0.;
__n50["raw"] := "0";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 8.;
__n51["raw"] := "8";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 8.;
__n52["raw"] := "8";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 0.;
__n53["raw"] := "0";
__n48 := [ __n49, __n50, __n51, __n52, __n53 ];
__n47["elements"] := __n48;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "[0, 0, 0, 0, 0].fill(8, -3, 4) must return [0, 0, 8, 8, 0]";
__n54["raw"] := "'[0, 0, 0, 0, 0].fill(8, -3, 4) must return [0, 0, 8, 8, 0]'";
__n31 := [ __n32, __n47, __n54 ];
__n27["arguments"] := __n31;
__n26["expression"] := __n27;
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "assert";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "compareArray";
__n59["raw"] := "\"compareArray\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "ArrayExpression";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 0.;
__n65["raw"] := "0";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 0.;
__n66["raw"] := "0";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 0.;
__n67["raw"] := "0";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 0.;
__n68["raw"] := "0";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 0.;
__n69["raw"] := "0";
__n64 := [ __n65, __n66, __n67, __n68, __n69 ];
__n63["elements"] := __n64;
__n62["object"] := __n63;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "fill";
__n70["raw"] := "\"fill\"";
__n62["property"] := __n70;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 8.;
__n72["raw"] := "8";
__n73 := {  };
__n73["type"] := "UnaryExpression";
__n73["operator"] := "-";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 2.;
__n74["raw"] := "2";
__n73["argument"] := __n74;
__n73["prefix"] := true;
__n75 := {  };
__n75["type"] := "UnaryExpression";
__n75["operator"] := "-";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 1.;
__n76["raw"] := "1";
__n75["argument"] := __n76;
__n75["prefix"] := true;
__n71 := [ __n72, __n73, __n75 ];
__n61["arguments"] := __n71;
__n77 := {  };
__n77["type"] := "ArrayExpression";
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 0.;
__n79["raw"] := "0";
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 0.;
__n80["raw"] := "0";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 0.;
__n81["raw"] := "0";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 8.;
__n82["raw"] := "8";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 0.;
__n83["raw"] := "0";
__n78 := [ __n79, __n80, __n81, __n82, __n83 ];
__n77["elements"] := __n78;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "[0, 0, 0, 0, 0].fill(8, -2, -1) must return [0, 0, 0, 8, 0]";
__n84["raw"] := "'[0, 0, 0, 0, 0].fill(8, -2, -1) must return [0, 0, 0, 8, 0]'";
__n60 := [ __n61, __n77, __n84 ];
__n56["arguments"] := __n60;
__n55["expression"] := __n56;
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "assert";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "compareArray";
__n89["raw"] := "\"compareArray\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n86["callee"] := __n87;
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "MemberExpression";
__n93 := {  };
__n93["type"] := "ArrayExpression";
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 0.;
__n95["raw"] := "0";
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := 0.;
__n96["raw"] := "0";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 0.;
__n97["raw"] := "0";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 0.;
__n98["raw"] := "0";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 0.;
__n99["raw"] := "0";
__n94 := [ __n95, __n96, __n97, __n98, __n99 ];
__n93["elements"] := __n94;
__n92["object"] := __n93;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "fill";
__n100["raw"] := "\"fill\"";
__n92["property"] := __n100;
__n92["computed"] := true;
__n91["callee"] := __n92;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 8.;
__n102["raw"] := "8";
__n103 := {  };
__n103["type"] := "UnaryExpression";
__n103["operator"] := "-";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := 1.;
__n104["raw"] := "1";
__n103["argument"] := __n104;
__n103["prefix"] := true;
__n105 := {  };
__n105["type"] := "UnaryExpression";
__n105["operator"] := "-";
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 3.;
__n106["raw"] := "3";
__n105["argument"] := __n106;
__n105["prefix"] := true;
__n101 := [ __n102, __n103, __n105 ];
__n91["arguments"] := __n101;
__n107 := {  };
__n107["type"] := "ArrayExpression";
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := 0.;
__n109["raw"] := "0";
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 0.;
__n110["raw"] := "0";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 0.;
__n111["raw"] := "0";
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 0.;
__n112["raw"] := "0";
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := 0.;
__n113["raw"] := "0";
__n108 := [ __n109, __n110, __n111, __n112, __n113 ];
__n107["elements"] := __n108;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "[0, 0, 0, 0, 0].fill(8, -1, -3) must return [0, 0, 0, 0, 0]";
__n114["raw"] := "'[0, 0, 0, 0, 0].fill(8, -1, -3) must return [0, 0, 0, 0, 0]'";
__n90 := [ __n91, __n107, __n114 ];
__n86["arguments"] := __n90;
__n85["expression"] := __n86;
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "MemberExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "assert";
__n117["object"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "compareArray";
__n119["raw"] := "\"compareArray\"";
__n117["property"] := __n119;
__n117["computed"] := true;
__n116["callee"] := __n117;
__n121 := {  };
__n121["type"] := "CallExpression";
__n122 := {  };
__n122["type"] := "MemberExpression";
__n123 := {  };
__n123["type"] := "ArrayExpression";
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := 0.;
__n125["raw"] := "0";
__n124 := [ null, null, null, null, __n125 ];
__n123["elements"] := __n124;
__n122["object"] := __n123;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "fill";
__n126["raw"] := "\"fill\"";
__n122["property"] := __n126;
__n122["computed"] := true;
__n121["callee"] := __n122;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := 8.;
__n128["raw"] := "8";
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := 1.;
__n129["raw"] := "1";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := 3.;
__n130["raw"] := "3";
__n127 := [ __n128, __n129, __n130 ];
__n121["arguments"] := __n127;
__n131 := {  };
__n131["type"] := "ArrayExpression";
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := 8.;
__n133["raw"] := "8";
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 8.;
__n134["raw"] := "8";
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := 0.;
__n135["raw"] := "0";
__n132 := [ null, __n133, __n134, null, __n135 ];
__n131["elements"] := __n132;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "[, , , , 0].fill(8, 1, 3) must return [, 8, 8, , 0]";
__n136["raw"] := "'[, , , , 0].fill(8, 1, 3) must return [, 8, 8, , 0]'";
__n120 := [ __n121, __n131, __n136 ];
__n116["arguments"] := __n120;
__n115["expression"] := __n116;
__n1 := [ __n2, __n26, __n55, __n85, __n115 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n137 := [  ];
__n0["variableDeclarations"] := __n137;
__n138 := [  ];
__n0["functionDeclarations"] := __n138;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}