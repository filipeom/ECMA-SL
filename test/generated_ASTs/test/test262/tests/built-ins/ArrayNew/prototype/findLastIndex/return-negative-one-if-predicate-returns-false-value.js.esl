function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arr";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "Shoes";
__n8["raw"] := "'Shoes'";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "Car";
__n9["raw"] := "'Car'";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "Bike";
__n10["raw"] := "'Bike'";
__n7 := [ __n8, __n9, __n10 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "called";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 0.;
__n15["raw"] := "0";
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n16 := {  };
__n16["type"] := "VariableDeclaration";
__n18 := {  };
__n18["type"] := "VariableDeclarator";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "result";
__n18["id"] := __n19;
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "arr";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "findLastIndex";
__n23["raw"] := "\"findLastIndex\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "FunctionExpression";
__n25["id"] := null;
__n26 := [  ];
__n25["params"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "UpdateExpression";
__n30["operator"] := "++";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "called";
__n30["argument"] := __n31;
__n30["prefix"] := false;
__n29["expression"] := __n30;
__n32 := {  };
__n32["type"] := "ReturnStatement";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := false;
__n33["raw"] := "false";
__n32["argument"] := __n33;
__n28 := [ __n29, __n32 ];
__n27["body"] := __n28;
__n34 := [  ];
__n27["variableDeclarations"] := __n34;
__n35 := [  ];
__n27["functionDeclarations"] := __n35;
__n27["codeType"] := "function";
__n27["strict"] := false;
__n25["body"] := __n27;
__n25["generator"] := false;
__n25["async"] := false;
__n25["expression"] := false;
__n24 := [ __n25 ];
__n20["arguments"] := __n24;
__n18["init"] := __n20;
__n17 := [ __n18 ];
__n16["declarations"] := __n17;
__n16["kind"] := "var";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "assert";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "sameValue";
__n40["raw"] := "\"sameValue\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "called";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 3.;
__n43["raw"] := "3";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "predicate was called three times";
__n44["raw"] := "'predicate was called three times'";
__n41 := [ __n42, __n43, __n44 ];
__n37["arguments"] := __n41;
__n36["expression"] := __n37;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "assert";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "sameValue";
__n49["raw"] := "\"sameValue\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "result";
__n52 := {  };
__n52["type"] := "UnaryExpression";
__n52["operator"] := "-";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 1.;
__n53["raw"] := "1";
__n52["argument"] := __n53;
__n52["prefix"] := true;
__n50 := [ __n51, __n52 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "AssignmentExpression";
__n55["operator"] := "=";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "result";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "arr";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "findLastIndex";
__n60["raw"] := "\"findLastIndex\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n62 := {  };
__n62["type"] := "FunctionExpression";
__n62["id"] := null;
__n63 := [  ];
__n62["params"] := __n63;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ReturnStatement";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "";
__n67["raw"] := "''";
__n66["argument"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n68 := [  ];
__n64["variableDeclarations"] := __n68;
__n69 := [  ];
__n64["functionDeclarations"] := __n69;
__n64["codeType"] := "function";
__n64["strict"] := false;
__n62["body"] := __n64;
__n62["generator"] := false;
__n62["async"] := false;
__n62["expression"] := false;
__n61 := [ __n62 ];
__n57["arguments"] := __n61;
__n55["right"] := __n57;
__n54["expression"] := __n55;
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "assert";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "sameValue";
__n74["raw"] := "\"sameValue\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "result";
__n77 := {  };
__n77["type"] := "UnaryExpression";
__n77["operator"] := "-";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 1.;
__n78["raw"] := "1";
__n77["argument"] := __n78;
__n77["prefix"] := true;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "coerced string";
__n79["raw"] := "'coerced string'";
__n75 := [ __n76, __n77, __n79 ];
__n71["arguments"] := __n75;
__n70["expression"] := __n71;
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "AssignmentExpression";
__n81["operator"] := "=";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "result";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "arr";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "findLastIndex";
__n86["raw"] := "\"findLastIndex\"";
__n84["property"] := __n86;
__n84["computed"] := true;
__n83["callee"] := __n84;
__n88 := {  };
__n88["type"] := "FunctionExpression";
__n88["id"] := null;
__n89 := [  ];
__n88["params"] := __n89;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ReturnStatement";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "undefined";
__n92["argument"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n94 := [  ];
__n90["variableDeclarations"] := __n94;
__n95 := [  ];
__n90["functionDeclarations"] := __n95;
__n90["codeType"] := "function";
__n90["strict"] := false;
__n88["body"] := __n90;
__n88["generator"] := false;
__n88["async"] := false;
__n88["expression"] := false;
__n87 := [ __n88 ];
__n83["arguments"] := __n87;
__n81["right"] := __n83;
__n80["expression"] := __n81;
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "MemberExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "assert";
__n98["object"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "sameValue";
__n100["raw"] := "\"sameValue\"";
__n98["property"] := __n100;
__n98["computed"] := true;
__n97["callee"] := __n98;
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "result";
__n103 := {  };
__n103["type"] := "UnaryExpression";
__n103["operator"] := "-";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := 1.;
__n104["raw"] := "1";
__n103["argument"] := __n104;
__n103["prefix"] := true;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "coerced undefined";
__n105["raw"] := "'coerced undefined'";
__n101 := [ __n102, __n103, __n105 ];
__n97["arguments"] := __n101;
__n96["expression"] := __n97;
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "AssignmentExpression";
__n107["operator"] := "=";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "result";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "MemberExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "arr";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "findLastIndex";
__n112["raw"] := "\"findLastIndex\"";
__n110["property"] := __n112;
__n110["computed"] := true;
__n109["callee"] := __n110;
__n114 := {  };
__n114["type"] := "FunctionExpression";
__n114["id"] := null;
__n115 := [  ];
__n114["params"] := __n115;
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ReturnStatement";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := 'null;
__n119["raw"] := "\"'null\"";
__n118["argument"] := __n119;
__n117 := [ __n118 ];
__n116["body"] := __n117;
__n120 := [  ];
__n116["variableDeclarations"] := __n120;
__n121 := [  ];
__n116["functionDeclarations"] := __n121;
__n116["codeType"] := "function";
__n116["strict"] := false;
__n114["body"] := __n116;
__n114["generator"] := false;
__n114["async"] := false;
__n114["expression"] := false;
__n113 := [ __n114 ];
__n109["arguments"] := __n113;
__n107["right"] := __n109;
__n106["expression"] := __n107;
__n122 := {  };
__n122["type"] := "ExpressionStatement";
__n123 := {  };
__n123["type"] := "CallExpression";
__n124 := {  };
__n124["type"] := "MemberExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "assert";
__n124["object"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "sameValue";
__n126["raw"] := "\"sameValue\"";
__n124["property"] := __n126;
__n124["computed"] := true;
__n123["callee"] := __n124;
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "result";
__n129 := {  };
__n129["type"] := "UnaryExpression";
__n129["operator"] := "-";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := 1.;
__n130["raw"] := "1";
__n129["argument"] := __n130;
__n129["prefix"] := true;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "coerced null";
__n131["raw"] := "'coerced null'";
__n127 := [ __n128, __n129, __n131 ];
__n123["arguments"] := __n127;
__n122["expression"] := __n123;
__n132 := {  };
__n132["type"] := "ExpressionStatement";
__n133 := {  };
__n133["type"] := "AssignmentExpression";
__n133["operator"] := "=";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "result";
__n133["left"] := __n134;
__n135 := {  };
__n135["type"] := "CallExpression";
__n136 := {  };
__n136["type"] := "MemberExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "arr";
__n136["object"] := __n137;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := "findLastIndex";
__n138["raw"] := "\"findLastIndex\"";
__n136["property"] := __n138;
__n136["computed"] := true;
__n135["callee"] := __n136;
__n140 := {  };
__n140["type"] := "FunctionExpression";
__n140["id"] := null;
__n141 := [  ];
__n140["params"] := __n141;
__n142 := {  };
__n142["type"] := "BlockStatement";
__n144 := {  };
__n144["type"] := "ReturnStatement";
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := 0.;
__n145["raw"] := "0";
__n144["argument"] := __n145;
__n143 := [ __n144 ];
__n142["body"] := __n143;
__n146 := [  ];
__n142["variableDeclarations"] := __n146;
__n147 := [  ];
__n142["functionDeclarations"] := __n147;
__n142["codeType"] := "function";
__n142["strict"] := false;
__n140["body"] := __n142;
__n140["generator"] := false;
__n140["async"] := false;
__n140["expression"] := false;
__n139 := [ __n140 ];
__n135["arguments"] := __n139;
__n133["right"] := __n135;
__n132["expression"] := __n133;
__n148 := {  };
__n148["type"] := "ExpressionStatement";
__n149 := {  };
__n149["type"] := "CallExpression";
__n150 := {  };
__n150["type"] := "MemberExpression";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "assert";
__n150["object"] := __n151;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := "sameValue";
__n152["raw"] := "\"sameValue\"";
__n150["property"] := __n152;
__n150["computed"] := true;
__n149["callee"] := __n150;
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "result";
__n155 := {  };
__n155["type"] := "UnaryExpression";
__n155["operator"] := "-";
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := 1.;
__n156["raw"] := "1";
__n155["argument"] := __n156;
__n155["prefix"] := true;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := "coerced 0";
__n157["raw"] := "'coerced 0'";
__n153 := [ __n154, __n155, __n157 ];
__n149["arguments"] := __n153;
__n148["expression"] := __n149;
__n158 := {  };
__n158["type"] := "ExpressionStatement";
__n159 := {  };
__n159["type"] := "AssignmentExpression";
__n159["operator"] := "=";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "result";
__n159["left"] := __n160;
__n161 := {  };
__n161["type"] := "CallExpression";
__n162 := {  };
__n162["type"] := "MemberExpression";
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "arr";
__n162["object"] := __n163;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := "findLastIndex";
__n164["raw"] := "\"findLastIndex\"";
__n162["property"] := __n164;
__n162["computed"] := true;
__n161["callee"] := __n162;
__n166 := {  };
__n166["type"] := "FunctionExpression";
__n166["id"] := null;
__n167 := [  ];
__n166["params"] := __n167;
__n168 := {  };
__n168["type"] := "BlockStatement";
__n170 := {  };
__n170["type"] := "ReturnStatement";
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "NaN";
__n170["argument"] := __n171;
__n169 := [ __n170 ];
__n168["body"] := __n169;
__n172 := [  ];
__n168["variableDeclarations"] := __n172;
__n173 := [  ];
__n168["functionDeclarations"] := __n173;
__n168["codeType"] := "function";
__n168["strict"] := false;
__n166["body"] := __n168;
__n166["generator"] := false;
__n166["async"] := false;
__n166["expression"] := false;
__n165 := [ __n166 ];
__n161["arguments"] := __n165;
__n159["right"] := __n161;
__n158["expression"] := __n159;
__n174 := {  };
__n174["type"] := "ExpressionStatement";
__n175 := {  };
__n175["type"] := "CallExpression";
__n176 := {  };
__n176["type"] := "MemberExpression";
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "assert";
__n176["object"] := __n177;
__n178 := {  };
__n178["type"] := "Literal";
__n178["value"] := "sameValue";
__n178["raw"] := "\"sameValue\"";
__n176["property"] := __n178;
__n176["computed"] := true;
__n175["callee"] := __n176;
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "result";
__n181 := {  };
__n181["type"] := "UnaryExpression";
__n181["operator"] := "-";
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := 1.;
__n182["raw"] := "1";
__n181["argument"] := __n182;
__n181["prefix"] := true;
__n183 := {  };
__n183["type"] := "Literal";
__n183["value"] := "coerced NaN";
__n183["raw"] := "'coerced NaN'";
__n179 := [ __n180, __n181, __n183 ];
__n175["arguments"] := __n179;
__n174["expression"] := __n175;
__n1 := [ __n2, __n11, __n16, __n36, __n45, __n54, __n70, __n80, __n96, __n106, __n122, __n132, __n148, __n158, __n174 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n184 := [ "arr", "called", "result" ];
__n0["variableDeclarations"] := __n184;
__n185 := [  ];
__n0["functionDeclarations"] := __n185;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}