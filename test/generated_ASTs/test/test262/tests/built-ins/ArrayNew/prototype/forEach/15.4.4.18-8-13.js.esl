function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "accessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "result";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "ArrayExpression";
__n16 := [  ];
__n15["elements"] := __n16;
__n14["object"] := __n15;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "forEach";
__n17["raw"] := "\"forEach\"";
__n14["property"] := __n17;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "callbackfn";
__n18 := [ __n19 ];
__n13["arguments"] := __n18;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "assert";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "sameValue";
__n24["raw"] := "\"sameValue\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "UnaryExpression";
__n26["operator"] := "typeof";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "result";
__n26["argument"] := __n27;
__n26["prefix"] := true;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "undefined";
__n28["raw"] := "\"undefined\"";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "typeof result";
__n29["raw"] := "'typeof result'";
__n25 := [ __n26, __n28, __n29 ];
__n21["arguments"] := __n25;
__n20["expression"] := __n21;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "assert";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "sameValue";
__n34["raw"] := "\"sameValue\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "accessed";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := false;
__n37["raw"] := "false";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "accessed";
__n38["raw"] := "'accessed'";
__n35 := [ __n36, __n37, __n38 ];
__n31["arguments"] := __n35;
__n30["expression"] := __n31;
__n1 := [ __n2, __n7, __n9, __n20, __n30 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n39 := [ "accessed", "result" ];
__n0["variableDeclarations"] := __n39;
__n41 := {  };
__n41["type"] := "FunctionDeclaration";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "callbackfn";
__n41["id"] := __n42;
__n43 := [ "val", "idx", "obj" ];
__n41["params"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "AssignmentExpression";
__n47["operator"] := "=";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "accessed";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := true;
__n49["raw"] := "true";
__n47["right"] := __n49;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n50 := [  ];
__n44["variableDeclarations"] := __n50;
__n51 := [  ];
__n44["functionDeclarations"] := __n51;
__n44["codeType"] := "function";
__n44["strict"] := false;
__n41["body"] := __n44;
__n41["generator"] := false;
__n41["async"] := false;
__n41["expression"] := false;
__n40 := [ __n41 ];
__n0["functionDeclarations"] := __n40;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}