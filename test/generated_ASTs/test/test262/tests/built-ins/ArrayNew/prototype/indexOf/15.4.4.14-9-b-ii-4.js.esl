function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "ArrayExpression";
__n12 := {  };
__n12["type"] := "UnaryExpression";
__n12["operator"] := "+";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "NaN";
__n12["argument"] := __n13;
__n12["prefix"] := true;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "NaN";
__n15 := {  };
__n15["type"] := "UnaryExpression";
__n15["operator"] := "-";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "NaN";
__n15["argument"] := __n16;
__n15["prefix"] := true;
__n11 := [ __n12, __n14, __n15 ];
__n10["elements"] := __n11;
__n9["object"] := __n10;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "indexOf";
__n17["raw"] := "\"indexOf\"";
__n9["property"] := __n17;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "NaN";
__n18 := [ __n19 ];
__n8["arguments"] := __n18;
__n20 := {  };
__n20["type"] := "UnaryExpression";
__n20["operator"] := "-";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 1.;
__n21["raw"] := "1";
__n20["argument"] := __n21;
__n20["prefix"] := true;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "[+NaN, NaN, -NaN].indexOf(NaN)";
__n22["raw"] := "'[+NaN, NaN, -NaN].indexOf(NaN)'";
__n7 := [ __n8, __n20, __n22 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n23 := [  ];
__n0["variableDeclarations"] := __n23;
__n24 := [  ];
__n0["functionDeclarations"] := __n24;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}