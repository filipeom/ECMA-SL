function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Array";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 0.;
__n9["raw"] := "0";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 2.;
__n11["raw"] := "2";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 3.;
__n12["raw"] := "3";
__n8 := [ __n9, __n10, __n11, __n12 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n13 := {  };
__n13["type"] := "IfStatement";
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "!==";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "x";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "join";
__n18["raw"] := "\"join\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "";
__n20["raw"] := "\"\"";
__n19 := [ __n20 ];
__n15["arguments"] := __n19;
__n14["left"] := __n15;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "0123";
__n21["raw"] := "\"0123\"";
__n14["right"] := __n21;
__n13["test"] := __n14;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ThrowStatement";
__n25 := {  };
__n25["type"] := "NewExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Test262Error";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "+";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "#0: x = new Array(0,1,2,3); x.join(\"\") === \"0123\". Actual: ";
__n29["raw"] := "'#0: x = new Array(0,1,2,3); x.join(\"\") === \"0123\". Actual: '";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "x";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "join";
__n33["raw"] := "\"join\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "";
__n35["raw"] := "\"\"";
__n34 := [ __n35 ];
__n30["arguments"] := __n34;
__n28["right"] := __n30;
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n24["argument"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n13["consequent"] := __n22;
__n13["alternate"] := null;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "AssignmentExpression";
__n37["operator"] := "=";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "x";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "NewExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Array";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 0.;
__n42["raw"] := "0";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 1.;
__n43["raw"] := "1";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := 2.;
__n44["raw"] := "2";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 3.;
__n45["raw"] := "3";
__n41 := [ __n42, __n43, __n44, __n45 ];
__n39["arguments"] := __n41;
__n37["right"] := __n39;
__n36["expression"] := __n37;
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "!==";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "x";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "join";
__n51["raw"] := "\"join\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["callee"] := __n49;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "\\";
__n53["raw"] := "\"\\\\\"";
__n52 := [ __n53 ];
__n48["arguments"] := __n52;
__n47["left"] := __n48;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "0\\1\\2\\3";
__n54["raw"] := "\"0\\\\1\\\\2\\\\3\"";
__n47["right"] := __n54;
__n46["test"] := __n47;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ThrowStatement";
__n58 := {  };
__n58["type"] := "NewExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Test262Error";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "#1: x = new Array(0,1,2,3); x.join(\"\\\") === \"0\\1\\2\\3\". Actual: ";
__n62["raw"] := "'#1: x = new Array(0,1,2,3); x.join(\"\\\\\") === \"0\\\\1\\\\2\\\\3\". Actual: '";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "x";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "join";
__n66["raw"] := "\"join\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "\\";
__n68["raw"] := "\"\\\\\"";
__n67 := [ __n68 ];
__n63["arguments"] := __n67;
__n61["right"] := __n63;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["argument"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n46["consequent"] := __n55;
__n46["alternate"] := null;
__n69 := {  };
__n69["type"] := "IfStatement";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "!==";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "x";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "join";
__n74["raw"] := "\"join\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "&";
__n76["raw"] := "\"&\"";
__n75 := [ __n76 ];
__n71["arguments"] := __n75;
__n70["left"] := __n71;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "0&1&2&3";
__n77["raw"] := "\"0&1&2&3\"";
__n70["right"] := __n77;
__n69["test"] := __n70;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "ThrowStatement";
__n81 := {  };
__n81["type"] := "NewExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "Test262Error";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "+";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "#2: x = new Array(0,1,2,3); x.join(\"&\") === \"0&1&2&3\". Actual: ";
__n85["raw"] := "'#2: x = new Array(0,1,2,3); x.join(\"&\") === \"0&1&2&3\". Actual: '";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "x";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "join";
__n89["raw"] := "\"join\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n86["callee"] := __n87;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "&";
__n91["raw"] := "\"&\"";
__n90 := [ __n91 ];
__n86["arguments"] := __n90;
__n84["right"] := __n86;
__n83 := [ __n84 ];
__n81["arguments"] := __n83;
__n80["argument"] := __n81;
__n79 := [ __n80 ];
__n78["body"] := __n79;
__n69["consequent"] := __n78;
__n69["alternate"] := null;
__n92 := {  };
__n92["type"] := "IfStatement";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "!==";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "x";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "join";
__n97["raw"] := "\"join\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["callee"] := __n95;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := true;
__n99["raw"] := "true";
__n98 := [ __n99 ];
__n94["arguments"] := __n98;
__n93["left"] := __n94;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "0true1true2true3";
__n100["raw"] := "\"0true1true2true3\"";
__n93["right"] := __n100;
__n92["test"] := __n93;
__n101 := {  };
__n101["type"] := "BlockStatement";
__n103 := {  };
__n103["type"] := "ThrowStatement";
__n104 := {  };
__n104["type"] := "NewExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "Test262Error";
__n104["callee"] := __n105;
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "+";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "#3: x = new Array(0,1,2,3); x.join(true) === \"0true1true2true3\". Actual: ";
__n108["raw"] := "'#3: x = new Array(0,1,2,3); x.join(true) === \"0true1true2true3\". Actual: '";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "MemberExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "x";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "join";
__n112["raw"] := "\"join\"";
__n110["property"] := __n112;
__n110["computed"] := true;
__n109["callee"] := __n110;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := true;
__n114["raw"] := "true";
__n113 := [ __n114 ];
__n109["arguments"] := __n113;
__n107["right"] := __n109;
__n106 := [ __n107 ];
__n104["arguments"] := __n106;
__n103["argument"] := __n104;
__n102 := [ __n103 ];
__n101["body"] := __n102;
__n92["consequent"] := __n101;
__n92["alternate"] := null;
__n115 := {  };
__n115["type"] := "IfStatement";
__n116 := {  };
__n116["type"] := "BinaryExpression";
__n116["operator"] := "!==";
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "MemberExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "x";
__n118["object"] := __n119;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "join";
__n120["raw"] := "\"join\"";
__n118["property"] := __n120;
__n118["computed"] := true;
__n117["callee"] := __n118;
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "Infinity";
__n121 := [ __n122 ];
__n117["arguments"] := __n121;
__n116["left"] := __n117;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "0Infinity1Infinity2Infinity3";
__n123["raw"] := "\"0Infinity1Infinity2Infinity3\"";
__n116["right"] := __n123;
__n115["test"] := __n116;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "ThrowStatement";
__n127 := {  };
__n127["type"] := "NewExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "Test262Error";
__n127["callee"] := __n128;
__n130 := {  };
__n130["type"] := "BinaryExpression";
__n130["operator"] := "+";
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "#4: x = new Array(0,1,2,3); x.join(Infinity) === \"0Infinity1Infinity2Infinity3\". Actual: ";
__n131["raw"] := "'#4: x = new Array(0,1,2,3); x.join(Infinity) === \"0Infinity1Infinity2Infinity3\". Actual: '";
__n130["left"] := __n131;
__n132 := {  };
__n132["type"] := "CallExpression";
__n133 := {  };
__n133["type"] := "MemberExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "x";
__n133["object"] := __n134;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "join";
__n135["raw"] := "\"join\"";
__n133["property"] := __n135;
__n133["computed"] := true;
__n132["callee"] := __n133;
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "Infinity";
__n136 := [ __n137 ];
__n132["arguments"] := __n136;
__n130["right"] := __n132;
__n129 := [ __n130 ];
__n127["arguments"] := __n129;
__n126["argument"] := __n127;
__n125 := [ __n126 ];
__n124["body"] := __n125;
__n115["consequent"] := __n124;
__n115["alternate"] := null;
__n138 := {  };
__n138["type"] := "IfStatement";
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "!==";
__n140 := {  };
__n140["type"] := "CallExpression";
__n141 := {  };
__n141["type"] := "MemberExpression";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "x";
__n141["object"] := __n142;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := "join";
__n143["raw"] := "\"join\"";
__n141["property"] := __n143;
__n141["computed"] := true;
__n140["callee"] := __n141;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := 'null;
__n145["raw"] := "\"'null\"";
__n144 := [ __n145 ];
__n140["arguments"] := __n144;
__n139["left"] := __n140;
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := "0null1null2null3";
__n146["raw"] := "\"0null1null2null3\"";
__n139["right"] := __n146;
__n138["test"] := __n139;
__n147 := {  };
__n147["type"] := "BlockStatement";
__n149 := {  };
__n149["type"] := "ThrowStatement";
__n150 := {  };
__n150["type"] := "NewExpression";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "Test262Error";
__n150["callee"] := __n151;
__n153 := {  };
__n153["type"] := "BinaryExpression";
__n153["operator"] := "+";
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "#3: 5 = new Array(0,1,2,3); x.join(null) === \"0null1null2null3\". Actual: ";
__n154["raw"] := "'#3: 5 = new Array(0,1,2,3); x.join(null) === \"0null1null2null3\". Actual: '";
__n153["left"] := __n154;
__n155 := {  };
__n155["type"] := "CallExpression";
__n156 := {  };
__n156["type"] := "MemberExpression";
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "x";
__n156["object"] := __n157;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := "join";
__n158["raw"] := "\"join\"";
__n156["property"] := __n158;
__n156["computed"] := true;
__n155["callee"] := __n156;
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := 'null;
__n160["raw"] := "\"'null\"";
__n159 := [ __n160 ];
__n155["arguments"] := __n159;
__n153["right"] := __n155;
__n152 := [ __n153 ];
__n150["arguments"] := __n152;
__n149["argument"] := __n150;
__n148 := [ __n149 ];
__n147["body"] := __n148;
__n138["consequent"] := __n147;
__n138["alternate"] := null;
__n161 := {  };
__n161["type"] := "IfStatement";
__n162 := {  };
__n162["type"] := "BinaryExpression";
__n162["operator"] := "!==";
__n163 := {  };
__n163["type"] := "CallExpression";
__n164 := {  };
__n164["type"] := "MemberExpression";
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "x";
__n164["object"] := __n165;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "join";
__n166["raw"] := "\"join\"";
__n164["property"] := __n166;
__n164["computed"] := true;
__n163["callee"] := __n164;
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "undefined";
__n167 := [ __n168 ];
__n163["arguments"] := __n167;
__n162["left"] := __n163;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := "0,1,2,3";
__n169["raw"] := "\"0,1,2,3\"";
__n162["right"] := __n169;
__n161["test"] := __n162;
__n170 := {  };
__n170["type"] := "BlockStatement";
__n172 := {  };
__n172["type"] := "ThrowStatement";
__n173 := {  };
__n173["type"] := "NewExpression";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "Test262Error";
__n173["callee"] := __n174;
__n176 := {  };
__n176["type"] := "BinaryExpression";
__n176["operator"] := "+";
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "#6: x = new Array(0,1,2,3); x.join(undefined) === \"0,1,2,3\". Actual: ";
__n177["raw"] := "'#6: x = new Array(0,1,2,3); x.join(undefined) === \"0,1,2,3\". Actual: '";
__n176["left"] := __n177;
__n178 := {  };
__n178["type"] := "CallExpression";
__n179 := {  };
__n179["type"] := "MemberExpression";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "x";
__n179["object"] := __n180;
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := "join";
__n181["raw"] := "\"join\"";
__n179["property"] := __n181;
__n179["computed"] := true;
__n178["callee"] := __n179;
__n183 := {  };
__n183["type"] := "Identifier";
__n183["name"] := "undefined";
__n182 := [ __n183 ];
__n178["arguments"] := __n182;
__n176["right"] := __n178;
__n175 := [ __n176 ];
__n173["arguments"] := __n175;
__n172["argument"] := __n173;
__n171 := [ __n172 ];
__n170["body"] := __n171;
__n161["consequent"] := __n170;
__n161["alternate"] := null;
__n184 := {  };
__n184["type"] := "IfStatement";
__n185 := {  };
__n185["type"] := "BinaryExpression";
__n185["operator"] := "!==";
__n186 := {  };
__n186["type"] := "CallExpression";
__n187 := {  };
__n187["type"] := "MemberExpression";
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "x";
__n187["object"] := __n188;
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := "join";
__n189["raw"] := "\"join\"";
__n187["property"] := __n189;
__n187["computed"] := true;
__n186["callee"] := __n187;
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "NaN";
__n190 := [ __n191 ];
__n186["arguments"] := __n190;
__n185["left"] := __n186;
__n192 := {  };
__n192["type"] := "Literal";
__n192["value"] := "0NaN1NaN2NaN3";
__n192["raw"] := "\"0NaN1NaN2NaN3\"";
__n185["right"] := __n192;
__n184["test"] := __n185;
__n193 := {  };
__n193["type"] := "BlockStatement";
__n195 := {  };
__n195["type"] := "ThrowStatement";
__n196 := {  };
__n196["type"] := "NewExpression";
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "Test262Error";
__n196["callee"] := __n197;
__n199 := {  };
__n199["type"] := "BinaryExpression";
__n199["operator"] := "+";
__n200 := {  };
__n200["type"] := "Literal";
__n200["value"] := "#7: x = new Array(0,1,2,3); x.join(NaN) === \"0NaN1NaN2NaN3\". Actual: ";
__n200["raw"] := "'#7: x = new Array(0,1,2,3); x.join(NaN) === \"0NaN1NaN2NaN3\". Actual: '";
__n199["left"] := __n200;
__n201 := {  };
__n201["type"] := "CallExpression";
__n202 := {  };
__n202["type"] := "MemberExpression";
__n203 := {  };
__n203["type"] := "Identifier";
__n203["name"] := "x";
__n202["object"] := __n203;
__n204 := {  };
__n204["type"] := "Literal";
__n204["value"] := "join";
__n204["raw"] := "\"join\"";
__n202["property"] := __n204;
__n202["computed"] := true;
__n201["callee"] := __n202;
__n206 := {  };
__n206["type"] := "Identifier";
__n206["name"] := "NaN";
__n205 := [ __n206 ];
__n201["arguments"] := __n205;
__n199["right"] := __n201;
__n198 := [ __n199 ];
__n196["arguments"] := __n198;
__n195["argument"] := __n196;
__n194 := [ __n195 ];
__n193["body"] := __n194;
__n184["consequent"] := __n193;
__n184["alternate"] := null;
__n1 := [ __n2, __n13, __n36, __n46, __n69, __n92, __n115, __n138, __n161, __n184 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n207 := [ "x" ];
__n0["variableDeclarations"] := __n207;
__n208 := [  ];
__n0["functionDeclarations"] := __n208;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}