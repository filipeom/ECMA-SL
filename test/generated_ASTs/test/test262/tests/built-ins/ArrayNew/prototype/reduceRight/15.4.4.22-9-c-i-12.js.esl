function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "testResult";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "AssignmentExpression";
__n10["operator"] := "=";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n11["computed"] := true;
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Array";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "prototype";
__n14["raw"] := "\"prototype\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["object"] := __n12;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n11["property"] := __n15;
__n10["left"] := __n11;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 11.;
__n16["raw"] := "11";
__n10["right"] := __n16;
__n9["expression"] := __n10;
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "arr";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "ArrayExpression";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 0.;
__n23["raw"] := "0";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 2.;
__n24["raw"] := "2";
__n22 := [ __n23, null, __n24 ];
__n21["elements"] := __n22;
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Object";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "defineProperty";
__n29["raw"] := "\"defineProperty\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "arr";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "1";
__n32["raw"] := "\"1\"";
__n33 := {  };
__n33["type"] := "ObjectExpression";
__n35 := {  };
__n35["type"] := "Property";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "get";
__n35["key"] := __n36;
__n37 := {  };
__n37["type"] := "FunctionExpression";
__n37["id"] := null;
__n38 := [  ];
__n37["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ReturnStatement";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "1";
__n42["raw"] := "\"1\"";
__n41["argument"] := __n42;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n43 := [  ];
__n39["variableDeclarations"] := __n43;
__n44 := [  ];
__n39["functionDeclarations"] := __n44;
__n39["codeType"] := "function";
__n39["strict"] := false;
__n37["body"] := __n39;
__n37["generator"] := false;
__n37["async"] := false;
__n37["expression"] := false;
__n35["value"] := __n37;
__n35["computed"] := false;
__n35["kind"] := "init";
__n35["shorthand"] := false;
__n45 := {  };
__n45["type"] := "Property";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "configurable";
__n45["key"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := true;
__n47["raw"] := "true";
__n45["value"] := __n47;
__n45["computed"] := false;
__n45["kind"] := "init";
__n45["shorthand"] := false;
__n34 := [ __n35, __n45 ];
__n33["properties"] := __n34;
__n30 := [ __n31, __n32, __n33 ];
__n26["arguments"] := __n30;
__n25["expression"] := __n26;
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "arr";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "reduceRight";
__n52["raw"] := "\"reduceRight\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "callbackfn";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "initialValue";
__n55["raw"] := "\"initialValue\"";
__n53 := [ __n54, __n55 ];
__n49["arguments"] := __n53;
__n48["expression"] := __n49;
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "assert";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "testResult";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "testResult !== true";
__n61["raw"] := "'testResult !== true'";
__n59 := [ __n60, __n61 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n1 := [ __n2, __n7, __n9, __n17, __n25, __n48, __n56 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n62 := [ "testResult", "arr" ];
__n0["variableDeclarations"] := __n62;
__n64 := {  };
__n64["type"] := "FunctionDeclaration";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "callbackfn";
__n64["id"] := __n65;
__n66 := [ "prevVal", "curVal", "idx", "obj" ];
__n64["params"] := __n66;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "IfStatement";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "===";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "idx";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.;
__n72["raw"] := "1";
__n70["right"] := __n72;
__n69["test"] := __n70;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "AssignmentExpression";
__n76["operator"] := "=";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "testResult";
__n76["left"] := __n77;
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "===";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "curVal";
__n78["left"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "1";
__n80["raw"] := "\"1\"";
__n78["right"] := __n80;
__n76["right"] := __n78;
__n75["expression"] := __n76;
__n74 := [ __n75 ];
__n73["body"] := __n74;
__n69["consequent"] := __n73;
__n69["alternate"] := null;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n81 := [  ];
__n67["variableDeclarations"] := __n81;
__n82 := [  ];
__n67["functionDeclarations"] := __n82;
__n67["codeType"] := "function";
__n67["strict"] := false;
__n64["body"] := __n67;
__n64["generator"] := false;
__n64["async"] := false;
__n64["expression"] := false;
__n63 := [ __n64 ];
__n0["functionDeclarations"] := __n63;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}