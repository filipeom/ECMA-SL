function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "callbackfn";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "obj";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ObjectExpression";
__n10 := {  };
__n10["type"] := "Property";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "length";
__n10["key"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 2.;
__n12["raw"] := "2";
__n10["value"] := __n12;
__n10["computed"] := false;
__n10["kind"] := "init";
__n10["shorthand"] := false;
__n9 := [ __n10 ];
__n8["properties"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Object";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "defineProperty";
__n17["raw"] := "\"defineProperty\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "obj";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "1";
__n20["raw"] := "\"1\"";
__n21 := {  };
__n21["type"] := "ObjectExpression";
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "set";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "FunctionExpression";
__n25["id"] := null;
__n26 := [  ];
__n25["params"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n28 := [  ];
__n27["body"] := __n28;
__n29 := [  ];
__n27["variableDeclarations"] := __n29;
__n30 := [  ];
__n27["functionDeclarations"] := __n30;
__n27["codeType"] := "function";
__n27["strict"] := false;
__n25["body"] := __n27;
__n25["generator"] := false;
__n25["async"] := false;
__n25["expression"] := false;
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n31 := {  };
__n31["type"] := "Property";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "configurable";
__n31["key"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := true;
__n33["raw"] := "true";
__n31["value"] := __n33;
__n31["computed"] := false;
__n31["kind"] := "init";
__n31["shorthand"] := false;
__n22 := [ __n23, __n31 ];
__n21["properties"] := __n22;
__n18 := [ __n19, __n20, __n21 ];
__n14["arguments"] := __n18;
__n13["expression"] := __n14;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "assert";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Array";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "prototype";
__n43["raw"] := "\"prototype\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["object"] := __n41;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "some";
__n44["raw"] := "\"some\"";
__n40["property"] := __n44;
__n40["computed"] := true;
__n39["object"] := __n40;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "call";
__n45["raw"] := "\"call\"";
__n39["property"] := __n45;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "obj";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "callbackfn";
__n46 := [ __n47, __n48 ];
__n38["arguments"] := __n46;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "Array.prototype.some.call(obj, callbackfn) !== true";
__n49["raw"] := "'Array.prototype.some.call(obj, callbackfn) !== true'";
__n37 := [ __n38, __n49 ];
__n35["arguments"] := __n37;
__n34["expression"] := __n35;
__n1 := [ __n2, __n4, __n13, __n34 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n50 := [ "obj" ];
__n0["variableDeclarations"] := __n50;
__n52 := {  };
__n52["type"] := "FunctionDeclaration";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "callbackfn";
__n52["id"] := __n53;
__n54 := [ "val", "idx", "obj" ];
__n52["params"] := __n54;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "===";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "idx";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 1.;
__n60["raw"] := "1";
__n58["right"] := __n60;
__n57["test"] := __n58;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ReturnStatement";
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "===";
__n65 := {  };
__n65["type"] := "UnaryExpression";
__n65["operator"] := "typeof";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "val";
__n65["argument"] := __n66;
__n65["prefix"] := true;
__n64["left"] := __n65;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "undefined";
__n67["raw"] := "\"undefined\"";
__n64["right"] := __n67;
__n63["argument"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n57["consequent"] := __n61;
__n57["alternate"] := null;
__n68 := {  };
__n68["type"] := "ReturnStatement";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := false;
__n69["raw"] := "false";
__n68["argument"] := __n69;
__n56 := [ __n57, __n68 ];
__n55["body"] := __n56;
__n70 := [  ];
__n55["variableDeclarations"] := __n70;
__n71 := [  ];
__n55["functionDeclarations"] := __n71;
__n55["codeType"] := "function";
__n55["strict"] := false;
__n52["body"] := __n55;
__n52["generator"] := false;
__n52["async"] := false;
__n52["expression"] := false;
__n51 := [ __n52 ];
__n0["functionDeclarations"] := __n51;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}