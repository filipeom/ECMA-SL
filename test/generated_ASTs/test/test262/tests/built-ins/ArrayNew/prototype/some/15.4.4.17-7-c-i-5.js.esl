function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "kValue";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 1000.;
__n6["raw"] := "1000";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "callbackfn";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "proto";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "ObjectExpression";
__n14 := [  ];
__n13["properties"] := __n14;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Object";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "defineProperty";
__n19["raw"] := "\"defineProperty\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "proto";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "0";
__n22["raw"] := "\"0\"";
__n23 := {  };
__n23["type"] := "ObjectExpression";
__n25 := {  };
__n25["type"] := "Property";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "get";
__n25["key"] := __n26;
__n27 := {  };
__n27["type"] := "FunctionExpression";
__n27["id"] := null;
__n28 := [  ];
__n27["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ReturnStatement";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 5.;
__n32["raw"] := "5";
__n31["argument"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n33 := [  ];
__n29["variableDeclarations"] := __n33;
__n34 := [  ];
__n29["functionDeclarations"] := __n34;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n27["body"] := __n29;
__n27["generator"] := false;
__n27["async"] := false;
__n27["expression"] := false;
__n25["value"] := __n27;
__n25["computed"] := false;
__n25["kind"] := "init";
__n25["shorthand"] := false;
__n35 := {  };
__n35["type"] := "Property";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "configurable";
__n35["key"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := true;
__n37["raw"] := "true";
__n35["value"] := __n37;
__n35["computed"] := false;
__n35["kind"] := "init";
__n35["shorthand"] := false;
__n24 := [ __n25, __n35 ];
__n23["properties"] := __n24;
__n20 := [ __n21, __n22, __n23 ];
__n16["arguments"] := __n20;
__n15["expression"] := __n16;
__n38 := {  };
__n38["type"] := "VariableDeclaration";
__n40 := {  };
__n40["type"] := "VariableDeclarator";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Con";
__n40["id"] := __n41;
__n42 := {  };
__n42["type"] := "FunctionExpression";
__n42["id"] := null;
__n43 := [  ];
__n42["params"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n45 := [  ];
__n44["body"] := __n45;
__n46 := [  ];
__n44["variableDeclarations"] := __n46;
__n47 := [  ];
__n44["functionDeclarations"] := __n47;
__n44["codeType"] := "function";
__n44["strict"] := false;
__n42["body"] := __n44;
__n42["generator"] := false;
__n42["async"] := false;
__n42["expression"] := false;
__n40["init"] := __n42;
__n39 := [ __n40 ];
__n38["declarations"] := __n39;
__n38["kind"] := "var";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "AssignmentExpression";
__n49["operator"] := "=";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "Con";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "prototype";
__n52["raw"] := "\"prototype\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["left"] := __n50;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "proto";
__n49["right"] := __n53;
__n48["expression"] := __n49;
__n54 := {  };
__n54["type"] := "VariableDeclaration";
__n56 := {  };
__n56["type"] := "VariableDeclarator";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "child";
__n56["id"] := __n57;
__n58 := {  };
__n58["type"] := "NewExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Con";
__n58["callee"] := __n59;
__n60 := [  ];
__n58["arguments"] := __n60;
__n56["init"] := __n58;
__n55 := [ __n56 ];
__n54["declarations"] := __n55;
__n54["kind"] := "var";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "AssignmentExpression";
__n62["operator"] := "=";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "child";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "length";
__n65["raw"] := "\"length\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 2.;
__n66["raw"] := "2";
__n62["right"] := __n66;
__n61["expression"] := __n62;
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "Object";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "defineProperty";
__n71["raw"] := "\"defineProperty\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "child";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "0";
__n74["raw"] := "\"0\"";
__n75 := {  };
__n75["type"] := "ObjectExpression";
__n77 := {  };
__n77["type"] := "Property";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "value";
__n77["key"] := __n78;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "kValue";
__n77["value"] := __n79;
__n77["computed"] := false;
__n77["kind"] := "init";
__n77["shorthand"] := false;
__n80 := {  };
__n80["type"] := "Property";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "configurable";
__n80["key"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := true;
__n82["raw"] := "true";
__n80["value"] := __n82;
__n80["computed"] := false;
__n80["kind"] := "init";
__n80["shorthand"] := false;
__n76 := [ __n77, __n80 ];
__n75["properties"] := __n76;
__n72 := [ __n73, __n74, __n75 ];
__n68["arguments"] := __n72;
__n67["expression"] := __n68;
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "assert";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "Array";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "prototype";
__n92["raw"] := "\"prototype\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n89["object"] := __n90;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "some";
__n93["raw"] := "\"some\"";
__n89["property"] := __n93;
__n89["computed"] := true;
__n88["object"] := __n89;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "call";
__n94["raw"] := "\"call\"";
__n88["property"] := __n94;
__n88["computed"] := true;
__n87["callee"] := __n88;
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "child";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "callbackfn";
__n95 := [ __n96, __n97 ];
__n87["arguments"] := __n95;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "Array.prototype.some.call(child, callbackfn) !== true";
__n98["raw"] := "'Array.prototype.some.call(child, callbackfn) !== true'";
__n86 := [ __n87, __n98 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n1 := [ __n2, __n7, __n9, __n15, __n38, __n48, __n54, __n61, __n67, __n83 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n99 := [ "kValue", "proto", "Con", "child" ];
__n0["variableDeclarations"] := __n99;
__n101 := {  };
__n101["type"] := "FunctionDeclaration";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "callbackfn";
__n101["id"] := __n102;
__n103 := [ "val", "idx", "obj" ];
__n101["params"] := __n103;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "IfStatement";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "===";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "idx";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := 0.;
__n109["raw"] := "0";
__n107["right"] := __n109;
__n106["test"] := __n107;
__n110 := {  };
__n110["type"] := "BlockStatement";
__n112 := {  };
__n112["type"] := "ReturnStatement";
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := "===";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "val";
__n113["left"] := __n114;
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "kValue";
__n113["right"] := __n115;
__n112["argument"] := __n113;
__n111 := [ __n112 ];
__n110["body"] := __n111;
__n106["consequent"] := __n110;
__n106["alternate"] := null;
__n116 := {  };
__n116["type"] := "ReturnStatement";
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := false;
__n117["raw"] := "false";
__n116["argument"] := __n117;
__n105 := [ __n106, __n116 ];
__n104["body"] := __n105;
__n118 := [  ];
__n104["variableDeclarations"] := __n118;
__n119 := [  ];
__n104["functionDeclarations"] := __n119;
__n104["codeType"] := "function";
__n104["strict"] := false;
__n101["body"] := __n104;
__n101["generator"] := false;
__n101["async"] := false;
__n101["expression"] := false;
__n100 := [ __n101 ];
__n0["functionDeclarations"] := __n100;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}