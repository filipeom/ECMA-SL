function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Boolean";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "prototype";
__n8["raw"] := "\"prototype\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["object"] := __n6;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "toString";
__n9["raw"] := "\"toString\"";
__n5["property"] := __n9;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n10 := [  ];
__n4["arguments"] := __n10;
__n3["left"] := __n4;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "false";
__n11["raw"] := "\"false\"";
__n3["right"] := __n11;
__n2["test"] := __n3;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ThrowStatement";
__n15 := {  };
__n15["type"] := "NewExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Test262Error";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: Boolean.prototype.toString() === \"false\"";
__n18["raw"] := "'#1: Boolean.prototype.toString() === \"false\"'";
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["argument"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n2["consequent"] := __n12;
__n2["alternate"] := null;
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!==";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "NewExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Boolean";
__n23["callee"] := __n24;
__n25 := [  ];
__n23["arguments"] := __n25;
__n22["object"] := __n23;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "toString";
__n26["raw"] := "\"toString\"";
__n22["property"] := __n26;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n27 := [  ];
__n21["arguments"] := __n27;
__n20["left"] := __n21;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "false";
__n28["raw"] := "\"false\"";
__n20["right"] := __n28;
__n19["test"] := __n20;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ThrowStatement";
__n32 := {  };
__n32["type"] := "NewExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "Test262Error";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "#2: (new Boolean()).toString() === \"false\"";
__n35["raw"] := "'#2: (new Boolean()).toString() === \"false\"'";
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["argument"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n19["consequent"] := __n29;
__n19["alternate"] := null;
__n36 := {  };
__n36["type"] := "IfStatement";
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "!==";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "NewExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Boolean";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := false;
__n43["raw"] := "false";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["object"] := __n40;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "toString";
__n44["raw"] := "\"toString\"";
__n39["property"] := __n44;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n45 := [  ];
__n38["arguments"] := __n45;
__n37["left"] := __n38;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "false";
__n46["raw"] := "\"false\"";
__n37["right"] := __n46;
__n36["test"] := __n37;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ThrowStatement";
__n50 := {  };
__n50["type"] := "NewExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "Test262Error";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#3: (new Boolean(false)).toString() === \"false\"";
__n53["raw"] := "'#3: (new Boolean(false)).toString() === \"false\"'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["argument"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n36["consequent"] := __n47;
__n36["alternate"] := null;
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "NewExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "Boolean";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := true;
__n61["raw"] := "true";
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["object"] := __n58;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "toString";
__n62["raw"] := "\"toString\"";
__n57["property"] := __n62;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n63 := [  ];
__n56["arguments"] := __n63;
__n55["left"] := __n56;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "true";
__n64["raw"] := "\"true\"";
__n55["right"] := __n64;
__n54["test"] := __n55;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "ThrowStatement";
__n68 := {  };
__n68["type"] := "NewExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "Test262Error";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "#4: (new Boolean(true)).toString() === \"true\"";
__n71["raw"] := "'#4: (new Boolean(true)).toString() === \"true\"'";
__n70 := [ __n71 ];
__n68["arguments"] := __n70;
__n67["argument"] := __n68;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n54["consequent"] := __n65;
__n54["alternate"] := null;
__n72 := {  };
__n72["type"] := "IfStatement";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "!==";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "NewExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "Boolean";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 1.;
__n79["raw"] := "1";
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["object"] := __n76;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "toString";
__n80["raw"] := "\"toString\"";
__n75["property"] := __n80;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n81 := [  ];
__n74["arguments"] := __n81;
__n73["left"] := __n74;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "true";
__n82["raw"] := "\"true\"";
__n73["right"] := __n82;
__n72["test"] := __n73;
__n83 := {  };
__n83["type"] := "BlockStatement";
__n85 := {  };
__n85["type"] := "ThrowStatement";
__n86 := {  };
__n86["type"] := "NewExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "Test262Error";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "#5: (new Boolean(1)).toString() === \"true\"";
__n89["raw"] := "'#5: (new Boolean(1)).toString() === \"true\"'";
__n88 := [ __n89 ];
__n86["arguments"] := __n88;
__n85["argument"] := __n86;
__n84 := [ __n85 ];
__n83["body"] := __n84;
__n72["consequent"] := __n83;
__n72["alternate"] := null;
__n90 := {  };
__n90["type"] := "IfStatement";
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "!==";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "NewExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "Boolean";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 0.;
__n97["raw"] := "0";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["object"] := __n94;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "toString";
__n98["raw"] := "\"toString\"";
__n93["property"] := __n98;
__n93["computed"] := true;
__n92["callee"] := __n93;
__n99 := [  ];
__n92["arguments"] := __n99;
__n91["left"] := __n92;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "false";
__n100["raw"] := "\"false\"";
__n91["right"] := __n100;
__n90["test"] := __n91;
__n101 := {  };
__n101["type"] := "BlockStatement";
__n103 := {  };
__n103["type"] := "ThrowStatement";
__n104 := {  };
__n104["type"] := "NewExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "Test262Error";
__n104["callee"] := __n105;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "#6: (new Boolean(0)).toString() === \"false\"";
__n107["raw"] := "'#6: (new Boolean(0)).toString() === \"false\"'";
__n106 := [ __n107 ];
__n104["arguments"] := __n106;
__n103["argument"] := __n104;
__n102 := [ __n103 ];
__n101["body"] := __n102;
__n90["consequent"] := __n101;
__n90["alternate"] := null;
__n108 := {  };
__n108["type"] := "IfStatement";
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "!==";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "MemberExpression";
__n112 := {  };
__n112["type"] := "NewExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "Boolean";
__n112["callee"] := __n113;
__n115 := {  };
__n115["type"] := "NewExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "Object";
__n115["callee"] := __n116;
__n117 := [  ];
__n115["arguments"] := __n117;
__n114 := [ __n115 ];
__n112["arguments"] := __n114;
__n111["object"] := __n112;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "toString";
__n118["raw"] := "\"toString\"";
__n111["property"] := __n118;
__n111["computed"] := true;
__n110["callee"] := __n111;
__n119 := [  ];
__n110["arguments"] := __n119;
__n109["left"] := __n110;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "true";
__n120["raw"] := "\"true\"";
__n109["right"] := __n120;
__n108["test"] := __n109;
__n121 := {  };
__n121["type"] := "BlockStatement";
__n123 := {  };
__n123["type"] := "ThrowStatement";
__n124 := {  };
__n124["type"] := "NewExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "Test262Error";
__n124["callee"] := __n125;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "#7: (new Boolean(new Object())).toString() === \"true\"";
__n127["raw"] := "'#7: (new Boolean(new Object())).toString() === \"true\"'";
__n126 := [ __n127 ];
__n124["arguments"] := __n126;
__n123["argument"] := __n124;
__n122 := [ __n123 ];
__n121["body"] := __n122;
__n108["consequent"] := __n121;
__n108["alternate"] := null;
__n1 := [ __n2, __n19, __n36, __n54, __n72, __n90, __n108 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n128 := [  ];
__n0["variableDeclarations"] := __n128;
__n129 := [  ];
__n0["functionDeclarations"] := __n129;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}