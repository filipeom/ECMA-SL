function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "stringToPrimitive";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n10["computed"] := true;
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "stringToPrimitive";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Symbol";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "toPrimitive";
__n14["raw"] := "\"toPrimitive\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n10["property"] := __n12;
__n9["left"] := __n10;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [  ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ReturnStatement";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "2016-06-05T18:40:00.000Z";
__n20["raw"] := "'2016-06-05T18:40:00.000Z'";
__n19["argument"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n21 := [  ];
__n17["variableDeclarations"] := __n21;
__n22 := [  ];
__n17["functionDeclarations"] := __n22;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["async"] := false;
__n15["expression"] := false;
__n9["right"] := __n15;
__n8["expression"] := __n9;
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "assert";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "sameValue";
__n27["raw"] := "\"sameValue\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "NewExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Date";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "stringToPrimitive";
__n33 := [ __n34 ];
__n31["arguments"] := __n33;
__n30["object"] := __n31;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "getTime";
__n35["raw"] := "\"getTime\"";
__n30["property"] := __n35;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n36 := [  ];
__n29["arguments"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 1465152000000.;
__n37["raw"] := "1465152000000";
__n28 := [ __n29, __n37 ];
__n24["arguments"] := __n28;
__n23["expression"] := __n24;
__n1 := [ __n2, __n8, __n23 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n38 := [ "stringToPrimitive" ];
__n0["variableDeclarations"] := __n38;
__n39 := [  ];
__n0["functionDeclarations"] := __n39;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}