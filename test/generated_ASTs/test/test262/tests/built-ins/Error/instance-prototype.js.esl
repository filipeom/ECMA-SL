function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Error";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "prototype";
__n12["raw"] := "\"prototype\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["object"] := __n10;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "isPrototypeOf";
__n13["raw"] := "\"isPrototypeOf\"";
__n9["property"] := __n13;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n15 := {  };
__n15["type"] := "NewExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Error";
__n15["callee"] := __n16;
__n17 := [  ];
__n15["arguments"] := __n17;
__n14 := [ __n15 ];
__n8["arguments"] := __n14;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := true;
__n18["raw"] := "true";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "Error.prototype.isPrototypeOf(new Error()) returns true";
__n19["raw"] := "'Error.prototype.isPrototypeOf(new Error()) returns true'";
__n7 := [ __n8, __n18, __n19 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "assert";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "sameValue";
__n24["raw"] := "\"sameValue\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Error";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "prototype";
__n30["raw"] := "\"prototype\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["object"] := __n28;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "isPrototypeOf";
__n31["raw"] := "\"isPrototypeOf\"";
__n27["property"] := __n31;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Error";
__n33["callee"] := __n34;
__n35 := [  ];
__n33["arguments"] := __n35;
__n32 := [ __n33 ];
__n26["arguments"] := __n32;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := true;
__n36["raw"] := "true";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "Error.prototype.isPrototypeOf(Error()) returns true";
__n37["raw"] := "'Error.prototype.isPrototypeOf(Error()) returns true'";
__n25 := [ __n26, __n36, __n37 ];
__n21["arguments"] := __n25;
__n20["expression"] := __n21;
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "verifyNotEnumerable";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Error";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "prototype";
__n43["raw"] := "'prototype'";
__n41 := [ __n42, __n43 ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "verifyNotWritable";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "Error";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "prototype";
__n49["raw"] := "'prototype'";
__n47 := [ __n48, __n49 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "verifyNotConfigurable";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "Error";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "prototype";
__n55["raw"] := "'prototype'";
__n53 := [ __n54, __n55 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n1 := [ __n2, __n20, __n38, __n44, __n50 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n56 := [  ];
__n0["variableDeclarations"] := __n56;
__n57 := [  ];
__n0["functionDeclarations"] := __n57;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}