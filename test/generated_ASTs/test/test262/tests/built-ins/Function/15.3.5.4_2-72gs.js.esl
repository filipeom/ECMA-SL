function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "f";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "EmptyStatement";
__n5 := {  };
__n5["type"] := "ExpressionStatement";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "assert";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "throws";
__n9["raw"] := "\"throws\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "TypeError";
__n12 := {  };
__n12["type"] := "FunctionExpression";
__n12["id"] := null;
__n13 := [  ];
__n12["params"] := __n13;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "f";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "bind";
__n21["raw"] := "\"bind\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "undefined";
__n22 := [ __n23 ];
__n18["arguments"] := __n22;
__n17["callee"] := __n18;
__n24 := [  ];
__n17["arguments"] := __n24;
__n16["expression"] := __n17;
__n15 := [ __n16 ];
__n14["body"] := __n15;
__n25 := [  ];
__n14["variableDeclarations"] := __n25;
__n26 := [  ];
__n14["functionDeclarations"] := __n26;
__n14["codeType"] := "function";
__n14["strict"] := false;
__n12["body"] := __n14;
__n12["generator"] := false;
__n12["async"] := false;
__n12["expression"] := false;
__n10 := [ __n11, __n12 ];
__n6["arguments"] := __n10;
__n5["expression"] := __n6;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "gNonStrict";
__n27["expression"] := __n28;
__n1 := [ __n2, __n4, __n5, __n27 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n29 := [  ];
__n0["variableDeclarations"] := __n29;
__n31 := {  };
__n31["type"] := "FunctionDeclaration";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "f";
__n31["id"] := __n32;
__n33 := [  ];
__n31["params"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "use strict";
__n37["raw"] := "\"use strict\"";
__n36["expression"] := __n37;
__n36["directive"] := "use strict";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "gNonStrict";
__n39["callee"] := __n40;
__n41 := [  ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n35 := [ __n36, __n38 ];
__n34["body"] := __n35;
__n42 := [  ];
__n34["variableDeclarations"] := __n42;
__n43 := [  ];
__n34["functionDeclarations"] := __n43;
__n34["codeType"] := "function";
__n34["strict"] := true;
__n31["body"] := __n34;
__n31["generator"] := false;
__n31["async"] := false;
__n31["expression"] := false;
__n44 := {  };
__n44["type"] := "FunctionDeclaration";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "gNonStrict";
__n44["id"] := __n45;
__n46 := [  ];
__n44["params"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ReturnStatement";
__n50 := {  };
__n50["type"] := "LogicalExpression";
__n50["operator"] := "||";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "gNonStrict";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "caller";
__n53["raw"] := "\"caller\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["left"] := __n51;
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "gNonStrict";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "caller";
__n57["raw"] := "\"caller\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["object"] := __n55;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "throwTypeError";
__n58["raw"] := "\"throwTypeError\"";
__n54["property"] := __n58;
__n54["computed"] := true;
__n50["right"] := __n54;
__n49["argument"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n59 := [  ];
__n47["variableDeclarations"] := __n59;
__n60 := [  ];
__n47["functionDeclarations"] := __n60;
__n47["codeType"] := "function";
__n47["strict"] := false;
__n44["body"] := __n47;
__n44["generator"] := false;
__n44["async"] := false;
__n44["expression"] := false;
__n30 := [ __n31, __n44 ];
__n0["functionDeclarations"] := __n30;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}