function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "global";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ThisExpression";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "f";
__n7["expression"] := __n8;
__n9 := {  };
__n9["type"] := "EmptyStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "assert";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "throws";
__n14["raw"] := "\"throws\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "TypeError";
__n17 := {  };
__n17["type"] := "FunctionExpression";
__n17["id"] := null;
__n18 := [  ];
__n17["params"] := __n18;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "f";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "bind";
__n26["raw"] := "\"bind\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "global";
__n27 := [ __n28 ];
__n23["arguments"] := __n27;
__n22["callee"] := __n23;
__n29 := [  ];
__n22["arguments"] := __n29;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n30 := [  ];
__n19["variableDeclarations"] := __n30;
__n31 := [  ];
__n19["functionDeclarations"] := __n31;
__n19["codeType"] := "function";
__n19["strict"] := false;
__n17["body"] := __n19;
__n17["generator"] := false;
__n17["async"] := false;
__n17["expression"] := false;
__n15 := [ __n16, __n17 ];
__n11["arguments"] := __n15;
__n10["expression"] := __n11;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "gNonStrict";
__n32["expression"] := __n33;
__n1 := [ __n2, __n7, __n9, __n10, __n32 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n34 := [ "global" ];
__n0["variableDeclarations"] := __n34;
__n36 := {  };
__n36["type"] := "FunctionDeclaration";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "f";
__n36["id"] := __n37;
__n38 := [  ];
__n36["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "use strict";
__n42["raw"] := "\"use strict\"";
__n41["expression"] := __n42;
__n41["directive"] := "use strict";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "gNonStrict";
__n44["callee"] := __n45;
__n46 := [  ];
__n44["arguments"] := __n46;
__n43["expression"] := __n44;
__n40 := [ __n41, __n43 ];
__n39["body"] := __n40;
__n47 := [  ];
__n39["variableDeclarations"] := __n47;
__n48 := [  ];
__n39["functionDeclarations"] := __n48;
__n39["codeType"] := "function";
__n39["strict"] := true;
__n36["body"] := __n39;
__n36["generator"] := false;
__n36["async"] := false;
__n36["expression"] := false;
__n49 := {  };
__n49["type"] := "FunctionDeclaration";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "gNonStrict";
__n49["id"] := __n50;
__n51 := [  ];
__n49["params"] := __n51;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ReturnStatement";
__n55 := {  };
__n55["type"] := "LogicalExpression";
__n55["operator"] := "||";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "gNonStrict";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "caller";
__n58["raw"] := "\"caller\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["left"] := __n56;
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "gNonStrict";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "caller";
__n62["raw"] := "\"caller\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["object"] := __n60;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "throwTypeError";
__n63["raw"] := "\"throwTypeError\"";
__n59["property"] := __n63;
__n59["computed"] := true;
__n55["right"] := __n59;
__n54["argument"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n64 := [  ];
__n52["variableDeclarations"] := __n64;
__n65 := [  ];
__n52["functionDeclarations"] := __n65;
__n52["codeType"] := "function";
__n52["strict"] := false;
__n49["body"] := __n52;
__n49["generator"] := false;
__n49["async"] := false;
__n49["expression"] := false;
__n35 := [ __n36, __n49 ];
__n0["functionDeclarations"] := __n35;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}