function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "o";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "gNonStrict";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "tmp";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "Object";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "getOwnPropertyDescriptor";
__n22["raw"] := "\"getOwnPropertyDescriptor\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "o";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "gNonStrict";
__n25["raw"] := "\"gNonStrict\"";
__n23 := [ __n24, __n25 ];
__n19["arguments"] := __n23;
__n18["object"] := __n19;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "get";
__n26["raw"] := "\"get\"";
__n18["property"] := __n26;
__n18["computed"] := true;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n27 := {  };
__n27["type"] := "ReturnStatement";
__n28 := {  };
__n28["type"] := "LogicalExpression";
__n28["operator"] := "||";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "tmp";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "caller";
__n31["raw"] := "\"caller\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["left"] := __n29;
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "tmp";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "caller";
__n35["raw"] := "\"caller\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["object"] := __n33;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "throwTypeError";
__n36["raw"] := "\"throwTypeError\"";
__n32["property"] := __n36;
__n32["computed"] := true;
__n28["right"] := __n32;
__n27["argument"] := __n28;
__n13 := [ __n14, __n27 ];
__n12["body"] := __n13;
__n37 := [ "tmp" ];
__n12["variableDeclarations"] := __n37;
__n38 := [  ];
__n12["functionDeclarations"] := __n38;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "get";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "f";
__n39["expression"] := __n40;
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "assert";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "throws";
__n45["raw"] := "\"throws\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "TypeError";
__n48 := {  };
__n48["type"] := "FunctionExpression";
__n48["id"] := null;
__n49 := [  ];
__n48["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "f";
__n53["callee"] := __n54;
__n55 := [  ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n56 := [  ];
__n50["variableDeclarations"] := __n56;
__n57 := [  ];
__n50["functionDeclarations"] := __n57;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n48["body"] := __n50;
__n48["generator"] := false;
__n48["async"] := false;
__n48["expression"] := false;
__n46 := [ __n47, __n48 ];
__n42["arguments"] := __n46;
__n41["expression"] := __n42;
__n1 := [ __n2, __n39, __n41 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n58 := [ "o" ];
__n0["variableDeclarations"] := __n58;
__n60 := {  };
__n60["type"] := "FunctionDeclaration";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "f";
__n60["id"] := __n61;
__n62 := [  ];
__n60["params"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "use strict";
__n66["raw"] := "\"use strict\"";
__n65["expression"] := __n66;
__n65["directive"] := "use strict";
__n67 := {  };
__n67["type"] := "ReturnStatement";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "o";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "gNonStrict";
__n70["raw"] := "\"gNonStrict\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["argument"] := __n68;
__n64 := [ __n65, __n67 ];
__n63["body"] := __n64;
__n71 := [  ];
__n63["variableDeclarations"] := __n71;
__n72 := [  ];
__n63["functionDeclarations"] := __n72;
__n63["codeType"] := "function";
__n63["strict"] := true;
__n60["body"] := __n63;
__n60["generator"] := false;
__n60["async"] := false;
__n60["expression"] := false;
__n59 := [ __n60 ];
__n0["functionDeclarations"] := __n59;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}