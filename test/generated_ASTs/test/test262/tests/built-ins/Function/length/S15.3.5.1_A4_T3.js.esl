function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "f";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Function";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "arg1,arg2,arg3";
__n9["raw"] := "\"arg1,arg2,arg3\"";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "arg1,arg2";
__n10["raw"] := "\"arg1,arg2\"";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "arg3";
__n11["raw"] := "\"arg3\"";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 'null;
__n12["raw"] := "\"'null\"";
__n8 := [ __n9, __n10, __n11, __n12 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n13 := {  };
__n13["type"] := "IfStatement";
__n14 := {  };
__n14["type"] := "UnaryExpression";
__n14["operator"] := "!";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "f";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "hasOwnProperty";
__n18["raw"] := "\"hasOwnProperty\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "length";
__n20["raw"] := "'length'";
__n19 := [ __n20 ];
__n15["arguments"] := __n19;
__n14["argument"] := __n15;
__n14["prefix"] := true;
__n13["test"] := __n14;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "$ERROR";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "#1: the function has length property.";
__n27["raw"] := "'#1: the function has length property.'";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n13["consequent"] := __n21;
__n13["alternate"] := null;
__n28 := {  };
__n28["type"] := "ForInStatement";
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "key";
__n29["id"] := __n30;
__n29["init"] := null;
__n28["left"] := __n29;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "f";
__n28["right"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "IfStatement";
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "==";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "key";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "length";
__n37["raw"] := "\"length\"";
__n35["right"] := __n37;
__n34["test"] := __n35;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "VariableDeclaration";
__n42 := {  };
__n42["type"] := "VariableDeclarator";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "lengthenumed";
__n42["id"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := true;
__n44["raw"] := "true";
__n42["init"] := __n44;
__n41 := [ __n42 ];
__n40["declarations"] := __n41;
__n40["kind"] := "var";
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n34["consequent"] := __n38;
__n34["alternate"] := null;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n28["body"] := __n32;
__n28["each"] := false;
__n45 := {  };
__n45["type"] := "IfStatement";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "lengthenumed";
__n45["test"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$ERROR";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#2: the length property has the attributes { DontEnum }";
__n53["raw"] := "'#2: the length property has the attributes { DontEnum }'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n45["consequent"] := __n47;
__n45["alternate"] := null;
__n1 := [ __n2, __n13, __n28, __n45 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n54 := [ "f", "key", "lengthenumed" ];
__n0["variableDeclarations"] := __n54;
__n55 := [  ];
__n0["functionDeclarations"] := __n55;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}