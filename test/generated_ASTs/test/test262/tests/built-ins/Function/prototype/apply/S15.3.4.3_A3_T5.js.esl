function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "FACTORY";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "EmptyStatement";
__n5 := {  };
__n5["type"] := "VariableDeclaration";
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "obj";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "NewExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "FACTORY";
__n9["callee"] := __n10;
__n11 := [  ];
__n9["arguments"] := __n11;
__n7["init"] := __n9;
__n6 := [ __n7 ];
__n5["declarations"] := __n6;
__n5["kind"] := "var";
__n12 := {  };
__n12["type"] := "IfStatement";
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "!==";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n14["computed"] := true;
__n15 := {  };
__n15["type"] := "ThisExpression";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "feat";
__n16["raw"] := "\"feat\"";
__n14["property"] := __n16;
__n13["left"] := __n14;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "in da haus";
__n17["raw"] := "\"in da haus\"";
__n13["right"] := __n17;
__n12["test"] := __n13;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "$ERROR";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "#1: If thisArg is null or undefined, the called function is passed the global object as the this value";
__n24["raw"] := "'#1: If thisArg is null or undefined, the called function is passed the global object as the this value'";
__n23 := [ __n24 ];
__n21["arguments"] := __n23;
__n20["expression"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n12["consequent"] := __n18;
__n12["alternate"] := null;
__n25 := {  };
__n25["type"] := "IfStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "!==";
__n27 := {  };
__n27["type"] := "UnaryExpression";
__n27["operator"] := "typeof";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "obj";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "feat";
__n30["raw"] := "\"feat\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["argument"] := __n28;
__n27["prefix"] := true;
__n26["left"] := __n27;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "undefined";
__n31["raw"] := "\"undefined\"";
__n26["right"] := __n31;
__n25["test"] := __n26;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "$ERROR";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "#1: If thisArg is null or undefined, the called function is passed the global object as the this value";
__n38["raw"] := "'#1: If thisArg is null or undefined, the called function is passed the global object as the this value'";
__n37 := [ __n38 ];
__n35["arguments"] := __n37;
__n34["expression"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n25["consequent"] := __n32;
__n25["alternate"] := null;
__n1 := [ __n2, __n4, __n5, __n12, __n25 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n39 := [ "obj" ];
__n0["variableDeclarations"] := __n39;
__n41 := {  };
__n41["type"] := "FunctionDeclaration";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "FACTORY";
__n41["id"] := __n42;
__n43 := [  ];
__n41["params"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "Function";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "this.feat=\"in da haus\"";
__n52["raw"] := "\"this.feat=\\\"in da haus\\\"\"";
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["object"] := __n49;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "apply";
__n53["raw"] := "\"apply\"";
__n48["property"] := __n53;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n54 := [  ];
__n47["arguments"] := __n54;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n55 := [  ];
__n44["variableDeclarations"] := __n55;
__n56 := [  ];
__n44["functionDeclarations"] := __n56;
__n44["codeType"] := "function";
__n44["strict"] := false;
__n41["body"] := __n44;
__n41["generator"] := false;
__n41["async"] := false;
__n41["expression"] := false;
__n40 := [ __n41 ];
__n0["functionDeclarations"] := __n40;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}