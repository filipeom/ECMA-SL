function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "prop";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "abc";
__n10["raw"] := "\"abc\"";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "AssignmentExpression";
__n12["operator"] := "=";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Object";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "prototype";
__n16["raw"] := "\"prototype\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["object"] := __n14;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "verifyThis";
__n17["raw"] := "\"verifyThis\"";
__n13["property"] := __n17;
__n13["computed"] := true;
__n12["left"] := __n13;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "verifyThis";
__n18["raw"] := "\"verifyThis\"";
__n12["right"] := __n18;
__n11["expression"] := __n12;
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "func";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "FunctionExpression";
__n23["id"] := null;
__n24 := [  ];
__n23["params"] := __n24;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ReturnStatement";
__n28 := {  };
__n28["type"] := "NewExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Boolean";
__n28["callee"] := __n29;
__n31 := {  };
__n31["type"] := "LogicalExpression";
__n31["operator"] := "&&";
__n32 := {  };
__n32["type"] := "LogicalExpression";
__n32["operator"] := "&&";
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "===";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "arguments";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "length";
__n36["raw"] := "\"length\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["left"] := __n34;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 0.;
__n37["raw"] := "0";
__n33["right"] := __n37;
__n32["left"] := __n33;
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "===";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Object";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "prototype";
__n44["raw"] := "\"prototype\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["object"] := __n42;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "toString";
__n45["raw"] := "\"toString\"";
__n41["property"] := __n45;
__n41["computed"] := true;
__n40["object"] := __n41;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "call";
__n46["raw"] := "\"call\"";
__n40["property"] := __n46;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n48 := {  };
__n48["type"] := "ThisExpression";
__n47 := [ __n48 ];
__n39["arguments"] := __n47;
__n38["left"] := __n39;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "[object Object]";
__n49["raw"] := "\"[object Object]\"";
__n38["right"] := __n49;
__n32["right"] := __n38;
__n31["left"] := __n32;
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "===";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "ThisExpression";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "verifyThis";
__n53["raw"] := "\"verifyThis\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["left"] := __n51;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "verifyThis";
__n54["raw"] := "\"verifyThis\"";
__n50["right"] := __n54;
__n31["right"] := __n50;
__n30 := [ __n31 ];
__n28["arguments"] := __n30;
__n27["argument"] := __n28;
__n26 := [ __n27 ];
__n25["body"] := __n26;
__n55 := [  ];
__n25["variableDeclarations"] := __n55;
__n56 := [  ];
__n25["functionDeclarations"] := __n56;
__n25["codeType"] := "function";
__n25["strict"] := false;
__n23["body"] := __n25;
__n23["generator"] := false;
__n23["async"] := false;
__n23["expression"] := false;
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n57 := {  };
__n57["type"] := "VariableDeclaration";
__n59 := {  };
__n59["type"] := "VariableDeclarator";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "NewFunc";
__n59["id"] := __n60;
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Function";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "prototype";
__n66["raw"] := "\"prototype\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["object"] := __n64;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "bind";
__n67["raw"] := "\"bind\"";
__n63["property"] := __n67;
__n63["computed"] := true;
__n62["object"] := __n63;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "call";
__n68["raw"] := "\"call\"";
__n62["property"] := __n68;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "func";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "obj";
__n69 := [ __n70, __n71 ];
__n61["arguments"] := __n69;
__n59["init"] := __n61;
__n58 := [ __n59 ];
__n57["declarations"] := __n58;
__n57["kind"] := "var";
__n72 := {  };
__n72["type"] := "VariableDeclaration";
__n74 := {  };
__n74["type"] := "VariableDeclarator";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "newInstance";
__n74["id"] := __n75;
__n76 := {  };
__n76["type"] := "NewExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "NewFunc";
__n76["callee"] := __n77;
__n78 := [  ];
__n76["arguments"] := __n78;
__n74["init"] := __n76;
__n73 := [ __n74 ];
__n72["declarations"] := __n73;
__n72["kind"] := "var";
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "assert";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "newInstance";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "valueOf";
__n86["raw"] := "\"valueOf\"";
__n84["property"] := __n86;
__n84["computed"] := true;
__n83["callee"] := __n84;
__n87 := [  ];
__n83["arguments"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "newInstance.valueOf() !== true";
__n88["raw"] := "'newInstance.valueOf() !== true'";
__n82 := [ __n83, __n88 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n1 := [ __n2, __n11, __n19, __n57, __n72, __n79 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n89 := [ "obj", "func", "NewFunc", "newInstance" ];
__n0["variableDeclarations"] := __n89;
__n90 := [  ];
__n0["functionDeclarations"] := __n90;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}