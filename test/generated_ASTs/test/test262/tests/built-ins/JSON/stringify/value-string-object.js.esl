function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "JSON";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "stringify";
__n11["raw"] := "\"stringify\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n13 := {  };
__n13["type"] := "NewExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "String";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "str";
__n16["raw"] := "'str'";
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12 := [ __n13 ];
__n8["arguments"] := __n12;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "\"str\"";
__n17["raw"] := "'\"str\"'";
__n7 := [ __n8, __n17 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "toJSON";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "FunctionExpression";
__n22["id"] := null;
__n23 := [  ];
__n22["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "str";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "NewExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "String";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "str";
__n33["raw"] := "'str'";
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "AssignmentExpression";
__n35["operator"] := "=";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "str";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "toString";
__n38["raw"] := "\"toString\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["left"] := __n36;
__n39 := {  };
__n39["type"] := "FunctionExpression";
__n39["id"] := null;
__n40 := [  ];
__n39["params"] := __n40;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ReturnStatement";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "toString";
__n44["raw"] := "'toString'";
__n43["argument"] := __n44;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n45 := [  ];
__n41["variableDeclarations"] := __n45;
__n46 := [  ];
__n41["functionDeclarations"] := __n46;
__n41["codeType"] := "function";
__n41["strict"] := false;
__n39["body"] := __n41;
__n39["generator"] := false;
__n39["async"] := false;
__n39["expression"] := false;
__n35["right"] := __n39;
__n34["expression"] := __n35;
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "AssignmentExpression";
__n48["operator"] := "=";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "str";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "valueOf";
__n51["raw"] := "\"valueOf\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["left"] := __n49;
__n52 := {  };
__n52["type"] := "FunctionExpression";
__n52["id"] := null;
__n53 := [  ];
__n52["params"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ThrowStatement";
__n57 := {  };
__n57["type"] := "NewExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "Test262Error";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "should not be called";
__n60["raw"] := "'should not be called'";
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["argument"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n61 := [  ];
__n54["variableDeclarations"] := __n61;
__n62 := [  ];
__n54["functionDeclarations"] := __n62;
__n54["codeType"] := "function";
__n54["strict"] := false;
__n52["body"] := __n54;
__n52["generator"] := false;
__n52["async"] := false;
__n52["expression"] := false;
__n48["right"] := __n52;
__n47["expression"] := __n48;
__n63 := {  };
__n63["type"] := "ReturnStatement";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "str";
__n63["argument"] := __n64;
__n25 := [ __n26, __n34, __n47, __n63 ];
__n24["body"] := __n25;
__n65 := [ "str" ];
__n24["variableDeclarations"] := __n65;
__n66 := [  ];
__n24["functionDeclarations"] := __n66;
__n24["codeType"] := "function";
__n24["strict"] := false;
__n22["body"] := __n24;
__n22["generator"] := false;
__n22["async"] := false;
__n22["expression"] := false;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "assert";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "sameValue";
__n71["raw"] := "\"sameValue\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "JSON";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "stringify";
__n76["raw"] := "\"stringify\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["callee"] := __n74;
__n78 := {  };
__n78["type"] := "ObjectExpression";
__n80 := {  };
__n80["type"] := "Property";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "key";
__n80["key"] := __n81;
__n82 := {  };
__n82["type"] := "ObjectExpression";
__n84 := {  };
__n84["type"] := "Property";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "toJSON";
__n84["key"] := __n85;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "toJSON";
__n84["value"] := __n86;
__n84["computed"] := false;
__n84["kind"] := "init";
__n84["shorthand"] := false;
__n83 := [ __n84 ];
__n82["properties"] := __n83;
__n80["value"] := __n82;
__n80["computed"] := false;
__n80["kind"] := "init";
__n80["shorthand"] := false;
__n79 := [ __n80 ];
__n78["properties"] := __n79;
__n77 := [ __n78 ];
__n73["arguments"] := __n77;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "{\"key\":\"toString\"}";
__n87["raw"] := "'{\"key\":\"toString\"}'";
__n72 := [ __n73, __n87 ];
__n68["arguments"] := __n72;
__n67["expression"] := __n68;
__n88 := {  };
__n88["type"] := "VariableDeclaration";
__n90 := {  };
__n90["type"] := "VariableDeclarator";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "abruptReplacer";
__n90["id"] := __n91;
__n92 := {  };
__n92["type"] := "FunctionExpression";
__n92["id"] := null;
__n93 := [ "_key", "value" ];
__n92["params"] := __n93;
__n94 := {  };
__n94["type"] := "BlockStatement";
__n96 := {  };
__n96["type"] := "IfStatement";
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "===";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "value";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := true;
__n99["raw"] := "true";
__n97["right"] := __n99;
__n96["test"] := __n97;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "VariableDeclaration";
__n104 := {  };
__n104["type"] := "VariableDeclarator";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "str";
__n104["id"] := __n105;
__n106 := {  };
__n106["type"] := "NewExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "String";
__n106["callee"] := __n107;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "str";
__n109["raw"] := "'str'";
__n108 := [ __n109 ];
__n106["arguments"] := __n108;
__n104["init"] := __n106;
__n103 := [ __n104 ];
__n102["declarations"] := __n103;
__n102["kind"] := "var";
__n110 := {  };
__n110["type"] := "ExpressionStatement";
__n111 := {  };
__n111["type"] := "AssignmentExpression";
__n111["operator"] := "=";
__n112 := {  };
__n112["type"] := "MemberExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "str";
__n112["object"] := __n113;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "toString";
__n114["raw"] := "\"toString\"";
__n112["property"] := __n114;
__n112["computed"] := true;
__n111["left"] := __n112;
__n115 := {  };
__n115["type"] := "FunctionExpression";
__n115["id"] := null;
__n116 := [  ];
__n115["params"] := __n116;
__n117 := {  };
__n117["type"] := "BlockStatement";
__n119 := {  };
__n119["type"] := "ThrowStatement";
__n120 := {  };
__n120["type"] := "NewExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "Test262Error";
__n120["callee"] := __n121;
__n122 := [  ];
__n120["arguments"] := __n122;
__n119["argument"] := __n120;
__n118 := [ __n119 ];
__n117["body"] := __n118;
__n123 := [  ];
__n117["variableDeclarations"] := __n123;
__n124 := [  ];
__n117["functionDeclarations"] := __n124;
__n117["codeType"] := "function";
__n117["strict"] := false;
__n115["body"] := __n117;
__n115["generator"] := false;
__n115["async"] := false;
__n115["expression"] := false;
__n111["right"] := __n115;
__n110["expression"] := __n111;
__n125 := {  };
__n125["type"] := "ExpressionStatement";
__n126 := {  };
__n126["type"] := "AssignmentExpression";
__n126["operator"] := "=";
__n127 := {  };
__n127["type"] := "MemberExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "str";
__n127["object"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "valueOf";
__n129["raw"] := "\"valueOf\"";
__n127["property"] := __n129;
__n127["computed"] := true;
__n126["left"] := __n127;
__n130 := {  };
__n130["type"] := "FunctionExpression";
__n130["id"] := null;
__n131 := [  ];
__n130["params"] := __n131;
__n132 := {  };
__n132["type"] := "BlockStatement";
__n134 := {  };
__n134["type"] := "ThrowStatement";
__n135 := {  };
__n135["type"] := "NewExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "Test262Error";
__n135["callee"] := __n136;
__n137 := [  ];
__n135["arguments"] := __n137;
__n134["argument"] := __n135;
__n133 := [ __n134 ];
__n132["body"] := __n133;
__n138 := [  ];
__n132["variableDeclarations"] := __n138;
__n139 := [  ];
__n132["functionDeclarations"] := __n139;
__n132["codeType"] := "function";
__n132["strict"] := false;
__n130["body"] := __n132;
__n130["generator"] := false;
__n130["async"] := false;
__n130["expression"] := false;
__n126["right"] := __n130;
__n125["expression"] := __n126;
__n140 := {  };
__n140["type"] := "ReturnStatement";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "str";
__n140["argument"] := __n141;
__n101 := [ __n102, __n110, __n125, __n140 ];
__n100["body"] := __n101;
__n96["consequent"] := __n100;
__n96["alternate"] := null;
__n142 := {  };
__n142["type"] := "ReturnStatement";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "value";
__n142["argument"] := __n143;
__n95 := [ __n96, __n142 ];
__n94["body"] := __n95;
__n144 := [ "str" ];
__n94["variableDeclarations"] := __n144;
__n145 := [  ];
__n94["functionDeclarations"] := __n145;
__n94["codeType"] := "function";
__n94["strict"] := false;
__n92["body"] := __n94;
__n92["generator"] := false;
__n92["async"] := false;
__n92["expression"] := false;
__n90["init"] := __n92;
__n89 := [ __n90 ];
__n88["declarations"] := __n89;
__n88["kind"] := "var";
__n146 := {  };
__n146["type"] := "ExpressionStatement";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "MemberExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "assert";
__n148["object"] := __n149;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "throws";
__n150["raw"] := "\"throws\"";
__n148["property"] := __n150;
__n148["computed"] := true;
__n147["callee"] := __n148;
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "Test262Error";
__n153 := {  };
__n153["type"] := "FunctionExpression";
__n153["id"] := null;
__n154 := [  ];
__n153["params"] := __n154;
__n155 := {  };
__n155["type"] := "BlockStatement";
__n157 := {  };
__n157["type"] := "ExpressionStatement";
__n158 := {  };
__n158["type"] := "CallExpression";
__n159 := {  };
__n159["type"] := "MemberExpression";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "JSON";
__n159["object"] := __n160;
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := "stringify";
__n161["raw"] := "\"stringify\"";
__n159["property"] := __n161;
__n159["computed"] := true;
__n158["callee"] := __n159;
__n163 := {  };
__n163["type"] := "ArrayExpression";
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := true;
__n165["raw"] := "true";
__n164 := [ __n165 ];
__n163["elements"] := __n164;
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "abruptReplacer";
__n162 := [ __n163, __n166 ];
__n158["arguments"] := __n162;
__n157["expression"] := __n158;
__n156 := [ __n157 ];
__n155["body"] := __n156;
__n167 := [  ];
__n155["variableDeclarations"] := __n167;
__n168 := [  ];
__n155["functionDeclarations"] := __n168;
__n155["codeType"] := "function";
__n155["strict"] := false;
__n153["body"] := __n155;
__n153["generator"] := false;
__n153["async"] := false;
__n153["expression"] := false;
__n151 := [ __n152, __n153 ];
__n147["arguments"] := __n151;
__n146["expression"] := __n147;
__n1 := [ __n2, __n18, __n67, __n88, __n146 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n169 := [ "toJSON", "abruptReplacer" ];
__n0["variableDeclarations"] := __n169;
__n170 := [  ];
__n0["functionDeclarations"] := __n170;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}