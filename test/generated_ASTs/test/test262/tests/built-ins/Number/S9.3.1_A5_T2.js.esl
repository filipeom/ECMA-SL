function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Number";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "1";
__n7["raw"] := "\"1\"";
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 1.;
__n8["raw"] := "1";
__n3["right"] := __n8;
__n2["test"] := __n3;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "$ERROR";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "#1: Number(\"1\") === 1";
__n15["raw"] := "'#1: Number(\"1\") === 1'";
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n2["consequent"] := __n9;
__n2["alternate"] := null;
__n16 := {  };
__n16["type"] := "IfStatement";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "!==";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Number";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "+1";
__n21["raw"] := "\"+1\"";
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n17["left"] := __n18;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 1.;
__n22["raw"] := "1";
__n17["right"] := __n22;
__n16["test"] := __n17;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "$ERROR";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "#3: Number(\"+1\") === 1";
__n29["raw"] := "'#3: Number(\"+1\") === 1'";
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n16["consequent"] := __n23;
__n16["alternate"] := null;
__n30 := {  };
__n30["type"] := "IfStatement";
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "!==";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "Number";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "-1";
__n35["raw"] := "\"-1\"";
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["left"] := __n32;
__n36 := {  };
__n36["type"] := "UnaryExpression";
__n36["operator"] := "-";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 1.;
__n37["raw"] := "1";
__n36["argument"] := __n37;
__n36["prefix"] := true;
__n31["right"] := __n36;
__n30["test"] := __n31;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "$ERROR";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "#3: Number(\"-1\") === -1";
__n44["raw"] := "'#3: Number(\"-1\") === -1'";
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n30["consequent"] := __n38;
__n30["alternate"] := null;
__n45 := {  };
__n45["type"] := "IfStatement";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "Number";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "2";
__n50["raw"] := "\"2\"";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["left"] := __n47;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 2.;
__n51["raw"] := "2";
__n46["right"] := __n51;
__n45["test"] := __n46;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "#4: Number(\"2\") === 2";
__n58["raw"] := "'#4: Number(\"2\") === 2'";
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n45["consequent"] := __n52;
__n45["alternate"] := null;
__n59 := {  };
__n59["type"] := "IfStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "!==";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "Number";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "+2";
__n64["raw"] := "\"+2\"";
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["left"] := __n61;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 2.;
__n65["raw"] := "2";
__n60["right"] := __n65;
__n59["test"] := __n60;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "#5: Number(\"+2\") === 2";
__n72["raw"] := "'#5: Number(\"+2\") === 2'";
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n59["consequent"] := __n66;
__n59["alternate"] := null;
__n73 := {  };
__n73["type"] := "IfStatement";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "!==";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "Number";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "-2";
__n78["raw"] := "\"-2\"";
__n77 := [ __n78 ];
__n75["arguments"] := __n77;
__n74["left"] := __n75;
__n79 := {  };
__n79["type"] := "UnaryExpression";
__n79["operator"] := "-";
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 2.;
__n80["raw"] := "2";
__n79["argument"] := __n80;
__n79["prefix"] := true;
__n74["right"] := __n79;
__n73["test"] := __n74;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "$ERROR";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#6: Number(\"-2\") === -2";
__n87["raw"] := "'#6: Number(\"-2\") === -2'";
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n82 := [ __n83 ];
__n81["body"] := __n82;
__n73["consequent"] := __n81;
__n73["alternate"] := null;
__n88 := {  };
__n88["type"] := "IfStatement";
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "!==";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "Number";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "3";
__n93["raw"] := "\"3\"";
__n92 := [ __n93 ];
__n90["arguments"] := __n92;
__n89["left"] := __n90;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := 3.;
__n94["raw"] := "3";
__n89["right"] := __n94;
__n88["test"] := __n89;
__n95 := {  };
__n95["type"] := "BlockStatement";
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "CallExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "$ERROR";
__n98["callee"] := __n99;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "#7: Number(\"3\") === 3";
__n101["raw"] := "'#7: Number(\"3\") === 3'";
__n100 := [ __n101 ];
__n98["arguments"] := __n100;
__n97["expression"] := __n98;
__n96 := [ __n97 ];
__n95["body"] := __n96;
__n88["consequent"] := __n95;
__n88["alternate"] := null;
__n102 := {  };
__n102["type"] := "IfStatement";
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "!==";
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "Number";
__n104["callee"] := __n105;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "+3";
__n107["raw"] := "\"+3\"";
__n106 := [ __n107 ];
__n104["arguments"] := __n106;
__n103["left"] := __n104;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := 3.;
__n108["raw"] := "3";
__n103["right"] := __n108;
__n102["test"] := __n103;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "ExpressionStatement";
__n112 := {  };
__n112["type"] := "CallExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "$ERROR";
__n112["callee"] := __n113;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "#8: Number(\"+3\") === 3";
__n115["raw"] := "'#8: Number(\"+3\") === 3'";
__n114 := [ __n115 ];
__n112["arguments"] := __n114;
__n111["expression"] := __n112;
__n110 := [ __n111 ];
__n109["body"] := __n110;
__n102["consequent"] := __n109;
__n102["alternate"] := null;
__n116 := {  };
__n116["type"] := "IfStatement";
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "!==";
__n118 := {  };
__n118["type"] := "CallExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "Number";
__n118["callee"] := __n119;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "-3";
__n121["raw"] := "\"-3\"";
__n120 := [ __n121 ];
__n118["arguments"] := __n120;
__n117["left"] := __n118;
__n122 := {  };
__n122["type"] := "UnaryExpression";
__n122["operator"] := "-";
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 3.;
__n123["raw"] := "3";
__n122["argument"] := __n123;
__n122["prefix"] := true;
__n117["right"] := __n122;
__n116["test"] := __n117;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "$ERROR";
__n127["callee"] := __n128;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "#9: Number(\"-3\") === -3";
__n130["raw"] := "'#9: Number(\"-3\") === -3'";
__n129 := [ __n130 ];
__n127["arguments"] := __n129;
__n126["expression"] := __n127;
__n125 := [ __n126 ];
__n124["body"] := __n125;
__n116["consequent"] := __n124;
__n116["alternate"] := null;
__n131 := {  };
__n131["type"] := "IfStatement";
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := "!==";
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "Number";
__n133["callee"] := __n134;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "4";
__n136["raw"] := "\"4\"";
__n135 := [ __n136 ];
__n133["arguments"] := __n135;
__n132["left"] := __n133;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := 4.;
__n137["raw"] := "4";
__n132["right"] := __n137;
__n131["test"] := __n132;
__n138 := {  };
__n138["type"] := "BlockStatement";
__n140 := {  };
__n140["type"] := "ExpressionStatement";
__n141 := {  };
__n141["type"] := "CallExpression";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "$ERROR";
__n141["callee"] := __n142;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "#10: Number(\"4\") === 4";
__n144["raw"] := "'#10: Number(\"4\") === 4'";
__n143 := [ __n144 ];
__n141["arguments"] := __n143;
__n140["expression"] := __n141;
__n139 := [ __n140 ];
__n138["body"] := __n139;
__n131["consequent"] := __n138;
__n131["alternate"] := null;
__n145 := {  };
__n145["type"] := "IfStatement";
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "!==";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "Number";
__n147["callee"] := __n148;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "+4";
__n150["raw"] := "\"+4\"";
__n149 := [ __n150 ];
__n147["arguments"] := __n149;
__n146["left"] := __n147;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := 4.;
__n151["raw"] := "4";
__n146["right"] := __n151;
__n145["test"] := __n146;
__n152 := {  };
__n152["type"] := "BlockStatement";
__n154 := {  };
__n154["type"] := "ExpressionStatement";
__n155 := {  };
__n155["type"] := "CallExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "$ERROR";
__n155["callee"] := __n156;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := "#11: Number(\"+4\") === 4";
__n158["raw"] := "'#11: Number(\"+4\") === 4'";
__n157 := [ __n158 ];
__n155["arguments"] := __n157;
__n154["expression"] := __n155;
__n153 := [ __n154 ];
__n152["body"] := __n153;
__n145["consequent"] := __n152;
__n145["alternate"] := null;
__n159 := {  };
__n159["type"] := "IfStatement";
__n160 := {  };
__n160["type"] := "BinaryExpression";
__n160["operator"] := "!==";
__n161 := {  };
__n161["type"] := "CallExpression";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "Number";
__n161["callee"] := __n162;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := "-4";
__n164["raw"] := "\"-4\"";
__n163 := [ __n164 ];
__n161["arguments"] := __n163;
__n160["left"] := __n161;
__n165 := {  };
__n165["type"] := "UnaryExpression";
__n165["operator"] := "-";
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := 4.;
__n166["raw"] := "4";
__n165["argument"] := __n166;
__n165["prefix"] := true;
__n160["right"] := __n165;
__n159["test"] := __n160;
__n167 := {  };
__n167["type"] := "BlockStatement";
__n169 := {  };
__n169["type"] := "ExpressionStatement";
__n170 := {  };
__n170["type"] := "CallExpression";
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "$ERROR";
__n170["callee"] := __n171;
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := "#12: Number(\"-4\") === -4";
__n173["raw"] := "'#12: Number(\"-4\") === -4'";
__n172 := [ __n173 ];
__n170["arguments"] := __n172;
__n169["expression"] := __n170;
__n168 := [ __n169 ];
__n167["body"] := __n168;
__n159["consequent"] := __n167;
__n159["alternate"] := null;
__n174 := {  };
__n174["type"] := "IfStatement";
__n175 := {  };
__n175["type"] := "BinaryExpression";
__n175["operator"] := "!==";
__n176 := {  };
__n176["type"] := "CallExpression";
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "Number";
__n176["callee"] := __n177;
__n179 := {  };
__n179["type"] := "Literal";
__n179["value"] := "5";
__n179["raw"] := "\"5\"";
__n178 := [ __n179 ];
__n176["arguments"] := __n178;
__n175["left"] := __n176;
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := 5.;
__n180["raw"] := "5";
__n175["right"] := __n180;
__n174["test"] := __n175;
__n181 := {  };
__n181["type"] := "BlockStatement";
__n183 := {  };
__n183["type"] := "ExpressionStatement";
__n184 := {  };
__n184["type"] := "CallExpression";
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "$ERROR";
__n184["callee"] := __n185;
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := "#13: Number(\"5\") === 5";
__n187["raw"] := "'#13: Number(\"5\") === 5'";
__n186 := [ __n187 ];
__n184["arguments"] := __n186;
__n183["expression"] := __n184;
__n182 := [ __n183 ];
__n181["body"] := __n182;
__n174["consequent"] := __n181;
__n174["alternate"] := null;
__n188 := {  };
__n188["type"] := "IfStatement";
__n189 := {  };
__n189["type"] := "BinaryExpression";
__n189["operator"] := "!==";
__n190 := {  };
__n190["type"] := "CallExpression";
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "Number";
__n190["callee"] := __n191;
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := "+5";
__n193["raw"] := "\"+5\"";
__n192 := [ __n193 ];
__n190["arguments"] := __n192;
__n189["left"] := __n190;
__n194 := {  };
__n194["type"] := "Literal";
__n194["value"] := 5.;
__n194["raw"] := "5";
__n189["right"] := __n194;
__n188["test"] := __n189;
__n195 := {  };
__n195["type"] := "BlockStatement";
__n197 := {  };
__n197["type"] := "ExpressionStatement";
__n198 := {  };
__n198["type"] := "CallExpression";
__n199 := {  };
__n199["type"] := "Identifier";
__n199["name"] := "$ERROR";
__n198["callee"] := __n199;
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := "#14: Number(\"+5\") === 5";
__n201["raw"] := "'#14: Number(\"+5\") === 5'";
__n200 := [ __n201 ];
__n198["arguments"] := __n200;
__n197["expression"] := __n198;
__n196 := [ __n197 ];
__n195["body"] := __n196;
__n188["consequent"] := __n195;
__n188["alternate"] := null;
__n202 := {  };
__n202["type"] := "IfStatement";
__n203 := {  };
__n203["type"] := "BinaryExpression";
__n203["operator"] := "!==";
__n204 := {  };
__n204["type"] := "CallExpression";
__n205 := {  };
__n205["type"] := "Identifier";
__n205["name"] := "Number";
__n204["callee"] := __n205;
__n207 := {  };
__n207["type"] := "Literal";
__n207["value"] := "-5";
__n207["raw"] := "\"-5\"";
__n206 := [ __n207 ];
__n204["arguments"] := __n206;
__n203["left"] := __n204;
__n208 := {  };
__n208["type"] := "UnaryExpression";
__n208["operator"] := "-";
__n209 := {  };
__n209["type"] := "Literal";
__n209["value"] := 5.;
__n209["raw"] := "5";
__n208["argument"] := __n209;
__n208["prefix"] := true;
__n203["right"] := __n208;
__n202["test"] := __n203;
__n210 := {  };
__n210["type"] := "BlockStatement";
__n212 := {  };
__n212["type"] := "ExpressionStatement";
__n213 := {  };
__n213["type"] := "CallExpression";
__n214 := {  };
__n214["type"] := "Identifier";
__n214["name"] := "$ERROR";
__n213["callee"] := __n214;
__n216 := {  };
__n216["type"] := "Literal";
__n216["value"] := "#15: Number(\"-5\") === -5";
__n216["raw"] := "'#15: Number(\"-5\") === -5'";
__n215 := [ __n216 ];
__n213["arguments"] := __n215;
__n212["expression"] := __n213;
__n211 := [ __n212 ];
__n210["body"] := __n211;
__n202["consequent"] := __n210;
__n202["alternate"] := null;
__n217 := {  };
__n217["type"] := "IfStatement";
__n218 := {  };
__n218["type"] := "BinaryExpression";
__n218["operator"] := "!==";
__n219 := {  };
__n219["type"] := "CallExpression";
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "Number";
__n219["callee"] := __n220;
__n222 := {  };
__n222["type"] := "Literal";
__n222["value"] := "6";
__n222["raw"] := "\"6\"";
__n221 := [ __n222 ];
__n219["arguments"] := __n221;
__n218["left"] := __n219;
__n223 := {  };
__n223["type"] := "Literal";
__n223["value"] := 6.;
__n223["raw"] := "6";
__n218["right"] := __n223;
__n217["test"] := __n218;
__n224 := {  };
__n224["type"] := "BlockStatement";
__n226 := {  };
__n226["type"] := "ExpressionStatement";
__n227 := {  };
__n227["type"] := "CallExpression";
__n228 := {  };
__n228["type"] := "Identifier";
__n228["name"] := "$ERROR";
__n227["callee"] := __n228;
__n230 := {  };
__n230["type"] := "Literal";
__n230["value"] := "#16: Number(\"6\") === 6";
__n230["raw"] := "'#16: Number(\"6\") === 6'";
__n229 := [ __n230 ];
__n227["arguments"] := __n229;
__n226["expression"] := __n227;
__n225 := [ __n226 ];
__n224["body"] := __n225;
__n217["consequent"] := __n224;
__n217["alternate"] := null;
__n231 := {  };
__n231["type"] := "IfStatement";
__n232 := {  };
__n232["type"] := "BinaryExpression";
__n232["operator"] := "!==";
__n233 := {  };
__n233["type"] := "CallExpression";
__n234 := {  };
__n234["type"] := "Identifier";
__n234["name"] := "Number";
__n233["callee"] := __n234;
__n236 := {  };
__n236["type"] := "Literal";
__n236["value"] := "+6";
__n236["raw"] := "\"+6\"";
__n235 := [ __n236 ];
__n233["arguments"] := __n235;
__n232["left"] := __n233;
__n237 := {  };
__n237["type"] := "Literal";
__n237["value"] := 6.;
__n237["raw"] := "6";
__n232["right"] := __n237;
__n231["test"] := __n232;
__n238 := {  };
__n238["type"] := "BlockStatement";
__n240 := {  };
__n240["type"] := "ExpressionStatement";
__n241 := {  };
__n241["type"] := "CallExpression";
__n242 := {  };
__n242["type"] := "Identifier";
__n242["name"] := "$ERROR";
__n241["callee"] := __n242;
__n244 := {  };
__n244["type"] := "Literal";
__n244["value"] := "#17: Number(\"+6\") === 6";
__n244["raw"] := "'#17: Number(\"+6\") === 6'";
__n243 := [ __n244 ];
__n241["arguments"] := __n243;
__n240["expression"] := __n241;
__n239 := [ __n240 ];
__n238["body"] := __n239;
__n231["consequent"] := __n238;
__n231["alternate"] := null;
__n245 := {  };
__n245["type"] := "IfStatement";
__n246 := {  };
__n246["type"] := "BinaryExpression";
__n246["operator"] := "!==";
__n247 := {  };
__n247["type"] := "CallExpression";
__n248 := {  };
__n248["type"] := "Identifier";
__n248["name"] := "Number";
__n247["callee"] := __n248;
__n250 := {  };
__n250["type"] := "Literal";
__n250["value"] := "-6";
__n250["raw"] := "\"-6\"";
__n249 := [ __n250 ];
__n247["arguments"] := __n249;
__n246["left"] := __n247;
__n251 := {  };
__n251["type"] := "UnaryExpression";
__n251["operator"] := "-";
__n252 := {  };
__n252["type"] := "Literal";
__n252["value"] := 6.;
__n252["raw"] := "6";
__n251["argument"] := __n252;
__n251["prefix"] := true;
__n246["right"] := __n251;
__n245["test"] := __n246;
__n253 := {  };
__n253["type"] := "BlockStatement";
__n255 := {  };
__n255["type"] := "ExpressionStatement";
__n256 := {  };
__n256["type"] := "CallExpression";
__n257 := {  };
__n257["type"] := "Identifier";
__n257["name"] := "$ERROR";
__n256["callee"] := __n257;
__n259 := {  };
__n259["type"] := "Literal";
__n259["value"] := "#18: Number(\"-6\") === -6";
__n259["raw"] := "'#18: Number(\"-6\") === -6'";
__n258 := [ __n259 ];
__n256["arguments"] := __n258;
__n255["expression"] := __n256;
__n254 := [ __n255 ];
__n253["body"] := __n254;
__n245["consequent"] := __n253;
__n245["alternate"] := null;
__n260 := {  };
__n260["type"] := "IfStatement";
__n261 := {  };
__n261["type"] := "BinaryExpression";
__n261["operator"] := "!==";
__n262 := {  };
__n262["type"] := "CallExpression";
__n263 := {  };
__n263["type"] := "Identifier";
__n263["name"] := "Number";
__n262["callee"] := __n263;
__n265 := {  };
__n265["type"] := "Literal";
__n265["value"] := "7";
__n265["raw"] := "\"7\"";
__n264 := [ __n265 ];
__n262["arguments"] := __n264;
__n261["left"] := __n262;
__n266 := {  };
__n266["type"] := "Literal";
__n266["value"] := 7.;
__n266["raw"] := "7";
__n261["right"] := __n266;
__n260["test"] := __n261;
__n267 := {  };
__n267["type"] := "BlockStatement";
__n269 := {  };
__n269["type"] := "ExpressionStatement";
__n270 := {  };
__n270["type"] := "CallExpression";
__n271 := {  };
__n271["type"] := "Identifier";
__n271["name"] := "$ERROR";
__n270["callee"] := __n271;
__n273 := {  };
__n273["type"] := "Literal";
__n273["value"] := "#19: Number(\"7\") === 7";
__n273["raw"] := "'#19: Number(\"7\") === 7'";
__n272 := [ __n273 ];
__n270["arguments"] := __n272;
__n269["expression"] := __n270;
__n268 := [ __n269 ];
__n267["body"] := __n268;
__n260["consequent"] := __n267;
__n260["alternate"] := null;
__n274 := {  };
__n274["type"] := "IfStatement";
__n275 := {  };
__n275["type"] := "BinaryExpression";
__n275["operator"] := "!==";
__n276 := {  };
__n276["type"] := "CallExpression";
__n277 := {  };
__n277["type"] := "Identifier";
__n277["name"] := "Number";
__n276["callee"] := __n277;
__n279 := {  };
__n279["type"] := "Literal";
__n279["value"] := "+7";
__n279["raw"] := "\"+7\"";
__n278 := [ __n279 ];
__n276["arguments"] := __n278;
__n275["left"] := __n276;
__n280 := {  };
__n280["type"] := "Literal";
__n280["value"] := 7.;
__n280["raw"] := "7";
__n275["right"] := __n280;
__n274["test"] := __n275;
__n281 := {  };
__n281["type"] := "BlockStatement";
__n283 := {  };
__n283["type"] := "ExpressionStatement";
__n284 := {  };
__n284["type"] := "CallExpression";
__n285 := {  };
__n285["type"] := "Identifier";
__n285["name"] := "$ERROR";
__n284["callee"] := __n285;
__n287 := {  };
__n287["type"] := "Literal";
__n287["value"] := "#20: Number(\"+7\") === 7";
__n287["raw"] := "'#20: Number(\"+7\") === 7'";
__n286 := [ __n287 ];
__n284["arguments"] := __n286;
__n283["expression"] := __n284;
__n282 := [ __n283 ];
__n281["body"] := __n282;
__n274["consequent"] := __n281;
__n274["alternate"] := null;
__n288 := {  };
__n288["type"] := "IfStatement";
__n289 := {  };
__n289["type"] := "BinaryExpression";
__n289["operator"] := "!==";
__n290 := {  };
__n290["type"] := "CallExpression";
__n291 := {  };
__n291["type"] := "Identifier";
__n291["name"] := "Number";
__n290["callee"] := __n291;
__n293 := {  };
__n293["type"] := "Literal";
__n293["value"] := "-7";
__n293["raw"] := "\"-7\"";
__n292 := [ __n293 ];
__n290["arguments"] := __n292;
__n289["left"] := __n290;
__n294 := {  };
__n294["type"] := "UnaryExpression";
__n294["operator"] := "-";
__n295 := {  };
__n295["type"] := "Literal";
__n295["value"] := 7.;
__n295["raw"] := "7";
__n294["argument"] := __n295;
__n294["prefix"] := true;
__n289["right"] := __n294;
__n288["test"] := __n289;
__n296 := {  };
__n296["type"] := "BlockStatement";
__n298 := {  };
__n298["type"] := "ExpressionStatement";
__n299 := {  };
__n299["type"] := "CallExpression";
__n300 := {  };
__n300["type"] := "Identifier";
__n300["name"] := "$ERROR";
__n299["callee"] := __n300;
__n302 := {  };
__n302["type"] := "Literal";
__n302["value"] := "#21: Number(\"-7\") === -7";
__n302["raw"] := "'#21: Number(\"-7\") === -7'";
__n301 := [ __n302 ];
__n299["arguments"] := __n301;
__n298["expression"] := __n299;
__n297 := [ __n298 ];
__n296["body"] := __n297;
__n288["consequent"] := __n296;
__n288["alternate"] := null;
__n303 := {  };
__n303["type"] := "IfStatement";
__n304 := {  };
__n304["type"] := "BinaryExpression";
__n304["operator"] := "!==";
__n305 := {  };
__n305["type"] := "CallExpression";
__n306 := {  };
__n306["type"] := "Identifier";
__n306["name"] := "Number";
__n305["callee"] := __n306;
__n308 := {  };
__n308["type"] := "Literal";
__n308["value"] := "8";
__n308["raw"] := "\"8\"";
__n307 := [ __n308 ];
__n305["arguments"] := __n307;
__n304["left"] := __n305;
__n309 := {  };
__n309["type"] := "Literal";
__n309["value"] := 8.;
__n309["raw"] := "8";
__n304["right"] := __n309;
__n303["test"] := __n304;
__n310 := {  };
__n310["type"] := "BlockStatement";
__n312 := {  };
__n312["type"] := "ExpressionStatement";
__n313 := {  };
__n313["type"] := "CallExpression";
__n314 := {  };
__n314["type"] := "Identifier";
__n314["name"] := "$ERROR";
__n313["callee"] := __n314;
__n316 := {  };
__n316["type"] := "Literal";
__n316["value"] := "#22: Number(\"8\") === 8";
__n316["raw"] := "'#22: Number(\"8\") === 8'";
__n315 := [ __n316 ];
__n313["arguments"] := __n315;
__n312["expression"] := __n313;
__n311 := [ __n312 ];
__n310["body"] := __n311;
__n303["consequent"] := __n310;
__n303["alternate"] := null;
__n317 := {  };
__n317["type"] := "IfStatement";
__n318 := {  };
__n318["type"] := "BinaryExpression";
__n318["operator"] := "!==";
__n319 := {  };
__n319["type"] := "CallExpression";
__n320 := {  };
__n320["type"] := "Identifier";
__n320["name"] := "Number";
__n319["callee"] := __n320;
__n322 := {  };
__n322["type"] := "Literal";
__n322["value"] := "+8";
__n322["raw"] := "\"+8\"";
__n321 := [ __n322 ];
__n319["arguments"] := __n321;
__n318["left"] := __n319;
__n323 := {  };
__n323["type"] := "Literal";
__n323["value"] := 8.;
__n323["raw"] := "8";
__n318["right"] := __n323;
__n317["test"] := __n318;
__n324 := {  };
__n324["type"] := "BlockStatement";
__n326 := {  };
__n326["type"] := "ExpressionStatement";
__n327 := {  };
__n327["type"] := "CallExpression";
__n328 := {  };
__n328["type"] := "Identifier";
__n328["name"] := "$ERROR";
__n327["callee"] := __n328;
__n330 := {  };
__n330["type"] := "Literal";
__n330["value"] := "#23: Number(\"+8\") === 8";
__n330["raw"] := "'#23: Number(\"+8\") === 8'";
__n329 := [ __n330 ];
__n327["arguments"] := __n329;
__n326["expression"] := __n327;
__n325 := [ __n326 ];
__n324["body"] := __n325;
__n317["consequent"] := __n324;
__n317["alternate"] := null;
__n331 := {  };
__n331["type"] := "IfStatement";
__n332 := {  };
__n332["type"] := "BinaryExpression";
__n332["operator"] := "!==";
__n333 := {  };
__n333["type"] := "CallExpression";
__n334 := {  };
__n334["type"] := "Identifier";
__n334["name"] := "Number";
__n333["callee"] := __n334;
__n336 := {  };
__n336["type"] := "Literal";
__n336["value"] := "-8";
__n336["raw"] := "\"-8\"";
__n335 := [ __n336 ];
__n333["arguments"] := __n335;
__n332["left"] := __n333;
__n337 := {  };
__n337["type"] := "UnaryExpression";
__n337["operator"] := "-";
__n338 := {  };
__n338["type"] := "Literal";
__n338["value"] := 8.;
__n338["raw"] := "8";
__n337["argument"] := __n338;
__n337["prefix"] := true;
__n332["right"] := __n337;
__n331["test"] := __n332;
__n339 := {  };
__n339["type"] := "BlockStatement";
__n341 := {  };
__n341["type"] := "ExpressionStatement";
__n342 := {  };
__n342["type"] := "CallExpression";
__n343 := {  };
__n343["type"] := "Identifier";
__n343["name"] := "$ERROR";
__n342["callee"] := __n343;
__n345 := {  };
__n345["type"] := "Literal";
__n345["value"] := "#24: Number(\"-8\") === -8";
__n345["raw"] := "'#24: Number(\"-8\") === -8'";
__n344 := [ __n345 ];
__n342["arguments"] := __n344;
__n341["expression"] := __n342;
__n340 := [ __n341 ];
__n339["body"] := __n340;
__n331["consequent"] := __n339;
__n331["alternate"] := null;
__n346 := {  };
__n346["type"] := "IfStatement";
__n347 := {  };
__n347["type"] := "BinaryExpression";
__n347["operator"] := "!==";
__n348 := {  };
__n348["type"] := "CallExpression";
__n349 := {  };
__n349["type"] := "Identifier";
__n349["name"] := "Number";
__n348["callee"] := __n349;
__n351 := {  };
__n351["type"] := "Literal";
__n351["value"] := "9";
__n351["raw"] := "\"9\"";
__n350 := [ __n351 ];
__n348["arguments"] := __n350;
__n347["left"] := __n348;
__n352 := {  };
__n352["type"] := "Literal";
__n352["value"] := 9.;
__n352["raw"] := "9";
__n347["right"] := __n352;
__n346["test"] := __n347;
__n353 := {  };
__n353["type"] := "BlockStatement";
__n355 := {  };
__n355["type"] := "ExpressionStatement";
__n356 := {  };
__n356["type"] := "CallExpression";
__n357 := {  };
__n357["type"] := "Identifier";
__n357["name"] := "$ERROR";
__n356["callee"] := __n357;
__n359 := {  };
__n359["type"] := "Literal";
__n359["value"] := "#25: Number(\"9\") === 9";
__n359["raw"] := "'#25: Number(\"9\") === 9'";
__n358 := [ __n359 ];
__n356["arguments"] := __n358;
__n355["expression"] := __n356;
__n354 := [ __n355 ];
__n353["body"] := __n354;
__n346["consequent"] := __n353;
__n346["alternate"] := null;
__n360 := {  };
__n360["type"] := "IfStatement";
__n361 := {  };
__n361["type"] := "BinaryExpression";
__n361["operator"] := "!==";
__n362 := {  };
__n362["type"] := "CallExpression";
__n363 := {  };
__n363["type"] := "Identifier";
__n363["name"] := "Number";
__n362["callee"] := __n363;
__n365 := {  };
__n365["type"] := "Literal";
__n365["value"] := "+9";
__n365["raw"] := "\"+9\"";
__n364 := [ __n365 ];
__n362["arguments"] := __n364;
__n361["left"] := __n362;
__n366 := {  };
__n366["type"] := "Literal";
__n366["value"] := 9.;
__n366["raw"] := "9";
__n361["right"] := __n366;
__n360["test"] := __n361;
__n367 := {  };
__n367["type"] := "BlockStatement";
__n369 := {  };
__n369["type"] := "ExpressionStatement";
__n370 := {  };
__n370["type"] := "CallExpression";
__n371 := {  };
__n371["type"] := "Identifier";
__n371["name"] := "$ERROR";
__n370["callee"] := __n371;
__n373 := {  };
__n373["type"] := "Literal";
__n373["value"] := "#26: Number(\"+9\") === 9";
__n373["raw"] := "'#26: Number(\"+9\") === 9'";
__n372 := [ __n373 ];
__n370["arguments"] := __n372;
__n369["expression"] := __n370;
__n368 := [ __n369 ];
__n367["body"] := __n368;
__n360["consequent"] := __n367;
__n360["alternate"] := null;
__n374 := {  };
__n374["type"] := "IfStatement";
__n375 := {  };
__n375["type"] := "BinaryExpression";
__n375["operator"] := "!==";
__n376 := {  };
__n376["type"] := "CallExpression";
__n377 := {  };
__n377["type"] := "Identifier";
__n377["name"] := "Number";
__n376["callee"] := __n377;
__n379 := {  };
__n379["type"] := "Literal";
__n379["value"] := "-9";
__n379["raw"] := "\"-9\"";
__n378 := [ __n379 ];
__n376["arguments"] := __n378;
__n375["left"] := __n376;
__n380 := {  };
__n380["type"] := "UnaryExpression";
__n380["operator"] := "-";
__n381 := {  };
__n381["type"] := "Literal";
__n381["value"] := 9.;
__n381["raw"] := "9";
__n380["argument"] := __n381;
__n380["prefix"] := true;
__n375["right"] := __n380;
__n374["test"] := __n375;
__n382 := {  };
__n382["type"] := "BlockStatement";
__n384 := {  };
__n384["type"] := "ExpressionStatement";
__n385 := {  };
__n385["type"] := "CallExpression";
__n386 := {  };
__n386["type"] := "Identifier";
__n386["name"] := "$ERROR";
__n385["callee"] := __n386;
__n388 := {  };
__n388["type"] := "Literal";
__n388["value"] := "#27: Number(\"-9\") === -9";
__n388["raw"] := "'#27: Number(\"-9\") === -9'";
__n387 := [ __n388 ];
__n385["arguments"] := __n387;
__n384["expression"] := __n385;
__n383 := [ __n384 ];
__n382["body"] := __n383;
__n374["consequent"] := __n382;
__n374["alternate"] := null;
__n1 := [ __n2, __n16, __n30, __n45, __n59, __n73, __n88, __n102, __n116, __n131, __n145, __n159, __n174, __n188, __n202, __n217, __n231, __n245, __n260, __n274, __n288, __n303, __n317, __n331, __n346, __n360, __n374 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n389 := [  ];
__n0["variableDeclarations"] := __n389;
__n390 := [  ];
__n0["functionDeclarations"] := __n390;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}