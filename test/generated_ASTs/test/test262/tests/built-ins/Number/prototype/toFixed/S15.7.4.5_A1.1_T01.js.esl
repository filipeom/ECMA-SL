function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Number";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "prototype";
__n8["raw"] := "\"prototype\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["object"] := __n6;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "toFixed";
__n9["raw"] := "\"toFixed\"";
__n5["property"] := __n9;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n10 := [  ];
__n4["arguments"] := __n10;
__n3["left"] := __n4;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "0";
__n11["raw"] := "\"0\"";
__n3["right"] := __n11;
__n2["test"] := __n3;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "$ERROR";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1: Number.prototype.toFixed() === \"0\"";
__n18["raw"] := "'#1: Number.prototype.toFixed() === \"0\"'";
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n2["consequent"] := __n12;
__n2["alternate"] := null;
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!==";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Number";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "prototype";
__n25["raw"] := "\"prototype\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["object"] := __n23;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "toFixed";
__n26["raw"] := "\"toFixed\"";
__n22["property"] := __n26;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 0.;
__n28["raw"] := "0";
__n27 := [ __n28 ];
__n21["arguments"] := __n27;
__n20["left"] := __n21;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "0";
__n29["raw"] := "\"0\"";
__n20["right"] := __n29;
__n19["test"] := __n20;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "$ERROR";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "#2: Number.prototype.toFixed(0) === \"0\"";
__n36["raw"] := "'#2: Number.prototype.toFixed(0) === \"0\"'";
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n19["consequent"] := __n30;
__n19["alternate"] := null;
__n37 := {  };
__n37["type"] := "IfStatement";
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "!==";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Number";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "prototype";
__n43["raw"] := "\"prototype\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["object"] := __n41;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "toFixed";
__n44["raw"] := "\"toFixed\"";
__n40["property"] := __n44;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 1.;
__n46["raw"] := "1";
__n45 := [ __n46 ];
__n39["arguments"] := __n45;
__n38["left"] := __n39;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "0.0";
__n47["raw"] := "\"0.0\"";
__n38["right"] := __n47;
__n37["test"] := __n38;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "$ERROR";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "#3: Number.prototype.toFixed(1) === \"0.0\"";
__n54["raw"] := "'#3: Number.prototype.toFixed(1) === \"0.0\"'";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["expression"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n37["consequent"] := __n48;
__n37["alternate"] := null;
__n55 := {  };
__n55["type"] := "IfStatement";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "!==";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Number";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "prototype";
__n61["raw"] := "\"prototype\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n58["object"] := __n59;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "toFixed";
__n62["raw"] := "\"toFixed\"";
__n58["property"] := __n62;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := 1.1;
__n64["raw"] := "1.1";
__n63 := [ __n64 ];
__n57["arguments"] := __n63;
__n56["left"] := __n57;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "0.0";
__n65["raw"] := "\"0.0\"";
__n56["right"] := __n65;
__n55["test"] := __n56;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "#4: Number.prototype.toFixed(1.1) === \"0.0\"";
__n72["raw"] := "'#4: Number.prototype.toFixed(1.1) === \"0.0\"'";
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n55["consequent"] := __n66;
__n55["alternate"] := null;
__n73 := {  };
__n73["type"] := "IfStatement";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "!==";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "Number";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "prototype";
__n79["raw"] := "\"prototype\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n76["object"] := __n77;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "toFixed";
__n80["raw"] := "\"toFixed\"";
__n76["property"] := __n80;
__n76["computed"] := true;
__n75["callee"] := __n76;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 0.9;
__n82["raw"] := "0.9";
__n81 := [ __n82 ];
__n75["arguments"] := __n81;
__n74["left"] := __n75;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "0";
__n83["raw"] := "\"0\"";
__n74["right"] := __n83;
__n73["test"] := __n74;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "$ERROR";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "#5: Number.prototype.toFixed(0.9) === \"0\"";
__n90["raw"] := "'#5: Number.prototype.toFixed(0.9) === \"0\"'";
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86["expression"] := __n87;
__n85 := [ __n86 ];
__n84["body"] := __n85;
__n73["consequent"] := __n84;
__n73["alternate"] := null;
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "!==";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "MemberExpression";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "Number";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "prototype";
__n97["raw"] := "\"prototype\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["object"] := __n95;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "toFixed";
__n98["raw"] := "\"toFixed\"";
__n94["property"] := __n98;
__n94["computed"] := true;
__n93["callee"] := __n94;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "1";
__n100["raw"] := "\"1\"";
__n99 := [ __n100 ];
__n93["arguments"] := __n99;
__n92["left"] := __n93;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "0.0";
__n101["raw"] := "\"0.0\"";
__n92["right"] := __n101;
__n91["test"] := __n92;
__n102 := {  };
__n102["type"] := "BlockStatement";
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "$ERROR";
__n105["callee"] := __n106;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "#6: Number.prototype.toFixed(\"1\") === \"0.0\"";
__n108["raw"] := "'#6: Number.prototype.toFixed(\"1\") === \"0.0\"'";
__n107 := [ __n108 ];
__n105["arguments"] := __n107;
__n104["expression"] := __n105;
__n103 := [ __n104 ];
__n102["body"] := __n103;
__n91["consequent"] := __n102;
__n91["alternate"] := null;
__n109 := {  };
__n109["type"] := "IfStatement";
__n110 := {  };
__n110["type"] := "BinaryExpression";
__n110["operator"] := "!==";
__n111 := {  };
__n111["type"] := "CallExpression";
__n112 := {  };
__n112["type"] := "MemberExpression";
__n113 := {  };
__n113["type"] := "MemberExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "Number";
__n113["object"] := __n114;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "prototype";
__n115["raw"] := "\"prototype\"";
__n113["property"] := __n115;
__n113["computed"] := true;
__n112["object"] := __n113;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "toFixed";
__n116["raw"] := "\"toFixed\"";
__n112["property"] := __n116;
__n112["computed"] := true;
__n111["callee"] := __n112;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "1.1";
__n118["raw"] := "\"1.1\"";
__n117 := [ __n118 ];
__n111["arguments"] := __n117;
__n110["left"] := __n111;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "0.0";
__n119["raw"] := "\"0.0\"";
__n110["right"] := __n119;
__n109["test"] := __n110;
__n120 := {  };
__n120["type"] := "BlockStatement";
__n122 := {  };
__n122["type"] := "ExpressionStatement";
__n123 := {  };
__n123["type"] := "CallExpression";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "$ERROR";
__n123["callee"] := __n124;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "#7: Number.prototype.toFixed(\"1.1\") === \"0.0\"";
__n126["raw"] := "'#7: Number.prototype.toFixed(\"1.1\") === \"0.0\"'";
__n125 := [ __n126 ];
__n123["arguments"] := __n125;
__n122["expression"] := __n123;
__n121 := [ __n122 ];
__n120["body"] := __n121;
__n109["consequent"] := __n120;
__n109["alternate"] := null;
__n127 := {  };
__n127["type"] := "IfStatement";
__n128 := {  };
__n128["type"] := "BinaryExpression";
__n128["operator"] := "!==";
__n129 := {  };
__n129["type"] := "CallExpression";
__n130 := {  };
__n130["type"] := "MemberExpression";
__n131 := {  };
__n131["type"] := "MemberExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "Number";
__n131["object"] := __n132;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "prototype";
__n133["raw"] := "\"prototype\"";
__n131["property"] := __n133;
__n131["computed"] := true;
__n130["object"] := __n131;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "toFixed";
__n134["raw"] := "\"toFixed\"";
__n130["property"] := __n134;
__n130["computed"] := true;
__n129["callee"] := __n130;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "0.9";
__n136["raw"] := "\"0.9\"";
__n135 := [ __n136 ];
__n129["arguments"] := __n135;
__n128["left"] := __n129;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "0";
__n137["raw"] := "\"0\"";
__n128["right"] := __n137;
__n127["test"] := __n128;
__n138 := {  };
__n138["type"] := "BlockStatement";
__n140 := {  };
__n140["type"] := "ExpressionStatement";
__n141 := {  };
__n141["type"] := "CallExpression";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "$ERROR";
__n141["callee"] := __n142;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "#8: Number.prototype.toFixed(\"0.9\") === \"0\"";
__n144["raw"] := "'#8: Number.prototype.toFixed(\"0.9\") === \"0\"'";
__n143 := [ __n144 ];
__n141["arguments"] := __n143;
__n140["expression"] := __n141;
__n139 := [ __n140 ];
__n138["body"] := __n139;
__n127["consequent"] := __n138;
__n127["alternate"] := null;
__n145 := {  };
__n145["type"] := "IfStatement";
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "!==";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "MemberExpression";
__n149 := {  };
__n149["type"] := "MemberExpression";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "Number";
__n149["object"] := __n150;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "prototype";
__n151["raw"] := "\"prototype\"";
__n149["property"] := __n151;
__n149["computed"] := true;
__n148["object"] := __n149;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := "toFixed";
__n152["raw"] := "\"toFixed\"";
__n148["property"] := __n152;
__n148["computed"] := true;
__n147["callee"] := __n148;
__n154 := {  };
__n154["type"] := "MemberExpression";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "Number";
__n154["object"] := __n155;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := "NaN";
__n156["raw"] := "\"NaN\"";
__n154["property"] := __n156;
__n154["computed"] := true;
__n153 := [ __n154 ];
__n147["arguments"] := __n153;
__n146["left"] := __n147;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := "0";
__n157["raw"] := "\"0\"";
__n146["right"] := __n157;
__n145["test"] := __n146;
__n158 := {  };
__n158["type"] := "BlockStatement";
__n160 := {  };
__n160["type"] := "ExpressionStatement";
__n161 := {  };
__n161["type"] := "CallExpression";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "$ERROR";
__n161["callee"] := __n162;
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := "#9: Number.prototype.toFixed(Number.NaN) === \"0\"";
__n164["raw"] := "'#9: Number.prototype.toFixed(Number.NaN) === \"0\"'";
__n163 := [ __n164 ];
__n161["arguments"] := __n163;
__n160["expression"] := __n161;
__n159 := [ __n160 ];
__n158["body"] := __n159;
__n145["consequent"] := __n158;
__n145["alternate"] := null;
__n165 := {  };
__n165["type"] := "IfStatement";
__n166 := {  };
__n166["type"] := "BinaryExpression";
__n166["operator"] := "!==";
__n167 := {  };
__n167["type"] := "CallExpression";
__n168 := {  };
__n168["type"] := "MemberExpression";
__n169 := {  };
__n169["type"] := "MemberExpression";
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "Number";
__n169["object"] := __n170;
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := "prototype";
__n171["raw"] := "\"prototype\"";
__n169["property"] := __n171;
__n169["computed"] := true;
__n168["object"] := __n169;
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := "toFixed";
__n172["raw"] := "\"toFixed\"";
__n168["property"] := __n172;
__n168["computed"] := true;
__n167["callee"] := __n168;
__n174 := {  };
__n174["type"] := "Literal";
__n174["value"] := "some string";
__n174["raw"] := "\"some string\"";
__n173 := [ __n174 ];
__n167["arguments"] := __n173;
__n166["left"] := __n167;
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := "0";
__n175["raw"] := "\"0\"";
__n166["right"] := __n175;
__n165["test"] := __n166;
__n176 := {  };
__n176["type"] := "BlockStatement";
__n178 := {  };
__n178["type"] := "ExpressionStatement";
__n179 := {  };
__n179["type"] := "CallExpression";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "$ERROR";
__n179["callee"] := __n180;
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := "#9: Number.prototype.toFixed(\"some string\") === \"0\"";
__n182["raw"] := "'#9: Number.prototype.toFixed(\"some string\") === \"0\"'";
__n181 := [ __n182 ];
__n179["arguments"] := __n181;
__n178["expression"] := __n179;
__n177 := [ __n178 ];
__n176["body"] := __n177;
__n165["consequent"] := __n176;
__n165["alternate"] := null;
__n183 := {  };
__n183["type"] := "TryStatement";
__n184 := {  };
__n184["type"] := "BlockStatement";
__n186 := {  };
__n186["type"] := "IfStatement";
__n187 := {  };
__n187["type"] := "BinaryExpression";
__n187["operator"] := "!==";
__n188 := {  };
__n188["type"] := "CallExpression";
__n189 := {  };
__n189["type"] := "MemberExpression";
__n190 := {  };
__n190["type"] := "MemberExpression";
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "Number";
__n190["object"] := __n191;
__n192 := {  };
__n192["type"] := "Literal";
__n192["value"] := "prototype";
__n192["raw"] := "\"prototype\"";
__n190["property"] := __n192;
__n190["computed"] := true;
__n189["object"] := __n190;
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := "toFixed";
__n193["raw"] := "\"toFixed\"";
__n189["property"] := __n193;
__n189["computed"] := true;
__n188["callee"] := __n189;
__n195 := {  };
__n195["type"] := "UnaryExpression";
__n195["operator"] := "-";
__n196 := {  };
__n196["type"] := "Literal";
__n196["value"] := 0.1;
__n196["raw"] := "0.1";
__n195["argument"] := __n196;
__n195["prefix"] := true;
__n194 := [ __n195 ];
__n188["arguments"] := __n194;
__n187["left"] := __n188;
__n197 := {  };
__n197["type"] := "Literal";
__n197["value"] := "0";
__n197["raw"] := "\"0\"";
__n187["right"] := __n197;
__n186["test"] := __n187;
__n198 := {  };
__n198["type"] := "BlockStatement";
__n200 := {  };
__n200["type"] := "ExpressionStatement";
__n201 := {  };
__n201["type"] := "CallExpression";
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "$ERROR";
__n201["callee"] := __n202;
__n204 := {  };
__n204["type"] := "Literal";
__n204["value"] := "#10: Number.prototype.toFixed(-0.1) === \"0\"";
__n204["raw"] := "'#10: Number.prototype.toFixed(-0.1) === \"0\"'";
__n203 := [ __n204 ];
__n201["arguments"] := __n203;
__n200["expression"] := __n201;
__n199 := [ __n200 ];
__n198["body"] := __n199;
__n186["consequent"] := __n198;
__n186["alternate"] := null;
__n185 := [ __n186 ];
__n184["body"] := __n185;
__n183["block"] := __n184;
__n205 := {  };
__n205["type"] := "CatchClause";
__n206 := {  };
__n206["type"] := "Identifier";
__n206["name"] := "e";
__n205["param"] := __n206;
__n207 := {  };
__n207["type"] := "BlockStatement";
__n209 := {  };
__n209["type"] := "ExpressionStatement";
__n210 := {  };
__n210["type"] := "CallExpression";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "$ERROR";
__n210["callee"] := __n211;
__n213 := {  };
__n213["type"] := "BinaryExpression";
__n213["operator"] := "+";
__n214 := {  };
__n214["type"] := "Literal";
__n214["value"] := "#10: Number.prototype.toFixed(-0.1) should not throw ";
__n214["raw"] := "'#10: Number.prototype.toFixed(-0.1) should not throw '";
__n213["left"] := __n214;
__n215 := {  };
__n215["type"] := "Identifier";
__n215["name"] := "e";
__n213["right"] := __n215;
__n212 := [ __n213 ];
__n210["arguments"] := __n212;
__n209["expression"] := __n210;
__n208 := [ __n209 ];
__n207["body"] := __n208;
__n205["body"] := __n207;
__n183["handler"] := __n205;
__n183["finalizer"] := null;
__n1 := [ __n2, __n19, __n37, __n55, __n73, __n91, __n109, __n127, __n145, __n165, __n183 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n216 := [  ];
__n0["variableDeclarations"] := __n216;
__n217 := [  ];
__n0["functionDeclarations"] := __n217;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}