function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Number";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1e+21;
__n9["raw"] := "1e21";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n5["object"] := __n6;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "toFixed";
__n10["raw"] := "\"toFixed\"";
__n5["property"] := __n10;
__n5["computed"] := true;
__n4["callee"] := __n5;
__n11 := [  ];
__n4["arguments"] := __n11;
__n3["left"] := __n4;
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "String";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1e+21;
__n15["raw"] := "1e21";
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n3["right"] := __n12;
__n2["test"] := __n3;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "$ERROR";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "#1: (new Number(1e21)).prototype.toFixed() === String(1e21)";
__n22["raw"] := "'#1: (new Number(1e21)).prototype.toFixed() === String(1e21)'";
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n18["expression"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n2["consequent"] := __n16;
__n2["alternate"] := null;
__n23 := {  };
__n23["type"] := "IfStatement";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "!==";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "NewExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Number";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 1e+21;
__n30["raw"] := "1e21";
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["object"] := __n27;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "toFixed";
__n31["raw"] := "\"toFixed\"";
__n26["property"] := __n31;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 0.;
__n33["raw"] := "0";
__n32 := [ __n33 ];
__n25["arguments"] := __n32;
__n24["left"] := __n25;
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "String";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 1e+21;
__n37["raw"] := "1e21";
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n24["right"] := __n34;
__n23["test"] := __n24;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "$ERROR";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "#2: (new Number(1e21)).prototype.toFixed(0) === String(1e21)";
__n44["raw"] := "'#2: (new Number(1e21)).prototype.toFixed(0) === String(1e21)'";
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n23["consequent"] := __n38;
__n23["alternate"] := null;
__n45 := {  };
__n45["type"] := "IfStatement";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "NewExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "Number";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 1e+21;
__n52["raw"] := "1e21";
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["object"] := __n49;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "toFixed";
__n53["raw"] := "\"toFixed\"";
__n48["property"] := __n53;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 1.;
__n55["raw"] := "1";
__n54 := [ __n55 ];
__n47["arguments"] := __n54;
__n46["left"] := __n47;
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "String";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 1e+21;
__n59["raw"] := "1e21";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n46["right"] := __n56;
__n45["test"] := __n46;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "$ERROR";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "#3: (new Number(1e21)).prototype.toFixed(1) === String(1e21)";
__n66["raw"] := "'#3: (new Number(1e21)).prototype.toFixed(1) === String(1e21)'";
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n45["consequent"] := __n60;
__n45["alternate"] := null;
__n67 := {  };
__n67["type"] := "IfStatement";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "!==";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "NewExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "Number";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 1e+21;
__n74["raw"] := "1e21";
__n73 := [ __n74 ];
__n71["arguments"] := __n73;
__n70["object"] := __n71;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "toFixed";
__n75["raw"] := "\"toFixed\"";
__n70["property"] := __n75;
__n70["computed"] := true;
__n69["callee"] := __n70;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 1.1;
__n77["raw"] := "1.1";
__n76 := [ __n77 ];
__n69["arguments"] := __n76;
__n68["left"] := __n69;
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "String";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := 1e+21;
__n81["raw"] := "1e21";
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n68["right"] := __n78;
__n67["test"] := __n68;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$ERROR";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "#4: (new Number(1e21)).toFixed(1.1) === String(1e21)";
__n88["raw"] := "'#4: (new Number(1e21)).toFixed(1.1) === String(1e21)'";
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n67["consequent"] := __n82;
__n67["alternate"] := null;
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "!==";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "MemberExpression";
__n93 := {  };
__n93["type"] := "NewExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "Number";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := 1e+21;
__n96["raw"] := "1e21";
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["object"] := __n93;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "toFixed";
__n97["raw"] := "\"toFixed\"";
__n92["property"] := __n97;
__n92["computed"] := true;
__n91["callee"] := __n92;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 0.9;
__n99["raw"] := "0.9";
__n98 := [ __n99 ];
__n91["arguments"] := __n98;
__n90["left"] := __n91;
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "String";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := 1e+21;
__n103["raw"] := "1e21";
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n90["right"] := __n100;
__n89["test"] := __n90;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "$ERROR";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "#5: (new Number(1e21)).toFixed(0.9) === String(1e21)";
__n110["raw"] := "'#5: (new Number(1e21)).toFixed(0.9) === String(1e21)'";
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n105 := [ __n106 ];
__n104["body"] := __n105;
__n89["consequent"] := __n104;
__n89["alternate"] := null;
__n111 := {  };
__n111["type"] := "IfStatement";
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "!==";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "MemberExpression";
__n115 := {  };
__n115["type"] := "NewExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "Number";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 1e+21;
__n118["raw"] := "1e21";
__n117 := [ __n118 ];
__n115["arguments"] := __n117;
__n114["object"] := __n115;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "toFixed";
__n119["raw"] := "\"toFixed\"";
__n114["property"] := __n119;
__n114["computed"] := true;
__n113["callee"] := __n114;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "1";
__n121["raw"] := "\"1\"";
__n120 := [ __n121 ];
__n113["arguments"] := __n120;
__n112["left"] := __n113;
__n122 := {  };
__n122["type"] := "CallExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "String";
__n122["callee"] := __n123;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := 1e+21;
__n125["raw"] := "1e21";
__n124 := [ __n125 ];
__n122["arguments"] := __n124;
__n112["right"] := __n122;
__n111["test"] := __n112;
__n126 := {  };
__n126["type"] := "BlockStatement";
__n128 := {  };
__n128["type"] := "ExpressionStatement";
__n129 := {  };
__n129["type"] := "CallExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "$ERROR";
__n129["callee"] := __n130;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := "#6: (new Number(1e21)).toFixed(\"1\") === String(1e21)";
__n132["raw"] := "'#6: (new Number(1e21)).toFixed(\"1\") === String(1e21)'";
__n131 := [ __n132 ];
__n129["arguments"] := __n131;
__n128["expression"] := __n129;
__n127 := [ __n128 ];
__n126["body"] := __n127;
__n111["consequent"] := __n126;
__n111["alternate"] := null;
__n133 := {  };
__n133["type"] := "IfStatement";
__n134 := {  };
__n134["type"] := "BinaryExpression";
__n134["operator"] := "!==";
__n135 := {  };
__n135["type"] := "CallExpression";
__n136 := {  };
__n136["type"] := "MemberExpression";
__n137 := {  };
__n137["type"] := "NewExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "Number";
__n137["callee"] := __n138;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := 1e+21;
__n140["raw"] := "1e21";
__n139 := [ __n140 ];
__n137["arguments"] := __n139;
__n136["object"] := __n137;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "toFixed";
__n141["raw"] := "\"toFixed\"";
__n136["property"] := __n141;
__n136["computed"] := true;
__n135["callee"] := __n136;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := "1.1";
__n143["raw"] := "\"1.1\"";
__n142 := [ __n143 ];
__n135["arguments"] := __n142;
__n134["left"] := __n135;
__n144 := {  };
__n144["type"] := "CallExpression";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "String";
__n144["callee"] := __n145;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := 1e+21;
__n147["raw"] := "1e21";
__n146 := [ __n147 ];
__n144["arguments"] := __n146;
__n134["right"] := __n144;
__n133["test"] := __n134;
__n148 := {  };
__n148["type"] := "BlockStatement";
__n150 := {  };
__n150["type"] := "ExpressionStatement";
__n151 := {  };
__n151["type"] := "CallExpression";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "$ERROR";
__n151["callee"] := __n152;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "#7: (new Number(1e21)).toFixed(\"1.1\") === String(1e21)";
__n154["raw"] := "'#7: (new Number(1e21)).toFixed(\"1.1\") === String(1e21)'";
__n153 := [ __n154 ];
__n151["arguments"] := __n153;
__n150["expression"] := __n151;
__n149 := [ __n150 ];
__n148["body"] := __n149;
__n133["consequent"] := __n148;
__n133["alternate"] := null;
__n155 := {  };
__n155["type"] := "IfStatement";
__n156 := {  };
__n156["type"] := "BinaryExpression";
__n156["operator"] := "!==";
__n157 := {  };
__n157["type"] := "CallExpression";
__n158 := {  };
__n158["type"] := "MemberExpression";
__n159 := {  };
__n159["type"] := "NewExpression";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "Number";
__n159["callee"] := __n160;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := 1e+21;
__n162["raw"] := "1e21";
__n161 := [ __n162 ];
__n159["arguments"] := __n161;
__n158["object"] := __n159;
__n163 := {  };
__n163["type"] := "Literal";
__n163["value"] := "toFixed";
__n163["raw"] := "\"toFixed\"";
__n158["property"] := __n163;
__n158["computed"] := true;
__n157["callee"] := __n158;
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := "0.9";
__n165["raw"] := "\"0.9\"";
__n164 := [ __n165 ];
__n157["arguments"] := __n164;
__n156["left"] := __n157;
__n166 := {  };
__n166["type"] := "CallExpression";
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "String";
__n166["callee"] := __n167;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := 1e+21;
__n169["raw"] := "1e21";
__n168 := [ __n169 ];
__n166["arguments"] := __n168;
__n156["right"] := __n166;
__n155["test"] := __n156;
__n170 := {  };
__n170["type"] := "BlockStatement";
__n172 := {  };
__n172["type"] := "ExpressionStatement";
__n173 := {  };
__n173["type"] := "CallExpression";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "$ERROR";
__n173["callee"] := __n174;
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := "#8: (new Number(1e21)).toFixed(\"0.9\") === String(1e21)";
__n176["raw"] := "'#8: (new Number(1e21)).toFixed(\"0.9\") === String(1e21)'";
__n175 := [ __n176 ];
__n173["arguments"] := __n175;
__n172["expression"] := __n173;
__n171 := [ __n172 ];
__n170["body"] := __n171;
__n155["consequent"] := __n170;
__n155["alternate"] := null;
__n177 := {  };
__n177["type"] := "IfStatement";
__n178 := {  };
__n178["type"] := "BinaryExpression";
__n178["operator"] := "!==";
__n179 := {  };
__n179["type"] := "CallExpression";
__n180 := {  };
__n180["type"] := "MemberExpression";
__n181 := {  };
__n181["type"] := "NewExpression";
__n182 := {  };
__n182["type"] := "Identifier";
__n182["name"] := "Number";
__n181["callee"] := __n182;
__n184 := {  };
__n184["type"] := "Literal";
__n184["value"] := 1e+21;
__n184["raw"] := "1e21";
__n183 := [ __n184 ];
__n181["arguments"] := __n183;
__n180["object"] := __n181;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "toFixed";
__n185["raw"] := "\"toFixed\"";
__n180["property"] := __n185;
__n180["computed"] := true;
__n179["callee"] := __n180;
__n187 := {  };
__n187["type"] := "MemberExpression";
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "Number";
__n187["object"] := __n188;
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := "NaN";
__n189["raw"] := "\"NaN\"";
__n187["property"] := __n189;
__n187["computed"] := true;
__n186 := [ __n187 ];
__n179["arguments"] := __n186;
__n178["left"] := __n179;
__n190 := {  };
__n190["type"] := "CallExpression";
__n191 := {  };
__n191["type"] := "Identifier";
__n191["name"] := "String";
__n190["callee"] := __n191;
__n193 := {  };
__n193["type"] := "Literal";
__n193["value"] := 1e+21;
__n193["raw"] := "1e21";
__n192 := [ __n193 ];
__n190["arguments"] := __n192;
__n178["right"] := __n190;
__n177["test"] := __n178;
__n194 := {  };
__n194["type"] := "BlockStatement";
__n196 := {  };
__n196["type"] := "ExpressionStatement";
__n197 := {  };
__n197["type"] := "CallExpression";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "$ERROR";
__n197["callee"] := __n198;
__n200 := {  };
__n200["type"] := "Literal";
__n200["value"] := "#9: (new Number(1e21)).toFixed(Number.NaN) === String(1e21)";
__n200["raw"] := "'#9: (new Number(1e21)).toFixed(Number.NaN) === String(1e21)'";
__n199 := [ __n200 ];
__n197["arguments"] := __n199;
__n196["expression"] := __n197;
__n195 := [ __n196 ];
__n194["body"] := __n195;
__n177["consequent"] := __n194;
__n177["alternate"] := null;
__n201 := {  };
__n201["type"] := "IfStatement";
__n202 := {  };
__n202["type"] := "BinaryExpression";
__n202["operator"] := "!==";
__n203 := {  };
__n203["type"] := "CallExpression";
__n204 := {  };
__n204["type"] := "MemberExpression";
__n205 := {  };
__n205["type"] := "NewExpression";
__n206 := {  };
__n206["type"] := "Identifier";
__n206["name"] := "Number";
__n205["callee"] := __n206;
__n208 := {  };
__n208["type"] := "Literal";
__n208["value"] := 1e+21;
__n208["raw"] := "1e21";
__n207 := [ __n208 ];
__n205["arguments"] := __n207;
__n204["object"] := __n205;
__n209 := {  };
__n209["type"] := "Literal";
__n209["value"] := "toFixed";
__n209["raw"] := "\"toFixed\"";
__n204["property"] := __n209;
__n204["computed"] := true;
__n203["callee"] := __n204;
__n211 := {  };
__n211["type"] := "Literal";
__n211["value"] := "some string";
__n211["raw"] := "\"some string\"";
__n210 := [ __n211 ];
__n203["arguments"] := __n210;
__n202["left"] := __n203;
__n212 := {  };
__n212["type"] := "CallExpression";
__n213 := {  };
__n213["type"] := "Identifier";
__n213["name"] := "String";
__n212["callee"] := __n213;
__n215 := {  };
__n215["type"] := "Literal";
__n215["value"] := 1e+21;
__n215["raw"] := "1e21";
__n214 := [ __n215 ];
__n212["arguments"] := __n214;
__n202["right"] := __n212;
__n201["test"] := __n202;
__n216 := {  };
__n216["type"] := "BlockStatement";
__n218 := {  };
__n218["type"] := "ExpressionStatement";
__n219 := {  };
__n219["type"] := "CallExpression";
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "$ERROR";
__n219["callee"] := __n220;
__n222 := {  };
__n222["type"] := "Literal";
__n222["value"] := "#9: (new Number(1e21)).toFixed(\"some string\") === String(1e21)";
__n222["raw"] := "'#9: (new Number(1e21)).toFixed(\"some string\") === String(1e21)'";
__n221 := [ __n222 ];
__n219["arguments"] := __n221;
__n218["expression"] := __n219;
__n217 := [ __n218 ];
__n216["body"] := __n217;
__n201["consequent"] := __n216;
__n201["alternate"] := null;
__n223 := {  };
__n223["type"] := "TryStatement";
__n224 := {  };
__n224["type"] := "BlockStatement";
__n226 := {  };
__n226["type"] := "ExpressionStatement";
__n227 := {  };
__n227["type"] := "AssignmentExpression";
__n227["operator"] := "=";
__n228 := {  };
__n228["type"] := "Identifier";
__n228["name"] := "s";
__n227["left"] := __n228;
__n229 := {  };
__n229["type"] := "CallExpression";
__n230 := {  };
__n230["type"] := "MemberExpression";
__n231 := {  };
__n231["type"] := "NewExpression";
__n232 := {  };
__n232["type"] := "Identifier";
__n232["name"] := "Number";
__n231["callee"] := __n232;
__n234 := {  };
__n234["type"] := "Literal";
__n234["value"] := 1e+21;
__n234["raw"] := "1e21";
__n233 := [ __n234 ];
__n231["arguments"] := __n233;
__n230["object"] := __n231;
__n235 := {  };
__n235["type"] := "Literal";
__n235["value"] := "toFixed";
__n235["raw"] := "\"toFixed\"";
__n230["property"] := __n235;
__n230["computed"] := true;
__n229["callee"] := __n230;
__n237 := {  };
__n237["type"] := "MemberExpression";
__n238 := {  };
__n238["type"] := "Identifier";
__n238["name"] := "Number";
__n237["object"] := __n238;
__n239 := {  };
__n239["type"] := "Literal";
__n239["value"] := "POSITIVE_INFINITY";
__n239["raw"] := "\"POSITIVE_INFINITY\"";
__n237["property"] := __n239;
__n237["computed"] := true;
__n236 := [ __n237 ];
__n229["arguments"] := __n236;
__n227["right"] := __n229;
__n226["expression"] := __n227;
__n240 := {  };
__n240["type"] := "ExpressionStatement";
__n241 := {  };
__n241["type"] := "CallExpression";
__n242 := {  };
__n242["type"] := "Identifier";
__n242["name"] := "$ERROR";
__n241["callee"] := __n242;
__n244 := {  };
__n244["type"] := "Literal";
__n244["value"] := "#10: (new Number(1e21)).toFixed(Number.POSITIVE_INFINITY) should throw RangeError, not return NaN";
__n244["raw"] := "'#10: (new Number(1e21)).toFixed(Number.POSITIVE_INFINITY) should throw RangeError, not return NaN'";
__n243 := [ __n244 ];
__n241["arguments"] := __n243;
__n240["expression"] := __n241;
__n225 := [ __n226, __n240 ];
__n224["body"] := __n225;
__n223["block"] := __n224;
__n245 := {  };
__n245["type"] := "CatchClause";
__n246 := {  };
__n246["type"] := "Identifier";
__n246["name"] := "e";
__n245["param"] := __n246;
__n247 := {  };
__n247["type"] := "BlockStatement";
__n249 := {  };
__n249["type"] := "IfStatement";
__n250 := {  };
__n250["type"] := "UnaryExpression";
__n250["operator"] := "!";
__n251 := {  };
__n251["type"] := "BinaryExpression";
__n251["operator"] := "instanceof";
__n252 := {  };
__n252["type"] := "Identifier";
__n252["name"] := "e";
__n251["left"] := __n252;
__n253 := {  };
__n253["type"] := "Identifier";
__n253["name"] := "RangeError";
__n251["right"] := __n253;
__n250["argument"] := __n251;
__n250["prefix"] := true;
__n249["test"] := __n250;
__n254 := {  };
__n254["type"] := "BlockStatement";
__n256 := {  };
__n256["type"] := "ExpressionStatement";
__n257 := {  };
__n257["type"] := "CallExpression";
__n258 := {  };
__n258["type"] := "Identifier";
__n258["name"] := "$ERROR";
__n257["callee"] := __n258;
__n260 := {  };
__n260["type"] := "BinaryExpression";
__n260["operator"] := "+";
__n261 := {  };
__n261["type"] := "Literal";
__n261["value"] := "#10: (new Number(1e21)).toFixed(Number.POSITIVE_INFINITY) should throw RangeError, not ";
__n261["raw"] := "'#10: (new Number(1e21)).toFixed(Number.POSITIVE_INFINITY) should throw RangeError, not '";
__n260["left"] := __n261;
__n262 := {  };
__n262["type"] := "Identifier";
__n262["name"] := "e";
__n260["right"] := __n262;
__n259 := [ __n260 ];
__n257["arguments"] := __n259;
__n256["expression"] := __n257;
__n255 := [ __n256 ];
__n254["body"] := __n255;
__n249["consequent"] := __n254;
__n249["alternate"] := null;
__n248 := [ __n249 ];
__n247["body"] := __n248;
__n245["body"] := __n247;
__n223["handler"] := __n245;
__n223["finalizer"] := null;
__n1 := [ __n2, __n23, __n45, __n67, __n89, __n111, __n133, __n155, __n177, __n201, __n223 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n263 := [  ];
__n0["variableDeclarations"] := __n263;
__n264 := [  ];
__n0["functionDeclarations"] := __n264;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}