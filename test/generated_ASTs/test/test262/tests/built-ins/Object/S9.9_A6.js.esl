function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "MyObject";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "x";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "NewExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "MyObject";
__n8["callee"] := __n9;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 1.;
__n11["raw"] := "1";
__n10 := [ __n11 ];
__n8["arguments"] := __n10;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "y";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Object";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "x";
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n20 := {  };
__n20["type"] := "IfStatement";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "!==";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "y";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "valueOf";
__n25["raw"] := "\"valueOf\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n26 := [  ];
__n22["arguments"] := __n26;
__n21["left"] := __n22;
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "x";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "valueOf";
__n30["raw"] := "\"valueOf\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n31 := [  ];
__n27["arguments"] := __n31;
__n21["right"] := __n27;
__n20["test"] := __n21;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "$ERROR";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "+";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "#1: Object(obj).valueOf() === obj.valueOf(). Actual: ";
__n39["raw"] := "'#1: Object(obj).valueOf() === obj.valueOf(). Actual: '";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Object";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "obj";
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n41["object"] := __n42;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "valueOf";
__n46["raw"] := "\"valueOf\"";
__n41["property"] := __n46;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n47 := [  ];
__n40["arguments"] := __n47;
__n38["right"] := __n40;
__n37 := [ __n38 ];
__n35["arguments"] := __n37;
__n34["expression"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n20["consequent"] := __n32;
__n20["alternate"] := null;
__n48 := {  };
__n48["type"] := "IfStatement";
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "!==";
__n50 := {  };
__n50["type"] := "UnaryExpression";
__n50["operator"] := "typeof";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "y";
__n50["argument"] := __n51;
__n50["prefix"] := true;
__n49["left"] := __n50;
__n52 := {  };
__n52["type"] := "UnaryExpression";
__n52["operator"] := "typeof";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "x";
__n52["argument"] := __n53;
__n52["prefix"] := true;
__n49["right"] := __n52;
__n48["test"] := __n49;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "$ERROR";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "+";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "#2: typeof Object(obj) === typeof obj. Actual: ";
__n61["raw"] := "'#2: typeof Object(obj) === typeof obj. Actual: '";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "UnaryExpression";
__n62["operator"] := "typeof";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "Object";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "obj";
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["argument"] := __n63;
__n62["prefix"] := true;
__n60["right"] := __n62;
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n48["consequent"] := __n54;
__n48["alternate"] := null;
__n67 := {  };
__n67["type"] := "IfStatement";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "!==";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "y";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "constructor";
__n72["raw"] := "\"constructor\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n69["object"] := __n70;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "prototype";
__n73["raw"] := "\"prototype\"";
__n69["property"] := __n73;
__n69["computed"] := true;
__n68["left"] := __n69;
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "x";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "constructor";
__n77["raw"] := "\"constructor\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["object"] := __n75;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "prototype";
__n78["raw"] := "\"prototype\"";
__n74["property"] := __n78;
__n74["computed"] := true;
__n68["right"] := __n74;
__n67["test"] := __n68;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "$ERROR";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "+";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "#3: Object(obj).constructor.prototype === obj.constructor.prototype. Actual: ";
__n86["raw"] := "'#3: Object(obj).constructor.prototype === obj.constructor.prototype. Actual: '";
__n85["left"] := __n86;
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "Object";
__n89["callee"] := __n90;
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "obj";
__n91 := [ __n92 ];
__n89["arguments"] := __n91;
__n88["object"] := __n89;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "constructor";
__n93["raw"] := "\"constructor\"";
__n88["property"] := __n93;
__n88["computed"] := true;
__n87["object"] := __n88;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "prototype";
__n94["raw"] := "\"prototype\"";
__n87["property"] := __n94;
__n87["computed"] := true;
__n85["right"] := __n87;
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n67["consequent"] := __n79;
__n67["alternate"] := null;
__n95 := {  };
__n95["type"] := "IfStatement";
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "!==";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "y";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "x";
__n96["right"] := __n98;
__n95["test"] := __n96;
__n99 := {  };
__n99["type"] := "BlockStatement";
__n101 := {  };
__n101["type"] := "ExpressionStatement";
__n102 := {  };
__n102["type"] := "CallExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "$ERROR";
__n102["callee"] := __n103;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "#4: Object(obj) === obj";
__n105["raw"] := "'#4: Object(obj) === obj'";
__n104 := [ __n105 ];
__n102["arguments"] := __n104;
__n101["expression"] := __n102;
__n100 := [ __n101 ];
__n99["body"] := __n100;
__n95["consequent"] := __n99;
__n95["alternate"] := null;
__n1 := [ __n2, __n4, __n12, __n20, __n48, __n67, __n95 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n106 := [ "x", "y" ];
__n0["variableDeclarations"] := __n106;
__n108 := {  };
__n108["type"] := "FunctionDeclaration";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "MyObject";
__n108["id"] := __n109;
__n110 := [ "val" ];
__n108["params"] := __n110;
__n111 := {  };
__n111["type"] := "BlockStatement";
__n113 := {  };
__n113["type"] := "ExpressionStatement";
__n114 := {  };
__n114["type"] := "AssignmentExpression";
__n114["operator"] := "=";
__n115 := {  };
__n115["type"] := "MemberExpression";
__n116 := {  };
__n116["type"] := "ThisExpression";
__n115["object"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "value";
__n117["raw"] := "\"value\"";
__n115["property"] := __n117;
__n115["computed"] := true;
__n114["left"] := __n115;
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "val";
__n114["right"] := __n118;
__n113["expression"] := __n114;
__n119 := {  };
__n119["type"] := "ExpressionStatement";
__n120 := {  };
__n120["type"] := "AssignmentExpression";
__n120["operator"] := "=";
__n121 := {  };
__n121["type"] := "MemberExpression";
__n122 := {  };
__n122["type"] := "ThisExpression";
__n121["object"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := "valueOf";
__n123["raw"] := "\"valueOf\"";
__n121["property"] := __n123;
__n121["computed"] := true;
__n120["left"] := __n121;
__n124 := {  };
__n124["type"] := "FunctionExpression";
__n124["id"] := null;
__n125 := [  ];
__n124["params"] := __n125;
__n126 := {  };
__n126["type"] := "BlockStatement";
__n128 := {  };
__n128["type"] := "ReturnStatement";
__n129 := {  };
__n129["type"] := "MemberExpression";
__n130 := {  };
__n130["type"] := "ThisExpression";
__n129["object"] := __n130;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "value";
__n131["raw"] := "\"value\"";
__n129["property"] := __n131;
__n129["computed"] := true;
__n128["argument"] := __n129;
__n127 := [ __n128 ];
__n126["body"] := __n127;
__n132 := [  ];
__n126["variableDeclarations"] := __n132;
__n133 := [  ];
__n126["functionDeclarations"] := __n133;
__n126["codeType"] := "function";
__n126["strict"] := false;
__n124["body"] := __n126;
__n124["generator"] := false;
__n124["async"] := false;
__n124["expression"] := false;
__n120["right"] := __n124;
__n119["expression"] := __n120;
__n112 := [ __n113, __n119 ];
__n111["body"] := __n112;
__n134 := [  ];
__n111["variableDeclarations"] := __n134;
__n135 := [  ];
__n111["functionDeclarations"] := __n135;
__n111["codeType"] := "function";
__n111["strict"] := false;
__n108["body"] := __n111;
__n108["generator"] := false;
__n108["async"] := false;
__n108["expression"] := false;
__n107 := [ __n108 ];
__n0["functionDeclarations"] := __n107;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}