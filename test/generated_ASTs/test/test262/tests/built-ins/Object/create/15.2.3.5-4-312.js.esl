function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "isEnumerable";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "newObj";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Object";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "create";
__n14["raw"] := "\"create\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "ObjectExpression";
__n17 := [  ];
__n16["properties"] := __n17;
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "prop";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "ObjectExpression";
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "set";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "FunctionExpression";
__n26["id"] := null;
__n27 := [  ];
__n26["params"] := __n27;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n29 := [  ];
__n28["body"] := __n29;
__n30 := [  ];
__n28["variableDeclarations"] := __n30;
__n31 := [  ];
__n28["functionDeclarations"] := __n31;
__n28["codeType"] := "function";
__n28["strict"] := false;
__n26["body"] := __n28;
__n26["generator"] := false;
__n26["async"] := false;
__n26["expression"] := false;
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n32 := {  };
__n32["type"] := "Property";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "get";
__n32["key"] := __n33;
__n34 := {  };
__n34["type"] := "FunctionExpression";
__n34["id"] := null;
__n35 := [  ];
__n34["params"] := __n35;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n37 := [  ];
__n36["body"] := __n37;
__n38 := [  ];
__n36["variableDeclarations"] := __n38;
__n39 := [  ];
__n36["functionDeclarations"] := __n39;
__n36["codeType"] := "function";
__n36["strict"] := false;
__n34["body"] := __n36;
__n34["generator"] := false;
__n34["async"] := false;
__n34["expression"] := false;
__n32["value"] := __n34;
__n32["computed"] := false;
__n32["kind"] := "init";
__n32["shorthand"] := false;
__n40 := {  };
__n40["type"] := "Property";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "configurable";
__n40["key"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := true;
__n42["raw"] := "true";
__n40["value"] := __n42;
__n40["computed"] := false;
__n40["kind"] := "init";
__n40["shorthand"] := false;
__n23 := [ __n24, __n32, __n40 ];
__n22["properties"] := __n23;
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n19 := [ __n20 ];
__n18["properties"] := __n19;
__n15 := [ __n16, __n18 ];
__n11["arguments"] := __n15;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n43 := {  };
__n43["type"] := "VariableDeclaration";
__n45 := {  };
__n45["type"] := "VariableDeclarator";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "hasProperty";
__n45["id"] := __n46;
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "newObj";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "hasOwnProperty";
__n50["raw"] := "\"hasOwnProperty\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "prop";
__n52["raw"] := "\"prop\"";
__n51 := [ __n52 ];
__n47["arguments"] := __n51;
__n45["init"] := __n47;
__n44 := [ __n45 ];
__n43["declarations"] := __n44;
__n43["kind"] := "var";
__n53 := {  };
__n53["type"] := "ForInStatement";
__n54 := {  };
__n54["type"] := "VariableDeclarator";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "p";
__n54["id"] := __n55;
__n54["init"] := null;
__n53["left"] := __n54;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "newObj";
__n53["right"] := __n56;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "IfStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "===";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "p";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "prop";
__n62["raw"] := "\"prop\"";
__n60["right"] := __n62;
__n59["test"] := __n60;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "AssignmentExpression";
__n66["operator"] := "=";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "isEnumerable";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := true;
__n68["raw"] := "true";
__n66["right"] := __n68;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n59["consequent"] := __n63;
__n59["alternate"] := null;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n53["body"] := __n57;
__n53["each"] := false;
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "assert";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "hasProperty";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "hasProperty !== true";
__n74["raw"] := "'hasProperty !== true'";
__n72 := [ __n73, __n74 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "assert";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "sameValue";
__n79["raw"] := "\"sameValue\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n76["callee"] := __n77;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "isEnumerable";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := false;
__n82["raw"] := "false";
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "isEnumerable";
__n83["raw"] := "'isEnumerable'";
__n80 := [ __n81, __n82, __n83 ];
__n76["arguments"] := __n80;
__n75["expression"] := __n76;
__n1 := [ __n2, __n7, __n43, __n53, __n69, __n75 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n84 := [ "isEnumerable", "newObj", "hasProperty", "p" ];
__n0["variableDeclarations"] := __n84;
__n85 := [  ];
__n0["functionDeclarations"] := __n85;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}