function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arr";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "defineProperties";
__n12["raw"] := "\"defineProperties\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "arr";
__n15 := {  };
__n15["type"] := "ObjectExpression";
__n17 := {  };
__n17["type"] := "Property";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "0";
__n18["raw"] := "\"0\"";
__n17["key"] := __n18;
__n19 := {  };
__n19["type"] := "ObjectExpression";
__n21 := {  };
__n21["type"] := "Property";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "set";
__n21["key"] := __n22;
__n23 := {  };
__n23["type"] := "FunctionExpression";
__n23["id"] := null;
__n24 := [  ];
__n23["params"] := __n24;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n26 := [  ];
__n25["body"] := __n26;
__n27 := [  ];
__n25["variableDeclarations"] := __n27;
__n28 := [  ];
__n25["functionDeclarations"] := __n28;
__n25["codeType"] := "function";
__n25["strict"] := false;
__n23["body"] := __n25;
__n23["generator"] := false;
__n23["async"] := false;
__n23["expression"] := false;
__n21["value"] := __n23;
__n21["computed"] := false;
__n21["kind"] := "init";
__n21["shorthand"] := false;
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "get";
__n29["key"] := __n30;
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [  ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n34 := [  ];
__n33["body"] := __n34;
__n35 := [  ];
__n33["variableDeclarations"] := __n35;
__n36 := [  ];
__n33["functionDeclarations"] := __n36;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["async"] := false;
__n31["expression"] := false;
__n29["value"] := __n31;
__n29["computed"] := false;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n37 := {  };
__n37["type"] := "Property";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "configurable";
__n37["key"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := true;
__n39["raw"] := "true";
__n37["value"] := __n39;
__n37["computed"] := false;
__n37["kind"] := "init";
__n37["shorthand"] := false;
__n20 := [ __n21, __n29, __n37 ];
__n19["properties"] := __n20;
__n17["value"] := __n19;
__n17["computed"] := false;
__n17["kind"] := "init";
__n17["shorthand"] := false;
__n16 := [ __n17 ];
__n15["properties"] := __n16;
__n13 := [ __n14, __n15 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n40 := {  };
__n40["type"] := "ForInStatement";
__n41 := {  };
__n41["type"] := "VariableDeclarator";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "i";
__n41["id"] := __n42;
__n41["init"] := null;
__n40["left"] := __n41;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "arr";
__n40["right"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "assert";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "sameValue";
__n50["raw"] := "\"sameValue\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "LogicalExpression";
__n52["operator"] := "&&";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "===";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "i";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "0";
__n55["raw"] := "\"0\"";
__n53["right"] := __n55;
__n52["left"] := __n53;
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "arr";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "hasOwnProperty";
__n59["raw"] := "\"hasOwnProperty\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["callee"] := __n57;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "0";
__n61["raw"] := "\"0\"";
__n60 := [ __n61 ];
__n56["arguments"] := __n60;
__n52["right"] := __n56;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := false;
__n62["raw"] := "false";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "i === \"0\" && arr.hasOwnProperty(\"0\")";
__n63["raw"] := "'i === \"0\" && arr.hasOwnProperty(\"0\")'";
__n51 := [ __n52, __n62, __n63 ];
__n47["arguments"] := __n51;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n40["body"] := __n44;
__n40["each"] := false;
__n1 := [ __n2, __n8, __n40 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n64 := [ "arr", "i" ];
__n0["variableDeclarations"] := __n64;
__n65 := [  ];
__n0["functionDeclarations"] := __n65;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}