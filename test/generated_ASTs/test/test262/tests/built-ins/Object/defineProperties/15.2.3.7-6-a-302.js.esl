function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arg";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "FunctionExpression";
__n7["id"] := null;
__n8 := [  ];
__n7["params"] := __n8;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ReturnStatement";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "arguments";
__n11["argument"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n13 := [  ];
__n9["variableDeclarations"] := __n13;
__n14 := [  ];
__n9["functionDeclarations"] := __n14;
__n9["codeType"] := "function";
__n9["strict"] := false;
__n7["body"] := __n9;
__n7["generator"] := false;
__n7["async"] := false;
__n7["expression"] := false;
__n6["callee"] := __n7;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 1.;
__n16["raw"] := "1";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 2.;
__n17["raw"] := "2";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 3.;
__n18["raw"] := "3";
__n15 := [ __n16, __n17, __n18 ];
__n6["arguments"] := __n15;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Object";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "defineProperties";
__n23["raw"] := "\"defineProperties\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "arg";
__n26 := {  };
__n26["type"] := "ObjectExpression";
__n28 := {  };
__n28["type"] := "Property";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "genericProperty";
__n29["raw"] := "\"genericProperty\"";
__n28["key"] := __n29;
__n30 := {  };
__n30["type"] := "ObjectExpression";
__n32 := {  };
__n32["type"] := "Property";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "value";
__n32["key"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1001.;
__n34["raw"] := "1001";
__n32["value"] := __n34;
__n32["computed"] := false;
__n32["kind"] := "init";
__n32["shorthand"] := false;
__n35 := {  };
__n35["type"] := "Property";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "writable";
__n35["key"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := true;
__n37["raw"] := "true";
__n35["value"] := __n37;
__n35["computed"] := false;
__n35["kind"] := "init";
__n35["shorthand"] := false;
__n38 := {  };
__n38["type"] := "Property";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "enumerable";
__n38["key"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := true;
__n40["raw"] := "true";
__n38["value"] := __n40;
__n38["computed"] := false;
__n38["kind"] := "init";
__n38["shorthand"] := false;
__n41 := {  };
__n41["type"] := "Property";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "configurable";
__n41["key"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := true;
__n43["raw"] := "true";
__n41["value"] := __n43;
__n41["computed"] := false;
__n41["kind"] := "init";
__n41["shorthand"] := false;
__n31 := [ __n32, __n35, __n38, __n41 ];
__n30["properties"] := __n31;
__n28["value"] := __n30;
__n28["computed"] := false;
__n28["kind"] := "init";
__n28["shorthand"] := false;
__n27 := [ __n28 ];
__n26["properties"] := __n27;
__n24 := [ __n25, __n26 ];
__n20["arguments"] := __n24;
__n19["expression"] := __n20;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "verifyEqualTo";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "arg";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "genericProperty";
__n49["raw"] := "\"genericProperty\"";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 1001.;
__n50["raw"] := "1001";
__n47 := [ __n48, __n49, __n50 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "verifyWritable";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "arg";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "genericProperty";
__n56["raw"] := "\"genericProperty\"";
__n54 := [ __n55, __n56 ];
__n52["arguments"] := __n54;
__n51["expression"] := __n52;
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "verifyEnumerable";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "arg";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "genericProperty";
__n62["raw"] := "\"genericProperty\"";
__n60 := [ __n61, __n62 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "verifyConfigurable";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "arg";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "genericProperty";
__n68["raw"] := "\"genericProperty\"";
__n66 := [ __n67, __n68 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n1 := [ __n2, __n19, __n44, __n51, __n57, __n63 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n69 := [ "arg" ];
__n0["variableDeclarations"] := __n69;
__n70 := [  ];
__n0["functionDeclarations"] := __n70;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}