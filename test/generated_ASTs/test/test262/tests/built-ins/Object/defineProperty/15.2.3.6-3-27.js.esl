function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "accessed";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := false;
__n12["raw"] := "false";
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "proto";
__n15["id"] := __n16;
__n17 := {  };
__n17["type"] := "ObjectExpression";
__n18 := [  ];
__n17["properties"] := __n18;
__n15["init"] := __n17;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Object";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "defineProperty";
__n23["raw"] := "\"defineProperty\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "proto";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "enumerable";
__n26["raw"] := "\"enumerable\"";
__n27 := {  };
__n27["type"] := "ObjectExpression";
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "get";
__n29["key"] := __n30;
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [  ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ReturnStatement";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := true;
__n36["raw"] := "true";
__n35["argument"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n37 := [  ];
__n33["variableDeclarations"] := __n37;
__n38 := [  ];
__n33["functionDeclarations"] := __n38;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["async"] := false;
__n31["expression"] := false;
__n29["value"] := __n31;
__n29["computed"] := false;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n28 := [ __n29 ];
__n27["properties"] := __n28;
__n24 := [ __n25, __n26, __n27 ];
__n20["arguments"] := __n24;
__n19["expression"] := __n20;
__n39 := {  };
__n39["type"] := "VariableDeclaration";
__n41 := {  };
__n41["type"] := "VariableDeclarator";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "ConstructFun";
__n41["id"] := __n42;
__n43 := {  };
__n43["type"] := "FunctionExpression";
__n43["id"] := null;
__n44 := [  ];
__n43["params"] := __n44;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n46 := [  ];
__n45["body"] := __n46;
__n47 := [  ];
__n45["variableDeclarations"] := __n47;
__n48 := [  ];
__n45["functionDeclarations"] := __n48;
__n45["codeType"] := "function";
__n45["strict"] := false;
__n43["body"] := __n45;
__n43["generator"] := false;
__n43["async"] := false;
__n43["expression"] := false;
__n41["init"] := __n43;
__n40 := [ __n41 ];
__n39["declarations"] := __n40;
__n39["kind"] := "var";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "AssignmentExpression";
__n50["operator"] := "=";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "ConstructFun";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "prototype";
__n53["raw"] := "\"prototype\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["left"] := __n51;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "proto";
__n50["right"] := __n54;
__n49["expression"] := __n50;
__n55 := {  };
__n55["type"] := "VariableDeclaration";
__n57 := {  };
__n57["type"] := "VariableDeclarator";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "child";
__n57["id"] := __n58;
__n59 := {  };
__n59["type"] := "NewExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "ConstructFun";
__n59["callee"] := __n60;
__n61 := [  ];
__n59["arguments"] := __n61;
__n57["init"] := __n59;
__n56 := [ __n57 ];
__n55["declarations"] := __n56;
__n55["kind"] := "var";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Object";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "defineProperty";
__n66["raw"] := "\"defineProperty\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "obj";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "property";
__n69["raw"] := "\"property\"";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "child";
__n67 := [ __n68, __n69, __n70 ];
__n63["arguments"] := __n67;
__n62["expression"] := __n63;
__n71 := {  };
__n71["type"] := "ForInStatement";
__n72 := {  };
__n72["type"] := "VariableDeclarator";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "prop";
__n72["id"] := __n73;
__n72["init"] := null;
__n71["left"] := __n72;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "obj";
__n71["right"] := __n74;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "IfStatement";
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "===";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "prop";
__n78["left"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "property";
__n80["raw"] := "\"property\"";
__n78["right"] := __n80;
__n77["test"] := __n78;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "AssignmentExpression";
__n84["operator"] := "=";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "accessed";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := true;
__n86["raw"] := "true";
__n84["right"] := __n86;
__n83["expression"] := __n84;
__n82 := [ __n83 ];
__n81["body"] := __n82;
__n77["consequent"] := __n81;
__n77["alternate"] := null;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n71["body"] := __n75;
__n71["each"] := false;
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "assert";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "accessed";
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "accessed !== true";
__n92["raw"] := "'accessed !== true'";
__n90 := [ __n91, __n92 ];
__n88["arguments"] := __n90;
__n87["expression"] := __n88;
__n1 := [ __n2, __n8, __n13, __n19, __n39, __n49, __n55, __n62, __n71, __n87 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n93 := [ "obj", "accessed", "proto", "ConstructFun", "child", "prop" ];
__n0["variableDeclarations"] := __n93;
__n94 := [  ];
__n0["functionDeclarations"] := __n94;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}