function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arrObj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "setFunc";
__n8["expression"] := __n9;
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Object";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "defineProperty";
__n14["raw"] := "\"defineProperty\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arrObj";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "property";
__n17["raw"] := "\"property\"";
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "set";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "setFunc";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n19 := [ __n20 ];
__n18["properties"] := __n19;
__n15 := [ __n16, __n17, __n18 ];
__n11["arguments"] := __n15;
__n10["expression"] := __n11;
__n23 := {  };
__n23["type"] := "TryStatement";
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Object";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "defineProperty";
__n30["raw"] := "\"defineProperty\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "arrObj";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "property";
__n33["raw"] := "\"property\"";
__n34 := {  };
__n34["type"] := "ObjectExpression";
__n36 := {  };
__n36["type"] := "Property";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "set";
__n36["key"] := __n37;
__n38 := {  };
__n38["type"] := "FunctionExpression";
__n38["id"] := null;
__n39 := [  ];
__n38["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n41 := [  ];
__n40["body"] := __n41;
__n42 := [  ];
__n40["variableDeclarations"] := __n42;
__n43 := [  ];
__n40["functionDeclarations"] := __n43;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n38["body"] := __n40;
__n38["generator"] := false;
__n38["async"] := false;
__n38["expression"] := false;
__n36["value"] := __n38;
__n36["computed"] := false;
__n36["kind"] := "init";
__n36["shorthand"] := false;
__n35 := [ __n36 ];
__n34["properties"] := __n35;
__n31 := [ __n32, __n33, __n34 ];
__n27["arguments"] := __n31;
__n26["expression"] := __n27;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$ERROR";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "Expected an exception.";
__n48["raw"] := "\"Expected an exception.\"";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n25 := [ __n26, __n44 ];
__n24["body"] := __n25;
__n23["block"] := __n24;
__n49 := {  };
__n49["type"] := "CatchClause";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "e";
__n49["param"] := __n50;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "verifyWritable";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "arrObj";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "property";
__n58["raw"] := "\"property\"";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "setVerifyHelpProp";
__n59["raw"] := "\"setVerifyHelpProp\"";
__n56 := [ __n57, __n58, __n59 ];
__n54["arguments"] := __n56;
__n53["expression"] := __n54;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "verifyNotEnumerable";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "arrObj";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "property";
__n65["raw"] := "\"property\"";
__n63 := [ __n64, __n65 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "verifyNotConfigurable";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "arrObj";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "property";
__n71["raw"] := "\"property\"";
__n69 := [ __n70, __n71 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n72 := {  };
__n72["type"] := "IfStatement";
__n73 := {  };
__n73["type"] := "UnaryExpression";
__n73["operator"] := "!";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "instanceof";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "e";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "TypeError";
__n74["right"] := __n76;
__n73["argument"] := __n74;
__n73["prefix"] := true;
__n72["test"] := __n73;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "$ERROR";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "+";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "Expected TypeError, got ";
__n84["raw"] := "\"Expected TypeError, got \"";
__n83["left"] := __n84;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "e";
__n83["right"] := __n85;
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n78 := [ __n79 ];
__n77["body"] := __n78;
__n72["consequent"] := __n77;
__n72["alternate"] := null;
__n52 := [ __n53, __n60, __n66, __n72 ];
__n51["body"] := __n52;
__n49["body"] := __n51;
__n23["handler"] := __n49;
__n23["finalizer"] := null;
__n1 := [ __n2, __n8, __n10, __n23 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n86 := [ "arrObj" ];
__n0["variableDeclarations"] := __n86;
__n88 := {  };
__n88["type"] := "FunctionDeclaration";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "setFunc";
__n88["id"] := __n89;
__n90 := [ "value" ];
__n88["params"] := __n90;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "AssignmentExpression";
__n94["operator"] := "=";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "arrObj";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "setVerifyHelpProp";
__n97["raw"] := "\"setVerifyHelpProp\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["left"] := __n95;
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "value";
__n94["right"] := __n98;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n99 := [  ];
__n91["variableDeclarations"] := __n99;
__n100 := [  ];
__n91["functionDeclarations"] := __n100;
__n91["codeType"] := "function";
__n91["strict"] := false;
__n88["body"] := __n91;
__n88["generator"] := false;
__n88["async"] := false;
__n88["expression"] := false;
__n87 := [ __n88 ];
__n0["functionDeclarations"] := __n87;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}