function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "FunctionExpression";
__n4["id"] := null;
__n5 := [  ];
__n4["params"] := __n5;
__n6 := {  };
__n6["type"] := "BlockStatement";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "getFunc1";
__n8["expression"] := __n9;
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Object";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "defineProperty";
__n14["raw"] := "\"defineProperty\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "arguments";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "0";
__n17["raw"] := "\"0\"";
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "get";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "getFunc1";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n23 := {  };
__n23["type"] := "Property";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "enumerable";
__n23["key"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := false;
__n25["raw"] := "false";
__n23["value"] := __n25;
__n23["computed"] := false;
__n23["kind"] := "init";
__n23["shorthand"] := false;
__n26 := {  };
__n26["type"] := "Property";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "configurable";
__n26["key"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := false;
__n28["raw"] := "false";
__n26["value"] := __n28;
__n26["computed"] := false;
__n26["kind"] := "init";
__n26["shorthand"] := false;
__n19 := [ __n20, __n23, __n26 ];
__n18["properties"] := __n19;
__n15 := [ __n16, __n17, __n18 ];
__n11["arguments"] := __n15;
__n10["expression"] := __n11;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "getFunc2";
__n29["expression"] := __n30;
__n31 := {  };
__n31["type"] := "TryStatement";
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Object";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "defineProperty";
__n38["raw"] := "\"defineProperty\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "arguments";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "0";
__n41["raw"] := "\"0\"";
__n42 := {  };
__n42["type"] := "ObjectExpression";
__n44 := {  };
__n44["type"] := "Property";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "get";
__n44["key"] := __n45;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "getFunc2";
__n44["value"] := __n46;
__n44["computed"] := false;
__n44["kind"] := "init";
__n44["shorthand"] := false;
__n43 := [ __n44 ];
__n42["properties"] := __n43;
__n39 := [ __n40, __n41, __n42 ];
__n35["arguments"] := __n39;
__n34["expression"] := __n35;
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "$ERROR";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "Expected an exception.";
__n51["raw"] := "\"Expected an exception.\"";
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n33 := [ __n34, __n47 ];
__n32["body"] := __n33;
__n31["block"] := __n32;
__n52 := {  };
__n52["type"] := "CatchClause";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "e";
__n52["param"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "verifyEqualTo";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "arguments";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "0";
__n61["raw"] := "\"0\"";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "getFunc1";
__n62["callee"] := __n63;
__n64 := [  ];
__n62["arguments"] := __n64;
__n59 := [ __n60, __n61, __n62 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "verifyNotEnumerable";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "arguments";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "0";
__n70["raw"] := "\"0\"";
__n68 := [ __n69, __n70 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "verifyNotConfigurable";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "arguments";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "0";
__n76["raw"] := "\"0\"";
__n74 := [ __n75, __n76 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n77 := {  };
__n77["type"] := "IfStatement";
__n78 := {  };
__n78["type"] := "UnaryExpression";
__n78["operator"] := "!";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "instanceof";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "e";
__n79["left"] := __n80;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "TypeError";
__n79["right"] := __n81;
__n78["argument"] := __n79;
__n78["prefix"] := true;
__n77["test"] := __n78;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$ERROR";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "+";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "Expected TypeError, got ";
__n89["raw"] := "\"Expected TypeError, got \"";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "e";
__n88["right"] := __n90;
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n77["consequent"] := __n82;
__n77["alternate"] := null;
__n55 := [ __n56, __n65, __n71, __n77 ];
__n54["body"] := __n55;
__n52["body"] := __n54;
__n31["handler"] := __n52;
__n31["finalizer"] := null;
__n7 := [ __n8, __n10, __n29, __n31 ];
__n6["body"] := __n7;
__n91 := [  ];
__n6["variableDeclarations"] := __n91;
__n93 := {  };
__n93["type"] := "FunctionDeclaration";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "getFunc1";
__n93["id"] := __n94;
__n95 := [  ];
__n93["params"] := __n95;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ReturnStatement";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := 0.;
__n99["raw"] := "0";
__n98["argument"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n100 := [  ];
__n96["variableDeclarations"] := __n100;
__n101 := [  ];
__n96["functionDeclarations"] := __n101;
__n96["codeType"] := "function";
__n96["strict"] := false;
__n93["body"] := __n96;
__n93["generator"] := false;
__n93["async"] := false;
__n93["expression"] := false;
__n102 := {  };
__n102["type"] := "FunctionDeclaration";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "getFunc2";
__n102["id"] := __n103;
__n104 := [  ];
__n102["params"] := __n104;
__n105 := {  };
__n105["type"] := "BlockStatement";
__n107 := {  };
__n107["type"] := "ReturnStatement";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := 10.;
__n108["raw"] := "10";
__n107["argument"] := __n108;
__n106 := [ __n107 ];
__n105["body"] := __n106;
__n109 := [  ];
__n105["variableDeclarations"] := __n109;
__n110 := [  ];
__n105["functionDeclarations"] := __n110;
__n105["codeType"] := "function";
__n105["strict"] := false;
__n102["body"] := __n105;
__n102["generator"] := false;
__n102["async"] := false;
__n102["expression"] := false;
__n92 := [ __n93, __n102 ];
__n6["functionDeclarations"] := __n92;
__n6["codeType"] := "function";
__n6["strict"] := false;
__n4["body"] := __n6;
__n4["generator"] := false;
__n4["async"] := false;
__n4["expression"] := false;
__n3["callee"] := __n4;
__n111 := [  ];
__n3["arguments"] := __n111;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n112 := [  ];
__n0["variableDeclarations"] := __n112;
__n113 := [  ];
__n0["functionDeclarations"] := __n113;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}