function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "foo";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "FunctionExpression";
__n6["id"] := null;
__n7 := [  ];
__n6["params"] := __n7;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n9 := [  ];
__n8["body"] := __n9;
__n10 := [  ];
__n8["variableDeclarations"] := __n10;
__n11 := [  ];
__n8["functionDeclarations"] := __n11;
__n8["codeType"] := "function";
__n8["strict"] := false;
__n6["body"] := __n8;
__n6["generator"] := false;
__n6["async"] := false;
__n6["expression"] := false;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Object";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "defineProperty";
__n16["raw"] := "\"defineProperty\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Function";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "prototype";
__n20["raw"] := "\"prototype\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "prop";
__n21["raw"] := "\"prop\"";
__n22 := {  };
__n22["type"] := "ObjectExpression";
__n24 := {  };
__n24["type"] := "Property";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "value";
__n24["key"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 1001.;
__n26["raw"] := "1001";
__n24["value"] := __n26;
__n24["computed"] := false;
__n24["kind"] := "init";
__n24["shorthand"] := false;
__n27 := {  };
__n27["type"] := "Property";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "writable";
__n27["key"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := false;
__n29["raw"] := "false";
__n27["value"] := __n29;
__n27["computed"] := false;
__n27["kind"] := "init";
__n27["shorthand"] := false;
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "enumerable";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := false;
__n32["raw"] := "false";
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n33 := {  };
__n33["type"] := "Property";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "configurable";
__n33["key"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := true;
__n35["raw"] := "true";
__n33["value"] := __n35;
__n33["computed"] := false;
__n33["kind"] := "init";
__n33["shorthand"] := false;
__n23 := [ __n24, __n27, __n30, __n33 ];
__n22["properties"] := __n23;
__n17 := [ __n18, __n21, __n22 ];
__n13["arguments"] := __n17;
__n12["expression"] := __n13;
__n36 := {  };
__n36["type"] := "VariableDeclaration";
__n38 := {  };
__n38["type"] := "VariableDeclarator";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "obj";
__n38["id"] := __n39;
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "foo";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "bind";
__n43["raw"] := "\"bind\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "ObjectExpression";
__n46 := [  ];
__n45["properties"] := __n46;
__n44 := [ __n45 ];
__n40["arguments"] := __n44;
__n38["init"] := __n40;
__n37 := [ __n38 ];
__n36["declarations"] := __n37;
__n36["kind"] := "var";
__n47 := {  };
__n47["type"] := "VariableDeclaration";
__n49 := {  };
__n49["type"] := "VariableDeclarator";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "verifyEnumerable";
__n49["id"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := false;
__n51["raw"] := "false";
__n49["init"] := __n51;
__n48 := [ __n49 ];
__n47["declarations"] := __n48;
__n47["kind"] := "var";
__n52 := {  };
__n52["type"] := "ForInStatement";
__n53 := {  };
__n53["type"] := "VariableDeclarator";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "p";
__n53["id"] := __n54;
__n53["init"] := null;
__n52["left"] := __n53;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "obj";
__n52["right"] := __n55;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "IfStatement";
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "===";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "p";
__n59["left"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "prop";
__n61["raw"] := "\"prop\"";
__n59["right"] := __n61;
__n58["test"] := __n59;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "AssignmentExpression";
__n65["operator"] := "=";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "verifyEnumerable";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := true;
__n67["raw"] := "true";
__n65["right"] := __n67;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n58["consequent"] := __n62;
__n58["alternate"] := null;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n52["body"] := __n56;
__n52["each"] := false;
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "assert";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "sameValue";
__n72["raw"] := "\"sameValue\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n69["callee"] := __n70;
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "obj";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "hasOwnProperty";
__n77["raw"] := "\"hasOwnProperty\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "prop";
__n79["raw"] := "\"prop\"";
__n78 := [ __n79 ];
__n74["arguments"] := __n78;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := false;
__n80["raw"] := "false";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "obj.hasOwnProperty(\"prop\")";
__n81["raw"] := "'obj.hasOwnProperty(\"prop\")'";
__n73 := [ __n74, __n80, __n81 ];
__n69["arguments"] := __n73;
__n68["expression"] := __n69;
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "assert";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "sameValue";
__n86["raw"] := "\"sameValue\"";
__n84["property"] := __n86;
__n84["computed"] := true;
__n83["callee"] := __n84;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "verifyEnumerable";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := false;
__n89["raw"] := "false";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "verifyEnumerable";
__n90["raw"] := "'verifyEnumerable'";
__n87 := [ __n88, __n89, __n90 ];
__n83["arguments"] := __n87;
__n82["expression"] := __n83;
__n1 := [ __n2, __n12, __n36, __n47, __n52, __n68, __n82 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n91 := [ "foo", "obj", "verifyEnumerable", "p" ];
__n0["variableDeclarations"] := __n91;
__n92 := [  ];
__n0["functionDeclarations"] := __n92;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}