function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "UnaryExpression";
__n4["operator"] := "typeof";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Object";
__n6["object"] := __n7;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "prototype";
__n8["raw"] := "\"prototype\"";
__n6["property"] := __n8;
__n6["computed"] := true;
__n5["object"] := __n6;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "valueOf";
__n9["raw"] := "\"valueOf\"";
__n5["property"] := __n9;
__n5["computed"] := true;
__n4["argument"] := __n5;
__n4["prefix"] := true;
__n3["left"] := __n4;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "function";
__n10["raw"] := "\"function\"";
__n3["right"] := __n10;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "#1: valueOf method defined";
__n17["raw"] := "'#1: valueOf method defined'";
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n2["alternate"] := null;
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "obj";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "NewExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Object";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "UnaryExpression";
__n25["operator"] := "void";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 0.;
__n26["raw"] := "0";
__n25["argument"] := __n26;
__n25["prefix"] := true;
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n27 := {  };
__n27["type"] := "IfStatement";
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "!==";
__n29 := {  };
__n29["type"] := "UnaryExpression";
__n29["operator"] := "typeof";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "obj";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "valueOf";
__n32["raw"] := "\"valueOf\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["argument"] := __n30;
__n29["prefix"] := true;
__n28["left"] := __n29;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "function";
__n33["raw"] := "\"function\"";
__n28["right"] := __n33;
__n27["test"] := __n28;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "#2: valueOf method accessed";
__n40["raw"] := "'#2: valueOf method accessed'";
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n27["consequent"] := __n34;
__n27["alternate"] := null;
__n41 := {  };
__n41["type"] := "IfStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "!==";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "obj";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "valueOf";
__n46["raw"] := "\"valueOf\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n47 := [  ];
__n43["arguments"] := __n47;
__n42["left"] := __n43;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "obj";
__n42["right"] := __n48;
__n41["test"] := __n42;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "$ERROR";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "#3: The valueOf method returns its this value";
__n55["raw"] := "'#3: The valueOf method returns its this value'";
__n54 := [ __n55 ];
__n52["arguments"] := __n54;
__n51["expression"] := __n52;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n41["consequent"] := __n49;
__n41["alternate"] := null;
__n1 := [ __n2, __n18, __n27, __n41 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n56 := [ "obj" ];
__n0["variableDeclarations"] := __n56;
__n57 := [  ];
__n0["functionDeclarations"] := __n57;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}