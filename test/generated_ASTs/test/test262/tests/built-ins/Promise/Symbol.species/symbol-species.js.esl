function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "MemberExpression";
__n8["computed"] := true;
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Promise";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Symbol";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "species";
__n12["raw"] := "\"species\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n8["property"] := __n10;
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Promise";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "Promise[Symbol.species] is Promise";
__n14["raw"] := "\"Promise[Symbol.species] is Promise\"";
__n7 := [ __n8, __n13, __n14 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "verifyNotWritable";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Promise";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "Symbol";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "species";
__n22["raw"] := "\"species\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Symbol";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "species";
__n25["raw"] := "\"species\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n18 := [ __n19, __n20, __n23 ];
__n16["arguments"] := __n18;
__n15["expression"] := __n16;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "verifyNotEnumerable";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Promise";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Symbol";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "species";
__n33["raw"] := "\"species\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n29 := [ __n30, __n31 ];
__n27["arguments"] := __n29;
__n26["expression"] := __n27;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "verifyConfigurable";
__n35["callee"] := __n36;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "Promise";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Symbol";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "species";
__n41["raw"] := "\"species\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n37 := [ __n38, __n39 ];
__n35["arguments"] := __n37;
__n34["expression"] := __n35;
__n1 := [ __n2, __n15, __n26, __n34 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n42 := [  ];
__n0["variableDeclarations"] := __n42;
__n43 := [  ];
__n0["functionDeclarations"] := __n43;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}