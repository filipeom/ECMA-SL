function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "arg";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Promise";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "all";
__n16["raw"] := "\"all\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "arg";
__n17 := [ __n18 ];
__n13["arguments"] := __n17;
__n12["object"] := __n13;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "then";
__n19["raw"] := "\"then\"";
__n12["property"] := __n19;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n21 := {  };
__n21["type"] := "FunctionExpression";
__n21["id"] := null;
__n22 := [ "result" ];
__n21["params"] := __n22;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "IfStatement";
__n26 := {  };
__n26["type"] := "UnaryExpression";
__n26["operator"] := "!";
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "instanceof";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "result";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Array";
__n27["right"] := __n29;
__n26["argument"] := __n27;
__n26["prefix"] := true;
__n25["test"] := __n26;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ThrowStatement";
__n33 := {  };
__n33["type"] := "NewExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Test262Error";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "+";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "expected an array from Promise.all, got ";
__n37["raw"] := "\"expected an array from Promise.all, got \"";
__n36["left"] := __n37;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "result";
__n36["right"] := __n38;
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n32["argument"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n25["consequent"] := __n30;
__n25["alternate"] := null;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n39 := [  ];
__n23["variableDeclarations"] := __n39;
__n40 := [  ];
__n23["functionDeclarations"] := __n40;
__n23["codeType"] := "function";
__n23["strict"] := false;
__n21["body"] := __n23;
__n21["generator"] := false;
__n21["async"] := false;
__n21["expression"] := false;
__n20 := [ __n21 ];
__n11["arguments"] := __n20;
__n10["object"] := __n11;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "then";
__n41["raw"] := "\"then\"";
__n10["property"] := __n41;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "$DONE";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$DONE";
__n42 := [ __n43, __n44 ];
__n9["arguments"] := __n42;
__n8["expression"] := __n9;
__n1 := [ __n2, __n8 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n45 := [ "arg" ];
__n0["variableDeclarations"] := __n45;
__n46 := [  ];
__n0["functionDeclarations"] := __n46;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}