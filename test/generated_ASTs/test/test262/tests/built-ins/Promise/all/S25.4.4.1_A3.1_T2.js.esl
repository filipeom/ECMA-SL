function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Promise";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "all";
__n10["raw"] := "\"all\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["callee"] := __n8;
__n12 := {  };
__n12["type"] := "NewExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Error";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "abrupt";
__n15["raw"] := "\"abrupt\"";
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11 := [ __n12 ];
__n7["arguments"] := __n11;
__n6["object"] := __n7;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "then";
__n16["raw"] := "\"then\"";
__n6["property"] := __n16;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n18 := {  };
__n18["type"] := "FunctionExpression";
__n18["id"] := null;
__n19 := [  ];
__n18["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ThrowStatement";
__n23 := {  };
__n23["type"] := "NewExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Test262Error";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "Promise unexpectedly resolved: Promise.all(abruptCompletion) should throw TypeError";
__n26["raw"] := "'Promise unexpectedly resolved: Promise.all(abruptCompletion) should throw TypeError'";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["argument"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n27 := [  ];
__n20["variableDeclarations"] := __n27;
__n28 := [  ];
__n20["functionDeclarations"] := __n28;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n18["body"] := __n20;
__n18["generator"] := false;
__n18["async"] := false;
__n18["expression"] := false;
__n29 := {  };
__n29["type"] := "FunctionExpression";
__n29["id"] := null;
__n30 := [ "err" ];
__n29["params"] := __n30;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "UnaryExpression";
__n34["operator"] := "!";
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "instanceof";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "err";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "TypeError";
__n35["right"] := __n37;
__n34["argument"] := __n35;
__n34["prefix"] := true;
__n33["test"] := __n34;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ThrowStatement";
__n41 := {  };
__n41["type"] := "NewExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "Test262Error";
__n41["callee"] := __n42;
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "+";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "Expected TypeError, got ";
__n45["raw"] := "'Expected TypeError, got '";
__n44["left"] := __n45;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "err";
__n44["right"] := __n46;
__n43 := [ __n44 ];
__n41["arguments"] := __n43;
__n40["argument"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n33["consequent"] := __n38;
__n33["alternate"] := null;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n47 := [  ];
__n31["variableDeclarations"] := __n47;
__n48 := [  ];
__n31["functionDeclarations"] := __n48;
__n31["codeType"] := "function";
__n31["strict"] := false;
__n29["body"] := __n31;
__n29["generator"] := false;
__n29["async"] := false;
__n29["expression"] := false;
__n17 := [ __n18, __n29 ];
__n5["arguments"] := __n17;
__n4["object"] := __n5;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "then";
__n49["raw"] := "\"then\"";
__n4["property"] := __n49;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$DONE";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "$DONE";
__n50 := [ __n51, __n52 ];
__n3["arguments"] := __n50;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n53 := [  ];
__n0["variableDeclarations"] := __n53;
__n54 := [  ];
__n0["functionDeclarations"] := __n54;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}