function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "iterThrows";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "Object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "defineProperty";
__n12["raw"] := "\"defineProperty\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "iterThrows";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Symbol";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "iterator";
__n17["raw"] := "\"iterator\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "get";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "FunctionExpression";
__n22["id"] := null;
__n23 := [  ];
__n22["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ThrowStatement";
__n27 := {  };
__n27["type"] := "NewExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Error";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "abrupt completion";
__n30["raw"] := "\"abrupt completion\"";
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["argument"] := __n27;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n31 := [  ];
__n24["variableDeclarations"] := __n31;
__n32 := [  ];
__n24["functionDeclarations"] := __n32;
__n24["codeType"] := "function";
__n24["strict"] := false;
__n22["body"] := __n24;
__n22["generator"] := false;
__n22["async"] := false;
__n22["expression"] := false;
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n19 := [ __n20 ];
__n18["properties"] := __n19;
__n13 := [ __n14, __n15, __n18 ];
__n9["arguments"] := __n13;
__n8["expression"] := __n9;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Promise";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "all";
__n41["raw"] := "\"all\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "iterThrows";
__n42 := [ __n43 ];
__n38["arguments"] := __n42;
__n37["object"] := __n38;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "then";
__n44["raw"] := "\"then\"";
__n37["property"] := __n44;
__n37["computed"] := true;
__n36["callee"] := __n37;
__n46 := {  };
__n46["type"] := "FunctionExpression";
__n46["id"] := null;
__n47 := [  ];
__n46["params"] := __n47;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ThrowStatement";
__n51 := {  };
__n51["type"] := "NewExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Test262Error";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "Promise unexpectedly fulfilled: Promise.all(iterThrows) should throw TypeError";
__n54["raw"] := "'Promise unexpectedly fulfilled: Promise.all(iterThrows) should throw TypeError'";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n50["argument"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n55 := [  ];
__n48["variableDeclarations"] := __n55;
__n56 := [  ];
__n48["functionDeclarations"] := __n56;
__n48["codeType"] := "function";
__n48["strict"] := false;
__n46["body"] := __n48;
__n46["generator"] := false;
__n46["async"] := false;
__n46["expression"] := false;
__n57 := {  };
__n57["type"] := "FunctionExpression";
__n57["id"] := null;
__n58 := [ "err" ];
__n57["params"] := __n58;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "IfStatement";
__n62 := {  };
__n62["type"] := "UnaryExpression";
__n62["operator"] := "!";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "instanceof";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "err";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Error";
__n63["right"] := __n65;
__n62["argument"] := __n63;
__n62["prefix"] := true;
__n61["test"] := __n62;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ThrowStatement";
__n69 := {  };
__n69["type"] := "NewExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "Test262Error";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "+";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "Expected promise to be rejected with error, got ";
__n73["raw"] := "'Expected promise to be rejected with error, got '";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "err";
__n72["right"] := __n74;
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["argument"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n61["consequent"] := __n66;
__n61["alternate"] := null;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n75 := [  ];
__n59["variableDeclarations"] := __n75;
__n76 := [  ];
__n59["functionDeclarations"] := __n76;
__n59["codeType"] := "function";
__n59["strict"] := false;
__n57["body"] := __n59;
__n57["generator"] := false;
__n57["async"] := false;
__n57["expression"] := false;
__n45 := [ __n46, __n57 ];
__n36["arguments"] := __n45;
__n35["object"] := __n36;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "then";
__n77["raw"] := "\"then\"";
__n35["property"] := __n77;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "$DONE";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "$DONE";
__n78 := [ __n79, __n80 ];
__n34["arguments"] := __n78;
__n33["expression"] := __n34;
__n1 := [ __n2, __n8, __n33 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n81 := [ "iterThrows" ];
__n0["variableDeclarations"] := __n81;
__n82 := [  ];
__n0["functionDeclarations"] := __n82;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}