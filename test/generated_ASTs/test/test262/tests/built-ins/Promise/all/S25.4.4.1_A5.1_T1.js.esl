function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "iterThrows";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "error";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "NewExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Test262Error";
__n12["callee"] := __n13;
__n14 := [  ];
__n12["arguments"] := __n14;
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "AssignmentExpression";
__n16["operator"] := "=";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n17["computed"] := true;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "iterThrows";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Symbol";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "iterator";
__n21["raw"] := "\"iterator\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n17["property"] := __n19;
__n16["left"] := __n17;
__n22 := {  };
__n22["type"] := "FunctionExpression";
__n22["id"] := null;
__n23 := [  ];
__n22["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ReturnStatement";
__n27 := {  };
__n27["type"] := "ObjectExpression";
__n29 := {  };
__n29["type"] := "Property";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "next";
__n29["key"] := __n30;
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [  ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ThrowStatement";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "error";
__n35["argument"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n37 := [  ];
__n33["variableDeclarations"] := __n37;
__n38 := [  ];
__n33["functionDeclarations"] := __n38;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["async"] := false;
__n31["expression"] := false;
__n29["value"] := __n31;
__n29["computed"] := false;
__n29["kind"] := "init";
__n29["shorthand"] := false;
__n28 := [ __n29 ];
__n27["properties"] := __n28;
__n26["argument"] := __n27;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n39 := [  ];
__n24["variableDeclarations"] := __n39;
__n40 := [  ];
__n24["functionDeclarations"] := __n40;
__n24["codeType"] := "function";
__n24["strict"] := false;
__n22["body"] := __n24;
__n22["generator"] := false;
__n22["async"] := false;
__n22["expression"] := false;
__n16["right"] := __n22;
__n15["expression"] := __n16;
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "Promise";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "all";
__n49["raw"] := "\"all\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "iterThrows";
__n50 := [ __n51 ];
__n46["arguments"] := __n50;
__n45["object"] := __n46;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "then";
__n52["raw"] := "\"then\"";
__n45["property"] := __n52;
__n45["computed"] := true;
__n44["callee"] := __n45;
__n54 := {  };
__n54["type"] := "FunctionExpression";
__n54["id"] := null;
__n55 := [  ];
__n54["params"] := __n55;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ThrowStatement";
__n59 := {  };
__n59["type"] := "NewExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Test262Error";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "Promise unexpectedly resolved: Promise.all(iterThrows) should throw TypeError";
__n62["raw"] := "'Promise unexpectedly resolved: Promise.all(iterThrows) should throw TypeError'";
__n61 := [ __n62 ];
__n59["arguments"] := __n61;
__n58["argument"] := __n59;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n63 := [  ];
__n56["variableDeclarations"] := __n63;
__n64 := [  ];
__n56["functionDeclarations"] := __n64;
__n56["codeType"] := "function";
__n56["strict"] := false;
__n54["body"] := __n56;
__n54["generator"] := false;
__n54["async"] := false;
__n54["expression"] := false;
__n65 := {  };
__n65["type"] := "FunctionExpression";
__n65["id"] := null;
__n66 := [ "reason" ];
__n65["params"] := __n66;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "MemberExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "assert";
__n71["object"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "sameValue";
__n73["raw"] := "\"sameValue\"";
__n71["property"] := __n73;
__n71["computed"] := true;
__n70["callee"] := __n71;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "reason";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "error";
__n74 := [ __n75, __n76 ];
__n70["arguments"] := __n74;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n77 := [  ];
__n67["variableDeclarations"] := __n77;
__n78 := [  ];
__n67["functionDeclarations"] := __n78;
__n67["codeType"] := "function";
__n67["strict"] := false;
__n65["body"] := __n67;
__n65["generator"] := false;
__n65["async"] := false;
__n65["expression"] := false;
__n53 := [ __n54, __n65 ];
__n44["arguments"] := __n53;
__n43["object"] := __n44;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "then";
__n79["raw"] := "\"then\"";
__n43["property"] := __n79;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "$DONE";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "$DONE";
__n80 := [ __n81, __n82 ];
__n42["arguments"] := __n80;
__n41["expression"] := __n42;
__n1 := [ __n2, __n8, __n15, __n41 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n83 := [ "iterThrows", "error" ];
__n0["variableDeclarations"] := __n83;
__n84 := [  ];
__n0["functionDeclarations"] := __n84;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}