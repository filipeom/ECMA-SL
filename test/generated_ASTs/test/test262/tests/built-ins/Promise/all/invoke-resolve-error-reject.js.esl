function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "thrown";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Test262Error";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "AssignmentExpression";
__n10["operator"] := "=";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Promise";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "resolve";
__n13["raw"] := "\"resolve\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["left"] := __n11;
__n14 := {  };
__n14["type"] := "FunctionExpression";
__n14["id"] := null;
__n15 := [  ];
__n14["params"] := __n15;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ThrowStatement";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "thrown";
__n18["argument"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n20 := [  ];
__n16["variableDeclarations"] := __n20;
__n21 := [  ];
__n16["functionDeclarations"] := __n21;
__n16["codeType"] := "function";
__n16["strict"] := false;
__n14["body"] := __n16;
__n14["generator"] := false;
__n14["async"] := false;
__n14["expression"] := false;
__n10["right"] := __n14;
__n9["expression"] := __n10;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "Promise";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "all";
__n30["raw"] := "\"all\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "ArrayExpression";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1.;
__n34["raw"] := "1";
__n33 := [ __n34 ];
__n32["elements"] := __n33;
__n31 := [ __n32 ];
__n27["arguments"] := __n31;
__n26["object"] := __n27;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "then";
__n35["raw"] := "\"then\"";
__n26["property"] := __n35;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n37 := {  };
__n37["type"] := "FunctionExpression";
__n37["id"] := null;
__n38 := [  ];
__n37["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ThrowStatement";
__n42 := {  };
__n42["type"] := "NewExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Test262Error";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "The promise should not be fulfilled.";
__n45["raw"] := "'The promise should not be fulfilled.'";
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n41["argument"] := __n42;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n46 := [  ];
__n39["variableDeclarations"] := __n46;
__n47 := [  ];
__n39["functionDeclarations"] := __n47;
__n39["codeType"] := "function";
__n39["strict"] := false;
__n37["body"] := __n39;
__n37["generator"] := false;
__n37["async"] := false;
__n37["expression"] := false;
__n48 := {  };
__n48["type"] := "FunctionExpression";
__n48["id"] := null;
__n49 := [ "reason" ];
__n48["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "IfStatement";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "!==";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "reason";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "thrown";
__n53["right"] := __n55;
__n52["test"] := __n53;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ThrowStatement";
__n59 := {  };
__n59["type"] := "NewExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Test262Error";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "The promise should be rejected with the thrown error object";
__n62["raw"] := "'The promise should be rejected with the thrown error object'";
__n61 := [ __n62 ];
__n59["arguments"] := __n61;
__n58["argument"] := __n59;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n52["consequent"] := __n56;
__n52["alternate"] := null;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n63 := [  ];
__n50["variableDeclarations"] := __n63;
__n64 := [  ];
__n50["functionDeclarations"] := __n64;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n48["body"] := __n50;
__n48["generator"] := false;
__n48["async"] := false;
__n48["expression"] := false;
__n36 := [ __n37, __n48 ];
__n25["arguments"] := __n36;
__n24["object"] := __n25;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "then";
__n65["raw"] := "\"then\"";
__n24["property"] := __n65;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$DONE";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$DONE";
__n66 := [ __n67, __n68 ];
__n23["arguments"] := __n66;
__n22["expression"] := __n23;
__n1 := [ __n2, __n9, __n22 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n69 := [ "thrown" ];
__n0["variableDeclarations"] := __n69;
__n70 := [  ];
__n0["functionDeclarations"] := __n70;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}