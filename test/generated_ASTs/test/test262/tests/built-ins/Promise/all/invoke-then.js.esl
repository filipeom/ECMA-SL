function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "p1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Promise";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "FunctionExpression";
__n9["id"] := null;
__n10 := [  ];
__n9["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n12 := [  ];
__n11["body"] := __n12;
__n13 := [  ];
__n11["variableDeclarations"] := __n13;
__n14 := [  ];
__n11["functionDeclarations"] := __n14;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n9["body"] := __n11;
__n9["generator"] := false;
__n9["async"] := false;
__n9["expression"] := false;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n15 := {  };
__n15["type"] := "VariableDeclaration";
__n17 := {  };
__n17["type"] := "VariableDeclarator";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "p2";
__n17["id"] := __n18;
__n19 := {  };
__n19["type"] := "NewExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "Promise";
__n19["callee"] := __n20;
__n22 := {  };
__n22["type"] := "FunctionExpression";
__n22["id"] := null;
__n23 := [  ];
__n22["params"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n25 := [  ];
__n24["body"] := __n25;
__n26 := [  ];
__n24["variableDeclarations"] := __n26;
__n27 := [  ];
__n24["functionDeclarations"] := __n27;
__n24["codeType"] := "function";
__n24["strict"] := false;
__n22["body"] := __n24;
__n22["generator"] := false;
__n22["async"] := false;
__n22["expression"] := false;
__n21 := [ __n22 ];
__n19["arguments"] := __n21;
__n17["init"] := __n19;
__n16 := [ __n17 ];
__n15["declarations"] := __n16;
__n15["kind"] := "var";
__n28 := {  };
__n28["type"] := "VariableDeclaration";
__n30 := {  };
__n30["type"] := "VariableDeclarator";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "p3";
__n30["id"] := __n31;
__n32 := {  };
__n32["type"] := "NewExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "Promise";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "FunctionExpression";
__n35["id"] := null;
__n36 := [  ];
__n35["params"] := __n36;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n38 := [  ];
__n37["body"] := __n38;
__n39 := [  ];
__n37["variableDeclarations"] := __n39;
__n40 := [  ];
__n37["functionDeclarations"] := __n40;
__n37["codeType"] := "function";
__n37["strict"] := false;
__n35["body"] := __n37;
__n35["generator"] := false;
__n35["async"] := false;
__n35["expression"] := false;
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n30["init"] := __n32;
__n29 := [ __n30 ];
__n28["declarations"] := __n29;
__n28["kind"] := "var";
__n41 := {  };
__n41["type"] := "VariableDeclaration";
__n43 := {  };
__n43["type"] := "VariableDeclarator";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "callCount";
__n43["id"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 0.;
__n45["raw"] := "0";
__n43["init"] := __n45;
__n42 := [ __n43 ];
__n41["declarations"] := __n42;
__n41["kind"] := "var";
__n46 := {  };
__n46["type"] := "VariableDeclaration";
__n48 := {  };
__n48["type"] := "VariableDeclarator";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "currentThis";
__n48["id"] := __n49;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "p1";
__n48["init"] := __n50;
__n47 := [ __n48 ];
__n46["declarations"] := __n47;
__n46["kind"] := "var";
__n51 := {  };
__n51["type"] := "VariableDeclaration";
__n53 := {  };
__n53["type"] := "VariableDeclarator";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "nextThis";
__n53["id"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "p2";
__n53["init"] := __n55;
__n52 := [ __n53 ];
__n51["declarations"] := __n52;
__n51["kind"] := "var";
__n56 := {  };
__n56["type"] := "VariableDeclaration";
__n58 := {  };
__n58["type"] := "VariableDeclarator";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "afterNextThis";
__n58["id"] := __n59;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "p3";
__n58["init"] := __n60;
__n57 := [ __n58 ];
__n56["declarations"] := __n57;
__n56["kind"] := "var";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "AssignmentExpression";
__n62["operator"] := "=";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "p1";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "then";
__n65["raw"] := "\"then\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "AssignmentExpression";
__n66["operator"] := "=";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "p2";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "then";
__n69["raw"] := "\"then\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["left"] := __n67;
__n70 := {  };
__n70["type"] := "AssignmentExpression";
__n70["operator"] := "=";
__n71 := {  };
__n71["type"] := "MemberExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "p3";
__n71["object"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "then";
__n73["raw"] := "\"then\"";
__n71["property"] := __n73;
__n71["computed"] := true;
__n70["left"] := __n71;
__n74 := {  };
__n74["type"] := "FunctionExpression";
__n74["id"] := null;
__n75 := [ "a", "b" ];
__n74["params"] := __n75;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "assert";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "sameValue";
__n82["raw"] := "\"sameValue\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n79["callee"] := __n80;
__n84 := {  };
__n84["type"] := "UnaryExpression";
__n84["operator"] := "typeof";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "a";
__n84["argument"] := __n85;
__n84["prefix"] := true;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "function";
__n86["raw"] := "'function'";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "type of first argument";
__n87["raw"] := "'type of first argument'";
__n83 := [ __n84, __n86, __n87 ];
__n79["arguments"] := __n83;
__n78["expression"] := __n79;
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "assert";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "sameValue";
__n92["raw"] := "\"sameValue\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n89["callee"] := __n90;
__n94 := {  };
__n94["type"] := "MemberExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "a";
__n94["object"] := __n95;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "length";
__n96["raw"] := "\"length\"";
__n94["property"] := __n96;
__n94["computed"] := true;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := 1.;
__n97["raw"] := "1";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "ES6 25.4.1.3.2: The length property of a promise resolve function is 1.";
__n98["raw"] := "'ES6 25.4.1.3.2: The length property of a promise resolve function is 1.'";
__n93 := [ __n94, __n97, __n98 ];
__n89["arguments"] := __n93;
__n88["expression"] := __n89;
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "MemberExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "assert";
__n101["object"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "sameValue";
__n103["raw"] := "\"sameValue\"";
__n101["property"] := __n103;
__n101["computed"] := true;
__n100["callee"] := __n101;
__n105 := {  };
__n105["type"] := "UnaryExpression";
__n105["operator"] := "typeof";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "b";
__n105["argument"] := __n106;
__n105["prefix"] := true;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "function";
__n107["raw"] := "'function'";
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "type of second argument";
__n108["raw"] := "'type of second argument'";
__n104 := [ __n105, __n107, __n108 ];
__n100["arguments"] := __n104;
__n99["expression"] := __n100;
__n109 := {  };
__n109["type"] := "ExpressionStatement";
__n110 := {  };
__n110["type"] := "CallExpression";
__n111 := {  };
__n111["type"] := "MemberExpression";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "assert";
__n111["object"] := __n112;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "sameValue";
__n113["raw"] := "\"sameValue\"";
__n111["property"] := __n113;
__n111["computed"] := true;
__n110["callee"] := __n111;
__n115 := {  };
__n115["type"] := "MemberExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "b";
__n115["object"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "length";
__n117["raw"] := "\"length\"";
__n115["property"] := __n117;
__n115["computed"] := true;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := 1.;
__n118["raw"] := "1";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "ES6 25.4.1.3.1: The length property of a promise reject function is 1.";
__n119["raw"] := "'ES6 25.4.1.3.1: The length property of a promise reject function is 1.'";
__n114 := [ __n115, __n118, __n119 ];
__n110["arguments"] := __n114;
__n109["expression"] := __n110;
__n120 := {  };
__n120["type"] := "ExpressionStatement";
__n121 := {  };
__n121["type"] := "CallExpression";
__n122 := {  };
__n122["type"] := "MemberExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "assert";
__n122["object"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "sameValue";
__n124["raw"] := "\"sameValue\"";
__n122["property"] := __n124;
__n122["computed"] := true;
__n121["callee"] := __n122;
__n126 := {  };
__n126["type"] := "MemberExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "arguments";
__n126["object"] := __n127;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := "length";
__n128["raw"] := "\"length\"";
__n126["property"] := __n128;
__n126["computed"] := true;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := 2.;
__n129["raw"] := "2";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "`then` invoked with two arguments";
__n130["raw"] := "'`then` invoked with two arguments'";
__n125 := [ __n126, __n129, __n130 ];
__n121["arguments"] := __n125;
__n120["expression"] := __n121;
__n131 := {  };
__n131["type"] := "ExpressionStatement";
__n132 := {  };
__n132["type"] := "CallExpression";
__n133 := {  };
__n133["type"] := "MemberExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "assert";
__n133["object"] := __n134;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "sameValue";
__n135["raw"] := "\"sameValue\"";
__n133["property"] := __n135;
__n133["computed"] := true;
__n132["callee"] := __n133;
__n137 := {  };
__n137["type"] := "ThisExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "currentThis";
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "`this` value";
__n139["raw"] := "'`this` value'";
__n136 := [ __n137, __n138, __n139 ];
__n132["arguments"] := __n136;
__n131["expression"] := __n132;
__n140 := {  };
__n140["type"] := "ExpressionStatement";
__n141 := {  };
__n141["type"] := "AssignmentExpression";
__n141["operator"] := "=";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "currentThis";
__n141["left"] := __n142;
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "nextThis";
__n141["right"] := __n143;
__n140["expression"] := __n141;
__n144 := {  };
__n144["type"] := "ExpressionStatement";
__n145 := {  };
__n145["type"] := "AssignmentExpression";
__n145["operator"] := "=";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "nextThis";
__n145["left"] := __n146;
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "afterNextThis";
__n145["right"] := __n147;
__n144["expression"] := __n145;
__n148 := {  };
__n148["type"] := "ExpressionStatement";
__n149 := {  };
__n149["type"] := "AssignmentExpression";
__n149["operator"] := "=";
__n150 := {  };
__n150["type"] := "Identifier";
__n150["name"] := "afterNextThis";
__n149["left"] := __n150;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := 'null;
__n151["raw"] := "\"'null\"";
__n149["right"] := __n151;
__n148["expression"] := __n149;
__n152 := {  };
__n152["type"] := "ExpressionStatement";
__n153 := {  };
__n153["type"] := "AssignmentExpression";
__n153["operator"] := "+=";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "callCount";
__n153["left"] := __n154;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := 1.;
__n155["raw"] := "1";
__n153["right"] := __n155;
__n152["expression"] := __n153;
__n77 := [ __n78, __n88, __n99, __n109, __n120, __n131, __n140, __n144, __n148, __n152 ];
__n76["body"] := __n77;
__n156 := [  ];
__n76["variableDeclarations"] := __n156;
__n157 := [  ];
__n76["functionDeclarations"] := __n157;
__n76["codeType"] := "function";
__n76["strict"] := false;
__n74["body"] := __n76;
__n74["generator"] := false;
__n74["async"] := false;
__n74["expression"] := false;
__n70["right"] := __n74;
__n66["right"] := __n70;
__n62["right"] := __n66;
__n61["expression"] := __n62;
__n158 := {  };
__n158["type"] := "ExpressionStatement";
__n159 := {  };
__n159["type"] := "CallExpression";
__n160 := {  };
__n160["type"] := "MemberExpression";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "Promise";
__n160["object"] := __n161;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := "all";
__n162["raw"] := "\"all\"";
__n160["property"] := __n162;
__n160["computed"] := true;
__n159["callee"] := __n160;
__n164 := {  };
__n164["type"] := "ArrayExpression";
__n166 := {  };
__n166["type"] := "Identifier";
__n166["name"] := "p1";
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "p2";
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "p3";
__n165 := [ __n166, __n167, __n168 ];
__n164["elements"] := __n165;
__n163 := [ __n164 ];
__n159["arguments"] := __n163;
__n158["expression"] := __n159;
__n169 := {  };
__n169["type"] := "ExpressionStatement";
__n170 := {  };
__n170["type"] := "CallExpression";
__n171 := {  };
__n171["type"] := "MemberExpression";
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "assert";
__n171["object"] := __n172;
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := "sameValue";
__n173["raw"] := "\"sameValue\"";
__n171["property"] := __n173;
__n171["computed"] := true;
__n170["callee"] := __n171;
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "callCount";
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := 3.;
__n176["raw"] := "3";
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "`then` invoked once for every iterated value";
__n177["raw"] := "'`then` invoked once for every iterated value'";
__n174 := [ __n175, __n176, __n177 ];
__n170["arguments"] := __n174;
__n169["expression"] := __n170;
__n1 := [ __n2, __n15, __n28, __n41, __n46, __n51, __n56, __n61, __n158, __n169 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n178 := [ "p1", "p2", "p3", "callCount", "currentThis", "nextThis", "afterNextThis" ];
__n0["variableDeclarations"] := __n178;
__n179 := [  ];
__n0["functionDeclarations"] := __n179;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}