function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "v1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "v2";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "ObjectExpression";
__n13 := [  ];
__n12["properties"] := __n13;
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "v3";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n19 := [  ];
__n18["properties"] := __n19;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Promise";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "all";
__n26["raw"] := "\"all\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "ArrayExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "v1";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "v2";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "v3";
__n29 := [ __n30, __n31, __n32 ];
__n28["elements"] := __n29;
__n27 := [ __n28 ];
__n23["arguments"] := __n27;
__n22["object"] := __n23;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "then";
__n33["raw"] := "\"then\"";
__n22["property"] := __n33;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n35 := {  };
__n35["type"] := "FunctionExpression";
__n35["id"] := null;
__n36 := [ "values" ];
__n35["params"] := __n36;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "IfStatement";
__n40 := {  };
__n40["type"] := "UnaryExpression";
__n40["operator"] := "!";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "values";
__n40["argument"] := __n41;
__n40["prefix"] := true;
__n39["test"] := __n40;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$DONE";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "The promise should be resolved with a value.";
__n48["raw"] := "'The promise should be resolved with a value.'";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n49 := {  };
__n49["type"] := "ReturnStatement";
__n49["argument"] := null;
__n43 := [ __n44, __n49 ];
__n42["body"] := __n43;
__n39["consequent"] := __n42;
__n39["alternate"] := null;
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "values";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "constructor";
__n54["raw"] := "\"constructor\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["left"] := __n52;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "Array";
__n51["right"] := __n55;
__n50["test"] := __n51;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "$DONE";
__n59["callee"] := __n60;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "The promise should be resolved with an Array instance.";
__n62["raw"] := "'The promise should be resolved with an Array instance.'";
__n61 := [ __n62 ];
__n59["arguments"] := __n61;
__n58["expression"] := __n59;
__n63 := {  };
__n63["type"] := "ReturnStatement";
__n63["argument"] := null;
__n57 := [ __n58, __n63 ];
__n56["body"] := __n57;
__n50["consequent"] := __n56;
__n50["alternate"] := null;
__n64 := {  };
__n64["type"] := "IfStatement";
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "!==";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "values";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "length";
__n68["raw"] := "\"length\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["left"] := __n66;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 3.;
__n69["raw"] := "3";
__n65["right"] := __n69;
__n64["test"] := __n65;
__n70 := {  };
__n70["type"] := "BlockStatement";
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "$DONE";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "The promise should be resolved with an array of proper length.";
__n76["raw"] := "'The promise should be resolved with an array of proper length.'";
__n75 := [ __n76 ];
__n73["arguments"] := __n75;
__n72["expression"] := __n73;
__n77 := {  };
__n77["type"] := "ReturnStatement";
__n77["argument"] := null;
__n71 := [ __n72, __n77 ];
__n70["body"] := __n71;
__n64["consequent"] := __n70;
__n64["alternate"] := null;
__n78 := {  };
__n78["type"] := "IfStatement";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "!==";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n80["computed"] := true;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "values";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 0.;
__n82["raw"] := "0";
__n80["property"] := __n82;
__n79["left"] := __n80;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "v1";
__n79["right"] := __n83;
__n78["test"] := __n79;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "$DONE";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "The promise should be resolved with the correct element values (#1)";
__n90["raw"] := "'The promise should be resolved with the correct element values (#1)'";
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86["expression"] := __n87;
__n91 := {  };
__n91["type"] := "ReturnStatement";
__n91["argument"] := null;
__n85 := [ __n86, __n91 ];
__n84["body"] := __n85;
__n78["consequent"] := __n84;
__n78["alternate"] := null;
__n92 := {  };
__n92["type"] := "IfStatement";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "!==";
__n94 := {  };
__n94["type"] := "MemberExpression";
__n94["computed"] := true;
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "values";
__n94["object"] := __n95;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := 1.;
__n96["raw"] := "1";
__n94["property"] := __n96;
__n93["left"] := __n94;
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "v2";
__n93["right"] := __n97;
__n92["test"] := __n93;
__n98 := {  };
__n98["type"] := "BlockStatement";
__n100 := {  };
__n100["type"] := "ExpressionStatement";
__n101 := {  };
__n101["type"] := "CallExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "$DONE";
__n101["callee"] := __n102;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "The promise should be resolved with the correct element values (#2)";
__n104["raw"] := "'The promise should be resolved with the correct element values (#2)'";
__n103 := [ __n104 ];
__n101["arguments"] := __n103;
__n100["expression"] := __n101;
__n105 := {  };
__n105["type"] := "ReturnStatement";
__n105["argument"] := null;
__n99 := [ __n100, __n105 ];
__n98["body"] := __n99;
__n92["consequent"] := __n98;
__n92["alternate"] := null;
__n106 := {  };
__n106["type"] := "IfStatement";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "!==";
__n108 := {  };
__n108["type"] := "MemberExpression";
__n108["computed"] := true;
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "values";
__n108["object"] := __n109;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 2.;
__n110["raw"] := "2";
__n108["property"] := __n110;
__n107["left"] := __n108;
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "v3";
__n107["right"] := __n111;
__n106["test"] := __n107;
__n112 := {  };
__n112["type"] := "BlockStatement";
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "$DONE";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "The promise should be resolved with the correct element values (#3)";
__n118["raw"] := "'The promise should be resolved with the correct element values (#3)'";
__n117 := [ __n118 ];
__n115["arguments"] := __n117;
__n114["expression"] := __n115;
__n119 := {  };
__n119["type"] := "ReturnStatement";
__n119["argument"] := null;
__n113 := [ __n114, __n119 ];
__n112["body"] := __n113;
__n106["consequent"] := __n112;
__n106["alternate"] := null;
__n120 := {  };
__n120["type"] := "ExpressionStatement";
__n121 := {  };
__n121["type"] := "CallExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "$DONE";
__n121["callee"] := __n122;
__n123 := [  ];
__n121["arguments"] := __n123;
__n120["expression"] := __n121;
__n38 := [ __n39, __n50, __n64, __n78, __n92, __n106, __n120 ];
__n37["body"] := __n38;
__n124 := [  ];
__n37["variableDeclarations"] := __n124;
__n125 := [  ];
__n37["functionDeclarations"] := __n125;
__n37["codeType"] := "function";
__n37["strict"] := false;
__n35["body"] := __n37;
__n35["generator"] := false;
__n35["async"] := false;
__n35["expression"] := false;
__n126 := {  };
__n126["type"] := "FunctionExpression";
__n126["id"] := null;
__n127 := [  ];
__n126["params"] := __n127;
__n128 := {  };
__n128["type"] := "BlockStatement";
__n130 := {  };
__n130["type"] := "ExpressionStatement";
__n131 := {  };
__n131["type"] := "CallExpression";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "$DONE";
__n131["callee"] := __n132;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "The promise should not be rejected.";
__n134["raw"] := "'The promise should not be rejected.'";
__n133 := [ __n134 ];
__n131["arguments"] := __n133;
__n130["expression"] := __n131;
__n129 := [ __n130 ];
__n128["body"] := __n129;
__n135 := [  ];
__n128["variableDeclarations"] := __n135;
__n136 := [  ];
__n128["functionDeclarations"] := __n136;
__n128["codeType"] := "function";
__n128["strict"] := false;
__n126["body"] := __n128;
__n126["generator"] := false;
__n126["async"] := false;
__n126["expression"] := false;
__n34 := [ __n35, __n126 ];
__n21["arguments"] := __n34;
__n20["expression"] := __n21;
__n1 := [ __n2, __n8, __n14, __n20 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n137 := [ "v1", "v2", "v3" ];
__n0["variableDeclarations"] := __n137;
__n138 := [  ];
__n0["functionDeclarations"] := __n138;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}