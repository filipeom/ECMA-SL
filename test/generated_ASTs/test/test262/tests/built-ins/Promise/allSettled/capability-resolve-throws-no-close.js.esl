function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "returnCount";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "iter";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n12 := [  ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "AssignmentExpression";
__n14["operator"] := "=";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n15["computed"] := true;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "iter";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Symbol";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "iterator";
__n19["raw"] := "\"iterator\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n15["property"] := __n17;
__n14["left"] := __n15;
__n20 := {  };
__n20["type"] := "FunctionExpression";
__n20["id"] := null;
__n21 := [  ];
__n20["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ReturnStatement";
__n25 := {  };
__n25["type"] := "ObjectExpression";
__n27 := {  };
__n27["type"] := "Property";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "next";
__n27["key"] := __n28;
__n29 := {  };
__n29["type"] := "FunctionExpression";
__n29["id"] := null;
__n30 := [  ];
__n29["params"] := __n30;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ReturnStatement";
__n34 := {  };
__n34["type"] := "ObjectExpression";
__n36 := {  };
__n36["type"] := "Property";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "done";
__n36["key"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := true;
__n38["raw"] := "true";
__n36["value"] := __n38;
__n36["computed"] := false;
__n36["kind"] := "init";
__n36["shorthand"] := false;
__n35 := [ __n36 ];
__n34["properties"] := __n35;
__n33["argument"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n39 := [  ];
__n31["variableDeclarations"] := __n39;
__n40 := [  ];
__n31["functionDeclarations"] := __n40;
__n31["codeType"] := "function";
__n31["strict"] := false;
__n29["body"] := __n31;
__n29["generator"] := false;
__n29["async"] := false;
__n29["expression"] := false;
__n27["value"] := __n29;
__n27["computed"] := false;
__n27["kind"] := "init";
__n27["shorthand"] := false;
__n41 := {  };
__n41["type"] := "Property";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "return";
__n41["key"] := __n42;
__n43 := {  };
__n43["type"] := "FunctionExpression";
__n43["id"] := null;
__n44 := [  ];
__n43["params"] := __n44;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "AssignmentExpression";
__n48["operator"] := "+=";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "returnCount";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 1.;
__n50["raw"] := "1";
__n48["right"] := __n50;
__n47["expression"] := __n48;
__n51 := {  };
__n51["type"] := "ReturnStatement";
__n52 := {  };
__n52["type"] := "ObjectExpression";
__n53 := [  ];
__n52["properties"] := __n53;
__n51["argument"] := __n52;
__n46 := [ __n47, __n51 ];
__n45["body"] := __n46;
__n54 := [  ];
__n45["variableDeclarations"] := __n54;
__n55 := [  ];
__n45["functionDeclarations"] := __n55;
__n45["codeType"] := "function";
__n45["strict"] := false;
__n43["body"] := __n45;
__n43["generator"] := false;
__n43["async"] := false;
__n43["expression"] := false;
__n41["value"] := __n43;
__n41["computed"] := false;
__n41["kind"] := "init";
__n41["shorthand"] := false;
__n26 := [ __n27, __n41 ];
__n25["properties"] := __n26;
__n24["argument"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n56 := [  ];
__n22["variableDeclarations"] := __n56;
__n57 := [  ];
__n22["functionDeclarations"] := __n57;
__n22["codeType"] := "function";
__n22["strict"] := false;
__n20["body"] := __n22;
__n20["generator"] := false;
__n20["async"] := false;
__n20["expression"] := false;
__n14["right"] := __n20;
__n13["expression"] := __n14;
__n58 := {  };
__n58["type"] := "VariableDeclaration";
__n60 := {  };
__n60["type"] := "VariableDeclarator";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "P";
__n60["id"] := __n61;
__n62 := {  };
__n62["type"] := "FunctionExpression";
__n62["id"] := null;
__n63 := [ "executor" ];
__n62["params"] := __n63;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ReturnStatement";
__n67 := {  };
__n67["type"] := "NewExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "Promise";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "FunctionExpression";
__n70["id"] := null;
__n71 := [ "_", "reject" ];
__n70["params"] := __n71;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "executor";
__n75["callee"] := __n76;
__n78 := {  };
__n78["type"] := "FunctionExpression";
__n78["id"] := null;
__n79 := [  ];
__n78["params"] := __n79;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ThrowStatement";
__n83 := {  };
__n83["type"] := "NewExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "Test262Error";
__n83["callee"] := __n84;
__n85 := [  ];
__n83["arguments"] := __n85;
__n82["argument"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n86 := [  ];
__n80["variableDeclarations"] := __n86;
__n87 := [  ];
__n80["functionDeclarations"] := __n87;
__n80["codeType"] := "function";
__n80["strict"] := false;
__n78["body"] := __n80;
__n78["generator"] := false;
__n78["async"] := false;
__n78["expression"] := false;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "reject";
__n77 := [ __n78, __n88 ];
__n75["arguments"] := __n77;
__n74["expression"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n89 := [  ];
__n72["variableDeclarations"] := __n89;
__n90 := [  ];
__n72["functionDeclarations"] := __n90;
__n72["codeType"] := "function";
__n72["strict"] := false;
__n70["body"] := __n72;
__n70["generator"] := false;
__n70["async"] := false;
__n70["expression"] := false;
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["argument"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n91 := [  ];
__n64["variableDeclarations"] := __n91;
__n92 := [  ];
__n64["functionDeclarations"] := __n92;
__n64["codeType"] := "function";
__n64["strict"] := false;
__n62["body"] := __n64;
__n62["generator"] := false;
__n62["async"] := false;
__n62["expression"] := false;
__n60["init"] := __n62;
__n59 := [ __n60 ];
__n58["declarations"] := __n59;
__n58["kind"] := "var";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "AssignmentExpression";
__n94["operator"] := "=";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "P";
__n95["object"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "resolve";
__n97["raw"] := "\"resolve\"";
__n95["property"] := __n97;
__n95["computed"] := true;
__n94["left"] := __n95;
__n98 := {  };
__n98["type"] := "FunctionExpression";
__n98["id"] := null;
__n99 := [  ];
__n98["params"] := __n99;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "ThrowStatement";
__n103 := {  };
__n103["type"] := "NewExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "Test262Error";
__n103["callee"] := __n104;
__n105 := [  ];
__n103["arguments"] := __n105;
__n102["argument"] := __n103;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n106 := [  ];
__n100["variableDeclarations"] := __n106;
__n107 := [  ];
__n100["functionDeclarations"] := __n107;
__n100["codeType"] := "function";
__n100["strict"] := false;
__n98["body"] := __n100;
__n98["generator"] := false;
__n98["async"] := false;
__n98["expression"] := false;
__n94["right"] := __n98;
__n93["expression"] := __n94;
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "MemberExpression";
__n111 := {  };
__n111["type"] := "MemberExpression";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "Promise";
__n111["object"] := __n112;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "allSettled";
__n113["raw"] := "\"allSettled\"";
__n111["property"] := __n113;
__n111["computed"] := true;
__n110["object"] := __n111;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "call";
__n114["raw"] := "\"call\"";
__n110["property"] := __n114;
__n110["computed"] := true;
__n109["callee"] := __n110;
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "P";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "iter";
__n115 := [ __n116, __n117 ];
__n109["arguments"] := __n115;
__n108["expression"] := __n109;
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "MemberExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "assert";
__n120["object"] := __n121;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "sameValue";
__n122["raw"] := "\"sameValue\"";
__n120["property"] := __n122;
__n120["computed"] := true;
__n119["callee"] := __n120;
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "returnCount";
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := 0.;
__n125["raw"] := "0";
__n123 := [ __n124, __n125 ];
__n119["arguments"] := __n123;
__n118["expression"] := __n119;
__n1 := [ __n2, __n7, __n13, __n58, __n93, __n108, __n118 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n126 := [ "returnCount", "iter", "P" ];
__n0["variableDeclarations"] := __n126;
__n127 := [  ];
__n0["functionDeclarations"] := __n127;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}