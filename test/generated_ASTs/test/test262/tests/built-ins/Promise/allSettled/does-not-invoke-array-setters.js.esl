function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "Object";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "defineProperty";
__n6["raw"] := "\"defineProperty\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Array";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "prototype";
__n10["raw"] := "\"prototype\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 0.;
__n11["raw"] := "0";
__n12 := {  };
__n12["type"] := "ObjectExpression";
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "set";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "FunctionExpression";
__n16["id"] := null;
__n17 := [  ];
__n16["params"] := __n17;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ThrowStatement";
__n21 := {  };
__n21["type"] := "NewExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "Test262Error";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "Setter on Array.prototype called";
__n24["raw"] := "'Setter on Array.prototype called'";
__n23 := [ __n24 ];
__n21["arguments"] := __n23;
__n20["argument"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n25 := [  ];
__n18["variableDeclarations"] := __n25;
__n26 := [  ];
__n18["functionDeclarations"] := __n26;
__n18["codeType"] := "function";
__n18["strict"] := false;
__n16["body"] := __n18;
__n16["generator"] := false;
__n16["async"] := false;
__n16["expression"] := false;
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n13 := [ __n14 ];
__n12["properties"] := __n13;
__n7 := [ __n8, __n11, __n12 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Promise";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "allSettled";
__n33["raw"] := "\"allSettled\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "ArrayExpression";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 42.;
__n37["raw"] := "42";
__n36 := [ __n37 ];
__n35["elements"] := __n36;
__n34 := [ __n35 ];
__n30["arguments"] := __n34;
__n29["object"] := __n30;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "then";
__n38["raw"] := "\"then\"";
__n29["property"] := __n38;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n40 := {  };
__n40["type"] := "FunctionExpression";
__n40["id"] := null;
__n41 := [  ];
__n40["params"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$DONE";
__n45["callee"] := __n46;
__n47 := [  ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n48 := [  ];
__n42["variableDeclarations"] := __n48;
__n49 := [  ];
__n42["functionDeclarations"] := __n49;
__n42["codeType"] := "function";
__n42["strict"] := false;
__n40["body"] := __n42;
__n40["generator"] := false;
__n40["async"] := false;
__n40["expression"] := false;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "$DONE";
__n39 := [ __n40, __n50 ];
__n28["arguments"] := __n39;
__n27["expression"] := __n28;
__n1 := [ __n2, __n27 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n51 := [  ];
__n0["variableDeclarations"] := __n51;
__n52 := [  ];
__n0["functionDeclarations"] := __n52;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}