function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "ExpressionStatement";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Promise";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "allSettled";
__n13["raw"] := "\"allSettled\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["callee"] := __n11;
__n15 := {  };
__n15["type"] := "ObjectExpression";
__n17 := {  };
__n17["type"] := "Property";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "Symbol";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "iterator";
__n20["raw"] := "\"iterator\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["key"] := __n18;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := true;
__n21["raw"] := "true";
__n17["value"] := __n21;
__n17["computed"] := true;
__n17["kind"] := "init";
__n17["shorthand"] := false;
__n16 := [ __n17 ];
__n15["properties"] := __n16;
__n14 := [ __n15 ];
__n10["arguments"] := __n14;
__n9["object"] := __n10;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "then";
__n22["raw"] := "\"then\"";
__n9["property"] := __n22;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n24 := {  };
__n24["type"] := "FunctionExpression";
__n24["id"] := null;
__n25 := [  ];
__n24["params"] := __n25;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "$DONE";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "The promise should be rejected, but was resolved";
__n32["raw"] := "'The promise should be rejected, but was resolved'";
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n33 := [  ];
__n26["variableDeclarations"] := __n33;
__n34 := [  ];
__n26["functionDeclarations"] := __n34;
__n26["codeType"] := "function";
__n26["strict"] := false;
__n24["body"] := __n26;
__n24["generator"] := false;
__n24["async"] := false;
__n24["expression"] := false;
__n35 := {  };
__n35["type"] := "FunctionExpression";
__n35["id"] := null;
__n36 := [ "error" ];
__n35["params"] := __n36;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "assert";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "sameValue";
__n43["raw"] := "\"sameValue\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "Object";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "getPrototypeOf";
__n48["raw"] := "\"getPrototypeOf\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "error";
__n49 := [ __n50 ];
__n45["arguments"] := __n49;
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "TypeError";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "prototype";
__n53["raw"] := "\"prototype\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n44 := [ __n45, __n51 ];
__n40["arguments"] := __n44;
__n39["expression"] := __n40;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "assert";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "instanceof";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "error";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "TypeError";
__n58["right"] := __n60;
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n38 := [ __n39, __n54 ];
__n37["body"] := __n38;
__n61 := [  ];
__n37["variableDeclarations"] := __n61;
__n62 := [  ];
__n37["functionDeclarations"] := __n62;
__n37["codeType"] := "function";
__n37["strict"] := false;
__n35["body"] := __n37;
__n35["generator"] := false;
__n35["async"] := false;
__n35["expression"] := false;
__n23 := [ __n24, __n35 ];
__n8["arguments"] := __n23;
__n7["object"] := __n8;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "then";
__n63["raw"] := "\"then\"";
__n7["property"] := __n63;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$DONE";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "$DONE";
__n64 := [ __n65, __n66 ];
__n6["arguments"] := __n64;
__n5["expression"] := __n6;
__n4 := [ __n5 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n67 := {  };
__n67["type"] := "CatchClause";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "error";
__n67["param"] := __n68;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "$DONE";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "TemplateLiteral";
__n77 := {  };
__n77["type"] := "TemplateElement";
__n78 := {  };
__n78["raw"] := "The promise should be rejected, but threw an exception: ";
__n78["cooked"] := "The promise should be rejected, but threw an exception: ";
__n77["value"] := __n78;
__n77["tail"] := false;
__n79 := {  };
__n79["type"] := "TemplateElement";
__n80 := {  };
__n80["raw"] := "";
__n80["cooked"] := "";
__n79["value"] := __n80;
__n79["tail"] := true;
__n76 := [ __n77, __n79 ];
__n75["quasis"] := __n76;
__n82 := {  };
__n82["type"] := "MemberExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "error";
__n82["object"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "message";
__n84["raw"] := "\"message\"";
__n82["property"] := __n84;
__n82["computed"] := true;
__n81 := [ __n82 ];
__n75["expressions"] := __n81;
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n67["body"] := __n69;
__n2["handler"] := __n67;
__n2["finalizer"] := null;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n85 := [  ];
__n0["variableDeclarations"] := __n85;
__n86 := [  ];
__n0["functionDeclarations"] := __n86;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}