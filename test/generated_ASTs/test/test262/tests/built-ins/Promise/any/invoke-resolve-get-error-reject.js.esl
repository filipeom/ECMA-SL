function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "error";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Test262Error";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "let";
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Object";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "defineProperty";
__n13["raw"] := "\"defineProperty\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["callee"] := __n11;
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Promise";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "resolve";
__n16["raw"] := "'resolve'";
__n17 := {  };
__n17["type"] := "ObjectExpression";
__n19 := {  };
__n19["type"] := "Property";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "get";
__n19["key"] := __n20;
__n21 := {  };
__n21["type"] := "FunctionExpression";
__n21["id"] := null;
__n22 := [  ];
__n21["params"] := __n22;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ThrowStatement";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "error";
__n25["argument"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n27 := [  ];
__n23["variableDeclarations"] := __n27;
__n28 := [  ];
__n23["functionDeclarations"] := __n28;
__n23["codeType"] := "function";
__n23["strict"] := false;
__n21["body"] := __n23;
__n21["generator"] := false;
__n21["async"] := false;
__n21["expression"] := false;
__n19["value"] := __n21;
__n19["computed"] := false;
__n19["kind"] := "init";
__n19["shorthand"] := false;
__n18 := [ __n19 ];
__n17["properties"] := __n18;
__n14 := [ __n15, __n16, __n17 ];
__n10["arguments"] := __n14;
__n9["expression"] := __n10;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Promise";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "any";
__n37["raw"] := "\"any\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n39 := {  };
__n39["type"] := "ArrayExpression";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 1.;
__n41["raw"] := "1";
__n40 := [ __n41 ];
__n39["elements"] := __n40;
__n38 := [ __n39 ];
__n34["arguments"] := __n38;
__n33["object"] := __n34;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "then";
__n42["raw"] := "\"then\"";
__n33["property"] := __n42;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n44 := {  };
__n44["type"] := "ArrowFunctionExpression";
__n44["id"] := null;
__n45 := [  ];
__n44["params"] := __n45;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "$DONE";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "The promise should be rejected, but was resolved";
__n52["raw"] := "'The promise should be rejected, but was resolved'";
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["expression"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n44["body"] := __n46;
__n44["generator"] := false;
__n44["expression"] := false;
__n44["async"] := false;
__n53 := {  };
__n53["type"] := "ArrowFunctionExpression";
__n53["id"] := null;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "reason";
__n54 := [ __n55 ];
__n53["params"] := __n54;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "assert";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "sameValue";
__n62["raw"] := "\"sameValue\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "reason";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "error";
__n63 := [ __n64, __n65 ];
__n59["arguments"] := __n63;
__n58["expression"] := __n59;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n53["body"] := __n56;
__n53["generator"] := false;
__n53["expression"] := false;
__n53["async"] := false;
__n43 := [ __n44, __n53 ];
__n32["arguments"] := __n43;
__n31["object"] := __n32;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "then";
__n66["raw"] := "\"then\"";
__n31["property"] := __n66;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$DONE";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "$DONE";
__n67 := [ __n68, __n69 ];
__n30["arguments"] := __n67;
__n29["expression"] := __n30;
__n1 := [ __n2, __n9, __n29 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n70 := [ "error" ];
__n0["variableDeclarations"] := __n70;
__n71 := [  ];
__n0["functionDeclarations"] := __n71;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}