function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "boundPromiseResolve";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Promise";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "resolve";
__n10["raw"] := "\"resolve\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["object"] := __n8;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "bind";
__n11["raw"] := "\"bind\"";
__n7["property"] := __n11;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Promise";
__n12 := [ __n13 ];
__n6["arguments"] := __n12;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "let";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "AssignmentExpression";
__n15["operator"] := "=";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Promise";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "resolve";
__n18["raw"] := "\"resolve\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["left"] := __n16;
__n19 := {  };
__n19["type"] := "FunctionExpression";
__n19["id"] := null;
__n20 := [ 'undefined ];
__n19["params"] := __n20;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "assert";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "sameValue";
__n27["raw"] := "\"sameValue\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "args";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "length";
__n31["raw"] := "\"length\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 1.;
__n32["raw"] := "1";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "`resolve` invoked with a single argument";
__n33["raw"] := "'`resolve` invoked with a single argument'";
__n28 := [ __n29, __n32, __n33 ];
__n24["arguments"] := __n28;
__n23["expression"] := __n24;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "assert";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "sameValue";
__n38["raw"] := "\"sameValue\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "ThisExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Promise";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "`this` value is the constructor";
__n42["raw"] := "'`this` value is the constructor'";
__n39 := [ __n40, __n41, __n42 ];
__n35["arguments"] := __n39;
__n34["expression"] := __n35;
__n43 := {  };
__n43["type"] := "ReturnStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "boundPromiseResolve";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "SpreadElement";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "args";
__n47["argument"] := __n48;
__n46 := [ __n47 ];
__n44["arguments"] := __n46;
__n43["argument"] := __n44;
__n22 := [ __n23, __n34, __n43 ];
__n21["body"] := __n22;
__n49 := [  ];
__n21["variableDeclarations"] := __n49;
__n50 := [  ];
__n21["functionDeclarations"] := __n50;
__n21["codeType"] := "function";
__n21["strict"] := false;
__n19["body"] := __n21;
__n19["generator"] := false;
__n19["async"] := false;
__n19["expression"] := false;
__n15["right"] := __n19;
__n14["expression"] := __n15;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Promise";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "any";
__n57["raw"] := "\"any\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "ArrayExpression";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 1.;
__n61["raw"] := "1";
__n60 := [ __n61 ];
__n59["elements"] := __n60;
__n58 := [ __n59 ];
__n54["arguments"] := __n58;
__n53["object"] := __n54;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "then";
__n62["raw"] := "\"then\"";
__n53["property"] := __n62;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n64 := {  };
__n64["type"] := "ArrowFunctionExpression";
__n64["id"] := null;
__n65 := [  ];
__n64["params"] := __n65;
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$DONE";
__n66["callee"] := __n67;
__n68 := [  ];
__n66["arguments"] := __n68;
__n64["body"] := __n66;
__n64["generator"] := false;
__n64["expression"] := true;
__n64["async"] := false;
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "$DONE";
__n63 := [ __n64, __n69 ];
__n52["arguments"] := __n63;
__n51["expression"] := __n52;
__n1 := [ __n2, __n14, __n51 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n70 := [ "boundPromiseResolve" ];
__n0["variableDeclarations"] := __n70;
__n71 := [  ];
__n0["functionDeclarations"] := __n71;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}