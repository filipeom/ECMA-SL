function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Promise";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "any";
__n10["raw"] := "\"any\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["callee"] := __n8;
__n12 := {  };
__n12["type"] := "ArrayExpression";
__n13 := [  ];
__n12["elements"] := __n13;
__n11 := [ __n12 ];
__n7["arguments"] := __n11;
__n6["object"] := __n7;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "then";
__n14["raw"] := "\"then\"";
__n6["property"] := __n14;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n16 := {  };
__n16["type"] := "ArrowFunctionExpression";
__n16["id"] := null;
__n17 := [  ];
__n16["params"] := __n17;
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "$DONE";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "The promise should be rejected, but was resolved";
__n21["raw"] := "'The promise should be rejected, but was resolved'";
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n16["body"] := __n18;
__n16["generator"] := false;
__n16["expression"] := true;
__n16["async"] := false;
__n22 := {  };
__n22["type"] := "ArrowFunctionExpression";
__n22["id"] := null;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "error";
__n23 := [ __n24 ];
__n22["params"] := __n23;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "assert";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "sameValue";
__n31["raw"] := "\"sameValue\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "Object";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "getPrototypeOf";
__n36["raw"] := "\"getPrototypeOf\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["callee"] := __n34;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "error";
__n37 := [ __n38 ];
__n33["arguments"] := __n37;
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "AggregateError";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "prototype";
__n41["raw"] := "\"prototype\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n32 := [ __n33, __n39 ];
__n28["arguments"] := __n32;
__n27["expression"] := __n28;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "assert";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "instanceof";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "error";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "AggregateError";
__n46["right"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "assert";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "sameValue";
__n53["raw"] := "\"sameValue\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n50["callee"] := __n51;
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "error";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "errors";
__n58["raw"] := "\"errors\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["object"] := __n56;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "length";
__n59["raw"] := "\"length\"";
__n55["property"] := __n59;
__n55["computed"] := true;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 0.;
__n60["raw"] := "0";
__n54 := [ __n55, __n60 ];
__n50["arguments"] := __n54;
__n49["expression"] := __n50;
__n26 := [ __n27, __n42, __n49 ];
__n25["body"] := __n26;
__n22["body"] := __n25;
__n22["generator"] := false;
__n22["expression"] := false;
__n22["async"] := false;
__n15 := [ __n16, __n22 ];
__n5["arguments"] := __n15;
__n4["object"] := __n5;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "then";
__n61["raw"] := "\"then\"";
__n4["property"] := __n61;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$DONE";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "$DONE";
__n62 := [ __n63, __n64 ];
__n3["arguments"] := __n62;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n65 := [  ];
__n0["variableDeclarations"] := __n65;
__n66 := [  ];
__n0["functionDeclarations"] := __n66;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}