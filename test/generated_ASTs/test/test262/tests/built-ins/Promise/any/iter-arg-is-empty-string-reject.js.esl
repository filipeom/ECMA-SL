function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "CallExpression";
__n6 := {  };
__n6["type"] := "MemberExpression";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Promise";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "any";
__n10["raw"] := "\"any\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["callee"] := __n8;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "";
__n12["raw"] := "''";
__n11 := [ __n12 ];
__n7["arguments"] := __n11;
__n6["object"] := __n7;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "then";
__n13["raw"] := "\"then\"";
__n6["property"] := __n13;
__n6["computed"] := true;
__n5["callee"] := __n6;
__n15 := {  };
__n15["type"] := "ArrowFunctionExpression";
__n15["id"] := null;
__n16 := [  ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "$DONE";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "The promise should be rejected, but was resolved";
__n20["raw"] := "'The promise should be rejected, but was resolved'";
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["expression"] := true;
__n15["async"] := false;
__n21 := {  };
__n21["type"] := "ArrowFunctionExpression";
__n21["id"] := null;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "error";
__n22 := [ __n23 ];
__n21["params"] := __n22;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "assert";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "sameValue";
__n30["raw"] := "\"sameValue\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Object";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "getPrototypeOf";
__n35["raw"] := "\"getPrototypeOf\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "error";
__n36 := [ __n37 ];
__n32["arguments"] := __n36;
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "AggregateError";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "prototype";
__n40["raw"] := "\"prototype\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n31 := [ __n32, __n38 ];
__n27["arguments"] := __n31;
__n26["expression"] := __n27;
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "assert";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "instanceof";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "error";
__n45["left"] := __n46;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "AggregateError";
__n45["right"] := __n47;
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n41["expression"] := __n42;
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "assert";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "sameValue";
__n52["raw"] := "\"sameValue\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "error";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "errors";
__n57["raw"] := "\"errors\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["object"] := __n55;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "length";
__n58["raw"] := "\"length\"";
__n54["property"] := __n58;
__n54["computed"] := true;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 0.;
__n59["raw"] := "0";
__n53 := [ __n54, __n59 ];
__n49["arguments"] := __n53;
__n48["expression"] := __n49;
__n25 := [ __n26, __n41, __n48 ];
__n24["body"] := __n25;
__n21["body"] := __n24;
__n21["generator"] := false;
__n21["expression"] := false;
__n21["async"] := false;
__n14 := [ __n15, __n21 ];
__n5["arguments"] := __n14;
__n4["object"] := __n5;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "then";
__n60["raw"] := "\"then\"";
__n4["property"] := __n60;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$DONE";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$DONE";
__n61 := [ __n62, __n63 ];
__n3["arguments"] := __n61;
__n2["expression"] := __n3;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n64 := [  ];
__n0["variableDeclarations"] := __n64;
__n65 := [  ];
__n0["functionDeclarations"] := __n65;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}