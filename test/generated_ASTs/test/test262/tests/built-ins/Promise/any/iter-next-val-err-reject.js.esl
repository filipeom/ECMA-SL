function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callCount";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "let";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "error";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "NewExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Test262Error";
__n11["callee"] := __n12;
__n13 := [  ];
__n11["arguments"] := __n13;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "let";
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "poisoned";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "ObjectExpression";
__n20 := {  };
__n20["type"] := "Property";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "done";
__n20["key"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := false;
__n22["raw"] := "false";
__n20["value"] := __n22;
__n20["computed"] := false;
__n20["kind"] := "init";
__n20["shorthand"] := false;
__n19 := [ __n20 ];
__n18["properties"] := __n19;
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "let";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Object";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "defineProperty";
__n27["raw"] := "\"defineProperty\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "poisoned";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "value";
__n30["raw"] := "'value'";
__n31 := {  };
__n31["type"] := "ObjectExpression";
__n33 := {  };
__n33["type"] := "Property";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "get";
__n33["key"] := __n34;
__n35 := {  };
__n35["type"] := "FunctionExpression";
__n35["id"] := null;
__n36 := [  ];
__n35["params"] := __n36;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "UpdateExpression";
__n40["operator"] := "++";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "callCount";
__n40["argument"] := __n41;
__n40["prefix"] := false;
__n39["expression"] := __n40;
__n42 := {  };
__n42["type"] := "ThrowStatement";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "error";
__n42["argument"] := __n43;
__n38 := [ __n39, __n42 ];
__n37["body"] := __n38;
__n44 := [  ];
__n37["variableDeclarations"] := __n44;
__n45 := [  ];
__n37["functionDeclarations"] := __n45;
__n37["codeType"] := "function";
__n37["strict"] := false;
__n35["body"] := __n37;
__n35["generator"] := false;
__n35["async"] := false;
__n35["expression"] := false;
__n33["value"] := __n35;
__n33["computed"] := false;
__n33["kind"] := "init";
__n33["shorthand"] := false;
__n32 := [ __n33 ];
__n31["properties"] := __n32;
__n28 := [ __n29, __n30, __n31 ];
__n24["arguments"] := __n28;
__n23["expression"] := __n24;
__n46 := {  };
__n46["type"] := "VariableDeclaration";
__n48 := {  };
__n48["type"] := "VariableDeclarator";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "iterNextValThrows";
__n48["id"] := __n49;
__n50 := {  };
__n50["type"] := "ObjectExpression";
__n52 := {  };
__n52["type"] := "Property";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "Symbol";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "iterator";
__n55["raw"] := "\"iterator\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n52["key"] := __n53;
__n56 := {  };
__n56["type"] := "FunctionExpression";
__n56["id"] := null;
__n57 := [  ];
__n56["params"] := __n57;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "UpdateExpression";
__n61["operator"] := "++";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "callCount";
__n61["argument"] := __n62;
__n61["prefix"] := false;
__n60["expression"] := __n61;
__n63 := {  };
__n63["type"] := "ReturnStatement";
__n64 := {  };
__n64["type"] := "ObjectExpression";
__n66 := {  };
__n66["type"] := "Property";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "next";
__n66["key"] := __n67;
__n68 := {  };
__n68["type"] := "FunctionExpression";
__n68["id"] := null;
__n69 := [  ];
__n68["params"] := __n69;
__n70 := {  };
__n70["type"] := "BlockStatement";
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "UpdateExpression";
__n73["operator"] := "++";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "callCount";
__n73["argument"] := __n74;
__n73["prefix"] := false;
__n72["expression"] := __n73;
__n75 := {  };
__n75["type"] := "ReturnStatement";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "poisoned";
__n75["argument"] := __n76;
__n71 := [ __n72, __n75 ];
__n70["body"] := __n71;
__n77 := [  ];
__n70["variableDeclarations"] := __n77;
__n78 := [  ];
__n70["functionDeclarations"] := __n78;
__n70["codeType"] := "function";
__n70["strict"] := false;
__n68["body"] := __n70;
__n68["generator"] := false;
__n68["async"] := false;
__n68["expression"] := false;
__n66["value"] := __n68;
__n66["computed"] := false;
__n66["kind"] := "init";
__n66["shorthand"] := false;
__n65 := [ __n66 ];
__n64["properties"] := __n65;
__n63["argument"] := __n64;
__n59 := [ __n60, __n63 ];
__n58["body"] := __n59;
__n79 := [  ];
__n58["variableDeclarations"] := __n79;
__n80 := [  ];
__n58["functionDeclarations"] := __n80;
__n58["codeType"] := "function";
__n58["strict"] := false;
__n56["body"] := __n58;
__n56["generator"] := false;
__n56["async"] := false;
__n56["expression"] := false;
__n52["value"] := __n56;
__n52["computed"] := true;
__n52["kind"] := "init";
__n52["shorthand"] := false;
__n51 := [ __n52 ];
__n50["properties"] := __n51;
__n48["init"] := __n50;
__n47 := [ __n48 ];
__n46["declarations"] := __n47;
__n46["kind"] := "let";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "Promise";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "any";
__n89["raw"] := "\"any\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n86["callee"] := __n87;
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "iterNextValThrows";
__n90 := [ __n91 ];
__n86["arguments"] := __n90;
__n85["object"] := __n86;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "then";
__n92["raw"] := "\"then\"";
__n85["property"] := __n92;
__n85["computed"] := true;
__n84["callee"] := __n85;
__n94 := {  };
__n94["type"] := "ArrowFunctionExpression";
__n94["id"] := null;
__n95 := [  ];
__n94["params"] := __n95;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "$DONE";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "The promise should be rejected, but was resolved";
__n102["raw"] := "'The promise should be rejected, but was resolved'";
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n94["body"] := __n96;
__n94["generator"] := false;
__n94["expression"] := false;
__n94["async"] := false;
__n103 := {  };
__n103["type"] := "ArrowFunctionExpression";
__n103["id"] := null;
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "reason";
__n104 := [ __n105 ];
__n103["params"] := __n104;
__n106 := {  };
__n106["type"] := "BlockStatement";
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "assert";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "instanceof";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "error";
__n112["left"] := __n113;
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "Test262Error";
__n112["right"] := __n114;
__n111 := [ __n112 ];
__n109["arguments"] := __n111;
__n108["expression"] := __n109;
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "MemberExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "assert";
__n117["object"] := __n118;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "sameValue";
__n119["raw"] := "\"sameValue\"";
__n117["property"] := __n119;
__n117["computed"] := true;
__n116["callee"] := __n117;
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "reason";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "error";
__n120 := [ __n121, __n122 ];
__n116["arguments"] := __n120;
__n115["expression"] := __n116;
__n123 := {  };
__n123["type"] := "ExpressionStatement";
__n124 := {  };
__n124["type"] := "CallExpression";
__n125 := {  };
__n125["type"] := "MemberExpression";
__n126 := {  };
__n126["type"] := "Identifier";
__n126["name"] := "assert";
__n125["object"] := __n126;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "sameValue";
__n127["raw"] := "\"sameValue\"";
__n125["property"] := __n127;
__n125["computed"] := true;
__n124["callee"] := __n125;
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "callCount";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := 3.;
__n130["raw"] := "3";
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "callCount === 3";
__n131["raw"] := "'callCount === 3'";
__n128 := [ __n129, __n130, __n131 ];
__n124["arguments"] := __n128;
__n123["expression"] := __n124;
__n107 := [ __n108, __n115, __n123 ];
__n106["body"] := __n107;
__n103["body"] := __n106;
__n103["generator"] := false;
__n103["expression"] := false;
__n103["async"] := false;
__n93 := [ __n94, __n103 ];
__n84["arguments"] := __n93;
__n83["object"] := __n84;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := "then";
__n132["raw"] := "\"then\"";
__n83["property"] := __n132;
__n83["computed"] := true;
__n82["callee"] := __n83;
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "$DONE";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "$DONE";
__n133 := [ __n134, __n135 ];
__n82["arguments"] := __n133;
__n81["expression"] := __n82;
__n1 := [ __n2, __n7, __n14, __n23, __n46, __n81 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n136 := [ "callCount", "error", "poisoned", "iterNextValThrows" ];
__n0["variableDeclarations"] := __n136;
__n137 := [  ];
__n0["functionDeclarations"] := __n137;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}