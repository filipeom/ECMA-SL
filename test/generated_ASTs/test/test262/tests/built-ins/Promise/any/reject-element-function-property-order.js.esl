function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "rejectElementFunction";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "thenable";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "ObjectExpression";
__n12 := {  };
__n12["type"] := "Property";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "then";
__n12["key"] := __n13;
__n14 := {  };
__n14["type"] := "FunctionExpression";
__n14["id"] := null;
__n15 := [ "_", "reject" ];
__n14["params"] := __n15;
__n16 := {  };
__n16["type"] := "BlockStatement";
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "AssignmentExpression";
__n19["operator"] := "=";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "rejectElementFunction";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "reject";
__n19["right"] := __n21;
__n18["expression"] := __n19;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n22 := [  ];
__n16["variableDeclarations"] := __n22;
__n23 := [  ];
__n16["functionDeclarations"] := __n23;
__n16["codeType"] := "function";
__n16["strict"] := false;
__n14["body"] := __n16;
__n14["generator"] := false;
__n14["async"] := false;
__n14["expression"] := false;
__n12["value"] := __n14;
__n12["computed"] := false;
__n12["kind"] := "init";
__n12["shorthand"] := false;
__n11 := [ __n12 ];
__n10["properties"] := __n11;
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "NotPromise";
__n24["expression"] := __n25;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "AssignmentExpression";
__n27["operator"] := "=";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "NotPromise";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "resolve";
__n30["raw"] := "\"resolve\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["left"] := __n28;
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [ "v" ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ReturnStatement";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "v";
__n35["argument"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n37 := [  ];
__n33["variableDeclarations"] := __n37;
__n38 := [  ];
__n33["functionDeclarations"] := __n38;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["async"] := false;
__n31["expression"] := false;
__n27["right"] := __n31;
__n26["expression"] := __n27;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "Promise";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "any";
__n44["raw"] := "\"any\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["object"] := __n42;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "call";
__n45["raw"] := "\"call\"";
__n41["property"] := __n45;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "NotPromise";
__n48 := {  };
__n48["type"] := "ArrayExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "thenable";
__n49 := [ __n50 ];
__n48["elements"] := __n49;
__n46 := [ __n47, __n48 ];
__n40["arguments"] := __n46;
__n39["expression"] := __n40;
__n51 := {  };
__n51["type"] := "VariableDeclaration";
__n53 := {  };
__n53["type"] := "VariableDeclarator";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "propNames";
__n53["id"] := __n54;
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "Object";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "getOwnPropertyNames";
__n58["raw"] := "\"getOwnPropertyNames\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "rejectElementFunction";
__n59 := [ __n60 ];
__n55["arguments"] := __n59;
__n53["init"] := __n55;
__n52 := [ __n53 ];
__n51["declarations"] := __n52;
__n51["kind"] := "var";
__n61 := {  };
__n61["type"] := "VariableDeclaration";
__n63 := {  };
__n63["type"] := "VariableDeclarator";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "lengthIndex";
__n63["id"] := __n64;
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "propNames";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "indexOf";
__n68["raw"] := "\"indexOf\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "length";
__n70["raw"] := "\"length\"";
__n69 := [ __n70 ];
__n65["arguments"] := __n69;
__n63["init"] := __n65;
__n62 := [ __n63 ];
__n61["declarations"] := __n62;
__n61["kind"] := "var";
__n71 := {  };
__n71["type"] := "VariableDeclaration";
__n73 := {  };
__n73["type"] := "VariableDeclarator";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "nameIndex";
__n73["id"] := __n74;
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "propNames";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "indexOf";
__n78["raw"] := "\"indexOf\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["callee"] := __n76;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "name";
__n80["raw"] := "\"name\"";
__n79 := [ __n80 ];
__n75["arguments"] := __n79;
__n73["init"] := __n75;
__n72 := [ __n73 ];
__n71["declarations"] := __n72;
__n71["kind"] := "var";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "assert";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "LogicalExpression";
__n85["operator"] := "&&";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := ">=";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "lengthIndex";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 0.;
__n88["raw"] := "0";
__n86["right"] := __n88;
__n85["left"] := __n86;
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "===";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "nameIndex";
__n89["left"] := __n90;
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "+";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "lengthIndex";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := 1.;
__n93["raw"] := "1";
__n91["right"] := __n93;
__n89["right"] := __n91;
__n85["right"] := __n89;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "The `length` property comes before the `name` property on built-in functions";
__n94["raw"] := "\"The `length` property comes before the `name` property on built-in functions\"";
__n84 := [ __n85, __n94 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n1 := [ __n2, __n6, __n24, __n26, __n39, __n51, __n61, __n71, __n81 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n95 := [ "rejectElementFunction", "thenable", "propNames", "lengthIndex", "nameIndex" ];
__n0["variableDeclarations"] := __n95;
__n97 := {  };
__n97["type"] := "FunctionDeclaration";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "NotPromise";
__n97["id"] := __n98;
__n99 := [ "executor" ];
__n97["params"] := __n99;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "executor";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "FunctionExpression";
__n106["id"] := null;
__n107 := [  ];
__n106["params"] := __n107;
__n108 := {  };
__n108["type"] := "BlockStatement";
__n109 := [  ];
__n108["body"] := __n109;
__n110 := [  ];
__n108["variableDeclarations"] := __n110;
__n111 := [  ];
__n108["functionDeclarations"] := __n111;
__n108["codeType"] := "function";
__n108["strict"] := false;
__n106["body"] := __n108;
__n106["generator"] := false;
__n106["async"] := false;
__n106["expression"] := false;
__n112 := {  };
__n112["type"] := "FunctionExpression";
__n112["id"] := null;
__n113 := [  ];
__n112["params"] := __n113;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n115 := [  ];
__n114["body"] := __n115;
__n116 := [  ];
__n114["variableDeclarations"] := __n116;
__n117 := [  ];
__n114["functionDeclarations"] := __n117;
__n114["codeType"] := "function";
__n114["strict"] := false;
__n112["body"] := __n114;
__n112["generator"] := false;
__n112["async"] := false;
__n112["expression"] := false;
__n105 := [ __n106, __n112 ];
__n103["arguments"] := __n105;
__n102["expression"] := __n103;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n118 := [  ];
__n100["variableDeclarations"] := __n118;
__n119 := [  ];
__n100["functionDeclarations"] := __n119;
__n100["codeType"] := "function";
__n100["strict"] := false;
__n97["body"] := __n100;
__n97["generator"] := false;
__n97["async"] := false;
__n97["expression"] := false;
__n96 := [ __n97 ];
__n0["functionDeclarations"] := __n96;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}