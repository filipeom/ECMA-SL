function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "callCount";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "let";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "thenable";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "then";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [ "_", "reject" ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "UpdateExpression";
__n20["operator"] := "++";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "callCount";
__n20["argument"] := __n21;
__n20["prefix"] := false;
__n19["expression"] := __n20;
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "reject";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "reason";
__n26["raw"] := "'reason'";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n18 := [ __n19, __n22 ];
__n17["body"] := __n18;
__n27 := [  ];
__n17["variableDeclarations"] := __n27;
__n28 := [  ];
__n17["functionDeclarations"] := __n28;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["async"] := false;
__n15["expression"] := false;
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "init";
__n13["shorthand"] := false;
__n12 := [ __n13 ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "let";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Promise";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "any";
__n35["raw"] := "\"any\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "ArrayExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "thenable";
__n38 := [ __n39 ];
__n37["elements"] := __n38;
__n36 := [ __n37 ];
__n32["arguments"] := __n36;
__n31["object"] := __n32;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "then";
__n40["raw"] := "\"then\"";
__n31["property"] := __n40;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n42 := {  };
__n42["type"] := "ArrowFunctionExpression";
__n42["id"] := null;
__n43 := [  ];
__n42["params"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$DONE";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "The promise should not be fulfilled.";
__n50["raw"] := "'The promise should not be fulfilled.'";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n42["body"] := __n44;
__n42["generator"] := false;
__n42["expression"] := false;
__n42["async"] := false;
__n51 := {  };
__n51["type"] := "ArrowFunctionExpression";
__n51["id"] := null;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "error";
__n52 := [ __n53 ];
__n51["params"] := __n52;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "assert";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "sameValue";
__n60["raw"] := "\"sameValue\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "callCount";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 1.;
__n63["raw"] := "1";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "callCount === 1";
__n64["raw"] := "\"callCount === 1\"";
__n61 := [ __n62, __n63, __n64 ];
__n57["arguments"] := __n61;
__n56["expression"] := __n57;
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "assert";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "instanceof";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "error";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "AggregateError";
__n69["right"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "error instanceof AggregateError";
__n72["raw"] := "\"error instanceof AggregateError\"";
__n68 := [ __n69, __n72 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "assert";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "sameValue";
__n77["raw"] := "\"sameValue\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n79["computed"] := true;
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "error";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "errors";
__n82["raw"] := "\"errors\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n79["object"] := __n80;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 0.;
__n83["raw"] := "0";
__n79["property"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "reason";
__n84["raw"] := "\"reason\"";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "error.errors[0] === 'reason'";
__n85["raw"] := "\"error.errors[0] === 'reason'\"";
__n78 := [ __n79, __n84, __n85 ];
__n74["arguments"] := __n78;
__n73["expression"] := __n74;
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "$DONE";
__n87["callee"] := __n88;
__n89 := [  ];
__n87["arguments"] := __n89;
__n86["expression"] := __n87;
__n55 := [ __n56, __n65, __n73, __n86 ];
__n54["body"] := __n55;
__n51["body"] := __n54;
__n51["generator"] := false;
__n51["expression"] := false;
__n51["async"] := false;
__n41 := [ __n42, __n51 ];
__n30["arguments"] := __n41;
__n29["expression"] := __n30;
__n1 := [ __n2, __n7, __n29 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n90 := [ "callCount", "thenable" ];
__n0["variableDeclarations"] := __n90;
__n91 := [  ];
__n0["functionDeclarations"] := __n91;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}