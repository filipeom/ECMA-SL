function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "sequence";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "let";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "p1";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "NewExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Promise";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "ArrowFunctionExpression";
__n15["id"] := null;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "_";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "reject";
__n16 := [ __n17, __n18 ];
__n15["params"] := __n16;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "reject";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "foo";
__n25["raw"] := "'foo'";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n20 := [ __n21 ];
__n19["body"] := __n20;
__n15["body"] := __n19;
__n15["generator"] := false;
__n15["expression"] := false;
__n15["async"] := false;
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "let";
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "p2";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "NewExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "Promise";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "ArrowFunctionExpression";
__n33["id"] := null;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "_";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "reject";
__n34 := [ __n35, __n36 ];
__n33["params"] := __n34;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "reject";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "bar";
__n43["raw"] := "'bar'";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n33["body"] := __n37;
__n33["generator"] := false;
__n33["expression"] := false;
__n33["async"] := false;
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "let";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "sequence";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "push";
__n48["raw"] := "\"push\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 1.;
__n50["raw"] := "1";
__n49 := [ __n50 ];
__n45["arguments"] := __n49;
__n44["expression"] := __n45;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "p1";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "catch";
__n57["raw"] := "\"catch\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "ArrowFunctionExpression";
__n59["id"] := null;
__n60 := [  ];
__n59["params"] := __n60;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "MemberExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "sequence";
__n65["object"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "push";
__n67["raw"] := "\"push\"";
__n65["property"] := __n67;
__n65["computed"] := true;
__n64["callee"] := __n65;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 3.;
__n69["raw"] := "3";
__n68 := [ __n69 ];
__n64["arguments"] := __n68;
__n63["expression"] := __n64;
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "assert";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "sameValue";
__n74["raw"] := "\"sameValue\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n71["callee"] := __n72;
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "sequence";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "length";
__n78["raw"] := "\"length\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 3.;
__n79["raw"] := "3";
__n75 := [ __n76, __n79 ];
__n71["arguments"] := __n75;
__n70["expression"] := __n71;
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "checkSequence";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "sequence";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "Expected to be called first.";
__n85["raw"] := "'Expected to be called first.'";
__n83 := [ __n84, __n85 ];
__n81["arguments"] := __n83;
__n80["expression"] := __n81;
__n62 := [ __n63, __n70, __n80 ];
__n61["body"] := __n62;
__n59["body"] := __n61;
__n59["generator"] := false;
__n59["expression"] := false;
__n59["async"] := false;
__n58 := [ __n59 ];
__n54["arguments"] := __n58;
__n53["object"] := __n54;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "catch";
__n86["raw"] := "\"catch\"";
__n53["property"] := __n86;
__n53["computed"] := true;
__n52["callee"] := __n53;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "$DONE";
__n87 := [ __n88 ];
__n52["arguments"] := __n87;
__n51["expression"] := __n52;
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "MemberExpression";
__n96 := {  };
__n96["type"] := "CallExpression";
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "Promise";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "any";
__n99["raw"] := "\"any\"";
__n97["property"] := __n99;
__n97["computed"] := true;
__n96["callee"] := __n97;
__n101 := {  };
__n101["type"] := "ArrayExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "p1";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "p2";
__n102 := [ __n103, __n104 ];
__n101["elements"] := __n102;
__n100 := [ __n101 ];
__n96["arguments"] := __n100;
__n95["object"] := __n96;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "then";
__n105["raw"] := "\"then\"";
__n95["property"] := __n105;
__n95["computed"] := true;
__n94["callee"] := __n95;
__n107 := {  };
__n107["type"] := "ArrowFunctionExpression";
__n107["id"] := null;
__n108 := [  ];
__n107["params"] := __n108;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "ExpressionStatement";
__n112 := {  };
__n112["type"] := "CallExpression";
__n113 := {  };
__n113["type"] := "MemberExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "sequence";
__n113["object"] := __n114;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "push";
__n115["raw"] := "\"push\"";
__n113["property"] := __n115;
__n113["computed"] := true;
__n112["callee"] := __n113;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 5.;
__n117["raw"] := "5";
__n116 := [ __n117 ];
__n112["arguments"] := __n116;
__n111["expression"] := __n112;
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "MemberExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "assert";
__n120["object"] := __n121;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "sameValue";
__n122["raw"] := "\"sameValue\"";
__n120["property"] := __n122;
__n120["computed"] := true;
__n119["callee"] := __n120;
__n124 := {  };
__n124["type"] := "MemberExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "sequence";
__n124["object"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "length";
__n126["raw"] := "\"length\"";
__n124["property"] := __n126;
__n124["computed"] := true;
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := 5.;
__n127["raw"] := "5";
__n123 := [ __n124, __n127 ];
__n119["arguments"] := __n123;
__n118["expression"] := __n119;
__n128 := {  };
__n128["type"] := "ExpressionStatement";
__n129 := {  };
__n129["type"] := "CallExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "checkSequence";
__n129["callee"] := __n130;
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "sequence";
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "Expected to be called third.";
__n133["raw"] := "'Expected to be called third.'";
__n131 := [ __n132, __n133 ];
__n129["arguments"] := __n131;
__n128["expression"] := __n129;
__n110 := [ __n111, __n118, __n128 ];
__n109["body"] := __n110;
__n107["body"] := __n109;
__n107["generator"] := false;
__n107["expression"] := false;
__n107["async"] := false;
__n106 := [ __n107 ];
__n94["arguments"] := __n106;
__n93["object"] := __n94;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "then";
__n134["raw"] := "\"then\"";
__n93["property"] := __n134;
__n93["computed"] := true;
__n92["callee"] := __n93;
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "$DONE";
__n137 := {  };
__n137["type"] := "ArrowFunctionExpression";
__n137["id"] := null;
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "outcome";
__n138 := [ __n139 ];
__n137["params"] := __n138;
__n140 := {  };
__n140["type"] := "BlockStatement";
__n142 := {  };
__n142["type"] := "ExpressionStatement";
__n143 := {  };
__n143["type"] := "CallExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "assert";
__n143["callee"] := __n144;
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "instanceof";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "outcome";
__n146["left"] := __n147;
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "AggregateError";
__n146["right"] := __n148;
__n145 := [ __n146 ];
__n143["arguments"] := __n145;
__n142["expression"] := __n143;
__n149 := {  };
__n149["type"] := "ExpressionStatement";
__n150 := {  };
__n150["type"] := "CallExpression";
__n151 := {  };
__n151["type"] := "MemberExpression";
__n152 := {  };
__n152["type"] := "Identifier";
__n152["name"] := "assert";
__n151["object"] := __n152;
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := "sameValue";
__n153["raw"] := "\"sameValue\"";
__n151["property"] := __n153;
__n151["computed"] := true;
__n150["callee"] := __n151;
__n155 := {  };
__n155["type"] := "MemberExpression";
__n156 := {  };
__n156["type"] := "MemberExpression";
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "outcome";
__n156["object"] := __n157;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := "errors";
__n158["raw"] := "\"errors\"";
__n156["property"] := __n158;
__n156["computed"] := true;
__n155["object"] := __n156;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "length";
__n159["raw"] := "\"length\"";
__n155["property"] := __n159;
__n155["computed"] := true;
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := 2.;
__n160["raw"] := "2";
__n154 := [ __n155, __n160 ];
__n150["arguments"] := __n154;
__n149["expression"] := __n150;
__n161 := {  };
__n161["type"] := "ExpressionStatement";
__n162 := {  };
__n162["type"] := "CallExpression";
__n163 := {  };
__n163["type"] := "MemberExpression";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "assert";
__n163["object"] := __n164;
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := "sameValue";
__n165["raw"] := "\"sameValue\"";
__n163["property"] := __n165;
__n163["computed"] := true;
__n162["callee"] := __n163;
__n167 := {  };
__n167["type"] := "MemberExpression";
__n167["computed"] := true;
__n168 := {  };
__n168["type"] := "MemberExpression";
__n169 := {  };
__n169["type"] := "Identifier";
__n169["name"] := "outcome";
__n168["object"] := __n169;
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := "errors";
__n170["raw"] := "\"errors\"";
__n168["property"] := __n170;
__n168["computed"] := true;
__n167["object"] := __n168;
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := 0.;
__n171["raw"] := "0";
__n167["property"] := __n171;
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := "foo";
__n172["raw"] := "'foo'";
__n166 := [ __n167, __n172 ];
__n162["arguments"] := __n166;
__n161["expression"] := __n162;
__n173 := {  };
__n173["type"] := "ExpressionStatement";
__n174 := {  };
__n174["type"] := "CallExpression";
__n175 := {  };
__n175["type"] := "MemberExpression";
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "assert";
__n175["object"] := __n176;
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "sameValue";
__n177["raw"] := "\"sameValue\"";
__n175["property"] := __n177;
__n175["computed"] := true;
__n174["callee"] := __n175;
__n179 := {  };
__n179["type"] := "MemberExpression";
__n179["computed"] := true;
__n180 := {  };
__n180["type"] := "MemberExpression";
__n181 := {  };
__n181["type"] := "Identifier";
__n181["name"] := "outcome";
__n180["object"] := __n181;
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := "errors";
__n182["raw"] := "\"errors\"";
__n180["property"] := __n182;
__n180["computed"] := true;
__n179["object"] := __n180;
__n183 := {  };
__n183["type"] := "Literal";
__n183["value"] := 1.;
__n183["raw"] := "1";
__n179["property"] := __n183;
__n184 := {  };
__n184["type"] := "Literal";
__n184["value"] := "bar";
__n184["raw"] := "'bar'";
__n178 := [ __n179, __n184 ];
__n174["arguments"] := __n178;
__n173["expression"] := __n174;
__n141 := [ __n142, __n149, __n161, __n173 ];
__n140["body"] := __n141;
__n137["body"] := __n140;
__n137["generator"] := false;
__n137["expression"] := false;
__n137["async"] := false;
__n135 := [ __n136, __n137 ];
__n92["arguments"] := __n135;
__n91["object"] := __n92;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "then";
__n185["raw"] := "\"then\"";
__n91["property"] := __n185;
__n91["computed"] := true;
__n90["callee"] := __n91;
__n187 := {  };
__n187["type"] := "Identifier";
__n187["name"] := "$DONE";
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "$DONE";
__n186 := [ __n187, __n188 ];
__n90["arguments"] := __n186;
__n89["expression"] := __n90;
__n189 := {  };
__n189["type"] := "ExpressionStatement";
__n190 := {  };
__n190["type"] := "CallExpression";
__n191 := {  };
__n191["type"] := "MemberExpression";
__n192 := {  };
__n192["type"] := "CallExpression";
__n193 := {  };
__n193["type"] := "MemberExpression";
__n194 := {  };
__n194["type"] := "Identifier";
__n194["name"] := "p2";
__n193["object"] := __n194;
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "catch";
__n195["raw"] := "\"catch\"";
__n193["property"] := __n195;
__n193["computed"] := true;
__n192["callee"] := __n193;
__n197 := {  };
__n197["type"] := "ArrowFunctionExpression";
__n197["id"] := null;
__n198 := [  ];
__n197["params"] := __n198;
__n199 := {  };
__n199["type"] := "BlockStatement";
__n201 := {  };
__n201["type"] := "ExpressionStatement";
__n202 := {  };
__n202["type"] := "CallExpression";
__n203 := {  };
__n203["type"] := "MemberExpression";
__n204 := {  };
__n204["type"] := "Identifier";
__n204["name"] := "sequence";
__n203["object"] := __n204;
__n205 := {  };
__n205["type"] := "Literal";
__n205["value"] := "push";
__n205["raw"] := "\"push\"";
__n203["property"] := __n205;
__n203["computed"] := true;
__n202["callee"] := __n203;
__n207 := {  };
__n207["type"] := "Literal";
__n207["value"] := 4.;
__n207["raw"] := "4";
__n206 := [ __n207 ];
__n202["arguments"] := __n206;
__n201["expression"] := __n202;
__n208 := {  };
__n208["type"] := "ExpressionStatement";
__n209 := {  };
__n209["type"] := "CallExpression";
__n210 := {  };
__n210["type"] := "MemberExpression";
__n211 := {  };
__n211["type"] := "Identifier";
__n211["name"] := "assert";
__n210["object"] := __n211;
__n212 := {  };
__n212["type"] := "Literal";
__n212["value"] := "sameValue";
__n212["raw"] := "\"sameValue\"";
__n210["property"] := __n212;
__n210["computed"] := true;
__n209["callee"] := __n210;
__n214 := {  };
__n214["type"] := "MemberExpression";
__n215 := {  };
__n215["type"] := "Identifier";
__n215["name"] := "sequence";
__n214["object"] := __n215;
__n216 := {  };
__n216["type"] := "Literal";
__n216["value"] := "length";
__n216["raw"] := "\"length\"";
__n214["property"] := __n216;
__n214["computed"] := true;
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := 4.;
__n217["raw"] := "4";
__n213 := [ __n214, __n217 ];
__n209["arguments"] := __n213;
__n208["expression"] := __n209;
__n218 := {  };
__n218["type"] := "ExpressionStatement";
__n219 := {  };
__n219["type"] := "CallExpression";
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "checkSequence";
__n219["callee"] := __n220;
__n222 := {  };
__n222["type"] := "Identifier";
__n222["name"] := "sequence";
__n223 := {  };
__n223["type"] := "Literal";
__n223["value"] := "Expected to be called second.";
__n223["raw"] := "'Expected to be called second.'";
__n221 := [ __n222, __n223 ];
__n219["arguments"] := __n221;
__n218["expression"] := __n219;
__n200 := [ __n201, __n208, __n218 ];
__n199["body"] := __n200;
__n197["body"] := __n199;
__n197["generator"] := false;
__n197["expression"] := false;
__n197["async"] := false;
__n196 := [ __n197 ];
__n192["arguments"] := __n196;
__n191["object"] := __n192;
__n224 := {  };
__n224["type"] := "Literal";
__n224["value"] := "catch";
__n224["raw"] := "\"catch\"";
__n191["property"] := __n224;
__n191["computed"] := true;
__n190["callee"] := __n191;
__n226 := {  };
__n226["type"] := "Identifier";
__n226["name"] := "$DONE";
__n225 := [ __n226 ];
__n190["arguments"] := __n225;
__n189["expression"] := __n190;
__n227 := {  };
__n227["type"] := "ExpressionStatement";
__n228 := {  };
__n228["type"] := "CallExpression";
__n229 := {  };
__n229["type"] := "MemberExpression";
__n230 := {  };
__n230["type"] := "Identifier";
__n230["name"] := "sequence";
__n229["object"] := __n230;
__n231 := {  };
__n231["type"] := "Literal";
__n231["value"] := "push";
__n231["raw"] := "\"push\"";
__n229["property"] := __n231;
__n229["computed"] := true;
__n228["callee"] := __n229;
__n233 := {  };
__n233["type"] := "Literal";
__n233["value"] := 2.;
__n233["raw"] := "2";
__n232 := [ __n233 ];
__n228["arguments"] := __n232;
__n227["expression"] := __n228;
__n1 := [ __n2, __n8, __n26, __n44, __n51, __n89, __n189, __n227 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n234 := [ "sequence", "p1", "p2" ];
__n0["variableDeclarations"] := __n234;
__n235 := [  ];
__n0["functionDeclarations"] := __n235;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}