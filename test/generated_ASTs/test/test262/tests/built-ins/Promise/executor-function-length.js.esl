function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "executorFunction";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "NotPromise";
__n6["expression"] := __n7;
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Promise";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "resolve";
__n13["raw"] := "\"resolve\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["object"] := __n11;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "call";
__n14["raw"] := "\"call\"";
__n10["property"] := __n14;
__n10["computed"] := true;
__n9["callee"] := __n10;
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "NotPromise";
__n15 := [ __n16 ];
__n9["arguments"] := __n15;
__n8["expression"] := __n9;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "assert";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "sameValue";
__n21["raw"] := "\"sameValue\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "executorFunction";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "length";
__n25["raw"] := "\"length\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 2.;
__n26["raw"] := "2";
__n22 := [ __n23, __n26 ];
__n18["arguments"] := __n22;
__n17["expression"] := __n18;
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "verifyNotEnumerable";
__n28["callee"] := __n29;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "executorFunction";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "length";
__n32["raw"] := "\"length\"";
__n30 := [ __n31, __n32 ];
__n28["arguments"] := __n30;
__n27["expression"] := __n28;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "verifyNotWritable";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "executorFunction";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "length";
__n38["raw"] := "\"length\"";
__n36 := [ __n37, __n38 ];
__n34["arguments"] := __n36;
__n33["expression"] := __n34;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "verifyConfigurable";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "executorFunction";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "length";
__n44["raw"] := "\"length\"";
__n42 := [ __n43, __n44 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n1 := [ __n2, __n6, __n8, __n17, __n27, __n33, __n39 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n45 := [ "executorFunction" ];
__n0["variableDeclarations"] := __n45;
__n47 := {  };
__n47["type"] := "FunctionDeclaration";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "NotPromise";
__n47["id"] := __n48;
__n49 := [ "executor" ];
__n47["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "AssignmentExpression";
__n53["operator"] := "=";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "executorFunction";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "executor";
__n53["right"] := __n55;
__n52["expression"] := __n53;
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "executor";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "FunctionExpression";
__n60["id"] := null;
__n61 := [  ];
__n60["params"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n63 := [  ];
__n62["body"] := __n63;
__n64 := [  ];
__n62["variableDeclarations"] := __n64;
__n65 := [  ];
__n62["functionDeclarations"] := __n65;
__n62["codeType"] := "function";
__n62["strict"] := false;
__n60["body"] := __n62;
__n60["generator"] := false;
__n60["async"] := false;
__n60["expression"] := false;
__n66 := {  };
__n66["type"] := "FunctionExpression";
__n66["id"] := null;
__n67 := [  ];
__n66["params"] := __n67;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n69 := [  ];
__n68["body"] := __n69;
__n70 := [  ];
__n68["variableDeclarations"] := __n70;
__n71 := [  ];
__n68["functionDeclarations"] := __n71;
__n68["codeType"] := "function";
__n68["strict"] := false;
__n66["body"] := __n68;
__n66["generator"] := false;
__n66["async"] := false;
__n66["expression"] := false;
__n59 := [ __n60, __n66 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n51 := [ __n52, __n56 ];
__n50["body"] := __n51;
__n72 := [  ];
__n50["variableDeclarations"] := __n72;
__n73 := [  ];
__n50["functionDeclarations"] := __n73;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n47["body"] := __n50;
__n47["generator"] := false;
__n47["async"] := false;
__n47["expression"] := false;
__n46 := [ __n47 ];
__n0["functionDeclarations"] := __n46;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}