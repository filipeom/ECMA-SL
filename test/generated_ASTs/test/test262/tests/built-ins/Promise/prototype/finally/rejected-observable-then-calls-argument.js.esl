function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ClassDeclaration";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "MyError";
__n2["id"] := __n3;
__n4 := {  };
__n4["type"] := "Identifier";
__n4["name"] := "Error";
__n2["superClass"] := __n4;
__n5 := {  };
__n5["type"] := "ClassBody";
__n6 := [  ];
__n5["body"] := __n6;
__n2["body"] := __n5;
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "myError";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "NewExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "MyError";
__n11["callee"] := __n12;
__n13 := [  ];
__n11["arguments"] := __n13;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "Promise";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "reject";
__n22["raw"] := "\"reject\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "myError";
__n23 := [ __n24 ];
__n19["arguments"] := __n23;
__n18["object"] := __n19;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "finally";
__n25["raw"] := "\"finally\"";
__n18["property"] := __n25;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n27 := {  };
__n27["type"] := "FunctionExpression";
__n27["id"] := null;
__n28 := [  ];
__n27["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n30 := [  ];
__n29["body"] := __n30;
__n31 := [  ];
__n29["variableDeclarations"] := __n31;
__n32 := [  ];
__n29["functionDeclarations"] := __n32;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n27["body"] := __n29;
__n27["generator"] := false;
__n27["async"] := false;
__n27["expression"] := false;
__n26 := [ __n27 ];
__n17["arguments"] := __n26;
__n16["object"] := __n17;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "then";
__n33["raw"] := "\"then\"";
__n16["property"] := __n33;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n35 := {  };
__n35["type"] := "FunctionExpression";
__n35["id"] := null;
__n36 := [ "value" ];
__n35["params"] := __n36;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$DONE";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "Expected promise to be rejected, got fulfilled with ";
__n44["raw"] := "'Expected promise to be rejected, got fulfilled with '";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "value";
__n43["right"] := __n45;
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n46 := [  ];
__n37["variableDeclarations"] := __n46;
__n47 := [  ];
__n37["functionDeclarations"] := __n47;
__n37["codeType"] := "function";
__n37["strict"] := false;
__n35["body"] := __n37;
__n35["generator"] := false;
__n35["async"] := false;
__n35["expression"] := false;
__n48 := {  };
__n48["type"] := "FunctionExpression";
__n48["id"] := null;
__n49 := [ "reason" ];
__n48["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "IfStatement";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "===";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "reason";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "myError";
__n53["right"] := __n55;
__n52["test"] := __n53;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "$DONE";
__n59["callee"] := __n60;
__n61 := [  ];
__n59["arguments"] := __n61;
__n58["expression"] := __n59;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n52["consequent"] := __n56;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "$DONE";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "reason";
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n52["alternate"] := __n62;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n69 := [  ];
__n50["variableDeclarations"] := __n69;
__n70 := [  ];
__n50["functionDeclarations"] := __n70;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n48["body"] := __n50;
__n48["generator"] := false;
__n48["async"] := false;
__n48["expression"] := false;
__n34 := [ __n35, __n48 ];
__n15["arguments"] := __n34;
__n14["expression"] := __n15;
__n71 := {  };
__n71["type"] := "VariableDeclaration";
__n73 := {  };
__n73["type"] := "VariableDeclarator";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "calls";
__n73["id"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 0.;
__n75["raw"] := "0";
__n73["init"] := __n75;
__n72 := [ __n73 ];
__n71["declarations"] := __n72;
__n71["kind"] := "var";
__n76 := {  };
__n76["type"] := "VariableDeclaration";
__n78 := {  };
__n78["type"] := "VariableDeclarator";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "expected";
__n78["id"] := __n79;
__n80 := {  };
__n80["type"] := "ArrayExpression";
__n82 := {  };
__n82["type"] := "ObjectExpression";
__n84 := {  };
__n84["type"] := "Property";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "length";
__n84["key"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := 0.;
__n86["raw"] := "0";
__n84["value"] := __n86;
__n84["computed"] := false;
__n84["kind"] := "init";
__n84["shorthand"] := false;
__n87 := {  };
__n87["type"] := "Property";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "name";
__n87["key"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "";
__n89["raw"] := "''";
__n87["value"] := __n89;
__n87["computed"] := false;
__n87["kind"] := "init";
__n87["shorthand"] := false;
__n83 := [ __n84, __n87 ];
__n82["properties"] := __n83;
__n90 := {  };
__n90["type"] := "ObjectExpression";
__n92 := {  };
__n92["type"] := "Property";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "length";
__n92["key"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := 1.;
__n94["raw"] := "1";
__n92["value"] := __n94;
__n92["computed"] := false;
__n92["kind"] := "init";
__n92["shorthand"] := false;
__n95 := {  };
__n95["type"] := "Property";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "name";
__n95["key"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "";
__n97["raw"] := "''";
__n95["value"] := __n97;
__n95["computed"] := false;
__n95["kind"] := "init";
__n95["shorthand"] := false;
__n91 := [ __n92, __n95 ];
__n90["properties"] := __n91;
__n81 := [ __n82, __n90 ];
__n80["elements"] := __n81;
__n78["init"] := __n80;
__n77 := [ __n78 ];
__n76["declarations"] := __n77;
__n76["kind"] := "var";
__n98 := {  };
__n98["type"] := "VariableDeclaration";
__n100 := {  };
__n100["type"] := "VariableDeclarator";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "then";
__n100["id"] := __n101;
__n102 := {  };
__n102["type"] := "MemberExpression";
__n103 := {  };
__n103["type"] := "MemberExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "Promise";
__n103["object"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "prototype";
__n105["raw"] := "\"prototype\"";
__n103["property"] := __n105;
__n103["computed"] := true;
__n102["object"] := __n103;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "then";
__n106["raw"] := "\"then\"";
__n102["property"] := __n106;
__n102["computed"] := true;
__n100["init"] := __n102;
__n99 := [ __n100 ];
__n98["declarations"] := __n99;
__n98["kind"] := "var";
__n107 := {  };
__n107["type"] := "ExpressionStatement";
__n108 := {  };
__n108["type"] := "AssignmentExpression";
__n108["operator"] := "=";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "MemberExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "Promise";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "prototype";
__n112["raw"] := "\"prototype\"";
__n110["property"] := __n112;
__n110["computed"] := true;
__n109["object"] := __n110;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "then";
__n113["raw"] := "\"then\"";
__n109["property"] := __n113;
__n109["computed"] := true;
__n108["left"] := __n109;
__n114 := {  };
__n114["type"] := "FunctionExpression";
__n114["id"] := null;
__n115 := [ "resolve", "reject" ];
__n114["params"] := __n115;
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "MemberExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "assert";
__n120["object"] := __n121;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "sameValue";
__n122["raw"] := "\"sameValue\"";
__n120["property"] := __n122;
__n120["computed"] := true;
__n119["callee"] := __n120;
__n124 := {  };
__n124["type"] := "CallExpression";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "isConstructor";
__n124["callee"] := __n125;
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "reject";
__n126 := [ __n127 ];
__n124["arguments"] := __n126;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := false;
__n128["raw"] := "false";
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "isConstructor(reject) must return false";
__n129["raw"] := "'isConstructor(reject) must return false'";
__n123 := [ __n124, __n128, __n129 ];
__n119["arguments"] := __n123;
__n118["expression"] := __n119;
__n130 := {  };
__n130["type"] := "ExpressionStatement";
__n131 := {  };
__n131["type"] := "CallExpression";
__n132 := {  };
__n132["type"] := "MemberExpression";
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "assert";
__n132["object"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "throws";
__n134["raw"] := "\"throws\"";
__n132["property"] := __n134;
__n132["computed"] := true;
__n131["callee"] := __n132;
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "TypeError";
__n137 := {  };
__n137["type"] := "ArrowFunctionExpression";
__n137["id"] := null;
__n138 := [  ];
__n137["params"] := __n138;
__n139 := {  };
__n139["type"] := "BlockStatement";
__n141 := {  };
__n141["type"] := "ExpressionStatement";
__n142 := {  };
__n142["type"] := "NewExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "reject";
__n142["callee"] := __n143;
__n144 := [  ];
__n142["arguments"] := __n144;
__n141["expression"] := __n142;
__n140 := [ __n141 ];
__n139["body"] := __n140;
__n137["body"] := __n139;
__n137["generator"] := false;
__n137["expression"] := false;
__n137["async"] := false;
__n145 := {  };
__n145["type"] := "Literal";
__n145["value"] := "`new reject()` throws TypeError";
__n145["raw"] := "'`new reject()` throws TypeError'";
__n135 := [ __n136, __n137, __n145 ];
__n131["arguments"] := __n135;
__n130["expression"] := __n131;
__n146 := {  };
__n146["type"] := "ExpressionStatement";
__n147 := {  };
__n147["type"] := "CallExpression";
__n148 := {  };
__n148["type"] := "MemberExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "assert";
__n148["object"] := __n149;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "sameValue";
__n150["raw"] := "\"sameValue\"";
__n148["property"] := __n150;
__n148["computed"] := true;
__n147["callee"] := __n148;
__n152 := {  };
__n152["type"] := "MemberExpression";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "resolve";
__n152["object"] := __n153;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "length";
__n154["raw"] := "\"length\"";
__n152["property"] := __n154;
__n152["computed"] := true;
__n155 := {  };
__n155["type"] := "MemberExpression";
__n156 := {  };
__n156["type"] := "MemberExpression";
__n156["computed"] := true;
__n157 := {  };
__n157["type"] := "Identifier";
__n157["name"] := "expected";
__n156["object"] := __n157;
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "calls";
__n156["property"] := __n158;
__n155["object"] := __n156;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "length";
__n159["raw"] := "\"length\"";
__n155["property"] := __n159;
__n155["computed"] := true;
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := "The value of resolve.length is expected to equal the value of expected[calls].length";
__n160["raw"] := "'The value of resolve.length is expected to equal the value of expected[calls].length'";
__n151 := [ __n152, __n155, __n160 ];
__n147["arguments"] := __n151;
__n146["expression"] := __n147;
__n161 := {  };
__n161["type"] := "ExpressionStatement";
__n162 := {  };
__n162["type"] := "CallExpression";
__n163 := {  };
__n163["type"] := "MemberExpression";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "assert";
__n163["object"] := __n164;
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := "sameValue";
__n165["raw"] := "\"sameValue\"";
__n163["property"] := __n165;
__n163["computed"] := true;
__n162["callee"] := __n163;
__n167 := {  };
__n167["type"] := "MemberExpression";
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "resolve";
__n167["object"] := __n168;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := "name";
__n169["raw"] := "\"name\"";
__n167["property"] := __n169;
__n167["computed"] := true;
__n170 := {  };
__n170["type"] := "MemberExpression";
__n171 := {  };
__n171["type"] := "MemberExpression";
__n171["computed"] := true;
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "expected";
__n171["object"] := __n172;
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "calls";
__n171["property"] := __n173;
__n170["object"] := __n171;
__n174 := {  };
__n174["type"] := "Literal";
__n174["value"] := "name";
__n174["raw"] := "\"name\"";
__n170["property"] := __n174;
__n170["computed"] := true;
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := "The value of resolve.name is expected to equal the value of expected[calls].name";
__n175["raw"] := "'The value of resolve.name is expected to equal the value of expected[calls].name'";
__n166 := [ __n167, __n170, __n175 ];
__n162["arguments"] := __n166;
__n161["expression"] := __n162;
__n176 := {  };
__n176["type"] := "IfStatement";
__n177 := {  };
__n177["type"] := "BinaryExpression";
__n177["operator"] := "===";
__n178 := {  };
__n178["type"] := "Identifier";
__n178["name"] := "calls";
__n177["left"] := __n178;
__n179 := {  };
__n179["type"] := "Literal";
__n179["value"] := 0.;
__n179["raw"] := "0";
__n177["right"] := __n179;
__n176["test"] := __n177;
__n180 := {  };
__n180["type"] := "BlockStatement";
__n182 := {  };
__n182["type"] := "ExpressionStatement";
__n183 := {  };
__n183["type"] := "CallExpression";
__n184 := {  };
__n184["type"] := "MemberExpression";
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "assert";
__n184["object"] := __n185;
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := "throws";
__n186["raw"] := "\"throws\"";
__n184["property"] := __n186;
__n184["computed"] := true;
__n183["callee"] := __n184;
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "MyError";
__n189 := {  };
__n189["type"] := "Identifier";
__n189["name"] := "resolve";
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := "`resolve()` throws `MyError`";
__n190["raw"] := "'`resolve()` throws `MyError`'";
__n187 := [ __n188, __n189, __n190 ];
__n183["arguments"] := __n187;
__n182["expression"] := __n183;
__n181 := [ __n182 ];
__n180["body"] := __n181;
__n176["consequent"] := __n180;
__n176["alternate"] := null;
__n191 := {  };
__n191["type"] := "ExpressionStatement";
__n192 := {  };
__n192["type"] := "AssignmentExpression";
__n192["operator"] := "+=";
__n193 := {  };
__n193["type"] := "Identifier";
__n193["name"] := "calls";
__n192["left"] := __n193;
__n194 := {  };
__n194["type"] := "Literal";
__n194["value"] := 1.;
__n194["raw"] := "1";
__n192["right"] := __n194;
__n191["expression"] := __n192;
__n195 := {  };
__n195["type"] := "ReturnStatement";
__n196 := {  };
__n196["type"] := "CallExpression";
__n197 := {  };
__n197["type"] := "MemberExpression";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "then";
__n197["object"] := __n198;
__n199 := {  };
__n199["type"] := "Literal";
__n199["value"] := "call";
__n199["raw"] := "\"call\"";
__n197["property"] := __n199;
__n197["computed"] := true;
__n196["callee"] := __n197;
__n201 := {  };
__n201["type"] := "ThisExpression";
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "resolve";
__n203 := {  };
__n203["type"] := "Identifier";
__n203["name"] := "reject";
__n200 := [ __n201, __n202, __n203 ];
__n196["arguments"] := __n200;
__n195["argument"] := __n196;
__n117 := [ __n118, __n130, __n146, __n161, __n176, __n191, __n195 ];
__n116["body"] := __n117;
__n204 := [  ];
__n116["variableDeclarations"] := __n204;
__n205 := [  ];
__n116["functionDeclarations"] := __n205;
__n116["codeType"] := "function";
__n116["strict"] := false;
__n114["body"] := __n116;
__n114["generator"] := false;
__n114["async"] := false;
__n114["expression"] := false;
__n108["right"] := __n114;
__n107["expression"] := __n108;
__n1 := [ __n2, __n7, __n14, __n71, __n76, __n98, __n107 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n206 := [ "myError", "calls", "expected", "then" ];
__n0["variableDeclarations"] := __n206;
__n207 := [  ];
__n0["functionDeclarations"] := __n207;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}