function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "thrower";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Promise";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "FunctionExpression";
__n9["id"] := null;
__n10 := [  ];
__n9["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n12 := [  ];
__n11["body"] := __n12;
__n13 := [  ];
__n11["variableDeclarations"] := __n13;
__n14 := [  ];
__n11["functionDeclarations"] := __n14;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n9["body"] := __n11;
__n9["generator"] := false;
__n9["async"] := false;
__n9["expression"] := false;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "AssignmentExpression";
__n16["operator"] := "=";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "thrower";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "then";
__n19["raw"] := "\"then\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["left"] := __n17;
__n20 := {  };
__n20["type"] := "FunctionExpression";
__n20["id"] := null;
__n21 := [  ];
__n20["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ThrowStatement";
__n25 := {  };
__n25["type"] := "NewExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Test262Error";
__n25["callee"] := __n26;
__n27 := [  ];
__n25["arguments"] := __n27;
__n24["argument"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n28 := [  ];
__n22["variableDeclarations"] := __n28;
__n29 := [  ];
__n22["functionDeclarations"] := __n29;
__n22["codeType"] := "function";
__n22["strict"] := false;
__n20["body"] := __n22;
__n20["generator"] := false;
__n20["async"] := false;
__n20["expression"] := false;
__n16["right"] := __n20;
__n15["expression"] := __n16;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "assert";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "throws";
__n34["raw"] := "\"throws\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "Test262Error";
__n37 := {  };
__n37["type"] := "FunctionExpression";
__n37["id"] := null;
__n38 := [  ];
__n37["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "Promise";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "prototype";
__n47["raw"] := "\"prototype\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["object"] := __n45;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "finally";
__n48["raw"] := "\"finally\"";
__n44["property"] := __n48;
__n44["computed"] := true;
__n43["object"] := __n44;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "call";
__n49["raw"] := "\"call\"";
__n43["property"] := __n49;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "thrower";
__n50 := [ __n51 ];
__n42["arguments"] := __n50;
__n41["expression"] := __n42;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n52 := [  ];
__n39["variableDeclarations"] := __n52;
__n53 := [  ];
__n39["functionDeclarations"] := __n53;
__n39["codeType"] := "function";
__n39["strict"] := false;
__n37["body"] := __n39;
__n37["generator"] := false;
__n37["async"] := false;
__n37["expression"] := false;
__n35 := [ __n36, __n37 ];
__n31["arguments"] := __n35;
__n30["expression"] := __n31;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "assert";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "throws";
__n58["raw"] := "\"throws\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "Test262Error";
__n61 := {  };
__n61["type"] := "FunctionExpression";
__n61["id"] := null;
__n62 := [  ];
__n61["params"] := __n62;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "MemberExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "thrower";
__n67["object"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "finally";
__n69["raw"] := "\"finally\"";
__n67["property"] := __n69;
__n67["computed"] := true;
__n66["callee"] := __n67;
__n70 := [  ];
__n66["arguments"] := __n70;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n71 := [  ];
__n63["variableDeclarations"] := __n71;
__n72 := [  ];
__n63["functionDeclarations"] := __n72;
__n63["codeType"] := "function";
__n63["strict"] := false;
__n61["body"] := __n63;
__n61["generator"] := false;
__n61["async"] := false;
__n61["expression"] := false;
__n59 := [ __n60, __n61 ];
__n55["arguments"] := __n59;
__n54["expression"] := __n55;
__n1 := [ __n2, __n15, __n30, __n54 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n73 := [ "thrower" ];
__n0["variableDeclarations"] := __n73;
__n74 := [  ];
__n0["functionDeclarations"] := __n74;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}