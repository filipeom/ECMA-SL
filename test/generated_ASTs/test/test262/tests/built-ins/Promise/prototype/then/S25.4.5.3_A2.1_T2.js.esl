function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "ZeroArgConstructor";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "z";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "NewExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "ZeroArgConstructor";
__n8["callee"] := __n9;
__n10 := [  ];
__n8["arguments"] := __n10;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "assert";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "throws";
__n15["raw"] := "\"throws\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["callee"] := __n13;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "TypeError";
__n18 := {  };
__n18["type"] := "FunctionExpression";
__n18["id"] := null;
__n19 := [  ];
__n18["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "Promise";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "then";
__n27["raw"] := "\"then\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["object"] := __n25;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "call";
__n28["raw"] := "\"call\"";
__n24["property"] := __n28;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "z";
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [  ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n34 := [  ];
__n33["body"] := __n34;
__n35 := [  ];
__n33["variableDeclarations"] := __n35;
__n36 := [  ];
__n33["functionDeclarations"] := __n36;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["async"] := false;
__n31["expression"] := false;
__n37 := {  };
__n37["type"] := "FunctionExpression";
__n37["id"] := null;
__n38 := [  ];
__n37["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n40 := [  ];
__n39["body"] := __n40;
__n41 := [  ];
__n39["variableDeclarations"] := __n41;
__n42 := [  ];
__n39["functionDeclarations"] := __n42;
__n39["codeType"] := "function";
__n39["strict"] := false;
__n37["body"] := __n39;
__n37["generator"] := false;
__n37["async"] := false;
__n37["expression"] := false;
__n29 := [ __n30, __n31, __n37 ];
__n23["arguments"] := __n29;
__n22["expression"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n43 := [  ];
__n20["variableDeclarations"] := __n43;
__n44 := [  ];
__n20["functionDeclarations"] := __n44;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n18["body"] := __n20;
__n18["generator"] := false;
__n18["async"] := false;
__n18["expression"] := false;
__n16 := [ __n17, __n18 ];
__n12["arguments"] := __n16;
__n11["expression"] := __n12;
__n1 := [ __n2, __n4, __n11 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n45 := [ "z" ];
__n0["variableDeclarations"] := __n45;
__n47 := {  };
__n47["type"] := "FunctionDeclaration";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "ZeroArgConstructor";
__n47["id"] := __n48;
__n49 := [  ];
__n47["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n51 := [  ];
__n50["body"] := __n51;
__n52 := [  ];
__n50["variableDeclarations"] := __n52;
__n53 := [  ];
__n50["functionDeclarations"] := __n53;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n47["body"] := __n50;
__n47["generator"] := false;
__n47["async"] := false;
__n47["expression"] := false;
__n46 := [ __n47 ];
__n0["functionDeclarations"] := __n46;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}