function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "sequence";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n7 := [  ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "pReject";
__n8["id"] := __n9;
__n8["init"] := null;
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "p";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "NewExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Promise";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [ "resolve", "reject" ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "AssignmentExpression";
__n20["operator"] := "=";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "pReject";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "reject";
__n20["right"] := __n22;
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n23 := [  ];
__n17["variableDeclarations"] := __n23;
__n24 := [  ];
__n17["functionDeclarations"] := __n24;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["async"] := false;
__n15["expression"] := false;
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n10["init"] := __n12;
__n3 := [ __n4, __n8, __n10 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "sequence";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "push";
__n29["raw"] := "\"push\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := 1.;
__n31["raw"] := "1";
__n30 := [ __n31 ];
__n26["arguments"] := __n30;
__n25["expression"] := __n26;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "pReject";
__n33["callee"] := __n34;
__n35 := [  ];
__n33["arguments"] := __n35;
__n32["expression"] := __n33;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "p";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "then";
__n42["raw"] := "\"then\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "FunctionExpression";
__n44["id"] := null;
__n45 := [  ];
__n44["params"] := __n45;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ThrowStatement";
__n49 := {  };
__n49["type"] := "NewExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "Test262Error";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "Should not be called -- Promise rejected.";
__n52["raw"] := "\"Should not be called -- Promise rejected.\"";
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["argument"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n53 := [  ];
__n46["variableDeclarations"] := __n53;
__n54 := [  ];
__n46["functionDeclarations"] := __n54;
__n46["codeType"] := "function";
__n46["strict"] := false;
__n44["body"] := __n46;
__n44["generator"] := false;
__n44["async"] := false;
__n44["expression"] := false;
__n55 := {  };
__n55["type"] := "FunctionExpression";
__n55["id"] := null;
__n56 := [  ];
__n55["params"] := __n56;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "sequence";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "push";
__n63["raw"] := "\"push\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 3.;
__n65["raw"] := "3";
__n64 := [ __n65 ];
__n60["arguments"] := __n64;
__n59["expression"] := __n60;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "assert";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "sameValue";
__n70["raw"] := "\"sameValue\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n67["callee"] := __n68;
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "sequence";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "length";
__n74["raw"] := "\"length\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := 3.;
__n75["raw"] := "3";
__n71 := [ __n72, __n75 ];
__n67["arguments"] := __n71;
__n66["expression"] := __n67;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "checkSequence";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "sequence";
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "Should be first";
__n81["raw"] := "\"Should be first\"";
__n79 := [ __n80, __n81 ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n58 := [ __n59, __n66, __n76 ];
__n57["body"] := __n58;
__n82 := [  ];
__n57["variableDeclarations"] := __n82;
__n83 := [  ];
__n57["functionDeclarations"] := __n83;
__n57["codeType"] := "function";
__n57["strict"] := false;
__n55["body"] := __n57;
__n55["generator"] := false;
__n55["async"] := false;
__n55["expression"] := false;
__n43 := [ __n44, __n55 ];
__n39["arguments"] := __n43;
__n38["object"] := __n39;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "catch";
__n84["raw"] := "\"catch\"";
__n38["property"] := __n84;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$DONE";
__n85 := [ __n86 ];
__n37["arguments"] := __n85;
__n36["expression"] := __n37;
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "Promise";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "resolve";
__n95["raw"] := "\"resolve\"";
__n93["property"] := __n95;
__n93["computed"] := true;
__n92["callee"] := __n93;
__n96 := [  ];
__n92["arguments"] := __n96;
__n91["object"] := __n92;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "then";
__n97["raw"] := "\"then\"";
__n91["property"] := __n97;
__n91["computed"] := true;
__n90["callee"] := __n91;
__n99 := {  };
__n99["type"] := "FunctionExpression";
__n99["id"] := null;
__n100 := [  ];
__n99["params"] := __n100;
__n101 := {  };
__n101["type"] := "BlockStatement";
__n103 := {  };
__n103["type"] := "ExpressionStatement";
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "MemberExpression";
__n106 := {  };
__n106["type"] := "CallExpression";
__n107 := {  };
__n107["type"] := "MemberExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "p";
__n107["object"] := __n108;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "then";
__n109["raw"] := "\"then\"";
__n107["property"] := __n109;
__n107["computed"] := true;
__n106["callee"] := __n107;
__n111 := {  };
__n111["type"] := "FunctionExpression";
__n111["id"] := null;
__n112 := [  ];
__n111["params"] := __n112;
__n113 := {  };
__n113["type"] := "BlockStatement";
__n115 := {  };
__n115["type"] := "ThrowStatement";
__n116 := {  };
__n116["type"] := "NewExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "Test262Error";
__n116["callee"] := __n117;
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "Should not be called (2) -- Promise rejected.";
__n119["raw"] := "\"Should not be called (2) -- Promise rejected.\"";
__n118 := [ __n119 ];
__n116["arguments"] := __n118;
__n115["argument"] := __n116;
__n114 := [ __n115 ];
__n113["body"] := __n114;
__n120 := [  ];
__n113["variableDeclarations"] := __n120;
__n121 := [  ];
__n113["functionDeclarations"] := __n121;
__n113["codeType"] := "function";
__n113["strict"] := false;
__n111["body"] := __n113;
__n111["generator"] := false;
__n111["async"] := false;
__n111["expression"] := false;
__n122 := {  };
__n122["type"] := "FunctionExpression";
__n122["id"] := null;
__n123 := [  ];
__n122["params"] := __n123;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "MemberExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "sequence";
__n128["object"] := __n129;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "push";
__n130["raw"] := "\"push\"";
__n128["property"] := __n130;
__n128["computed"] := true;
__n127["callee"] := __n128;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := 5.;
__n132["raw"] := "5";
__n131 := [ __n132 ];
__n127["arguments"] := __n131;
__n126["expression"] := __n127;
__n133 := {  };
__n133["type"] := "ExpressionStatement";
__n134 := {  };
__n134["type"] := "CallExpression";
__n135 := {  };
__n135["type"] := "MemberExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "assert";
__n135["object"] := __n136;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "sameValue";
__n137["raw"] := "\"sameValue\"";
__n135["property"] := __n137;
__n135["computed"] := true;
__n134["callee"] := __n135;
__n139 := {  };
__n139["type"] := "MemberExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "sequence";
__n139["object"] := __n140;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "length";
__n141["raw"] := "\"length\"";
__n139["property"] := __n141;
__n139["computed"] := true;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := 5.;
__n142["raw"] := "5";
__n138 := [ __n139, __n142 ];
__n134["arguments"] := __n138;
__n133["expression"] := __n134;
__n143 := {  };
__n143["type"] := "ExpressionStatement";
__n144 := {  };
__n144["type"] := "CallExpression";
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "checkSequence";
__n144["callee"] := __n145;
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "sequence";
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := "Should be third";
__n148["raw"] := "\"Should be third\"";
__n146 := [ __n147, __n148 ];
__n144["arguments"] := __n146;
__n143["expression"] := __n144;
__n125 := [ __n126, __n133, __n143 ];
__n124["body"] := __n125;
__n149 := [  ];
__n124["variableDeclarations"] := __n149;
__n150 := [  ];
__n124["functionDeclarations"] := __n150;
__n124["codeType"] := "function";
__n124["strict"] := false;
__n122["body"] := __n124;
__n122["generator"] := false;
__n122["async"] := false;
__n122["expression"] := false;
__n110 := [ __n111, __n122 ];
__n106["arguments"] := __n110;
__n105["object"] := __n106;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "then";
__n151["raw"] := "\"then\"";
__n105["property"] := __n151;
__n105["computed"] := true;
__n104["callee"] := __n105;
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "$DONE";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "$DONE";
__n152 := [ __n153, __n154 ];
__n104["arguments"] := __n152;
__n103["expression"] := __n104;
__n155 := {  };
__n155["type"] := "ExpressionStatement";
__n156 := {  };
__n156["type"] := "CallExpression";
__n157 := {  };
__n157["type"] := "MemberExpression";
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "sequence";
__n157["object"] := __n158;
__n159 := {  };
__n159["type"] := "Literal";
__n159["value"] := "push";
__n159["raw"] := "\"push\"";
__n157["property"] := __n159;
__n157["computed"] := true;
__n156["callee"] := __n157;
__n161 := {  };
__n161["type"] := "Literal";
__n161["value"] := 4.;
__n161["raw"] := "4";
__n160 := [ __n161 ];
__n156["arguments"] := __n160;
__n155["expression"] := __n156;
__n162 := {  };
__n162["type"] := "ExpressionStatement";
__n163 := {  };
__n163["type"] := "CallExpression";
__n164 := {  };
__n164["type"] := "MemberExpression";
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "assert";
__n164["object"] := __n165;
__n166 := {  };
__n166["type"] := "Literal";
__n166["value"] := "sameValue";
__n166["raw"] := "\"sameValue\"";
__n164["property"] := __n166;
__n164["computed"] := true;
__n163["callee"] := __n164;
__n168 := {  };
__n168["type"] := "MemberExpression";
__n169 := {  };
__n169["type"] := "Identifier";
__n169["name"] := "sequence";
__n168["object"] := __n169;
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := "length";
__n170["raw"] := "\"length\"";
__n168["property"] := __n170;
__n168["computed"] := true;
__n171 := {  };
__n171["type"] := "Literal";
__n171["value"] := 4.;
__n171["raw"] := "4";
__n167 := [ __n168, __n171 ];
__n163["arguments"] := __n167;
__n162["expression"] := __n163;
__n172 := {  };
__n172["type"] := "ExpressionStatement";
__n173 := {  };
__n173["type"] := "CallExpression";
__n174 := {  };
__n174["type"] := "Identifier";
__n174["name"] := "checkSequence";
__n173["callee"] := __n174;
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "sequence";
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "Should be second";
__n177["raw"] := "\"Should be second\"";
__n175 := [ __n176, __n177 ];
__n173["arguments"] := __n175;
__n172["expression"] := __n173;
__n102 := [ __n103, __n155, __n162, __n172 ];
__n101["body"] := __n102;
__n178 := [  ];
__n101["variableDeclarations"] := __n178;
__n179 := [  ];
__n101["functionDeclarations"] := __n179;
__n101["codeType"] := "function";
__n101["strict"] := false;
__n99["body"] := __n101;
__n99["generator"] := false;
__n99["async"] := false;
__n99["expression"] := false;
__n98 := [ __n99 ];
__n90["arguments"] := __n98;
__n89["object"] := __n90;
__n180 := {  };
__n180["type"] := "Literal";
__n180["value"] := "catch";
__n180["raw"] := "\"catch\"";
__n89["property"] := __n180;
__n89["computed"] := true;
__n88["callee"] := __n89;
__n182 := {  };
__n182["type"] := "Identifier";
__n182["name"] := "$DONE";
__n181 := [ __n182 ];
__n88["arguments"] := __n181;
__n87["expression"] := __n88;
__n183 := {  };
__n183["type"] := "ExpressionStatement";
__n184 := {  };
__n184["type"] := "CallExpression";
__n185 := {  };
__n185["type"] := "MemberExpression";
__n186 := {  };
__n186["type"] := "Identifier";
__n186["name"] := "sequence";
__n185["object"] := __n186;
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := "push";
__n187["raw"] := "\"push\"";
__n185["property"] := __n187;
__n185["computed"] := true;
__n184["callee"] := __n185;
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := 2.;
__n189["raw"] := "2";
__n188 := [ __n189 ];
__n184["arguments"] := __n188;
__n183["expression"] := __n184;
__n1 := [ __n2, __n25, __n32, __n36, __n87, __n183 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n190 := [ "sequence", "pReject", "p" ];
__n0["variableDeclarations"] := __n190;
__n191 := [  ];
__n0["functionDeclarations"] := __n191;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}