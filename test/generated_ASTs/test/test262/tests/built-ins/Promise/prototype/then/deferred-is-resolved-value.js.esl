function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "createBadPromise";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "object";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n12 := [  ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n13 := {  };
__n13["type"] := "ClassDeclaration";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "P";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "Promise";
__n13["superClass"] := __n15;
__n16 := {  };
__n16["type"] := "ClassBody";
__n18 := {  };
__n18["type"] := "MethodDefinition";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "constructor";
__n18["key"] := __n19;
__n18["computed"] := false;
__n20 := {  };
__n20["type"] := "FunctionExpression";
__n20["id"] := null;
__n21 := [ "executor" ];
__n20["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "IfStatement";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "createBadPromise";
__n24["test"] := __n25;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "executor";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "FunctionExpression";
__n32["id"] := null;
__n33 := [ "v" ];
__n32["params"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "assert";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "sameValue";
__n40["raw"] := "\"sameValue\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "v";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "object";
__n41 := [ __n42, __n43 ];
__n37["arguments"] := __n41;
__n36["expression"] := __n37;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$DONE";
__n45["callee"] := __n46;
__n47 := [  ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n35 := [ __n36, __n44 ];
__n34["body"] := __n35;
__n48 := [  ];
__n34["variableDeclarations"] := __n48;
__n49 := [  ];
__n34["functionDeclarations"] := __n49;
__n34["codeType"] := "function";
__n34["strict"] := false;
__n32["body"] := __n34;
__n32["generator"] := false;
__n32["expression"] := false;
__n32["async"] := false;
__n50 := {  };
__n50["type"] := "FunctionExpression";
__n50["id"] := null;
__n51 := [ "e" ];
__n50["params"] := __n51;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$DONE";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "e";
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n59 := [  ];
__n52["variableDeclarations"] := __n59;
__n60 := [  ];
__n52["functionDeclarations"] := __n60;
__n52["codeType"] := "function";
__n52["strict"] := false;
__n50["body"] := __n52;
__n50["generator"] := false;
__n50["expression"] := false;
__n50["async"] := false;
__n31 := [ __n32, __n50 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n61 := {  };
__n61["type"] := "ReturnStatement";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "object";
__n61["argument"] := __n62;
__n27 := [ __n28, __n61 ];
__n26["body"] := __n27;
__n24["consequent"] := __n26;
__n24["alternate"] := null;
__n63 := {  };
__n63["type"] := "ReturnStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Super";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "executor";
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["argument"] := __n64;
__n23 := [ __n24, __n63 ];
__n22["body"] := __n23;
__n68 := [  ];
__n22["variableDeclarations"] := __n68;
__n69 := [  ];
__n22["functionDeclarations"] := __n69;
__n22["codeType"] := "function";
__n22["strict"] := false;
__n20["body"] := __n22;
__n20["generator"] := false;
__n20["expression"] := false;
__n20["async"] := false;
__n18["value"] := __n20;
__n18["kind"] := "constructor";
__n18["static"] := false;
__n17 := [ __n18 ];
__n16["body"] := __n17;
__n13["body"] := __n16;
__n70 := {  };
__n70["type"] := "VariableDeclaration";
__n72 := {  };
__n72["type"] := "VariableDeclarator";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "p";
__n72["id"] := __n73;
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "P";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "resolve";
__n77["raw"] := "\"resolve\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["callee"] := __n75;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "object";
__n78 := [ __n79 ];
__n74["arguments"] := __n78;
__n72["init"] := __n74;
__n71 := [ __n72 ];
__n70["declarations"] := __n71;
__n70["kind"] := "var";
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "AssignmentExpression";
__n81["operator"] := "=";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "createBadPromise";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := true;
__n83["raw"] := "true";
__n81["right"] := __n83;
__n80["expression"] := __n81;
__n84 := {  };
__n84["type"] := "VariableDeclaration";
__n86 := {  };
__n86["type"] := "VariableDeclarator";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "q";
__n86["id"] := __n87;
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "p";
__n89["object"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "then";
__n91["raw"] := "\"then\"";
__n89["property"] := __n91;
__n89["computed"] := true;
__n88["callee"] := __n89;
__n92 := [  ];
__n88["arguments"] := __n92;
__n86["init"] := __n88;
__n85 := [ __n86 ];
__n84["declarations"] := __n85;
__n84["kind"] := "var";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "AssignmentExpression";
__n94["operator"] := "=";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "createBadPromise";
__n94["left"] := __n95;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := false;
__n96["raw"] := "false";
__n94["right"] := __n96;
__n93["expression"] := __n94;
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "CallExpression";
__n99 := {  };
__n99["type"] := "MemberExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "assert";
__n99["object"] := __n100;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "sameValue";
__n101["raw"] := "\"sameValue\"";
__n99["property"] := __n101;
__n99["computed"] := true;
__n98["callee"] := __n99;
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "q";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "object";
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := "then() returns object";
__n105["raw"] := "\"then() returns object\"";
__n102 := [ __n103, __n104, __n105 ];
__n98["arguments"] := __n102;
__n97["expression"] := __n98;
__n1 := [ __n2, __n7, __n13, __n70, __n80, __n84, __n93, __n97 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n106 := [ "createBadPromise", "object", "p", "q" ];
__n0["variableDeclarations"] := __n106;
__n107 := [  ];
__n0["functionDeclarations"] := __n107;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}