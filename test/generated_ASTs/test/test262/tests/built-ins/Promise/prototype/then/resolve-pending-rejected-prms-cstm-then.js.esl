function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "value";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "reject";
__n10["id"] := __n11;
__n10["init"] := null;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "thenable";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "NewExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Promise";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "FunctionExpression";
__n19["id"] := null;
__n20 := [ "resolve" ];
__n19["params"] := __n20;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "resolve";
__n24["callee"] := __n25;
__n26 := [  ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n27 := [  ];
__n21["variableDeclarations"] := __n27;
__n28 := [  ];
__n21["functionDeclarations"] := __n28;
__n21["codeType"] := "function";
__n21["strict"] := false;
__n19["body"] := __n21;
__n19["generator"] := false;
__n19["async"] := false;
__n19["expression"] := false;
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "p1";
__n31["id"] := __n32;
__n33 := {  };
__n33["type"] := "NewExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Promise";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "FunctionExpression";
__n36["id"] := null;
__n37 := [ "_", "_reject" ];
__n36["params"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "AssignmentExpression";
__n41["operator"] := "=";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "reject";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "_reject";
__n41["right"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n44 := [  ];
__n38["variableDeclarations"] := __n44;
__n45 := [  ];
__n38["functionDeclarations"] := __n45;
__n38["codeType"] := "function";
__n38["strict"] := false;
__n36["body"] := __n38;
__n36["generator"] := false;
__n36["async"] := false;
__n36["expression"] := false;
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n31["init"] := __n33;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n46 := {  };
__n46["type"] := "VariableDeclaration";
__n48 := {  };
__n48["type"] := "VariableDeclarator";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "p2";
__n48["id"] := __n49;
__n48["init"] := null;
__n47 := [ __n48 ];
__n46["declarations"] := __n47;
__n46["kind"] := "var";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "AssignmentExpression";
__n51["operator"] := "=";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "thenable";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "then";
__n54["raw"] := "\"then\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["left"] := __n52;
__n55 := {  };
__n55["type"] := "FunctionExpression";
__n55["id"] := null;
__n56 := [ "resolve" ];
__n55["params"] := __n56;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "resolve";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "value";
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n64 := [  ];
__n57["variableDeclarations"] := __n64;
__n65 := [  ];
__n57["functionDeclarations"] := __n65;
__n57["codeType"] := "function";
__n57["strict"] := false;
__n55["body"] := __n57;
__n55["generator"] := false;
__n55["async"] := false;
__n55["expression"] := false;
__n51["right"] := __n55;
__n50["expression"] := __n51;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "AssignmentExpression";
__n67["operator"] := "=";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "p2";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "p1";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "then";
__n72["raw"] := "\"then\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n69["callee"] := __n70;
__n74 := {  };
__n74["type"] := "FunctionExpression";
__n74["id"] := null;
__n75 := [  ];
__n74["params"] := __n75;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n77 := [  ];
__n76["body"] := __n77;
__n78 := [  ];
__n76["variableDeclarations"] := __n78;
__n79 := [  ];
__n76["functionDeclarations"] := __n79;
__n76["codeType"] := "function";
__n76["strict"] := false;
__n74["body"] := __n76;
__n74["generator"] := false;
__n74["async"] := false;
__n74["expression"] := false;
__n80 := {  };
__n80["type"] := "FunctionExpression";
__n80["id"] := null;
__n81 := [  ];
__n80["params"] := __n81;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ReturnStatement";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "thenable";
__n84["argument"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n86 := [  ];
__n82["variableDeclarations"] := __n86;
__n87 := [  ];
__n82["functionDeclarations"] := __n87;
__n82["codeType"] := "function";
__n82["strict"] := false;
__n80["body"] := __n82;
__n80["generator"] := false;
__n80["async"] := false;
__n80["expression"] := false;
__n73 := [ __n74, __n80 ];
__n69["arguments"] := __n73;
__n67["right"] := __n69;
__n66["expression"] := __n67;
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "p2";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "then";
__n92["raw"] := "\"then\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n89["callee"] := __n90;
__n94 := {  };
__n94["type"] := "FunctionExpression";
__n94["id"] := null;
__n95 := [ "x" ];
__n94["params"] := __n95;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "IfStatement";
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "!==";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "x";
__n99["left"] := __n100;
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "value";
__n99["right"] := __n101;
__n98["test"] := __n99;
__n102 := {  };
__n102["type"] := "BlockStatement";
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "$DONE";
__n105["callee"] := __n106;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "The promise should be fulfilled with the resolution value of the provided promise.";
__n108["raw"] := "'The promise should be fulfilled with the resolution value of the provided promise.'";
__n107 := [ __n108 ];
__n105["arguments"] := __n107;
__n104["expression"] := __n105;
__n109 := {  };
__n109["type"] := "ReturnStatement";
__n109["argument"] := null;
__n103 := [ __n104, __n109 ];
__n102["body"] := __n103;
__n98["consequent"] := __n102;
__n98["alternate"] := null;
__n110 := {  };
__n110["type"] := "ExpressionStatement";
__n111 := {  };
__n111["type"] := "CallExpression";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "$DONE";
__n111["callee"] := __n112;
__n113 := [  ];
__n111["arguments"] := __n113;
__n110["expression"] := __n111;
__n97 := [ __n98, __n110 ];
__n96["body"] := __n97;
__n114 := [  ];
__n96["variableDeclarations"] := __n114;
__n115 := [  ];
__n96["functionDeclarations"] := __n115;
__n96["codeType"] := "function";
__n96["strict"] := false;
__n94["body"] := __n96;
__n94["generator"] := false;
__n94["async"] := false;
__n94["expression"] := false;
__n116 := {  };
__n116["type"] := "FunctionExpression";
__n116["id"] := null;
__n117 := [  ];
__n116["params"] := __n117;
__n118 := {  };
__n118["type"] := "BlockStatement";
__n120 := {  };
__n120["type"] := "ExpressionStatement";
__n121 := {  };
__n121["type"] := "CallExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "$DONE";
__n121["callee"] := __n122;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "The promise should not be rejected.";
__n124["raw"] := "'The promise should not be rejected.'";
__n123 := [ __n124 ];
__n121["arguments"] := __n123;
__n120["expression"] := __n121;
__n119 := [ __n120 ];
__n118["body"] := __n119;
__n125 := [  ];
__n118["variableDeclarations"] := __n125;
__n126 := [  ];
__n118["functionDeclarations"] := __n126;
__n118["codeType"] := "function";
__n118["strict"] := false;
__n116["body"] := __n118;
__n116["generator"] := false;
__n116["async"] := false;
__n116["expression"] := false;
__n93 := [ __n94, __n116 ];
__n89["arguments"] := __n93;
__n88["expression"] := __n89;
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "reject";
__n128["callee"] := __n129;
__n130 := [  ];
__n128["arguments"] := __n130;
__n127["expression"] := __n128;
__n1 := [ __n2, __n8, __n12, __n29, __n46, __n50, __n66, __n88, __n127 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n131 := [ "value", "reject", "thenable", "p1", "p2" ];
__n0["variableDeclarations"] := __n131;
__n132 := [  ];
__n0["functionDeclarations"] := __n132;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}