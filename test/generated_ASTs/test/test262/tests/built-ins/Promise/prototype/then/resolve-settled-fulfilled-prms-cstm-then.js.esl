function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "value";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "thenable";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "NewExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Promise";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [ "resolve" ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "resolve";
__n20["callee"] := __n21;
__n22 := [  ];
__n20["arguments"] := __n22;
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n23 := [  ];
__n17["variableDeclarations"] := __n23;
__n24 := [  ];
__n17["functionDeclarations"] := __n24;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["async"] := false;
__n15["expression"] := false;
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n25 := {  };
__n25["type"] := "VariableDeclaration";
__n27 := {  };
__n27["type"] := "VariableDeclarator";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "p1";
__n27["id"] := __n28;
__n29 := {  };
__n29["type"] := "NewExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Promise";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "FunctionExpression";
__n32["id"] := null;
__n33 := [ "resolve" ];
__n32["params"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "resolve";
__n37["callee"] := __n38;
__n39 := [  ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n40 := [  ];
__n34["variableDeclarations"] := __n40;
__n41 := [  ];
__n34["functionDeclarations"] := __n41;
__n34["codeType"] := "function";
__n34["strict"] := false;
__n32["body"] := __n34;
__n32["generator"] := false;
__n32["async"] := false;
__n32["expression"] := false;
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n27["init"] := __n29;
__n26 := [ __n27 ];
__n25["declarations"] := __n26;
__n25["kind"] := "var";
__n42 := {  };
__n42["type"] := "VariableDeclaration";
__n44 := {  };
__n44["type"] := "VariableDeclarator";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "p2";
__n44["id"] := __n45;
__n44["init"] := null;
__n43 := [ __n44 ];
__n42["declarations"] := __n43;
__n42["kind"] := "var";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "AssignmentExpression";
__n47["operator"] := "=";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "thenable";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "then";
__n50["raw"] := "\"then\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["left"] := __n48;
__n51 := {  };
__n51["type"] := "FunctionExpression";
__n51["id"] := null;
__n52 := [ "resolve" ];
__n51["params"] := __n52;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "resolve";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "value";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n60 := [  ];
__n53["variableDeclarations"] := __n60;
__n61 := [  ];
__n53["functionDeclarations"] := __n61;
__n53["codeType"] := "function";
__n53["strict"] := false;
__n51["body"] := __n53;
__n51["generator"] := false;
__n51["async"] := false;
__n51["expression"] := false;
__n47["right"] := __n51;
__n46["expression"] := __n47;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "AssignmentExpression";
__n63["operator"] := "=";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "p2";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "p1";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "then";
__n68["raw"] := "\"then\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "FunctionExpression";
__n70["id"] := null;
__n71 := [  ];
__n70["params"] := __n71;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ReturnStatement";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "thenable";
__n74["argument"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n76 := [  ];
__n72["variableDeclarations"] := __n76;
__n77 := [  ];
__n72["functionDeclarations"] := __n77;
__n72["codeType"] := "function";
__n72["strict"] := false;
__n70["body"] := __n72;
__n70["generator"] := false;
__n70["async"] := false;
__n70["expression"] := false;
__n69 := [ __n70 ];
__n65["arguments"] := __n69;
__n63["right"] := __n65;
__n62["expression"] := __n63;
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "p2";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "then";
__n82["raw"] := "\"then\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n79["callee"] := __n80;
__n84 := {  };
__n84["type"] := "FunctionExpression";
__n84["id"] := null;
__n85 := [ "x" ];
__n84["params"] := __n85;
__n86 := {  };
__n86["type"] := "BlockStatement";
__n88 := {  };
__n88["type"] := "IfStatement";
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "!==";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "x";
__n89["left"] := __n90;
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "value";
__n89["right"] := __n91;
__n88["test"] := __n89;
__n92 := {  };
__n92["type"] := "BlockStatement";
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "$DONE";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "The promise should be fulfilled with the resolution value of the provided promise.";
__n98["raw"] := "'The promise should be fulfilled with the resolution value of the provided promise.'";
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n94["expression"] := __n95;
__n99 := {  };
__n99["type"] := "ReturnStatement";
__n99["argument"] := null;
__n93 := [ __n94, __n99 ];
__n92["body"] := __n93;
__n88["consequent"] := __n92;
__n88["alternate"] := null;
__n100 := {  };
__n100["type"] := "ExpressionStatement";
__n101 := {  };
__n101["type"] := "CallExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "$DONE";
__n101["callee"] := __n102;
__n103 := [  ];
__n101["arguments"] := __n103;
__n100["expression"] := __n101;
__n87 := [ __n88, __n100 ];
__n86["body"] := __n87;
__n104 := [  ];
__n86["variableDeclarations"] := __n104;
__n105 := [  ];
__n86["functionDeclarations"] := __n105;
__n86["codeType"] := "function";
__n86["strict"] := false;
__n84["body"] := __n86;
__n84["generator"] := false;
__n84["async"] := false;
__n84["expression"] := false;
__n106 := {  };
__n106["type"] := "FunctionExpression";
__n106["id"] := null;
__n107 := [  ];
__n106["params"] := __n107;
__n108 := {  };
__n108["type"] := "BlockStatement";
__n110 := {  };
__n110["type"] := "ExpressionStatement";
__n111 := {  };
__n111["type"] := "CallExpression";
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "$DONE";
__n111["callee"] := __n112;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "The promise should not be rejected.";
__n114["raw"] := "'The promise should not be rejected.'";
__n113 := [ __n114 ];
__n111["arguments"] := __n113;
__n110["expression"] := __n111;
__n109 := [ __n110 ];
__n108["body"] := __n109;
__n115 := [  ];
__n108["variableDeclarations"] := __n115;
__n116 := [  ];
__n108["functionDeclarations"] := __n116;
__n108["codeType"] := "function";
__n108["strict"] := false;
__n106["body"] := __n108;
__n106["generator"] := false;
__n106["async"] := false;
__n106["expression"] := false;
__n83 := [ __n84, __n106 ];
__n79["arguments"] := __n83;
__n78["expression"] := __n79;
__n1 := [ __n2, __n8, __n25, __n42, __n46, __n62, __n78 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n117 := [ "value", "thenable", "p1", "p2" ];
__n0["variableDeclarations"] := __n117;
__n118 := [  ];
__n0["functionDeclarations"] := __n118;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}