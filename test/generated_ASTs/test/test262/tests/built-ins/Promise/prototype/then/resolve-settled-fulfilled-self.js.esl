function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "p1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Promise";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "FunctionExpression";
__n9["id"] := null;
__n10 := [ "resolve" ];
__n9["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "resolve";
__n14["callee"] := __n15;
__n16 := [  ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n17 := [  ];
__n11["variableDeclarations"] := __n17;
__n18 := [  ];
__n11["functionDeclarations"] := __n18;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n9["body"] := __n11;
__n9["generator"] := false;
__n9["async"] := false;
__n9["expression"] := false;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "p2";
__n21["id"] := __n22;
__n21["init"] := null;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "AssignmentExpression";
__n24["operator"] := "=";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "p2";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "p1";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "then";
__n29["raw"] := "\"then\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "FunctionExpression";
__n31["id"] := null;
__n32 := [  ];
__n31["params"] := __n32;
__n33 := {  };
__n33["type"] := "BlockStatement";
__n35 := {  };
__n35["type"] := "ReturnStatement";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "p2";
__n35["argument"] := __n36;
__n34 := [ __n35 ];
__n33["body"] := __n34;
__n37 := [  ];
__n33["variableDeclarations"] := __n37;
__n38 := [  ];
__n33["functionDeclarations"] := __n38;
__n33["codeType"] := "function";
__n33["strict"] := false;
__n31["body"] := __n33;
__n31["generator"] := false;
__n31["async"] := false;
__n31["expression"] := false;
__n30 := [ __n31 ];
__n26["arguments"] := __n30;
__n24["right"] := __n26;
__n23["expression"] := __n24;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "p2";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "then";
__n43["raw"] := "\"then\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "FunctionExpression";
__n45["id"] := null;
__n46 := [  ];
__n45["params"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$DONE";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "The promise should not be fulfilled.";
__n53["raw"] := "'The promise should not be fulfilled.'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n54 := [  ];
__n47["variableDeclarations"] := __n54;
__n55 := [  ];
__n47["functionDeclarations"] := __n55;
__n47["codeType"] := "function";
__n47["strict"] := false;
__n45["body"] := __n47;
__n45["generator"] := false;
__n45["async"] := false;
__n45["expression"] := false;
__n56 := {  };
__n56["type"] := "FunctionExpression";
__n56["id"] := null;
__n57 := [ "reason" ];
__n56["params"] := __n57;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "IfStatement";
__n61 := {  };
__n61["type"] := "UnaryExpression";
__n61["operator"] := "!";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "reason";
__n61["argument"] := __n62;
__n61["prefix"] := true;
__n60["test"] := __n61;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$DONE";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "The promise should be rejected with a value.";
__n69["raw"] := "'The promise should be rejected with a value.'";
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n70 := {  };
__n70["type"] := "ReturnStatement";
__n70["argument"] := null;
__n64 := [ __n65, __n70 ];
__n63["body"] := __n64;
__n60["consequent"] := __n63;
__n60["alternate"] := null;
__n71 := {  };
__n71["type"] := "IfStatement";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "!==";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "reason";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "constructor";
__n75["raw"] := "\"constructor\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n72["left"] := __n73;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "TypeError";
__n72["right"] := __n76;
__n71["test"] := __n72;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "$DONE";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "The promise should be rejected with a TypeError instance.";
__n83["raw"] := "'The promise should be rejected with a TypeError instance.'";
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n84 := {  };
__n84["type"] := "ReturnStatement";
__n84["argument"] := null;
__n78 := [ __n79, __n84 ];
__n77["body"] := __n78;
__n71["consequent"] := __n77;
__n71["alternate"] := null;
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "$DONE";
__n86["callee"] := __n87;
__n88 := [  ];
__n86["arguments"] := __n88;
__n85["expression"] := __n86;
__n59 := [ __n60, __n71, __n85 ];
__n58["body"] := __n59;
__n89 := [  ];
__n58["variableDeclarations"] := __n89;
__n90 := [  ];
__n58["functionDeclarations"] := __n90;
__n58["codeType"] := "function";
__n58["strict"] := false;
__n56["body"] := __n58;
__n56["generator"] := false;
__n56["async"] := false;
__n56["expression"] := false;
__n44 := [ __n45, __n56 ];
__n40["arguments"] := __n44;
__n39["expression"] := __n40;
__n1 := [ __n2, __n19, __n23, __n39 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n91 := [ "p1", "p2" ];
__n0["variableDeclarations"] := __n91;
__n92 := [  ];
__n0["functionDeclarations"] := __n92;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}