function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "nonThenable";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "then";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 'null;
__n10["raw"] := "\"'null\"";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "p1";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "NewExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "Promise";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "FunctionExpression";
__n18["id"] := null;
__n19 := [ "_", "reject" ];
__n18["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "reject";
__n23["callee"] := __n24;
__n25 := [  ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n26 := [  ];
__n20["variableDeclarations"] := __n26;
__n27 := [  ];
__n20["functionDeclarations"] := __n27;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n18["body"] := __n20;
__n18["generator"] := false;
__n18["async"] := false;
__n18["expression"] := false;
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n28 := {  };
__n28["type"] := "VariableDeclaration";
__n30 := {  };
__n30["type"] := "VariableDeclarator";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "p2";
__n30["id"] := __n31;
__n30["init"] := null;
__n29 := [ __n30 ];
__n28["declarations"] := __n29;
__n28["kind"] := "var";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "AssignmentExpression";
__n33["operator"] := "=";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "p2";
__n33["left"] := __n34;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "p1";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "then";
__n38["raw"] := "\"then\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "FunctionExpression";
__n40["id"] := null;
__n41 := [  ];
__n40["params"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n43 := [  ];
__n42["body"] := __n43;
__n44 := [  ];
__n42["variableDeclarations"] := __n44;
__n45 := [  ];
__n42["functionDeclarations"] := __n45;
__n42["codeType"] := "function";
__n42["strict"] := false;
__n40["body"] := __n42;
__n40["generator"] := false;
__n40["async"] := false;
__n40["expression"] := false;
__n46 := {  };
__n46["type"] := "FunctionExpression";
__n46["id"] := null;
__n47 := [  ];
__n46["params"] := __n47;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ReturnStatement";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "nonThenable";
__n50["argument"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n52 := [  ];
__n48["variableDeclarations"] := __n52;
__n53 := [  ];
__n48["functionDeclarations"] := __n53;
__n48["codeType"] := "function";
__n48["strict"] := false;
__n46["body"] := __n48;
__n46["generator"] := false;
__n46["async"] := false;
__n46["expression"] := false;
__n39 := [ __n40, __n46 ];
__n35["arguments"] := __n39;
__n33["right"] := __n35;
__n32["expression"] := __n33;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "p2";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "then";
__n58["raw"] := "\"then\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["callee"] := __n56;
__n60 := {  };
__n60["type"] := "FunctionExpression";
__n60["id"] := null;
__n61 := [ "value" ];
__n60["params"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "IfStatement";
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "!==";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "value";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "nonThenable";
__n65["right"] := __n67;
__n64["test"] := __n65;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "CallExpression";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "$DONE";
__n71["callee"] := __n72;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "The promise should be fulfilled with the provided value.";
__n74["raw"] := "'The promise should be fulfilled with the provided value.'";
__n73 := [ __n74 ];
__n71["arguments"] := __n73;
__n70["expression"] := __n71;
__n75 := {  };
__n75["type"] := "ReturnStatement";
__n75["argument"] := null;
__n69 := [ __n70, __n75 ];
__n68["body"] := __n69;
__n64["consequent"] := __n68;
__n64["alternate"] := null;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "$DONE";
__n77["callee"] := __n78;
__n79 := [  ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n63 := [ __n64, __n76 ];
__n62["body"] := __n63;
__n80 := [  ];
__n62["variableDeclarations"] := __n80;
__n81 := [  ];
__n62["functionDeclarations"] := __n81;
__n62["codeType"] := "function";
__n62["strict"] := false;
__n60["body"] := __n62;
__n60["generator"] := false;
__n60["async"] := false;
__n60["expression"] := false;
__n82 := {  };
__n82["type"] := "FunctionExpression";
__n82["id"] := null;
__n83 := [  ];
__n82["params"] := __n83;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "CallExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "$DONE";
__n87["callee"] := __n88;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "The promise should not be rejected.";
__n90["raw"] := "'The promise should not be rejected.'";
__n89 := [ __n90 ];
__n87["arguments"] := __n89;
__n86["expression"] := __n87;
__n85 := [ __n86 ];
__n84["body"] := __n85;
__n91 := [  ];
__n84["variableDeclarations"] := __n91;
__n92 := [  ];
__n84["functionDeclarations"] := __n92;
__n84["codeType"] := "function";
__n84["strict"] := false;
__n82["body"] := __n84;
__n82["generator"] := false;
__n82["async"] := false;
__n82["expression"] := false;
__n59 := [ __n60, __n82 ];
__n55["arguments"] := __n59;
__n54["expression"] := __n55;
__n1 := [ __n2, __n11, __n28, __n32, __n54 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n93 := [ "nonThenable", "p1", "p2" ];
__n0["variableDeclarations"] := __n93;
__n94 := [  ];
__n0["functionDeclarations"] := __n94;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}