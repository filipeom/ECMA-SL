function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "promise";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Promise";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "FunctionExpression";
__n9["id"] := null;
__n10 := [ "resolve" ];
__n9["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "resolve";
__n14["callee"] := __n15;
__n16 := [  ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n17 := [  ];
__n11["variableDeclarations"] := __n17;
__n18 := [  ];
__n11["functionDeclarations"] := __n18;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n9["body"] := __n11;
__n9["generator"] := false;
__n9["async"] := false;
__n9["expression"] := false;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "fulfilledCallCount";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 0.;
__n23["raw"] := "0";
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n24 := {  };
__n24["type"] := "VariableDeclaration";
__n26 := {  };
__n26["type"] := "VariableDeclarator";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "rejectedCallCount";
__n26["id"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 0.;
__n28["raw"] := "0";
__n26["init"] := __n28;
__n25 := [ __n26 ];
__n24["declarations"] := __n25;
__n24["kind"] := "var";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "promise";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "then";
__n33["raw"] := "\"then\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "FunctionExpression";
__n35["id"] := null;
__n36 := [  ];
__n35["params"] := __n36;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "AssignmentExpression";
__n40["operator"] := "+=";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "fulfilledCallCount";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 1.;
__n42["raw"] := "1";
__n40["right"] := __n42;
__n39["expression"] := __n40;
__n43 := {  };
__n43["type"] := "ThrowStatement";
__n44 := {  };
__n44["type"] := "NewExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Error";
__n44["callee"] := __n45;
__n46 := [  ];
__n44["arguments"] := __n46;
__n43["argument"] := __n44;
__n38 := [ __n39, __n43 ];
__n37["body"] := __n38;
__n47 := [  ];
__n37["variableDeclarations"] := __n47;
__n48 := [  ];
__n37["functionDeclarations"] := __n48;
__n37["codeType"] := "function";
__n37["strict"] := false;
__n35["body"] := __n37;
__n35["generator"] := false;
__n35["async"] := false;
__n35["expression"] := false;
__n49 := {  };
__n49["type"] := "FunctionExpression";
__n49["id"] := null;
__n50 := [  ];
__n49["params"] := __n50;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "AssignmentExpression";
__n54["operator"] := "+=";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "rejectedCallCount";
__n54["left"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 1.;
__n56["raw"] := "1";
__n54["right"] := __n56;
__n53["expression"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n57 := [  ];
__n51["variableDeclarations"] := __n57;
__n58 := [  ];
__n51["functionDeclarations"] := __n58;
__n51["codeType"] := "function";
__n51["strict"] := false;
__n49["body"] := __n51;
__n49["generator"] := false;
__n49["async"] := false;
__n49["expression"] := false;
__n34 := [ __n35, __n49 ];
__n30["arguments"] := __n34;
__n29["expression"] := __n30;
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "promise";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "then";
__n63["raw"] := "\"then\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n65 := {  };
__n65["type"] := "FunctionExpression";
__n65["id"] := null;
__n66 := [  ];
__n65["params"] := __n66;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "IfStatement";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "!==";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "fulfilledCallCount";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.;
__n72["raw"] := "1";
__n70["right"] := __n72;
__n69["test"] := __n70;
__n73 := {  };
__n73["type"] := "BlockStatement";
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "$DONE";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "Expected \"onFulfilled\" handler to be invoked exactly once.";
__n79["raw"] := "'Expected \"onFulfilled\" handler to be invoked exactly once.'";
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["expression"] := __n76;
__n80 := {  };
__n80["type"] := "ReturnStatement";
__n80["argument"] := null;
__n74 := [ __n75, __n80 ];
__n73["body"] := __n74;
__n69["consequent"] := __n73;
__n69["alternate"] := null;
__n81 := {  };
__n81["type"] := "IfStatement";
__n82 := {  };
__n82["type"] := "BinaryExpression";
__n82["operator"] := "!==";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "rejectedCallCount";
__n82["left"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := 0.;
__n84["raw"] := "0";
__n82["right"] := __n84;
__n81["test"] := __n82;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "$DONE";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "Expected \"onRejected\" handler to not be invoked.";
__n91["raw"] := "'Expected \"onRejected\" handler to not be invoked.'";
__n90 := [ __n91 ];
__n88["arguments"] := __n90;
__n87["expression"] := __n88;
__n92 := {  };
__n92["type"] := "ReturnStatement";
__n92["argument"] := null;
__n86 := [ __n87, __n92 ];
__n85["body"] := __n86;
__n81["consequent"] := __n85;
__n81["alternate"] := null;
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$DONE";
__n94["callee"] := __n95;
__n96 := [  ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n68 := [ __n69, __n81, __n93 ];
__n67["body"] := __n68;
__n97 := [  ];
__n67["variableDeclarations"] := __n97;
__n98 := [  ];
__n67["functionDeclarations"] := __n98;
__n67["codeType"] := "function";
__n67["strict"] := false;
__n65["body"] := __n67;
__n65["generator"] := false;
__n65["async"] := false;
__n65["expression"] := false;
__n99 := {  };
__n99["type"] := "FunctionExpression";
__n99["id"] := null;
__n100 := [  ];
__n99["params"] := __n100;
__n101 := {  };
__n101["type"] := "BlockStatement";
__n103 := {  };
__n103["type"] := "ExpressionStatement";
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "$DONE";
__n104["callee"] := __n105;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "This promise should not be rejected.";
__n107["raw"] := "'This promise should not be rejected.'";
__n106 := [ __n107 ];
__n104["arguments"] := __n106;
__n103["expression"] := __n104;
__n102 := [ __n103 ];
__n101["body"] := __n102;
__n108 := [  ];
__n101["variableDeclarations"] := __n108;
__n109 := [  ];
__n101["functionDeclarations"] := __n109;
__n101["codeType"] := "function";
__n101["strict"] := false;
__n99["body"] := __n101;
__n99["generator"] := false;
__n99["async"] := false;
__n99["expression"] := false;
__n64 := [ __n65, __n99 ];
__n60["arguments"] := __n64;
__n59["expression"] := __n60;
__n1 := [ __n2, __n19, __n24, __n29, __n59 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n110 := [ "promise", "fulfilledCallCount", "rejectedCallCount" ];
__n0["variableDeclarations"] := __n110;
__n111 := [  ];
__n0["functionDeclarations"] := __n111;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}