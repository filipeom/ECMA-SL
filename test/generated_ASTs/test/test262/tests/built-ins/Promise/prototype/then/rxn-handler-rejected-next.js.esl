function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "promise";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Promise";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "FunctionExpression";
__n9["id"] := null;
__n10 := [ "_", "reject" ];
__n9["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "reject";
__n14["callee"] := __n15;
__n16 := [  ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n17 := [  ];
__n11["variableDeclarations"] := __n17;
__n18 := [  ];
__n11["functionDeclarations"] := __n18;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n9["body"] := __n11;
__n9["generator"] := false;
__n9["async"] := false;
__n9["expression"] := false;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "log";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "";
__n23["raw"] := "''";
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "promise";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "then";
__n28["raw"] := "\"then\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n25["callee"] := __n26;
__n30 := {  };
__n30["type"] := "FunctionExpression";
__n30["id"] := null;
__n31 := [  ];
__n30["params"] := __n31;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "AssignmentExpression";
__n35["operator"] := "+=";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "log";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "A";
__n37["raw"] := "'A'";
__n35["right"] := __n37;
__n34["expression"] := __n35;
__n33 := [ __n34 ];
__n32["body"] := __n33;
__n38 := [  ];
__n32["variableDeclarations"] := __n38;
__n39 := [  ];
__n32["functionDeclarations"] := __n39;
__n32["codeType"] := "function";
__n32["strict"] := false;
__n30["body"] := __n32;
__n30["generator"] := false;
__n30["async"] := false;
__n30["expression"] := false;
__n40 := {  };
__n40["type"] := "FunctionExpression";
__n40["id"] := null;
__n41 := [  ];
__n40["params"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "AssignmentExpression";
__n45["operator"] := "+=";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "log";
__n45["left"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "a";
__n47["raw"] := "'a'";
__n45["right"] := __n47;
__n44["expression"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n48 := [  ];
__n42["variableDeclarations"] := __n48;
__n49 := [  ];
__n42["functionDeclarations"] := __n49;
__n42["codeType"] := "function";
__n42["strict"] := false;
__n40["body"] := __n42;
__n40["generator"] := false;
__n40["async"] := false;
__n40["expression"] := false;
__n29 := [ __n30, __n40 ];
__n25["arguments"] := __n29;
__n24["expression"] := __n25;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "promise";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "then";
__n54["raw"] := "\"then\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n56 := {  };
__n56["type"] := "FunctionExpression";
__n56["id"] := null;
__n57 := [  ];
__n56["params"] := __n57;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "AssignmentExpression";
__n61["operator"] := "+=";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "log";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "B";
__n63["raw"] := "'B'";
__n61["right"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n64 := [  ];
__n58["variableDeclarations"] := __n64;
__n65 := [  ];
__n58["functionDeclarations"] := __n65;
__n58["codeType"] := "function";
__n58["strict"] := false;
__n56["body"] := __n58;
__n56["generator"] := false;
__n56["async"] := false;
__n56["expression"] := false;
__n66 := {  };
__n66["type"] := "FunctionExpression";
__n66["id"] := null;
__n67 := [  ];
__n66["params"] := __n67;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "AssignmentExpression";
__n71["operator"] := "+=";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "log";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "b";
__n73["raw"] := "'b'";
__n71["right"] := __n73;
__n70["expression"] := __n71;
__n69 := [ __n70 ];
__n68["body"] := __n69;
__n74 := [  ];
__n68["variableDeclarations"] := __n74;
__n75 := [  ];
__n68["functionDeclarations"] := __n75;
__n68["codeType"] := "function";
__n68["strict"] := false;
__n66["body"] := __n68;
__n66["generator"] := false;
__n66["async"] := false;
__n66["expression"] := false;
__n55 := [ __n56, __n66 ];
__n51["arguments"] := __n55;
__n50["expression"] := __n51;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "MemberExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "promise";
__n78["object"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "then";
__n80["raw"] := "\"then\"";
__n78["property"] := __n80;
__n78["computed"] := true;
__n77["callee"] := __n78;
__n82 := {  };
__n82["type"] := "FunctionExpression";
__n82["id"] := null;
__n83 := [  ];
__n82["params"] := __n83;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "ExpressionStatement";
__n87 := {  };
__n87["type"] := "AssignmentExpression";
__n87["operator"] := "+=";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "log";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "C";
__n89["raw"] := "'C'";
__n87["right"] := __n89;
__n86["expression"] := __n87;
__n85 := [ __n86 ];
__n84["body"] := __n85;
__n90 := [  ];
__n84["variableDeclarations"] := __n90;
__n91 := [  ];
__n84["functionDeclarations"] := __n91;
__n84["codeType"] := "function";
__n84["strict"] := false;
__n82["body"] := __n84;
__n82["generator"] := false;
__n82["async"] := false;
__n82["expression"] := false;
__n92 := {  };
__n92["type"] := "FunctionExpression";
__n92["id"] := null;
__n93 := [  ];
__n92["params"] := __n93;
__n94 := {  };
__n94["type"] := "BlockStatement";
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "AssignmentExpression";
__n97["operator"] := "+=";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "log";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "c";
__n99["raw"] := "'c'";
__n97["right"] := __n99;
__n96["expression"] := __n97;
__n95 := [ __n96 ];
__n94["body"] := __n95;
__n100 := [  ];
__n94["variableDeclarations"] := __n100;
__n101 := [  ];
__n94["functionDeclarations"] := __n101;
__n94["codeType"] := "function";
__n94["strict"] := false;
__n92["body"] := __n94;
__n92["generator"] := false;
__n92["async"] := false;
__n92["expression"] := false;
__n81 := [ __n82, __n92 ];
__n77["arguments"] := __n81;
__n76["expression"] := __n77;
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "promise";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "then";
__n106["raw"] := "\"then\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n103["callee"] := __n104;
__n108 := {  };
__n108["type"] := "FunctionExpression";
__n108["id"] := null;
__n109 := [  ];
__n108["params"] := __n109;
__n110 := {  };
__n110["type"] := "BlockStatement";
__n112 := {  };
__n112["type"] := "ExpressionStatement";
__n113 := {  };
__n113["type"] := "CallExpression";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "$DONE";
__n113["callee"] := __n114;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "This promise should not be fulfilled.";
__n116["raw"] := "'This promise should not be fulfilled.'";
__n115 := [ __n116 ];
__n113["arguments"] := __n115;
__n112["expression"] := __n113;
__n111 := [ __n112 ];
__n110["body"] := __n111;
__n117 := [  ];
__n110["variableDeclarations"] := __n117;
__n118 := [  ];
__n110["functionDeclarations"] := __n118;
__n110["codeType"] := "function";
__n110["strict"] := false;
__n108["body"] := __n110;
__n108["generator"] := false;
__n108["async"] := false;
__n108["expression"] := false;
__n119 := {  };
__n119["type"] := "FunctionExpression";
__n119["id"] := null;
__n120 := [  ];
__n119["params"] := __n120;
__n121 := {  };
__n121["type"] := "BlockStatement";
__n123 := {  };
__n123["type"] := "IfStatement";
__n124 := {  };
__n124["type"] := "BinaryExpression";
__n124["operator"] := "!==";
__n125 := {  };
__n125["type"] := "Identifier";
__n125["name"] := "log";
__n124["left"] := __n125;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := "abc";
__n126["raw"] := "'abc'";
__n124["right"] := __n126;
__n123["test"] := __n124;
__n127 := {  };
__n127["type"] := "BlockStatement";
__n129 := {  };
__n129["type"] := "ExpressionStatement";
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "$DONE";
__n130["callee"] := __n131;
__n133 := {  };
__n133["type"] := "BinaryExpression";
__n133["operator"] := "+";
__n134 := {  };
__n134["type"] := "BinaryExpression";
__n134["operator"] := "+";
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := "Expected each \"onFulfilled\" handler to be invoked exactly once in series. ";
__n135["raw"] := "'Expected each \"onFulfilled\" handler to be invoked exactly once in series. '";
__n134["left"] := __n135;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := "Expected: abc. Actual: ";
__n136["raw"] := "'Expected: abc. Actual: '";
__n134["right"] := __n136;
__n133["left"] := __n134;
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "log";
__n133["right"] := __n137;
__n132 := [ __n133 ];
__n130["arguments"] := __n132;
__n129["expression"] := __n130;
__n138 := {  };
__n138["type"] := "ReturnStatement";
__n138["argument"] := null;
__n128 := [ __n129, __n138 ];
__n127["body"] := __n128;
__n123["consequent"] := __n127;
__n123["alternate"] := null;
__n139 := {  };
__n139["type"] := "ExpressionStatement";
__n140 := {  };
__n140["type"] := "CallExpression";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "$DONE";
__n140["callee"] := __n141;
__n142 := [  ];
__n140["arguments"] := __n142;
__n139["expression"] := __n140;
__n122 := [ __n123, __n139 ];
__n121["body"] := __n122;
__n143 := [  ];
__n121["variableDeclarations"] := __n143;
__n144 := [  ];
__n121["functionDeclarations"] := __n144;
__n121["codeType"] := "function";
__n121["strict"] := false;
__n119["body"] := __n121;
__n119["generator"] := false;
__n119["async"] := false;
__n119["expression"] := false;
__n107 := [ __n108, __n119 ];
__n103["arguments"] := __n107;
__n102["expression"] := __n103;
__n1 := [ __n2, __n19, __n24, __n50, __n76, __n102 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n145 := [ "promise", "log" ];
__n0["variableDeclarations"] := __n145;
__n146 := [  ];
__n0["functionDeclarations"] := __n146;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}