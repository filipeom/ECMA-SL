function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "thenable";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Promise";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "resolve";
__n9["raw"] := "\"resolve\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n10 := [  ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "returnValue";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 'null;
__n15["raw"] := "\"'null\"";
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n16 := {  };
__n16["type"] := "VariableDeclaration";
__n18 := {  };
__n18["type"] := "VariableDeclarator";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "reject";
__n18["id"] := __n19;
__n18["init"] := null;
__n17 := [ __n18 ];
__n16["declarations"] := __n17;
__n16["kind"] := "var";
__n20 := {  };
__n20["type"] := "VariableDeclaration";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "p";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "NewExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Promise";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "FunctionExpression";
__n27["id"] := null;
__n28 := [ "_", "_reject" ];
__n27["params"] := __n28;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "AssignmentExpression";
__n32["operator"] := "=";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "reject";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "_reject";
__n32["right"] := __n34;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n35 := [  ];
__n29["variableDeclarations"] := __n35;
__n36 := [  ];
__n29["functionDeclarations"] := __n36;
__n29["codeType"] := "function";
__n29["strict"] := false;
__n27["body"] := __n29;
__n27["generator"] := false;
__n27["async"] := false;
__n27["expression"] := false;
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n22["init"] := __n24;
__n21 := [ __n22 ];
__n20["declarations"] := __n21;
__n20["kind"] := "var";
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "p";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "then";
__n43["raw"] := "\"then\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "FunctionExpression";
__n45["id"] := null;
__n46 := [  ];
__n45["params"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "$DONE";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "The promise should not be fulfilled.";
__n53["raw"] := "'The promise should not be fulfilled.'";
__n52 := [ __n53 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n54 := [  ];
__n47["variableDeclarations"] := __n54;
__n55 := [  ];
__n47["functionDeclarations"] := __n55;
__n47["codeType"] := "function";
__n47["strict"] := false;
__n45["body"] := __n47;
__n45["generator"] := false;
__n45["async"] := false;
__n45["expression"] := false;
__n44 := [ __n45 ];
__n40["arguments"] := __n44;
__n39["object"] := __n40;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "then";
__n56["raw"] := "\"then\"";
__n39["property"] := __n56;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n58 := {  };
__n58["type"] := "FunctionExpression";
__n58["id"] := null;
__n59 := [  ];
__n58["params"] := __n59;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "$DONE";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "The promise should not be fulfilled.";
__n66["raw"] := "'The promise should not be fulfilled.'";
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n67 := [  ];
__n60["variableDeclarations"] := __n67;
__n68 := [  ];
__n60["functionDeclarations"] := __n68;
__n60["codeType"] := "function";
__n60["strict"] := false;
__n58["body"] := __n60;
__n58["generator"] := false;
__n58["async"] := false;
__n58["expression"] := false;
__n69 := {  };
__n69["type"] := "FunctionExpression";
__n69["id"] := null;
__n70 := [ "x" ];
__n69["params"] := __n70;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "IfStatement";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "!==";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "x";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "thenable";
__n74["right"] := __n76;
__n73["test"] := __n74;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "$DONE";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "The promise should be rejected with the resolution value.";
__n83["raw"] := "'The promise should be rejected with the resolution value.'";
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n84 := {  };
__n84["type"] := "ReturnStatement";
__n84["argument"] := null;
__n78 := [ __n79, __n84 ];
__n77["body"] := __n78;
__n73["consequent"] := __n77;
__n73["alternate"] := null;
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "$DONE";
__n86["callee"] := __n87;
__n88 := [  ];
__n86["arguments"] := __n88;
__n85["expression"] := __n86;
__n72 := [ __n73, __n85 ];
__n71["body"] := __n72;
__n89 := [  ];
__n71["variableDeclarations"] := __n89;
__n90 := [  ];
__n71["functionDeclarations"] := __n90;
__n71["codeType"] := "function";
__n71["strict"] := false;
__n69["body"] := __n71;
__n69["generator"] := false;
__n69["async"] := false;
__n69["expression"] := false;
__n57 := [ __n58, __n69 ];
__n38["arguments"] := __n57;
__n37["expression"] := __n38;
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "AssignmentExpression";
__n92["operator"] := "=";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "returnValue";
__n92["left"] := __n93;
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "reject";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "thenable";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n92["right"] := __n94;
__n91["expression"] := __n92;
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "assert";
__n100["object"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "sameValue";
__n102["raw"] := "\"sameValue\"";
__n100["property"] := __n102;
__n100["computed"] := true;
__n99["callee"] := __n100;
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "returnValue";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "undefined";
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "\"reject\" function return value";
__n106["raw"] := "'\"reject\" function return value'";
__n103 := [ __n104, __n105, __n106 ];
__n99["arguments"] := __n103;
__n98["expression"] := __n99;
__n1 := [ __n2, __n11, __n16, __n20, __n37, __n91, __n98 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n107 := [ "thenable", "returnValue", "reject", "p" ];
__n0["variableDeclarations"] := __n107;
__n108 := [  ];
__n0["functionDeclarations"] := __n108;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}