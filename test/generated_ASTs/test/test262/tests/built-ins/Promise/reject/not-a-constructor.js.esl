function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "isConstructor";
__n8["callee"] := __n9;
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Promise";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "reject";
__n13["raw"] := "\"reject\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10 := [ __n11 ];
__n8["arguments"] := __n10;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := false;
__n14["raw"] := "false";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "isConstructor(Promise.reject) must return false";
__n15["raw"] := "'isConstructor(Promise.reject) must return false'";
__n7 := [ __n8, __n14, __n15 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "assert";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "throws";
__n20["raw"] := "\"throws\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "TypeError";
__n23 := {  };
__n23["type"] := "ArrowFunctionExpression";
__n23["id"] := null;
__n24 := [  ];
__n23["params"] := __n24;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "NewExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Promise";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "reject";
__n31["raw"] := "\"reject\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n32 := [  ];
__n28["arguments"] := __n32;
__n27["expression"] := __n28;
__n26 := [ __n27 ];
__n25["body"] := __n26;
__n23["body"] := __n25;
__n23["generator"] := false;
__n23["expression"] := false;
__n23["async"] := false;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "`new Promise.reject()` throws TypeError";
__n33["raw"] := "'`new Promise.reject()` throws TypeError'";
__n21 := [ __n22, __n23, __n33 ];
__n17["arguments"] := __n21;
__n16["expression"] := __n17;
__n1 := [ __n2, __n16 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n34 := [  ];
__n0["variableDeclarations"] := __n34;
__n35 := [  ];
__n0["functionDeclarations"] := __n35;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}