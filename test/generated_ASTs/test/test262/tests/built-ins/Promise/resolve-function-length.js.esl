function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "resolveFunction";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "NewExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Promise";
__n7["callee"] := __n8;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [ "resolve", "reject" ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "AssignmentExpression";
__n15["operator"] := "=";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "resolveFunction";
__n15["left"] := __n16;
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "resolve";
__n15["right"] := __n17;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n18 := [  ];
__n12["variableDeclarations"] := __n18;
__n19 := [  ];
__n12["functionDeclarations"] := __n19;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n9 := [ __n10 ];
__n7["arguments"] := __n9;
__n6["expression"] := __n7;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "assert";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "sameValue";
__n24["raw"] := "\"sameValue\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "resolveFunction";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "length";
__n28["raw"] := "\"length\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 1.;
__n29["raw"] := "1";
__n25 := [ __n26, __n29 ];
__n21["arguments"] := __n25;
__n20["expression"] := __n21;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "verifyNotEnumerable";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "resolveFunction";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "length";
__n35["raw"] := "\"length\"";
__n33 := [ __n34, __n35 ];
__n31["arguments"] := __n33;
__n30["expression"] := __n31;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "verifyNotWritable";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "resolveFunction";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "length";
__n41["raw"] := "\"length\"";
__n39 := [ __n40, __n41 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "verifyConfigurable";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "resolveFunction";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "length";
__n47["raw"] := "\"length\"";
__n45 := [ __n46, __n47 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n1 := [ __n2, __n6, __n20, __n30, __n36, __n42 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n48 := [ "resolveFunction" ];
__n0["variableDeclarations"] := __n48;
__n49 := [  ];
__n0["functionDeclarations"] := __n49;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}