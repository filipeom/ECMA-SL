function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "returnValue";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 'null;
__n6["raw"] := "\"'null\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "value";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n12 := [  ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n13 := {  };
__n13["type"] := "VariableDeclaration";
__n15 := {  };
__n15["type"] := "VariableDeclarator";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "resolve";
__n15["id"] := __n16;
__n15["init"] := null;
__n14 := [ __n15 ];
__n13["declarations"] := __n14;
__n13["kind"] := "var";
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "poisonedThen";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Object";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "defineProperty";
__n24["raw"] := "\"defineProperty\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "ObjectExpression";
__n27 := [  ];
__n26["properties"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "then";
__n28["raw"] := "'then'";
__n29 := {  };
__n29["type"] := "ObjectExpression";
__n31 := {  };
__n31["type"] := "Property";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "get";
__n31["key"] := __n32;
__n33 := {  };
__n33["type"] := "FunctionExpression";
__n33["id"] := null;
__n34 := [  ];
__n33["params"] := __n34;
__n35 := {  };
__n35["type"] := "BlockStatement";
__n37 := {  };
__n37["type"] := "ThrowStatement";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "value";
__n37["argument"] := __n38;
__n36 := [ __n37 ];
__n35["body"] := __n36;
__n39 := [  ];
__n35["variableDeclarations"] := __n39;
__n40 := [  ];
__n35["functionDeclarations"] := __n40;
__n35["codeType"] := "function";
__n35["strict"] := false;
__n33["body"] := __n35;
__n33["generator"] := false;
__n33["async"] := false;
__n33["expression"] := false;
__n31["value"] := __n33;
__n31["computed"] := false;
__n31["kind"] := "init";
__n31["shorthand"] := false;
__n30 := [ __n31 ];
__n29["properties"] := __n30;
__n25 := [ __n26, __n28, __n29 ];
__n21["arguments"] := __n25;
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n41 := {  };
__n41["type"] := "VariableDeclaration";
__n43 := {  };
__n43["type"] := "VariableDeclarator";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "promise";
__n43["id"] := __n44;
__n45 := {  };
__n45["type"] := "NewExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "Promise";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "FunctionExpression";
__n48["id"] := null;
__n49 := [ "_resolve" ];
__n48["params"] := __n49;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "AssignmentExpression";
__n53["operator"] := "=";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "resolve";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "_resolve";
__n53["right"] := __n55;
__n52["expression"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n56 := [  ];
__n50["variableDeclarations"] := __n56;
__n57 := [  ];
__n50["functionDeclarations"] := __n57;
__n50["codeType"] := "function";
__n50["strict"] := false;
__n48["body"] := __n50;
__n48["generator"] := false;
__n48["async"] := false;
__n48["expression"] := false;
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n43["init"] := __n45;
__n42 := [ __n43 ];
__n41["declarations"] := __n42;
__n41["kind"] := "var";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "promise";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "then";
__n62["raw"] := "\"then\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n64 := {  };
__n64["type"] := "FunctionExpression";
__n64["id"] := null;
__n65 := [  ];
__n64["params"] := __n65;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$DONE";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "The promise should not be fulfilled.";
__n72["raw"] := "'The promise should not be fulfilled.'";
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n73 := [  ];
__n66["variableDeclarations"] := __n73;
__n74 := [  ];
__n66["functionDeclarations"] := __n74;
__n66["codeType"] := "function";
__n66["strict"] := false;
__n64["body"] := __n66;
__n64["generator"] := false;
__n64["async"] := false;
__n64["expression"] := false;
__n75 := {  };
__n75["type"] := "FunctionExpression";
__n75["id"] := null;
__n76 := [ "val" ];
__n75["params"] := __n76;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!==";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "val";
__n80["left"] := __n81;
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "value";
__n80["right"] := __n82;
__n79["test"] := __n80;
__n83 := {  };
__n83["type"] := "BlockStatement";
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "$DONE";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "The promise should be fulfilled with the provided value.";
__n89["raw"] := "'The promise should be fulfilled with the provided value.'";
__n88 := [ __n89 ];
__n86["arguments"] := __n88;
__n85["expression"] := __n86;
__n90 := {  };
__n90["type"] := "ReturnStatement";
__n90["argument"] := null;
__n84 := [ __n85, __n90 ];
__n83["body"] := __n84;
__n79["consequent"] := __n83;
__n79["alternate"] := null;
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "$DONE";
__n92["callee"] := __n93;
__n94 := [  ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n78 := [ __n79, __n91 ];
__n77["body"] := __n78;
__n95 := [  ];
__n77["variableDeclarations"] := __n95;
__n96 := [  ];
__n77["functionDeclarations"] := __n96;
__n77["codeType"] := "function";
__n77["strict"] := false;
__n75["body"] := __n77;
__n75["generator"] := false;
__n75["async"] := false;
__n75["expression"] := false;
__n63 := [ __n64, __n75 ];
__n59["arguments"] := __n63;
__n58["expression"] := __n59;
__n97 := {  };
__n97["type"] := "ExpressionStatement";
__n98 := {  };
__n98["type"] := "AssignmentExpression";
__n98["operator"] := "=";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "returnValue";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "resolve";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "poisonedThen";
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n98["right"] := __n100;
__n97["expression"] := __n98;
__n104 := {  };
__n104["type"] := "ExpressionStatement";
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "MemberExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "assert";
__n106["object"] := __n107;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := "sameValue";
__n108["raw"] := "\"sameValue\"";
__n106["property"] := __n108;
__n106["computed"] := true;
__n105["callee"] := __n106;
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "returnValue";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "undefined";
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "\"resolve\" return value";
__n112["raw"] := "'\"resolve\" return value'";
__n109 := [ __n110, __n111, __n112 ];
__n105["arguments"] := __n109;
__n104["expression"] := __n105;
__n1 := [ __n2, __n7, __n13, __n17, __n41, __n58, __n97, __n104 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n113 := [ "returnValue", "value", "resolve", "poisonedThen", "promise" ];
__n0["variableDeclarations"] := __n113;
__n114 := [  ];
__n0["functionDeclarations"] := __n114;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}