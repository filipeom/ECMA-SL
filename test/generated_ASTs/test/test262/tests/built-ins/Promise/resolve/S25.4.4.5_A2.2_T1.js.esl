function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "resolveP1";
__n4["id"] := __n5;
__n4["init"] := null;
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "p1";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "NewExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Promise";
__n8["callee"] := __n9;
__n11 := {  };
__n11["type"] := "FunctionExpression";
__n11["id"] := null;
__n12 := [ "resolve" ];
__n11["params"] := __n12;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "AssignmentExpression";
__n16["operator"] := "=";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "resolveP1";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "resolve";
__n16["right"] := __n18;
__n15["expression"] := __n16;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n19 := [  ];
__n13["variableDeclarations"] := __n19;
__n20 := [  ];
__n13["functionDeclarations"] := __n20;
__n13["codeType"] := "function";
__n13["strict"] := false;
__n11["body"] := __n13;
__n11["generator"] := false;
__n11["async"] := false;
__n11["expression"] := false;
__n10 := [ __n11 ];
__n8["arguments"] := __n10;
__n6["init"] := __n8;
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "p2";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Promise";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "resolve";
__n26["raw"] := "\"resolve\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "p1";
__n27 := [ __n28 ];
__n23["arguments"] := __n27;
__n21["init"] := __n23;
__n29 := {  };
__n29["type"] := "VariableDeclarator";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "obj";
__n29["id"] := __n30;
__n31 := {  };
__n31["type"] := "ObjectExpression";
__n32 := [  ];
__n31["properties"] := __n32;
__n29["init"] := __n31;
__n3 := [ __n4, __n6, __n21, __n29 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "!==";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "p1";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "p2";
__n34["right"] := __n36;
__n33["test"] := __n34;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ThrowStatement";
__n40 := {  };
__n40["type"] := "NewExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Test262Error";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "Expected p1 === Promise.resolve(p1) because they have same constructor";
__n43["raw"] := "\"Expected p1 === Promise.resolve(p1) because they have same constructor\"";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["argument"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n33["consequent"] := __n37;
__n33["alternate"] := null;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "p2";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "then";
__n50["raw"] := "\"then\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "FunctionExpression";
__n52["id"] := null;
__n53 := [ "arg" ];
__n52["params"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "!==";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "arg";
__n57["left"] := __n58;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "obj";
__n57["right"] := __n59;
__n56["test"] := __n57;
__n60 := {  };
__n60["type"] := "BlockStatement";
__n62 := {  };
__n62["type"] := "ThrowStatement";
__n63 := {  };
__n63["type"] := "NewExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "Test262Error";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "+";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "Expected promise to be resolved with obj, actually ";
__n67["raw"] := "\"Expected promise to be resolved with obj, actually \"";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "arg";
__n66["right"] := __n68;
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["argument"] := __n63;
__n61 := [ __n62 ];
__n60["body"] := __n61;
__n56["consequent"] := __n60;
__n56["alternate"] := null;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n69 := [  ];
__n54["variableDeclarations"] := __n69;
__n70 := [  ];
__n54["functionDeclarations"] := __n70;
__n54["codeType"] := "function";
__n54["strict"] := false;
__n52["body"] := __n54;
__n52["generator"] := false;
__n52["async"] := false;
__n52["expression"] := false;
__n51 := [ __n52 ];
__n47["arguments"] := __n51;
__n46["object"] := __n47;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "then";
__n71["raw"] := "\"then\"";
__n46["property"] := __n71;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "$DONE";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "$DONE";
__n72 := [ __n73, __n74 ];
__n45["arguments"] := __n72;
__n44["expression"] := __n45;
__n75 := {  };
__n75["type"] := "ExpressionStatement";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "resolveP1";
__n76["callee"] := __n77;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "obj";
__n78 := [ __n79 ];
__n76["arguments"] := __n78;
__n75["expression"] := __n76;
__n1 := [ __n2, __n33, __n44, __n75 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n80 := [ "resolveP1", "p1", "p2", "obj" ];
__n0["variableDeclarations"] := __n80;
__n81 := [  ];
__n0["functionDeclarations"] := __n81;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}