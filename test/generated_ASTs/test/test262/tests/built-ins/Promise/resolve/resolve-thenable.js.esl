function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "value";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "thenable";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "ObjectExpression";
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "then";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "FunctionExpression";
__n16["id"] := null;
__n17 := [ "resolve" ];
__n16["params"] := __n17;
__n18 := {  };
__n18["type"] := "BlockStatement";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "resolve";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "value";
__n23 := [ __n24 ];
__n21["arguments"] := __n23;
__n20["expression"] := __n21;
__n19 := [ __n20 ];
__n18["body"] := __n19;
__n25 := [  ];
__n18["variableDeclarations"] := __n25;
__n26 := [  ];
__n18["functionDeclarations"] := __n26;
__n18["codeType"] := "function";
__n18["strict"] := false;
__n16["body"] := __n18;
__n16["generator"] := false;
__n16["async"] := false;
__n16["expression"] := false;
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n13 := [ __n14 ];
__n12["properties"] := __n13;
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "Promise";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "resolve";
__n33["raw"] := "\"resolve\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "thenable";
__n34 := [ __n35 ];
__n30["arguments"] := __n34;
__n29["object"] := __n30;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "then";
__n36["raw"] := "\"then\"";
__n29["property"] := __n36;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n38 := {  };
__n38["type"] := "FunctionExpression";
__n38["id"] := null;
__n39 := [ "val" ];
__n38["params"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "!==";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "val";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "value";
__n43["right"] := __n45;
__n42["test"] := __n43;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "$DONE";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "The promise should be fulfilled with the provided value.";
__n52["raw"] := "'The promise should be fulfilled with the provided value.'";
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["expression"] := __n49;
__n53 := {  };
__n53["type"] := "ReturnStatement";
__n53["argument"] := null;
__n47 := [ __n48, __n53 ];
__n46["body"] := __n47;
__n42["consequent"] := __n46;
__n42["alternate"] := null;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$DONE";
__n55["callee"] := __n56;
__n57 := [  ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n41 := [ __n42, __n54 ];
__n40["body"] := __n41;
__n58 := [  ];
__n40["variableDeclarations"] := __n58;
__n59 := [  ];
__n40["functionDeclarations"] := __n59;
__n40["codeType"] := "function";
__n40["strict"] := false;
__n38["body"] := __n40;
__n38["generator"] := false;
__n38["async"] := false;
__n38["expression"] := false;
__n60 := {  };
__n60["type"] := "FunctionExpression";
__n60["id"] := null;
__n61 := [  ];
__n60["params"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "$DONE";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "The promise should not be rejected.";
__n68["raw"] := "'The promise should not be rejected.'";
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n69 := [  ];
__n62["variableDeclarations"] := __n69;
__n70 := [  ];
__n62["functionDeclarations"] := __n70;
__n62["codeType"] := "function";
__n62["strict"] := false;
__n60["body"] := __n62;
__n60["generator"] := false;
__n60["async"] := false;
__n60["expression"] := false;
__n37 := [ __n38, __n60 ];
__n28["arguments"] := __n37;
__n27["expression"] := __n28;
__n1 := [ __n2, __n8, __n27 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n71 := [ "value", "thenable" ];
__n0["variableDeclarations"] := __n71;
__n72 := [  ];
__n0["functionDeclarations"] := __n72;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}