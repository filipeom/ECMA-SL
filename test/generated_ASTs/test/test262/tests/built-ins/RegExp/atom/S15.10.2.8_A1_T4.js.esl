function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__executed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "/[Jj]ava([Ss]cript)?(?=\\:)/";
__n8["raw"] := "/[Jj]ava([Ss]cript)?(?=\\:)/";
__n8["source"] := "[Jj]ava([Ss]cript)?(?=\\:)";
__n9 := {  };
__n9["type"] := "RegExp";
__n10 := {  };
__n10["type"] := "Alternative";
__n12 := {  };
__n12["type"] := "CharacterClass";
__n14 := {  };
__n14["type"] := "Char";
__n14["value"] := "J";
__n14["kind"] := "simple";
__n14["symbol"] := "J";
__n14["codePoint"] := 74.;
__n15 := {  };
__n15["type"] := "Char";
__n15["value"] := "j";
__n15["kind"] := "simple";
__n15["symbol"] := "j";
__n15["codePoint"] := 106.;
__n13 := [ __n14, __n15 ];
__n12["expressions"] := __n13;
__n16 := {  };
__n16["type"] := "Char";
__n16["value"] := "a";
__n16["kind"] := "simple";
__n16["symbol"] := "a";
__n16["codePoint"] := 97.;
__n17 := {  };
__n17["type"] := "Char";
__n17["value"] := "v";
__n17["kind"] := "simple";
__n17["symbol"] := "v";
__n17["codePoint"] := 118.;
__n18 := {  };
__n18["type"] := "Char";
__n18["value"] := "a";
__n18["kind"] := "simple";
__n18["symbol"] := "a";
__n18["codePoint"] := 97.;
__n19 := {  };
__n19["type"] := "Repetition";
__n20 := {  };
__n20["type"] := "Group";
__n20["capturing"] := true;
__n20["number"] := 1.;
__n21 := {  };
__n21["type"] := "Alternative";
__n23 := {  };
__n23["type"] := "CharacterClass";
__n25 := {  };
__n25["type"] := "Char";
__n25["value"] := "S";
__n25["kind"] := "simple";
__n25["symbol"] := "S";
__n25["codePoint"] := 83.;
__n26 := {  };
__n26["type"] := "Char";
__n26["value"] := "s";
__n26["kind"] := "simple";
__n26["symbol"] := "s";
__n26["codePoint"] := 115.;
__n24 := [ __n25, __n26 ];
__n23["expressions"] := __n24;
__n27 := {  };
__n27["type"] := "Char";
__n27["value"] := "c";
__n27["kind"] := "simple";
__n27["symbol"] := "c";
__n27["codePoint"] := 99.;
__n28 := {  };
__n28["type"] := "Char";
__n28["value"] := "r";
__n28["kind"] := "simple";
__n28["symbol"] := "r";
__n28["codePoint"] := 114.;
__n29 := {  };
__n29["type"] := "Char";
__n29["value"] := "i";
__n29["kind"] := "simple";
__n29["symbol"] := "i";
__n29["codePoint"] := 105.;
__n30 := {  };
__n30["type"] := "Char";
__n30["value"] := "p";
__n30["kind"] := "simple";
__n30["symbol"] := "p";
__n30["codePoint"] := 112.;
__n31 := {  };
__n31["type"] := "Char";
__n31["value"] := "t";
__n31["kind"] := "simple";
__n31["symbol"] := "t";
__n31["codePoint"] := 116.;
__n22 := [ __n23, __n27, __n28, __n29, __n30, __n31 ];
__n21["expressions"] := __n22;
__n20["expression"] := __n21;
__n19["expression"] := __n20;
__n32 := {  };
__n32["type"] := "Quantifier";
__n32["kind"] := "?";
__n32["greedy"] := true;
__n19["quantifier"] := __n32;
__n19["parenIndex"] := 1.;
__n19["parenCount"] := 0.;
__n33 := {  };
__n33["type"] := "Assertion";
__n33["kind"] := "Lookahead";
__n34 := {  };
__n34["type"] := "Char";
__n34["value"] := ":";
__n34["kind"] := "simple";
__n34["symbol"] := ":";
__n34["codePoint"] := 58.;
__n34["escaped"] := true;
__n33["assertion"] := __n34;
__n11 := [ __n12, __n16, __n17, __n18, __n19, __n33 ];
__n10["expressions"] := __n11;
__n9["body"] := __n10;
__n9["flags"] := "";
__n9["nCaps"] := 1.;
__n8["regex"] := __n9;
__n7["object"] := __n8;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "exec";
__n35["raw"] := "\"exec\"";
__n7["property"] := __n35;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "taste of java: the cookbook ";
__n37["raw"] := "\"taste of java: the cookbook \"";
__n36 := [ __n37 ];
__n6["arguments"] := __n36;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n38 := {  };
__n38["type"] := "VariableDeclaration";
__n40 := {  };
__n40["type"] := "VariableDeclarator";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "__expected";
__n40["id"] := __n41;
__n42 := {  };
__n42["type"] := "ArrayExpression";
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "java";
__n44["raw"] := "\"java\"";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "undefined";
__n43 := [ __n44, __n45 ];
__n42["elements"] := __n43;
__n40["init"] := __n42;
__n39 := [ __n40 ];
__n38["declarations"] := __n39;
__n38["kind"] := "var";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "AssignmentExpression";
__n47["operator"] := "=";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "__expected";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "index";
__n50["raw"] := "\"index\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["left"] := __n48;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 9.;
__n51["raw"] := "9";
__n47["right"] := __n51;
__n46["expression"] := __n47;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "AssignmentExpression";
__n53["operator"] := "=";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "__expected";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "input";
__n56["raw"] := "\"input\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["left"] := __n54;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "taste of java: the cookbook ";
__n57["raw"] := "\"taste of java: the cookbook \"";
__n53["right"] := __n57;
__n52["expression"] := __n53;
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "console";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "log";
__n62["raw"] := "\"log\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "__executed";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "length";
__n66["raw"] := "\"length\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63 := [ __n64 ];
__n59["arguments"] := __n63;
__n58["expression"] := __n59;
__n67 := {  };
__n67["type"] := "IfStatement";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "!==";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "__executed";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "length";
__n71["raw"] := "\"length\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["left"] := __n69;
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "__expected";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "length";
__n74["raw"] := "\"length\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n68["right"] := __n72;
__n67["test"] := __n68;
__n75 := {  };
__n75["type"] := "BlockStatement";
__n77 := {  };
__n77["type"] := "ExpressionStatement";
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "$ERROR";
__n78["callee"] := __n79;
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "+";
__n82 := {  };
__n82["type"] := "BinaryExpression";
__n82["operator"] := "+";
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "+";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "#1: __executed = /[Jj]ava([Ss]cript)?(?=\\:)/.exec(\"taste of java: the cookbook \"); __executed.length === ";
__n84["raw"] := "'#1: __executed = /[Jj]ava([Ss]cript)?(?=\\\\:)/.exec(\"taste of java: the cookbook \"); __executed.length === '";
__n83["left"] := __n84;
__n85 := {  };
__n85["type"] := "MemberExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "__expected";
__n85["object"] := __n86;
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "length";
__n87["raw"] := "\"length\"";
__n85["property"] := __n87;
__n85["computed"] := true;
__n83["right"] := __n85;
__n82["left"] := __n83;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := ". Actual: ";
__n88["raw"] := "'. Actual: '";
__n82["right"] := __n88;
__n81["left"] := __n82;
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "__executed";
__n89["object"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "length";
__n91["raw"] := "\"length\"";
__n89["property"] := __n91;
__n89["computed"] := true;
__n81["right"] := __n89;
__n80 := [ __n81 ];
__n78["arguments"] := __n80;
__n77["expression"] := __n78;
__n76 := [ __n77 ];
__n75["body"] := __n76;
__n67["consequent"] := __n75;
__n67["alternate"] := null;
__n92 := {  };
__n92["type"] := "IfStatement";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "!==";
__n94 := {  };
__n94["type"] := "MemberExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "__executed";
__n94["object"] := __n95;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "index";
__n96["raw"] := "\"index\"";
__n94["property"] := __n96;
__n94["computed"] := true;
__n93["left"] := __n94;
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "__expected";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "index";
__n99["raw"] := "\"index\"";
__n97["property"] := __n99;
__n97["computed"] := true;
__n93["right"] := __n97;
__n92["test"] := __n93;
__n100 := {  };
__n100["type"] := "BlockStatement";
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "$ERROR";
__n103["callee"] := __n104;
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "+";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "+";
__n108 := {  };
__n108["type"] := "BinaryExpression";
__n108["operator"] := "+";
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "#2: __executed = /[Jj]ava([Ss]cript)?(?=\\:)/.exec(\"taste of java: the cookbook \"); __executed.index === ";
__n109["raw"] := "'#2: __executed = /[Jj]ava([Ss]cript)?(?=\\\\:)/.exec(\"taste of java: the cookbook \"); __executed.index === '";
__n108["left"] := __n109;
__n110 := {  };
__n110["type"] := "MemberExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "__expected";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "index";
__n112["raw"] := "\"index\"";
__n110["property"] := __n112;
__n110["computed"] := true;
__n108["right"] := __n110;
__n107["left"] := __n108;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := ". Actual: ";
__n113["raw"] := "'. Actual: '";
__n107["right"] := __n113;
__n106["left"] := __n107;
__n114 := {  };
__n114["type"] := "MemberExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "__executed";
__n114["object"] := __n115;
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "index";
__n116["raw"] := "\"index\"";
__n114["property"] := __n116;
__n114["computed"] := true;
__n106["right"] := __n114;
__n105 := [ __n106 ];
__n103["arguments"] := __n105;
__n102["expression"] := __n103;
__n101 := [ __n102 ];
__n100["body"] := __n101;
__n92["consequent"] := __n100;
__n92["alternate"] := null;
__n117 := {  };
__n117["type"] := "IfStatement";
__n118 := {  };
__n118["type"] := "BinaryExpression";
__n118["operator"] := "!==";
__n119 := {  };
__n119["type"] := "MemberExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "__executed";
__n119["object"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "input";
__n121["raw"] := "\"input\"";
__n119["property"] := __n121;
__n119["computed"] := true;
__n118["left"] := __n119;
__n122 := {  };
__n122["type"] := "MemberExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "__expected";
__n122["object"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "input";
__n124["raw"] := "\"input\"";
__n122["property"] := __n124;
__n122["computed"] := true;
__n118["right"] := __n122;
__n117["test"] := __n118;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "$ERROR";
__n128["callee"] := __n129;
__n131 := {  };
__n131["type"] := "BinaryExpression";
__n131["operator"] := "+";
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := "+";
__n133 := {  };
__n133["type"] := "BinaryExpression";
__n133["operator"] := "+";
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := "#3: __executed = /[Jj]ava([Ss]cript)?(?=\\:)/.exec(\"taste of java: the cookbook \"); __executed.input === ";
__n134["raw"] := "'#3: __executed = /[Jj]ava([Ss]cript)?(?=\\\\:)/.exec(\"taste of java: the cookbook \"); __executed.input === '";
__n133["left"] := __n134;
__n135 := {  };
__n135["type"] := "MemberExpression";
__n136 := {  };
__n136["type"] := "Identifier";
__n136["name"] := "__expected";
__n135["object"] := __n136;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "input";
__n137["raw"] := "\"input\"";
__n135["property"] := __n137;
__n135["computed"] := true;
__n133["right"] := __n135;
__n132["left"] := __n133;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := ". Actual: ";
__n138["raw"] := "'. Actual: '";
__n132["right"] := __n138;
__n131["left"] := __n132;
__n139 := {  };
__n139["type"] := "MemberExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "__executed";
__n139["object"] := __n140;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "input";
__n141["raw"] := "\"input\"";
__n139["property"] := __n141;
__n139["computed"] := true;
__n131["right"] := __n139;
__n130 := [ __n131 ];
__n128["arguments"] := __n130;
__n127["expression"] := __n128;
__n126 := [ __n127 ];
__n125["body"] := __n126;
__n117["consequent"] := __n125;
__n117["alternate"] := null;
__n142 := {  };
__n142["type"] := "ForStatement";
__n143 := {  };
__n143["type"] := "VariableDeclaration";
__n145 := {  };
__n145["type"] := "VariableDeclarator";
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "index";
__n145["id"] := __n146;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := 0.;
__n147["raw"] := "0";
__n145["init"] := __n147;
__n144 := [ __n145 ];
__n143["declarations"] := __n144;
__n143["kind"] := "var";
__n142["init"] := __n143;
__n148 := {  };
__n148["type"] := "BinaryExpression";
__n148["operator"] := "<";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "index";
__n148["left"] := __n149;
__n150 := {  };
__n150["type"] := "MemberExpression";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "__expected";
__n150["object"] := __n151;
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := "length";
__n152["raw"] := "\"length\"";
__n150["property"] := __n152;
__n150["computed"] := true;
__n148["right"] := __n150;
__n142["test"] := __n148;
__n153 := {  };
__n153["type"] := "UpdateExpression";
__n153["operator"] := "++";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "index";
__n153["argument"] := __n154;
__n153["prefix"] := false;
__n142["update"] := __n153;
__n155 := {  };
__n155["type"] := "BlockStatement";
__n157 := {  };
__n157["type"] := "IfStatement";
__n158 := {  };
__n158["type"] := "BinaryExpression";
__n158["operator"] := "!==";
__n159 := {  };
__n159["type"] := "MemberExpression";
__n159["computed"] := true;
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "__executed";
__n159["object"] := __n160;
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "index";
__n159["property"] := __n161;
__n158["left"] := __n159;
__n162 := {  };
__n162["type"] := "MemberExpression";
__n162["computed"] := true;
__n163 := {  };
__n163["type"] := "Identifier";
__n163["name"] := "__expected";
__n162["object"] := __n163;
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "index";
__n162["property"] := __n164;
__n158["right"] := __n162;
__n157["test"] := __n158;
__n165 := {  };
__n165["type"] := "BlockStatement";
__n167 := {  };
__n167["type"] := "ExpressionStatement";
__n168 := {  };
__n168["type"] := "CallExpression";
__n169 := {  };
__n169["type"] := "Identifier";
__n169["name"] := "$ERROR";
__n168["callee"] := __n169;
__n171 := {  };
__n171["type"] := "BinaryExpression";
__n171["operator"] := "+";
__n172 := {  };
__n172["type"] := "BinaryExpression";
__n172["operator"] := "+";
__n173 := {  };
__n173["type"] := "BinaryExpression";
__n173["operator"] := "+";
__n174 := {  };
__n174["type"] := "BinaryExpression";
__n174["operator"] := "+";
__n175 := {  };
__n175["type"] := "BinaryExpression";
__n175["operator"] := "+";
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := "#4: __executed = /[Jj]ava([Ss]cript)?(?=\\:)/.exec(\"taste of java: the cookbook \"); __executed[";
__n176["raw"] := "'#4: __executed = /[Jj]ava([Ss]cript)?(?=\\\\:)/.exec(\"taste of java: the cookbook \"); __executed['";
__n175["left"] := __n176;
__n177 := {  };
__n177["type"] := "Identifier";
__n177["name"] := "index";
__n175["right"] := __n177;
__n174["left"] := __n175;
__n178 := {  };
__n178["type"] := "Literal";
__n178["value"] := "] === ";
__n178["raw"] := "'] === '";
__n174["right"] := __n178;
__n173["left"] := __n174;
__n179 := {  };
__n179["type"] := "MemberExpression";
__n179["computed"] := true;
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "__expected";
__n179["object"] := __n180;
__n181 := {  };
__n181["type"] := "Identifier";
__n181["name"] := "index";
__n179["property"] := __n181;
__n173["right"] := __n179;
__n172["left"] := __n173;
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := ". Actual: ";
__n182["raw"] := "'. Actual: '";
__n172["right"] := __n182;
__n171["left"] := __n172;
__n183 := {  };
__n183["type"] := "MemberExpression";
__n183["computed"] := true;
__n184 := {  };
__n184["type"] := "Identifier";
__n184["name"] := "__executed";
__n183["object"] := __n184;
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "index";
__n183["property"] := __n185;
__n171["right"] := __n183;
__n170 := [ __n171 ];
__n168["arguments"] := __n170;
__n167["expression"] := __n168;
__n166 := [ __n167 ];
__n165["body"] := __n166;
__n157["consequent"] := __n165;
__n157["alternate"] := null;
__n156 := [ __n157 ];
__n155["body"] := __n156;
__n142["body"] := __n155;
__n1 := [ __n2, __n38, __n46, __n52, __n58, __n67, __n92, __n117, __n142 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n186 := [ "__executed", "__expected", "index" ];
__n0["variableDeclarations"] := __n186;
__n187 := [  ];
__n0["functionDeclarations"] := __n187;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}