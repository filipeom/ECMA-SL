function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__replaced";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "To sign up click |here|https:www.xxxx.org/subscribe.htm|";
__n8["raw"] := "\"To sign up click |here|https:www.xxxx.org/subscribe.htm|\"";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "replace";
__n9["raw"] := "\"replace\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "/(\\|)([\\w\\x81-\\xff ]*)(\\|)([\\/a-z][\\w:\\/\\.]*\\.[a-z]{3,4})(\\|)/ig";
__n11["raw"] := "/(\\|)([\\w\\x81-\\xff ]*)(\\|)([\\/a-z][\\w:\\/\\.]*\\.[a-z]{3,4})(\\|)/ig";
__n11["source"] := "(\\|)([\\w\\x81-\\xff ]*)(\\|)([\\/a-z][\\w:\\/\\.]*\\.[a-z]{3,4})(\\|)";
__n12 := {  };
__n12["type"] := "RegExp";
__n13 := {  };
__n13["type"] := "Alternative";
__n15 := {  };
__n15["type"] := "Group";
__n15["capturing"] := true;
__n15["number"] := 1.;
__n16 := {  };
__n16["type"] := "Char";
__n16["value"] := "|";
__n16["kind"] := "simple";
__n16["symbol"] := "|";
__n16["codePoint"] := 124.;
__n16["escaped"] := true;
__n15["expression"] := __n16;
__n17 := {  };
__n17["type"] := "Group";
__n17["capturing"] := true;
__n17["number"] := 2.;
__n18 := {  };
__n18["type"] := "Repetition";
__n19 := {  };
__n19["type"] := "CharacterClass";
__n21 := {  };
__n21["type"] := "Char";
__n21["value"] := "\\w";
__n21["kind"] := "meta";
__n21["symbol"] := 'undefined;
__n21["codePoint"] := nan;
__n22 := {  };
__n22["type"] := "ClassRange";
__n23 := {  };
__n23["type"] := "Char";
__n23["value"] := "\\x81";
__n23["kind"] := "hex";
__n23["symbol"] := "";
__n23["codePoint"] := 129.;
__n22["from"] := __n23;
__n24 := {  };
__n24["type"] := "Char";
__n24["value"] := "\\xff";
__n24["kind"] := "hex";
__n24["symbol"] := "ÿ";
__n24["codePoint"] := 255.;
__n22["to"] := __n24;
__n25 := {  };
__n25["type"] := "Char";
__n25["value"] := " ";
__n25["kind"] := "simple";
__n25["symbol"] := " ";
__n25["codePoint"] := 32.;
__n20 := [ __n21, __n22, __n25 ];
__n19["expressions"] := __n20;
__n18["expression"] := __n19;
__n26 := {  };
__n26["type"] := "Quantifier";
__n26["kind"] := "*";
__n26["greedy"] := true;
__n18["quantifier"] := __n26;
__n18["parenIndex"] := 2.;
__n18["parenCount"] := 1.;
__n17["expression"] := __n18;
__n27 := {  };
__n27["type"] := "Group";
__n27["capturing"] := true;
__n27["number"] := 3.;
__n28 := {  };
__n28["type"] := "Char";
__n28["value"] := "|";
__n28["kind"] := "simple";
__n28["symbol"] := "|";
__n28["codePoint"] := 124.;
__n28["escaped"] := true;
__n27["expression"] := __n28;
__n29 := {  };
__n29["type"] := "Group";
__n29["capturing"] := true;
__n29["number"] := 4.;
__n30 := {  };
__n30["type"] := "Alternative";
__n32 := {  };
__n32["type"] := "CharacterClass";
__n34 := {  };
__n34["type"] := "Char";
__n34["value"] := "/";
__n34["kind"] := "simple";
__n34["symbol"] := "/";
__n34["codePoint"] := 47.;
__n34["escaped"] := true;
__n35 := {  };
__n35["type"] := "ClassRange";
__n36 := {  };
__n36["type"] := "Char";
__n36["value"] := "a";
__n36["kind"] := "simple";
__n36["symbol"] := "a";
__n36["codePoint"] := 97.;
__n35["from"] := __n36;
__n37 := {  };
__n37["type"] := "Char";
__n37["value"] := "z";
__n37["kind"] := "simple";
__n37["symbol"] := "z";
__n37["codePoint"] := 122.;
__n35["to"] := __n37;
__n33 := [ __n34, __n35 ];
__n32["expressions"] := __n33;
__n38 := {  };
__n38["type"] := "Repetition";
__n39 := {  };
__n39["type"] := "CharacterClass";
__n41 := {  };
__n41["type"] := "Char";
__n41["value"] := "\\w";
__n41["kind"] := "meta";
__n41["symbol"] := 'undefined;
__n41["codePoint"] := nan;
__n42 := {  };
__n42["type"] := "Char";
__n42["value"] := ":";
__n42["kind"] := "simple";
__n42["symbol"] := ":";
__n42["codePoint"] := 58.;
__n43 := {  };
__n43["type"] := "Char";
__n43["value"] := "/";
__n43["kind"] := "simple";
__n43["symbol"] := "/";
__n43["codePoint"] := 47.;
__n43["escaped"] := true;
__n44 := {  };
__n44["type"] := "Char";
__n44["value"] := ".";
__n44["kind"] := "simple";
__n44["symbol"] := ".";
__n44["codePoint"] := 46.;
__n44["escaped"] := true;
__n40 := [ __n41, __n42, __n43, __n44 ];
__n39["expressions"] := __n40;
__n38["expression"] := __n39;
__n45 := {  };
__n45["type"] := "Quantifier";
__n45["kind"] := "*";
__n45["greedy"] := true;
__n38["quantifier"] := __n45;
__n38["parenIndex"] := 4.;
__n38["parenCount"] := 1.;
__n46 := {  };
__n46["type"] := "Char";
__n46["value"] := ".";
__n46["kind"] := "simple";
__n46["symbol"] := ".";
__n46["codePoint"] := 46.;
__n46["escaped"] := true;
__n47 := {  };
__n47["type"] := "Repetition";
__n48 := {  };
__n48["type"] := "CharacterClass";
__n50 := {  };
__n50["type"] := "ClassRange";
__n51 := {  };
__n51["type"] := "Char";
__n51["value"] := "a";
__n51["kind"] := "simple";
__n51["symbol"] := "a";
__n51["codePoint"] := 97.;
__n50["from"] := __n51;
__n52 := {  };
__n52["type"] := "Char";
__n52["value"] := "z";
__n52["kind"] := "simple";
__n52["symbol"] := "z";
__n52["codePoint"] := 122.;
__n50["to"] := __n52;
__n49 := [ __n50 ];
__n48["expressions"] := __n49;
__n47["expression"] := __n48;
__n53 := {  };
__n53["type"] := "Quantifier";
__n53["kind"] := "Range";
__n53["from"] := 3.;
__n53["to"] := 4.;
__n53["greedy"] := true;
__n47["quantifier"] := __n53;
__n47["parenIndex"] := 4.;
__n47["parenCount"] := 1.;
__n31 := [ __n32, __n38, __n46, __n47 ];
__n30["expressions"] := __n31;
__n29["expression"] := __n30;
__n54 := {  };
__n54["type"] := "Group";
__n54["capturing"] := true;
__n54["number"] := 5.;
__n55 := {  };
__n55["type"] := "Char";
__n55["value"] := "|";
__n55["kind"] := "simple";
__n55["symbol"] := "|";
__n55["codePoint"] := 124.;
__n55["escaped"] := true;
__n54["expression"] := __n55;
__n14 := [ __n15, __n17, __n27, __n29, __n54 ];
__n13["expressions"] := __n14;
__n12["body"] := __n13;
__n12["flags"] := "gi";
__n12["nCaps"] := 5.;
__n11["regex"] := __n12;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "<a href=\"$4\">$2</a>";
__n56["raw"] := "'<a href=\"$4\">$2</a>'";
__n10 := [ __n11, __n56 ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n57 := {  };
__n57["type"] := "VariableDeclaration";
__n59 := {  };
__n59["type"] := "VariableDeclarator";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "__expected";
__n59["id"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "To sign up click <a href=\"https:www.xxxx.org/subscribe.htm\">here</a>";
__n61["raw"] := "'To sign up click <a href=\"https:www.xxxx.org/subscribe.htm\">here</a>'";
__n59["init"] := __n61;
__n58 := [ __n59 ];
__n57["declarations"] := __n58;
__n57["kind"] := "var";
__n62 := {  };
__n62["type"] := "IfStatement";
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "!==";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "__replaced";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "__expected";
__n63["right"] := __n65;
__n62["test"] := __n63;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "+";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "+";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "+";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "#1: __replaced = \"To sign up click |here|https:www.xxxx.org/subscribe.htm|\".replace(/(\\|)([\\w\\x81-\\xff ]*)(\\|)([\\/a-z][\\w:\\/\\.]*\\.[a-z]{3,4})(\\|)/ig, '<a href=\"$4\">$2</a>'); __replaced === ";
__n75["raw"] := "'#1: __replaced = \"To sign up click |here|https:www.xxxx.org/subscribe.htm|\".replace(/(\\\\|)([\\\\w\\\\x81-\\\\xff ]*)(\\\\|)([\\\\/a-z][\\\\w:\\\\/\\\\.]*\\\\.[a-z]{3,4})(\\\\|)/ig, \\'<a href=\"$4\">$2</a>\\'); __replaced === '";
__n74["left"] := __n75;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "__expected";
__n74["right"] := __n76;
__n73["left"] := __n74;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := ". Actual: ";
__n77["raw"] := "'. Actual: '";
__n73["right"] := __n77;
__n72["left"] := __n73;
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "__replaced";
__n72["right"] := __n78;
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n62["consequent"] := __n66;
__n62["alternate"] := null;
__n1 := [ __n2, __n57, __n62 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n79 := [ "__replaced", "__expected" ];
__n0["variableDeclarations"] := __n79;
__n80 := [  ];
__n0["functionDeclarations"] := __n80;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}