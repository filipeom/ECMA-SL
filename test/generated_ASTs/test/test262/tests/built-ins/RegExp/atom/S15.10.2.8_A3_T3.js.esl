function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__executed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "/([Jj]ava([Ss]cript)?)\\sis\\s(fun\\w*)/";
__n8["raw"] := "/([Jj]ava([Ss]cript)?)\\sis\\s(fun\\w*)/";
__n8["source"] := "([Jj]ava([Ss]cript)?)\\sis\\s(fun\\w*)";
__n9 := {  };
__n9["type"] := "RegExp";
__n10 := {  };
__n10["type"] := "Alternative";
__n12 := {  };
__n12["type"] := "Group";
__n12["capturing"] := true;
__n12["number"] := 1.;
__n13 := {  };
__n13["type"] := "Alternative";
__n15 := {  };
__n15["type"] := "CharacterClass";
__n17 := {  };
__n17["type"] := "Char";
__n17["value"] := "J";
__n17["kind"] := "simple";
__n17["symbol"] := "J";
__n17["codePoint"] := 74.;
__n18 := {  };
__n18["type"] := "Char";
__n18["value"] := "j";
__n18["kind"] := "simple";
__n18["symbol"] := "j";
__n18["codePoint"] := 106.;
__n16 := [ __n17, __n18 ];
__n15["expressions"] := __n16;
__n19 := {  };
__n19["type"] := "Char";
__n19["value"] := "a";
__n19["kind"] := "simple";
__n19["symbol"] := "a";
__n19["codePoint"] := 97.;
__n20 := {  };
__n20["type"] := "Char";
__n20["value"] := "v";
__n20["kind"] := "simple";
__n20["symbol"] := "v";
__n20["codePoint"] := 118.;
__n21 := {  };
__n21["type"] := "Char";
__n21["value"] := "a";
__n21["kind"] := "simple";
__n21["symbol"] := "a";
__n21["codePoint"] := 97.;
__n22 := {  };
__n22["type"] := "Repetition";
__n23 := {  };
__n23["type"] := "Group";
__n23["capturing"] := true;
__n23["number"] := 2.;
__n24 := {  };
__n24["type"] := "Alternative";
__n26 := {  };
__n26["type"] := "CharacterClass";
__n28 := {  };
__n28["type"] := "Char";
__n28["value"] := "S";
__n28["kind"] := "simple";
__n28["symbol"] := "S";
__n28["codePoint"] := 83.;
__n29 := {  };
__n29["type"] := "Char";
__n29["value"] := "s";
__n29["kind"] := "simple";
__n29["symbol"] := "s";
__n29["codePoint"] := 115.;
__n27 := [ __n28, __n29 ];
__n26["expressions"] := __n27;
__n30 := {  };
__n30["type"] := "Char";
__n30["value"] := "c";
__n30["kind"] := "simple";
__n30["symbol"] := "c";
__n30["codePoint"] := 99.;
__n31 := {  };
__n31["type"] := "Char";
__n31["value"] := "r";
__n31["kind"] := "simple";
__n31["symbol"] := "r";
__n31["codePoint"] := 114.;
__n32 := {  };
__n32["type"] := "Char";
__n32["value"] := "i";
__n32["kind"] := "simple";
__n32["symbol"] := "i";
__n32["codePoint"] := 105.;
__n33 := {  };
__n33["type"] := "Char";
__n33["value"] := "p";
__n33["kind"] := "simple";
__n33["symbol"] := "p";
__n33["codePoint"] := 112.;
__n34 := {  };
__n34["type"] := "Char";
__n34["value"] := "t";
__n34["kind"] := "simple";
__n34["symbol"] := "t";
__n34["codePoint"] := 116.;
__n25 := [ __n26, __n30, __n31, __n32, __n33, __n34 ];
__n24["expressions"] := __n25;
__n23["expression"] := __n24;
__n22["expression"] := __n23;
__n35 := {  };
__n35["type"] := "Quantifier";
__n35["kind"] := "?";
__n35["greedy"] := true;
__n22["quantifier"] := __n35;
__n22["parenIndex"] := 2.;
__n22["parenCount"] := 1.;
__n14 := [ __n15, __n19, __n20, __n21, __n22 ];
__n13["expressions"] := __n14;
__n12["expression"] := __n13;
__n36 := {  };
__n36["type"] := "Char";
__n36["value"] := "\\s";
__n36["kind"] := "meta";
__n36["symbol"] := 'undefined;
__n36["codePoint"] := nan;
__n37 := {  };
__n37["type"] := "Char";
__n37["value"] := "i";
__n37["kind"] := "simple";
__n37["symbol"] := "i";
__n37["codePoint"] := 105.;
__n38 := {  };
__n38["type"] := "Char";
__n38["value"] := "s";
__n38["kind"] := "simple";
__n38["symbol"] := "s";
__n38["codePoint"] := 115.;
__n39 := {  };
__n39["type"] := "Char";
__n39["value"] := "\\s";
__n39["kind"] := "meta";
__n39["symbol"] := 'undefined;
__n39["codePoint"] := nan;
__n40 := {  };
__n40["type"] := "Group";
__n40["capturing"] := true;
__n40["number"] := 3.;
__n41 := {  };
__n41["type"] := "Alternative";
__n43 := {  };
__n43["type"] := "Char";
__n43["value"] := "f";
__n43["kind"] := "simple";
__n43["symbol"] := "f";
__n43["codePoint"] := 102.;
__n44 := {  };
__n44["type"] := "Char";
__n44["value"] := "u";
__n44["kind"] := "simple";
__n44["symbol"] := "u";
__n44["codePoint"] := 117.;
__n45 := {  };
__n45["type"] := "Char";
__n45["value"] := "n";
__n45["kind"] := "simple";
__n45["symbol"] := "n";
__n45["codePoint"] := 110.;
__n46 := {  };
__n46["type"] := "Repetition";
__n47 := {  };
__n47["type"] := "Char";
__n47["value"] := "\\w";
__n47["kind"] := "meta";
__n47["symbol"] := 'undefined;
__n47["codePoint"] := nan;
__n46["expression"] := __n47;
__n48 := {  };
__n48["type"] := "Quantifier";
__n48["kind"] := "*";
__n48["greedy"] := true;
__n46["quantifier"] := __n48;
__n46["parenIndex"] := 3.;
__n46["parenCount"] := 1.;
__n42 := [ __n43, __n44, __n45, __n46 ];
__n41["expressions"] := __n42;
__n40["expression"] := __n41;
__n11 := [ __n12, __n36, __n37, __n38, __n39, __n40 ];
__n10["expressions"] := __n11;
__n9["body"] := __n10;
__n9["flags"] := "";
__n9["nCaps"] := 3.;
__n8["regex"] := __n9;
__n7["object"] := __n8;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "test";
__n49["raw"] := "\"test\"";
__n7["property"] := __n49;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "Developing with JavaScript is dangerous, do not try it without assistance";
__n51["raw"] := "\"Developing with JavaScript is dangerous, do not try it without assistance\"";
__n50 := [ __n51 ];
__n6["arguments"] := __n50;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n52 := {  };
__n52["type"] := "IfStatement";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "__executed";
__n52["test"] := __n53;
__n54 := {  };
__n54["type"] := "BlockStatement";
__n56 := {  };
__n56["type"] := "ExpressionStatement";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "$ERROR";
__n57["callee"] := __n58;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "#1: /([Jj]ava([Ss]cript)?)\\sis\\s(fun\\w*)/.test(\"Developing with JavaScript is dangerous, do not try it without assistance\") === false";
__n60["raw"] := "'#1: /([Jj]ava([Ss]cript)?)\\\\sis\\\\s(fun\\\\w*)/.test(\"Developing with JavaScript is dangerous, do not try it without assistance\") === false'";
__n59 := [ __n60 ];
__n57["arguments"] := __n59;
__n56["expression"] := __n57;
__n55 := [ __n56 ];
__n54["body"] := __n55;
__n52["consequent"] := __n54;
__n52["alternate"] := null;
__n1 := [ __n2, __n52 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n61 := [ "__executed" ];
__n0["variableDeclarations"] := __n61;
__n62 := [  ];
__n0["functionDeclarations"] := __n62;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}