function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "re";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "RegExp";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "";
__n9["raw"] := "''";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "assert";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "sameValue";
__n14["raw"] := "\"sameValue\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "re";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "lastIndex";
__n18["raw"] := "\"lastIndex\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 0.;
__n19["raw"] := "0";
__n15 := [ __n16, __n19 ];
__n11["arguments"] := __n15;
__n10["expression"] := __n11;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "verifyNotEnumerable";
__n21["callee"] := __n22;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "re";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "lastIndex";
__n25["raw"] := "'lastIndex'";
__n23 := [ __n24, __n25 ];
__n21["arguments"] := __n23;
__n20["expression"] := __n21;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "verifyWritable";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "re";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "lastIndex";
__n31["raw"] := "'lastIndex'";
__n29 := [ __n30, __n31 ];
__n27["arguments"] := __n29;
__n26["expression"] := __n27;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "CallExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "verifyNotConfigurable";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "re";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "lastIndex";
__n37["raw"] := "'lastIndex'";
__n35 := [ __n36, __n37 ];
__n33["arguments"] := __n35;
__n32["expression"] := __n33;
__n1 := [ __n2, __n10, __n20, __n26, __n32 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n38 := [ "re" ];
__n0["variableDeclarations"] := __n38;
__n39 := [  ];
__n0["functionDeclarations"] := __n39;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}