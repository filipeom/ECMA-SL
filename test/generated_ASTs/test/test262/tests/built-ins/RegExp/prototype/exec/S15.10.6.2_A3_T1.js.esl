function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__re";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "/(?:ab|cd)\\d?/g";
__n6["raw"] := "/(?:ab|cd)\\d?/g";
__n6["source"] := "(?:ab|cd)\\d?";
__n7 := {  };
__n7["type"] := "RegExp";
__n8 := {  };
__n8["type"] := "Alternative";
__n10 := {  };
__n10["type"] := "Group";
__n10["capturing"] := false;
__n11 := {  };
__n11["type"] := "Disjunction";
__n12 := {  };
__n12["type"] := "Alternative";
__n14 := {  };
__n14["type"] := "Char";
__n14["value"] := "a";
__n14["kind"] := "simple";
__n14["symbol"] := "a";
__n14["codePoint"] := 97.;
__n15 := {  };
__n15["type"] := "Char";
__n15["value"] := "b";
__n15["kind"] := "simple";
__n15["symbol"] := "b";
__n15["codePoint"] := 98.;
__n13 := [ __n14, __n15 ];
__n12["expressions"] := __n13;
__n11["left"] := __n12;
__n16 := {  };
__n16["type"] := "Alternative";
__n18 := {  };
__n18["type"] := "Char";
__n18["value"] := "c";
__n18["kind"] := "simple";
__n18["symbol"] := "c";
__n18["codePoint"] := 99.;
__n19 := {  };
__n19["type"] := "Char";
__n19["value"] := "d";
__n19["kind"] := "simple";
__n19["symbol"] := "d";
__n19["codePoint"] := 100.;
__n17 := [ __n18, __n19 ];
__n16["expressions"] := __n17;
__n11["right"] := __n16;
__n10["expression"] := __n11;
__n20 := {  };
__n20["type"] := "Repetition";
__n21 := {  };
__n21["type"] := "Char";
__n21["value"] := "\\d";
__n21["kind"] := "meta";
__n21["symbol"] := 'undefined;
__n21["codePoint"] := nan;
__n20["expression"] := __n21;
__n22 := {  };
__n22["type"] := "Quantifier";
__n22["kind"] := "?";
__n22["greedy"] := true;
__n20["quantifier"] := __n22;
__n20["parenIndex"] := 0.;
__n20["parenCount"] := 0.;
__n9 := [ __n10, __n20 ];
__n8["expressions"] := __n9;
__n7["body"] := __n8;
__n7["flags"] := "g";
__n7["nCaps"] := 0.;
__n6["regex"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n23 := {  };
__n23["type"] := "VariableDeclaration";
__n25 := {  };
__n25["type"] := "VariableDeclarator";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "__matched";
__n25["id"] := __n26;
__n27 := {  };
__n27["type"] := "ArrayExpression";
__n28 := [  ];
__n27["elements"] := __n28;
__n25["init"] := __n27;
__n24 := [ __n25 ];
__n23["declarations"] := __n24;
__n23["kind"] := "var";
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "__expected";
__n31["id"] := __n32;
__n33 := {  };
__n33["type"] := "ArrayExpression";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "ab";
__n35["raw"] := "\"ab\"";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "cd2";
__n36["raw"] := "\"cd2\"";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "ab3";
__n37["raw"] := "\"ab3\"";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "cd";
__n38["raw"] := "\"cd\"";
__n34 := [ __n35, __n36, __n37, __n38 ];
__n33["elements"] := __n34;
__n31["init"] := __n33;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n39 := {  };
__n39["type"] := "DoWhileStatement";
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "VariableDeclaration";
__n44 := {  };
__n44["type"] := "VariableDeclarator";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "__executed";
__n44["id"] := __n45;
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "__re";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "exec";
__n49["raw"] := "\"exec\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "ab  cd2  ab34  cd";
__n51["raw"] := "\"ab  cd2  ab34  cd\"";
__n50 := [ __n51 ];
__n46["arguments"] := __n50;
__n44["init"] := __n46;
__n43 := [ __n44 ];
__n42["declarations"] := __n43;
__n42["kind"] := "var";
__n52 := {  };
__n52["type"] := "IfStatement";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "!==";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "__executed";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 'null;
__n55["raw"] := "\"'null\"";
__n53["right"] := __n55;
__n52["test"] := __n53;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "ExpressionStatement";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "__matched";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "push";
__n62["raw"] := "\"push\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n64 := {  };
__n64["type"] := "MemberExpression";
__n64["computed"] := true;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "__executed";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 0.;
__n66["raw"] := "0";
__n64["property"] := __n66;
__n63 := [ __n64 ];
__n59["arguments"] := __n63;
__n58["expression"] := __n59;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n52["consequent"] := __n56;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "BreakStatement";
__n69["label"] := null;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n52["alternate"] := __n67;
__n41 := [ __n42, __n52 ];
__n40["body"] := __n41;
__n39["body"] := __n40;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := true;
__n70["raw"] := "true";
__n39["test"] := __n70;
__n71 := {  };
__n71["type"] := "IfStatement";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "!==";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "__expected";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "length";
__n75["raw"] := "\"length\"";
__n73["property"] := __n75;
__n73["computed"] := true;
__n72["left"] := __n73;
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "__matched";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "length";
__n78["raw"] := "\"length\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n72["right"] := __n76;
__n71["test"] := __n72;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "$ERROR";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "+";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "+";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "#1: __executed = /(?:ab|cd)\\d?/g.exec(\"ab  cd2  ab34  cd\"); __matched.length === ";
__n88["raw"] := "'#1: __executed = /(?:ab|cd)\\\\d?/g.exec(\"ab  cd2  ab34  cd\"); __matched.length === '";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "MemberExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "__expected";
__n89["object"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "length";
__n91["raw"] := "\"length\"";
__n89["property"] := __n91;
__n89["computed"] := true;
__n87["right"] := __n89;
__n86["left"] := __n87;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := ".Actual: ";
__n92["raw"] := "'.Actual: '";
__n86["right"] := __n92;
__n85["left"] := __n86;
__n93 := {  };
__n93["type"] := "MemberExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "__matched";
__n93["object"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "length";
__n95["raw"] := "\"length\"";
__n93["property"] := __n95;
__n93["computed"] := true;
__n85["right"] := __n93;
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n71["consequent"] := __n79;
__n71["alternate"] := null;
__n96 := {  };
__n96["type"] := "ForStatement";
__n97 := {  };
__n97["type"] := "VariableDeclaration";
__n99 := {  };
__n99["type"] := "VariableDeclarator";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "index";
__n99["id"] := __n100;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 0.;
__n101["raw"] := "0";
__n99["init"] := __n101;
__n98 := [ __n99 ];
__n97["declarations"] := __n98;
__n97["kind"] := "var";
__n96["init"] := __n97;
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "<";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "index";
__n102["left"] := __n103;
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "__expected";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "length";
__n106["raw"] := "\"length\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n102["right"] := __n104;
__n96["test"] := __n102;
__n107 := {  };
__n107["type"] := "UpdateExpression";
__n107["operator"] := "++";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "index";
__n107["argument"] := __n108;
__n107["prefix"] := false;
__n96["update"] := __n107;
__n109 := {  };
__n109["type"] := "BlockStatement";
__n111 := {  };
__n111["type"] := "IfStatement";
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "!==";
__n113 := {  };
__n113["type"] := "MemberExpression";
__n113["computed"] := true;
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "__expected";
__n113["object"] := __n114;
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "index";
__n113["property"] := __n115;
__n112["left"] := __n113;
__n116 := {  };
__n116["type"] := "MemberExpression";
__n116["computed"] := true;
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "__matched";
__n116["object"] := __n117;
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "index";
__n116["property"] := __n118;
__n112["right"] := __n116;
__n111["test"] := __n112;
__n119 := {  };
__n119["type"] := "BlockStatement";
__n121 := {  };
__n121["type"] := "ExpressionStatement";
__n122 := {  };
__n122["type"] := "CallExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "$ERROR";
__n122["callee"] := __n123;
__n125 := {  };
__n125["type"] := "BinaryExpression";
__n125["operator"] := "+";
__n126 := {  };
__n126["type"] := "BinaryExpression";
__n126["operator"] := "+";
__n127 := {  };
__n127["type"] := "BinaryExpression";
__n127["operator"] := "+";
__n128 := {  };
__n128["type"] := "BinaryExpression";
__n128["operator"] := "+";
__n129 := {  };
__n129["type"] := "BinaryExpression";
__n129["operator"] := "+";
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "#2: __executed = /(?:ab|cd)\\d?/g.exec(\"ab  cd2  ab34  cd\"); __matched[";
__n130["raw"] := "'#2: __executed = /(?:ab|cd)\\\\d?/g.exec(\"ab  cd2  ab34  cd\"); __matched['";
__n129["left"] := __n130;
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "index";
__n129["right"] := __n131;
__n128["left"] := __n129;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := "] === ";
__n132["raw"] := "'] === '";
__n128["right"] := __n132;
__n127["left"] := __n128;
__n133 := {  };
__n133["type"] := "MemberExpression";
__n133["computed"] := true;
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "__expected";
__n133["object"] := __n134;
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "index";
__n133["property"] := __n135;
__n127["right"] := __n133;
__n126["left"] := __n127;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := ". Actual: ";
__n136["raw"] := "'. Actual: '";
__n126["right"] := __n136;
__n125["left"] := __n126;
__n137 := {  };
__n137["type"] := "MemberExpression";
__n137["computed"] := true;
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "__matched";
__n137["object"] := __n138;
__n139 := {  };
__n139["type"] := "Identifier";
__n139["name"] := "index";
__n137["property"] := __n139;
__n125["right"] := __n137;
__n124 := [ __n125 ];
__n122["arguments"] := __n124;
__n121["expression"] := __n122;
__n120 := [ __n121 ];
__n119["body"] := __n120;
__n111["consequent"] := __n119;
__n111["alternate"] := null;
__n110 := [ __n111 ];
__n109["body"] := __n110;
__n96["body"] := __n109;
__n1 := [ __n2, __n23, __n29, __n39, __n71, __n96 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n140 := [ "__re", "__matched", "__expected", "__executed", "index" ];
__n0["variableDeclarations"] := __n140;
__n141 := [  ];
__n0["functionDeclarations"] := __n141;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}