function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__string";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := true;
__n6["raw"] := "true";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "__re";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "/t[a-b|q-s]/";
__n11["raw"] := "/t[a-b|q-s]/";
__n11["source"] := "t[a-b|q-s]";
__n12 := {  };
__n12["type"] := "RegExp";
__n13 := {  };
__n13["type"] := "Alternative";
__n15 := {  };
__n15["type"] := "Char";
__n15["value"] := "t";
__n15["kind"] := "simple";
__n15["symbol"] := "t";
__n15["codePoint"] := 116.;
__n16 := {  };
__n16["type"] := "CharacterClass";
__n18 := {  };
__n18["type"] := "ClassRange";
__n19 := {  };
__n19["type"] := "Char";
__n19["value"] := "a";
__n19["kind"] := "simple";
__n19["symbol"] := "a";
__n19["codePoint"] := 97.;
__n18["from"] := __n19;
__n20 := {  };
__n20["type"] := "Char";
__n20["value"] := "b";
__n20["kind"] := "simple";
__n20["symbol"] := "b";
__n20["codePoint"] := 98.;
__n18["to"] := __n20;
__n21 := {  };
__n21["type"] := "Char";
__n21["value"] := "|";
__n21["kind"] := "simple";
__n21["symbol"] := "|";
__n21["codePoint"] := 124.;
__n22 := {  };
__n22["type"] := "ClassRange";
__n23 := {  };
__n23["type"] := "Char";
__n23["value"] := "q";
__n23["kind"] := "simple";
__n23["symbol"] := "q";
__n23["codePoint"] := 113.;
__n22["from"] := __n23;
__n24 := {  };
__n24["type"] := "Char";
__n24["value"] := "s";
__n24["kind"] := "simple";
__n24["symbol"] := "s";
__n24["codePoint"] := 115.;
__n22["to"] := __n24;
__n17 := [ __n18, __n21, __n22 ];
__n16["expressions"] := __n17;
__n14 := [ __n15, __n16 ];
__n13["expressions"] := __n14;
__n12["body"] := __n13;
__n12["flags"] := "";
__n12["nCaps"] := 0.;
__n11["regex"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n25 := {  };
__n25["type"] := "IfStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "!==";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "__re";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "test";
__n30["raw"] := "\"test\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "__string";
__n31 := [ __n32 ];
__n27["arguments"] := __n31;
__n26["left"] := __n27;
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "!==";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "__re";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "exec";
__n37["raw"] := "\"exec\"";
__n35["property"] := __n37;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "__string";
__n38 := [ __n39 ];
__n34["arguments"] := __n38;
__n33["left"] := __n34;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 'null;
__n40["raw"] := "\"'null\"";
__n33["right"] := __n40;
__n26["right"] := __n33;
__n25["test"] := __n26;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "$ERROR";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#0: var __string = true;__re = /t[a-b|q-s]/; __re.test(__string) === (__re.exec(__string) !== null)";
__n47["raw"] := "'#0: var __string = true;__re = /t[a-b|q-s]/; __re.test(__string) === (__re.exec(__string) !== null)'";
__n46 := [ __n47 ];
__n44["arguments"] := __n46;
__n43["expression"] := __n44;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n25["consequent"] := __n41;
__n25["alternate"] := null;
__n1 := [ __n2, __n7, __n25 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n48 := [ "__string", "__re" ];
__n0["variableDeclarations"] := __n48;
__n49 := [  ];
__n0["functionDeclarations"] := __n49;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}