function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "set";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Set";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "iterator";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "set";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "entries";
__n16["raw"] := "\"entries\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n17 := [  ];
__n13["arguments"] := __n17;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "result";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "iterator";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "next";
__n25["raw"] := "\"next\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n26 := [  ];
__n22["arguments"] := __n26;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "assert";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "sameValue";
__n31["raw"] := "\"sameValue\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["callee"] := __n29;
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "result";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "value";
__n35["raw"] := "\"value\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "undefined";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "The value of `result.value` is `undefined`";
__n37["raw"] := "\"The value of `result.value` is `undefined`\"";
__n32 := [ __n33, __n36, __n37 ];
__n28["arguments"] := __n32;
__n27["expression"] := __n28;
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "assert";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "sameValue";
__n42["raw"] := "\"sameValue\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "result";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "done";
__n46["raw"] := "\"done\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := true;
__n47["raw"] := "true";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "The value of `result.done` is `true`";
__n48["raw"] := "\"The value of `result.done` is `true`\"";
__n43 := [ __n44, __n47, __n48 ];
__n39["arguments"] := __n43;
__n38["expression"] := __n39;
__n1 := [ __n2, __n9, __n18, __n27, __n38 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n49 := [ "set", "iterator", "result" ];
__n0["variableDeclarations"] := __n49;
__n50 := [  ];
__n0["functionDeclarations"] := __n50;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}