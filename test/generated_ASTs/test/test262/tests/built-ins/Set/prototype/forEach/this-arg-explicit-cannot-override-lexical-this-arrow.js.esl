function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "s";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Set";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "ArrayExpression";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 1.;
__n11["raw"] := "1";
__n10 := [ __n11 ];
__n9["elements"] := __n10;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "usurper";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "ObjectExpression";
__n17 := [  ];
__n16["properties"] := __n17;
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "counter";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 0.;
__n22["raw"] := "0";
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "s";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "forEach";
__n27["raw"] := "\"forEach\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n29 := {  };
__n29["type"] := "ArrowFunctionExpression";
__n29["id"] := null;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "_";
__n30 := [ __n31 ];
__n29["params"] := __n30;
__n32 := {  };
__n32["type"] := "BlockStatement";
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "assert";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "notSameValue";
__n38["raw"] := "\"notSameValue\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "ThisExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "usurper";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "`this` is not `usurper`";
__n42["raw"] := "\"`this` is not `usurper`\"";
__n39 := [ __n40, __n41, __n42 ];
__n35["arguments"] := __n39;
__n34["expression"] := __n35;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "UpdateExpression";
__n44["operator"] := "++";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "counter";
__n44["argument"] := __n45;
__n44["prefix"] := false;
__n43["expression"] := __n44;
__n33 := [ __n34, __n43 ];
__n32["body"] := __n33;
__n29["body"] := __n32;
__n29["generator"] := false;
__n29["expression"] := false;
__n29["async"] := false;
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "usurper";
__n28 := [ __n29, __n46 ];
__n24["arguments"] := __n28;
__n23["expression"] := __n24;
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "assert";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "sameValue";
__n51["raw"] := "\"sameValue\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["callee"] := __n49;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "counter";
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 1.;
__n54["raw"] := "1";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "`forEach` is not a no-op";
__n55["raw"] := "\"`forEach` is not a no-op\"";
__n52 := [ __n53, __n54, __n55 ];
__n48["arguments"] := __n52;
__n47["expression"] := __n48;
__n1 := [ __n2, __n12, __n18, __n23, __n47 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n56 := [ "s", "usurper", "counter" ];
__n0["variableDeclarations"] := __n56;
__n57 := [  ];
__n0["functionDeclarations"] := __n57;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}