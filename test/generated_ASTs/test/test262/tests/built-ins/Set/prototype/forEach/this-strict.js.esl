function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := "use strict";
__n3["raw"] := "\"use strict\"";
__n2["expression"] := __n3;
__n2["directive"] := "use strict";
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "s";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "NewExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Set";
__n8["callee"] := __n9;
__n11 := {  };
__n11["type"] := "ArrayExpression";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 1.;
__n13["raw"] := "1";
__n12 := [ __n13 ];
__n11["elements"] := __n12;
__n10 := [ __n11 ];
__n8["arguments"] := __n10;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n14 := {  };
__n14["type"] := "VariableDeclaration";
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "counter";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 0.;
__n18["raw"] := "0";
__n16["init"] := __n18;
__n15 := [ __n16 ];
__n14["declarations"] := __n15;
__n14["kind"] := "var";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "s";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "forEach";
__n23["raw"] := "\"forEach\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n25 := {  };
__n25["type"] := "FunctionExpression";
__n25["id"] := null;
__n26 := [  ];
__n25["params"] := __n26;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "assert";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "sameValue";
__n33["raw"] := "\"sameValue\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "ThisExpression";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "undefined";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "`this` is `undefined` in strict mode code";
__n37["raw"] := "\"`this` is `undefined` in strict mode code\"";
__n34 := [ __n35, __n36, __n37 ];
__n30["arguments"] := __n34;
__n29["expression"] := __n30;
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "UpdateExpression";
__n39["operator"] := "++";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "counter";
__n39["argument"] := __n40;
__n39["prefix"] := false;
__n38["expression"] := __n39;
__n28 := [ __n29, __n38 ];
__n27["body"] := __n28;
__n41 := [  ];
__n27["variableDeclarations"] := __n41;
__n42 := [  ];
__n27["functionDeclarations"] := __n42;
__n27["codeType"] := "function";
__n27["strict"] := false;
__n25["body"] := __n27;
__n25["generator"] := false;
__n25["async"] := false;
__n25["expression"] := false;
__n24 := [ __n25 ];
__n20["arguments"] := __n24;
__n19["expression"] := __n20;
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "assert";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "sameValue";
__n47["raw"] := "\"sameValue\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["callee"] := __n45;
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "counter";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 1.;
__n50["raw"] := "1";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "`forEach` is not a no-op";
__n51["raw"] := "\"`forEach` is not a no-op\"";
__n48 := [ __n49, __n50, __n51 ];
__n44["arguments"] := __n48;
__n43["expression"] := __n44;
__n1 := [ __n2, __n4, __n14, __n19, __n43 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n52 := [ "s", "counter" ];
__n0["variableDeclarations"] := __n52;
__n53 := [  ];
__n0["functionDeclarations"] := __n53;
__n0["codeType"] := "global";
__n0["strict"] := true;
return ( false, __n0 )
}