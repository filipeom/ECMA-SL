function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "NewExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "Set";
__n9["callee"] := __n10;
__n11 := [  ];
__n9["arguments"] := __n11;
__n8["object"] := __n9;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "size";
__n12["raw"] := "\"size\"";
__n8["property"] := __n12;
__n8["computed"] := true;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 0.;
__n13["raw"] := "0";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "The value of `new Set().size` is `0`";
__n14["raw"] := "\"The value of `new Set().size` is `0`\"";
__n7 := [ __n8, __n13, __n14 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "assert";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "sameValue";
__n19["raw"] := "\"sameValue\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "NewExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Set";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "undefined";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["object"] := __n22;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "size";
__n26["raw"] := "\"size\"";
__n21["property"] := __n26;
__n21["computed"] := true;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 0.;
__n27["raw"] := "0";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "The value of `new Set(undefined).size` is `0`";
__n28["raw"] := "\"The value of `new Set(undefined).size` is `0`\"";
__n20 := [ __n21, __n27, __n28 ];
__n16["arguments"] := __n20;
__n15["expression"] := __n16;
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "assert";
__n31["object"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "sameValue";
__n33["raw"] := "\"sameValue\"";
__n31["property"] := __n33;
__n31["computed"] := true;
__n30["callee"] := __n31;
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "NewExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Set";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 'null;
__n39["raw"] := "\"'null\"";
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["object"] := __n36;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "size";
__n40["raw"] := "\"size\"";
__n35["property"] := __n40;
__n35["computed"] := true;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 0.;
__n41["raw"] := "0";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "The value of `new Set(null).size` is `0`";
__n42["raw"] := "\"The value of `new Set(null).size` is `0`\"";
__n34 := [ __n35, __n41, __n42 ];
__n30["arguments"] := __n34;
__n29["expression"] := __n30;
__n1 := [ __n2, __n15, __n29 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n43 := [  ];
__n0["variableDeclarations"] := __n43;
__n44 := [  ];
__n0["functionDeclarations"] := __n44;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}