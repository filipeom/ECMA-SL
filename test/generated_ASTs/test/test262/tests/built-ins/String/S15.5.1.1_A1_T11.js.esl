function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__str";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "BinaryExpression";
__n9["operator"] := "/";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 1.;
__n10["raw"] := "1";
__n9["left"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 0.;
__n11["raw"] := "0";
__n9["right"] := __n11;
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "IfStatement";
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "!==";
__n14 := {  };
__n14["type"] := "UnaryExpression";
__n14["operator"] := "typeof";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "__str";
__n14["argument"] := __n15;
__n14["prefix"] := true;
__n13["left"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "string";
__n16["raw"] := "\"string\"";
__n13["right"] := __n16;
__n12["test"] := __n13;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "$ERROR";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "+";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "#1: __str = String(1/0); typeof __str === \"string\". Actual: typeof __str ===";
__n24["raw"] := "'#1: __str = String(1/0); typeof __str === \"string\". Actual: typeof __str ==='";
__n23["left"] := __n24;
__n25 := {  };
__n25["type"] := "UnaryExpression";
__n25["operator"] := "typeof";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "__str";
__n25["argument"] := __n26;
__n25["prefix"] := true;
__n23["right"] := __n25;
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n12["consequent"] := __n17;
__n12["alternate"] := null;
__n27 := {  };
__n27["type"] := "IfStatement";
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "!==";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "__str";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "Infinity";
__n30["raw"] := "\"Infinity\"";
__n28["right"] := __n30;
__n27["test"] := __n28;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "$ERROR";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "+";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "#2: __str = String(1/0); __str === \"Infinity\". Actual: __str ===";
__n38["raw"] := "'#2: __str = String(1/0); __str === \"Infinity\". Actual: __str ==='";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "__str";
__n37["right"] := __n39;
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33["expression"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n27["consequent"] := __n31;
__n27["alternate"] := null;
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "AssignmentExpression";
__n41["operator"] := "=";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "__str";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "String";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "/";
__n47 := {  };
__n47["type"] := "UnaryExpression";
__n47["operator"] := "-";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1.;
__n48["raw"] := "1";
__n47["argument"] := __n48;
__n47["prefix"] := true;
__n46["left"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 0.;
__n49["raw"] := "0";
__n46["right"] := __n49;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n41["right"] := __n43;
__n40["expression"] := __n41;
__n50 := {  };
__n50["type"] := "IfStatement";
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "!==";
__n52 := {  };
__n52["type"] := "UnaryExpression";
__n52["operator"] := "typeof";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "__str";
__n52["argument"] := __n53;
__n52["prefix"] := true;
__n51["left"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "string";
__n54["raw"] := "\"string\"";
__n51["right"] := __n54;
__n50["test"] := __n51;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "#3: __str = String(-1/0); typeof __str === \"string\". Actual: typeof __str ===";
__n62["raw"] := "'#3: __str = String(-1/0); typeof __str === \"string\". Actual: typeof __str ==='";
__n61["left"] := __n62;
__n63 := {  };
__n63["type"] := "UnaryExpression";
__n63["operator"] := "typeof";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "__str";
__n63["argument"] := __n64;
__n63["prefix"] := true;
__n61["right"] := __n63;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n50["consequent"] := __n55;
__n50["alternate"] := null;
__n65 := {  };
__n65["type"] := "IfStatement";
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "!==";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "__str";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "-Infinity";
__n68["raw"] := "\"-Infinity\"";
__n66["right"] := __n68;
__n65["test"] := __n66;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "$ERROR";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "+";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "#4: __str = String(-1/0); __str === \"-Infinity\". Actual: __str ===";
__n76["raw"] := "'#4: __str = String(-1/0); __str === \"-Infinity\". Actual: __str ==='";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "__str";
__n75["right"] := __n77;
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n65["consequent"] := __n69;
__n65["alternate"] := null;
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "AssignmentExpression";
__n79["operator"] := "=";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "__str";
__n79["left"] := __n80;
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "String";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "Infinity";
__n83 := [ __n84 ];
__n81["arguments"] := __n83;
__n79["right"] := __n81;
__n78["expression"] := __n79;
__n85 := {  };
__n85["type"] := "IfStatement";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "!==";
__n87 := {  };
__n87["type"] := "UnaryExpression";
__n87["operator"] := "typeof";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "__str";
__n87["argument"] := __n88;
__n87["prefix"] := true;
__n86["left"] := __n87;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "string";
__n89["raw"] := "\"string\"";
__n86["right"] := __n89;
__n85["test"] := __n86;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "$ERROR";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "+";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "#5: __str = String(Infinity); typeof __str === \"string\". Actual: typeof __str ===";
__n97["raw"] := "'#5: __str = String(Infinity); typeof __str === \"string\". Actual: typeof __str ==='";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "UnaryExpression";
__n98["operator"] := "typeof";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "__str";
__n98["argument"] := __n99;
__n98["prefix"] := true;
__n96["right"] := __n98;
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n85["consequent"] := __n90;
__n85["alternate"] := null;
__n100 := {  };
__n100["type"] := "IfStatement";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "!==";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "__str";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "Infinity";
__n103["raw"] := "\"Infinity\"";
__n101["right"] := __n103;
__n100["test"] := __n101;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "$ERROR";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "BinaryExpression";
__n110["operator"] := "+";
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "#6: __str = String(Infinity); __str === \"Infinity\". Actual: __str ===";
__n111["raw"] := "'#6: __str = String(Infinity); __str === \"Infinity\". Actual: __str ==='";
__n110["left"] := __n111;
__n112 := {  };
__n112["type"] := "Identifier";
__n112["name"] := "__str";
__n110["right"] := __n112;
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n105 := [ __n106 ];
__n104["body"] := __n105;
__n100["consequent"] := __n104;
__n100["alternate"] := null;
__n113 := {  };
__n113["type"] := "ExpressionStatement";
__n114 := {  };
__n114["type"] := "AssignmentExpression";
__n114["operator"] := "=";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "__str";
__n114["left"] := __n115;
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "String";
__n116["callee"] := __n117;
__n119 := {  };
__n119["type"] := "UnaryExpression";
__n119["operator"] := "-";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "Infinity";
__n119["argument"] := __n120;
__n119["prefix"] := true;
__n118 := [ __n119 ];
__n116["arguments"] := __n118;
__n114["right"] := __n116;
__n113["expression"] := __n114;
__n121 := {  };
__n121["type"] := "IfStatement";
__n122 := {  };
__n122["type"] := "BinaryExpression";
__n122["operator"] := "!==";
__n123 := {  };
__n123["type"] := "UnaryExpression";
__n123["operator"] := "typeof";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "__str";
__n123["argument"] := __n124;
__n123["prefix"] := true;
__n122["left"] := __n123;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := "string";
__n125["raw"] := "\"string\"";
__n122["right"] := __n125;
__n121["test"] := __n122;
__n126 := {  };
__n126["type"] := "BlockStatement";
__n128 := {  };
__n128["type"] := "ExpressionStatement";
__n129 := {  };
__n129["type"] := "CallExpression";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "$ERROR";
__n129["callee"] := __n130;
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := "+";
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "#7: __str = String(-Infinity); typeof __str === \"string\". Actual: typeof __str ===";
__n133["raw"] := "'#7: __str = String(-Infinity); typeof __str === \"string\". Actual: typeof __str ==='";
__n132["left"] := __n133;
__n134 := {  };
__n134["type"] := "UnaryExpression";
__n134["operator"] := "typeof";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "__str";
__n134["argument"] := __n135;
__n134["prefix"] := true;
__n132["right"] := __n134;
__n131 := [ __n132 ];
__n129["arguments"] := __n131;
__n128["expression"] := __n129;
__n127 := [ __n128 ];
__n126["body"] := __n127;
__n121["consequent"] := __n126;
__n121["alternate"] := null;
__n136 := {  };
__n136["type"] := "IfStatement";
__n137 := {  };
__n137["type"] := "BinaryExpression";
__n137["operator"] := "!==";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "__str";
__n137["left"] := __n138;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "-Infinity";
__n139["raw"] := "\"-Infinity\"";
__n137["right"] := __n139;
__n136["test"] := __n137;
__n140 := {  };
__n140["type"] := "BlockStatement";
__n142 := {  };
__n142["type"] := "ExpressionStatement";
__n143 := {  };
__n143["type"] := "CallExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "$ERROR";
__n143["callee"] := __n144;
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "+";
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "#8: __str = String(-Infinity); __str === \"-Infinity\". Actual: __str ===";
__n147["raw"] := "'#8: __str = String(-Infinity); __str === \"-Infinity\". Actual: __str ==='";
__n146["left"] := __n147;
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "__str";
__n146["right"] := __n148;
__n145 := [ __n146 ];
__n143["arguments"] := __n145;
__n142["expression"] := __n143;
__n141 := [ __n142 ];
__n140["body"] := __n141;
__n136["consequent"] := __n140;
__n136["alternate"] := null;
__n149 := {  };
__n149["type"] := "ExpressionStatement";
__n150 := {  };
__n150["type"] := "AssignmentExpression";
__n150["operator"] := "=";
__n151 := {  };
__n151["type"] := "Identifier";
__n151["name"] := "__str";
__n150["left"] := __n151;
__n152 := {  };
__n152["type"] := "CallExpression";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "String";
__n152["callee"] := __n153;
__n155 := {  };
__n155["type"] := "MemberExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "Number";
__n155["object"] := __n156;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := "POSITIVE_INFINITY";
__n157["raw"] := "\"POSITIVE_INFINITY\"";
__n155["property"] := __n157;
__n155["computed"] := true;
__n154 := [ __n155 ];
__n152["arguments"] := __n154;
__n150["right"] := __n152;
__n149["expression"] := __n150;
__n158 := {  };
__n158["type"] := "IfStatement";
__n159 := {  };
__n159["type"] := "BinaryExpression";
__n159["operator"] := "!==";
__n160 := {  };
__n160["type"] := "UnaryExpression";
__n160["operator"] := "typeof";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "__str";
__n160["argument"] := __n161;
__n160["prefix"] := true;
__n159["left"] := __n160;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := "string";
__n162["raw"] := "\"string\"";
__n159["right"] := __n162;
__n158["test"] := __n159;
__n163 := {  };
__n163["type"] := "BlockStatement";
__n165 := {  };
__n165["type"] := "ExpressionStatement";
__n166 := {  };
__n166["type"] := "CallExpression";
__n167 := {  };
__n167["type"] := "Identifier";
__n167["name"] := "$ERROR";
__n166["callee"] := __n167;
__n169 := {  };
__n169["type"] := "BinaryExpression";
__n169["operator"] := "+";
__n170 := {  };
__n170["type"] := "Literal";
__n170["value"] := "#9: __str = String(Number.POSITIVE_INFINITY); typeof __str === \"string\". Actual: typeof __str ===";
__n170["raw"] := "'#9: __str = String(Number.POSITIVE_INFINITY); typeof __str === \"string\". Actual: typeof __str ==='";
__n169["left"] := __n170;
__n171 := {  };
__n171["type"] := "UnaryExpression";
__n171["operator"] := "typeof";
__n172 := {  };
__n172["type"] := "Identifier";
__n172["name"] := "__str";
__n171["argument"] := __n172;
__n171["prefix"] := true;
__n169["right"] := __n171;
__n168 := [ __n169 ];
__n166["arguments"] := __n168;
__n165["expression"] := __n166;
__n164 := [ __n165 ];
__n163["body"] := __n164;
__n158["consequent"] := __n163;
__n158["alternate"] := null;
__n173 := {  };
__n173["type"] := "IfStatement";
__n174 := {  };
__n174["type"] := "BinaryExpression";
__n174["operator"] := "!==";
__n175 := {  };
__n175["type"] := "Identifier";
__n175["name"] := "__str";
__n174["left"] := __n175;
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := "Infinity";
__n176["raw"] := "\"Infinity\"";
__n174["right"] := __n176;
__n173["test"] := __n174;
__n177 := {  };
__n177["type"] := "BlockStatement";
__n179 := {  };
__n179["type"] := "ExpressionStatement";
__n180 := {  };
__n180["type"] := "CallExpression";
__n181 := {  };
__n181["type"] := "Identifier";
__n181["name"] := "$ERROR";
__n180["callee"] := __n181;
__n183 := {  };
__n183["type"] := "BinaryExpression";
__n183["operator"] := "+";
__n184 := {  };
__n184["type"] := "Literal";
__n184["value"] := "#10: __str = String(Number.POSITIVE_INFINITY); __str === \"Infinity\". Actual: __str ===";
__n184["raw"] := "'#10: __str = String(Number.POSITIVE_INFINITY); __str === \"Infinity\". Actual: __str ==='";
__n183["left"] := __n184;
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "__str";
__n183["right"] := __n185;
__n182 := [ __n183 ];
__n180["arguments"] := __n182;
__n179["expression"] := __n180;
__n178 := [ __n179 ];
__n177["body"] := __n178;
__n173["consequent"] := __n177;
__n173["alternate"] := null;
__n186 := {  };
__n186["type"] := "ExpressionStatement";
__n187 := {  };
__n187["type"] := "AssignmentExpression";
__n187["operator"] := "=";
__n188 := {  };
__n188["type"] := "Identifier";
__n188["name"] := "__str";
__n187["left"] := __n188;
__n189 := {  };
__n189["type"] := "CallExpression";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "String";
__n189["callee"] := __n190;
__n192 := {  };
__n192["type"] := "MemberExpression";
__n193 := {  };
__n193["type"] := "Identifier";
__n193["name"] := "Number";
__n192["object"] := __n193;
__n194 := {  };
__n194["type"] := "Literal";
__n194["value"] := "NEGATIVE_INFINITY";
__n194["raw"] := "\"NEGATIVE_INFINITY\"";
__n192["property"] := __n194;
__n192["computed"] := true;
__n191 := [ __n192 ];
__n189["arguments"] := __n191;
__n187["right"] := __n189;
__n186["expression"] := __n187;
__n195 := {  };
__n195["type"] := "IfStatement";
__n196 := {  };
__n196["type"] := "BinaryExpression";
__n196["operator"] := "!==";
__n197 := {  };
__n197["type"] := "UnaryExpression";
__n197["operator"] := "typeof";
__n198 := {  };
__n198["type"] := "Identifier";
__n198["name"] := "__str";
__n197["argument"] := __n198;
__n197["prefix"] := true;
__n196["left"] := __n197;
__n199 := {  };
__n199["type"] := "Literal";
__n199["value"] := "string";
__n199["raw"] := "\"string\"";
__n196["right"] := __n199;
__n195["test"] := __n196;
__n200 := {  };
__n200["type"] := "BlockStatement";
__n202 := {  };
__n202["type"] := "ExpressionStatement";
__n203 := {  };
__n203["type"] := "CallExpression";
__n204 := {  };
__n204["type"] := "Identifier";
__n204["name"] := "$ERROR";
__n203["callee"] := __n204;
__n206 := {  };
__n206["type"] := "BinaryExpression";
__n206["operator"] := "+";
__n207 := {  };
__n207["type"] := "Literal";
__n207["value"] := "#11: __str = String(Number.NEGATIVE_INFINITY); typeof __str === \"string\". Actual: typeof __str ===";
__n207["raw"] := "'#11: __str = String(Number.NEGATIVE_INFINITY); typeof __str === \"string\". Actual: typeof __str ==='";
__n206["left"] := __n207;
__n208 := {  };
__n208["type"] := "UnaryExpression";
__n208["operator"] := "typeof";
__n209 := {  };
__n209["type"] := "Identifier";
__n209["name"] := "__str";
__n208["argument"] := __n209;
__n208["prefix"] := true;
__n206["right"] := __n208;
__n205 := [ __n206 ];
__n203["arguments"] := __n205;
__n202["expression"] := __n203;
__n201 := [ __n202 ];
__n200["body"] := __n201;
__n195["consequent"] := __n200;
__n195["alternate"] := null;
__n210 := {  };
__n210["type"] := "IfStatement";
__n211 := {  };
__n211["type"] := "BinaryExpression";
__n211["operator"] := "!==";
__n212 := {  };
__n212["type"] := "Identifier";
__n212["name"] := "__str";
__n211["left"] := __n212;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := "-Infinity";
__n213["raw"] := "\"-Infinity\"";
__n211["right"] := __n213;
__n210["test"] := __n211;
__n214 := {  };
__n214["type"] := "BlockStatement";
__n216 := {  };
__n216["type"] := "ExpressionStatement";
__n217 := {  };
__n217["type"] := "CallExpression";
__n218 := {  };
__n218["type"] := "Identifier";
__n218["name"] := "$ERROR";
__n217["callee"] := __n218;
__n220 := {  };
__n220["type"] := "BinaryExpression";
__n220["operator"] := "+";
__n221 := {  };
__n221["type"] := "Literal";
__n221["value"] := "#12: __str = String(Number.NEGATIVE_INFINITY); __str === \"-Infinity\". Actual: __str ===";
__n221["raw"] := "'#12: __str = String(Number.NEGATIVE_INFINITY); __str === \"-Infinity\". Actual: __str ==='";
__n220["left"] := __n221;
__n222 := {  };
__n222["type"] := "Identifier";
__n222["name"] := "__str";
__n220["right"] := __n222;
__n219 := [ __n220 ];
__n217["arguments"] := __n219;
__n216["expression"] := __n217;
__n215 := [ __n216 ];
__n214["body"] := __n215;
__n210["consequent"] := __n214;
__n210["alternate"] := null;
__n1 := [ __n2, __n12, __n27, __n40, __n50, __n65, __n78, __n85, __n100, __n113, __n121, __n136, __n149, __n158, __n173, __n186, __n195, __n210 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n223 := [ "__str" ];
__n0["variableDeclarations"] := __n223;
__n224 := [  ];
__n0["functionDeclarations"] := __n224;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}