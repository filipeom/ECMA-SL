function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x1";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "abc";
__n6["raw"] := "\"abc\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "IfStatement";
__n8 := {  };
__n8["type"] := "BinaryExpression";
__n8["operator"] := "!==";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "String";
__n9["callee"] := __n10;
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "x1";
__n11 := [ __n12 ];
__n9["arguments"] := __n11;
__n8["left"] := __n9;
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "x1";
__n8["right"] := __n13;
__n7["test"] := __n8;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "$ERROR";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "+";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "#1: String(\"abc\") === \"abc\". Actual: ";
__n21["raw"] := "'#1: String(\"abc\") === \"abc\". Actual: '";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "String";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "abc";
__n25["raw"] := "\"abc\"";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n20["right"] := __n22;
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n16["expression"] := __n17;
__n15 := [ __n16 ];
__n14["body"] := __n15;
__n7["consequent"] := __n14;
__n7["alternate"] := null;
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "x2";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "abc";
__n30["raw"] := "\"abc\"";
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n31 := {  };
__n31["type"] := "IfStatement";
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "!==";
__n33 := {  };
__n33["type"] := "UnaryExpression";
__n33["operator"] := "typeof";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "String";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "x2";
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33["argument"] := __n34;
__n33["prefix"] := true;
__n32["left"] := __n33;
__n38 := {  };
__n38["type"] := "UnaryExpression";
__n38["operator"] := "typeof";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "x2";
__n38["argument"] := __n39;
__n38["prefix"] := true;
__n32["right"] := __n38;
__n31["test"] := __n32;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "+";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#2: typeof String(\"abc\") === \"string\". Actual: ";
__n47["raw"] := "'#2: typeof String(\"abc\") === \"string\". Actual: '";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "UnaryExpression";
__n48["operator"] := "typeof";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "String";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "abc";
__n52["raw"] := "\"abc\"";
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["argument"] := __n49;
__n48["prefix"] := true;
__n46["right"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n31["consequent"] := __n40;
__n31["alternate"] := null;
__n1 := [ __n2, __n7, __n26, __n31 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n53 := [ "x1", "x2" ];
__n0["variableDeclarations"] := __n53;
__n54 := [  ];
__n0["functionDeclarations"] := __n54;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}