function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "TEST_STRING";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
__n9["raw"] := "\" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "ForStatement";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "k";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 0.;
__n15["raw"] := "0";
__n13["init"] := __n15;
__n16 := {  };
__n16["type"] := "VariableDeclarator";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "i";
__n16["id"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 32.;
__n18["raw"] := "0x0020";
__n16["init"] := __n18;
__n12 := [ __n13, __n16 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n10["init"] := __n11;
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "<";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "i";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 125.;
__n21["raw"] := "0x007d";
__n19["right"] := __n21;
__n10["test"] := __n19;
__n22 := {  };
__n22["type"] := "SequenceExpression";
__n24 := {  };
__n24["type"] := "UpdateExpression";
__n24["operator"] := "++";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "i";
__n24["argument"] := __n25;
__n24["prefix"] := false;
__n26 := {  };
__n26["type"] := "UpdateExpression";
__n26["operator"] := "++";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "k";
__n26["argument"] := __n27;
__n26["prefix"] := false;
__n23 := [ __n24, __n26 ];
__n22["expressions"] := __n23;
__n10["update"] := __n22;
__n28 := {  };
__n28["type"] := "BlockStatement";
__n30 := {  };
__n30["type"] := "IfStatement";
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "!==";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "TEST_STRING";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "indexOf";
__n35["raw"] := "\"indexOf\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "+";
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "+";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "String";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "fromCharCode";
__n42["raw"] := "\"fromCharCode\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "i";
__n43 := [ __n44 ];
__n39["arguments"] := __n43;
__n38["left"] := __n39;
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "String";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "fromCharCode";
__n48["raw"] := "\"fromCharCode\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["callee"] := __n46;
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "+";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "i";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 1.;
__n52["raw"] := "1";
__n50["right"] := __n52;
__n49 := [ __n50 ];
__n45["arguments"] := __n49;
__n38["right"] := __n45;
__n37["left"] := __n38;
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "String";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "fromCharCode";
__n56["raw"] := "\"fromCharCode\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n53["callee"] := __n54;
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "+";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "i";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 2.;
__n60["raw"] := "2";
__n58["right"] := __n60;
__n57 := [ __n58 ];
__n53["arguments"] := __n57;
__n37["right"] := __n53;
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "k";
__n36 := [ __n37, __n61 ];
__n32["arguments"] := __n36;
__n31["left"] := __n32;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "k";
__n31["right"] := __n62;
__n30["test"] := __n31;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$ERROR";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "+";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "+";
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "+";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "+";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "+";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "+";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "+";
__n76 := {  };
__n76["type"] := "BinaryExpression";
__n76["operator"] := "+";
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "+";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "+";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "+";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "+";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "#";
__n82["raw"] := "'#'";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "-";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "i";
__n83["left"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := 32.;
__n85["raw"] := "0x0020";
__n83["right"] := __n85;
__n81["right"] := __n83;
__n80["left"] := __n81;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := ": TEST_STRING.indexOf( (String.fromCharCode(";
__n86["raw"] := "': TEST_STRING.indexOf( (String.fromCharCode('";
__n80["right"] := __n86;
__n79["left"] := __n80;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "i";
__n79["right"] := __n87;
__n78["left"] := __n79;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := ")+ String.fromCharCode(";
__n88["raw"] := "')+ String.fromCharCode('";
__n78["right"] := __n88;
__n77["left"] := __n78;
__n89 := {  };
__n89["type"] := "BinaryExpression";
__n89["operator"] := "+";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "i";
__n89["left"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 1.;
__n91["raw"] := "1";
__n89["right"] := __n91;
__n77["right"] := __n89;
__n76["left"] := __n77;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := ") + String.fromCharCode(";
__n92["raw"] := "') + String.fromCharCode('";
__n76["right"] := __n92;
__n75["left"] := __n76;
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "+";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "i";
__n93["left"] := __n94;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 2.;
__n95["raw"] := "2";
__n93["right"] := __n95;
__n75["right"] := __n93;
__n74["left"] := __n75;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := ")), ";
__n96["raw"] := "')), '";
__n74["right"] := __n96;
__n73["left"] := __n74;
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "k";
__n73["right"] := __n97;
__n72["left"] := __n73;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := " )===";
__n98["raw"] := "' )==='";
__n72["right"] := __n98;
__n71["left"] := __n72;
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "k";
__n71["right"] := __n99;
__n70["left"] := __n71;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := ". Actual: ";
__n100["raw"] := "'. Actual: '";
__n70["right"] := __n100;
__n69["left"] := __n70;
__n101 := {  };
__n101["type"] := "CallExpression";
__n102 := {  };
__n102["type"] := "MemberExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "TEST_STRING";
__n102["object"] := __n103;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "indexOf";
__n104["raw"] := "\"indexOf\"";
__n102["property"] := __n104;
__n102["computed"] := true;
__n101["callee"] := __n102;
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := "+";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "+";
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "String";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "fromCharCode";
__n111["raw"] := "\"fromCharCode\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n108["callee"] := __n109;
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "i";
__n112 := [ __n113 ];
__n108["arguments"] := __n112;
__n107["left"] := __n108;
__n114 := {  };
__n114["type"] := "CallExpression";
__n115 := {  };
__n115["type"] := "MemberExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "String";
__n115["object"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "fromCharCode";
__n117["raw"] := "\"fromCharCode\"";
__n115["property"] := __n117;
__n115["computed"] := true;
__n114["callee"] := __n115;
__n119 := {  };
__n119["type"] := "BinaryExpression";
__n119["operator"] := "+";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "i";
__n119["left"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := 1.;
__n121["raw"] := "1";
__n119["right"] := __n121;
__n118 := [ __n119 ];
__n114["arguments"] := __n118;
__n107["right"] := __n114;
__n106["left"] := __n107;
__n122 := {  };
__n122["type"] := "CallExpression";
__n123 := {  };
__n123["type"] := "MemberExpression";
__n124 := {  };
__n124["type"] := "Identifier";
__n124["name"] := "String";
__n123["object"] := __n124;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := "fromCharCode";
__n125["raw"] := "\"fromCharCode\"";
__n123["property"] := __n125;
__n123["computed"] := true;
__n122["callee"] := __n123;
__n127 := {  };
__n127["type"] := "BinaryExpression";
__n127["operator"] := "+";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "i";
__n127["left"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := 2.;
__n129["raw"] := "2";
__n127["right"] := __n129;
__n126 := [ __n127 ];
__n122["arguments"] := __n126;
__n106["right"] := __n122;
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "k";
__n105 := [ __n106, __n130 ];
__n101["arguments"] := __n105;
__n69["right"] := __n101;
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n30["consequent"] := __n63;
__n30["alternate"] := null;
__n29 := [ __n30 ];
__n28["body"] := __n29;
__n10["body"] := __n28;
__n1 := [ __n2, __n10 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n131 := [ "TEST_STRING", "k", "i" ];
__n0["variableDeclarations"] := __n131;
__n132 := [  ];
__n0["functionDeclarations"] := __n132;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}