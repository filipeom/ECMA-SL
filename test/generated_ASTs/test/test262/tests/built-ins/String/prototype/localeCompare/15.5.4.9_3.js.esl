function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "thisValues";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "a";
__n8["raw"] := "\"a\"";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "t";
__n9["raw"] := "\"t\"";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "u";
__n10["raw"] := "\"u\"";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "undefined";
__n11["raw"] := "\"undefined\"";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "UNDEFINED";
__n12["raw"] := "\"UNDEFINED\"";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "nicht definiert";
__n13["raw"] := "\"nicht definiert\"";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "xyz";
__n14["raw"] := "\"xyz\"";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "未定义";
__n15["raw"] := "\"未定义\"";
__n7 := [ __n8, __n9, __n10, __n11, __n12, __n13, __n14, __n15 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n16 := {  };
__n16["type"] := "VariableDeclaration";
__n18 := {  };
__n18["type"] := "VariableDeclarator";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "i";
__n18["id"] := __n19;
__n18["init"] := null;
__n17 := [ __n18 ];
__n16["declarations"] := __n17;
__n16["kind"] := "var";
__n20 := {  };
__n20["type"] := "ForStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "=";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "i";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 0.;
__n23["raw"] := "0";
__n21["right"] := __n23;
__n20["init"] := __n21;
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "<";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "i";
__n24["left"] := __n25;
__n26 := {  };
__n26["type"] := "MemberExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "thisValues";
__n26["object"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "length";
__n28["raw"] := "\"length\"";
__n26["property"] := __n28;
__n26["computed"] := true;
__n24["right"] := __n26;
__n20["test"] := __n24;
__n29 := {  };
__n29["type"] := "UpdateExpression";
__n29["operator"] := "++";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "i";
__n29["argument"] := __n30;
__n29["prefix"] := false;
__n20["update"] := __n29;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "VariableDeclaration";
__n35 := {  };
__n35["type"] := "VariableDeclarator";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "thisValue";
__n35["id"] := __n36;
__n37 := {  };
__n37["type"] := "MemberExpression";
__n37["computed"] := true;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "thisValues";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "i";
__n37["property"] := __n39;
__n35["init"] := __n37;
__n34 := [ __n35 ];
__n33["declarations"] := __n34;
__n33["kind"] := "var";
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "!==";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "thisValue";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "localeCompare";
__n45["raw"] := "\"localeCompare\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n46 := [  ];
__n42["arguments"] := __n46;
__n41["left"] := __n42;
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "thisValue";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "localeCompare";
__n50["raw"] := "\"localeCompare\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n47["callee"] := __n48;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "undefined";
__n51 := [ __n52 ];
__n47["arguments"] := __n51;
__n41["right"] := __n47;
__n40["test"] := __n41;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "$ERROR";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "String.prototype.localeCompare does not treat missing 'that' argument as undefined.";
__n59["raw"] := "\"String.prototype.localeCompare does not treat missing 'that' argument as undefined.\"";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n40["consequent"] := __n53;
__n40["alternate"] := null;
__n60 := {  };
__n60["type"] := "IfStatement";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "!==";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "thisValue";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "localeCompare";
__n65["raw"] := "\"localeCompare\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["callee"] := __n63;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "undefined";
__n66 := [ __n67 ];
__n62["arguments"] := __n66;
__n61["left"] := __n62;
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "MemberExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "thisValue";
__n69["object"] := __n70;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "localeCompare";
__n71["raw"] := "\"localeCompare\"";
__n69["property"] := __n71;
__n69["computed"] := true;
__n68["callee"] := __n69;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "undefined";
__n73["raw"] := "\"undefined\"";
__n72 := [ __n73 ];
__n68["arguments"] := __n72;
__n61["right"] := __n68;
__n60["test"] := __n61;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "$ERROR";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "String.prototype.localeCompare does not treat undefined 'that' argument as \"undefined\".";
__n80["raw"] := "\"String.prototype.localeCompare does not treat undefined 'that' argument as \\\"undefined\\\".\"";
__n79 := [ __n80 ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n60["consequent"] := __n74;
__n60["alternate"] := null;
__n32 := [ __n33, __n40, __n60 ];
__n31["body"] := __n32;
__n20["body"] := __n31;
__n1 := [ __n2, __n16, __n20 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n81 := [ "thisValues", "i", "thisValue" ];
__n0["variableDeclarations"] := __n81;
__n82 := [  ];
__n0["functionDeclarations"] := __n82;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}