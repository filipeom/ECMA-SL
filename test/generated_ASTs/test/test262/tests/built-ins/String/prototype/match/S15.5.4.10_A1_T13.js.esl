function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "toString";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ReturnStatement";
__n15 := {  };
__n15["type"] := "ObjectExpression";
__n16 := [  ];
__n15["properties"] := __n16;
__n14["argument"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n17 := [  ];
__n12["variableDeclarations"] := __n17;
__n18 := [  ];
__n12["functionDeclarations"] := __n18;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n19 := {  };
__n19["type"] := "Property";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "valueOf";
__n19["key"] := __n20;
__n21 := {  };
__n21["type"] := "FunctionExpression";
__n21["id"] := null;
__n22 := [  ];
__n21["params"] := __n22;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ReturnStatement";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 1.;
__n26["raw"] := "1";
__n25["argument"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n27 := [  ];
__n23["variableDeclarations"] := __n27;
__n28 := [  ];
__n23["functionDeclarations"] := __n28;
__n23["codeType"] := "function";
__n23["strict"] := false;
__n21["body"] := __n23;
__n21["generator"] := false;
__n21["async"] := false;
__n21["expression"] := false;
__n19["value"] := __n21;
__n19["computed"] := false;
__n19["kind"] := "init";
__n19["shorthand"] := false;
__n7 := [ __n8, __n19 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n29 := {  };
__n29["type"] := "IfStatement";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "!==";
__n31 := {  };
__n31["type"] := "MemberExpression";
__n31["computed"] := true;
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "ABBAB1ABAB1BBAA";
__n34["raw"] := "\"ABB\\u0041B\\u0031ABAB\\u0031BBAA\"";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "match";
__n35["raw"] := "\"match\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "__obj";
__n36 := [ __n37 ];
__n32["arguments"] := __n36;
__n31["object"] := __n32;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 0.;
__n38["raw"] := "0";
__n31["property"] := __n38;
__n30["left"] := __n31;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "1";
__n39["raw"] := "\"1\"";
__n30["right"] := __n39;
__n29["test"] := __n30;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "$ERROR";
__n43["callee"] := __n44;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "+";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "#1: var __obj = {toString:function(){return {};},valueOf:function(){return 1;}}; \"ABB\\u0041B\\u0031ABAB\\u0031BBAA\".match(__obj)[0] ===\"1\". Actual: ";
__n47["raw"] := "'#1: var __obj = {toString:function(){return {};},valueOf:function(){return 1;}}; \"ABB\\\\u0041B\\\\u0031ABAB\\\\u0031BBAA\".match(__obj)[0] ===\"1\". Actual: '";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "MemberExpression";
__n48["computed"] := true;
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "ABBAB1ABAB1BBAA";
__n51["raw"] := "\"ABB\\u0041B\\u0031ABAB\\u0031BBAA\"";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "match";
__n52["raw"] := "\"match\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n49["callee"] := __n50;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "__obj";
__n53 := [ __n54 ];
__n49["arguments"] := __n53;
__n48["object"] := __n49;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 0.;
__n55["raw"] := "0";
__n48["property"] := __n55;
__n46["right"] := __n48;
__n45 := [ __n46 ];
__n43["arguments"] := __n45;
__n42["expression"] := __n43;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n29["consequent"] := __n40;
__n29["alternate"] := null;
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "!==";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "CallExpression";
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "ABBAB1ABAB1BBAA";
__n61["raw"] := "\"ABB\\u0041B\\u0031ABAB\\u0031BBAA\"";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "match";
__n62["raw"] := "\"match\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n59["callee"] := __n60;
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "__obj";
__n63 := [ __n64 ];
__n59["arguments"] := __n63;
__n58["object"] := __n59;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "length";
__n65["raw"] := "\"length\"";
__n58["property"] := __n65;
__n58["computed"] := true;
__n57["left"] := __n58;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 1.;
__n66["raw"] := "1";
__n57["right"] := __n66;
__n56["test"] := __n57;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "+";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "#3: var __obj = {toString:function(){return {};},valueOf:function(){return 1;}}; \"ABB\\u0041B\\u0031ABAB\\u0031BBAA\".match(__obj).length === 1. Actual: ";
__n74["raw"] := "'#3: var __obj = {toString:function(){return {};},valueOf:function(){return 1;}}; \"ABB\\\\u0041B\\\\u0031ABAB\\\\u0031BBAA\".match(__obj).length === 1. Actual: '";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "CallExpression";
__n77 := {  };
__n77["type"] := "MemberExpression";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "ABBAB1ABAB1BBAA";
__n78["raw"] := "\"ABB\\u0041B\\u0031ABAB\\u0031BBAA\"";
__n77["object"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "match";
__n79["raw"] := "\"match\"";
__n77["property"] := __n79;
__n77["computed"] := true;
__n76["callee"] := __n77;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "__obj";
__n80 := [ __n81 ];
__n76["arguments"] := __n80;
__n75["object"] := __n76;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "length";
__n82["raw"] := "\"length\"";
__n75["property"] := __n82;
__n75["computed"] := true;
__n73["right"] := __n75;
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n56["consequent"] := __n67;
__n56["alternate"] := null;
__n1 := [ __n2, __n29, __n56 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n83 := [ "__obj" ];
__n0["variableDeclarations"] := __n83;
__n84 := [  ];
__n0["functionDeclarations"] := __n84;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}