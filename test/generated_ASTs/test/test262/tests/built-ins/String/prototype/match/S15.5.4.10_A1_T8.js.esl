function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__obj";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "toString";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "FunctionExpression";
__n10["id"] := null;
__n11 := [  ];
__n10["params"] := __n11;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n13 := [  ];
__n12["body"] := __n13;
__n14 := [  ];
__n12["variableDeclarations"] := __n14;
__n15 := [  ];
__n12["functionDeclarations"] := __n15;
__n12["codeType"] := "function";
__n12["strict"] := false;
__n10["body"] := __n12;
__n10["generator"] := false;
__n10["async"] := false;
__n10["expression"] := false;
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n16 := {  };
__n16["type"] := "VariableDeclaration";
__n18 := {  };
__n18["type"] := "VariableDeclarator";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "__matched";
__n18["id"] := __n19;
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "String";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "__obj";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["object"] := __n22;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "match";
__n26["raw"] := "\"match\"";
__n21["property"] := __n26;
__n21["computed"] := true;
__n20["callee"] := __n21;
__n28 := {  };
__n28["type"] := "UnaryExpression";
__n28["operator"] := "void";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 0.;
__n29["raw"] := "0";
__n28["argument"] := __n29;
__n28["prefix"] := true;
__n27 := [ __n28 ];
__n20["arguments"] := __n27;
__n18["init"] := __n20;
__n17 := [ __n18 ];
__n16["declarations"] := __n17;
__n16["kind"] := "var";
__n30 := {  };
__n30["type"] := "VariableDeclaration";
__n32 := {  };
__n32["type"] := "VariableDeclarator";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "__expected";
__n32["id"] := __n33;
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "RegExp";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "UnaryExpression";
__n39["operator"] := "void";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 0.;
__n40["raw"] := "0";
__n39["argument"] := __n40;
__n39["prefix"] := true;
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n35["object"] := __n36;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "exec";
__n41["raw"] := "\"exec\"";
__n35["property"] := __n41;
__n35["computed"] := true;
__n34["callee"] := __n35;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "undefined";
__n43["raw"] := "\"undefined\"";
__n42 := [ __n43 ];
__n34["arguments"] := __n42;
__n32["init"] := __n34;
__n31 := [ __n32 ];
__n30["declarations"] := __n31;
__n30["kind"] := "var";
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "__matched";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "length";
__n48["raw"] := "\"length\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["left"] := __n46;
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "__expected";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "length";
__n51["raw"] := "\"length\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n45["right"] := __n49;
__n44["test"] := __n45;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "+";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#1: __obj = {toString:function(){}}; __matched = String(__obj).match(void 0); __expected = RegExp(void 0).exec(\"undefined\"); __matched.length === __expected.length. Actual: ";
__n59["raw"] := "'#1: __obj = {toString:function(){}}; __matched = String(__obj).match(void 0); __expected = RegExp(void 0).exec(\"undefined\"); __matched.length === __expected.length. Actual: '";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "MemberExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "__matched";
__n60["object"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "length";
__n62["raw"] := "\"length\"";
__n60["property"] := __n62;
__n60["computed"] := true;
__n58["right"] := __n60;
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n44["consequent"] := __n52;
__n44["alternate"] := null;
__n63 := {  };
__n63["type"] := "IfStatement";
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "!==";
__n65 := {  };
__n65["type"] := "MemberExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "__matched";
__n65["object"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "index";
__n67["raw"] := "\"index\"";
__n65["property"] := __n67;
__n65["computed"] := true;
__n64["left"] := __n65;
__n68 := {  };
__n68["type"] := "MemberExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "__expected";
__n68["object"] := __n69;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "index";
__n70["raw"] := "\"index\"";
__n68["property"] := __n70;
__n68["computed"] := true;
__n64["right"] := __n68;
__n63["test"] := __n64;
__n71 := {  };
__n71["type"] := "BlockStatement";
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "$ERROR";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "+";
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "#2: __obj = {toString:function(){}}; __matched = String(__obj).match(void 0); __expected = RegExp(void 0).exec(\"undefined\"); __matched.index === __expected.index. Actual: ";
__n78["raw"] := "'#2: __obj = {toString:function(){}}; __matched = String(__obj).match(void 0); __expected = RegExp(void 0).exec(\"undefined\"); __matched.index === __expected.index. Actual: '";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "__matched";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "index";
__n81["raw"] := "\"index\"";
__n79["property"] := __n81;
__n79["computed"] := true;
__n77["right"] := __n79;
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n72 := [ __n73 ];
__n71["body"] := __n72;
__n63["consequent"] := __n71;
__n63["alternate"] := null;
__n82 := {  };
__n82["type"] := "IfStatement";
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "!==";
__n84 := {  };
__n84["type"] := "MemberExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "__matched";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "input";
__n86["raw"] := "\"input\"";
__n84["property"] := __n86;
__n84["computed"] := true;
__n83["left"] := __n84;
__n87 := {  };
__n87["type"] := "MemberExpression";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "__expected";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "input";
__n89["raw"] := "\"input\"";
__n87["property"] := __n89;
__n87["computed"] := true;
__n83["right"] := __n87;
__n82["test"] := __n83;
__n90 := {  };
__n90["type"] := "BlockStatement";
__n92 := {  };
__n92["type"] := "ExpressionStatement";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "$ERROR";
__n93["callee"] := __n94;
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "+";
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "#3: __obj = {toString:function(){}}; __matched = String(__obj).match(void 0); __expected = RegExp(void 0).exec(\"undefined\"); __matched.input === __expected.input. Actual: ";
__n97["raw"] := "'#3: __obj = {toString:function(){}}; __matched = String(__obj).match(void 0); __expected = RegExp(void 0).exec(\"undefined\"); __matched.input === __expected.input. Actual: '";
__n96["left"] := __n97;
__n98 := {  };
__n98["type"] := "MemberExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "__matched";
__n98["object"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "input";
__n100["raw"] := "\"input\"";
__n98["property"] := __n100;
__n98["computed"] := true;
__n96["right"] := __n98;
__n95 := [ __n96 ];
__n93["arguments"] := __n95;
__n92["expression"] := __n93;
__n91 := [ __n92 ];
__n90["body"] := __n91;
__n82["consequent"] := __n90;
__n82["alternate"] := null;
__n101 := {  };
__n101["type"] := "ForStatement";
__n102 := {  };
__n102["type"] := "VariableDeclaration";
__n104 := {  };
__n104["type"] := "VariableDeclarator";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "index";
__n104["id"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 0.;
__n106["raw"] := "0";
__n104["init"] := __n106;
__n103 := [ __n104 ];
__n102["declarations"] := __n103;
__n102["kind"] := "var";
__n101["init"] := __n102;
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "<";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "index";
__n107["left"] := __n108;
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "__expected";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "length";
__n111["raw"] := "\"length\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n107["right"] := __n109;
__n101["test"] := __n107;
__n112 := {  };
__n112["type"] := "UpdateExpression";
__n112["operator"] := "++";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "index";
__n112["argument"] := __n113;
__n112["prefix"] := false;
__n101["update"] := __n112;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n116 := {  };
__n116["type"] := "IfStatement";
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "!==";
__n118 := {  };
__n118["type"] := "MemberExpression";
__n118["computed"] := true;
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "__matched";
__n118["object"] := __n119;
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "index";
__n118["property"] := __n120;
__n117["left"] := __n118;
__n121 := {  };
__n121["type"] := "MemberExpression";
__n121["computed"] := true;
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "__expected";
__n121["object"] := __n122;
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "index";
__n121["property"] := __n123;
__n117["right"] := __n121;
__n116["test"] := __n117;
__n124 := {  };
__n124["type"] := "BlockStatement";
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "$ERROR";
__n127["callee"] := __n128;
__n130 := {  };
__n130["type"] := "BinaryExpression";
__n130["operator"] := "+";
__n131 := {  };
__n131["type"] := "BinaryExpression";
__n131["operator"] := "+";
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := "+";
__n133 := {  };
__n133["type"] := "BinaryExpression";
__n133["operator"] := "+";
__n134 := {  };
__n134["type"] := "BinaryExpression";
__n134["operator"] := "+";
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "+";
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "+";
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := "#4.";
__n137["raw"] := "'#4.'";
__n136["left"] := __n137;
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "index";
__n136["right"] := __n138;
__n135["left"] := __n136;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := ": __obj = {toString:function(){}}; __matched = String(__obj).match(void 0); __expected = RegExp(void 0).exec(\"undefined\"); __matched[";
__n139["raw"] := "': __obj = {toString:function(){}}; __matched = String(__obj).match(void 0); __expected = RegExp(void 0).exec(\"undefined\"); __matched['";
__n135["right"] := __n139;
__n134["left"] := __n135;
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "index";
__n134["right"] := __n140;
__n133["left"] := __n134;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "]===__expected[";
__n141["raw"] := "']===__expected['";
__n133["right"] := __n141;
__n132["left"] := __n133;
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "index";
__n132["right"] := __n142;
__n131["left"] := __n132;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := "]. Actual: ";
__n143["raw"] := "']. Actual: '";
__n131["right"] := __n143;
__n130["left"] := __n131;
__n144 := {  };
__n144["type"] := "MemberExpression";
__n144["computed"] := true;
__n145 := {  };
__n145["type"] := "Identifier";
__n145["name"] := "__matched";
__n144["object"] := __n145;
__n146 := {  };
__n146["type"] := "Identifier";
__n146["name"] := "index";
__n144["property"] := __n146;
__n130["right"] := __n144;
__n129 := [ __n130 ];
__n127["arguments"] := __n129;
__n126["expression"] := __n127;
__n125 := [ __n126 ];
__n124["body"] := __n125;
__n116["consequent"] := __n124;
__n116["alternate"] := null;
__n115 := [ __n116 ];
__n114["body"] := __n115;
__n101["body"] := __n114;
__n1 := [ __n2, __n16, __n30, __n44, __n63, __n82, __n101 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n147 := [ "__obj", "__matched", "__expected", "index" ];
__n0["variableDeclarations"] := __n147;
__n148 := [  ];
__n0["functionDeclarations"] := __n148;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}