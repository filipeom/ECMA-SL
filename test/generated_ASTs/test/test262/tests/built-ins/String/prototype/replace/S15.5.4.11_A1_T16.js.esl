function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__re";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "/77/";
__n6["raw"] := "/77/";
__n6["source"] := "77";
__n7 := {  };
__n7["type"] := "RegExp";
__n8 := {  };
__n8["type"] := "Alternative";
__n10 := {  };
__n10["type"] := "Char";
__n10["value"] := "7";
__n10["kind"] := "simple";
__n10["symbol"] := "7";
__n10["codePoint"] := 55.;
__n11 := {  };
__n11["type"] := "Char";
__n11["value"] := "7";
__n11["kind"] := "simple";
__n11["symbol"] := "7";
__n11["codePoint"] := 55.;
__n9 := [ __n10, __n11 ];
__n8["expressions"] := __n9;
__n7["body"] := __n8;
__n7["flags"] := "";
__n7["nCaps"] := 0.;
__n6["regex"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "__instance";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "NewExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "Number";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1100.00777001;
__n19["raw"] := "1100.00777001";
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "=";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Number";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "prototype";
__n25["raw"] := "\"prototype\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["object"] := __n23;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "replace";
__n26["raw"] := "\"replace\"";
__n22["property"] := __n26;
__n22["computed"] := true;
__n21["left"] := __n22;
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "String";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "prototype";
__n30["raw"] := "\"prototype\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["object"] := __n28;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "replace";
__n31["raw"] := "\"replace\"";
__n27["property"] := __n31;
__n27["computed"] := true;
__n21["right"] := __n27;
__n20["expression"] := __n21;
__n32 := {  };
__n32["type"] := "VariableDeclaration";
__n34 := {  };
__n34["type"] := "VariableDeclarator";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "__obj";
__n34["id"] := __n35;
__n36 := {  };
__n36["type"] := "ObjectExpression";
__n38 := {  };
__n38["type"] := "Property";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "toString";
__n38["key"] := __n39;
__n40 := {  };
__n40["type"] := "FunctionExpression";
__n40["id"] := null;
__n41 := [  ];
__n40["params"] := __n41;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ReturnStatement";
__n45 := {  };
__n45["type"] := "FunctionExpression";
__n45["id"] := null;
__n46 := [ "a1", "a2", "a3" ];
__n45["params"] := __n46;
__n47 := {  };
__n47["type"] := "BlockStatement";
__n49 := {  };
__n49["type"] := "ReturnStatement";
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "+";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "a2";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "z";
__n52["raw"] := "\"z\"";
__n50["right"] := __n52;
__n49["argument"] := __n50;
__n48 := [ __n49 ];
__n47["body"] := __n48;
__n53 := [  ];
__n47["variableDeclarations"] := __n53;
__n54 := [  ];
__n47["functionDeclarations"] := __n54;
__n47["codeType"] := "function";
__n47["strict"] := false;
__n45["body"] := __n47;
__n45["generator"] := false;
__n45["async"] := false;
__n45["expression"] := false;
__n44["argument"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n55 := [  ];
__n42["variableDeclarations"] := __n55;
__n56 := [  ];
__n42["functionDeclarations"] := __n56;
__n42["codeType"] := "function";
__n42["strict"] := false;
__n40["body"] := __n42;
__n40["generator"] := false;
__n40["async"] := false;
__n40["expression"] := false;
__n38["value"] := __n40;
__n38["computed"] := false;
__n38["kind"] := "init";
__n38["shorthand"] := false;
__n37 := [ __n38 ];
__n36["properties"] := __n37;
__n34["init"] := __n36;
__n33 := [ __n34 ];
__n32["declarations"] := __n33;
__n32["kind"] := "var";
__n57 := {  };
__n57["type"] := "TryStatement";
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "VariableDeclaration";
__n62 := {  };
__n62["type"] := "VariableDeclarator";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "x";
__n62["id"] := __n63;
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "===";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "__instance";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "replace";
__n68["raw"] := "\"replace\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "__re";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "__obj";
__n69 := [ __n70, __n71 ];
__n65["arguments"] := __n69;
__n64["left"] := __n65;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "1100.007z7001";
__n72["raw"] := "\"1100.007z7001\"";
__n64["right"] := __n72;
__n62["init"] := __n64;
__n61 := [ __n62 ];
__n60["declarations"] := __n61;
__n60["kind"] := "var";
__n73 := {  };
__n73["type"] := "ExpressionStatement";
__n74 := {  };
__n74["type"] := "CallExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "$ERROR";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "#1.0: x = __instance.replace(__obj, 1) === \"1100.007z7001\" lead to throwing exception";
__n77["raw"] := "'#1.0: x = __instance.replace(__obj, 1) === \"1100.007z7001\" lead to throwing exception'";
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["expression"] := __n74;
__n59 := [ __n60, __n73 ];
__n58["body"] := __n59;
__n57["block"] := __n58;
__n78 := {  };
__n78["type"] := "CatchClause";
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "e";
__n78["param"] := __n79;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "IfStatement";
__n83 := {  };
__n83["type"] := "UnaryExpression";
__n83["operator"] := "!";
__n84 := {  };
__n84["type"] := "BinaryExpression";
__n84["operator"] := "instanceof";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "e";
__n84["left"] := __n85;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "TypeError";
__n84["right"] := __n86;
__n83["argument"] := __n84;
__n83["prefix"] := true;
__n82["test"] := __n83;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "$ERROR";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "+";
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "#1.1: Exception is instance of TypeError. Actual: ";
__n94["raw"] := "'#1.1: Exception is instance of TypeError. Actual: '";
__n93["left"] := __n94;
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "e";
__n93["right"] := __n95;
__n92 := [ __n93 ];
__n90["arguments"] := __n92;
__n89["expression"] := __n90;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n82["consequent"] := __n87;
__n82["alternate"] := null;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n78["body"] := __n80;
__n57["handler"] := __n78;
__n57["finalizer"] := null;
__n1 := [ __n2, __n12, __n20, __n32, __n57 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n96 := [ "__re", "__instance", "__obj", "x" ];
__n0["variableDeclarations"] := __n96;
__n97 := [  ];
__n0["functionDeclarations"] := __n97;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}