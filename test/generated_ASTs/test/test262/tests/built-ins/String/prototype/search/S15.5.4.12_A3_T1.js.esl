function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "aString";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "power of the power of the power of the power of the power of the power of the great sword";
__n9["raw"] := "\"power of the power of the power of the power of the power of the power of the great sword\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "IfStatement";
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "!==";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "aString";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "search";
__n15["raw"] := "\"search\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["callee"] := __n13;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "/the/";
__n17["raw"] := "/the/";
__n17["source"] := "the";
__n18 := {  };
__n18["type"] := "RegExp";
__n19 := {  };
__n19["type"] := "Alternative";
__n21 := {  };
__n21["type"] := "Char";
__n21["value"] := "t";
__n21["kind"] := "simple";
__n21["symbol"] := "t";
__n21["codePoint"] := 116.;
__n22 := {  };
__n22["type"] := "Char";
__n22["value"] := "h";
__n22["kind"] := "simple";
__n22["symbol"] := "h";
__n22["codePoint"] := 104.;
__n23 := {  };
__n23["type"] := "Char";
__n23["value"] := "e";
__n23["kind"] := "simple";
__n23["symbol"] := "e";
__n23["codePoint"] := 101.;
__n20 := [ __n21, __n22, __n23 ];
__n19["expressions"] := __n20;
__n18["body"] := __n19;
__n18["flags"] := "";
__n18["nCaps"] := 0.;
__n17["regex"] := __n18;
__n16 := [ __n17 ];
__n12["arguments"] := __n16;
__n11["left"] := __n12;
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "aString";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "search";
__n27["raw"] := "\"search\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["callee"] := __n25;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "/the/g";
__n29["raw"] := "/the/g";
__n29["source"] := "the";
__n30 := {  };
__n30["type"] := "RegExp";
__n31 := {  };
__n31["type"] := "Alternative";
__n33 := {  };
__n33["type"] := "Char";
__n33["value"] := "t";
__n33["kind"] := "simple";
__n33["symbol"] := "t";
__n33["codePoint"] := 116.;
__n34 := {  };
__n34["type"] := "Char";
__n34["value"] := "h";
__n34["kind"] := "simple";
__n34["symbol"] := "h";
__n34["codePoint"] := 104.;
__n35 := {  };
__n35["type"] := "Char";
__n35["value"] := "e";
__n35["kind"] := "simple";
__n35["symbol"] := "e";
__n35["codePoint"] := 101.;
__n32 := [ __n33, __n34, __n35 ];
__n31["expressions"] := __n32;
__n30["body"] := __n31;
__n30["flags"] := "g";
__n30["nCaps"] := 0.;
__n29["regex"] := __n30;
__n28 := [ __n29 ];
__n24["arguments"] := __n28;
__n11["right"] := __n24;
__n10["test"] := __n11;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "$ERROR";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "+";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "#1: var aString = new String(\"power of the power of the power of the power of the power of the power of the great sword\"); aString.search(/the/)=== aString.search(/the/g). Actual: ";
__n43["raw"] := "'#1: var aString = new String(\"power of the power of the power of the power of the power of the power of the great sword\"); aString.search(/the/)=== aString.search(/the/g). Actual: '";
__n42["left"] := __n43;
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "aString";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "search";
__n47["raw"] := "\"search\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n44["callee"] := __n45;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "/the/";
__n49["raw"] := "/the/";
__n49["source"] := "the";
__n50 := {  };
__n50["type"] := "RegExp";
__n51 := {  };
__n51["type"] := "Alternative";
__n53 := {  };
__n53["type"] := "Char";
__n53["value"] := "t";
__n53["kind"] := "simple";
__n53["symbol"] := "t";
__n53["codePoint"] := 116.;
__n54 := {  };
__n54["type"] := "Char";
__n54["value"] := "h";
__n54["kind"] := "simple";
__n54["symbol"] := "h";
__n54["codePoint"] := 104.;
__n55 := {  };
__n55["type"] := "Char";
__n55["value"] := "e";
__n55["kind"] := "simple";
__n55["symbol"] := "e";
__n55["codePoint"] := 101.;
__n52 := [ __n53, __n54, __n55 ];
__n51["expressions"] := __n52;
__n50["body"] := __n51;
__n50["flags"] := "";
__n50["nCaps"] := 0.;
__n49["regex"] := __n50;
__n48 := [ __n49 ];
__n44["arguments"] := __n48;
__n42["right"] := __n44;
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n10["consequent"] := __n36;
__n10["alternate"] := null;
__n1 := [ __n2, __n10 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n56 := [ "aString" ];
__n0["variableDeclarations"] := __n56;
__n57 := [  ];
__n0["functionDeclarations"] := __n57;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}