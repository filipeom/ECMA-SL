function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__string";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "this123is123a123string123object";
__n6["raw"] := "\"this123is123a123string123object\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "__expected";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ArrayExpression";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "this";
__n13["raw"] := "\"this\"";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "is";
__n14["raw"] := "\"is\"";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "a";
__n15["raw"] := "\"a\"";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "string";
__n16["raw"] := "\"string\"";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "object";
__n17["raw"] := "\"object\"";
__n12 := [ __n13, __n14, __n15, __n16, __n17 ];
__n11["elements"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "__split";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "__string";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "split";
__n25["raw"] := "\"split\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 123.;
__n27["raw"] := "123";
__n26 := [ __n27 ];
__n22["arguments"] := __n26;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n28 := {  };
__n28["type"] := "IfStatement";
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "!==";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "__split";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "constructor";
__n32["raw"] := "\"constructor\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["left"] := __n30;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "Array";
__n29["right"] := __n33;
__n28["test"] := __n29;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "+";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "#1: var __string = \"this123is123a123string123object\"; var __expected = [\"this\", \"is\", \"a\", \"string\", \"object\"]; __split = __string.split(123); __split.constructor === Array. Actual: ";
__n41["raw"] := "'#1: var __string = \"this123is123a123string123object\"; var __expected = [\"this\", \"is\", \"a\", \"string\", \"object\"]; __split = __string.split(123); __split.constructor === Array. Actual: '";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "__split";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "constructor";
__n44["raw"] := "\"constructor\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n40["right"] := __n42;
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n28["consequent"] := __n34;
__n28["alternate"] := null;
__n45 := {  };
__n45["type"] := "IfStatement";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "__split";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "length";
__n49["raw"] := "\"length\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["left"] := __n47;
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "__expected";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "length";
__n52["raw"] := "\"length\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n46["right"] := __n50;
__n45["test"] := __n46;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "$ERROR";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "+";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "#2: var __string = \"this123is123a123string123object\"; var __expected = [\"this\", \"is\", \"a\", \"string\", \"object\"]; __split = __string.split(123); __split.length === __expected.length. Actual: ";
__n60["raw"] := "'#2: var __string = \"this123is123a123string123object\"; var __expected = [\"this\", \"is\", \"a\", \"string\", \"object\"]; __split = __string.split(123); __split.length === __expected.length. Actual: '";
__n59["left"] := __n60;
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "__split";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "length";
__n63["raw"] := "\"length\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n59["right"] := __n61;
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n45["consequent"] := __n53;
__n45["alternate"] := null;
__n64 := {  };
__n64["type"] := "ForStatement";
__n65 := {  };
__n65["type"] := "VariableDeclaration";
__n67 := {  };
__n67["type"] := "VariableDeclarator";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "i";
__n67["id"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 0.;
__n69["raw"] := "0";
__n67["init"] := __n69;
__n66 := [ __n67 ];
__n65["declarations"] := __n66;
__n65["kind"] := "var";
__n64["init"] := __n65;
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "<";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "i";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "MemberExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "__expected";
__n72["object"] := __n73;
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "length";
__n74["raw"] := "\"length\"";
__n72["property"] := __n74;
__n72["computed"] := true;
__n70["right"] := __n72;
__n64["test"] := __n70;
__n75 := {  };
__n75["type"] := "UpdateExpression";
__n75["operator"] := "++";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "i";
__n75["argument"] := __n76;
__n75["prefix"] := false;
__n64["update"] := __n75;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!==";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n81["computed"] := true;
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "__expected";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "i";
__n81["property"] := __n83;
__n80["left"] := __n81;
__n84 := {  };
__n84["type"] := "MemberExpression";
__n84["computed"] := true;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "__split";
__n84["object"] := __n85;
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "i";
__n84["property"] := __n86;
__n80["right"] := __n84;
__n79["test"] := __n80;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "$ERROR";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "+";
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := "+";
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "+";
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "+";
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "+";
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "+";
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "#3.";
__n100["raw"] := "'#3.'";
__n99["left"] := __n100;
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "i";
__n99["right"] := __n101;
__n98["left"] := __n99;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := ": var __string = \"this123is123a123string123object\"; var __expected = [\"this\", \"is\", \"a\", \"string\", \"object\"]; __split = __string.split(123); __expected[";
__n102["raw"] := "': var __string = \"this123is123a123string123object\"; var __expected = [\"this\", \"is\", \"a\", \"string\", \"object\"]; __split = __string.split(123); __expected['";
__n98["right"] := __n102;
__n97["left"] := __n98;
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "i";
__n97["right"] := __n103;
__n96["left"] := __n97;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "]===__split[";
__n104["raw"] := "']===__split['";
__n96["right"] := __n104;
__n95["left"] := __n96;
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "i";
__n95["right"] := __n105;
__n94["left"] := __n95;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "]. Actual: ";
__n106["raw"] := "']. Actual: '";
__n94["right"] := __n106;
__n93["left"] := __n94;
__n107 := {  };
__n107["type"] := "MemberExpression";
__n107["computed"] := true;
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "__expected";
__n107["object"] := __n108;
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "i";
__n107["property"] := __n109;
__n93["right"] := __n107;
__n92 := [ __n93 ];
__n90["arguments"] := __n92;
__n89["expression"] := __n90;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n79["consequent"] := __n87;
__n79["alternate"] := null;
__n78 := [ __n79 ];
__n77["body"] := __n78;
__n64["body"] := __n77;
__n1 := [ __n2, __n7, __n18, __n28, __n45, __n64 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n110 := [ "__string", "__expected", "__split", "i" ];
__n0["variableDeclarations"] := __n110;
__n111 := [  ];
__n0["functionDeclarations"] := __n111;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}