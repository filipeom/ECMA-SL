function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__string";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "one two three four five";
__n9["raw"] := "\"one two three four five\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "__split";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "__string";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "split";
__n17["raw"] := "\"split\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "/ /";
__n19["raw"] := "/ /";
__n19["source"] := " ";
__n20 := {  };
__n20["type"] := "RegExp";
__n21 := {  };
__n21["type"] := "Char";
__n21["value"] := " ";
__n21["kind"] := "simple";
__n21["symbol"] := " ";
__n21["codePoint"] := 32.;
__n20["body"] := __n21;
__n20["flags"] := "";
__n20["nCaps"] := 0.;
__n19["regex"] := __n20;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 2.;
__n22["raw"] := "2";
__n18 := [ __n19, __n22 ];
__n14["arguments"] := __n18;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n23 := {  };
__n23["type"] := "IfStatement";
__n24 := {  };
__n24["type"] := "BinaryExpression";
__n24["operator"] := "!==";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "__split";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "constructor";
__n27["raw"] := "\"constructor\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["left"] := __n25;
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "Array";
__n24["right"] := __n28;
__n23["test"] := __n24;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "$ERROR";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "+";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "#1: var __string = new String(\"one two three four five\"); __split = __string.split(/ /,2); __split.constructor === Array. Actual: ";
__n36["raw"] := "'#1: var __string = new String(\"one two three four five\"); __split = __string.split(/ /,2); __split.constructor === Array. Actual: '";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "__split";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "constructor";
__n39["raw"] := "\"constructor\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n35["right"] := __n37;
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n23["consequent"] := __n29;
__n23["alternate"] := null;
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "!==";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "__split";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "length";
__n44["raw"] := "\"length\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["left"] := __n42;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 2.;
__n45["raw"] := "2";
__n41["right"] := __n45;
__n40["test"] := __n41;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ExpressionStatement";
__n49 := {  };
__n49["type"] := "CallExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "$ERROR";
__n49["callee"] := __n50;
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "+";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "#2: var __string = new String(\"one two three four five\"); __split = __string.split(/ /,2); __split.length === 2. Actual: ";
__n53["raw"] := "'#2: var __string = new String(\"one two three four five\"); __split = __string.split(/ /,2); __split.length === 2. Actual: '";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "MemberExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "__split";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "length";
__n56["raw"] := "\"length\"";
__n54["property"] := __n56;
__n54["computed"] := true;
__n52["right"] := __n54;
__n51 := [ __n52 ];
__n49["arguments"] := __n51;
__n48["expression"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n40["consequent"] := __n46;
__n40["alternate"] := null;
__n57 := {  };
__n57["type"] := "IfStatement";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n59["computed"] := true;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "__split";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 0.;
__n61["raw"] := "0";
__n59["property"] := __n61;
__n58["left"] := __n59;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "one";
__n62["raw"] := "\"one\"";
__n58["right"] := __n62;
__n57["test"] := __n58;
__n63 := {  };
__n63["type"] := "BlockStatement";
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "CallExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "$ERROR";
__n66["callee"] := __n67;
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "+";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "#3: var __string = new String(\"one two three four five\"); __split = __string.split(/ /,2); __split[0] === \"one\". Actual: ";
__n70["raw"] := "'#3: var __string = new String(\"one two three four five\"); __split = __string.split(/ /,2); __split[0] === \"one\". Actual: '";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "MemberExpression";
__n71["computed"] := true;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "__split";
__n71["object"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 0.;
__n73["raw"] := "0";
__n71["property"] := __n73;
__n69["right"] := __n71;
__n68 := [ __n69 ];
__n66["arguments"] := __n68;
__n65["expression"] := __n66;
__n64 := [ __n65 ];
__n63["body"] := __n64;
__n57["consequent"] := __n63;
__n57["alternate"] := null;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "BinaryExpression";
__n75["operator"] := "!==";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n76["computed"] := true;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "__split";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 1.;
__n78["raw"] := "1";
__n76["property"] := __n78;
__n75["left"] := __n76;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := "two";
__n79["raw"] := "\"two\"";
__n75["right"] := __n79;
__n74["test"] := __n75;
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ExpressionStatement";
__n83 := {  };
__n83["type"] := "CallExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "$ERROR";
__n83["callee"] := __n84;
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "+";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "#4: var __string = new String(\"one two three four five\"); __split = __string.split(/ /,2); __split[1] === \"two\". Actual: ";
__n87["raw"] := "'#4: var __string = new String(\"one two three four five\"); __split = __string.split(/ /,2); __split[1] === \"two\". Actual: '";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "MemberExpression";
__n88["computed"] := true;
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "__split";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 1.;
__n90["raw"] := "1";
__n88["property"] := __n90;
__n86["right"] := __n88;
__n85 := [ __n86 ];
__n83["arguments"] := __n85;
__n82["expression"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n74["consequent"] := __n80;
__n74["alternate"] := null;
__n1 := [ __n2, __n10, __n23, __n40, __n57, __n74 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n91 := [ "__string", "__split" ];
__n0["variableDeclarations"] := __n91;
__n92 := [  ];
__n0["functionDeclarations"] := __n92;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}