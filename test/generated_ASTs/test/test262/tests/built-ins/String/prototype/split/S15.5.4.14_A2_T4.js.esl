function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__string";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "one two three";
__n9["raw"] := "\"one two three\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "__split";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "__string";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "split";
__n17["raw"] := "\"split\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["callee"] := __n15;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "";
__n19["raw"] := "\"\"";
__n18 := [ __n19 ];
__n14["arguments"] := __n18;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n20 := {  };
__n20["type"] := "IfStatement";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "!==";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__split";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "constructor";
__n24["raw"] := "\"constructor\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["left"] := __n22;
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "Array";
__n21["right"] := __n25;
__n20["test"] := __n21;
__n26 := {  };
__n26["type"] := "BlockStatement";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "$ERROR";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "BinaryExpression";
__n32["operator"] := "+";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "#1: var __string = new String(\"one two three\"); __split = __string.split(\"\"); __split.constructor === Array. Actual: ";
__n33["raw"] := "'#1: var __string = new String(\"one two three\"); __split = __string.split(\"\"); __split.constructor === Array. Actual: '";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "__split";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "constructor";
__n36["raw"] := "\"constructor\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n32["right"] := __n34;
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n28["expression"] := __n29;
__n27 := [ __n28 ];
__n26["body"] := __n27;
__n20["consequent"] := __n26;
__n20["alternate"] := null;
__n37 := {  };
__n37["type"] := "IfStatement";
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "!==";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "__split";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "length";
__n41["raw"] := "\"length\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["left"] := __n39;
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "__string";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "length";
__n44["raw"] := "\"length\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n38["right"] := __n42;
__n37["test"] := __n38;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "ExpressionStatement";
__n48 := {  };
__n48["type"] := "CallExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "$ERROR";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "BinaryExpression";
__n51["operator"] := "+";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "#2: var __string = new String(\"one two three\"); __split = __string.split(\"\"); __split.length === __string.length. Actual: ";
__n52["raw"] := "'#2: var __string = new String(\"one two three\"); __split = __string.split(\"\"); __split.length === __string.length. Actual: '";
__n51["left"] := __n52;
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "__split";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "length";
__n55["raw"] := "\"length\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n51["right"] := __n53;
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n47["expression"] := __n48;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n37["consequent"] := __n45;
__n37["alternate"] := null;
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "BinaryExpression";
__n57["operator"] := "!==";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n58["computed"] := true;
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "__split";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := 0.;
__n60["raw"] := "0";
__n58["property"] := __n60;
__n57["left"] := __n58;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "o";
__n61["raw"] := "\"o\"";
__n57["right"] := __n61;
__n56["test"] := __n57;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "$ERROR";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "+";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "#3: var __string = new String(\"one two three\"); __split = __string.split(\"\"); __split[0] === \"o\". Actual: ";
__n69["raw"] := "'#3: var __string = new String(\"one two three\"); __split = __string.split(\"\"); __split[0] === \"o\". Actual: '";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "MemberExpression";
__n70["computed"] := true;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "__split";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 0.;
__n72["raw"] := "0";
__n70["property"] := __n72;
__n68["right"] := __n70;
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n56["consequent"] := __n62;
__n56["alternate"] := null;
__n73 := {  };
__n73["type"] := "IfStatement";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "!==";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n75["computed"] := true;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "__split";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 1.;
__n77["raw"] := "1";
__n75["property"] := __n77;
__n74["left"] := __n75;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "n";
__n78["raw"] := "\"n\"";
__n74["right"] := __n78;
__n73["test"] := __n74;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "$ERROR";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "+";
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "#4: var __string = new String(\"one two three\"); __split = __string.split(\"\"); __split[1] === \"n\". Actual: ";
__n86["raw"] := "'#4: var __string = new String(\"one two three\"); __split = __string.split(\"\"); __split[1] === \"n\". Actual: '";
__n85["left"] := __n86;
__n87 := {  };
__n87["type"] := "MemberExpression";
__n87["computed"] := true;
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "__split";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := 1.;
__n89["raw"] := "1";
__n87["property"] := __n89;
__n85["right"] := __n87;
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n73["consequent"] := __n79;
__n73["alternate"] := null;
__n90 := {  };
__n90["type"] := "IfStatement";
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "!==";
__n92 := {  };
__n92["type"] := "MemberExpression";
__n92["computed"] := true;
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "__split";
__n92["object"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := 11.;
__n94["raw"] := "11";
__n92["property"] := __n94;
__n91["left"] := __n92;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "e";
__n95["raw"] := "\"e\"";
__n91["right"] := __n95;
__n90["test"] := __n91;
__n96 := {  };
__n96["type"] := "BlockStatement";
__n98 := {  };
__n98["type"] := "ExpressionStatement";
__n99 := {  };
__n99["type"] := "CallExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "$ERROR";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "BinaryExpression";
__n102["operator"] := "+";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "#5: var __string = new String(\"one two three\"); __split = __string.split(\"\"); __split[11] === \"e\". Actual: ";
__n103["raw"] := "'#5: var __string = new String(\"one two three\"); __split = __string.split(\"\"); __split[11] === \"e\". Actual: '";
__n102["left"] := __n103;
__n104 := {  };
__n104["type"] := "MemberExpression";
__n104["computed"] := true;
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "__split";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := 11.;
__n106["raw"] := "11";
__n104["property"] := __n106;
__n102["right"] := __n104;
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n98["expression"] := __n99;
__n97 := [ __n98 ];
__n96["body"] := __n97;
__n90["consequent"] := __n96;
__n90["alternate"] := null;
__n107 := {  };
__n107["type"] := "IfStatement";
__n108 := {  };
__n108["type"] := "BinaryExpression";
__n108["operator"] := "!==";
__n109 := {  };
__n109["type"] := "MemberExpression";
__n109["computed"] := true;
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "__split";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 12.;
__n111["raw"] := "12";
__n109["property"] := __n111;
__n108["left"] := __n109;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "e";
__n112["raw"] := "\"e\"";
__n108["right"] := __n112;
__n107["test"] := __n108;
__n113 := {  };
__n113["type"] := "BlockStatement";
__n115 := {  };
__n115["type"] := "ExpressionStatement";
__n116 := {  };
__n116["type"] := "CallExpression";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "$ERROR";
__n116["callee"] := __n117;
__n119 := {  };
__n119["type"] := "BinaryExpression";
__n119["operator"] := "+";
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "#6: var __string = new String(\"one two three\"); __split = __string.split(\"\"); __split[12] === \"e\". Actual: ";
__n120["raw"] := "'#6: var __string = new String(\"one two three\"); __split = __string.split(\"\"); __split[12] === \"e\". Actual: '";
__n119["left"] := __n120;
__n121 := {  };
__n121["type"] := "MemberExpression";
__n121["computed"] := true;
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "__split";
__n121["object"] := __n122;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 12.;
__n123["raw"] := "12";
__n121["property"] := __n123;
__n119["right"] := __n121;
__n118 := [ __n119 ];
__n116["arguments"] := __n118;
__n115["expression"] := __n116;
__n114 := [ __n115 ];
__n113["body"] := __n114;
__n107["consequent"] := __n113;
__n107["alternate"] := null;
__n1 := [ __n2, __n10, __n20, __n37, __n56, __n73, __n90, __n107 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n124 := [ "__string", "__split" ];
__n0["variableDeclarations"] := __n124;
__n125 := [  ];
__n0["functionDeclarations"] := __n125;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}