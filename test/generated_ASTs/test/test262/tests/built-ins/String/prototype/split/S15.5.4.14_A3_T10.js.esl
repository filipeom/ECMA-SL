function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__string";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "String";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "VariableDeclaration";
__n11 := {  };
__n11["type"] := "VariableDeclarator";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "__split";
__n11["id"] := __n12;
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "__string";
__n14["object"] := __n15;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "split";
__n16["raw"] := "\"split\"";
__n14["property"] := __n16;
__n14["computed"] := true;
__n13["callee"] := __n14;
__n17 := [  ];
__n13["arguments"] := __n17;
__n11["init"] := __n13;
__n10 := [ __n11 ];
__n9["declarations"] := __n10;
__n9["kind"] := "var";
__n18 := {  };
__n18["type"] := "IfStatement";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "!==";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "__split";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "constructor";
__n22["raw"] := "\"constructor\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["left"] := __n20;
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "Array";
__n19["right"] := __n23;
__n18["test"] := __n19;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "$ERROR";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "+";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "#1: var __string = new String; __split = __string.split(); __split.constructor === Array. Actual: ";
__n31["raw"] := "'#1: var __string = new String; __split = __string.split(); __split.constructor === Array. Actual: '";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "__split";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "constructor";
__n34["raw"] := "\"constructor\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n30["right"] := __n32;
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["expression"] := __n27;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n18["consequent"] := __n24;
__n18["alternate"] := null;
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "__split";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "length";
__n39["raw"] := "\"length\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 1.;
__n40["raw"] := "1";
__n36["right"] := __n40;
__n35["test"] := __n36;
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ExpressionStatement";
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "$ERROR";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "BinaryExpression";
__n47["operator"] := "+";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "#2: var __string = new String; __split = __string.split(); __split.length === 1. Actual: ";
__n48["raw"] := "'#2: var __string = new String; __split = __string.split(); __split.length === 1. Actual: '";
__n47["left"] := __n48;
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "__split";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "length";
__n51["raw"] := "\"length\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n47["right"] := __n49;
__n46 := [ __n47 ];
__n44["arguments"] := __n46;
__n43["expression"] := __n44;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n35["consequent"] := __n41;
__n35["alternate"] := null;
__n52 := {  };
__n52["type"] := "IfStatement";
__n53 := {  };
__n53["type"] := "BinaryExpression";
__n53["operator"] := "!==";
__n54 := {  };
__n54["type"] := "MemberExpression";
__n54["computed"] := true;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "__split";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 0.;
__n56["raw"] := "0";
__n54["property"] := __n56;
__n53["left"] := __n54;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "";
__n57["raw"] := "\"\"";
__n53["right"] := __n57;
__n52["test"] := __n53;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$ERROR";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "BinaryExpression";
__n64["operator"] := "+";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "#3: var __string = new String; __split = __string.split(); __split[0] === \"\". Actual: ";
__n65["raw"] := "'#3: var __string = new String; __split = __string.split(); __split[0] === \"\". Actual: '";
__n64["left"] := __n65;
__n66 := {  };
__n66["type"] := "MemberExpression";
__n66["computed"] := true;
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "__split";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 0.;
__n68["raw"] := "0";
__n66["property"] := __n68;
__n64["right"] := __n66;
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n52["consequent"] := __n58;
__n52["alternate"] := null;
__n1 := [ __n2, __n9, __n18, __n35, __n52 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n69 := [ "__string", "__split" ];
__n0["variableDeclarations"] := __n69;
__n70 := [  ];
__n0["functionDeclarations"] := __n70;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}