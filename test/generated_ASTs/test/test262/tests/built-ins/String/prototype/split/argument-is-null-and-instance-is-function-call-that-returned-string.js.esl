function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__split";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "FunctionExpression";
__n9["id"] := null;
__n10 := [  ];
__n9["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ReturnStatement";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "gnulluna";
__n14["raw"] := "\"gnulluna\"";
__n13["argument"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n15 := [  ];
__n11["variableDeclarations"] := __n15;
__n16 := [  ];
__n11["functionDeclarations"] := __n16;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n9["body"] := __n11;
__n9["generator"] := false;
__n9["async"] := false;
__n9["expression"] := false;
__n8["callee"] := __n9;
__n17 := [  ];
__n8["arguments"] := __n17;
__n7["object"] := __n8;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "split";
__n18["raw"] := "\"split\"";
__n7["property"] := __n18;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 'null;
__n20["raw"] := "\"'null\"";
__n19 := [ __n20 ];
__n6["arguments"] := __n19;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "assert";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "sameValue";
__n25["raw"] := "\"sameValue\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n27 := {  };
__n27["type"] := "UnaryExpression";
__n27["operator"] := "typeof";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "__split";
__n27["argument"] := __n28;
__n27["prefix"] := true;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "object";
__n29["raw"] := "\"object\"";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "The value of `typeof __split` is \"object\"";
__n30["raw"] := "'The value of `typeof __split` is \"object\"'";
__n26 := [ __n27, __n29, __n30 ];
__n22["arguments"] := __n26;
__n21["expression"] := __n22;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "assert";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "sameValue";
__n35["raw"] := "\"sameValue\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "__split";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "constructor";
__n39["raw"] := "\"constructor\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "Array";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "The value of __split.constructor is expected to equal the value of Array";
__n41["raw"] := "'The value of __split.constructor is expected to equal the value of Array'";
__n36 := [ __n37, __n40, __n41 ];
__n32["arguments"] := __n36;
__n31["expression"] := __n32;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "CallExpression";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "assert";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "sameValue";
__n46["raw"] := "\"sameValue\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["callee"] := __n44;
__n48 := {  };
__n48["type"] := "MemberExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "__split";
__n48["object"] := __n49;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "length";
__n50["raw"] := "\"length\"";
__n48["property"] := __n50;
__n48["computed"] := true;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 2.;
__n51["raw"] := "2";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "The value of __split.length is 2";
__n52["raw"] := "'The value of __split.length is 2'";
__n47 := [ __n48, __n51, __n52 ];
__n43["arguments"] := __n47;
__n42["expression"] := __n43;
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "MemberExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "assert";
__n55["object"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "sameValue";
__n57["raw"] := "\"sameValue\"";
__n55["property"] := __n57;
__n55["computed"] := true;
__n54["callee"] := __n55;
__n59 := {  };
__n59["type"] := "MemberExpression";
__n59["computed"] := true;
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "__split";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 0.;
__n61["raw"] := "0";
__n59["property"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "g";
__n62["raw"] := "\"g\"";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "The value of __split[0] is \"g\"";
__n63["raw"] := "'The value of __split[0] is \"g\"'";
__n58 := [ __n59, __n62, __n63 ];
__n54["arguments"] := __n58;
__n53["expression"] := __n54;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "assert";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "sameValue";
__n68["raw"] := "\"sameValue\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "MemberExpression";
__n70["computed"] := true;
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "__split";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.;
__n72["raw"] := "1";
__n70["property"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "una";
__n73["raw"] := "\"una\"";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "The value of __split[1] is \"una\"";
__n74["raw"] := "'The value of __split[1] is \"una\"'";
__n69 := [ __n70, __n73, __n74 ];
__n65["arguments"] := __n69;
__n64["expression"] := __n65;
__n1 := [ __n2, __n21, __n31, __n42, __n53, __n64 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n75 := [ "__split" ];
__n0["variableDeclarations"] := __n75;
__n76 := [  ];
__n0["functionDeclarations"] := __n76;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}