function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__instance";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Boolean";
__n6["callee"] := __n7;
__n8 := [  ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "AssignmentExpression";
__n10["operator"] := "=";
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "__instance";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "split";
__n13["raw"] := "\"split\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n10["left"] := __n11;
__n14 := {  };
__n14["type"] := "MemberExpression";
__n15 := {  };
__n15["type"] := "MemberExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "String";
__n15["object"] := __n16;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "prototype";
__n17["raw"] := "\"prototype\"";
__n15["property"] := __n17;
__n15["computed"] := true;
__n14["object"] := __n15;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "split";
__n18["raw"] := "\"split\"";
__n14["property"] := __n18;
__n14["computed"] := true;
__n10["right"] := __n14;
__n9["expression"] := __n10;
__n19 := {  };
__n19["type"] := "VariableDeclaration";
__n21 := {  };
__n21["type"] := "VariableDeclarator";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "__split";
__n21["id"] := __n22;
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "MemberExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "__instance";
__n24["object"] := __n25;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "split";
__n26["raw"] := "\"split\"";
__n24["property"] := __n26;
__n24["computed"] := true;
__n23["callee"] := __n24;
__n27 := [  ];
__n23["arguments"] := __n27;
__n21["init"] := __n23;
__n20 := [ __n21 ];
__n19["declarations"] := __n20;
__n19["kind"] := "var";
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "assert";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "sameValue";
__n32["raw"] := "\"sameValue\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "__split";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "constructor";
__n36["raw"] := "\"constructor\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Array";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "The value of __split.constructor is expected to equal the value of Array";
__n38["raw"] := "'The value of __split.constructor is expected to equal the value of Array'";
__n33 := [ __n34, __n37, __n38 ];
__n29["arguments"] := __n33;
__n28["expression"] := __n29;
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "MemberExpression";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "assert";
__n41["object"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "sameValue";
__n43["raw"] := "\"sameValue\"";
__n41["property"] := __n43;
__n41["computed"] := true;
__n40["callee"] := __n41;
__n45 := {  };
__n45["type"] := "MemberExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "__split";
__n45["object"] := __n46;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "length";
__n47["raw"] := "\"length\"";
__n45["property"] := __n47;
__n45["computed"] := true;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 1.;
__n48["raw"] := "1";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "The value of __split.length is 1";
__n49["raw"] := "'The value of __split.length is 1'";
__n44 := [ __n45, __n48, __n49 ];
__n40["arguments"] := __n44;
__n39["expression"] := __n40;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "assert";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "sameValue";
__n54["raw"] := "\"sameValue\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n56 := {  };
__n56["type"] := "MemberExpression";
__n56["computed"] := true;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "__split";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 0.;
__n58["raw"] := "0";
__n56["property"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "false";
__n59["raw"] := "\"false\"";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "The value of __split[0] is \"false\"";
__n60["raw"] := "'The value of __split[0] is \"false\"'";
__n55 := [ __n56, __n59, __n60 ];
__n51["arguments"] := __n55;
__n50["expression"] := __n51;
__n1 := [ __n2, __n9, __n19, __n28, __n39, __n50 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n61 := [ "__instance", "__split" ];
__n0["variableDeclarations"] := __n61;
__n62 := [  ];
__n0["functionDeclarations"] := __n62;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}