function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__lowerCase";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "";
__n8["raw"] := "\"\"";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "toLocaleLowerCase";
__n9["raw"] := "\"toLocaleLowerCase\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n10 := [  ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "__expected";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "";
__n15["raw"] := "\"\"";
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n16 := {  };
__n16["type"] := "IfStatement";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "!==";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "__lowerCase";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "length";
__n20["raw"] := "\"length\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["left"] := __n18;
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "__expected";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "length";
__n23["raw"] := "\"length\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n17["right"] := __n21;
__n16["test"] := __n17;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "$ERROR";
__n27["callee"] := __n28;
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := "+";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "#1: __lowerCase = \"\".toLocaleLowerCase(); __expected = \"\"; __lowerCase.length === __expected.length. Actual: ";
__n31["raw"] := "'#1: __lowerCase = \"\".toLocaleLowerCase(); __expected = \"\"; __lowerCase.length === __expected.length. Actual: '";
__n30["left"] := __n31;
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "__lowerCase";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "length";
__n34["raw"] := "\"length\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n30["right"] := __n32;
__n29 := [ __n30 ];
__n27["arguments"] := __n29;
__n26["expression"] := __n27;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n16["consequent"] := __n24;
__n16["alternate"] := null;
__n35 := {  };
__n35["type"] := "IfStatement";
__n36 := {  };
__n36["type"] := "BinaryExpression";
__n36["operator"] := "!==";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "__lowerCase";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "index";
__n39["raw"] := "\"index\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "__expected";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "index";
__n42["raw"] := "\"index\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n36["right"] := __n40;
__n35["test"] := __n36;
__n43 := {  };
__n43["type"] := "BlockStatement";
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "$ERROR";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "+";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "#2: __lowerCase = \"\".toLocaleLowerCase(); __expected = \"\"; __lowerCase.index === __expected.index. Actual: ";
__n50["raw"] := "'#2: __lowerCase = \"\".toLocaleLowerCase(); __expected = \"\"; __lowerCase.index === __expected.index. Actual: '";
__n49["left"] := __n50;
__n51 := {  };
__n51["type"] := "MemberExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "__lowerCase";
__n51["object"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "index";
__n53["raw"] := "\"index\"";
__n51["property"] := __n53;
__n51["computed"] := true;
__n49["right"] := __n51;
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["expression"] := __n46;
__n44 := [ __n45 ];
__n43["body"] := __n44;
__n35["consequent"] := __n43;
__n35["alternate"] := null;
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "MemberExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "__lowerCase";
__n56["object"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "input";
__n58["raw"] := "\"input\"";
__n56["property"] := __n58;
__n56["computed"] := true;
__n55["left"] := __n56;
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "__expected";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "input";
__n61["raw"] := "\"input\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n55["right"] := __n59;
__n54["test"] := __n55;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "$ERROR";
__n65["callee"] := __n66;
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "+";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "#3: __lowerCase = \"\".toLocaleLowerCase(); __expected = \"\"; __lowerCase.input === __expected.input. Actual: ";
__n69["raw"] := "'#3: __lowerCase = \"\".toLocaleLowerCase(); __expected = \"\"; __lowerCase.input === __expected.input. Actual: '";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "MemberExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "__lowerCase";
__n70["object"] := __n71;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "input";
__n72["raw"] := "\"input\"";
__n70["property"] := __n72;
__n70["computed"] := true;
__n68["right"] := __n70;
__n67 := [ __n68 ];
__n65["arguments"] := __n67;
__n64["expression"] := __n65;
__n63 := [ __n64 ];
__n62["body"] := __n63;
__n54["consequent"] := __n62;
__n54["alternate"] := null;
__n73 := {  };
__n73["type"] := "IfStatement";
__n74 := {  };
__n74["type"] := "BinaryExpression";
__n74["operator"] := "!==";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n75["computed"] := true;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "__lowerCase";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 0.;
__n77["raw"] := "0";
__n75["property"] := __n77;
__n74["left"] := __n75;
__n78 := {  };
__n78["type"] := "MemberExpression";
__n78["computed"] := true;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "__expected";
__n78["object"] := __n79;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := 0.;
__n80["raw"] := "0";
__n78["property"] := __n80;
__n74["right"] := __n78;
__n73["test"] := __n74;
__n81 := {  };
__n81["type"] := "BlockStatement";
__n83 := {  };
__n83["type"] := "ExpressionStatement";
__n84 := {  };
__n84["type"] := "CallExpression";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "$ERROR";
__n84["callee"] := __n85;
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := "+";
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "#4: __lowerCase = \"\".toLocaleLowerCase(); __expected = \"\"; __lowerCase[0]===__expected[0]. Actual: ";
__n88["raw"] := "'#4: __lowerCase = \"\".toLocaleLowerCase(); __expected = \"\"; __lowerCase[0]===__expected[0]. Actual: '";
__n87["left"] := __n88;
__n89 := {  };
__n89["type"] := "MemberExpression";
__n89["computed"] := true;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "__lowerCase";
__n89["object"] := __n90;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := 0.;
__n91["raw"] := "0";
__n89["property"] := __n91;
__n87["right"] := __n89;
__n86 := [ __n87 ];
__n84["arguments"] := __n86;
__n83["expression"] := __n84;
__n82 := [ __n83 ];
__n81["body"] := __n82;
__n73["consequent"] := __n81;
__n73["alternate"] := null;
__n1 := [ __n2, __n11, __n16, __n35, __n54, __n73 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n92 := [ "__lowerCase", "__expected" ];
__n0["variableDeclarations"] := __n92;
__n93 := [  ];
__n0["functionDeclarations"] := __n93;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}