function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "toStringAccessed";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := false;
__n6["raw"] := "false";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "valueOfAccessed";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := false;
__n11["raw"] := "false";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "proto";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "ObjectExpression";
__n18 := {  };
__n18["type"] := "Property";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "toString";
__n18["key"] := __n19;
__n20 := {  };
__n20["type"] := "FunctionExpression";
__n20["id"] := null;
__n21 := [  ];
__n20["params"] := __n21;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "AssignmentExpression";
__n25["operator"] := "=";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "toStringAccessed";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := true;
__n27["raw"] := "true";
__n25["right"] := __n27;
__n24["expression"] := __n25;
__n28 := {  };
__n28["type"] := "ReturnStatement";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "abc";
__n29["raw"] := "\"abc\"";
__n28["argument"] := __n29;
__n23 := [ __n24, __n28 ];
__n22["body"] := __n23;
__n30 := [  ];
__n22["variableDeclarations"] := __n30;
__n31 := [  ];
__n22["functionDeclarations"] := __n31;
__n22["codeType"] := "function";
__n22["strict"] := false;
__n20["body"] := __n22;
__n20["generator"] := false;
__n20["async"] := false;
__n20["expression"] := false;
__n18["value"] := __n20;
__n18["computed"] := false;
__n18["kind"] := "init";
__n18["shorthand"] := false;
__n17 := [ __n18 ];
__n16["properties"] := __n17;
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n32 := {  };
__n32["type"] := "VariableDeclaration";
__n34 := {  };
__n34["type"] := "VariableDeclarator";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "Con";
__n34["id"] := __n35;
__n36 := {  };
__n36["type"] := "FunctionExpression";
__n36["id"] := null;
__n37 := [  ];
__n36["params"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n39 := [  ];
__n38["body"] := __n39;
__n40 := [  ];
__n38["variableDeclarations"] := __n40;
__n41 := [  ];
__n38["functionDeclarations"] := __n41;
__n38["codeType"] := "function";
__n38["strict"] := false;
__n36["body"] := __n38;
__n36["generator"] := false;
__n36["async"] := false;
__n36["expression"] := false;
__n34["init"] := __n36;
__n33 := [ __n34 ];
__n32["declarations"] := __n33;
__n32["kind"] := "var";
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "Con";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "prototype";
__n46["raw"] := "\"prototype\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["left"] := __n44;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "proto";
__n43["right"] := __n47;
__n42["expression"] := __n43;
__n48 := {  };
__n48["type"] := "VariableDeclaration";
__n50 := {  };
__n50["type"] := "VariableDeclarator";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "child";
__n50["id"] := __n51;
__n52 := {  };
__n52["type"] := "NewExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "Con";
__n52["callee"] := __n53;
__n54 := [  ];
__n52["arguments"] := __n54;
__n50["init"] := __n52;
__n49 := [ __n50 ];
__n48["declarations"] := __n49;
__n48["kind"] := "var";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "AssignmentExpression";
__n56["operator"] := "=";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "child";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "valueOf";
__n59["raw"] := "\"valueOf\"";
__n57["property"] := __n59;
__n57["computed"] := true;
__n56["left"] := __n57;
__n60 := {  };
__n60["type"] := "FunctionExpression";
__n60["id"] := null;
__n61 := [  ];
__n60["params"] := __n61;
__n62 := {  };
__n62["type"] := "BlockStatement";
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "AssignmentExpression";
__n65["operator"] := "=";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "valueOfAccessed";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := true;
__n67["raw"] := "true";
__n65["right"] := __n67;
__n64["expression"] := __n65;
__n68 := {  };
__n68["type"] := "ReturnStatement";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "efg";
__n69["raw"] := "\"efg\"";
__n68["argument"] := __n69;
__n63 := [ __n64, __n68 ];
__n62["body"] := __n63;
__n70 := [  ];
__n62["variableDeclarations"] := __n70;
__n71 := [  ];
__n62["functionDeclarations"] := __n71;
__n62["codeType"] := "function";
__n62["strict"] := false;
__n60["body"] := __n62;
__n60["generator"] := false;
__n60["async"] := false;
__n60["expression"] := false;
__n56["right"] := __n60;
__n55["expression"] := __n56;
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "assert";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "sameValue";
__n76["raw"] := "\"sameValue\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["callee"] := __n74;
__n78 := {  };
__n78["type"] := "CallExpression";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "MemberExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "String";
__n81["object"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "prototype";
__n83["raw"] := "\"prototype\"";
__n81["property"] := __n83;
__n81["computed"] := true;
__n80["object"] := __n81;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "trim";
__n84["raw"] := "\"trim\"";
__n80["property"] := __n84;
__n80["computed"] := true;
__n79["object"] := __n80;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "call";
__n85["raw"] := "\"call\"";
__n79["property"] := __n85;
__n79["computed"] := true;
__n78["callee"] := __n79;
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "child";
__n86 := [ __n87 ];
__n78["arguments"] := __n86;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "abc";
__n88["raw"] := "\"abc\"";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "String.prototype.trim.call(child)";
__n89["raw"] := "'String.prototype.trim.call(child)'";
__n77 := [ __n78, __n88, __n89 ];
__n73["arguments"] := __n77;
__n72["expression"] := __n73;
__n90 := {  };
__n90["type"] := "ExpressionStatement";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "assert";
__n91["callee"] := __n92;
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "toStringAccessed";
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "toStringAccessed !== true";
__n95["raw"] := "'toStringAccessed !== true'";
__n93 := [ __n94, __n95 ];
__n91["arguments"] := __n93;
__n90["expression"] := __n91;
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "CallExpression";
__n98 := {  };
__n98["type"] := "MemberExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "assert";
__n98["object"] := __n99;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "sameValue";
__n100["raw"] := "\"sameValue\"";
__n98["property"] := __n100;
__n98["computed"] := true;
__n97["callee"] := __n98;
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "valueOfAccessed";
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := false;
__n103["raw"] := "false";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "valueOfAccessed";
__n104["raw"] := "'valueOfAccessed'";
__n101 := [ __n102, __n103, __n104 ];
__n97["arguments"] := __n101;
__n96["expression"] := __n97;
__n1 := [ __n2, __n7, __n12, __n32, __n42, __n48, __n55, __n72, __n90, __n96 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n105 := [ "toStringAccessed", "valueOfAccessed", "proto", "Con", "child" ];
__n0["variableDeclarations"] := __n105;
__n106 := [  ];
__n0["functionDeclarations"] := __n106;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}