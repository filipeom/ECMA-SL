function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "desc";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "MemberExpression";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "Object";
__n7["object"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "getOwnPropertyDescriptor";
__n9["raw"] := "\"getOwnPropertyDescriptor\"";
__n7["property"] := __n9;
__n7["computed"] := true;
__n6["callee"] := __n7;
__n11 := {  };
__n11["type"] := "MemberExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Symbol";
__n11["object"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "prototype";
__n13["raw"] := "\"prototype\"";
__n11["property"] := __n13;
__n11["computed"] := true;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "description";
__n14["raw"] := "'description'";
__n10 := [ __n11, __n14 ];
__n6["arguments"] := __n10;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "MemberExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "assert";
__n17["object"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "sameValue";
__n19["raw"] := "\"sameValue\"";
__n17["property"] := __n19;
__n17["computed"] := true;
__n16["callee"] := __n17;
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "desc";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "set";
__n23["raw"] := "\"set\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "undefined";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "The value of desc.set is `undefined`";
__n25["raw"] := "'The value of desc.set is `undefined`'";
__n20 := [ __n21, __n24, __n25 ];
__n16["arguments"] := __n20;
__n15["expression"] := __n16;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "assert";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "sameValue";
__n30["raw"] := "\"sameValue\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "desc";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "writable";
__n34["raw"] := "\"writable\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "undefined";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "The value of desc.writable is `undefined`";
__n36["raw"] := "'The value of desc.writable is `undefined`'";
__n31 := [ __n32, __n35, __n36 ];
__n27["arguments"] := __n31;
__n26["expression"] := __n27;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "MemberExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "assert";
__n39["object"] := __n40;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "sameValue";
__n41["raw"] := "\"sameValue\"";
__n39["property"] := __n41;
__n39["computed"] := true;
__n38["callee"] := __n39;
__n43 := {  };
__n43["type"] := "UnaryExpression";
__n43["operator"] := "typeof";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "desc";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "get";
__n46["raw"] := "\"get\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["argument"] := __n44;
__n43["prefix"] := true;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "function";
__n47["raw"] := "'function'";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "The value of `typeof desc.get` is \"function\"";
__n48["raw"] := "'The value of `typeof desc.get` is \"function\"'";
__n42 := [ __n43, __n47, __n48 ];
__n38["arguments"] := __n42;
__n37["expression"] := __n38;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "CallExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "verifyProperty";
__n50["callee"] := __n51;
__n53 := {  };
__n53["type"] := "MemberExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "Symbol";
__n53["object"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "prototype";
__n55["raw"] := "\"prototype\"";
__n53["property"] := __n55;
__n53["computed"] := true;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "description";
__n56["raw"] := "'description'";
__n57 := {  };
__n57["type"] := "ObjectExpression";
__n59 := {  };
__n59["type"] := "Property";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "enumerable";
__n59["key"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := false;
__n61["raw"] := "false";
__n59["value"] := __n61;
__n59["computed"] := false;
__n59["kind"] := "init";
__n59["shorthand"] := false;
__n62 := {  };
__n62["type"] := "Property";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "configurable";
__n62["key"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := true;
__n64["raw"] := "true";
__n62["value"] := __n64;
__n62["computed"] := false;
__n62["kind"] := "init";
__n62["shorthand"] := false;
__n58 := [ __n59, __n62 ];
__n57["properties"] := __n58;
__n52 := [ __n53, __n56, __n57 ];
__n50["arguments"] := __n52;
__n49["expression"] := __n50;
__n1 := [ __n2, __n15, __n26, __n37, __n49 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n65 := [ "desc" ];
__n0["variableDeclarations"] := __n65;
__n66 := [  ];
__n0["functionDeclarations"] := __n66;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}