function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "notSameValue";
__n6["raw"] := "\"notSameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Symbol";
__n8["callee"] := __n9;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "";
__n11["raw"] := "''";
__n10 := [ __n11 ];
__n8["arguments"] := __n10;
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "Symbol";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "";
__n15["raw"] := "''";
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "empty string";
__n16["raw"] := "'empty string'";
__n7 := [ __n8, __n12, __n16 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "MemberExpression";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "assert";
__n19["object"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "notSameValue";
__n21["raw"] := "\"notSameValue\"";
__n19["property"] := __n21;
__n19["computed"] := true;
__n18["callee"] := __n19;
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "Symbol";
__n23["callee"] := __n24;
__n25 := [  ];
__n23["arguments"] := __n25;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "Symbol";
__n26["callee"] := __n27;
__n28 := [  ];
__n26["arguments"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "undefined";
__n29["raw"] := "'undefined'";
__n22 := [ __n23, __n26, __n29 ];
__n18["arguments"] := __n22;
__n17["expression"] := __n18;
__n30 := {  };
__n30["type"] := "ExpressionStatement";
__n31 := {  };
__n31["type"] := "CallExpression";
__n32 := {  };
__n32["type"] := "MemberExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "assert";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "notSameValue";
__n34["raw"] := "\"notSameValue\"";
__n32["property"] := __n34;
__n32["computed"] := true;
__n31["callee"] := __n32;
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "Symbol";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 'null;
__n39["raw"] := "\"'null\"";
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "Symbol";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 'null;
__n43["raw"] := "\"'null\"";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "null value";
__n44["raw"] := "'null value'";
__n35 := [ __n36, __n40, __n44 ];
__n31["arguments"] := __n35;
__n30["expression"] := __n31;
__n45 := {  };
__n45["type"] := "ExpressionStatement";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "MemberExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "assert";
__n47["object"] := __n48;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "notSameValue";
__n49["raw"] := "\"notSameValue\"";
__n47["property"] := __n49;
__n47["computed"] := true;
__n46["callee"] := __n47;
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "Symbol";
__n51["callee"] := __n52;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "x";
__n54["raw"] := "'x'";
__n53 := [ __n54 ];
__n51["arguments"] := __n53;
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "Symbol";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "x";
__n58["raw"] := "'x'";
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "string \"x\"";
__n59["raw"] := "'string \"x\"'";
__n50 := [ __n51, __n55, __n59 ];
__n46["arguments"] := __n50;
__n45["expression"] := __n46;
__n1 := [ __n2, __n17, __n30, __n45 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n60 := [  ];
__n0["variableDeclarations"] := __n60;
__n61 := [  ];
__n0["functionDeclarations"] := __n61;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}