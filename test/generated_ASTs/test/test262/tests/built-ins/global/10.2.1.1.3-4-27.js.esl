function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "numBak";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Number";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "TryStatement";
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "AssignmentExpression";
__n11["operator"] := "=";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "Number";
__n11["left"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 12.;
__n13["raw"] := "12";
__n11["right"] := __n13;
__n10["expression"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n7["block"] := __n8;
__n7["handler"] := null;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "AssignmentExpression";
__n17["operator"] := "=";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "Number";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "numBak";
__n17["right"] := __n19;
__n16["expression"] := __n17;
__n15 := [ __n16 ];
__n14["body"] := __n15;
__n7["finalizer"] := __n14;
__n1 := [ __n2, __n7 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n20 := [ "numBak" ];
__n0["variableDeclarations"] := __n20;
__n21 := [  ];
__n0["functionDeclarations"] := __n21;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}