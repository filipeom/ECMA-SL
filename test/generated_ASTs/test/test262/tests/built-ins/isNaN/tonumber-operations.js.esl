function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "isNaN";
__n8["callee"] := __n9;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "0";
__n11["raw"] := "\"0\"";
__n10 := [ __n11 ];
__n8["arguments"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := false;
__n12["raw"] := "false";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "'0'";
__n13["raw"] := "\"'0'\"";
__n7 := [ __n8, __n12, __n13 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "assert";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "sameValue";
__n18["raw"] := "\"sameValue\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["callee"] := __n16;
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "isNaN";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "";
__n23["raw"] := "\"\"";
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := false;
__n24["raw"] := "false";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "the empty string";
__n25["raw"] := "\"the empty string\"";
__n19 := [ __n20, __n24, __n25 ];
__n15["arguments"] := __n19;
__n14["expression"] := __n15;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "assert";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "sameValue";
__n30["raw"] := "\"sameValue\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "isNaN";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "Infinity";
__n35["raw"] := "\"Infinity\"";
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := false;
__n36["raw"] := "false";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "'Infinity'";
__n37["raw"] := "\"'Infinity'\"";
__n31 := [ __n32, __n36, __n37 ];
__n27["arguments"] := __n31;
__n26["expression"] := __n27;
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "MemberExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "assert";
__n40["object"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "sameValue";
__n42["raw"] := "\"sameValue\"";
__n40["property"] := __n42;
__n40["computed"] := true;
__n39["callee"] := __n40;
__n44 := {  };
__n44["type"] := "CallExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "isNaN";
__n44["callee"] := __n45;
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "this is not a number";
__n47["raw"] := "\"this is not a number\"";
__n46 := [ __n47 ];
__n44["arguments"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := true;
__n48["raw"] := "true";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "string";
__n49["raw"] := "\"string\"";
__n43 := [ __n44, __n48, __n49 ];
__n39["arguments"] := __n43;
__n38["expression"] := __n39;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "CallExpression";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "assert";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "sameValue";
__n54["raw"] := "\"sameValue\"";
__n52["property"] := __n54;
__n52["computed"] := true;
__n51["callee"] := __n52;
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "isNaN";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := true;
__n59["raw"] := "true";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := false;
__n60["raw"] := "false";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "true";
__n61["raw"] := "\"true\"";
__n55 := [ __n56, __n60, __n61 ];
__n51["arguments"] := __n55;
__n50["expression"] := __n51;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "assert";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "sameValue";
__n66["raw"] := "\"sameValue\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["callee"] := __n64;
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "isNaN";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := false;
__n71["raw"] := "false";
__n70 := [ __n71 ];
__n68["arguments"] := __n70;
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := false;
__n72["raw"] := "false";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "false";
__n73["raw"] := "\"false\"";
__n67 := [ __n68, __n72, __n73 ];
__n63["arguments"] := __n67;
__n62["expression"] := __n63;
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "CallExpression";
__n76 := {  };
__n76["type"] := "MemberExpression";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "assert";
__n76["object"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "sameValue";
__n78["raw"] := "\"sameValue\"";
__n76["property"] := __n78;
__n76["computed"] := true;
__n75["callee"] := __n76;
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "isNaN";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "ArrayExpression";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := 1.;
__n85["raw"] := "1";
__n84 := [ __n85 ];
__n83["elements"] := __n84;
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := false;
__n86["raw"] := "false";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "Object [1]";
__n87["raw"] := "\"Object [1]\"";
__n79 := [ __n80, __n86, __n87 ];
__n75["arguments"] := __n79;
__n74["expression"] := __n75;
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "MemberExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "assert";
__n90["object"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "sameValue";
__n92["raw"] := "\"sameValue\"";
__n90["property"] := __n92;
__n90["computed"] := true;
__n89["callee"] := __n90;
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "isNaN";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "ArrayExpression";
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "Infinity";
__n98 := [ __n99 ];
__n97["elements"] := __n98;
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := false;
__n100["raw"] := "false";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "Object [Infinity]";
__n101["raw"] := "\"Object [Infinity]\"";
__n93 := [ __n94, __n100, __n101 ];
__n89["arguments"] := __n93;
__n88["expression"] := __n89;
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "CallExpression";
__n104 := {  };
__n104["type"] := "MemberExpression";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "assert";
__n104["object"] := __n105;
__n106 := {  };
__n106["type"] := "Literal";
__n106["value"] := "sameValue";
__n106["raw"] := "\"sameValue\"";
__n104["property"] := __n106;
__n104["computed"] := true;
__n103["callee"] := __n104;
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "isNaN";
__n108["callee"] := __n109;
__n111 := {  };
__n111["type"] := "ArrayExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "NaN";
__n112 := [ __n113 ];
__n111["elements"] := __n112;
__n110 := [ __n111 ];
__n108["arguments"] := __n110;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := true;
__n114["raw"] := "true";
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := "Object [NaN]";
__n115["raw"] := "\"Object [NaN]\"";
__n107 := [ __n108, __n114, __n115 ];
__n103["arguments"] := __n107;
__n102["expression"] := __n103;
__n116 := {  };
__n116["type"] := "ExpressionStatement";
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "MemberExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "assert";
__n118["object"] := __n119;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "sameValue";
__n120["raw"] := "\"sameValue\"";
__n118["property"] := __n120;
__n118["computed"] := true;
__n117["callee"] := __n118;
__n122 := {  };
__n122["type"] := "CallExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "isNaN";
__n122["callee"] := __n123;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := 'null;
__n125["raw"] := "\"'null\"";
__n124 := [ __n125 ];
__n122["arguments"] := __n124;
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := false;
__n126["raw"] := "false";
__n127 := {  };
__n127["type"] := "Literal";
__n127["value"] := "null";
__n127["raw"] := "\"null\"";
__n121 := [ __n122, __n126, __n127 ];
__n117["arguments"] := __n121;
__n116["expression"] := __n117;
__n128 := {  };
__n128["type"] := "ExpressionStatement";
__n129 := {  };
__n129["type"] := "CallExpression";
__n130 := {  };
__n130["type"] := "MemberExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "assert";
__n130["object"] := __n131;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := "sameValue";
__n132["raw"] := "\"sameValue\"";
__n130["property"] := __n132;
__n130["computed"] := true;
__n129["callee"] := __n130;
__n134 := {  };
__n134["type"] := "CallExpression";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "isNaN";
__n134["callee"] := __n135;
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "undefined";
__n136 := [ __n137 ];
__n134["arguments"] := __n136;
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := true;
__n138["raw"] := "true";
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "undefined";
__n139["raw"] := "\"undefined\"";
__n133 := [ __n134, __n138, __n139 ];
__n129["arguments"] := __n133;
__n128["expression"] := __n129;
__n140 := {  };
__n140["type"] := "ExpressionStatement";
__n141 := {  };
__n141["type"] := "CallExpression";
__n142 := {  };
__n142["type"] := "MemberExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "assert";
__n142["object"] := __n143;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "sameValue";
__n144["raw"] := "\"sameValue\"";
__n142["property"] := __n144;
__n142["computed"] := true;
__n141["callee"] := __n142;
__n146 := {  };
__n146["type"] := "CallExpression";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "isNaN";
__n146["callee"] := __n147;
__n148 := [  ];
__n146["arguments"] := __n148;
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := true;
__n149["raw"] := "true";
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := "no arg";
__n150["raw"] := "\"no arg\"";
__n145 := [ __n146, __n149, __n150 ];
__n141["arguments"] := __n145;
__n140["expression"] := __n141;
__n1 := [ __n2, __n14, __n26, __n38, __n50, __n62, __n74, __n88, __n102, __n116, __n128, __n140 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n151 := [  ];
__n0["variableDeclarations"] := __n151;
__n152 := [  ];
__n0["functionDeclarations"] := __n152;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}