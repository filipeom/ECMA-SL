function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "_10_5_7_b_3_fun";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "EmptyStatement";
__n5 := {  };
__n5["type"] := "ExpressionStatement";
__n6 := {  };
__n6["type"] := "CallExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "assert";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "_10_5_7_b_3_fun";
__n9["callee"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := 30.;
__n12["raw"] := "30";
__n11 := [ __n12 ];
__n9["arguments"] := __n11;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "_10_5_7_b_3_fun(30) !== true";
__n13["raw"] := "'_10_5_7_b_3_fun(30) !== true'";
__n8 := [ __n9, __n13 ];
__n6["arguments"] := __n8;
__n5["expression"] := __n6;
__n1 := [ __n2, __n4, __n5 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n14 := [  ];
__n0["variableDeclarations"] := __n14;
__n16 := {  };
__n16["type"] := "FunctionDeclaration";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "_10_5_7_b_3_fun";
__n16["id"] := __n17;
__n18 := [  ];
__n16["params"] := __n18;
__n19 := {  };
__n19["type"] := "BlockStatement";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "AssignmentExpression";
__n22["operator"] := "=";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n23["computed"] := true;
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "arguments";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 1.;
__n25["raw"] := "1";
__n23["property"] := __n25;
__n22["left"] := __n23;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 12.;
__n26["raw"] := "12";
__n22["right"] := __n26;
__n21["expression"] := __n22;
__n27 := {  };
__n27["type"] := "ReturnStatement";
__n28 := {  };
__n28["type"] := "LogicalExpression";
__n28["operator"] := "&&";
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "===";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n30["computed"] := true;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "arguments";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 0.;
__n32["raw"] := "0";
__n30["property"] := __n32;
__n29["left"] := __n30;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 30.;
__n33["raw"] := "30";
__n29["right"] := __n33;
__n28["left"] := __n29;
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "===";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n35["computed"] := true;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "arguments";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 1.;
__n37["raw"] := "1";
__n35["property"] := __n37;
__n34["left"] := __n35;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := 12.;
__n38["raw"] := "12";
__n34["right"] := __n38;
__n28["right"] := __n34;
__n27["argument"] := __n28;
__n20 := [ __n21, __n27 ];
__n19["body"] := __n20;
__n39 := [  ];
__n19["variableDeclarations"] := __n39;
__n40 := [  ];
__n19["functionDeclarations"] := __n40;
__n19["codeType"] := "function";
__n19["strict"] := false;
__n16["body"] := __n19;
__n16["generator"] := false;
__n16["async"] := false;
__n16["expression"] := false;
__n15 := [ __n16 ];
__n0["functionDeclarations"] := __n15;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}