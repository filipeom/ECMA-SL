function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 1.;
__n6["raw"] := "1";
__n4["init"] := __n6;
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "y";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n7["init"] := __n9;
__n3 := [ __n4, __n7 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "z";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "+";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "x";
__n14["left"] := __n15;
__n16 := {  };
__n16["type"] := "UnaryExpression";
__n16["operator"] := "+";
__n17 := {  };
__n17["type"] := "UnaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "y";
__n17["argument"] := __n18;
__n17["prefix"] := true;
__n16["argument"] := __n17;
__n16["prefix"] := true;
__n14["right"] := __n16;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "LogicalExpression";
__n20["operator"] := "&&";
__n21 := {  };
__n21["type"] := "LogicalExpression";
__n21["operator"] := "&&";
__n22 := {  };
__n22["type"] := "BinaryExpression";
__n22["operator"] := "!==";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "z";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 2.;
__n24["raw"] := "2";
__n22["right"] := __n24;
__n21["left"] := __n22;
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "!==";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "y";
__n25["left"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 1.;
__n27["raw"] := "1";
__n25["right"] := __n27;
__n21["right"] := __n25;
__n20["left"] := __n21;
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "!==";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "x";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := 1.;
__n30["raw"] := "1";
__n28["right"] := __n30;
__n20["right"] := __n28;
__n19["test"] := __n20;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "$ERROR";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "#1: ";
__n37["raw"] := "'#1: '";
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33["expression"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n19["consequent"] := __n31;
__n19["alternate"] := null;
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "AssignmentExpression";
__n39["operator"] := "=";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "z";
__n39["left"] := __n40;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "x";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "UnaryExpression";
__n43["operator"] := "+";
__n44 := {  };
__n44["type"] := "UnaryExpression";
__n44["operator"] := "+";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "y";
__n44["argument"] := __n45;
__n44["prefix"] := true;
__n43["argument"] := __n44;
__n43["prefix"] := true;
__n41["right"] := __n43;
__n39["right"] := __n41;
__n38["expression"] := __n39;
__n46 := {  };
__n46["type"] := "IfStatement";
__n47 := {  };
__n47["type"] := "LogicalExpression";
__n47["operator"] := "&&";
__n48 := {  };
__n48["type"] := "LogicalExpression";
__n48["operator"] := "&&";
__n49 := {  };
__n49["type"] := "BinaryExpression";
__n49["operator"] := "!==";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "z";
__n49["left"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := 2.;
__n51["raw"] := "2";
__n49["right"] := __n51;
__n48["left"] := __n49;
__n52 := {  };
__n52["type"] := "BinaryExpression";
__n52["operator"] := "!==";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "y";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := 1.;
__n54["raw"] := "1";
__n52["right"] := __n54;
__n48["right"] := __n52;
__n47["left"] := __n48;
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "!==";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "x";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 1.;
__n57["raw"] := "1";
__n55["right"] := __n57;
__n47["right"] := __n55;
__n46["test"] := __n47;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$ERROR";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "";
__n64["raw"] := "''";
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n46["consequent"] := __n58;
__n46["alternate"] := null;
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "AssignmentExpression";
__n66["operator"] := "=";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "z";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "+";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "x";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "UnaryExpression";
__n70["operator"] := "+";
__n71 := {  };
__n71["type"] := "UnaryExpression";
__n71["operator"] := "+";
__n72 := {  };
__n72["type"] := "UnaryExpression";
__n72["operator"] := "+";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "y";
__n72["argument"] := __n73;
__n72["prefix"] := true;
__n71["argument"] := __n72;
__n71["prefix"] := true;
__n70["argument"] := __n71;
__n70["prefix"] := true;
__n68["right"] := __n70;
__n66["right"] := __n68;
__n65["expression"] := __n66;
__n74 := {  };
__n74["type"] := "IfStatement";
__n75 := {  };
__n75["type"] := "LogicalExpression";
__n75["operator"] := "&&";
__n76 := {  };
__n76["type"] := "LogicalExpression";
__n76["operator"] := "&&";
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "!==";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "z";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 2.;
__n79["raw"] := "2";
__n77["right"] := __n79;
__n76["left"] := __n77;
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!==";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "y";
__n80["left"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 1.;
__n82["raw"] := "1";
__n80["right"] := __n82;
__n76["right"] := __n80;
__n75["left"] := __n76;
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "!==";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "x";
__n83["left"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := 1.;
__n85["raw"] := "1";
__n83["right"] := __n85;
__n75["right"] := __n83;
__n74["test"] := __n75;
__n86 := {  };
__n86["type"] := "BlockStatement";
__n88 := {  };
__n88["type"] := "ExpressionStatement";
__n89 := {  };
__n89["type"] := "CallExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "$ERROR";
__n89["callee"] := __n90;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := "";
__n92["raw"] := "''";
__n91 := [ __n92 ];
__n89["arguments"] := __n91;
__n88["expression"] := __n89;
__n87 := [ __n88 ];
__n86["body"] := __n87;
__n74["consequent"] := __n86;
__n74["alternate"] := null;
__n1 := [ __n2, __n10, __n19, __n38, __n46, __n65, __n74 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n93 := [ "x", "y", "z" ];
__n0["variableDeclarations"] := __n93;
__n94 := [  ];
__n0["functionDeclarations"] := __n94;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}