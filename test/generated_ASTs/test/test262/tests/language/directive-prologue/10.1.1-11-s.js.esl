function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "err";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 'null;
__n6["raw"] := "\"'null\"";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "TryStatement";
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "eval";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "'use strict'; var public = 1; var anotherVariableNotReserveWord = 2;";
__n14["raw"] := "\"'use strict'; var public = 1; var anotherVariableNotReserveWord = 2;\"";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["expression"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n7["block"] := __n8;
__n15 := {  };
__n15["type"] := "CatchClause";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "e";
__n15["param"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "AssignmentExpression";
__n20["operator"] := "=";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "err";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "e";
__n20["right"] := __n22;
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n15["body"] := __n17;
__n7["handler"] := __n15;
__n7["finalizer"] := null;
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "assert";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "instanceof";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "err";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "SyntaxError";
__n27["right"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "err instanceof SyntaxError";
__n30["raw"] := "'err instanceof SyntaxError'";
__n26 := [ __n27, __n30 ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "assert";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "sameValue";
__n35["raw"] := "\"sameValue\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n32["callee"] := __n33;
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "typeof";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "public";
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "undefined";
__n39["raw"] := "\"undefined\"";
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "typeof public";
__n40["raw"] := "'typeof public'";
__n36 := [ __n37, __n39, __n40 ];
__n32["arguments"] := __n36;
__n31["expression"] := __n32;
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "assert";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "sameValue";
__n45["raw"] := "\"sameValue\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["callee"] := __n43;
__n47 := {  };
__n47["type"] := "UnaryExpression";
__n47["operator"] := "typeof";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "anotherVariableNotReserveWord";
__n47["argument"] := __n48;
__n47["prefix"] := true;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "undefined";
__n49["raw"] := "\"undefined\"";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "typeof anotherVariableNotReserveWord";
__n50["raw"] := "'typeof anotherVariableNotReserveWord'";
__n46 := [ __n47, __n49, __n50 ];
__n42["arguments"] := __n46;
__n41["expression"] := __n42;
__n1 := [ __n2, __n7, __n23, __n31, __n41 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n51 := [ "err" ];
__n0["variableDeclarations"] := __n51;
__n52 := [  ];
__n0["functionDeclarations"] := __n52;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}