function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "Identifier";
__n4["name"] := "eval";
__n3["callee"] := __n4;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "var public = 1; var anotherVariableNotReserveWord = 2; 'use strict';";
__n6["raw"] := "\"var public = 1; var anotherVariableNotReserveWord = 2; 'use strict';\"";
__n5 := [ __n6 ];
__n3["arguments"] := __n5;
__n2["expression"] := __n3;
__n7 := {  };
__n7["type"] := "ExpressionStatement";
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "MemberExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "assert";
__n9["object"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "sameValue";
__n11["raw"] := "\"sameValue\"";
__n9["property"] := __n11;
__n9["computed"] := true;
__n8["callee"] := __n9;
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "public";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := 1.;
__n14["raw"] := "1";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "public";
__n15["raw"] := "'public'";
__n12 := [ __n13, __n14, __n15 ];
__n8["arguments"] := __n12;
__n7["expression"] := __n8;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "MemberExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "assert";
__n18["object"] := __n19;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "sameValue";
__n20["raw"] := "\"sameValue\"";
__n18["property"] := __n20;
__n18["computed"] := true;
__n17["callee"] := __n18;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "anotherVariableNotReserveWord";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 2.;
__n23["raw"] := "2";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "anotherVariableNotReserveWord";
__n24["raw"] := "'anotherVariableNotReserveWord'";
__n21 := [ __n22, __n23, __n24 ];
__n17["arguments"] := __n21;
__n16["expression"] := __n17;
__n1 := [ __n2, __n7, __n16 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n25 := [  ];
__n0["variableDeclarations"] := __n25;
__n26 := [  ];
__n0["functionDeclarations"] := __n26;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}