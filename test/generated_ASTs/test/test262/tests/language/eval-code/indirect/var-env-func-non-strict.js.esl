function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "typeofInside";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "FunctionExpression";
__n8["id"] := null;
__n9 := [  ];
__n8["params"] := __n9;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "SequenceExpression";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := 0.;
__n16["raw"] := "0";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "eval";
__n15 := [ __n16, __n17 ];
__n14["expressions"] := __n15;
__n13["callee"] := __n14;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "function fun() {}";
__n19["raw"] := "\"function fun() {}\"";
__n18 := [ __n19 ];
__n13["arguments"] := __n18;
__n12["expression"] := __n13;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "=";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "typeofInside";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "UnaryExpression";
__n23["operator"] := "typeof";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "fun";
__n23["argument"] := __n24;
__n23["prefix"] := true;
__n21["right"] := __n23;
__n20["expression"] := __n21;
__n11 := [ __n12, __n20 ];
__n10["body"] := __n11;
__n25 := [  ];
__n10["variableDeclarations"] := __n25;
__n26 := [  ];
__n10["functionDeclarations"] := __n26;
__n10["codeType"] := "function";
__n10["strict"] := false;
__n8["body"] := __n10;
__n8["generator"] := false;
__n8["async"] := false;
__n8["expression"] := false;
__n7["callee"] := __n8;
__n27 := [  ];
__n7["arguments"] := __n27;
__n6["expression"] := __n7;
__n28 := {  };
__n28["type"] := "ExpressionStatement";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "MemberExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "assert";
__n30["object"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "sameValue";
__n32["raw"] := "\"sameValue\"";
__n30["property"] := __n32;
__n30["computed"] := true;
__n29["callee"] := __n30;
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "typeofInside";
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "function";
__n35["raw"] := "\"function\"";
__n33 := [ __n34, __n35 ];
__n29["arguments"] := __n33;
__n28["expression"] := __n29;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "assert";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "sameValue";
__n40["raw"] := "\"sameValue\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["callee"] := __n38;
__n42 := {  };
__n42["type"] := "UnaryExpression";
__n42["operator"] := "typeof";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "fun";
__n42["argument"] := __n43;
__n42["prefix"] := true;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "function";
__n44["raw"] := "\"function\"";
__n41 := [ __n42, __n44 ];
__n37["arguments"] := __n41;
__n36["expression"] := __n37;
__n1 := [ __n2, __n6, __n28, __n36 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n45 := [ "typeofInside" ];
__n0["variableDeclarations"] := __n45;
__n46 := [  ];
__n0["functionDeclarations"] := __n46;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}