function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "CallExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "isNaN";
__n4["callee"] := __n5;
__n7 := {  };
__n7["type"] := "UnaryExpression";
__n7["operator"] := "+";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "Number";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "NaN";
__n10["raw"] := "\"NaN\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["argument"] := __n8;
__n7["prefix"] := true;
__n6 := [ __n7 ];
__n4["arguments"] := __n6;
__n3["left"] := __n4;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := true;
__n11["raw"] := "true";
__n3["right"] := __n11;
__n2["test"] := __n3;
__n12 := {  };
__n12["type"] := "BlockStatement";
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "CallExpression";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "$ERROR";
__n15["callee"] := __n16;
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "+";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "#1: +(NaN) === Not-a-Number. Actual: ";
__n19["raw"] := "'#1: +(NaN) === Not-a-Number. Actual: '";
__n18["left"] := __n19;
__n20 := {  };
__n20["type"] := "UnaryExpression";
__n20["operator"] := "+";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "NaN";
__n20["argument"] := __n21;
__n20["prefix"] := true;
__n18["right"] := __n20;
__n17 := [ __n18 ];
__n15["arguments"] := __n17;
__n14["expression"] := __n15;
__n13 := [ __n14 ];
__n12["body"] := __n13;
__n2["consequent"] := __n12;
__n2["alternate"] := null;
__n22 := {  };
__n22["type"] := "IfStatement";
__n23 := {  };
__n23["type"] := "BinaryExpression";
__n23["operator"] := "!==";
__n24 := {  };
__n24["type"] := "UnaryExpression";
__n24["operator"] := "+";
__n25 := {  };
__n25["type"] := "UnaryExpression";
__n25["operator"] := "+";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := 0.;
__n26["raw"] := "0";
__n25["argument"] := __n26;
__n25["prefix"] := true;
__n24["argument"] := __n25;
__n24["prefix"] := true;
__n23["left"] := __n24;
__n27 := {  };
__n27["type"] := "UnaryExpression";
__n27["operator"] := "+";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := 0.;
__n28["raw"] := "0";
__n27["argument"] := __n28;
__n27["prefix"] := true;
__n23["right"] := __n27;
__n22["test"] := __n23;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "$ERROR";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "BinaryExpression";
__n35["operator"] := "+";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "#2.1: +(+0) === 0. Actual: ";
__n36["raw"] := "'#2.1: +(+0) === 0. Actual: '";
__n35["left"] := __n36;
__n37 := {  };
__n37["type"] := "UnaryExpression";
__n37["operator"] := "+";
__n38 := {  };
__n38["type"] := "UnaryExpression";
__n38["operator"] := "+";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 0.;
__n39["raw"] := "0";
__n38["argument"] := __n39;
__n38["prefix"] := true;
__n37["argument"] := __n38;
__n37["prefix"] := true;
__n35["right"] := __n37;
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n22["consequent"] := __n29;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "!==";
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "/";
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 1.;
__n45["raw"] := "1";
__n44["left"] := __n45;
__n46 := {  };
__n46["type"] := "UnaryExpression";
__n46["operator"] := "+";
__n47 := {  };
__n47["type"] := "UnaryExpression";
__n47["operator"] := "+";
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := 0.;
__n48["raw"] := "0";
__n47["argument"] := __n48;
__n47["prefix"] := true;
__n46["argument"] := __n47;
__n46["prefix"] := true;
__n44["right"] := __n46;
__n43["left"] := __n44;
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "Number";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "POSITIVE_INFINITY";
__n51["raw"] := "\"POSITIVE_INFINITY\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n43["right"] := __n49;
__n42["test"] := __n43;
__n52 := {  };
__n52["type"] := "BlockStatement";
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "CallExpression";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "$ERROR";
__n55["callee"] := __n56;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "#2.2: +(+0) === +0. Actual: -0";
__n58["raw"] := "'#2.2: +(+0) === +0. Actual: -0'";
__n57 := [ __n58 ];
__n55["arguments"] := __n57;
__n54["expression"] := __n55;
__n53 := [ __n54 ];
__n52["body"] := __n53;
__n42["consequent"] := __n52;
__n42["alternate"] := null;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n22["alternate"] := __n40;
__n59 := {  };
__n59["type"] := "IfStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "!==";
__n61 := {  };
__n61["type"] := "UnaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "UnaryExpression";
__n62["operator"] := "-";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 0.;
__n63["raw"] := "0";
__n62["argument"] := __n63;
__n62["prefix"] := true;
__n61["argument"] := __n62;
__n61["prefix"] := true;
__n60["left"] := __n61;
__n64 := {  };
__n64["type"] := "UnaryExpression";
__n64["operator"] := "-";
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := 0.;
__n65["raw"] := "0";
__n64["argument"] := __n65;
__n64["prefix"] := true;
__n60["right"] := __n64;
__n59["test"] := __n60;
__n66 := {  };
__n66["type"] := "BlockStatement";
__n68 := {  };
__n68["type"] := "ExpressionStatement";
__n69 := {  };
__n69["type"] := "CallExpression";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "$ERROR";
__n69["callee"] := __n70;
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "+";
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#3.1: +(-0) === 0. Actual: ";
__n73["raw"] := "'#3.1: +(-0) === 0. Actual: '";
__n72["left"] := __n73;
__n74 := {  };
__n74["type"] := "UnaryExpression";
__n74["operator"] := "+";
__n75 := {  };
__n75["type"] := "UnaryExpression";
__n75["operator"] := "-";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 0.;
__n76["raw"] := "0";
__n75["argument"] := __n76;
__n75["prefix"] := true;
__n74["argument"] := __n75;
__n74["prefix"] := true;
__n72["right"] := __n74;
__n71 := [ __n72 ];
__n69["arguments"] := __n71;
__n68["expression"] := __n69;
__n67 := [ __n68 ];
__n66["body"] := __n67;
__n59["consequent"] := __n66;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "IfStatement";
__n80 := {  };
__n80["type"] := "BinaryExpression";
__n80["operator"] := "!==";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "/";
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 1.;
__n82["raw"] := "1";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "UnaryExpression";
__n83["operator"] := "+";
__n84 := {  };
__n84["type"] := "UnaryExpression";
__n84["operator"] := "-";
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := 0.;
__n85["raw"] := "0";
__n84["argument"] := __n85;
__n84["prefix"] := true;
__n83["argument"] := __n84;
__n83["prefix"] := true;
__n81["right"] := __n83;
__n80["left"] := __n81;
__n86 := {  };
__n86["type"] := "MemberExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "Number";
__n86["object"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "NEGATIVE_INFINITY";
__n88["raw"] := "\"NEGATIVE_INFINITY\"";
__n86["property"] := __n88;
__n86["computed"] := true;
__n80["right"] := __n86;
__n79["test"] := __n80;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "$ERROR";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "#3.2: +(-0) === -0. Actual: +0";
__n95["raw"] := "'#3.2: +(-0) === -0. Actual: +0'";
__n94 := [ __n95 ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n79["consequent"] := __n89;
__n79["alternate"] := null;
__n78 := [ __n79 ];
__n77["body"] := __n78;
__n59["alternate"] := __n77;
__n96 := {  };
__n96["type"] := "IfStatement";
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "!==";
__n98 := {  };
__n98["type"] := "UnaryExpression";
__n98["operator"] := "+";
__n99 := {  };
__n99["type"] := "MemberExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "Number";
__n99["object"] := __n100;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "POSITIVE_INFINITY";
__n101["raw"] := "\"POSITIVE_INFINITY\"";
__n99["property"] := __n101;
__n99["computed"] := true;
__n98["argument"] := __n99;
__n98["prefix"] := true;
__n97["left"] := __n98;
__n102 := {  };
__n102["type"] := "MemberExpression";
__n103 := {  };
__n103["type"] := "Identifier";
__n103["name"] := "Number";
__n102["object"] := __n103;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "POSITIVE_INFINITY";
__n104["raw"] := "\"POSITIVE_INFINITY\"";
__n102["property"] := __n104;
__n102["computed"] := true;
__n97["right"] := __n102;
__n96["test"] := __n97;
__n105 := {  };
__n105["type"] := "BlockStatement";
__n107 := {  };
__n107["type"] := "ExpressionStatement";
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "$ERROR";
__n108["callee"] := __n109;
__n111 := {  };
__n111["type"] := "BinaryExpression";
__n111["operator"] := "+";
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "#4: +(+Infinity) === +Infinity. Actual: ";
__n112["raw"] := "'#4: +(+Infinity) === +Infinity. Actual: '";
__n111["left"] := __n112;
__n113 := {  };
__n113["type"] := "UnaryExpression";
__n113["operator"] := "+";
__n114 := {  };
__n114["type"] := "UnaryExpression";
__n114["operator"] := "+";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "Infinity";
__n114["argument"] := __n115;
__n114["prefix"] := true;
__n113["argument"] := __n114;
__n113["prefix"] := true;
__n111["right"] := __n113;
__n110 := [ __n111 ];
__n108["arguments"] := __n110;
__n107["expression"] := __n108;
__n106 := [ __n107 ];
__n105["body"] := __n106;
__n96["consequent"] := __n105;
__n96["alternate"] := null;
__n116 := {  };
__n116["type"] := "IfStatement";
__n117 := {  };
__n117["type"] := "BinaryExpression";
__n117["operator"] := "!==";
__n118 := {  };
__n118["type"] := "UnaryExpression";
__n118["operator"] := "+";
__n119 := {  };
__n119["type"] := "MemberExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "Number";
__n119["object"] := __n120;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "NEGATIVE_INFINITY";
__n121["raw"] := "\"NEGATIVE_INFINITY\"";
__n119["property"] := __n121;
__n119["computed"] := true;
__n118["argument"] := __n119;
__n118["prefix"] := true;
__n117["left"] := __n118;
__n122 := {  };
__n122["type"] := "MemberExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "Number";
__n122["object"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "NEGATIVE_INFINITY";
__n124["raw"] := "\"NEGATIVE_INFINITY\"";
__n122["property"] := __n124;
__n122["computed"] := true;
__n117["right"] := __n122;
__n116["test"] := __n117;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "$ERROR";
__n128["callee"] := __n129;
__n131 := {  };
__n131["type"] := "BinaryExpression";
__n131["operator"] := "+";
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := "#5: +(-Infinity) === -Infinity. Actual: ";
__n132["raw"] := "'#5: +(-Infinity) === -Infinity. Actual: '";
__n131["left"] := __n132;
__n133 := {  };
__n133["type"] := "UnaryExpression";
__n133["operator"] := "+";
__n134 := {  };
__n134["type"] := "UnaryExpression";
__n134["operator"] := "-";
__n135 := {  };
__n135["type"] := "Identifier";
__n135["name"] := "Infinity";
__n134["argument"] := __n135;
__n134["prefix"] := true;
__n133["argument"] := __n134;
__n133["prefix"] := true;
__n131["right"] := __n133;
__n130 := [ __n131 ];
__n128["arguments"] := __n130;
__n127["expression"] := __n128;
__n126 := [ __n127 ];
__n125["body"] := __n126;
__n116["consequent"] := __n125;
__n116["alternate"] := null;
__n136 := {  };
__n136["type"] := "IfStatement";
__n137 := {  };
__n137["type"] := "BinaryExpression";
__n137["operator"] := "!==";
__n138 := {  };
__n138["type"] := "UnaryExpression";
__n138["operator"] := "+";
__n139 := {  };
__n139["type"] := "MemberExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "Number";
__n139["object"] := __n140;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := "MAX_VALUE";
__n141["raw"] := "\"MAX_VALUE\"";
__n139["property"] := __n141;
__n139["computed"] := true;
__n138["argument"] := __n139;
__n138["prefix"] := true;
__n137["left"] := __n138;
__n142 := {  };
__n142["type"] := "MemberExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "Number";
__n142["object"] := __n143;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "MAX_VALUE";
__n144["raw"] := "\"MAX_VALUE\"";
__n142["property"] := __n144;
__n142["computed"] := true;
__n137["right"] := __n142;
__n136["test"] := __n137;
__n145 := {  };
__n145["type"] := "BlockStatement";
__n147 := {  };
__n147["type"] := "ExpressionStatement";
__n148 := {  };
__n148["type"] := "CallExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "$ERROR";
__n148["callee"] := __n149;
__n151 := {  };
__n151["type"] := "BinaryExpression";
__n151["operator"] := "+";
__n152 := {  };
__n152["type"] := "Literal";
__n152["value"] := "#6: +(Number.MAX_VALUE) === Number.MAX_VALUE. Actual: ";
__n152["raw"] := "'#6: +(Number.MAX_VALUE) === Number.MAX_VALUE. Actual: '";
__n151["left"] := __n152;
__n153 := {  };
__n153["type"] := "UnaryExpression";
__n153["operator"] := "+";
__n154 := {  };
__n154["type"] := "MemberExpression";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "Number";
__n154["object"] := __n155;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := "MAX_VALUE";
__n156["raw"] := "\"MAX_VALUE\"";
__n154["property"] := __n156;
__n154["computed"] := true;
__n153["argument"] := __n154;
__n153["prefix"] := true;
__n151["right"] := __n153;
__n150 := [ __n151 ];
__n148["arguments"] := __n150;
__n147["expression"] := __n148;
__n146 := [ __n147 ];
__n145["body"] := __n146;
__n136["consequent"] := __n145;
__n136["alternate"] := null;
__n157 := {  };
__n157["type"] := "IfStatement";
__n158 := {  };
__n158["type"] := "BinaryExpression";
__n158["operator"] := "!==";
__n159 := {  };
__n159["type"] := "UnaryExpression";
__n159["operator"] := "+";
__n160 := {  };
__n160["type"] := "MemberExpression";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "Number";
__n160["object"] := __n161;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := "MIN_VALUE";
__n162["raw"] := "\"MIN_VALUE\"";
__n160["property"] := __n162;
__n160["computed"] := true;
__n159["argument"] := __n160;
__n159["prefix"] := true;
__n158["left"] := __n159;
__n163 := {  };
__n163["type"] := "MemberExpression";
__n164 := {  };
__n164["type"] := "Identifier";
__n164["name"] := "Number";
__n163["object"] := __n164;
__n165 := {  };
__n165["type"] := "Literal";
__n165["value"] := "MIN_VALUE";
__n165["raw"] := "\"MIN_VALUE\"";
__n163["property"] := __n165;
__n163["computed"] := true;
__n158["right"] := __n163;
__n157["test"] := __n158;
__n166 := {  };
__n166["type"] := "BlockStatement";
__n168 := {  };
__n168["type"] := "ExpressionStatement";
__n169 := {  };
__n169["type"] := "CallExpression";
__n170 := {  };
__n170["type"] := "Identifier";
__n170["name"] := "$ERROR";
__n169["callee"] := __n170;
__n172 := {  };
__n172["type"] := "BinaryExpression";
__n172["operator"] := "+";
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := "#7: +(Number.MIN_VALUE) === Number.MIN_VALUE. Actual: ";
__n173["raw"] := "'#7: +(Number.MIN_VALUE) === Number.MIN_VALUE. Actual: '";
__n172["left"] := __n173;
__n174 := {  };
__n174["type"] := "UnaryExpression";
__n174["operator"] := "+";
__n175 := {  };
__n175["type"] := "MemberExpression";
__n176 := {  };
__n176["type"] := "Identifier";
__n176["name"] := "Number";
__n175["object"] := __n176;
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "MIN_VALUE";
__n177["raw"] := "\"MIN_VALUE\"";
__n175["property"] := __n177;
__n175["computed"] := true;
__n174["argument"] := __n175;
__n174["prefix"] := true;
__n172["right"] := __n174;
__n171 := [ __n172 ];
__n169["arguments"] := __n171;
__n168["expression"] := __n169;
__n167 := [ __n168 ];
__n166["body"] := __n167;
__n157["consequent"] := __n166;
__n157["alternate"] := null;
__n1 := [ __n2, __n22, __n59, __n96, __n116, __n136, __n157 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n178 := [  ];
__n0["variableDeclarations"] := __n178;
__n179 := [  ];
__n0["functionDeclarations"] := __n179;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}