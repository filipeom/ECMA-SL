function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n4["init"] := null;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "AssignmentExpression";
__n7["operator"] := "=";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "x";
__n7["left"] := __n8;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "U+0009";
__n9["raw"] := "'U+0009'";
__n7["right"] := __n9;
__n6["expression"] := __n7;
__n10 := {  };
__n10["type"] := "IfStatement";
__n11 := {  };
__n11["type"] := "BinaryExpression";
__n11["operator"] := "!==";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "x";
__n11["left"] := __n12;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "U+0009";
__n13["raw"] := "'U+0009'";
__n11["right"] := __n13;
__n10["test"] := __n11;
__n14 := {  };
__n14["type"] := "BlockStatement";
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "$ERROR";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "#1: (x\\u0009=\\u0009true) === true";
__n20["raw"] := "'#1: (x\\\\u0009=\\\\u0009true) === true'";
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n16["expression"] := __n17;
__n15 := [ __n16 ];
__n14["body"] := __n15;
__n10["consequent"] := __n14;
__n10["alternate"] := null;
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "AssignmentExpression";
__n22["operator"] := "=";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "x";
__n22["left"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "U+000B";
__n24["raw"] := "'U+000B'";
__n22["right"] := __n24;
__n21["expression"] := __n22;
__n25 := {  };
__n25["type"] := "IfStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "!==";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "x";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "U+000B";
__n28["raw"] := "'U+000B'";
__n26["right"] := __n28;
__n25["test"] := __n26;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "ExpressionStatement";
__n32 := {  };
__n32["type"] := "CallExpression";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "$ERROR";
__n32["callee"] := __n33;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "#2: (x\\u000B=\\u000Btrue) === true";
__n35["raw"] := "'#2: (x\\\\u000B=\\\\u000Btrue) === true'";
__n34 := [ __n35 ];
__n32["arguments"] := __n34;
__n31["expression"] := __n32;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n25["consequent"] := __n29;
__n25["alternate"] := null;
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "AssignmentExpression";
__n37["operator"] := "=";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "x";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "U+000C";
__n39["raw"] := "'U+000C'";
__n37["right"] := __n39;
__n36["expression"] := __n37;
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "!==";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "x";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "U+000C";
__n43["raw"] := "'U+000C'";
__n41["right"] := __n43;
__n40["test"] := __n41;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$ERROR";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := "#3: (x\\u000C=\\u000Ctrue) === true";
__n50["raw"] := "'#3: (x\\\\u000C=\\\\u000Ctrue) === true'";
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n40["consequent"] := __n44;
__n40["alternate"] := null;
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "AssignmentExpression";
__n52["operator"] := "=";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "x";
__n52["left"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "U+0020";
__n54["raw"] := "'U+0020'";
__n52["right"] := __n54;
__n51["expression"] := __n52;
__n55 := {  };
__n55["type"] := "IfStatement";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "!==";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "x";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "U+0020";
__n58["raw"] := "'U+0020'";
__n56["right"] := __n58;
__n55["test"] := __n56;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "#4: (x\\u0020=\\u0020true) === true";
__n65["raw"] := "'#4: (x\\\\u0020=\\\\u0020true) === true'";
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n55["consequent"] := __n59;
__n55["alternate"] := null;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "AssignmentExpression";
__n67["operator"] := "=";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "x";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "U+00A0";
__n69["raw"] := "'U+00A0'";
__n67["right"] := __n69;
__n66["expression"] := __n67;
__n70 := {  };
__n70["type"] := "IfStatement";
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "!==";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "x";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "U+00A0";
__n73["raw"] := "'U+00A0'";
__n71["right"] := __n73;
__n70["test"] := __n71;
__n74 := {  };
__n74["type"] := "BlockStatement";
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "CallExpression";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "$ERROR";
__n77["callee"] := __n78;
__n80 := {  };
__n80["type"] := "Literal";
__n80["value"] := "#5: (x\\u00A0=\\u00A0true) === true";
__n80["raw"] := "'#5: (x\\\\u00A0=\\\\u00A0true) === true'";
__n79 := [ __n80 ];
__n77["arguments"] := __n79;
__n76["expression"] := __n77;
__n75 := [ __n76 ];
__n74["body"] := __n75;
__n70["consequent"] := __n74;
__n70["alternate"] := null;
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "AssignmentExpression";
__n82["operator"] := "=";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "x";
__n82["left"] := __n83;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "U+000D";
__n84["raw"] := "'U+000D'";
__n82["right"] := __n84;
__n81["expression"] := __n82;
__n85 := {  };
__n85["type"] := "IfStatement";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "!==";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "x";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := "U+000D";
__n88["raw"] := "'U+000D'";
__n86["right"] := __n88;
__n85["test"] := __n86;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "ExpressionStatement";
__n92 := {  };
__n92["type"] := "CallExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "$ERROR";
__n92["callee"] := __n93;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := "#7: (x\\u000D=\\u000Dtrue) === true";
__n95["raw"] := "'#7: (x\\\\u000D=\\\\u000Dtrue) === true'";
__n94 := [ __n95 ];
__n92["arguments"] := __n94;
__n91["expression"] := __n92;
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n85["consequent"] := __n89;
__n85["alternate"] := null;
__n96 := {  };
__n96["type"] := "ExpressionStatement";
__n97 := {  };
__n97["type"] := "AssignmentExpression";
__n97["operator"] := "=";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "x";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "U+2028";
__n99["raw"] := "'U+2028'";
__n97["right"] := __n99;
__n96["expression"] := __n97;
__n100 := {  };
__n100["type"] := "IfStatement";
__n101 := {  };
__n101["type"] := "BinaryExpression";
__n101["operator"] := "!==";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "x";
__n101["left"] := __n102;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "U+2028";
__n103["raw"] := "'U+2028'";
__n101["right"] := __n103;
__n100["test"] := __n101;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "$ERROR";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "#8: (x\\u2028=\\u2028true) === true";
__n110["raw"] := "'#8: (x\\\\u2028=\\\\u2028true) === true'";
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n105 := [ __n106 ];
__n104["body"] := __n105;
__n100["consequent"] := __n104;
__n100["alternate"] := null;
__n111 := {  };
__n111["type"] := "ExpressionStatement";
__n112 := {  };
__n112["type"] := "AssignmentExpression";
__n112["operator"] := "=";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "x";
__n112["left"] := __n113;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "U+2029";
__n114["raw"] := "'U+2029'";
__n112["right"] := __n114;
__n111["expression"] := __n112;
__n115 := {  };
__n115["type"] := "IfStatement";
__n116 := {  };
__n116["type"] := "BinaryExpression";
__n116["operator"] := "!==";
__n117 := {  };
__n117["type"] := "Identifier";
__n117["name"] := "x";
__n116["left"] := __n117;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "U+2029";
__n118["raw"] := "'U+2029'";
__n116["right"] := __n118;
__n115["test"] := __n116;
__n119 := {  };
__n119["type"] := "BlockStatement";
__n121 := {  };
__n121["type"] := "ExpressionStatement";
__n122 := {  };
__n122["type"] := "CallExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "$ERROR";
__n122["callee"] := __n123;
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := "#9: (x\\u2029=\\u2029true) === true";
__n125["raw"] := "'#9: (x\\\\u2029=\\\\u2029true) === true'";
__n124 := [ __n125 ];
__n122["arguments"] := __n124;
__n121["expression"] := __n122;
__n120 := [ __n121 ];
__n119["body"] := __n120;
__n115["consequent"] := __n119;
__n115["alternate"] := null;
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "AssignmentExpression";
__n127["operator"] := "=";
__n128 := {  };
__n128["type"] := "Identifier";
__n128["name"] := "x";
__n127["left"] := __n128;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "U+0009U+000BU+000CU+0020U+00A0U+000DU+2028U+2029";
__n129["raw"] := "'U+0009U+000BU+000CU+0020U+00A0U+000DU+2028U+2029'";
__n127["right"] := __n129;
__n126["expression"] := __n127;
__n130 := {  };
__n130["type"] := "IfStatement";
__n131 := {  };
__n131["type"] := "BinaryExpression";
__n131["operator"] := "!==";
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "x";
__n131["left"] := __n132;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "U+0009U+000BU+000CU+0020U+00A0U+000DU+2028U+2029";
__n133["raw"] := "'U+0009U+000BU+000CU+0020U+00A0U+000DU+2028U+2029'";
__n131["right"] := __n133;
__n130["test"] := __n131;
__n134 := {  };
__n134["type"] := "BlockStatement";
__n136 := {  };
__n136["type"] := "ExpressionStatement";
__n137 := {  };
__n137["type"] := "CallExpression";
__n138 := {  };
__n138["type"] := "Identifier";
__n138["name"] := "$ERROR";
__n137["callee"] := __n138;
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "#10: (x\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000D\\u2028\\u2029=\\u0009\\u000B\\u000C\\u0020\\u00A0\\u000D\\u2028\\u2029true) === true";
__n140["raw"] := "'#10: (x\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000D\\\\u2028\\\\u2029=\\\\u0009\\\\u000B\\\\u000C\\\\u0020\\\\u00A0\\\\u000D\\\\u2028\\\\u2029true) === true'";
__n139 := [ __n140 ];
__n137["arguments"] := __n139;
__n136["expression"] := __n137;
__n135 := [ __n136 ];
__n134["body"] := __n135;
__n130["consequent"] := __n134;
__n130["alternate"] := null;
__n1 := [ __n2, __n6, __n10, __n21, __n25, __n36, __n40, __n51, __n55, __n66, __n70, __n81, __n85, __n96, __n100, __n111, __n115, __n126, __n130 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n141 := [ "x" ];
__n0["variableDeclarations"] := __n141;
__n142 := [  ];
__n0["functionDeclarations"] := __n142;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}