function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "UnaryExpression";
__n4["operator"] := "~";
__n5 := {  };
__n5["type"] := "UnaryExpression";
__n5["operator"] := "-";
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 2147483649.;
__n6["raw"] := "2147483649";
__n5["argument"] := __n6;
__n5["prefix"] := true;
__n4["argument"] := __n5;
__n4["prefix"] := true;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "UnaryExpression";
__n7["operator"] := "~";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 2147483647.;
__n8["raw"] := "2147483647";
__n7["argument"] := __n8;
__n7["prefix"] := true;
__n3["right"] := __n7;
__n2["test"] := __n3;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "$ERROR";
__n12["callee"] := __n13;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "#1: ~-2147483649 === ~2147483647";
__n15["raw"] := "'#1: ~-2147483649 === ~2147483647'";
__n14 := [ __n15 ];
__n12["arguments"] := __n14;
__n11["expression"] := __n12;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n2["consequent"] := __n9;
__n2["alternate"] := null;
__n16 := {  };
__n16["type"] := "IfStatement";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "!==";
__n18 := {  };
__n18["type"] := "UnaryExpression";
__n18["operator"] := "~";
__n19 := {  };
__n19["type"] := "UnaryExpression";
__n19["operator"] := "-";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 4294967296.;
__n20["raw"] := "4294967296";
__n19["argument"] := __n20;
__n19["prefix"] := true;
__n18["argument"] := __n19;
__n18["prefix"] := true;
__n17["left"] := __n18;
__n21 := {  };
__n21["type"] := "UnaryExpression";
__n21["operator"] := "~";
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 0.;
__n22["raw"] := "0";
__n21["argument"] := __n22;
__n21["prefix"] := true;
__n17["right"] := __n21;
__n16["test"] := __n17;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "$ERROR";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "#2: ~-4294967296 === ~0";
__n29["raw"] := "'#2: ~-4294967296 === ~0'";
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n16["consequent"] := __n23;
__n16["alternate"] := null;
__n30 := {  };
__n30["type"] := "IfStatement";
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "!==";
__n32 := {  };
__n32["type"] := "UnaryExpression";
__n32["operator"] := "~";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 2147483648.;
__n33["raw"] := "2147483648";
__n32["argument"] := __n33;
__n32["prefix"] := true;
__n31["left"] := __n32;
__n34 := {  };
__n34["type"] := "UnaryExpression";
__n34["operator"] := "~";
__n35 := {  };
__n35["type"] := "UnaryExpression";
__n35["operator"] := "-";
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 2147483648.;
__n36["raw"] := "2147483648";
__n35["argument"] := __n36;
__n35["prefix"] := true;
__n34["argument"] := __n35;
__n34["prefix"] := true;
__n31["right"] := __n34;
__n30["test"] := __n31;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$ERROR";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "#3: ~2147483648 === ~-2147483648";
__n43["raw"] := "'#3: ~2147483648 === ~-2147483648'";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n30["consequent"] := __n37;
__n30["alternate"] := null;
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "UnaryExpression";
__n46["operator"] := "~";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 4294967296.;
__n47["raw"] := "4294967296";
__n46["argument"] := __n47;
__n46["prefix"] := true;
__n45["left"] := __n46;
__n48 := {  };
__n48["type"] := "UnaryExpression";
__n48["operator"] := "~";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 0.;
__n49["raw"] := "0";
__n48["argument"] := __n49;
__n48["prefix"] := true;
__n45["right"] := __n48;
__n44["test"] := __n45;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "$ERROR";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := "#4: ~4294967296 === ~0";
__n56["raw"] := "'#4: ~4294967296 === ~0'";
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n44["consequent"] := __n50;
__n44["alternate"] := null;
__n1 := [ __n2, __n16, __n30, __n44 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n57 := [  ];
__n0["variableDeclarations"] := __n57;
__n58 := [  ];
__n0["functionDeclarations"] := __n58;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}