function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "x";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 0.;
__n6["raw"] := "0";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "scope";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "x";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [  ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "UnaryExpression";
__n20["operator"] := "delete";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "ThisExpression";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "x";
__n23["raw"] := "\"x\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["argument"] := __n21;
__n20["prefix"] := true;
__n19["expression"] := __n20;
__n24 := {  };
__n24["type"] := "ReturnStatement";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 2.;
__n25["raw"] := "2";
__n24["argument"] := __n25;
__n18 := [ __n19, __n24 ];
__n17["body"] := __n18;
__n26 := [  ];
__n17["variableDeclarations"] := __n26;
__n27 := [  ];
__n17["functionDeclarations"] := __n27;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["async"] := false;
__n15["expression"] := false;
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "get";
__n13["shorthand"] := false;
__n12 := [ __n13 ];
__n11["properties"] := __n12;
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n28 := {  };
__n28["type"] := "WithStatement";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "scope";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "AssignmentExpression";
__n33["operator"] := "^=";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "x";
__n33["left"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 3.;
__n35["raw"] := "3";
__n33["right"] := __n35;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n28["body"] := __n30;
__n36 := {  };
__n36["type"] := "IfStatement";
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "!==";
__n38 := {  };
__n38["type"] := "MemberExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "scope";
__n38["object"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "x";
__n40["raw"] := "\"x\"";
__n38["property"] := __n40;
__n38["computed"] := true;
__n37["left"] := __n38;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 1.;
__n41["raw"] := "1";
__n37["right"] := __n41;
__n36["test"] := __n37;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$ERROR";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "+";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "#1: scope.x === 1. Actual: ";
__n49["raw"] := "'#1: scope.x === 1. Actual: '";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "MemberExpression";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "scope";
__n50["object"] := __n51;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "x";
__n52["raw"] := "\"x\"";
__n50["property"] := __n52;
__n50["computed"] := true;
__n48["right"] := __n50;
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n36["consequent"] := __n42;
__n36["alternate"] := null;
__n53 := {  };
__n53["type"] := "IfStatement";
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "!==";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "x";
__n54["left"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 0.;
__n56["raw"] := "0";
__n54["right"] := __n56;
__n53["test"] := __n54;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "$ERROR";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "+";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#2: x === 0. Actual: ";
__n64["raw"] := "'#2: x === 0. Actual: '";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "x";
__n63["right"] := __n65;
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n53["consequent"] := __n57;
__n53["alternate"] := null;
__n1 := [ __n2, __n7, __n28, __n36, __n53 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n66 := [ "x", "scope" ];
__n0["variableDeclarations"] := __n66;
__n67 := [  ];
__n0["functionDeclarations"] := __n67;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}