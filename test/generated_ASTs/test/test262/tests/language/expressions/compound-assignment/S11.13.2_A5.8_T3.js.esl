function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "outerScope";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "x";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "VariableDeclaration";
__n13 := {  };
__n13["type"] := "VariableDeclarator";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "innerScope";
__n13["id"] := __n14;
__n15 := {  };
__n15["type"] := "ObjectExpression";
__n17 := {  };
__n17["type"] := "Property";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "x";
__n17["key"] := __n18;
__n19 := {  };
__n19["type"] := "FunctionExpression";
__n19["id"] := null;
__n20 := [  ];
__n19["params"] := __n20;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "UnaryExpression";
__n24["operator"] := "delete";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "ThisExpression";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "x";
__n27["raw"] := "\"x\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["argument"] := __n25;
__n24["prefix"] := true;
__n23["expression"] := __n24;
__n28 := {  };
__n28["type"] := "ReturnStatement";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := 16.;
__n29["raw"] := "16";
__n28["argument"] := __n29;
__n22 := [ __n23, __n28 ];
__n21["body"] := __n22;
__n30 := [  ];
__n21["variableDeclarations"] := __n30;
__n31 := [  ];
__n21["functionDeclarations"] := __n31;
__n21["codeType"] := "function";
__n21["strict"] := false;
__n19["body"] := __n21;
__n19["generator"] := false;
__n19["async"] := false;
__n19["expression"] := false;
__n17["value"] := __n19;
__n17["computed"] := false;
__n17["kind"] := "get";
__n17["shorthand"] := false;
__n16 := [ __n17 ];
__n15["properties"] := __n16;
__n13["init"] := __n15;
__n12 := [ __n13 ];
__n11["declarations"] := __n12;
__n11["kind"] := "var";
__n32 := {  };
__n32["type"] := "WithStatement";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "outerScope";
__n32["object"] := __n33;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "WithStatement";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "innerScope";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "AssignmentExpression";
__n41["operator"] := ">>>=";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "x";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 3.;
__n43["raw"] := "3";
__n41["right"] := __n43;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n36["body"] := __n38;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n32["body"] := __n34;
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "innerScope";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "x";
__n48["raw"] := "\"x\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["left"] := __n46;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 2.;
__n49["raw"] := "2";
__n45["right"] := __n49;
__n44["test"] := __n45;
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "CallExpression";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "$ERROR";
__n53["callee"] := __n54;
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "+";
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "#1: innerScope.x === 2. Actual: ";
__n57["raw"] := "'#1: innerScope.x === 2. Actual: '";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "innerScope";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "x";
__n60["raw"] := "\"x\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n56["right"] := __n58;
__n55 := [ __n56 ];
__n53["arguments"] := __n55;
__n52["expression"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n44["consequent"] := __n50;
__n44["alternate"] := null;
__n61 := {  };
__n61["type"] := "IfStatement";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "!==";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "outerScope";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "x";
__n65["raw"] := "\"x\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 0.;
__n66["raw"] := "0";
__n62["right"] := __n66;
__n61["test"] := __n62;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "+";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "#2: outerScope.x === 0. Actual: ";
__n74["raw"] := "'#2: outerScope.x === 0. Actual: '";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "outerScope";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "x";
__n77["raw"] := "\"x\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n73["right"] := __n75;
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n61["consequent"] := __n67;
__n61["alternate"] := null;
__n1 := [ __n2, __n11, __n32, __n44, __n61 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n78 := [ "outerScope", "innerScope" ];
__n0["variableDeclarations"] := __n78;
__n79 := [  ];
__n0["functionDeclarations"] := __n79;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}