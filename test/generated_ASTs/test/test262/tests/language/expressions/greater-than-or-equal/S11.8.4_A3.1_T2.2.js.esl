function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := ">=";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := "1";
__n5["raw"] := "\"1\"";
__n4["left"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 1.;
__n6["raw"] := "1";
__n4["right"] := __n6;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := true;
__n7["raw"] := "true";
__n3["right"] := __n7;
__n2["test"] := __n3;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "$ERROR";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "#1: \"1\" >= 1 === true";
__n14["raw"] := "'#1: \"1\" >= 1 === true'";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["expression"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n2["consequent"] := __n8;
__n2["alternate"] := null;
__n15 := {  };
__n15["type"] := "IfStatement";
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "!==";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := ">=";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.;
__n18["raw"] := "1";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "1";
__n19["raw"] := "\"1\"";
__n17["right"] := __n19;
__n16["left"] := __n17;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := true;
__n20["raw"] := "true";
__n16["right"] := __n20;
__n15["test"] := __n16;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "$ERROR";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "#2: 1 >= \"1\" === true";
__n27["raw"] := "'#2: 1 >= \"1\" === true'";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n15["consequent"] := __n21;
__n15["alternate"] := null;
__n28 := {  };
__n28["type"] := "IfStatement";
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "!==";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := ">=";
__n31 := {  };
__n31["type"] := "NewExpression";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "String";
__n31["callee"] := __n32;
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "1";
__n34["raw"] := "\"1\"";
__n33 := [ __n34 ];
__n31["arguments"] := __n33;
__n30["left"] := __n31;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 1.;
__n35["raw"] := "1";
__n30["right"] := __n35;
__n29["left"] := __n30;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := true;
__n36["raw"] := "true";
__n29["right"] := __n36;
__n28["test"] := __n29;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$ERROR";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "#3: new String(\"1\") >= 1 === true";
__n43["raw"] := "'#3: new String(\"1\") >= 1 === true'";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n28["consequent"] := __n37;
__n28["alternate"] := null;
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := "!==";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := ">=";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 1.;
__n47["raw"] := "1";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "NewExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "String";
__n48["callee"] := __n49;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "1";
__n51["raw"] := "\"1\"";
__n50 := [ __n51 ];
__n48["arguments"] := __n50;
__n46["right"] := __n48;
__n45["left"] := __n46;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := true;
__n52["raw"] := "true";
__n45["right"] := __n52;
__n44["test"] := __n45;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "$ERROR";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#4: 1 >= new String(\"1\") === true";
__n59["raw"] := "'#4: 1 >= new String(\"1\") === true'";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n44["consequent"] := __n53;
__n44["alternate"] := null;
__n60 := {  };
__n60["type"] := "IfStatement";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "!==";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := ">=";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "1";
__n63["raw"] := "\"1\"";
__n62["left"] := __n63;
__n64 := {  };
__n64["type"] := "NewExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "Number";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 1.;
__n67["raw"] := "1";
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n62["right"] := __n64;
__n61["left"] := __n62;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := true;
__n68["raw"] := "true";
__n61["right"] := __n68;
__n60["test"] := __n61;
__n69 := {  };
__n69["type"] := "BlockStatement";
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "$ERROR";
__n72["callee"] := __n73;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "#5: \"1\" >= new Number(1) === true";
__n75["raw"] := "'#5: \"1\" >= new Number(1) === true'";
__n74 := [ __n75 ];
__n72["arguments"] := __n74;
__n71["expression"] := __n72;
__n70 := [ __n71 ];
__n69["body"] := __n70;
__n60["consequent"] := __n69;
__n60["alternate"] := null;
__n76 := {  };
__n76["type"] := "IfStatement";
__n77 := {  };
__n77["type"] := "BinaryExpression";
__n77["operator"] := "!==";
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := ">=";
__n79 := {  };
__n79["type"] := "NewExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "Number";
__n79["callee"] := __n80;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := 1.;
__n82["raw"] := "1";
__n81 := [ __n82 ];
__n79["arguments"] := __n81;
__n78["left"] := __n79;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "1";
__n83["raw"] := "\"1\"";
__n78["right"] := __n83;
__n77["left"] := __n78;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := true;
__n84["raw"] := "true";
__n77["right"] := __n84;
__n76["test"] := __n77;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "ExpressionStatement";
__n88 := {  };
__n88["type"] := "CallExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "$ERROR";
__n88["callee"] := __n89;
__n91 := {  };
__n91["type"] := "Literal";
__n91["value"] := "#6: new Number(1) >= \"1\" === true";
__n91["raw"] := "'#6: new Number(1) >= \"1\" === true'";
__n90 := [ __n91 ];
__n88["arguments"] := __n90;
__n87["expression"] := __n88;
__n86 := [ __n87 ];
__n85["body"] := __n86;
__n76["consequent"] := __n85;
__n76["alternate"] := null;
__n92 := {  };
__n92["type"] := "IfStatement";
__n93 := {  };
__n93["type"] := "BinaryExpression";
__n93["operator"] := "!==";
__n94 := {  };
__n94["type"] := "BinaryExpression";
__n94["operator"] := ">=";
__n95 := {  };
__n95["type"] := "NewExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "String";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "1";
__n98["raw"] := "\"1\"";
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n94["left"] := __n95;
__n99 := {  };
__n99["type"] := "NewExpression";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "Number";
__n99["callee"] := __n100;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 1.;
__n102["raw"] := "1";
__n101 := [ __n102 ];
__n99["arguments"] := __n101;
__n94["right"] := __n99;
__n93["left"] := __n94;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := true;
__n103["raw"] := "true";
__n93["right"] := __n103;
__n92["test"] := __n93;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "$ERROR";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "#7: new String(\"1\") >= new Number(1) === true";
__n110["raw"] := "'#7: new String(\"1\") >= new Number(1) === true'";
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n105 := [ __n106 ];
__n104["body"] := __n105;
__n92["consequent"] := __n104;
__n92["alternate"] := null;
__n111 := {  };
__n111["type"] := "IfStatement";
__n112 := {  };
__n112["type"] := "BinaryExpression";
__n112["operator"] := "!==";
__n113 := {  };
__n113["type"] := "BinaryExpression";
__n113["operator"] := ">=";
__n114 := {  };
__n114["type"] := "NewExpression";
__n115 := {  };
__n115["type"] := "Identifier";
__n115["name"] := "Number";
__n114["callee"] := __n115;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 1.;
__n117["raw"] := "1";
__n116 := [ __n117 ];
__n114["arguments"] := __n116;
__n113["left"] := __n114;
__n118 := {  };
__n118["type"] := "NewExpression";
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "String";
__n118["callee"] := __n119;
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "1";
__n121["raw"] := "\"1\"";
__n120 := [ __n121 ];
__n118["arguments"] := __n120;
__n113["right"] := __n118;
__n112["left"] := __n113;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := true;
__n122["raw"] := "true";
__n112["right"] := __n122;
__n111["test"] := __n112;
__n123 := {  };
__n123["type"] := "BlockStatement";
__n125 := {  };
__n125["type"] := "ExpressionStatement";
__n126 := {  };
__n126["type"] := "CallExpression";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "$ERROR";
__n126["callee"] := __n127;
__n129 := {  };
__n129["type"] := "Literal";
__n129["value"] := "#8: new Number(1) >= new String(\"1\") === true";
__n129["raw"] := "'#8: new Number(1) >= new String(\"1\") === true'";
__n128 := [ __n129 ];
__n126["arguments"] := __n128;
__n125["expression"] := __n126;
__n124 := [ __n125 ];
__n123["body"] := __n124;
__n111["consequent"] := __n123;
__n111["alternate"] := null;
__n130 := {  };
__n130["type"] := "IfStatement";
__n131 := {  };
__n131["type"] := "BinaryExpression";
__n131["operator"] := "!==";
__n132 := {  };
__n132["type"] := "BinaryExpression";
__n132["operator"] := ">=";
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "x";
__n133["raw"] := "\"x\"";
__n132["left"] := __n133;
__n134 := {  };
__n134["type"] := "Literal";
__n134["value"] := 1.;
__n134["raw"] := "1";
__n132["right"] := __n134;
__n131["left"] := __n132;
__n135 := {  };
__n135["type"] := "Literal";
__n135["value"] := false;
__n135["raw"] := "false";
__n131["right"] := __n135;
__n130["test"] := __n131;
__n136 := {  };
__n136["type"] := "BlockStatement";
__n138 := {  };
__n138["type"] := "ExpressionStatement";
__n139 := {  };
__n139["type"] := "CallExpression";
__n140 := {  };
__n140["type"] := "Identifier";
__n140["name"] := "$ERROR";
__n139["callee"] := __n140;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := "#9: \"x\" >= 1 === false";
__n142["raw"] := "'#9: \"x\" >= 1 === false'";
__n141 := [ __n142 ];
__n139["arguments"] := __n141;
__n138["expression"] := __n139;
__n137 := [ __n138 ];
__n136["body"] := __n137;
__n130["consequent"] := __n136;
__n130["alternate"] := null;
__n143 := {  };
__n143["type"] := "IfStatement";
__n144 := {  };
__n144["type"] := "BinaryExpression";
__n144["operator"] := "!==";
__n145 := {  };
__n145["type"] := "BinaryExpression";
__n145["operator"] := ">=";
__n146 := {  };
__n146["type"] := "Literal";
__n146["value"] := 1.;
__n146["raw"] := "1";
__n145["left"] := __n146;
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "x";
__n147["raw"] := "\"x\"";
__n145["right"] := __n147;
__n144["left"] := __n145;
__n148 := {  };
__n148["type"] := "Literal";
__n148["value"] := false;
__n148["raw"] := "false";
__n144["right"] := __n148;
__n143["test"] := __n144;
__n149 := {  };
__n149["type"] := "BlockStatement";
__n151 := {  };
__n151["type"] := "ExpressionStatement";
__n152 := {  };
__n152["type"] := "CallExpression";
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "$ERROR";
__n152["callee"] := __n153;
__n155 := {  };
__n155["type"] := "Literal";
__n155["value"] := "#10: 1 >= \"x\" === false";
__n155["raw"] := "'#10: 1 >= \"x\" === false'";
__n154 := [ __n155 ];
__n152["arguments"] := __n154;
__n151["expression"] := __n152;
__n150 := [ __n151 ];
__n149["body"] := __n150;
__n143["consequent"] := __n149;
__n143["alternate"] := null;
__n1 := [ __n2, __n15, __n28, __n44, __n60, __n76, __n92, __n111, __n130, __n143 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n156 := [  ];
__n0["variableDeclarations"] := __n156;
__n157 := [  ];
__n0["functionDeclarations"] := __n157;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}