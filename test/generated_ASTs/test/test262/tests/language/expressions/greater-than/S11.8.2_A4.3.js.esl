function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := ">";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := 1.;
__n5["raw"] := "1";
__n4["left"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 1.;
__n6["raw"] := "1";
__n4["right"] := __n6;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := false;
__n7["raw"] := "false";
__n3["right"] := __n7;
__n2["test"] := __n3;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "$ERROR";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "#1: (1 > 1) === false";
__n14["raw"] := "'#1: (1 > 1) === false'";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["expression"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n2["consequent"] := __n8;
__n2["alternate"] := null;
__n15 := {  };
__n15["type"] := "IfStatement";
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "!==";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := ">";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.1;
__n18["raw"] := "1.1";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.1;
__n19["raw"] := "1.1";
__n17["right"] := __n19;
__n16["left"] := __n17;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := false;
__n20["raw"] := "false";
__n16["right"] := __n20;
__n15["test"] := __n16;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "$ERROR";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "#2: (1.1 > 1.1) === false";
__n27["raw"] := "'#2: (1.1 > 1.1) === false'";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n15["consequent"] := __n21;
__n15["alternate"] := null;
__n28 := {  };
__n28["type"] := "IfStatement";
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "!==";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := ">";
__n31 := {  };
__n31["type"] := "UnaryExpression";
__n31["operator"] := "-";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 1.1;
__n32["raw"] := "1.1";
__n31["argument"] := __n32;
__n31["prefix"] := true;
__n30["left"] := __n31;
__n33 := {  };
__n33["type"] := "UnaryExpression";
__n33["operator"] := "-";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1.1;
__n34["raw"] := "1.1";
__n33["argument"] := __n34;
__n33["prefix"] := true;
__n30["right"] := __n33;
__n29["left"] := __n30;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := false;
__n35["raw"] := "false";
__n29["right"] := __n35;
__n28["test"] := __n29;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "$ERROR";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#3: (-1.1 > -1.1) === false";
__n42["raw"] := "'#3: (-1.1 > -1.1) === false'";
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n28["consequent"] := __n36;
__n28["alternate"] := null;
__n43 := {  };
__n43["type"] := "IfStatement";
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "!==";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := ">";
__n46 := {  };
__n46["type"] := "MemberExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "Number";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "NEGATIVE_INFINITY";
__n48["raw"] := "\"NEGATIVE_INFINITY\"";
__n46["property"] := __n48;
__n46["computed"] := true;
__n45["left"] := __n46;
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "Number";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "NEGATIVE_INFINITY";
__n51["raw"] := "\"NEGATIVE_INFINITY\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n45["right"] := __n49;
__n44["left"] := __n45;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := false;
__n52["raw"] := "false";
__n44["right"] := __n52;
__n43["test"] := __n44;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "$ERROR";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#4: (-Infinity > -Infinity) === false";
__n59["raw"] := "'#4: (-Infinity > -Infinity) === false'";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n43["consequent"] := __n53;
__n43["alternate"] := null;
__n60 := {  };
__n60["type"] := "IfStatement";
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "!==";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := ">";
__n63 := {  };
__n63["type"] := "MemberExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "Number";
__n63["object"] := __n64;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "POSITIVE_INFINITY";
__n65["raw"] := "\"POSITIVE_INFINITY\"";
__n63["property"] := __n65;
__n63["computed"] := true;
__n62["left"] := __n63;
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "Number";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "POSITIVE_INFINITY";
__n68["raw"] := "\"POSITIVE_INFINITY\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n62["right"] := __n66;
__n61["left"] := __n62;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := false;
__n69["raw"] := "false";
__n61["right"] := __n69;
__n60["test"] := __n61;
__n70 := {  };
__n70["type"] := "BlockStatement";
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "$ERROR";
__n73["callee"] := __n74;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "#5: (+Infinity > +Infinity) === false";
__n76["raw"] := "'#5: (+Infinity > +Infinity) === false'";
__n75 := [ __n76 ];
__n73["arguments"] := __n75;
__n72["expression"] := __n73;
__n71 := [ __n72 ];
__n70["body"] := __n71;
__n60["consequent"] := __n70;
__n60["alternate"] := null;
__n77 := {  };
__n77["type"] := "IfStatement";
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "!==";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := ">";
__n80 := {  };
__n80["type"] := "MemberExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "Number";
__n80["object"] := __n81;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "MAX_VALUE";
__n82["raw"] := "\"MAX_VALUE\"";
__n80["property"] := __n82;
__n80["computed"] := true;
__n79["left"] := __n80;
__n83 := {  };
__n83["type"] := "MemberExpression";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "Number";
__n83["object"] := __n84;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "MAX_VALUE";
__n85["raw"] := "\"MAX_VALUE\"";
__n83["property"] := __n85;
__n83["computed"] := true;
__n79["right"] := __n83;
__n78["left"] := __n79;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := false;
__n86["raw"] := "false";
__n78["right"] := __n86;
__n77["test"] := __n78;
__n87 := {  };
__n87["type"] := "BlockStatement";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "CallExpression";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "$ERROR";
__n90["callee"] := __n91;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "#6: (Number.MAX_VALUE > Number.MAX_VALUE) === false";
__n93["raw"] := "'#6: (Number.MAX_VALUE > Number.MAX_VALUE) === false'";
__n92 := [ __n93 ];
__n90["arguments"] := __n92;
__n89["expression"] := __n90;
__n88 := [ __n89 ];
__n87["body"] := __n88;
__n77["consequent"] := __n87;
__n77["alternate"] := null;
__n94 := {  };
__n94["type"] := "IfStatement";
__n95 := {  };
__n95["type"] := "BinaryExpression";
__n95["operator"] := "!==";
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := ">";
__n97 := {  };
__n97["type"] := "MemberExpression";
__n98 := {  };
__n98["type"] := "Identifier";
__n98["name"] := "Number";
__n97["object"] := __n98;
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "MIN_VALUE";
__n99["raw"] := "\"MIN_VALUE\"";
__n97["property"] := __n99;
__n97["computed"] := true;
__n96["left"] := __n97;
__n100 := {  };
__n100["type"] := "MemberExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "Number";
__n100["object"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := "MIN_VALUE";
__n102["raw"] := "\"MIN_VALUE\"";
__n100["property"] := __n102;
__n100["computed"] := true;
__n96["right"] := __n100;
__n95["left"] := __n96;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := false;
__n103["raw"] := "false";
__n95["right"] := __n103;
__n94["test"] := __n95;
__n104 := {  };
__n104["type"] := "BlockStatement";
__n106 := {  };
__n106["type"] := "ExpressionStatement";
__n107 := {  };
__n107["type"] := "CallExpression";
__n108 := {  };
__n108["type"] := "Identifier";
__n108["name"] := "$ERROR";
__n107["callee"] := __n108;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "#7: (Number.MIN_VALUE > Number.MIN_VALUE) === false";
__n110["raw"] := "'#7: (Number.MIN_VALUE > Number.MIN_VALUE) === false'";
__n109 := [ __n110 ];
__n107["arguments"] := __n109;
__n106["expression"] := __n107;
__n105 := [ __n106 ];
__n104["body"] := __n105;
__n94["consequent"] := __n104;
__n94["alternate"] := null;
__n1 := [ __n2, __n15, __n28, __n43, __n60, __n77, __n94 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n111 := [  ];
__n0["variableDeclarations"] := __n111;
__n112 := [  ];
__n0["functionDeclarations"] := __n112;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}