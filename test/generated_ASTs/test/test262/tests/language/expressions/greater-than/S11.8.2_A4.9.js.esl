function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := ">";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := 1.;
__n5["raw"] := "1";
__n4["left"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 1.1;
__n6["raw"] := "1.1";
__n4["right"] := __n6;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := false;
__n7["raw"] := "false";
__n3["right"] := __n7;
__n2["test"] := __n3;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "$ERROR";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "#1: (1 > 1.1) === false";
__n14["raw"] := "'#1: (1 > 1.1) === false'";
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["expression"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n2["consequent"] := __n8;
__n2["alternate"] := null;
__n15 := {  };
__n15["type"] := "IfStatement";
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "!==";
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := ">";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.1;
__n18["raw"] := "1.1";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 1.;
__n19["raw"] := "1";
__n17["right"] := __n19;
__n16["left"] := __n17;
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := true;
__n20["raw"] := "true";
__n16["right"] := __n20;
__n15["test"] := __n16;
__n21 := {  };
__n21["type"] := "BlockStatement";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "$ERROR";
__n24["callee"] := __n25;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "#2: (1.1 > 1) === true";
__n27["raw"] := "'#2: (1.1 > 1) === true'";
__n26 := [ __n27 ];
__n24["arguments"] := __n26;
__n23["expression"] := __n24;
__n22 := [ __n23 ];
__n21["body"] := __n22;
__n15["consequent"] := __n21;
__n15["alternate"] := null;
__n28 := {  };
__n28["type"] := "IfStatement";
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "!==";
__n30 := {  };
__n30["type"] := "BinaryExpression";
__n30["operator"] := ">";
__n31 := {  };
__n31["type"] := "UnaryExpression";
__n31["operator"] := "-";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 1.;
__n32["raw"] := "1";
__n31["argument"] := __n32;
__n31["prefix"] := true;
__n30["left"] := __n31;
__n33 := {  };
__n33["type"] := "UnaryExpression";
__n33["operator"] := "-";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1.1;
__n34["raw"] := "1.1";
__n33["argument"] := __n34;
__n33["prefix"] := true;
__n30["right"] := __n33;
__n29["left"] := __n30;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := true;
__n35["raw"] := "true";
__n29["right"] := __n35;
__n28["test"] := __n29;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "$ERROR";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#3: (-1 > -1.1) === true";
__n42["raw"] := "'#3: (-1 > -1.1) === true'";
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n28["consequent"] := __n36;
__n28["alternate"] := null;
__n43 := {  };
__n43["type"] := "IfStatement";
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "!==";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := ">";
__n46 := {  };
__n46["type"] := "UnaryExpression";
__n46["operator"] := "-";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 1.1;
__n47["raw"] := "1.1";
__n46["argument"] := __n47;
__n46["prefix"] := true;
__n45["left"] := __n46;
__n48 := {  };
__n48["type"] := "UnaryExpression";
__n48["operator"] := "-";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := 1.;
__n49["raw"] := "1";
__n48["argument"] := __n49;
__n48["prefix"] := true;
__n45["right"] := __n48;
__n44["left"] := __n45;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := false;
__n50["raw"] := "false";
__n44["right"] := __n50;
__n43["test"] := __n44;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ExpressionStatement";
__n54 := {  };
__n54["type"] := "CallExpression";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "$ERROR";
__n54["callee"] := __n55;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := "#4: (-1.1 > -1) === false";
__n57["raw"] := "'#4: (-1.1 > -1) === false'";
__n56 := [ __n57 ];
__n54["arguments"] := __n56;
__n53["expression"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n43["consequent"] := __n51;
__n43["alternate"] := null;
__n58 := {  };
__n58["type"] := "IfStatement";
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "!==";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := ">";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 0.1;
__n61["raw"] := "0.1";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 0.;
__n62["raw"] := "0";
__n60["right"] := __n62;
__n59["left"] := __n60;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := true;
__n63["raw"] := "true";
__n59["right"] := __n63;
__n58["test"] := __n59;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$ERROR";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "#5: (0.1 > 0) === true";
__n70["raw"] := "'#5: (0.1 > 0) === true'";
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n58["consequent"] := __n64;
__n58["alternate"] := null;
__n71 := {  };
__n71["type"] := "IfStatement";
__n72 := {  };
__n72["type"] := "BinaryExpression";
__n72["operator"] := "!==";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := ">";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := 0.;
__n74["raw"] := "0";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "UnaryExpression";
__n75["operator"] := "-";
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := 0.1;
__n76["raw"] := "0.1";
__n75["argument"] := __n76;
__n75["prefix"] := true;
__n73["right"] := __n75;
__n72["left"] := __n73;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := true;
__n77["raw"] := "true";
__n72["right"] := __n77;
__n71["test"] := __n72;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "ExpressionStatement";
__n81 := {  };
__n81["type"] := "CallExpression";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "$ERROR";
__n81["callee"] := __n82;
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "#6: (0 > -0.1) === true";
__n84["raw"] := "'#6: (0 > -0.1) === true'";
__n83 := [ __n84 ];
__n81["arguments"] := __n83;
__n80["expression"] := __n81;
__n79 := [ __n80 ];
__n78["body"] := __n79;
__n71["consequent"] := __n78;
__n71["alternate"] := null;
__n85 := {  };
__n85["type"] := "IfStatement";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := "!==";
__n87 := {  };
__n87["type"] := "BinaryExpression";
__n87["operator"] := ">";
__n88 := {  };
__n88["type"] := "MemberExpression";
__n89 := {  };
__n89["type"] := "Identifier";
__n89["name"] := "Number";
__n88["object"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := "MAX_VALUE";
__n90["raw"] := "\"MAX_VALUE\"";
__n88["property"] := __n90;
__n88["computed"] := true;
__n87["left"] := __n88;
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "/";
__n92 := {  };
__n92["type"] := "MemberExpression";
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "Number";
__n92["object"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "MAX_VALUE";
__n94["raw"] := "\"MAX_VALUE\"";
__n92["property"] := __n94;
__n92["computed"] := true;
__n91["left"] := __n92;
__n95 := {  };
__n95["type"] := "Literal";
__n95["value"] := 2.;
__n95["raw"] := "2";
__n91["right"] := __n95;
__n87["right"] := __n91;
__n86["left"] := __n87;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := true;
__n96["raw"] := "true";
__n86["right"] := __n96;
__n85["test"] := __n86;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "$ERROR";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "Literal";
__n103["value"] := "#7: (Number.MAX_VALUE > Number.MAX_VALUE/2) === true";
__n103["raw"] := "'#7: (Number.MAX_VALUE > Number.MAX_VALUE/2) === true'";
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["expression"] := __n100;
__n98 := [ __n99 ];
__n97["body"] := __n98;
__n85["consequent"] := __n97;
__n85["alternate"] := null;
__n104 := {  };
__n104["type"] := "IfStatement";
__n105 := {  };
__n105["type"] := "BinaryExpression";
__n105["operator"] := "!==";
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := ">";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "*";
__n108 := {  };
__n108["type"] := "MemberExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "Number";
__n108["object"] := __n109;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := "MIN_VALUE";
__n110["raw"] := "\"MIN_VALUE\"";
__n108["property"] := __n110;
__n108["computed"] := true;
__n107["left"] := __n108;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := 2.;
__n111["raw"] := "2";
__n107["right"] := __n111;
__n106["left"] := __n107;
__n112 := {  };
__n112["type"] := "MemberExpression";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "Number";
__n112["object"] := __n113;
__n114 := {  };
__n114["type"] := "Literal";
__n114["value"] := "MIN_VALUE";
__n114["raw"] := "\"MIN_VALUE\"";
__n112["property"] := __n114;
__n112["computed"] := true;
__n106["right"] := __n112;
__n105["left"] := __n106;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := true;
__n115["raw"] := "true";
__n105["right"] := __n115;
__n104["test"] := __n105;
__n116 := {  };
__n116["type"] := "BlockStatement";
__n118 := {  };
__n118["type"] := "ExpressionStatement";
__n119 := {  };
__n119["type"] := "CallExpression";
__n120 := {  };
__n120["type"] := "Identifier";
__n120["name"] := "$ERROR";
__n119["callee"] := __n120;
__n122 := {  };
__n122["type"] := "Literal";
__n122["value"] := "#8: (Number.MIN_VALUE*2 > Number.MIN_VALUE) === true";
__n122["raw"] := "'#8: (Number.MIN_VALUE*2 > Number.MIN_VALUE) === true'";
__n121 := [ __n122 ];
__n119["arguments"] := __n121;
__n118["expression"] := __n119;
__n117 := [ __n118 ];
__n116["body"] := __n117;
__n104["consequent"] := __n116;
__n104["alternate"] := null;
__n1 := [ __n2, __n15, __n28, __n43, __n58, __n71, __n85, __n104 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n123 := [  ];
__n0["variableDeclarations"] := __n123;
__n124 := [  ];
__n0["functionDeclarations"] := __n124;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}