function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "object";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n10["computed"] := true;
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "object";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "true";
__n12["raw"] := "\"true\"";
__n10["property"] := __n12;
__n9["left"] := __n10;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := 1.;
__n13["raw"] := "1";
__n9["right"] := __n13;
__n8["expression"] := __n9;
__n14 := {  };
__n14["type"] := "IfStatement";
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "!==";
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "in";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := true;
__n17["raw"] := "true";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "object";
__n16["right"] := __n18;
__n15["left"] := __n16;
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "in";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "true";
__n20["raw"] := "\"true\"";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "object";
__n19["right"] := __n21;
__n15["right"] := __n19;
__n14["test"] := __n15;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "$ERROR";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "#1: \"var object = {}; object[\"true\"] = 1; true in object === \"true\" in object";
__n28["raw"] := "'#1: \"var object = {}; object[\"true\"] = 1; true in object === \"true\" in object'";
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n24["expression"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n14["consequent"] := __n22;
__n14["alternate"] := null;
__n29 := {  };
__n29["type"] := "VariableDeclaration";
__n31 := {  };
__n31["type"] := "VariableDeclarator";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "object";
__n31["id"] := __n32;
__n33 := {  };
__n33["type"] := "ObjectExpression";
__n34 := [  ];
__n33["properties"] := __n34;
__n31["init"] := __n33;
__n30 := [ __n31 ];
__n29["declarations"] := __n30;
__n29["kind"] := "var";
__n35 := {  };
__n35["type"] := "ExpressionStatement";
__n36 := {  };
__n36["type"] := "AssignmentExpression";
__n36["operator"] := "=";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "object";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "Infinity";
__n39["raw"] := "\"Infinity\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["left"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 1.;
__n40["raw"] := "1";
__n36["right"] := __n40;
__n35["expression"] := __n36;
__n41 := {  };
__n41["type"] := "IfStatement";
__n42 := {  };
__n42["type"] := "BinaryExpression";
__n42["operator"] := "!==";
__n43 := {  };
__n43["type"] := "BinaryExpression";
__n43["operator"] := "in";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "Infinity";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "object";
__n43["right"] := __n45;
__n42["left"] := __n43;
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "in";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := "Infinity";
__n47["raw"] := "\"Infinity\"";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "object";
__n46["right"] := __n48;
__n42["right"] := __n46;
__n41["test"] := __n42;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "$ERROR";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "#2: \"var object = {}; object.Infinity = 1; Infinity in object === \"Infinity\" in object";
__n55["raw"] := "'#2: \"var object = {}; object.Infinity = 1; Infinity in object === \"Infinity\" in object'";
__n54 := [ __n55 ];
__n52["arguments"] := __n54;
__n51["expression"] := __n52;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n41["consequent"] := __n49;
__n41["alternate"] := null;
__n56 := {  };
__n56["type"] := "VariableDeclaration";
__n58 := {  };
__n58["type"] := "VariableDeclarator";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "object";
__n58["id"] := __n59;
__n60 := {  };
__n60["type"] := "ObjectExpression";
__n61 := [  ];
__n60["properties"] := __n61;
__n58["init"] := __n60;
__n57 := [ __n58 ];
__n56["declarations"] := __n57;
__n56["kind"] := "var";
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "AssignmentExpression";
__n63["operator"] := "=";
__n64 := {  };
__n64["type"] := "MemberExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "object";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "undefined";
__n66["raw"] := "\"undefined\"";
__n64["property"] := __n66;
__n64["computed"] := true;
__n63["left"] := __n64;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := 1.;
__n67["raw"] := "1";
__n63["right"] := __n67;
__n62["expression"] := __n63;
__n68 := {  };
__n68["type"] := "IfStatement";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "!==";
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "in";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "undefined";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "object";
__n70["right"] := __n72;
__n69["left"] := __n70;
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "in";
__n74 := {  };
__n74["type"] := "Literal";
__n74["value"] := "undefined";
__n74["raw"] := "\"undefined\"";
__n73["left"] := __n74;
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "object";
__n73["right"] := __n75;
__n69["right"] := __n73;
__n68["test"] := __n69;
__n76 := {  };
__n76["type"] := "BlockStatement";
__n78 := {  };
__n78["type"] := "ExpressionStatement";
__n79 := {  };
__n79["type"] := "CallExpression";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "$ERROR";
__n79["callee"] := __n80;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := "#4: \"var object = {}; object.undefined = 1; undefined in object === \"undefined\" in object";
__n82["raw"] := "'#4: \"var object = {}; object.undefined = 1; undefined in object === \"undefined\" in object'";
__n81 := [ __n82 ];
__n79["arguments"] := __n81;
__n78["expression"] := __n79;
__n77 := [ __n78 ];
__n76["body"] := __n77;
__n68["consequent"] := __n76;
__n68["alternate"] := null;
__n83 := {  };
__n83["type"] := "VariableDeclaration";
__n85 := {  };
__n85["type"] := "VariableDeclarator";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "object";
__n85["id"] := __n86;
__n87 := {  };
__n87["type"] := "ObjectExpression";
__n88 := [  ];
__n87["properties"] := __n88;
__n85["init"] := __n87;
__n84 := [ __n85 ];
__n83["declarations"] := __n84;
__n83["kind"] := "var";
__n89 := {  };
__n89["type"] := "ExpressionStatement";
__n90 := {  };
__n90["type"] := "AssignmentExpression";
__n90["operator"] := "=";
__n91 := {  };
__n91["type"] := "MemberExpression";
__n91["computed"] := true;
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "object";
__n91["object"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "null";
__n93["raw"] := "\"null\"";
__n91["property"] := __n93;
__n90["left"] := __n91;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := 1.;
__n94["raw"] := "1";
__n90["right"] := __n94;
__n89["expression"] := __n90;
__n95 := {  };
__n95["type"] := "IfStatement";
__n96 := {  };
__n96["type"] := "BinaryExpression";
__n96["operator"] := "!==";
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "in";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := 'null;
__n98["raw"] := "\"'null\"";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "Identifier";
__n99["name"] := "object";
__n97["right"] := __n99;
__n96["left"] := __n97;
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "in";
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := "null";
__n101["raw"] := "\"null\"";
__n100["left"] := __n101;
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "object";
__n100["right"] := __n102;
__n96["right"] := __n100;
__n95["test"] := __n96;
__n103 := {  };
__n103["type"] := "BlockStatement";
__n105 := {  };
__n105["type"] := "ExpressionStatement";
__n106 := {  };
__n106["type"] := "CallExpression";
__n107 := {  };
__n107["type"] := "Identifier";
__n107["name"] := "$ERROR";
__n106["callee"] := __n107;
__n109 := {  };
__n109["type"] := "Literal";
__n109["value"] := "#5: \"var object = {}; object[\"null\"] = 1; null in object === \"null\" in object";
__n109["raw"] := "'#5: \"var object = {}; object[\"null\"] = 1; null in object === \"null\" in object'";
__n108 := [ __n109 ];
__n106["arguments"] := __n108;
__n105["expression"] := __n106;
__n104 := [ __n105 ];
__n103["body"] := __n104;
__n95["consequent"] := __n103;
__n95["alternate"] := null;
__n1 := [ __n2, __n8, __n14, __n29, __n35, __n41, __n56, __n62, __n68, __n83, __n89, __n95 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n110 := [ "object" ];
__n0["variableDeclarations"] := __n110;
__n111 := [  ];
__n0["functionDeclarations"] := __n111;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}