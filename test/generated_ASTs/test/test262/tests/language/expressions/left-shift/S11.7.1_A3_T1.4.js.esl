function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "<<";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := 'null;
__n5["raw"] := "\"'null\"";
__n4["left"] := __n5;
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "undefined";
__n4["right"] := __n6;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := 0.;
__n7["raw"] := "0";
__n3["right"] := __n7;
__n2["test"] := __n3;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "$ERROR";
__n11["callee"] := __n12;
__n14 := {  };
__n14["type"] := "BinaryExpression";
__n14["operator"] := "+";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "#1: null << undefined === 0. Actual: ";
__n15["raw"] := "'#1: null << undefined === 0. Actual: '";
__n14["left"] := __n15;
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := "<<";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := 'null;
__n17["raw"] := "\"'null\"";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "undefined";
__n16["right"] := __n18;
__n14["right"] := __n16;
__n13 := [ __n14 ];
__n11["arguments"] := __n13;
__n10["expression"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n2["consequent"] := __n8;
__n2["alternate"] := null;
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!==";
__n21 := {  };
__n21["type"] := "BinaryExpression";
__n21["operator"] := "<<";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "undefined";
__n21["left"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 'null;
__n23["raw"] := "\"'null\"";
__n21["right"] := __n23;
__n20["left"] := __n21;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := 0.;
__n24["raw"] := "0";
__n20["right"] := __n24;
__n19["test"] := __n20;
__n25 := {  };
__n25["type"] := "BlockStatement";
__n27 := {  };
__n27["type"] := "ExpressionStatement";
__n28 := {  };
__n28["type"] := "CallExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "$ERROR";
__n28["callee"] := __n29;
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "+";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "#2: undefined << null === 0. Actual: ";
__n32["raw"] := "'#2: undefined << null === 0. Actual: '";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "<<";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "undefined";
__n33["left"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 'null;
__n35["raw"] := "\"'null\"";
__n33["right"] := __n35;
__n31["right"] := __n33;
__n30 := [ __n31 ];
__n28["arguments"] := __n30;
__n27["expression"] := __n28;
__n26 := [ __n27 ];
__n25["body"] := __n26;
__n19["consequent"] := __n25;
__n19["alternate"] := null;
__n36 := {  };
__n36["type"] := "IfStatement";
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "!==";
__n38 := {  };
__n38["type"] := "BinaryExpression";
__n38["operator"] := "<<";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "undefined";
__n38["left"] := __n39;
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "undefined";
__n38["right"] := __n40;
__n37["left"] := __n38;
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 0.;
__n41["raw"] := "0";
__n37["right"] := __n41;
__n36["test"] := __n37;
__n42 := {  };
__n42["type"] := "BlockStatement";
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$ERROR";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "+";
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "#3: undefined << undefined === 0. Actual: ";
__n49["raw"] := "'#3: undefined << undefined === 0. Actual: '";
__n48["left"] := __n49;
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "<<";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "undefined";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "undefined";
__n50["right"] := __n52;
__n48["right"] := __n50;
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n43 := [ __n44 ];
__n42["body"] := __n43;
__n36["consequent"] := __n42;
__n36["alternate"] := null;
__n53 := {  };
__n53["type"] := "IfStatement";
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "!==";
__n55 := {  };
__n55["type"] := "BinaryExpression";
__n55["operator"] := "<<";
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 'null;
__n56["raw"] := "\"'null\"";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "Literal";
__n57["value"] := 'null;
__n57["raw"] := "\"'null\"";
__n55["right"] := __n57;
__n54["left"] := __n55;
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := 0.;
__n58["raw"] := "0";
__n54["right"] := __n58;
__n53["test"] := __n54;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ExpressionStatement";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "$ERROR";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "BinaryExpression";
__n65["operator"] := "+";
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := "#4: null << null === 0. Actual: ";
__n66["raw"] := "'#4: null << null === 0. Actual: '";
__n65["left"] := __n66;
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "<<";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 'null;
__n68["raw"] := "\"'null\"";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 'null;
__n69["raw"] := "\"'null\"";
__n67["right"] := __n69;
__n65["right"] := __n67;
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["expression"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n53["consequent"] := __n59;
__n53["alternate"] := null;
__n1 := [ __n2, __n19, __n36, __n53 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n70 := [  ];
__n0["variableDeclarations"] := __n70;
__n71 := [  ];
__n0["functionDeclarations"] := __n71;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}