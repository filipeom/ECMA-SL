function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "object";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n8 := {  };
__n8["type"] := "Property";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "undefined";
__n8["key"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := true;
__n10["raw"] := "true";
__n8["value"] := __n10;
__n8["computed"] := false;
__n8["kind"] := "init";
__n8["shorthand"] := false;
__n7 := [ __n8 ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n11 := {  };
__n11["type"] := "IfStatement";
__n12 := {  };
__n12["type"] := "BinaryExpression";
__n12["operator"] := "!==";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "object";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "undefined";
__n15["raw"] := "\"undefined\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["left"] := __n13;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := true;
__n16["raw"] := "true";
__n12["right"] := __n16;
__n11["test"] := __n12;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "ExpressionStatement";
__n20 := {  };
__n20["type"] := "CallExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "$ERROR";
__n20["callee"] := __n21;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "#1: var object = {undefined : true}; object.undefined === true";
__n23["raw"] := "'#1: var object = {undefined : true}; object.undefined === true'";
__n22 := [ __n23 ];
__n20["arguments"] := __n22;
__n19["expression"] := __n20;
__n18 := [ __n19 ];
__n17["body"] := __n18;
__n11["consequent"] := __n17;
__n11["alternate"] := null;
__n24 := {  };
__n24["type"] := "VariableDeclaration";
__n26 := {  };
__n26["type"] := "VariableDeclarator";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "object";
__n26["id"] := __n27;
__n28 := {  };
__n28["type"] := "ObjectExpression";
__n30 := {  };
__n30["type"] := "Property";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "undefined";
__n30["key"] := __n31;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := true;
__n32["raw"] := "true";
__n30["value"] := __n32;
__n30["computed"] := false;
__n30["kind"] := "init";
__n30["shorthand"] := false;
__n29 := [ __n30 ];
__n28["properties"] := __n29;
__n26["init"] := __n28;
__n25 := [ __n26 ];
__n24["declarations"] := __n25;
__n24["kind"] := "var";
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "!==";
__n35 := {  };
__n35["type"] := "MemberExpression";
__n35["computed"] := true;
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "object";
__n35["object"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "undefined";
__n37["raw"] := "\"undefined\"";
__n35["property"] := __n37;
__n34["left"] := __n35;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := true;
__n38["raw"] := "true";
__n34["right"] := __n38;
__n33["test"] := __n34;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "CallExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "$ERROR";
__n42["callee"] := __n43;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "#2: var object = {undefined : true}; object[\"undefined\"] === true";
__n45["raw"] := "'#2: var object = {undefined : true}; object[\"undefined\"] === true'";
__n44 := [ __n45 ];
__n42["arguments"] := __n44;
__n41["expression"] := __n42;
__n40 := [ __n41 ];
__n39["body"] := __n40;
__n33["consequent"] := __n39;
__n33["alternate"] := null;
__n46 := {  };
__n46["type"] := "VariableDeclaration";
__n48 := {  };
__n48["type"] := "VariableDeclarator";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "object";
__n48["id"] := __n49;
__n50 := {  };
__n50["type"] := "ObjectExpression";
__n52 := {  };
__n52["type"] := "Property";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "true";
__n53["raw"] := "\"true\"";
__n52["key"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := true;
__n54["raw"] := "true";
__n52["value"] := __n54;
__n52["computed"] := false;
__n52["kind"] := "init";
__n52["shorthand"] := false;
__n51 := [ __n52 ];
__n50["properties"] := __n51;
__n48["init"] := __n50;
__n47 := [ __n48 ];
__n46["declarations"] := __n47;
__n46["kind"] := "var";
__n55 := {  };
__n55["type"] := "IfStatement";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "!==";
__n57 := {  };
__n57["type"] := "MemberExpression";
__n57["computed"] := true;
__n58 := {  };
__n58["type"] := "Identifier";
__n58["name"] := "object";
__n57["object"] := __n58;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "true";
__n59["raw"] := "\"true\"";
__n57["property"] := __n59;
__n56["left"] := __n57;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := true;
__n60["raw"] := "true";
__n56["right"] := __n60;
__n55["test"] := __n56;
__n61 := {  };
__n61["type"] := "BlockStatement";
__n63 := {  };
__n63["type"] := "ExpressionStatement";
__n64 := {  };
__n64["type"] := "CallExpression";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "$ERROR";
__n64["callee"] := __n65;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "#3: var object = {\"true\" : true}; object[\"true\"] === true";
__n67["raw"] := "'#3: var object = {\"true\" : true}; object[\"true\"] === true'";
__n66 := [ __n67 ];
__n64["arguments"] := __n66;
__n63["expression"] := __n64;
__n62 := [ __n63 ];
__n61["body"] := __n62;
__n55["consequent"] := __n61;
__n55["alternate"] := null;
__n68 := {  };
__n68["type"] := "VariableDeclaration";
__n70 := {  };
__n70["type"] := "VariableDeclarator";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "object";
__n70["id"] := __n71;
__n72 := {  };
__n72["type"] := "ObjectExpression";
__n74 := {  };
__n74["type"] := "Property";
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "null";
__n75["raw"] := "\"null\"";
__n74["key"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := true;
__n76["raw"] := "true";
__n74["value"] := __n76;
__n74["computed"] := false;
__n74["kind"] := "init";
__n74["shorthand"] := false;
__n73 := [ __n74 ];
__n72["properties"] := __n73;
__n70["init"] := __n72;
__n69 := [ __n70 ];
__n68["declarations"] := __n69;
__n68["kind"] := "var";
__n77 := {  };
__n77["type"] := "IfStatement";
__n78 := {  };
__n78["type"] := "BinaryExpression";
__n78["operator"] := "!==";
__n79 := {  };
__n79["type"] := "MemberExpression";
__n79["computed"] := true;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "object";
__n79["object"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "null";
__n81["raw"] := "\"null\"";
__n79["property"] := __n81;
__n78["left"] := __n79;
__n82 := {  };
__n82["type"] := "Literal";
__n82["value"] := true;
__n82["raw"] := "true";
__n78["right"] := __n82;
__n77["test"] := __n78;
__n83 := {  };
__n83["type"] := "BlockStatement";
__n85 := {  };
__n85["type"] := "ExpressionStatement";
__n86 := {  };
__n86["type"] := "CallExpression";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "$ERROR";
__n86["callee"] := __n87;
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "#4: var object = {\"null\" : true}; object[\"null\"] === true";
__n89["raw"] := "'#4: var object = {\"null\" : true}; object[\"null\"] === true'";
__n88 := [ __n89 ];
__n86["arguments"] := __n88;
__n85["expression"] := __n86;
__n84 := [ __n85 ];
__n83["body"] := __n84;
__n77["consequent"] := __n83;
__n77["alternate"] := null;
__n1 := [ __n2, __n11, __n24, __n33, __n46, __n55, __n68, __n77 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n90 := [ "object" ];
__n0["variableDeclarations"] := __n90;
__n91 := [  ];
__n0["functionDeclarations"] := __n91;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}