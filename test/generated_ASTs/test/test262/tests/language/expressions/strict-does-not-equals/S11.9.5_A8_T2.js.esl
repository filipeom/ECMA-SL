function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "UnaryExpression";
__n3["operator"] := "!";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := "!==";
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := 1.;
__n5["raw"] := "1";
__n4["left"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Number";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := 1.;
__n9["raw"] := "1";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["right"] := __n6;
__n3["argument"] := __n4;
__n3["prefix"] := true;
__n2["test"] := __n3;
__n10 := {  };
__n10["type"] := "BlockStatement";
__n12 := {  };
__n12["type"] := "ExpressionStatement";
__n13 := {  };
__n13["type"] := "CallExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "$ERROR";
__n13["callee"] := __n14;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "#1: 1 !== new Number(1)";
__n16["raw"] := "'#1: 1 !== new Number(1)'";
__n15 := [ __n16 ];
__n13["arguments"] := __n15;
__n12["expression"] := __n13;
__n11 := [ __n12 ];
__n10["body"] := __n11;
__n2["consequent"] := __n10;
__n2["alternate"] := null;
__n17 := {  };
__n17["type"] := "IfStatement";
__n18 := {  };
__n18["type"] := "UnaryExpression";
__n18["operator"] := "!";
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "!==";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 1.;
__n20["raw"] := "1";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := true;
__n21["raw"] := "true";
__n19["right"] := __n21;
__n18["argument"] := __n19;
__n18["prefix"] := true;
__n17["test"] := __n18;
__n22 := {  };
__n22["type"] := "BlockStatement";
__n24 := {  };
__n24["type"] := "ExpressionStatement";
__n25 := {  };
__n25["type"] := "CallExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "$ERROR";
__n25["callee"] := __n26;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "#2: 1 !== true";
__n28["raw"] := "'#2: 1 !== true'";
__n27 := [ __n28 ];
__n25["arguments"] := __n27;
__n24["expression"] := __n25;
__n23 := [ __n24 ];
__n22["body"] := __n23;
__n17["consequent"] := __n22;
__n17["alternate"] := null;
__n29 := {  };
__n29["type"] := "IfStatement";
__n30 := {  };
__n30["type"] := "UnaryExpression";
__n30["operator"] := "!";
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "!==";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 1.;
__n32["raw"] := "1";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "NewExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Boolean";
__n33["callee"] := __n34;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := 1.;
__n36["raw"] := "1";
__n35 := [ __n36 ];
__n33["arguments"] := __n35;
__n31["right"] := __n33;
__n30["argument"] := __n31;
__n30["prefix"] := true;
__n29["test"] := __n30;
__n37 := {  };
__n37["type"] := "BlockStatement";
__n39 := {  };
__n39["type"] := "ExpressionStatement";
__n40 := {  };
__n40["type"] := "CallExpression";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "$ERROR";
__n40["callee"] := __n41;
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := "#3: 1 !== new Boolean(1)";
__n43["raw"] := "'#3: 1 !== new Boolean(1)'";
__n42 := [ __n43 ];
__n40["arguments"] := __n42;
__n39["expression"] := __n40;
__n38 := [ __n39 ];
__n37["body"] := __n38;
__n29["consequent"] := __n37;
__n29["alternate"] := null;
__n44 := {  };
__n44["type"] := "IfStatement";
__n45 := {  };
__n45["type"] := "UnaryExpression";
__n45["operator"] := "!";
__n46 := {  };
__n46["type"] := "BinaryExpression";
__n46["operator"] := "!==";
__n47 := {  };
__n47["type"] := "Literal";
__n47["value"] := 1.;
__n47["raw"] := "1";
__n46["left"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "1";
__n48["raw"] := "\"1\"";
__n46["right"] := __n48;
__n45["argument"] := __n46;
__n45["prefix"] := true;
__n44["test"] := __n45;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "$ERROR";
__n52["callee"] := __n53;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := "#4: 1 !== \"1\"";
__n55["raw"] := "'#4: 1 !== \"1\"'";
__n54 := [ __n55 ];
__n52["arguments"] := __n54;
__n51["expression"] := __n52;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n44["consequent"] := __n49;
__n44["alternate"] := null;
__n56 := {  };
__n56["type"] := "IfStatement";
__n57 := {  };
__n57["type"] := "UnaryExpression";
__n57["operator"] := "!";
__n58 := {  };
__n58["type"] := "BinaryExpression";
__n58["operator"] := "!==";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := 1.;
__n59["raw"] := "1";
__n58["left"] := __n59;
__n60 := {  };
__n60["type"] := "NewExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "String";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 1.;
__n63["raw"] := "1";
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n58["right"] := __n60;
__n57["argument"] := __n58;
__n57["prefix"] := true;
__n56["test"] := __n57;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$ERROR";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "#5: 1 !== new String(1)";
__n70["raw"] := "'#5: 1 !== new String(1)'";
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n56["consequent"] := __n64;
__n56["alternate"] := null;
__n71 := {  };
__n71["type"] := "IfStatement";
__n72 := {  };
__n72["type"] := "UnaryExpression";
__n72["operator"] := "!";
__n73 := {  };
__n73["type"] := "BinaryExpression";
__n73["operator"] := "!==";
__n74 := {  };
__n74["type"] := "NewExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "Number";
__n74["callee"] := __n75;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := 0.;
__n77["raw"] := "0";
__n76 := [ __n77 ];
__n74["arguments"] := __n76;
__n73["left"] := __n74;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 0.;
__n78["raw"] := "0";
__n73["right"] := __n78;
__n72["argument"] := __n73;
__n72["prefix"] := true;
__n71["test"] := __n72;
__n79 := {  };
__n79["type"] := "BlockStatement";
__n81 := {  };
__n81["type"] := "ExpressionStatement";
__n82 := {  };
__n82["type"] := "CallExpression";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "$ERROR";
__n82["callee"] := __n83;
__n85 := {  };
__n85["type"] := "Literal";
__n85["value"] := "#6: new Number(0) !== 0";
__n85["raw"] := "'#6: new Number(0) !== 0'";
__n84 := [ __n85 ];
__n82["arguments"] := __n84;
__n81["expression"] := __n82;
__n80 := [ __n81 ];
__n79["body"] := __n80;
__n71["consequent"] := __n79;
__n71["alternate"] := null;
__n86 := {  };
__n86["type"] := "IfStatement";
__n87 := {  };
__n87["type"] := "UnaryExpression";
__n87["operator"] := "!";
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "!==";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := false;
__n89["raw"] := "false";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 0.;
__n90["raw"] := "0";
__n88["right"] := __n90;
__n87["argument"] := __n88;
__n87["prefix"] := true;
__n86["test"] := __n87;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := "#7: false !== 0";
__n97["raw"] := "'#7: false !== 0'";
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n86["consequent"] := __n91;
__n86["alternate"] := null;
__n98 := {  };
__n98["type"] := "IfStatement";
__n99 := {  };
__n99["type"] := "UnaryExpression";
__n99["operator"] := "!";
__n100 := {  };
__n100["type"] := "BinaryExpression";
__n100["operator"] := "!==";
__n101 := {  };
__n101["type"] := "NewExpression";
__n102 := {  };
__n102["type"] := "Identifier";
__n102["name"] := "Boolean";
__n101["callee"] := __n102;
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := 0.;
__n104["raw"] := "0";
__n103 := [ __n104 ];
__n101["arguments"] := __n103;
__n100["left"] := __n101;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 0.;
__n105["raw"] := "0";
__n100["right"] := __n105;
__n99["argument"] := __n100;
__n99["prefix"] := true;
__n98["test"] := __n99;
__n106 := {  };
__n106["type"] := "BlockStatement";
__n108 := {  };
__n108["type"] := "ExpressionStatement";
__n109 := {  };
__n109["type"] := "CallExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "$ERROR";
__n109["callee"] := __n110;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "#8: new Boolean(0) !== 0";
__n112["raw"] := "'#8: new Boolean(0) !== 0'";
__n111 := [ __n112 ];
__n109["arguments"] := __n111;
__n108["expression"] := __n109;
__n107 := [ __n108 ];
__n106["body"] := __n107;
__n98["consequent"] := __n106;
__n98["alternate"] := null;
__n113 := {  };
__n113["type"] := "IfStatement";
__n114 := {  };
__n114["type"] := "UnaryExpression";
__n114["operator"] := "!";
__n115 := {  };
__n115["type"] := "BinaryExpression";
__n115["operator"] := "!==";
__n116 := {  };
__n116["type"] := "Literal";
__n116["value"] := "0";
__n116["raw"] := "\"0\"";
__n115["left"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := 0.;
__n117["raw"] := "0";
__n115["right"] := __n117;
__n114["argument"] := __n115;
__n114["prefix"] := true;
__n113["test"] := __n114;
__n118 := {  };
__n118["type"] := "BlockStatement";
__n120 := {  };
__n120["type"] := "ExpressionStatement";
__n121 := {  };
__n121["type"] := "CallExpression";
__n122 := {  };
__n122["type"] := "Identifier";
__n122["name"] := "$ERROR";
__n121["callee"] := __n122;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "#9: \"0\" !== 0";
__n124["raw"] := "'#9: \"0\" !== 0'";
__n123 := [ __n124 ];
__n121["arguments"] := __n123;
__n120["expression"] := __n121;
__n119 := [ __n120 ];
__n118["body"] := __n119;
__n113["consequent"] := __n118;
__n113["alternate"] := null;
__n125 := {  };
__n125["type"] := "IfStatement";
__n126 := {  };
__n126["type"] := "UnaryExpression";
__n126["operator"] := "!";
__n127 := {  };
__n127["type"] := "BinaryExpression";
__n127["operator"] := "!==";
__n128 := {  };
__n128["type"] := "NewExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "String";
__n128["callee"] := __n129;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := 0.;
__n131["raw"] := "0";
__n130 := [ __n131 ];
__n128["arguments"] := __n130;
__n127["left"] := __n128;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := 0.;
__n132["raw"] := "0";
__n127["right"] := __n132;
__n126["argument"] := __n127;
__n126["prefix"] := true;
__n125["test"] := __n126;
__n133 := {  };
__n133["type"] := "BlockStatement";
__n135 := {  };
__n135["type"] := "ExpressionStatement";
__n136 := {  };
__n136["type"] := "CallExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "$ERROR";
__n136["callee"] := __n137;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "#10: new String(0) !== 0";
__n139["raw"] := "'#10: new String(0) !== 0'";
__n138 := [ __n139 ];
__n136["arguments"] := __n138;
__n135["expression"] := __n136;
__n134 := [ __n135 ];
__n133["body"] := __n134;
__n125["consequent"] := __n133;
__n125["alternate"] := null;
__n140 := {  };
__n140["type"] := "IfStatement";
__n141 := {  };
__n141["type"] := "UnaryExpression";
__n141["operator"] := "!";
__n142 := {  };
__n142["type"] := "BinaryExpression";
__n142["operator"] := "!==";
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := 1.;
__n143["raw"] := "1";
__n142["left"] := __n143;
__n144 := {  };
__n144["type"] := "ObjectExpression";
__n146 := {  };
__n146["type"] := "Property";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "valueOf";
__n146["key"] := __n147;
__n148 := {  };
__n148["type"] := "FunctionExpression";
__n148["id"] := null;
__n149 := [  ];
__n148["params"] := __n149;
__n150 := {  };
__n150["type"] := "BlockStatement";
__n152 := {  };
__n152["type"] := "ReturnStatement";
__n153 := {  };
__n153["type"] := "Literal";
__n153["value"] := 1.;
__n153["raw"] := "1";
__n152["argument"] := __n153;
__n151 := [ __n152 ];
__n150["body"] := __n151;
__n154 := [  ];
__n150["variableDeclarations"] := __n154;
__n155 := [  ];
__n150["functionDeclarations"] := __n155;
__n150["codeType"] := "function";
__n150["strict"] := false;
__n148["body"] := __n150;
__n148["generator"] := false;
__n148["async"] := false;
__n148["expression"] := false;
__n146["value"] := __n148;
__n146["computed"] := false;
__n146["kind"] := "init";
__n146["shorthand"] := false;
__n145 := [ __n146 ];
__n144["properties"] := __n145;
__n142["right"] := __n144;
__n141["argument"] := __n142;
__n141["prefix"] := true;
__n140["test"] := __n141;
__n156 := {  };
__n156["type"] := "BlockStatement";
__n158 := {  };
__n158["type"] := "ExpressionStatement";
__n159 := {  };
__n159["type"] := "CallExpression";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "$ERROR";
__n159["callee"] := __n160;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := "#11: 1 !== {valueOf: function () {return 1}}";
__n162["raw"] := "'#11: 1 !== {valueOf: function () {return 1}}'";
__n161 := [ __n162 ];
__n159["arguments"] := __n161;
__n158["expression"] := __n159;
__n157 := [ __n158 ];
__n156["body"] := __n157;
__n140["consequent"] := __n156;
__n140["alternate"] := null;
__n1 := [ __n2, __n17, __n29, __n44, __n56, __n71, __n86, __n98, __n113, __n125, __n140 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n163 := [  ];
__n0["variableDeclarations"] := __n163;
__n164 := [  ];
__n0["functionDeclarations"] := __n164;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}