function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "MyFunction";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "NewExpression";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "Function";
__n6["callee"] := __n7;
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "this.THIS = this";
__n9["raw"] := "\"this.THIS = this\"";
__n8 := [ __n9 ];
__n6["arguments"] := __n8;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "MyObject";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "NewExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "MyFunction";
__n14["callee"] := __n15;
__n16 := [  ];
__n14["arguments"] := __n16;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n17 := {  };
__n17["type"] := "IfStatement";
__n18 := {  };
__n18["type"] := "BinaryExpression";
__n18["operator"] := "!==";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "MemberExpression";
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "MyObject";
__n21["object"] := __n22;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "THIS";
__n23["raw"] := "\"THIS\"";
__n21["property"] := __n23;
__n21["computed"] := true;
__n20["object"] := __n21;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "toString";
__n24["raw"] := "\"toString\"";
__n20["property"] := __n24;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n25 := [  ];
__n19["arguments"] := __n25;
__n18["left"] := __n19;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "[object Object]";
__n26["raw"] := "\"[object Object]\"";
__n18["right"] := __n26;
__n17["test"] := __n18;
__n27 := {  };
__n27["type"] := "BlockStatement";
__n29 := {  };
__n29["type"] := "ExpressionStatement";
__n30 := {  };
__n30["type"] := "CallExpression";
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "$ERROR";
__n30["callee"] := __n31;
__n33 := {  };
__n33["type"] := "BinaryExpression";
__n33["operator"] := "+";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "#1: var MyFunction = new Function(\"this.THIS = this\"); var MyObject = new MyFunction(); MyObject.THIS.toString() === \"[object Object]\". Actual: ";
__n34["raw"] := "'#1: var MyFunction = new Function(\"this.THIS = this\"); var MyObject = new MyFunction(); MyObject.THIS.toString() === \"[object Object]\". Actual: '";
__n33["left"] := __n34;
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "MemberExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "MyObject";
__n37["object"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "THIS";
__n39["raw"] := "\"THIS\"";
__n37["property"] := __n39;
__n37["computed"] := true;
__n36["object"] := __n37;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "toString";
__n40["raw"] := "\"toString\"";
__n36["property"] := __n40;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n41 := [  ];
__n35["arguments"] := __n41;
__n33["right"] := __n35;
__n32 := [ __n33 ];
__n30["arguments"] := __n32;
__n29["expression"] := __n30;
__n28 := [ __n29 ];
__n27["body"] := __n28;
__n17["consequent"] := __n27;
__n17["alternate"] := null;
__n42 := {  };
__n42["type"] := "ExpressionStatement";
__n43 := {  };
__n43["type"] := "AssignmentExpression";
__n43["operator"] := "=";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "MyFunction";
__n43["left"] := __n44;
__n45 := {  };
__n45["type"] := "NewExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "Function";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "this.THIS = eval('this')";
__n48["raw"] := "\"this.THIS = eval(\\'this\\')\"";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n43["right"] := __n45;
__n42["expression"] := __n43;
__n49 := {  };
__n49["type"] := "ExpressionStatement";
__n50 := {  };
__n50["type"] := "AssignmentExpression";
__n50["operator"] := "=";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "MyObject";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "NewExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "MyFunction";
__n52["callee"] := __n53;
__n54 := [  ];
__n52["arguments"] := __n54;
__n50["right"] := __n52;
__n49["expression"] := __n50;
__n55 := {  };
__n55["type"] := "IfStatement";
__n56 := {  };
__n56["type"] := "BinaryExpression";
__n56["operator"] := "!==";
__n57 := {  };
__n57["type"] := "CallExpression";
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "MemberExpression";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "MyObject";
__n59["object"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "THIS";
__n61["raw"] := "\"THIS\"";
__n59["property"] := __n61;
__n59["computed"] := true;
__n58["object"] := __n59;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := "toString";
__n62["raw"] := "\"toString\"";
__n58["property"] := __n62;
__n58["computed"] := true;
__n57["callee"] := __n58;
__n63 := [  ];
__n57["arguments"] := __n63;
__n56["left"] := __n57;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "[object Object]";
__n64["raw"] := "\"[object Object]\"";
__n56["right"] := __n64;
__n55["test"] := __n56;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "ExpressionStatement";
__n68 := {  };
__n68["type"] := "CallExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "$ERROR";
__n68["callee"] := __n69;
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := "+";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "#2: var MyFunction = new Function(\"this.THIS = eval('this')\"); var MyObject = new MyFunction(); MyObject.THIS.toString() === \"[object Object]\". Actual: ";
__n72["raw"] := "'#2: var MyFunction = new Function(\"this.THIS = eval(\\'this\\')\"); var MyObject = new MyFunction(); MyObject.THIS.toString() === \"[object Object]\". Actual: '";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "MemberExpression";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "MyObject";
__n75["object"] := __n76;
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "THIS";
__n77["raw"] := "\"THIS\"";
__n75["property"] := __n77;
__n75["computed"] := true;
__n74["object"] := __n75;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := "toString";
__n78["raw"] := "\"toString\"";
__n74["property"] := __n78;
__n74["computed"] := true;
__n73["callee"] := __n74;
__n79 := [  ];
__n73["arguments"] := __n79;
__n71["right"] := __n73;
__n70 := [ __n71 ];
__n68["arguments"] := __n70;
__n67["expression"] := __n68;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n55["consequent"] := __n65;
__n55["alternate"] := null;
__n1 := [ __n2, __n10, __n17, __n42, __n49, __n55 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n80 := [ "MyFunction", "MyObject" ];
__n0["variableDeclarations"] := __n80;
__n81 := [  ];
__n0["functionDeclarations"] := __n81;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}