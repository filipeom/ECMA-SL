function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "BinaryExpression";
__n4["operator"] := ">>>";
__n5 := {  };
__n5["type"] := "MemberExpression";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "Number";
__n5["object"] := __n6;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "NaN";
__n7["raw"] := "\"NaN\"";
__n5["property"] := __n7;
__n5["computed"] := true;
__n4["left"] := __n5;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := 0.;
__n8["raw"] := "0";
__n4["right"] := __n8;
__n3["left"] := __n4;
__n9 := {  };
__n9["type"] := "UnaryExpression";
__n9["operator"] := "+";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := 0.;
__n10["raw"] := "0";
__n9["argument"] := __n10;
__n9["prefix"] := true;
__n3["right"] := __n9;
__n2["test"] := __n3;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "$ERROR";
__n14["callee"] := __n15;
__n17 := {  };
__n17["type"] := "BinaryExpression";
__n17["operator"] := "+";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "#1.1: (Number.NaN >>> 0) === 0. Actual: ";
__n18["raw"] := "'#1.1: (Number.NaN >>> 0) === 0. Actual: '";
__n17["left"] := __n18;
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := ">>>";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "Number";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "NaN";
__n22["raw"] := "\"NaN\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["left"] := __n20;
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := 0.;
__n23["raw"] := "0";
__n19["right"] := __n23;
__n17["right"] := __n19;
__n16 := [ __n17 ];
__n14["arguments"] := __n16;
__n13["expression"] := __n14;
__n12 := [ __n13 ];
__n11["body"] := __n12;
__n2["consequent"] := __n11;
__n24 := {  };
__n24["type"] := "IfStatement";
__n25 := {  };
__n25["type"] := "BinaryExpression";
__n25["operator"] := "!==";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "/";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 1.;
__n27["raw"] := "1";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := ">>>";
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "Number";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "NaN";
__n31["raw"] := "\"NaN\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["left"] := __n29;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 0.;
__n32["raw"] := "0";
__n28["right"] := __n32;
__n26["right"] := __n28;
__n25["left"] := __n26;
__n33 := {  };
__n33["type"] := "MemberExpression";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "Number";
__n33["object"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := "POSITIVE_INFINITY";
__n35["raw"] := "\"POSITIVE_INFINITY\"";
__n33["property"] := __n35;
__n33["computed"] := true;
__n25["right"] := __n33;
__n24["test"] := __n25;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "ExpressionStatement";
__n39 := {  };
__n39["type"] := "CallExpression";
__n40 := {  };
__n40["type"] := "Identifier";
__n40["name"] := "$ERROR";
__n39["callee"] := __n40;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#1.2: (Number.NaN >>> 0) === +0. Actual: -0";
__n42["raw"] := "'#1.2: (Number.NaN >>> 0) === +0. Actual: -0'";
__n41 := [ __n42 ];
__n39["arguments"] := __n41;
__n38["expression"] := __n39;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n24["consequent"] := __n36;
__n24["alternate"] := null;
__n2["alternate"] := __n24;
__n43 := {  };
__n43["type"] := "IfStatement";
__n44 := {  };
__n44["type"] := "BinaryExpression";
__n44["operator"] := "!==";
__n45 := {  };
__n45["type"] := "BinaryExpression";
__n45["operator"] := ">>>";
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "Number";
__n46["callee"] := __n47;
__n49 := {  };
__n49["type"] := "Literal";
__n49["value"] := "abc";
__n49["raw"] := "\"abc\"";
__n48 := [ __n49 ];
__n46["arguments"] := __n48;
__n45["left"] := __n46;
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 0.;
__n50["raw"] := "0";
__n45["right"] := __n50;
__n44["left"] := __n45;
__n51 := {  };
__n51["type"] := "UnaryExpression";
__n51["operator"] := "+";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := 0.;
__n52["raw"] := "0";
__n51["argument"] := __n52;
__n51["prefix"] := true;
__n44["right"] := __n51;
__n43["test"] := __n44;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "$ERROR";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "+";
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "#2.1: (Number(\"abc\") >>> 0) === 0. Actual: ";
__n60["raw"] := "'#2.1: (Number(\"abc\") >>> 0) === 0. Actual: '";
__n59["left"] := __n60;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := ">>>";
__n62 := {  };
__n62["type"] := "CallExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "Number";
__n62["callee"] := __n63;
__n65 := {  };
__n65["type"] := "Literal";
__n65["value"] := "abc";
__n65["raw"] := "\"abc\"";
__n64 := [ __n65 ];
__n62["arguments"] := __n64;
__n61["left"] := __n62;
__n66 := {  };
__n66["type"] := "Literal";
__n66["value"] := 0.;
__n66["raw"] := "0";
__n61["right"] := __n66;
__n59["right"] := __n61;
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n43["consequent"] := __n53;
__n67 := {  };
__n67["type"] := "IfStatement";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "!==";
__n69 := {  };
__n69["type"] := "BinaryExpression";
__n69["operator"] := "/";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := 1.;
__n70["raw"] := "1";
__n69["left"] := __n70;
__n71 := {  };
__n71["type"] := "BinaryExpression";
__n71["operator"] := ">>>";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 0.;
__n72["raw"] := "0";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 0.;
__n73["raw"] := "0";
__n71["right"] := __n73;
__n69["right"] := __n71;
__n68["left"] := __n69;
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "Number";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "POSITIVE_INFINITY";
__n76["raw"] := "\"POSITIVE_INFINITY\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n68["right"] := __n74;
__n67["test"] := __n68;
__n77 := {  };
__n77["type"] := "BlockStatement";
__n79 := {  };
__n79["type"] := "ExpressionStatement";
__n80 := {  };
__n80["type"] := "CallExpression";
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "$ERROR";
__n80["callee"] := __n81;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := "#2.2: (0 >>> 0) === +0. Actual: -0";
__n83["raw"] := "'#2.2: (0 >>> 0) === +0. Actual: -0'";
__n82 := [ __n83 ];
__n80["arguments"] := __n82;
__n79["expression"] := __n80;
__n78 := [ __n79 ];
__n77["body"] := __n78;
__n67["consequent"] := __n77;
__n67["alternate"] := null;
__n43["alternate"] := __n67;
__n84 := {  };
__n84["type"] := "IfStatement";
__n85 := {  };
__n85["type"] := "BinaryExpression";
__n85["operator"] := "!==";
__n86 := {  };
__n86["type"] := "BinaryExpression";
__n86["operator"] := ">>>";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := 0.;
__n87["raw"] := "0";
__n86["left"] := __n87;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := 0.;
__n88["raw"] := "0";
__n86["right"] := __n88;
__n85["left"] := __n86;
__n89 := {  };
__n89["type"] := "UnaryExpression";
__n89["operator"] := "+";
__n90 := {  };
__n90["type"] := "Literal";
__n90["value"] := 0.;
__n90["raw"] := "0";
__n89["argument"] := __n90;
__n89["prefix"] := true;
__n85["right"] := __n89;
__n84["test"] := __n85;
__n91 := {  };
__n91["type"] := "BlockStatement";
__n93 := {  };
__n93["type"] := "ExpressionStatement";
__n94 := {  };
__n94["type"] := "CallExpression";
__n95 := {  };
__n95["type"] := "Identifier";
__n95["name"] := "$ERROR";
__n94["callee"] := __n95;
__n97 := {  };
__n97["type"] := "BinaryExpression";
__n97["operator"] := "+";
__n98 := {  };
__n98["type"] := "Literal";
__n98["value"] := "#3.1: (0 >>> 0) === 0. Actual: ";
__n98["raw"] := "'#3.1: (0 >>> 0) === 0. Actual: '";
__n97["left"] := __n98;
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := ">>>";
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := 0.;
__n100["raw"] := "0";
__n99["left"] := __n100;
__n101 := {  };
__n101["type"] := "Literal";
__n101["value"] := 0.;
__n101["raw"] := "0";
__n99["right"] := __n101;
__n97["right"] := __n99;
__n96 := [ __n97 ];
__n94["arguments"] := __n96;
__n93["expression"] := __n94;
__n92 := [ __n93 ];
__n91["body"] := __n92;
__n84["consequent"] := __n91;
__n102 := {  };
__n102["type"] := "IfStatement";
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "!==";
__n104 := {  };
__n104["type"] := "BinaryExpression";
__n104["operator"] := "/";
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 1.;
__n105["raw"] := "1";
__n104["left"] := __n105;
__n106 := {  };
__n106["type"] := "BinaryExpression";
__n106["operator"] := ">>>";
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 0.;
__n107["raw"] := "0";
__n106["left"] := __n107;
__n108 := {  };
__n108["type"] := "Literal";
__n108["value"] := 0.;
__n108["raw"] := "0";
__n106["right"] := __n108;
__n104["right"] := __n106;
__n103["left"] := __n104;
__n109 := {  };
__n109["type"] := "MemberExpression";
__n110 := {  };
__n110["type"] := "Identifier";
__n110["name"] := "Number";
__n109["object"] := __n110;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "POSITIVE_INFINITY";
__n111["raw"] := "\"POSITIVE_INFINITY\"";
__n109["property"] := __n111;
__n109["computed"] := true;
__n103["right"] := __n109;
__n102["test"] := __n103;
__n112 := {  };
__n112["type"] := "BlockStatement";
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "$ERROR";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "Literal";
__n118["value"] := "#3.2: (0 >>> 0) === +0. Actual: -0";
__n118["raw"] := "'#3.2: (0 >>> 0) === +0. Actual: -0'";
__n117 := [ __n118 ];
__n115["arguments"] := __n117;
__n114["expression"] := __n115;
__n113 := [ __n114 ];
__n112["body"] := __n113;
__n102["consequent"] := __n112;
__n102["alternate"] := null;
__n84["alternate"] := __n102;
__n119 := {  };
__n119["type"] := "IfStatement";
__n120 := {  };
__n120["type"] := "BinaryExpression";
__n120["operator"] := "!==";
__n121 := {  };
__n121["type"] := "BinaryExpression";
__n121["operator"] := ">>>";
__n122 := {  };
__n122["type"] := "UnaryExpression";
__n122["operator"] := "-";
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 0.;
__n123["raw"] := "0";
__n122["argument"] := __n123;
__n122["prefix"] := true;
__n121["left"] := __n122;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 0.;
__n124["raw"] := "0";
__n121["right"] := __n124;
__n120["left"] := __n121;
__n125 := {  };
__n125["type"] := "UnaryExpression";
__n125["operator"] := "+";
__n126 := {  };
__n126["type"] := "Literal";
__n126["value"] := 0.;
__n126["raw"] := "0";
__n125["argument"] := __n126;
__n125["prefix"] := true;
__n120["right"] := __n125;
__n119["test"] := __n120;
__n127 := {  };
__n127["type"] := "BlockStatement";
__n129 := {  };
__n129["type"] := "ExpressionStatement";
__n130 := {  };
__n130["type"] := "CallExpression";
__n131 := {  };
__n131["type"] := "Identifier";
__n131["name"] := "$ERROR";
__n130["callee"] := __n131;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "#4.1: (-0 >>> 0) === 0";
__n133["raw"] := "\"#4.1: (-0 >>> 0) === 0\"";
__n132 := [ __n133 ];
__n130["arguments"] := __n132;
__n129["expression"] := __n130;
__n128 := [ __n129 ];
__n127["body"] := __n128;
__n119["consequent"] := __n127;
__n134 := {  };
__n134["type"] := "IfStatement";
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "!==";
__n136 := {  };
__n136["type"] := "BinaryExpression";
__n136["operator"] := "/";
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := 1.;
__n137["raw"] := "1";
__n136["left"] := __n137;
__n138 := {  };
__n138["type"] := "BinaryExpression";
__n138["operator"] := ">>>";
__n139 := {  };
__n139["type"] := "UnaryExpression";
__n139["operator"] := "-";
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := 0.;
__n140["raw"] := "0";
__n139["argument"] := __n140;
__n139["prefix"] := true;
__n138["left"] := __n139;
__n141 := {  };
__n141["type"] := "Literal";
__n141["value"] := 0.;
__n141["raw"] := "0";
__n138["right"] := __n141;
__n136["right"] := __n138;
__n135["left"] := __n136;
__n142 := {  };
__n142["type"] := "MemberExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "Number";
__n142["object"] := __n143;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "POSITIVE_INFINITY";
__n144["raw"] := "\"POSITIVE_INFINITY\"";
__n142["property"] := __n144;
__n142["computed"] := true;
__n135["right"] := __n142;
__n134["test"] := __n135;
__n145 := {  };
__n145["type"] := "BlockStatement";
__n147 := {  };
__n147["type"] := "ExpressionStatement";
__n148 := {  };
__n148["type"] := "CallExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "$ERROR";
__n148["callee"] := __n149;
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "#4.2: (-0 >>> 0) === +0. Actual: -0";
__n151["raw"] := "\"#4.2: (-0 >>> 0) === +0. Actual: -0\"";
__n150 := [ __n151 ];
__n148["arguments"] := __n150;
__n147["expression"] := __n148;
__n146 := [ __n147 ];
__n145["body"] := __n146;
__n134["consequent"] := __n145;
__n134["alternate"] := null;
__n119["alternate"] := __n134;
__n152 := {  };
__n152["type"] := "IfStatement";
__n153 := {  };
__n153["type"] := "BinaryExpression";
__n153["operator"] := "!==";
__n154 := {  };
__n154["type"] := "BinaryExpression";
__n154["operator"] := ">>>";
__n155 := {  };
__n155["type"] := "MemberExpression";
__n156 := {  };
__n156["type"] := "Identifier";
__n156["name"] := "Number";
__n155["object"] := __n156;
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := "POSITIVE_INFINITY";
__n157["raw"] := "\"POSITIVE_INFINITY\"";
__n155["property"] := __n157;
__n155["computed"] := true;
__n154["left"] := __n155;
__n158 := {  };
__n158["type"] := "Literal";
__n158["value"] := 0.;
__n158["raw"] := "0";
__n154["right"] := __n158;
__n153["left"] := __n154;
__n159 := {  };
__n159["type"] := "UnaryExpression";
__n159["operator"] := "+";
__n160 := {  };
__n160["type"] := "Literal";
__n160["value"] := 0.;
__n160["raw"] := "0";
__n159["argument"] := __n160;
__n159["prefix"] := true;
__n153["right"] := __n159;
__n152["test"] := __n153;
__n161 := {  };
__n161["type"] := "BlockStatement";
__n163 := {  };
__n163["type"] := "ExpressionStatement";
__n164 := {  };
__n164["type"] := "CallExpression";
__n165 := {  };
__n165["type"] := "Identifier";
__n165["name"] := "$ERROR";
__n164["callee"] := __n165;
__n167 := {  };
__n167["type"] := "BinaryExpression";
__n167["operator"] := "+";
__n168 := {  };
__n168["type"] := "Literal";
__n168["value"] := "#5.1: (Number.POSITIVE_INFINITY >>> 0) === 0. Actual: ";
__n168["raw"] := "'#5.1: (Number.POSITIVE_INFINITY >>> 0) === 0. Actual: '";
__n167["left"] := __n168;
__n169 := {  };
__n169["type"] := "BinaryExpression";
__n169["operator"] := ">>>";
__n170 := {  };
__n170["type"] := "MemberExpression";
__n171 := {  };
__n171["type"] := "Identifier";
__n171["name"] := "Number";
__n170["object"] := __n171;
__n172 := {  };
__n172["type"] := "Literal";
__n172["value"] := "POSITIVE_INFINITY";
__n172["raw"] := "\"POSITIVE_INFINITY\"";
__n170["property"] := __n172;
__n170["computed"] := true;
__n169["left"] := __n170;
__n173 := {  };
__n173["type"] := "Literal";
__n173["value"] := 0.;
__n173["raw"] := "0";
__n169["right"] := __n173;
__n167["right"] := __n169;
__n166 := [ __n167 ];
__n164["arguments"] := __n166;
__n163["expression"] := __n164;
__n162 := [ __n163 ];
__n161["body"] := __n162;
__n152["consequent"] := __n161;
__n174 := {  };
__n174["type"] := "IfStatement";
__n175 := {  };
__n175["type"] := "BinaryExpression";
__n175["operator"] := "!==";
__n176 := {  };
__n176["type"] := "BinaryExpression";
__n176["operator"] := "/";
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := 1.;
__n177["raw"] := "1";
__n176["left"] := __n177;
__n178 := {  };
__n178["type"] := "BinaryExpression";
__n178["operator"] := ">>>";
__n179 := {  };
__n179["type"] := "MemberExpression";
__n180 := {  };
__n180["type"] := "Identifier";
__n180["name"] := "Number";
__n179["object"] := __n180;
__n181 := {  };
__n181["type"] := "Literal";
__n181["value"] := "POSITIVE_INFINITY";
__n181["raw"] := "\"POSITIVE_INFINITY\"";
__n179["property"] := __n181;
__n179["computed"] := true;
__n178["left"] := __n179;
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := 0.;
__n182["raw"] := "0";
__n178["right"] := __n182;
__n176["right"] := __n178;
__n175["left"] := __n176;
__n183 := {  };
__n183["type"] := "MemberExpression";
__n184 := {  };
__n184["type"] := "Identifier";
__n184["name"] := "Number";
__n183["object"] := __n184;
__n185 := {  };
__n185["type"] := "Literal";
__n185["value"] := "POSITIVE_INFINITY";
__n185["raw"] := "\"POSITIVE_INFINITY\"";
__n183["property"] := __n185;
__n183["computed"] := true;
__n175["right"] := __n183;
__n174["test"] := __n175;
__n186 := {  };
__n186["type"] := "BlockStatement";
__n188 := {  };
__n188["type"] := "ExpressionStatement";
__n189 := {  };
__n189["type"] := "CallExpression";
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "$ERROR";
__n189["callee"] := __n190;
__n192 := {  };
__n192["type"] := "Literal";
__n192["value"] := "#5.2: (Number.POSITIVE_INFINITY >>> 0) === +0. Actual: -0";
__n192["raw"] := "'#5.2: (Number.POSITIVE_INFINITY >>> 0) === +0. Actual: -0'";
__n191 := [ __n192 ];
__n189["arguments"] := __n191;
__n188["expression"] := __n189;
__n187 := [ __n188 ];
__n186["body"] := __n187;
__n174["consequent"] := __n186;
__n174["alternate"] := null;
__n152["alternate"] := __n174;
__n193 := {  };
__n193["type"] := "IfStatement";
__n194 := {  };
__n194["type"] := "BinaryExpression";
__n194["operator"] := "!==";
__n195 := {  };
__n195["type"] := "BinaryExpression";
__n195["operator"] := ">>>";
__n196 := {  };
__n196["type"] := "MemberExpression";
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "Number";
__n196["object"] := __n197;
__n198 := {  };
__n198["type"] := "Literal";
__n198["value"] := "NEGATIVE_INFINITY";
__n198["raw"] := "\"NEGATIVE_INFINITY\"";
__n196["property"] := __n198;
__n196["computed"] := true;
__n195["left"] := __n196;
__n199 := {  };
__n199["type"] := "Literal";
__n199["value"] := 0.;
__n199["raw"] := "0";
__n195["right"] := __n199;
__n194["left"] := __n195;
__n200 := {  };
__n200["type"] := "UnaryExpression";
__n200["operator"] := "+";
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := 0.;
__n201["raw"] := "0";
__n200["argument"] := __n201;
__n200["prefix"] := true;
__n194["right"] := __n200;
__n193["test"] := __n194;
__n202 := {  };
__n202["type"] := "BlockStatement";
__n204 := {  };
__n204["type"] := "ExpressionStatement";
__n205 := {  };
__n205["type"] := "CallExpression";
__n206 := {  };
__n206["type"] := "Identifier";
__n206["name"] := "$ERROR";
__n205["callee"] := __n206;
__n208 := {  };
__n208["type"] := "Literal";
__n208["value"] := "#6.1: (Number.NEGATIVE_INFINITY >>> 0) === 0";
__n208["raw"] := "\"#6.1: (Number.NEGATIVE_INFINITY >>> 0) === 0\"";
__n207 := [ __n208 ];
__n205["arguments"] := __n207;
__n204["expression"] := __n205;
__n203 := [ __n204 ];
__n202["body"] := __n203;
__n193["consequent"] := __n202;
__n209 := {  };
__n209["type"] := "IfStatement";
__n210 := {  };
__n210["type"] := "BinaryExpression";
__n210["operator"] := "!==";
__n211 := {  };
__n211["type"] := "BinaryExpression";
__n211["operator"] := "/";
__n212 := {  };
__n212["type"] := "Literal";
__n212["value"] := 1.;
__n212["raw"] := "1";
__n211["left"] := __n212;
__n213 := {  };
__n213["type"] := "BinaryExpression";
__n213["operator"] := ">>>";
__n214 := {  };
__n214["type"] := "MemberExpression";
__n215 := {  };
__n215["type"] := "Identifier";
__n215["name"] := "Number";
__n214["object"] := __n215;
__n216 := {  };
__n216["type"] := "Literal";
__n216["value"] := "NEGATIVE_INFINITY";
__n216["raw"] := "\"NEGATIVE_INFINITY\"";
__n214["property"] := __n216;
__n214["computed"] := true;
__n213["left"] := __n214;
__n217 := {  };
__n217["type"] := "Literal";
__n217["value"] := 0.;
__n217["raw"] := "0";
__n213["right"] := __n217;
__n211["right"] := __n213;
__n210["left"] := __n211;
__n218 := {  };
__n218["type"] := "MemberExpression";
__n219 := {  };
__n219["type"] := "Identifier";
__n219["name"] := "Number";
__n218["object"] := __n219;
__n220 := {  };
__n220["type"] := "Literal";
__n220["value"] := "POSITIVE_INFINITY";
__n220["raw"] := "\"POSITIVE_INFINITY\"";
__n218["property"] := __n220;
__n218["computed"] := true;
__n210["right"] := __n218;
__n209["test"] := __n210;
__n221 := {  };
__n221["type"] := "BlockStatement";
__n223 := {  };
__n223["type"] := "ExpressionStatement";
__n224 := {  };
__n224["type"] := "CallExpression";
__n225 := {  };
__n225["type"] := "Identifier";
__n225["name"] := "$ERROR";
__n224["callee"] := __n225;
__n227 := {  };
__n227["type"] := "Literal";
__n227["value"] := "#6.2: (Number.NEGATIVE_INFINITY >>> 0) === +0. Actual: -0";
__n227["raw"] := "\"#6.2: (Number.NEGATIVE_INFINITY >>> 0) === +0. Actual: -0\"";
__n226 := [ __n227 ];
__n224["arguments"] := __n226;
__n223["expression"] := __n224;
__n222 := [ __n223 ];
__n221["body"] := __n222;
__n209["consequent"] := __n221;
__n209["alternate"] := null;
__n193["alternate"] := __n209;
__n1 := [ __n2, __n43, __n84, __n119, __n152, __n193 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n228 := [  ];
__n0["variableDeclarations"] := __n228;
__n229 := [  ];
__n0["functionDeclarations"] := __n229;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}