function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "foo";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "ExpressionStatement";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "bar";
__n4["expression"] := __n5;
__n6 := {  };
__n6["type"] := "ExpressionStatement";
__n7 := {  };
__n7["type"] := "CallExpression";
__n8 := {  };
__n8["type"] := "MemberExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "assert";
__n8["object"] := __n9;
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "sameValue";
__n10["raw"] := "\"sameValue\"";
__n8["property"] := __n10;
__n8["computed"] := true;
__n7["callee"] := __n8;
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "MemberExpression";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "foo";
__n13["object"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "call";
__n15["raw"] := "\"call\"";
__n13["property"] := __n15;
__n13["computed"] := true;
__n12["callee"] := __n13;
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := true;
__n17["raw"] := "true";
__n16 := [ __n17 ];
__n12["arguments"] := __n16;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "boolean";
__n18["raw"] := "'boolean'";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "foo.call(true)";
__n19["raw"] := "'foo.call(true)'";
__n11 := [ __n12, __n18, __n19 ];
__n7["arguments"] := __n11;
__n6["expression"] := __n7;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "CallExpression";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "assert";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "sameValue";
__n24["raw"] := "\"sameValue\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["callee"] := __n22;
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "MemberExpression";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "bar";
__n27["object"] := __n28;
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "call";
__n29["raw"] := "\"call\"";
__n27["property"] := __n29;
__n27["computed"] := true;
__n26["callee"] := __n27;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := true;
__n31["raw"] := "true";
__n30 := [ __n31 ];
__n26["arguments"] := __n30;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "object";
__n32["raw"] := "'object'";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "bar.call(true)";
__n33["raw"] := "'bar.call(true)'";
__n25 := [ __n26, __n32, __n33 ];
__n21["arguments"] := __n25;
__n20["expression"] := __n21;
__n1 := [ __n2, __n4, __n6, __n20 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n34 := [  ];
__n0["variableDeclarations"] := __n34;
__n36 := {  };
__n36["type"] := "FunctionDeclaration";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "foo";
__n36["id"] := __n37;
__n38 := [  ];
__n36["params"] := __n38;
__n39 := {  };
__n39["type"] := "BlockStatement";
__n41 := {  };
__n41["type"] := "ExpressionStatement";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "use strict";
__n42["raw"] := "'use strict'";
__n41["expression"] := __n42;
__n41["directive"] := "use strict";
__n43 := {  };
__n43["type"] := "ReturnStatement";
__n44 := {  };
__n44["type"] := "UnaryExpression";
__n44["operator"] := "typeof";
__n45 := {  };
__n45["type"] := "ThisExpression";
__n44["argument"] := __n45;
__n44["prefix"] := true;
__n43["argument"] := __n44;
__n40 := [ __n41, __n43 ];
__n39["body"] := __n40;
__n46 := [  ];
__n39["variableDeclarations"] := __n46;
__n47 := [  ];
__n39["functionDeclarations"] := __n47;
__n39["codeType"] := "function";
__n39["strict"] := true;
__n36["body"] := __n39;
__n36["generator"] := false;
__n36["async"] := false;
__n36["expression"] := false;
__n48 := {  };
__n48["type"] := "FunctionDeclaration";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "bar";
__n48["id"] := __n49;
__n50 := [  ];
__n48["params"] := __n50;
__n51 := {  };
__n51["type"] := "BlockStatement";
__n53 := {  };
__n53["type"] := "ReturnStatement";
__n54 := {  };
__n54["type"] := "UnaryExpression";
__n54["operator"] := "typeof";
__n55 := {  };
__n55["type"] := "ThisExpression";
__n54["argument"] := __n55;
__n54["prefix"] := true;
__n53["argument"] := __n54;
__n52 := [ __n53 ];
__n51["body"] := __n52;
__n56 := [  ];
__n51["variableDeclarations"] := __n56;
__n57 := [  ];
__n51["functionDeclarations"] := __n57;
__n51["codeType"] := "function";
__n51["strict"] := false;
__n48["body"] := __n51;
__n48["generator"] := false;
__n48["async"] := false;
__n48["expression"] := false;
__n35 := [ __n36, __n48 ];
__n0["functionDeclarations"] := __n35;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}