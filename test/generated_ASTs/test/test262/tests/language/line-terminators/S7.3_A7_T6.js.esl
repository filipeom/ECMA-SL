function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "y";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := 16.;
__n6["raw"] := "16";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "z";
__n9["id"] := __n10;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 3.;
__n11["raw"] := "3";
__n9["init"] := __n11;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n12 := {  };
__n12["type"] := "VariableDeclaration";
__n14 := {  };
__n14["type"] := "VariableDeclarator";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "x";
__n14["id"] := __n15;
__n16 := {  };
__n16["type"] := "BinaryExpression";
__n16["operator"] := ">>";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "y";
__n16["left"] := __n17;
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "z";
__n16["right"] := __n18;
__n14["init"] := __n16;
__n13 := [ __n14 ];
__n12["declarations"] := __n13;
__n12["kind"] := "var";
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "!==";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "x";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := 2.;
__n22["raw"] := "2";
__n20["right"] := __n22;
__n19["test"] := __n20;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ExpressionStatement";
__n26 := {  };
__n26["type"] := "CallExpression";
__n27 := {  };
__n27["type"] := "Identifier";
__n27["name"] := "$ERROR";
__n26["callee"] := __n27;
__n29 := {  };
__n29["type"] := "BinaryExpression";
__n29["operator"] := "+";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "#1: var\\nx\\n=\\ny\\n>>\\nz\\n; x === 2. Actual: ";
__n30["raw"] := "'#1: var\\\\nx\\\\n=\\\\ny\\\\n>>\\\\nz\\\\n; x === 2. Actual: '";
__n29["left"] := __n30;
__n31 := {  };
__n31["type"] := "Identifier";
__n31["name"] := "x";
__n29["right"] := __n31;
__n28 := [ __n29 ];
__n26["arguments"] := __n28;
__n25["expression"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n19["consequent"] := __n23;
__n19["alternate"] := null;
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "AssignmentExpression";
__n33["operator"] := "=";
__n34 := {  };
__n34["type"] := "Identifier";
__n34["name"] := "x";
__n33["left"] := __n34;
__n35 := {  };
__n35["type"] := "Literal";
__n35["value"] := 0.;
__n35["raw"] := "0";
__n33["right"] := __n35;
__n32["expression"] := __n33;
__n36 := {  };
__n36["type"] := "VariableDeclaration";
__n38 := {  };
__n38["type"] := "VariableDeclarator";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "y";
__n38["id"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 16.;
__n40["raw"] := "16";
__n38["init"] := __n40;
__n37 := [ __n38 ];
__n36["declarations"] := __n37;
__n36["kind"] := "var";
__n41 := {  };
__n41["type"] := "VariableDeclaration";
__n43 := {  };
__n43["type"] := "VariableDeclarator";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "z";
__n43["id"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := 3.;
__n45["raw"] := "3";
__n43["init"] := __n45;
__n42 := [ __n43 ];
__n41["declarations"] := __n42;
__n41["kind"] := "var";
__n46 := {  };
__n46["type"] := "VariableDeclaration";
__n48 := {  };
__n48["type"] := "VariableDeclarator";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "x";
__n48["id"] := __n49;
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := ">>";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "y";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "z";
__n50["right"] := __n52;
__n48["init"] := __n50;
__n47 := [ __n48 ];
__n46["declarations"] := __n47;
__n46["kind"] := "var";
__n53 := {  };
__n53["type"] := "IfStatement";
__n54 := {  };
__n54["type"] := "BinaryExpression";
__n54["operator"] := "!==";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "x";
__n54["left"] := __n55;
__n56 := {  };
__n56["type"] := "Literal";
__n56["value"] := 2.;
__n56["raw"] := "2";
__n54["right"] := __n56;
__n53["test"] := __n54;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "$ERROR";
__n60["callee"] := __n61;
__n63 := {  };
__n63["type"] := "BinaryExpression";
__n63["operator"] := "+";
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#2: var\\nx\\n=\\ny\\n>>\\nz\\n; x === 2. Actual: ";
__n64["raw"] := "'#2: var\\\\nx\\\\n=\\\\ny\\\\n>>\\\\nz\\\\n; x === 2. Actual: '";
__n63["left"] := __n64;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "x";
__n63["right"] := __n65;
__n62 := [ __n63 ];
__n60["arguments"] := __n62;
__n59["expression"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n53["consequent"] := __n57;
__n53["alternate"] := null;
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "AssignmentExpression";
__n67["operator"] := "=";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "x";
__n67["left"] := __n68;
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := 0.;
__n69["raw"] := "0";
__n67["right"] := __n69;
__n66["expression"] := __n67;
__n70 := {  };
__n70["type"] := "VariableDeclaration";
__n72 := {  };
__n72["type"] := "VariableDeclarator";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "result";
__n72["id"] := __n73;
__n72["init"] := null;
__n71 := [ __n72 ];
__n70["declarations"] := __n71;
__n70["kind"] := "var";
__n74 := {  };
__n74["type"] := "VariableDeclaration";
__n76 := {  };
__n76["type"] := "VariableDeclarator";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "y";
__n76["id"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 16.;
__n78["raw"] := "16";
__n76["init"] := __n78;
__n75 := [ __n76 ];
__n74["declarations"] := __n75;
__n74["kind"] := "var";
__n79 := {  };
__n79["type"] := "VariableDeclaration";
__n81 := {  };
__n81["type"] := "VariableDeclarator";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "z";
__n81["id"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 3.;
__n83["raw"] := "3";
__n81["init"] := __n83;
__n80 := [ __n81 ];
__n79["declarations"] := __n80;
__n79["kind"] := "var";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "eval";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "Literal";
__n88["value"] := " var x = y >> z ; result = x;";
__n88["raw"] := "\"\\u2028var\\u2028x\\u2028=\\u2028y\\u2028>>\\u2028z\\u2028; result = x;\"";
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n89 := {  };
__n89["type"] := "IfStatement";
__n90 := {  };
__n90["type"] := "BinaryExpression";
__n90["operator"] := "!==";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "result";
__n90["left"] := __n91;
__n92 := {  };
__n92["type"] := "Literal";
__n92["value"] := 2.;
__n92["raw"] := "2";
__n90["right"] := __n92;
__n89["test"] := __n90;
__n93 := {  };
__n93["type"] := "BlockStatement";
__n95 := {  };
__n95["type"] := "ExpressionStatement";
__n96 := {  };
__n96["type"] := "CallExpression";
__n97 := {  };
__n97["type"] := "Identifier";
__n97["name"] := "$ERROR";
__n96["callee"] := __n97;
__n99 := {  };
__n99["type"] := "BinaryExpression";
__n99["operator"] := "+";
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "#3: eval(\"\\u2028var\\u2028x\\u2028=\\u2028y\\u2028>>\\u2028z\\u2028; result = x;\"); result === 2. Actual: ";
__n100["raw"] := "'#3: eval(\"\\\\u2028var\\\\u2028x\\\\u2028=\\\\u2028y\\\\u2028>>\\\\u2028z\\\\u2028; result = x;\"); result === 2. Actual: '";
__n99["left"] := __n100;
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "result";
__n99["right"] := __n101;
__n98 := [ __n99 ];
__n96["arguments"] := __n98;
__n95["expression"] := __n96;
__n94 := [ __n95 ];
__n93["body"] := __n94;
__n89["consequent"] := __n93;
__n89["alternate"] := null;
__n102 := {  };
__n102["type"] := "ExpressionStatement";
__n103 := {  };
__n103["type"] := "AssignmentExpression";
__n103["operator"] := "=";
__n104 := {  };
__n104["type"] := "Identifier";
__n104["name"] := "result";
__n103["left"] := __n104;
__n105 := {  };
__n105["type"] := "Literal";
__n105["value"] := 0.;
__n105["raw"] := "0";
__n103["right"] := __n105;
__n102["expression"] := __n103;
__n106 := {  };
__n106["type"] := "VariableDeclaration";
__n108 := {  };
__n108["type"] := "VariableDeclarator";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "y";
__n108["id"] := __n109;
__n110 := {  };
__n110["type"] := "Literal";
__n110["value"] := 16.;
__n110["raw"] := "16";
__n108["init"] := __n110;
__n107 := [ __n108 ];
__n106["declarations"] := __n107;
__n106["kind"] := "var";
__n111 := {  };
__n111["type"] := "VariableDeclaration";
__n113 := {  };
__n113["type"] := "VariableDeclarator";
__n114 := {  };
__n114["type"] := "Identifier";
__n114["name"] := "z";
__n113["id"] := __n114;
__n115 := {  };
__n115["type"] := "Literal";
__n115["value"] := 3.;
__n115["raw"] := "3";
__n113["init"] := __n115;
__n112 := [ __n113 ];
__n111["declarations"] := __n112;
__n111["kind"] := "var";
__n116 := {  };
__n116["type"] := "ExpressionStatement";
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "eval";
__n117["callee"] := __n118;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := " var x = y >> z ; result = x;";
__n120["raw"] := "\"\\u2029var\\u2029x\\u2029=\\u2029y\\u2029>>\\u2029z\\u2029; result = x;\"";
__n119 := [ __n120 ];
__n117["arguments"] := __n119;
__n116["expression"] := __n117;
__n121 := {  };
__n121["type"] := "IfStatement";
__n122 := {  };
__n122["type"] := "BinaryExpression";
__n122["operator"] := "!==";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "result";
__n122["left"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 2.;
__n124["raw"] := "2";
__n122["right"] := __n124;
__n121["test"] := __n122;
__n125 := {  };
__n125["type"] := "BlockStatement";
__n127 := {  };
__n127["type"] := "ExpressionStatement";
__n128 := {  };
__n128["type"] := "CallExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "$ERROR";
__n128["callee"] := __n129;
__n131 := {  };
__n131["type"] := "BinaryExpression";
__n131["operator"] := "+";
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := "#4: eval(\"\\u2029var\\u2029x\\u2029=\\u2029y\\u2029>>\\u2029z\\u2029; result = x;\"); result === 2. Actual: ";
__n132["raw"] := "'#4: eval(\"\\\\u2029var\\\\u2029x\\\\u2029=\\\\u2029y\\\\u2029>>\\\\u2029z\\\\u2029; result = x;\"); result === 2. Actual: '";
__n131["left"] := __n132;
__n133 := {  };
__n133["type"] := "Identifier";
__n133["name"] := "result";
__n131["right"] := __n133;
__n130 := [ __n131 ];
__n128["arguments"] := __n130;
__n127["expression"] := __n128;
__n126 := [ __n127 ];
__n125["body"] := __n126;
__n121["consequent"] := __n125;
__n121["alternate"] := null;
__n1 := [ __n2, __n7, __n12, __n19, __n32, __n36, __n41, __n46, __n53, __n66, __n70, __n74, __n79, __n84, __n89, __n102, __n106, __n111, __n116, __n121 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n134 := [ "y", "z", "x", "result" ];
__n0["variableDeclarations"] := __n134;
__n135 := [  ];
__n0["functionDeclarations"] := __n135;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}