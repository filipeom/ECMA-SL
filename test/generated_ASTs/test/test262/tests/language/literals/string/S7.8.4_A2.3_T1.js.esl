function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "unicode";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ArrayExpression";
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "0";
__n8["raw"] := "\"\\u0030\"";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "1";
__n9["raw"] := "\"\\u0031\"";
__n10 := {  };
__n10["type"] := "Literal";
__n10["value"] := "2";
__n10["raw"] := "\"\\u0032\"";
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := "3";
__n11["raw"] := "\"\\u0033\"";
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "4";
__n12["raw"] := "\"\\u0034\"";
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "5";
__n13["raw"] := "\"\\u0035\"";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "6";
__n14["raw"] := "\"\\u0036\"";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := "7";
__n15["raw"] := "\"\\u0037\"";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "8";
__n16["raw"] := "\"\\u0038\"";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "9";
__n17["raw"] := "\"\\u0039\"";
__n7 := [ __n8, __n9, __n10, __n11, __n12, __n13, __n14, __n15, __n16, __n17 ];
__n6["elements"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "character";
__n20["id"] := __n21;
__n22 := {  };
__n22["type"] := "ArrayExpression";
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "0";
__n24["raw"] := "\"0\"";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "1";
__n25["raw"] := "\"1\"";
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "2";
__n26["raw"] := "\"2\"";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "3";
__n27["raw"] := "\"3\"";
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := "4";
__n28["raw"] := "\"4\"";
__n29 := {  };
__n29["type"] := "Literal";
__n29["value"] := "5";
__n29["raw"] := "\"5\"";
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "6";
__n30["raw"] := "\"6\"";
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "7";
__n31["raw"] := "\"7\"";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "8";
__n32["raw"] := "\"8\"";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "9";
__n33["raw"] := "\"9\"";
__n23 := [ __n24, __n25, __n26, __n27, __n28, __n29, __n30, __n31, __n32, __n33 ];
__n22["elements"] := __n23;
__n20["init"] := __n22;
__n19 := [ __n20 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n34 := {  };
__n34["type"] := "ForStatement";
__n35 := {  };
__n35["type"] := "VariableDeclaration";
__n37 := {  };
__n37["type"] := "VariableDeclarator";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "index";
__n37["id"] := __n38;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 0.;
__n39["raw"] := "0";
__n37["init"] := __n39;
__n36 := [ __n37 ];
__n35["declarations"] := __n36;
__n35["kind"] := "var";
__n34["init"] := __n35;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "<=";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "index";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := 9.;
__n42["raw"] := "9";
__n40["right"] := __n42;
__n34["test"] := __n40;
__n43 := {  };
__n43["type"] := "UpdateExpression";
__n43["operator"] := "++";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "index";
__n43["argument"] := __n44;
__n43["prefix"] := false;
__n34["update"] := __n43;
__n45 := {  };
__n45["type"] := "BlockStatement";
__n47 := {  };
__n47["type"] := "IfStatement";
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "!==";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n49["computed"] := true;
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "unicode";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "index";
__n49["property"] := __n51;
__n48["left"] := __n49;
__n52 := {  };
__n52["type"] := "MemberExpression";
__n52["computed"] := true;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "character";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "index";
__n52["property"] := __n54;
__n48["right"] := __n52;
__n47["test"] := __n48;
__n55 := {  };
__n55["type"] := "BlockStatement";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "$ERROR";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "BinaryExpression";
__n61["operator"] := "+";
__n62 := {  };
__n62["type"] := "BinaryExpression";
__n62["operator"] := "+";
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "#";
__n63["raw"] := "'#'";
__n62["left"] := __n63;
__n64 := {  };
__n64["type"] := "MemberExpression";
__n64["computed"] := true;
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "character";
__n64["object"] := __n65;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "index";
__n64["property"] := __n66;
__n62["right"] := __n64;
__n61["left"] := __n62;
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := " ";
__n67["raw"] := "' '";
__n61["right"] := __n67;
__n60 := [ __n61 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n56 := [ __n57 ];
__n55["body"] := __n56;
__n47["consequent"] := __n55;
__n47["alternate"] := null;
__n46 := [ __n47 ];
__n45["body"] := __n46;
__n34["body"] := __n45;
__n1 := [ __n2, __n18, __n34 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n68 := [ "unicode", "character", "index" ];
__n0["variableDeclarations"] := __n68;
__n69 := [  ];
__n0["functionDeclarations"] := __n69;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}