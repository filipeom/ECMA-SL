function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "Literal";
__n8["value"] := "";
__n8["raw"] := "'\\
'";
__n9 := {  };
__n9["type"] := "Literal";
__n9["value"] := "";
__n9["raw"] := "''";
__n7 := [ __n8, __n9 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "CallExpression";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "assert";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "sameValue";
__n14["raw"] := "\"sameValue\"";
__n12["property"] := __n14;
__n12["computed"] := true;
__n11["callee"] := __n12;
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := "";
__n16["raw"] := "'\\'";
__n17 := {  };
__n17["type"] := "Literal";
__n17["value"] := "";
__n17["raw"] := "''";
__n15 := [ __n16, __n17 ];
__n11["arguments"] := __n15;
__n10["expression"] := __n11;
__n18 := {  };
__n18["type"] := "ExpressionStatement";
__n19 := {  };
__n19["type"] := "CallExpression";
__n20 := {  };
__n20["type"] := "MemberExpression";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "assert";
__n20["object"] := __n21;
__n22 := {  };
__n22["type"] := "Literal";
__n22["value"] := "sameValue";
__n22["raw"] := "\"sameValue\"";
__n20["property"] := __n22;
__n20["computed"] := true;
__n19["callee"] := __n20;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "";
__n24["raw"] := "'\\ '";
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "";
__n25["raw"] := "''";
__n23 := [ __n24, __n25 ];
__n19["arguments"] := __n23;
__n18["expression"] := __n19;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "assert";
__n28["object"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := "sameValue";
__n30["raw"] := "\"sameValue\"";
__n28["property"] := __n30;
__n28["computed"] := true;
__n27["callee"] := __n28;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "";
__n32["raw"] := "'\\ '";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "";
__n33["raw"] := "''";
__n31 := [ __n32, __n33 ];
__n27["arguments"] := __n31;
__n26["expression"] := __n27;
__n34 := {  };
__n34["type"] := "ExpressionStatement";
__n35 := {  };
__n35["type"] := "CallExpression";
__n36 := {  };
__n36["type"] := "MemberExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "assert";
__n36["object"] := __n37;
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "sameValue";
__n38["raw"] := "\"sameValue\"";
__n36["property"] := __n38;
__n36["computed"] := true;
__n35["callee"] := __n36;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "";
__n40["raw"] := "'\\
'";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "";
__n41["raw"] := "''";
__n39 := [ __n40, __n41 ];
__n35["arguments"] := __n39;
__n34["expression"] := __n35;
__n1 := [ __n2, __n10, __n18, __n26, __n34 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n42 := [  ];
__n0["variableDeclarations"] := __n42;
__n43 := [  ];
__n0["functionDeclarations"] := __n43;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}