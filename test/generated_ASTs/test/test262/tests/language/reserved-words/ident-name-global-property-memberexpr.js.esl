function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "tokenCodes";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ObjectExpression";
__n7 := [  ];
__n6["properties"] := __n7;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "MemberExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "tokenCodes";
__n10["object"] := __n11;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "undefined";
__n12["raw"] := "\"undefined\"";
__n10["property"] := __n12;
__n10["computed"] := true;
__n9["left"] := __n10;
__n13 := {  };
__n13["type"] := "Literal";
__n13["value"] := "undefined";
__n13["raw"] := "'undefined'";
__n9["right"] := __n13;
__n8["expression"] := __n9;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "AssignmentExpression";
__n15["operator"] := "=";
__n16 := {  };
__n16["type"] := "MemberExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "tokenCodes";
__n16["object"] := __n17;
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := "NaN";
__n18["raw"] := "\"NaN\"";
__n16["property"] := __n18;
__n16["computed"] := true;
__n15["left"] := __n16;
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := "NaN";
__n19["raw"] := "'NaN'";
__n15["right"] := __n19;
__n14["expression"] := __n15;
__n20 := {  };
__n20["type"] := "ExpressionStatement";
__n21 := {  };
__n21["type"] := "AssignmentExpression";
__n21["operator"] := "=";
__n22 := {  };
__n22["type"] := "MemberExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "tokenCodes";
__n22["object"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "Infinity";
__n24["raw"] := "\"Infinity\"";
__n22["property"] := __n24;
__n22["computed"] := true;
__n21["left"] := __n22;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "Infinity";
__n25["raw"] := "'Infinity'";
__n21["right"] := __n25;
__n20["expression"] := __n21;
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "arr";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "ArrayExpression";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "undefined";
__n32["raw"] := "'undefined'";
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "NaN";
__n33["raw"] := "'NaN'";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "Infinity";
__n34["raw"] := "'Infinity'";
__n31 := [ __n32, __n33, __n34 ];
__n30["elements"] := __n31;
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n35 := {  };
__n35["type"] := "ForStatement";
__n36 := {  };
__n36["type"] := "VariableDeclaration";
__n38 := {  };
__n38["type"] := "VariableDeclarator";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "i";
__n38["id"] := __n39;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := 0.;
__n40["raw"] := "0";
__n38["init"] := __n40;
__n37 := [ __n38 ];
__n36["declarations"] := __n37;
__n36["kind"] := "var";
__n35["init"] := __n36;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "<";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "i";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "arr";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "length";
__n45["raw"] := "\"length\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n41["right"] := __n43;
__n35["test"] := __n41;
__n46 := {  };
__n46["type"] := "UpdateExpression";
__n46["operator"] := "++";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "i";
__n46["argument"] := __n47;
__n46["prefix"] := true;
__n35["update"] := __n46;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "VariableDeclaration";
__n52 := {  };
__n52["type"] := "VariableDeclarator";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "propertyName";
__n52["id"] := __n53;
__n54 := {  };
__n54["type"] := "MemberExpression";
__n54["computed"] := true;
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "arr";
__n54["object"] := __n55;
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "i";
__n54["property"] := __n56;
__n52["init"] := __n54;
__n51 := [ __n52 ];
__n50["declarations"] := __n51;
__n50["kind"] := "var";
__n57 := {  };
__n57["type"] := "ExpressionStatement";
__n58 := {  };
__n58["type"] := "CallExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "assert";
__n58["callee"] := __n59;
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "MemberExpression";
__n63 := {  };
__n63["type"] := "Identifier";
__n63["name"] := "tokenCodes";
__n62["object"] := __n63;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "hasOwnProperty";
__n64["raw"] := "\"hasOwnProperty\"";
__n62["property"] := __n64;
__n62["computed"] := true;
__n61["callee"] := __n62;
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "propertyName";
__n65 := [ __n66 ];
__n61["arguments"] := __n65;
__n67 := {  };
__n67["type"] := "BinaryExpression";
__n67["operator"] := "+";
__n68 := {  };
__n68["type"] := "BinaryExpression";
__n68["operator"] := "+";
__n69 := {  };
__n69["type"] := "Literal";
__n69["value"] := "Property \"";
__n69["raw"] := "'Property \"'";
__n68["left"] := __n69;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "propertyName";
__n68["right"] := __n70;
__n67["left"] := __n68;
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "\" found";
__n71["raw"] := "'\" found'";
__n67["right"] := __n71;
__n60 := [ __n61, __n67 ];
__n58["arguments"] := __n60;
__n57["expression"] := __n58;
__n72 := {  };
__n72["type"] := "ExpressionStatement";
__n73 := {  };
__n73["type"] := "CallExpression";
__n74 := {  };
__n74["type"] := "MemberExpression";
__n75 := {  };
__n75["type"] := "Identifier";
__n75["name"] := "assert";
__n74["object"] := __n75;
__n76 := {  };
__n76["type"] := "Literal";
__n76["value"] := "sameValue";
__n76["raw"] := "\"sameValue\"";
__n74["property"] := __n76;
__n74["computed"] := true;
__n73["callee"] := __n74;
__n78 := {  };
__n78["type"] := "MemberExpression";
__n78["computed"] := true;
__n79 := {  };
__n79["type"] := "Identifier";
__n79["name"] := "tokenCodes";
__n78["object"] := __n79;
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "propertyName";
__n78["property"] := __n80;
__n81 := {  };
__n81["type"] := "Identifier";
__n81["name"] := "propertyName";
__n82 := {  };
__n82["type"] := "BinaryExpression";
__n82["operator"] := "+";
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "+";
__n84 := {  };
__n84["type"] := "Literal";
__n84["value"] := "Property \"";
__n84["raw"] := "'Property \"'";
__n83["left"] := __n84;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "propertyName";
__n83["right"] := __n85;
__n82["left"] := __n83;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "\" has correct value";
__n86["raw"] := "'\" has correct value'";
__n82["right"] := __n86;
__n77 := [ __n78, __n81, __n82 ];
__n73["arguments"] := __n77;
__n72["expression"] := __n73;
__n49 := [ __n50, __n57, __n72 ];
__n48["body"] := __n49;
__n35["body"] := __n48;
__n1 := [ __n2, __n8, __n14, __n20, __n26, __n35 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n87 := [ "tokenCodes", "arr", "i", "propertyName" ];
__n0["variableDeclarations"] := __n87;
__n88 := [  ];
__n0["functionDeclarations"] := __n88;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}