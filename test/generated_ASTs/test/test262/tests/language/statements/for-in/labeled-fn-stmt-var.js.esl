function buildAST () {
__n0 := {  };
__n0["type"] := "Program";
__n2 := {  };
__n2["type"] := "ForInStatement";
__n3 := {  };
__n3["type"] := "VariableDeclaration";
__n5 := {  };
__n5["type"] := "VariableDeclarator";
__n6 := {  };
__n6["type"] := "Identifier";
__n6["name"] := "x";
__n5["id"] := __n6;
__n5["init"] := null;
__n4 := [ __n5 ];
__n3["declarations"] := __n4;
__n3["kind"] := "var";
__n2["left"] := __n3;
__n7 := {  };
__n7["type"] := "ObjectExpression";
__n8 := [  ];
__n7["properties"] := __n8;
__n2["right"] := __n7;
__n9 := {  };
__n9["type"] := "LabeledStatement";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "label1";
__n9["label"] := __n10;
__n11 := {  };
__n11["type"] := "LabeledStatement";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "label2";
__n11["label"] := __n12;
__n13 := {  };
__n13["type"] := "ExpressionStatement";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "f";
__n13["expression"] := __n14;
__n11["body"] := __n13;
__n9["body"] := __n11;
__n2["body"] := __n9;
__n2["each"] := false;
__n1 := [ __n2 ];
__n0["body"] := __n1;
__n0["sourceType"] := "script";
__n15 := [ "x" ];
__n0["variableDeclarations"] := __n15;
__n17 := {  };
__n17["type"] := "FunctionDeclaration";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "f";
__n17["id"] := __n18;
__n19 := [  ];
__n17["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n21 := [  ];
__n20["body"] := __n21;
__n22 := [  ];
__n20["variableDeclarations"] := __n22;
__n23 := [  ];
__n20["functionDeclarations"] := __n23;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n17["body"] := __n20;
__n17["generator"] := false;
__n17["expression"] := false;
__n17["async"] := false;
__n16 := [ __n17 ];
__n0["functionDeclarations"] := __n16;
__n0["codeType"] := "global";
__n0["strict"] := false;
return __n0
}