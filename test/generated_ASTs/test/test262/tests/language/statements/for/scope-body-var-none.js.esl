function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "probeBefore";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "FunctionExpression";
__n6["id"] := null;
__n7 := [  ];
__n6["params"] := __n7;
__n8 := {  };
__n8["type"] := "BlockStatement";
__n10 := {  };
__n10["type"] := "ReturnStatement";
__n11 := {  };
__n11["type"] := "ArrayExpression";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "x";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "y";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "z";
__n12 := [ __n13, __n14, __n15 ];
__n11["elements"] := __n12;
__n10["argument"] := __n11;
__n9 := [ __n10 ];
__n8["body"] := __n9;
__n16 := [  ];
__n8["variableDeclarations"] := __n16;
__n17 := [  ];
__n8["functionDeclarations"] := __n17;
__n8["codeType"] := "function";
__n8["strict"] := false;
__n6["body"] := __n8;
__n6["generator"] := false;
__n6["async"] := false;
__n6["expression"] := false;
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n18 := {  };
__n18["type"] := "VariableDeclaration";
__n20 := {  };
__n20["type"] := "VariableDeclarator";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "probeTest";
__n20["id"] := __n21;
__n20["init"] := null;
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "probeIncr";
__n22["id"] := __n23;
__n22["init"] := null;
__n24 := {  };
__n24["type"] := "VariableDeclarator";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "probeBody";
__n24["id"] := __n25;
__n24["init"] := null;
__n19 := [ __n20, __n22, __n24 ];
__n18["declarations"] := __n19;
__n18["kind"] := "var";
__n26 := {  };
__n26["type"] := "VariableDeclaration";
__n28 := {  };
__n28["type"] := "VariableDeclarator";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "run";
__n28["id"] := __n29;
__n30 := {  };
__n30["type"] := "Literal";
__n30["value"] := true;
__n30["raw"] := "true";
__n28["init"] := __n30;
__n27 := [ __n28 ];
__n26["declarations"] := __n27;
__n26["kind"] := "var";
__n31 := {  };
__n31["type"] := "ForStatement";
__n31["init"] := null;
__n32 := {  };
__n32["type"] := "LogicalExpression";
__n32["operator"] := "&&";
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "run";
__n32["left"] := __n33;
__n34 := {  };
__n34["type"] := "SequenceExpression";
__n36 := {  };
__n36["type"] := "CallExpression";
__n37 := {  };
__n37["type"] := "Identifier";
__n37["name"] := "eval";
__n36["callee"] := __n37;
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "var x = 1;";
__n39["raw"] := "'var x = 1;'";
__n38 := [ __n39 ];
__n36["arguments"] := __n38;
__n40 := {  };
__n40["type"] := "AssignmentExpression";
__n40["operator"] := "=";
__n41 := {  };
__n41["type"] := "Identifier";
__n41["name"] := "probeTest";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "FunctionExpression";
__n42["id"] := null;
__n43 := [  ];
__n42["params"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ReturnStatement";
__n47 := {  };
__n47["type"] := "ArrayExpression";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "x";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "y";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "z";
__n48 := [ __n49, __n50, __n51 ];
__n47["elements"] := __n48;
__n46["argument"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n52 := [  ];
__n44["variableDeclarations"] := __n52;
__n53 := [  ];
__n44["functionDeclarations"] := __n53;
__n44["codeType"] := "function";
__n44["strict"] := false;
__n42["body"] := __n44;
__n42["generator"] := false;
__n42["async"] := false;
__n42["expression"] := false;
__n40["right"] := __n42;
__n35 := [ __n36, __n40 ];
__n34["expressions"] := __n35;
__n32["right"] := __n34;
__n31["test"] := __n32;
__n54 := {  };
__n54["type"] := "SequenceExpression";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "eval";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "var y = 1;";
__n59["raw"] := "'var y = 1;'";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n60 := {  };
__n60["type"] := "AssignmentExpression";
__n60["operator"] := "=";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "probeIncr";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "FunctionExpression";
__n62["id"] := null;
__n63 := [  ];
__n62["params"] := __n63;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ReturnStatement";
__n67 := {  };
__n67["type"] := "ArrayExpression";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "x";
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "y";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "z";
__n68 := [ __n69, __n70, __n71 ];
__n67["elements"] := __n68;
__n66["argument"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n72 := [  ];
__n64["variableDeclarations"] := __n72;
__n73 := [  ];
__n64["functionDeclarations"] := __n73;
__n64["codeType"] := "function";
__n64["strict"] := false;
__n62["body"] := __n64;
__n62["generator"] := false;
__n62["async"] := false;
__n62["expression"] := false;
__n60["right"] := __n62;
__n55 := [ __n56, __n60 ];
__n54["expressions"] := __n55;
__n31["update"] := __n54;
__n74 := {  };
__n74["type"] := "VariableDeclaration";
__n76 := {  };
__n76["type"] := "VariableDeclarator";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "z";
__n76["id"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := 1.;
__n78["raw"] := "1";
__n76["init"] := __n78;
__n79 := {  };
__n79["type"] := "VariableDeclarator";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "_";
__n79["id"] := __n80;
__n81 := {  };
__n81["type"] := "AssignmentExpression";
__n81["operator"] := "=";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "probeBody";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "FunctionExpression";
__n83["id"] := null;
__n84 := [  ];
__n83["params"] := __n84;
__n85 := {  };
__n85["type"] := "BlockStatement";
__n87 := {  };
__n87["type"] := "ReturnStatement";
__n88 := {  };
__n88["type"] := "ArrayExpression";
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "x";
__n91 := {  };
__n91["type"] := "Identifier";
__n91["name"] := "y";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "z";
__n89 := [ __n90, __n91, __n92 ];
__n88["elements"] := __n89;
__n87["argument"] := __n88;
__n86 := [ __n87 ];
__n85["body"] := __n86;
__n93 := [  ];
__n85["variableDeclarations"] := __n93;
__n94 := [  ];
__n85["functionDeclarations"] := __n94;
__n85["codeType"] := "function";
__n85["strict"] := false;
__n83["body"] := __n85;
__n83["generator"] := false;
__n83["async"] := false;
__n83["expression"] := false;
__n81["right"] := __n83;
__n79["init"] := __n81;
__n95 := {  };
__n95["type"] := "VariableDeclarator";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "run";
__n95["id"] := __n96;
__n97 := {  };
__n97["type"] := "Literal";
__n97["value"] := false;
__n97["raw"] := "false";
__n95["init"] := __n97;
__n75 := [ __n76, __n79, __n95 ];
__n74["declarations"] := __n75;
__n74["kind"] := "var";
__n31["body"] := __n74;
__n98 := {  };
__n98["type"] := "VariableDeclaration";
__n100 := {  };
__n100["type"] := "VariableDeclarator";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "x";
__n100["id"] := __n101;
__n102 := {  };
__n102["type"] := "Literal";
__n102["value"] := 2.;
__n102["raw"] := "2";
__n100["init"] := __n102;
__n99 := [ __n100 ];
__n98["declarations"] := __n99;
__n98["kind"] := "var";
__n103 := {  };
__n103["type"] := "VariableDeclaration";
__n105 := {  };
__n105["type"] := "VariableDeclarator";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "y";
__n105["id"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := 2.;
__n107["raw"] := "2";
__n105["init"] := __n107;
__n104 := [ __n105 ];
__n103["declarations"] := __n104;
__n103["kind"] := "var";
__n108 := {  };
__n108["type"] := "VariableDeclaration";
__n110 := {  };
__n110["type"] := "VariableDeclarator";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "z";
__n110["id"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := 2.;
__n112["raw"] := "2";
__n110["init"] := __n112;
__n109 := [ __n110 ];
__n108["declarations"] := __n109;
__n108["kind"] := "var";
__n113 := {  };
__n113["type"] := "ExpressionStatement";
__n114 := {  };
__n114["type"] := "CallExpression";
__n115 := {  };
__n115["type"] := "MemberExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "assert";
__n115["object"] := __n116;
__n117 := {  };
__n117["type"] := "Literal";
__n117["value"] := "sameValue";
__n117["raw"] := "\"sameValue\"";
__n115["property"] := __n117;
__n115["computed"] := true;
__n114["callee"] := __n115;
__n119 := {  };
__n119["type"] := "MemberExpression";
__n119["computed"] := true;
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "probeBefore";
__n120["callee"] := __n121;
__n122 := [  ];
__n120["arguments"] := __n122;
__n119["object"] := __n120;
__n123 := {  };
__n123["type"] := "Literal";
__n123["value"] := 0.;
__n123["raw"] := "0";
__n119["property"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := 2.;
__n124["raw"] := "2";
__n125 := {  };
__n125["type"] := "Literal";
__n125["value"] := "reference preceding statement (redeclared in \"test\" position)";
__n125["raw"] := "'reference preceding statement (redeclared in \"test\" position)'";
__n118 := [ __n119, __n124, __n125 ];
__n114["arguments"] := __n118;
__n113["expression"] := __n114;
__n126 := {  };
__n126["type"] := "ExpressionStatement";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "MemberExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "assert";
__n128["object"] := __n129;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "sameValue";
__n130["raw"] := "\"sameValue\"";
__n128["property"] := __n130;
__n128["computed"] := true;
__n127["callee"] := __n128;
__n132 := {  };
__n132["type"] := "MemberExpression";
__n132["computed"] := true;
__n133 := {  };
__n133["type"] := "CallExpression";
__n134 := {  };
__n134["type"] := "Identifier";
__n134["name"] := "probeBefore";
__n133["callee"] := __n134;
__n135 := [  ];
__n133["arguments"] := __n135;
__n132["object"] := __n133;
__n136 := {  };
__n136["type"] := "Literal";
__n136["value"] := 1.;
__n136["raw"] := "1";
__n132["property"] := __n136;
__n137 := {  };
__n137["type"] := "Literal";
__n137["value"] := 2.;
__n137["raw"] := "2";
__n138 := {  };
__n138["type"] := "Literal";
__n138["value"] := "reference preceding statement (redeclared in statement body)";
__n138["raw"] := "'reference preceding statement (redeclared in statement body)'";
__n131 := [ __n132, __n137, __n138 ];
__n127["arguments"] := __n131;
__n126["expression"] := __n127;
__n139 := {  };
__n139["type"] := "ExpressionStatement";
__n140 := {  };
__n140["type"] := "CallExpression";
__n141 := {  };
__n141["type"] := "MemberExpression";
__n142 := {  };
__n142["type"] := "Identifier";
__n142["name"] := "assert";
__n141["object"] := __n142;
__n143 := {  };
__n143["type"] := "Literal";
__n143["value"] := "sameValue";
__n143["raw"] := "\"sameValue\"";
__n141["property"] := __n143;
__n141["computed"] := true;
__n140["callee"] := __n141;
__n145 := {  };
__n145["type"] := "MemberExpression";
__n145["computed"] := true;
__n146 := {  };
__n146["type"] := "CallExpression";
__n147 := {  };
__n147["type"] := "Identifier";
__n147["name"] := "probeBefore";
__n146["callee"] := __n147;
__n148 := [  ];
__n146["arguments"] := __n148;
__n145["object"] := __n146;
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := 2.;
__n149["raw"] := "2";
__n145["property"] := __n149;
__n150 := {  };
__n150["type"] := "Literal";
__n150["value"] := 2.;
__n150["raw"] := "2";
__n151 := {  };
__n151["type"] := "Literal";
__n151["value"] := "reference preceding statement (redeclared in \"increment\" position)";
__n151["raw"] := "'reference preceding statement (redeclared in \"increment\" position)'";
__n144 := [ __n145, __n150, __n151 ];
__n140["arguments"] := __n144;
__n139["expression"] := __n140;
__n152 := {  };
__n152["type"] := "ExpressionStatement";
__n153 := {  };
__n153["type"] := "CallExpression";
__n154 := {  };
__n154["type"] := "MemberExpression";
__n155 := {  };
__n155["type"] := "Identifier";
__n155["name"] := "assert";
__n154["object"] := __n155;
__n156 := {  };
__n156["type"] := "Literal";
__n156["value"] := "sameValue";
__n156["raw"] := "\"sameValue\"";
__n154["property"] := __n156;
__n154["computed"] := true;
__n153["callee"] := __n154;
__n158 := {  };
__n158["type"] := "MemberExpression";
__n158["computed"] := true;
__n159 := {  };
__n159["type"] := "CallExpression";
__n160 := {  };
__n160["type"] := "Identifier";
__n160["name"] := "probeTest";
__n159["callee"] := __n160;
__n161 := [  ];
__n159["arguments"] := __n161;
__n158["object"] := __n159;
__n162 := {  };
__n162["type"] := "Literal";
__n162["value"] := 0.;
__n162["raw"] := "0";
__n158["property"] := __n162;
__n163 := {  };
__n163["type"] := "Literal";
__n163["value"] := 2.;
__n163["raw"] := "2";
__n164 := {  };
__n164["type"] := "Literal";
__n164["value"] := "reference from \"test\" position (redeclared in \"test\" position)";
__n164["raw"] := "'reference from \"test\" position (redeclared in \"test\" position)'";
__n157 := [ __n158, __n163, __n164 ];
__n153["arguments"] := __n157;
__n152["expression"] := __n153;
__n165 := {  };
__n165["type"] := "ExpressionStatement";
__n166 := {  };
__n166["type"] := "CallExpression";
__n167 := {  };
__n167["type"] := "MemberExpression";
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "assert";
__n167["object"] := __n168;
__n169 := {  };
__n169["type"] := "Literal";
__n169["value"] := "sameValue";
__n169["raw"] := "\"sameValue\"";
__n167["property"] := __n169;
__n167["computed"] := true;
__n166["callee"] := __n167;
__n171 := {  };
__n171["type"] := "MemberExpression";
__n171["computed"] := true;
__n172 := {  };
__n172["type"] := "CallExpression";
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "probeTest";
__n172["callee"] := __n173;
__n174 := [  ];
__n172["arguments"] := __n174;
__n171["object"] := __n172;
__n175 := {  };
__n175["type"] := "Literal";
__n175["value"] := 1.;
__n175["raw"] := "1";
__n171["property"] := __n175;
__n176 := {  };
__n176["type"] := "Literal";
__n176["value"] := 2.;
__n176["raw"] := "2";
__n177 := {  };
__n177["type"] := "Literal";
__n177["value"] := "reference from \"test\" position (redeclared in statement body)";
__n177["raw"] := "'reference from \"test\" position (redeclared in statement body)'";
__n170 := [ __n171, __n176, __n177 ];
__n166["arguments"] := __n170;
__n165["expression"] := __n166;
__n178 := {  };
__n178["type"] := "ExpressionStatement";
__n179 := {  };
__n179["type"] := "CallExpression";
__n180 := {  };
__n180["type"] := "MemberExpression";
__n181 := {  };
__n181["type"] := "Identifier";
__n181["name"] := "assert";
__n180["object"] := __n181;
__n182 := {  };
__n182["type"] := "Literal";
__n182["value"] := "sameValue";
__n182["raw"] := "\"sameValue\"";
__n180["property"] := __n182;
__n180["computed"] := true;
__n179["callee"] := __n180;
__n184 := {  };
__n184["type"] := "MemberExpression";
__n184["computed"] := true;
__n185 := {  };
__n185["type"] := "CallExpression";
__n186 := {  };
__n186["type"] := "Identifier";
__n186["name"] := "probeTest";
__n185["callee"] := __n186;
__n187 := [  ];
__n185["arguments"] := __n187;
__n184["object"] := __n185;
__n188 := {  };
__n188["type"] := "Literal";
__n188["value"] := 2.;
__n188["raw"] := "2";
__n184["property"] := __n188;
__n189 := {  };
__n189["type"] := "Literal";
__n189["value"] := 2.;
__n189["raw"] := "2";
__n190 := {  };
__n190["type"] := "Literal";
__n190["value"] := "reference from \"test\" position (redeclared in \"increment\" position)";
__n190["raw"] := "'reference from \"test\" position (redeclared in \"increment\" position)'";
__n183 := [ __n184, __n189, __n190 ];
__n179["arguments"] := __n183;
__n178["expression"] := __n179;
__n191 := {  };
__n191["type"] := "ExpressionStatement";
__n192 := {  };
__n192["type"] := "CallExpression";
__n193 := {  };
__n193["type"] := "MemberExpression";
__n194 := {  };
__n194["type"] := "Identifier";
__n194["name"] := "assert";
__n193["object"] := __n194;
__n195 := {  };
__n195["type"] := "Literal";
__n195["value"] := "sameValue";
__n195["raw"] := "\"sameValue\"";
__n193["property"] := __n195;
__n193["computed"] := true;
__n192["callee"] := __n193;
__n197 := {  };
__n197["type"] := "MemberExpression";
__n197["computed"] := true;
__n198 := {  };
__n198["type"] := "CallExpression";
__n199 := {  };
__n199["type"] := "Identifier";
__n199["name"] := "probeBody";
__n198["callee"] := __n199;
__n200 := [  ];
__n198["arguments"] := __n200;
__n197["object"] := __n198;
__n201 := {  };
__n201["type"] := "Literal";
__n201["value"] := 0.;
__n201["raw"] := "0";
__n197["property"] := __n201;
__n202 := {  };
__n202["type"] := "Literal";
__n202["value"] := 2.;
__n202["raw"] := "2";
__n203 := {  };
__n203["type"] := "Literal";
__n203["value"] := "reference from statement body (redeclared in \"test\" position)";
__n203["raw"] := "'reference from statement body (redeclared in \"test\" position)'";
__n196 := [ __n197, __n202, __n203 ];
__n192["arguments"] := __n196;
__n191["expression"] := __n192;
__n204 := {  };
__n204["type"] := "ExpressionStatement";
__n205 := {  };
__n205["type"] := "CallExpression";
__n206 := {  };
__n206["type"] := "MemberExpression";
__n207 := {  };
__n207["type"] := "Identifier";
__n207["name"] := "assert";
__n206["object"] := __n207;
__n208 := {  };
__n208["type"] := "Literal";
__n208["value"] := "sameValue";
__n208["raw"] := "\"sameValue\"";
__n206["property"] := __n208;
__n206["computed"] := true;
__n205["callee"] := __n206;
__n210 := {  };
__n210["type"] := "MemberExpression";
__n210["computed"] := true;
__n211 := {  };
__n211["type"] := "CallExpression";
__n212 := {  };
__n212["type"] := "Identifier";
__n212["name"] := "probeBody";
__n211["callee"] := __n212;
__n213 := [  ];
__n211["arguments"] := __n213;
__n210["object"] := __n211;
__n214 := {  };
__n214["type"] := "Literal";
__n214["value"] := 1.;
__n214["raw"] := "1";
__n210["property"] := __n214;
__n215 := {  };
__n215["type"] := "Literal";
__n215["value"] := 2.;
__n215["raw"] := "2";
__n216 := {  };
__n216["type"] := "Literal";
__n216["value"] := "reference from statement body (redeclared in statement body)";
__n216["raw"] := "'reference from statement body (redeclared in statement body)'";
__n209 := [ __n210, __n215, __n216 ];
__n205["arguments"] := __n209;
__n204["expression"] := __n205;
__n217 := {  };
__n217["type"] := "ExpressionStatement";
__n218 := {  };
__n218["type"] := "CallExpression";
__n219 := {  };
__n219["type"] := "MemberExpression";
__n220 := {  };
__n220["type"] := "Identifier";
__n220["name"] := "assert";
__n219["object"] := __n220;
__n221 := {  };
__n221["type"] := "Literal";
__n221["value"] := "sameValue";
__n221["raw"] := "\"sameValue\"";
__n219["property"] := __n221;
__n219["computed"] := true;
__n218["callee"] := __n219;
__n223 := {  };
__n223["type"] := "MemberExpression";
__n223["computed"] := true;
__n224 := {  };
__n224["type"] := "CallExpression";
__n225 := {  };
__n225["type"] := "Identifier";
__n225["name"] := "probeBody";
__n224["callee"] := __n225;
__n226 := [  ];
__n224["arguments"] := __n226;
__n223["object"] := __n224;
__n227 := {  };
__n227["type"] := "Literal";
__n227["value"] := 2.;
__n227["raw"] := "2";
__n223["property"] := __n227;
__n228 := {  };
__n228["type"] := "Literal";
__n228["value"] := 2.;
__n228["raw"] := "2";
__n229 := {  };
__n229["type"] := "Literal";
__n229["value"] := "reference from statement body (redeclared in \"increment\" position)";
__n229["raw"] := "'reference from statement body (redeclared in \"increment\" position)'";
__n222 := [ __n223, __n228, __n229 ];
__n218["arguments"] := __n222;
__n217["expression"] := __n218;
__n230 := {  };
__n230["type"] := "ExpressionStatement";
__n231 := {  };
__n231["type"] := "CallExpression";
__n232 := {  };
__n232["type"] := "MemberExpression";
__n233 := {  };
__n233["type"] := "Identifier";
__n233["name"] := "assert";
__n232["object"] := __n233;
__n234 := {  };
__n234["type"] := "Literal";
__n234["value"] := "sameValue";
__n234["raw"] := "\"sameValue\"";
__n232["property"] := __n234;
__n232["computed"] := true;
__n231["callee"] := __n232;
__n236 := {  };
__n236["type"] := "MemberExpression";
__n236["computed"] := true;
__n237 := {  };
__n237["type"] := "CallExpression";
__n238 := {  };
__n238["type"] := "Identifier";
__n238["name"] := "probeIncr";
__n237["callee"] := __n238;
__n239 := [  ];
__n237["arguments"] := __n239;
__n236["object"] := __n237;
__n240 := {  };
__n240["type"] := "Literal";
__n240["value"] := 0.;
__n240["raw"] := "0";
__n236["property"] := __n240;
__n241 := {  };
__n241["type"] := "Literal";
__n241["value"] := 2.;
__n241["raw"] := "2";
__n242 := {  };
__n242["type"] := "Literal";
__n242["value"] := "reference from \"increment\" position (redeclared in \"test\" position)";
__n242["raw"] := "'reference from \"increment\" position (redeclared in \"test\" position)'";
__n235 := [ __n236, __n241, __n242 ];
__n231["arguments"] := __n235;
__n230["expression"] := __n231;
__n243 := {  };
__n243["type"] := "ExpressionStatement";
__n244 := {  };
__n244["type"] := "CallExpression";
__n245 := {  };
__n245["type"] := "MemberExpression";
__n246 := {  };
__n246["type"] := "Identifier";
__n246["name"] := "assert";
__n245["object"] := __n246;
__n247 := {  };
__n247["type"] := "Literal";
__n247["value"] := "sameValue";
__n247["raw"] := "\"sameValue\"";
__n245["property"] := __n247;
__n245["computed"] := true;
__n244["callee"] := __n245;
__n249 := {  };
__n249["type"] := "MemberExpression";
__n249["computed"] := true;
__n250 := {  };
__n250["type"] := "CallExpression";
__n251 := {  };
__n251["type"] := "Identifier";
__n251["name"] := "probeIncr";
__n250["callee"] := __n251;
__n252 := [  ];
__n250["arguments"] := __n252;
__n249["object"] := __n250;
__n253 := {  };
__n253["type"] := "Literal";
__n253["value"] := 1.;
__n253["raw"] := "1";
__n249["property"] := __n253;
__n254 := {  };
__n254["type"] := "Literal";
__n254["value"] := 2.;
__n254["raw"] := "2";
__n255 := {  };
__n255["type"] := "Literal";
__n255["value"] := "reference from \"increment\" position (redeclared in statement body)";
__n255["raw"] := "'reference from \"increment\" position (redeclared in statement body)'";
__n248 := [ __n249, __n254, __n255 ];
__n244["arguments"] := __n248;
__n243["expression"] := __n244;
__n256 := {  };
__n256["type"] := "ExpressionStatement";
__n257 := {  };
__n257["type"] := "CallExpression";
__n258 := {  };
__n258["type"] := "MemberExpression";
__n259 := {  };
__n259["type"] := "Identifier";
__n259["name"] := "assert";
__n258["object"] := __n259;
__n260 := {  };
__n260["type"] := "Literal";
__n260["value"] := "sameValue";
__n260["raw"] := "\"sameValue\"";
__n258["property"] := __n260;
__n258["computed"] := true;
__n257["callee"] := __n258;
__n262 := {  };
__n262["type"] := "MemberExpression";
__n262["computed"] := true;
__n263 := {  };
__n263["type"] := "CallExpression";
__n264 := {  };
__n264["type"] := "Identifier";
__n264["name"] := "probeIncr";
__n263["callee"] := __n264;
__n265 := [  ];
__n263["arguments"] := __n265;
__n262["object"] := __n263;
__n266 := {  };
__n266["type"] := "Literal";
__n266["value"] := 2.;
__n266["raw"] := "2";
__n262["property"] := __n266;
__n267 := {  };
__n267["type"] := "Literal";
__n267["value"] := 2.;
__n267["raw"] := "2";
__n268 := {  };
__n268["type"] := "Literal";
__n268["value"] := "reference from \"increment\" position (redeclared in \"increment\" position)";
__n268["raw"] := "'reference from \"increment\" position (redeclared in \"increment\" position)'";
__n261 := [ __n262, __n267, __n268 ];
__n257["arguments"] := __n261;
__n256["expression"] := __n257;
__n1 := [ __n2, __n18, __n26, __n31, __n98, __n103, __n108, __n113, __n126, __n139, __n152, __n165, __n178, __n191, __n204, __n217, __n230, __n243, __n256 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n269 := [ "probeBefore", "probeTest", "probeIncr", "probeBody", "run", "z", "_", "x", "y" ];
__n0["variableDeclarations"] := __n269;
__n270 := [  ];
__n0["functionDeclarations"] := __n270;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}