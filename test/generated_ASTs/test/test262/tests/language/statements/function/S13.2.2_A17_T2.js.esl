function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "ThisExpression";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "p1";
__n6["raw"] := "\"p1\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "alert";
__n7["raw"] := "\"alert\"";
__n3["right"] := __n7;
__n2["expression"] := __n3;
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "AssignmentExpression";
__n9["operator"] := "=";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "__obj";
__n9["left"] := __n10;
__n11 := {  };
__n11["type"] := "ObjectExpression";
__n13 := {  };
__n13["type"] := "Property";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "p1";
__n13["key"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n13["value"] := __n15;
__n13["computed"] := false;
__n13["kind"] := "init";
__n13["shorthand"] := false;
__n16 := {  };
__n16["type"] := "Property";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "getRight";
__n16["key"] := __n17;
__n18 := {  };
__n18["type"] := "FunctionExpression";
__n18["id"] := null;
__n19 := [  ];
__n18["params"] := __n19;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ReturnStatement";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := "right";
__n23["raw"] := "\"right\"";
__n22["argument"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n24 := [  ];
__n20["variableDeclarations"] := __n24;
__n25 := [  ];
__n20["functionDeclarations"] := __n25;
__n20["codeType"] := "function";
__n20["strict"] := false;
__n18["body"] := __n20;
__n18["generator"] := false;
__n18["async"] := false;
__n18["expression"] := false;
__n16["value"] := __n18;
__n16["computed"] := false;
__n16["kind"] := "init";
__n16["shorthand"] := false;
__n12 := [ __n13, __n16 ];
__n11["properties"] := __n12;
__n9["right"] := __n11;
__n8["expression"] := __n9;
__n26 := {  };
__n26["type"] := "ExpressionStatement";
__n27 := {  };
__n27["type"] := "AssignmentExpression";
__n27["operator"] := "=";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "getRight";
__n27["left"] := __n28;
__n29 := {  };
__n29["type"] := "FunctionExpression";
__n29["id"] := null;
__n30 := [  ];
__n29["params"] := __n30;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ReturnStatement";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := "napravo";
__n34["raw"] := "\"napravo\"";
__n33["argument"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n35 := [  ];
__n31["variableDeclarations"] := __n35;
__n36 := [  ];
__n31["functionDeclarations"] := __n36;
__n31["codeType"] := "function";
__n31["strict"] := false;
__n29["body"] := __n31;
__n29["generator"] := false;
__n29["async"] := false;
__n29["expression"] := false;
__n27["right"] := __n29;
__n26["expression"] := __n27;
__n37 := {  };
__n37["type"] := "TryStatement";
__n38 := {  };
__n38["type"] := "BlockStatement";
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "FunctionExpression";
__n42["id"] := null;
__n43 := [  ];
__n42["params"] := __n43;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "WithStatement";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "__obj";
__n46["object"] := __n47;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "AssignmentExpression";
__n51["operator"] := "=";
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "p1";
__n51["left"] := __n52;
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := "w1";
__n53["raw"] := "\"w1\"";
__n51["right"] := __n53;
__n50["expression"] := __n51;
__n54 := {  };
__n54["type"] := "ExpressionStatement";
__n55 := {  };
__n55["type"] := "AssignmentExpression";
__n55["operator"] := "=";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "getRight";
__n55["left"] := __n56;
__n57 := {  };
__n57["type"] := "FunctionExpression";
__n57["id"] := null;
__n58 := [  ];
__n57["params"] := __n58;
__n59 := {  };
__n59["type"] := "BlockStatement";
__n61 := {  };
__n61["type"] := "ReturnStatement";
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := false;
__n62["raw"] := "false";
__n61["argument"] := __n62;
__n60 := [ __n61 ];
__n59["body"] := __n60;
__n63 := [  ];
__n59["variableDeclarations"] := __n63;
__n64 := [  ];
__n59["functionDeclarations"] := __n64;
__n59["codeType"] := "function";
__n59["strict"] := false;
__n57["body"] := __n59;
__n57["generator"] := false;
__n57["async"] := false;
__n57["expression"] := false;
__n55["right"] := __n57;
__n54["expression"] := __n55;
__n65 := {  };
__n65["type"] := "ThrowStatement";
__n66 := {  };
__n66["type"] := "Identifier";
__n66["name"] := "p1";
__n65["argument"] := __n66;
__n49 := [ __n50, __n54, __n65 ];
__n48["body"] := __n49;
__n46["body"] := __n48;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n67 := [  ];
__n44["variableDeclarations"] := __n67;
__n68 := [  ];
__n44["functionDeclarations"] := __n68;
__n44["codeType"] := "function";
__n44["strict"] := false;
__n42["body"] := __n44;
__n42["generator"] := false;
__n42["async"] := false;
__n42["expression"] := false;
__n41["callee"] := __n42;
__n69 := [  ];
__n41["arguments"] := __n69;
__n40["expression"] := __n41;
__n39 := [ __n40 ];
__n38["body"] := __n39;
__n37["block"] := __n38;
__n70 := {  };
__n70["type"] := "CatchClause";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "e";
__n70["param"] := __n71;
__n72 := {  };
__n72["type"] := "BlockStatement";
__n74 := {  };
__n74["type"] := "ExpressionStatement";
__n75 := {  };
__n75["type"] := "AssignmentExpression";
__n75["operator"] := "=";
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "resukt";
__n75["left"] := __n76;
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "p1";
__n75["right"] := __n77;
__n74["expression"] := __n75;
__n73 := [ __n74 ];
__n72["body"] := __n73;
__n70["body"] := __n72;
__n37["handler"] := __n70;
__n37["finalizer"] := null;
__n78 := {  };
__n78["type"] := "IfStatement";
__n79 := {  };
__n79["type"] := "BinaryExpression";
__n79["operator"] := "!==";
__n80 := {  };
__n80["type"] := "Identifier";
__n80["name"] := "p1";
__n79["left"] := __n80;
__n81 := {  };
__n81["type"] := "Literal";
__n81["value"] := "alert";
__n81["raw"] := "\"alert\"";
__n79["right"] := __n81;
__n78["test"] := __n79;
__n82 := {  };
__n82["type"] := "BlockStatement";
__n84 := {  };
__n84["type"] := "ExpressionStatement";
__n85 := {  };
__n85["type"] := "CallExpression";
__n86 := {  };
__n86["type"] := "Identifier";
__n86["name"] := "$ERROR";
__n85["callee"] := __n86;
__n88 := {  };
__n88["type"] := "BinaryExpression";
__n88["operator"] := "+";
__n89 := {  };
__n89["type"] := "Literal";
__n89["value"] := "#1: p1 === \"alert\". Actual: p1===";
__n89["raw"] := "'#1: p1 === \"alert\". Actual: p1==='";
__n88["left"] := __n89;
__n90 := {  };
__n90["type"] := "Identifier";
__n90["name"] := "p1";
__n88["right"] := __n90;
__n87 := [ __n88 ];
__n85["arguments"] := __n87;
__n84["expression"] := __n85;
__n83 := [ __n84 ];
__n82["body"] := __n83;
__n78["consequent"] := __n82;
__n78["alternate"] := null;
__n91 := {  };
__n91["type"] := "IfStatement";
__n92 := {  };
__n92["type"] := "BinaryExpression";
__n92["operator"] := "!==";
__n93 := {  };
__n93["type"] := "CallExpression";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "getRight";
__n93["callee"] := __n94;
__n95 := [  ];
__n93["arguments"] := __n95;
__n92["left"] := __n93;
__n96 := {  };
__n96["type"] := "Literal";
__n96["value"] := "napravo";
__n96["raw"] := "\"napravo\"";
__n92["right"] := __n96;
__n91["test"] := __n92;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "ExpressionStatement";
__n100 := {  };
__n100["type"] := "CallExpression";
__n101 := {  };
__n101["type"] := "Identifier";
__n101["name"] := "$ERROR";
__n100["callee"] := __n101;
__n103 := {  };
__n103["type"] := "BinaryExpression";
__n103["operator"] := "+";
__n104 := {  };
__n104["type"] := "Literal";
__n104["value"] := "#2: getRight() === \"napravo\". Actual: getRight() === ";
__n104["raw"] := "'#2: getRight() === \"napravo\". Actual: getRight() === '";
__n103["left"] := __n104;
__n105 := {  };
__n105["type"] := "CallExpression";
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "getRight";
__n105["callee"] := __n106;
__n107 := [  ];
__n105["arguments"] := __n107;
__n103["right"] := __n105;
__n102 := [ __n103 ];
__n100["arguments"] := __n102;
__n99["expression"] := __n100;
__n98 := [ __n99 ];
__n97["body"] := __n98;
__n91["consequent"] := __n97;
__n91["alternate"] := null;
__n108 := {  };
__n108["type"] := "IfStatement";
__n109 := {  };
__n109["type"] := "BinaryExpression";
__n109["operator"] := "!==";
__n110 := {  };
__n110["type"] := "MemberExpression";
__n111 := {  };
__n111["type"] := "Identifier";
__n111["name"] := "__obj";
__n110["object"] := __n111;
__n112 := {  };
__n112["type"] := "Literal";
__n112["value"] := "p1";
__n112["raw"] := "\"p1\"";
__n110["property"] := __n112;
__n110["computed"] := true;
__n109["left"] := __n110;
__n113 := {  };
__n113["type"] := "Literal";
__n113["value"] := "w1";
__n113["raw"] := "\"w1\"";
__n109["right"] := __n113;
__n108["test"] := __n109;
__n114 := {  };
__n114["type"] := "BlockStatement";
__n116 := {  };
__n116["type"] := "ExpressionStatement";
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "Identifier";
__n118["name"] := "$ERROR";
__n117["callee"] := __n118;
__n120 := {  };
__n120["type"] := "BinaryExpression";
__n120["operator"] := "+";
__n121 := {  };
__n121["type"] := "Literal";
__n121["value"] := "#3: __obj.p1 === \"w1\". Actual: __obj.p1 ===";
__n121["raw"] := "'#3: __obj.p1 === \"w1\". Actual: __obj.p1 ==='";
__n120["left"] := __n121;
__n122 := {  };
__n122["type"] := "MemberExpression";
__n123 := {  };
__n123["type"] := "Identifier";
__n123["name"] := "__obj";
__n122["object"] := __n123;
__n124 := {  };
__n124["type"] := "Literal";
__n124["value"] := "p1";
__n124["raw"] := "\"p1\"";
__n122["property"] := __n124;
__n122["computed"] := true;
__n120["right"] := __n122;
__n119 := [ __n120 ];
__n117["arguments"] := __n119;
__n116["expression"] := __n117;
__n115 := [ __n116 ];
__n114["body"] := __n115;
__n108["consequent"] := __n114;
__n108["alternate"] := null;
__n125 := {  };
__n125["type"] := "IfStatement";
__n126 := {  };
__n126["type"] := "BinaryExpression";
__n126["operator"] := "!==";
__n127 := {  };
__n127["type"] := "CallExpression";
__n128 := {  };
__n128["type"] := "MemberExpression";
__n129 := {  };
__n129["type"] := "Identifier";
__n129["name"] := "__obj";
__n128["object"] := __n129;
__n130 := {  };
__n130["type"] := "Literal";
__n130["value"] := "getRight";
__n130["raw"] := "\"getRight\"";
__n128["property"] := __n130;
__n128["computed"] := true;
__n127["callee"] := __n128;
__n131 := [  ];
__n127["arguments"] := __n131;
__n126["left"] := __n127;
__n132 := {  };
__n132["type"] := "Literal";
__n132["value"] := false;
__n132["raw"] := "false";
__n126["right"] := __n132;
__n125["test"] := __n126;
__n133 := {  };
__n133["type"] := "BlockStatement";
__n135 := {  };
__n135["type"] := "ExpressionStatement";
__n136 := {  };
__n136["type"] := "CallExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "$ERROR";
__n136["callee"] := __n137;
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "+";
__n140 := {  };
__n140["type"] := "Literal";
__n140["value"] := "#4: __obj.getRight() === false. Actual: __obj.getRight() === ";
__n140["raw"] := "'#4: __obj.getRight() === false. Actual: __obj.getRight() === '";
__n139["left"] := __n140;
__n141 := {  };
__n141["type"] := "CallExpression";
__n142 := {  };
__n142["type"] := "MemberExpression";
__n143 := {  };
__n143["type"] := "Identifier";
__n143["name"] := "__obj";
__n142["object"] := __n143;
__n144 := {  };
__n144["type"] := "Literal";
__n144["value"] := "getRight";
__n144["raw"] := "\"getRight\"";
__n142["property"] := __n144;
__n142["computed"] := true;
__n141["callee"] := __n142;
__n145 := [  ];
__n141["arguments"] := __n145;
__n139["right"] := __n141;
__n138 := [ __n139 ];
__n136["arguments"] := __n138;
__n135["expression"] := __n136;
__n134 := [ __n135 ];
__n133["body"] := __n134;
__n125["consequent"] := __n133;
__n125["alternate"] := null;
__n146 := {  };
__n146["type"] := "IfStatement";
__n147 := {  };
__n147["type"] := "BinaryExpression";
__n147["operator"] := "!==";
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "resukt";
__n147["left"] := __n148;
__n149 := {  };
__n149["type"] := "Literal";
__n149["value"] := "alert";
__n149["raw"] := "\"alert\"";
__n147["right"] := __n149;
__n146["test"] := __n147;
__n150 := {  };
__n150["type"] := "BlockStatement";
__n152 := {  };
__n152["type"] := "ExpressionStatement";
__n153 := {  };
__n153["type"] := "CallExpression";
__n154 := {  };
__n154["type"] := "Identifier";
__n154["name"] := "$ERROR";
__n153["callee"] := __n154;
__n156 := {  };
__n156["type"] := "BinaryExpression";
__n156["operator"] := "+";
__n157 := {  };
__n157["type"] := "Literal";
__n157["value"] := "#5: resukt === \"alert\". Actual: resukt ===";
__n157["raw"] := "'#5: resukt === \"alert\". Actual: resukt ==='";
__n156["left"] := __n157;
__n158 := {  };
__n158["type"] := "Identifier";
__n158["name"] := "resukt";
__n156["right"] := __n158;
__n155 := [ __n156 ];
__n153["arguments"] := __n155;
__n152["expression"] := __n153;
__n151 := [ __n152 ];
__n150["body"] := __n151;
__n146["consequent"] := __n150;
__n146["alternate"] := null;
__n159 := {  };
__n159["type"] := "VariableDeclaration";
__n161 := {  };
__n161["type"] := "VariableDeclarator";
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "resukt";
__n161["id"] := __n162;
__n161["init"] := null;
__n160 := [ __n161 ];
__n159["declarations"] := __n160;
__n159["kind"] := "var";
__n1 := [ __n2, __n8, __n26, __n37, __n78, __n91, __n108, __n125, __n146, __n159 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n163 := [ "resukt" ];
__n0["variableDeclarations"] := __n163;
__n164 := [  ];
__n0["functionDeclarations"] := __n164;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}