function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "BinaryExpression";
__n3["operator"] := "!==";
__n4 := {  };
__n4["type"] := "UnaryExpression";
__n4["operator"] := "typeof";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "__func";
__n4["argument"] := __n5;
__n4["prefix"] := true;
__n3["left"] := __n4;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "undefined";
__n6["raw"] := "\"undefined\"";
__n3["right"] := __n6;
__n2["test"] := __n3;
__n7 := {  };
__n7["type"] := "BlockStatement";
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "CallExpression";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "$ERROR";
__n10["callee"] := __n11;
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "+";
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "#0: typeof __func === \"undefined\". Actual: typeof __func ===";
__n14["raw"] := "'#0: typeof __func === \"undefined\". Actual: typeof __func ==='";
__n13["left"] := __n14;
__n15 := {  };
__n15["type"] := "UnaryExpression";
__n15["operator"] := "typeof";
__n16 := {  };
__n16["type"] := "Identifier";
__n16["name"] := "__func";
__n15["argument"] := __n16;
__n15["prefix"] := true;
__n13["right"] := __n15;
__n12 := [ __n13 ];
__n10["arguments"] := __n12;
__n9["expression"] := __n10;
__n8 := [ __n9 ];
__n7["body"] := __n8;
__n2["consequent"] := __n7;
__n2["alternate"] := null;
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "a";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := 1.;
__n21["raw"] := "1";
__n19["init"] := __n21;
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "b";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "Literal";
__n24["value"] := "a";
__n24["raw"] := "\"a\"";
__n22["init"] := __n24;
__n18 := [ __n19, __n22 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n25 := {  };
__n25["type"] := "VariableDeclaration";
__n27 := {  };
__n27["type"] := "VariableDeclarator";
__n28 := {  };
__n28["type"] := "Identifier";
__n28["name"] := "__obj";
__n27["id"] := __n28;
__n29 := {  };
__n29["type"] := "ObjectExpression";
__n31 := {  };
__n31["type"] := "Property";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "a";
__n31["key"] := __n32;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 2.;
__n33["raw"] := "2";
__n31["value"] := __n33;
__n31["computed"] := false;
__n31["kind"] := "init";
__n31["shorthand"] := false;
__n30 := [ __n31 ];
__n29["properties"] := __n30;
__n27["init"] := __n29;
__n26 := [ __n27 ];
__n25["declarations"] := __n26;
__n25["kind"] := "var";
__n34 := {  };
__n34["type"] := "WithStatement";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "__obj";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "BlockStatement";
__n38 := {  };
__n38["type"] := "WhileStatement";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := 1.;
__n39["raw"] := "1";
__n38["test"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "VariableDeclaration";
__n44 := {  };
__n44["type"] := "VariableDeclarator";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "__func";
__n44["id"] := __n45;
__n46 := {  };
__n46["type"] := "FunctionExpression";
__n46["id"] := null;
__n47 := [  ];
__n46["params"] := __n47;
__n48 := {  };
__n48["type"] := "BlockStatement";
__n50 := {  };
__n50["type"] := "ReturnStatement";
__n51 := {  };
__n51["type"] := "Identifier";
__n51["name"] := "a";
__n50["argument"] := __n51;
__n49 := [ __n50 ];
__n48["body"] := __n49;
__n52 := [  ];
__n48["variableDeclarations"] := __n52;
__n53 := [  ];
__n48["functionDeclarations"] := __n53;
__n48["codeType"] := "function";
__n48["strict"] := false;
__n46["body"] := __n48;
__n46["generator"] := false;
__n46["async"] := false;
__n46["expression"] := false;
__n44["init"] := __n46;
__n43 := [ __n44 ];
__n42["declarations"] := __n43;
__n42["kind"] := "var";
__n54 := {  };
__n54["type"] := "BreakStatement";
__n54["label"] := null;
__n41 := [ __n42, __n54 ];
__n40["body"] := __n41;
__n38["body"] := __n40;
__n37 := [ __n38 ];
__n36["body"] := __n37;
__n34["body"] := __n36;
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "UnaryExpression";
__n56["operator"] := "delete";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "__obj";
__n56["argument"] := __n57;
__n56["prefix"] := true;
__n55["expression"] := __n56;
__n58 := {  };
__n58["type"] := "IfStatement";
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "!==";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "__func";
__n60["callee"] := __n61;
__n62 := [  ];
__n60["arguments"] := __n62;
__n59["left"] := __n60;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := 2.;
__n63["raw"] := "2";
__n59["right"] := __n63;
__n58["test"] := __n59;
__n64 := {  };
__n64["type"] := "BlockStatement";
__n66 := {  };
__n66["type"] := "ExpressionStatement";
__n67 := {  };
__n67["type"] := "CallExpression";
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "$ERROR";
__n67["callee"] := __n68;
__n70 := {  };
__n70["type"] := "BinaryExpression";
__n70["operator"] := "+";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "#1: __func() === 2. Actual: __func() ===";
__n71["raw"] := "'#1: __func() === 2. Actual: __func() ==='";
__n70["left"] := __n71;
__n72 := {  };
__n72["type"] := "CallExpression";
__n73 := {  };
__n73["type"] := "Identifier";
__n73["name"] := "__func";
__n72["callee"] := __n73;
__n74 := [  ];
__n72["arguments"] := __n74;
__n70["right"] := __n72;
__n69 := [ __n70 ];
__n67["arguments"] := __n69;
__n66["expression"] := __n67;
__n65 := [ __n66 ];
__n64["body"] := __n65;
__n58["consequent"] := __n64;
__n58["alternate"] := null;
__n75 := {  };
__n75["type"] := "VariableDeclaration";
__n77 := {  };
__n77["type"] := "VariableDeclarator";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "__obj";
__n77["id"] := __n78;
__n79 := {  };
__n79["type"] := "ObjectExpression";
__n81 := {  };
__n81["type"] := "Property";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "a";
__n81["key"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 3.;
__n83["raw"] := "3";
__n81["value"] := __n83;
__n81["computed"] := false;
__n81["kind"] := "init";
__n81["shorthand"] := false;
__n84 := {  };
__n84["type"] := "Property";
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "b";
__n84["key"] := __n85;
__n86 := {  };
__n86["type"] := "Literal";
__n86["value"] := "b";
__n86["raw"] := "\"b\"";
__n84["value"] := __n86;
__n84["computed"] := false;
__n84["kind"] := "init";
__n84["shorthand"] := false;
__n80 := [ __n81, __n84 ];
__n79["properties"] := __n80;
__n77["init"] := __n79;
__n76 := [ __n77 ];
__n75["declarations"] := __n76;
__n75["kind"] := "var";
__n87 := {  };
__n87["type"] := "WithStatement";
__n88 := {  };
__n88["type"] := "Identifier";
__n88["name"] := "__obj";
__n87["object"] := __n88;
__n89 := {  };
__n89["type"] := "BlockStatement";
__n91 := {  };
__n91["type"] := "VariableDeclaration";
__n93 := {  };
__n93["type"] := "VariableDeclarator";
__n94 := {  };
__n94["type"] := "Identifier";
__n94["name"] := "__func";
__n93["id"] := __n94;
__n95 := {  };
__n95["type"] := "FunctionExpression";
__n95["id"] := null;
__n96 := [  ];
__n95["params"] := __n96;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "ReturnStatement";
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "b";
__n99["argument"] := __n100;
__n98 := [ __n99 ];
__n97["body"] := __n98;
__n101 := [  ];
__n97["variableDeclarations"] := __n101;
__n102 := [  ];
__n97["functionDeclarations"] := __n102;
__n97["codeType"] := "function";
__n97["strict"] := false;
__n95["body"] := __n97;
__n95["generator"] := false;
__n95["async"] := false;
__n95["expression"] := false;
__n93["init"] := __n95;
__n92 := [ __n93 ];
__n91["declarations"] := __n92;
__n91["kind"] := "var";
__n90 := [ __n91 ];
__n89["body"] := __n90;
__n87["body"] := __n89;
__n103 := {  };
__n103["type"] := "ExpressionStatement";
__n104 := {  };
__n104["type"] := "UnaryExpression";
__n104["operator"] := "delete";
__n105 := {  };
__n105["type"] := "Identifier";
__n105["name"] := "__obj";
__n104["argument"] := __n105;
__n104["prefix"] := true;
__n103["expression"] := __n104;
__n106 := {  };
__n106["type"] := "IfStatement";
__n107 := {  };
__n107["type"] := "BinaryExpression";
__n107["operator"] := "!==";
__n108 := {  };
__n108["type"] := "CallExpression";
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "__func";
__n108["callee"] := __n109;
__n110 := [  ];
__n108["arguments"] := __n110;
__n107["left"] := __n108;
__n111 := {  };
__n111["type"] := "Literal";
__n111["value"] := "b";
__n111["raw"] := "\"b\"";
__n107["right"] := __n111;
__n106["test"] := __n107;
__n112 := {  };
__n112["type"] := "BlockStatement";
__n114 := {  };
__n114["type"] := "ExpressionStatement";
__n115 := {  };
__n115["type"] := "CallExpression";
__n116 := {  };
__n116["type"] := "Identifier";
__n116["name"] := "$ERROR";
__n115["callee"] := __n116;
__n118 := {  };
__n118["type"] := "BinaryExpression";
__n118["operator"] := "+";
__n119 := {  };
__n119["type"] := "Literal";
__n119["value"] := "#2: __func()===\"b\". Actual: __func()===";
__n119["raw"] := "'#2: __func()===\"b\". Actual: __func()==='";
__n118["left"] := __n119;
__n120 := {  };
__n120["type"] := "CallExpression";
__n121 := {  };
__n121["type"] := "Identifier";
__n121["name"] := "__func";
__n120["callee"] := __n121;
__n122 := [  ];
__n120["arguments"] := __n122;
__n118["right"] := __n120;
__n117 := [ __n118 ];
__n115["arguments"] := __n117;
__n114["expression"] := __n115;
__n113 := [ __n114 ];
__n112["body"] := __n113;
__n106["consequent"] := __n112;
__n106["alternate"] := null;
__n123 := {  };
__n123["type"] := "WithStatement";
__n124 := {  };
__n124["type"] := "ObjectExpression";
__n126 := {  };
__n126["type"] := "Property";
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "a";
__n126["key"] := __n127;
__n128 := {  };
__n128["type"] := "Literal";
__n128["value"] := 99.;
__n128["raw"] := "99";
__n126["value"] := __n128;
__n126["computed"] := false;
__n126["kind"] := "init";
__n126["shorthand"] := false;
__n129 := {  };
__n129["type"] := "Property";
__n130 := {  };
__n130["type"] := "Identifier";
__n130["name"] := "b";
__n129["key"] := __n130;
__n131 := {  };
__n131["type"] := "Literal";
__n131["value"] := "c";
__n131["raw"] := "\"c\"";
__n129["value"] := __n131;
__n129["computed"] := false;
__n129["kind"] := "init";
__n129["shorthand"] := false;
__n125 := [ __n126, __n129 ];
__n124["properties"] := __n125;
__n123["object"] := __n124;
__n132 := {  };
__n132["type"] := "BlockStatement";
__n134 := {  };
__n134["type"] := "IfStatement";
__n135 := {  };
__n135["type"] := "BinaryExpression";
__n135["operator"] := "!==";
__n136 := {  };
__n136["type"] := "CallExpression";
__n137 := {  };
__n137["type"] := "Identifier";
__n137["name"] := "__func";
__n136["callee"] := __n137;
__n138 := [  ];
__n136["arguments"] := __n138;
__n135["left"] := __n136;
__n139 := {  };
__n139["type"] := "Literal";
__n139["value"] := "b";
__n139["raw"] := "\"b\"";
__n135["right"] := __n139;
__n134["test"] := __n135;
__n140 := {  };
__n140["type"] := "BlockStatement";
__n142 := {  };
__n142["type"] := "ExpressionStatement";
__n143 := {  };
__n143["type"] := "CallExpression";
__n144 := {  };
__n144["type"] := "Identifier";
__n144["name"] := "$ERROR";
__n143["callee"] := __n144;
__n146 := {  };
__n146["type"] := "BinaryExpression";
__n146["operator"] := "+";
__n147 := {  };
__n147["type"] := "Literal";
__n147["value"] := "#3: __func()===\"b\". Actual: __func()===";
__n147["raw"] := "'#3: __func()===\"b\". Actual: __func()==='";
__n146["left"] := __n147;
__n148 := {  };
__n148["type"] := "CallExpression";
__n149 := {  };
__n149["type"] := "Identifier";
__n149["name"] := "__func";
__n148["callee"] := __n149;
__n150 := [  ];
__n148["arguments"] := __n150;
__n146["right"] := __n148;
__n145 := [ __n146 ];
__n143["arguments"] := __n145;
__n142["expression"] := __n143;
__n141 := [ __n142 ];
__n140["body"] := __n141;
__n134["consequent"] := __n140;
__n134["alternate"] := null;
__n133 := [ __n134 ];
__n132["body"] := __n133;
__n123["body"] := __n132;
__n1 := [ __n2, __n17, __n25, __n34, __n55, __n58, __n75, __n87, __n103, __n106, __n123 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n151 := [ "a", "b", "__obj", "__func" ];
__n0["variableDeclarations"] := __n151;
__n152 := [  ];
__n0["functionDeclarations"] := __n152;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}