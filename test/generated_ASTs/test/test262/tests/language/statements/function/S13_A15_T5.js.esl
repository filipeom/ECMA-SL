function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "Identifier";
__n4["name"] := "THE_ANSWER";
__n3["left"] := __n4;
__n5 := {  };
__n5["type"] := "Literal";
__n5["value"] := "Answer to Life, the Universe, and Everything";
__n5["raw"] := "\"Answer to Life, the Universe, and Everything\"";
__n3["right"] := __n5;
__n2["expression"] := __n3;
__n6 := {  };
__n6["type"] := "VariableDeclaration";
__n8 := {  };
__n8["type"] := "VariableDeclarator";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "arguments";
__n8["id"] := __n9;
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "THE_ANSWER";
__n8["init"] := __n10;
__n7 := [ __n8 ];
__n6["declarations"] := __n7;
__n6["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "Identifier";
__n12["name"] := "__func";
__n11["expression"] := __n12;
__n13 := {  };
__n13["type"] := "EmptyStatement";
__n14 := {  };
__n14["type"] := "IfStatement";
__n15 := {  };
__n15["type"] := "BinaryExpression";
__n15["operator"] := "===";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "__func";
__n16["callee"] := __n17;
__n18 := [  ];
__n16["arguments"] := __n18;
__n15["left"] := __n16;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "THE_ANSWER";
__n15["right"] := __n19;
__n14["test"] := __n15;
__n20 := {  };
__n20["type"] := "BlockStatement";
__n22 := {  };
__n22["type"] := "ExpressionStatement";
__n23 := {  };
__n23["type"] := "CallExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "$ERROR";
__n23["callee"] := __n24;
__n26 := {  };
__n26["type"] := "Literal";
__n26["value"] := "#1: __func() !== THE_ANSWER";
__n26["raw"] := "'#1: __func() !== THE_ANSWER'";
__n25 := [ __n26 ];
__n23["arguments"] := __n25;
__n22["expression"] := __n23;
__n21 := [ __n22 ];
__n20["body"] := __n21;
__n14["consequent"] := __n20;
__n14["alternate"] := null;
__n27 := {  };
__n27["type"] := "IfStatement";
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "===";
__n29 := {  };
__n29["type"] := "CallExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "__func";
__n29["callee"] := __n30;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := "The Ultimate Question";
__n32["raw"] := "\"The Ultimate Question\"";
__n31 := [ __n32 ];
__n29["arguments"] := __n31;
__n28["left"] := __n29;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := "The Ultimate Question";
__n33["raw"] := "\"The Ultimate Question\"";
__n28["right"] := __n33;
__n27["test"] := __n28;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "Literal";
__n40["value"] := "#2: __func(\"The Ultimate Question\") !== \"The Ultimate Question\"";
__n40["raw"] := "'#2: __func(\"The Ultimate Question\") !== \"The Ultimate Question\"'";
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n27["consequent"] := __n34;
__n27["alternate"] := null;
__n1 := [ __n2, __n6, __n11, __n13, __n14, __n27 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n41 := [ "arguments" ];
__n0["variableDeclarations"] := __n41;
__n43 := {  };
__n43["type"] := "FunctionDeclaration";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "__func";
__n43["id"] := __n44;
__n45 := [  ];
__n43["params"] := __n45;
__n46 := {  };
__n46["type"] := "BlockStatement";
__n48 := {  };
__n48["type"] := "ReturnStatement";
__n49 := {  };
__n49["type"] := "Identifier";
__n49["name"] := "arguments";
__n48["argument"] := __n49;
__n47 := [ __n48 ];
__n46["body"] := __n47;
__n50 := [  ];
__n46["variableDeclarations"] := __n50;
__n51 := [  ];
__n46["functionDeclarations"] := __n51;
__n46["codeType"] := "function";
__n46["strict"] := false;
__n43["body"] := __n46;
__n43["generator"] := false;
__n43["async"] := false;
__n43["expression"] := false;
__n42 := [ __n43 ];
__n0["functionDeclarations"] := __n42;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}