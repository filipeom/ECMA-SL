function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "__func";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "EmptyStatement";
__n5 := {  };
__n5["type"] := "VariableDeclaration";
__n7 := {  };
__n7["type"] := "VariableDeclarator";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "__store__func";
__n7["id"] := __n8;
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "__func";
__n7["init"] := __n9;
__n6 := [ __n7 ];
__n5["declarations"] := __n6;
__n5["kind"] := "var";
__n10 := {  };
__n10["type"] := "VariableDeclaration";
__n12 := {  };
__n12["type"] := "VariableDeclarator";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "__1";
__n12["id"] := __n13;
__n14 := {  };
__n14["type"] := "CallExpression";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "__func";
__n14["callee"] := __n15;
__n16 := [  ];
__n14["arguments"] := __n16;
__n12["init"] := __n14;
__n11 := [ __n12 ];
__n10["declarations"] := __n11;
__n10["kind"] := "var";
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "__func";
__n17["expression"] := __n18;
__n19 := {  };
__n19["type"] := "EmptyStatement";
__n20 := {  };
__n20["type"] := "VariableDeclaration";
__n22 := {  };
__n22["type"] := "VariableDeclarator";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "__A";
__n22["id"] := __n23;
__n24 := {  };
__n24["type"] := "CallExpression";
__n25 := {  };
__n25["type"] := "Identifier";
__n25["name"] := "__func";
__n24["callee"] := __n25;
__n26 := [  ];
__n24["arguments"] := __n26;
__n22["init"] := __n24;
__n21 := [ __n22 ];
__n20["declarations"] := __n21;
__n20["kind"] := "var";
__n27 := {  };
__n27["type"] := "IfStatement";
__n28 := {  };
__n28["type"] := "BinaryExpression";
__n28["operator"] := "!==";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "__store__func";
__n28["left"] := __n29;
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "__func";
__n28["right"] := __n30;
__n27["test"] := __n28;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "$ERROR";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "BinaryExpression";
__n37["operator"] := "+";
__n38 := {  };
__n38["type"] := "Literal";
__n38["value"] := "#1: __store__func === __func. Actual: __store__func ===";
__n38["raw"] := "'#1: __store__func === __func. Actual: __store__func ==='";
__n37["left"] := __n38;
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "__store__func";
__n37["right"] := __n39;
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33["expression"] := __n34;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n27["consequent"] := __n31;
__n27["alternate"] := null;
__n40 := {  };
__n40["type"] := "IfStatement";
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "!==";
__n42 := {  };
__n42["type"] := "Identifier";
__n42["name"] := "__1";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "__A";
__n41["right"] := __n43;
__n40["test"] := __n41;
__n44 := {  };
__n44["type"] := "BlockStatement";
__n46 := {  };
__n46["type"] := "ExpressionStatement";
__n47 := {  };
__n47["type"] := "CallExpression";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "$ERROR";
__n47["callee"] := __n48;
__n50 := {  };
__n50["type"] := "BinaryExpression";
__n50["operator"] := "+";
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "#2: __1 === __A. Actual: __1 ===";
__n51["raw"] := "'#2: __1 === __A. Actual: __1 ==='";
__n50["left"] := __n51;
__n52 := {  };
__n52["type"] := "Identifier";
__n52["name"] := "__1";
__n50["right"] := __n52;
__n49 := [ __n50 ];
__n47["arguments"] := __n49;
__n46["expression"] := __n47;
__n45 := [ __n46 ];
__n44["body"] := __n45;
__n40["consequent"] := __n44;
__n40["alternate"] := null;
__n1 := [ __n2, __n4, __n5, __n10, __n17, __n19, __n20, __n27, __n40 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n53 := [ "__store__func", "__1", "__A" ];
__n0["variableDeclarations"] := __n53;
__n55 := {  };
__n55["type"] := "FunctionDeclaration";
__n56 := {  };
__n56["type"] := "Identifier";
__n56["name"] := "__func";
__n55["id"] := __n56;
__n57 := [  ];
__n55["params"] := __n57;
__n58 := {  };
__n58["type"] := "BlockStatement";
__n60 := {  };
__n60["type"] := "ReturnStatement";
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := 1.;
__n61["raw"] := "1";
__n60["argument"] := __n61;
__n59 := [ __n60 ];
__n58["body"] := __n59;
__n62 := [  ];
__n58["variableDeclarations"] := __n62;
__n63 := [  ];
__n58["functionDeclarations"] := __n63;
__n58["codeType"] := "function";
__n58["strict"] := false;
__n55["body"] := __n58;
__n55["generator"] := false;
__n55["async"] := false;
__n55["expression"] := false;
__n64 := {  };
__n64["type"] := "FunctionDeclaration";
__n65 := {  };
__n65["type"] := "Identifier";
__n65["name"] := "__func";
__n64["id"] := __n65;
__n66 := [  ];
__n64["params"] := __n66;
__n67 := {  };
__n67["type"] := "BlockStatement";
__n69 := {  };
__n69["type"] := "ReturnStatement";
__n70 := {  };
__n70["type"] := "Literal";
__n70["value"] := "A";
__n70["raw"] := "'A'";
__n69["argument"] := __n70;
__n68 := [ __n69 ];
__n67["body"] := __n68;
__n71 := [  ];
__n67["variableDeclarations"] := __n71;
__n72 := [  ];
__n67["functionDeclarations"] := __n72;
__n67["codeType"] := "function";
__n67["strict"] := false;
__n64["body"] := __n67;
__n64["generator"] := false;
__n64["async"] := false;
__n64["expression"] := false;
__n54 := [ __n55, __n64 ];
__n0["functionDeclarations"] := __n54;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}