function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "IfStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := true;
__n3["raw"] := "true";
__n2["test"] := __n3;
__n4 := {  };
__n4["type"] := "BlockStatement";
__n6 := {  };
__n6["type"] := "IfStatement";
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := false;
__n7["raw"] := "false";
__n6["test"] := __n7;
__n8 := {  };
__n8["type"] := "ExpressionStatement";
__n9 := {  };
__n9["type"] := "CallExpression";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "$ERROR";
__n9["callee"] := __n10;
__n12 := {  };
__n12["type"] := "Literal";
__n12["value"] := "#1.1: At embedded \"if/else\" constructions engine must select right branches";
__n12["raw"] := "'#1.1: At embedded \"if/else\" constructions engine must select right branches'";
__n11 := [ __n12 ];
__n9["arguments"] := __n11;
__n8["expression"] := __n9;
__n6["consequent"] := __n8;
__n6["alternate"] := null;
__n5 := [ __n6 ];
__n4["body"] := __n5;
__n2["consequent"] := __n4;
__n13 := {  };
__n13["type"] := "BlockStatement";
__n15 := {  };
__n15["type"] := "IfStatement";
__n16 := {  };
__n16["type"] := "Literal";
__n16["value"] := true;
__n16["raw"] := "true";
__n15["test"] := __n16;
__n17 := {  };
__n17["type"] := "ExpressionStatement";
__n18 := {  };
__n18["type"] := "CallExpression";
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "$ERROR";
__n18["callee"] := __n19;
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "#1.2: At embedded \"if/else\" constructions engine must select right branches";
__n21["raw"] := "'#1.2: At embedded \"if/else\" constructions engine must select right branches'";
__n20 := [ __n21 ];
__n18["arguments"] := __n20;
__n17["expression"] := __n18;
__n15["consequent"] := __n17;
__n15["alternate"] := null;
__n14 := [ __n15 ];
__n13["body"] := __n14;
__n2["alternate"] := __n13;
__n22 := {  };
__n22["type"] := "IfStatement";
__n23 := {  };
__n23["type"] := "Literal";
__n23["value"] := true;
__n23["raw"] := "true";
__n22["test"] := __n23;
__n24 := {  };
__n24["type"] := "BlockStatement";
__n26 := {  };
__n26["type"] := "IfStatement";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := true;
__n27["raw"] := "true";
__n26["test"] := __n27;
__n28 := {  };
__n28["type"] := "EmptyStatement";
__n26["consequent"] := __n28;
__n26["alternate"] := null;
__n25 := [ __n26 ];
__n24["body"] := __n25;
__n22["consequent"] := __n24;
__n29 := {  };
__n29["type"] := "BlockStatement";
__n31 := {  };
__n31["type"] := "IfStatement";
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := true;
__n32["raw"] := "true";
__n31["test"] := __n32;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "CallExpression";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "$ERROR";
__n34["callee"] := __n35;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "#2.2: At embedded \"if/else\" constructions engine must select right branches";
__n37["raw"] := "'#2.2: At embedded \"if/else\" constructions engine must select right branches'";
__n36 := [ __n37 ];
__n34["arguments"] := __n36;
__n33["expression"] := __n34;
__n31["consequent"] := __n33;
__n31["alternate"] := null;
__n30 := [ __n31 ];
__n29["body"] := __n30;
__n22["alternate"] := __n29;
__n38 := {  };
__n38["type"] := "IfStatement";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := false;
__n39["raw"] := "false";
__n38["test"] := __n39;
__n40 := {  };
__n40["type"] := "BlockStatement";
__n42 := {  };
__n42["type"] := "IfStatement";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := true;
__n43["raw"] := "true";
__n42["test"] := __n43;
__n44 := {  };
__n44["type"] := "ExpressionStatement";
__n45 := {  };
__n45["type"] := "CallExpression";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "$ERROR";
__n45["callee"] := __n46;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "#3.1: At embedded \"if/else\" constructions engine must select right branches";
__n48["raw"] := "'#3.1: At embedded \"if/else\" constructions engine must select right branches'";
__n47 := [ __n48 ];
__n45["arguments"] := __n47;
__n44["expression"] := __n45;
__n42["consequent"] := __n44;
__n42["alternate"] := null;
__n41 := [ __n42 ];
__n40["body"] := __n41;
__n38["consequent"] := __n40;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "IfStatement";
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := true;
__n52["raw"] := "true";
__n51["test"] := __n52;
__n53 := {  };
__n53["type"] := "EmptyStatement";
__n51["consequent"] := __n53;
__n51["alternate"] := null;
__n50 := [ __n51 ];
__n49["body"] := __n50;
__n38["alternate"] := __n49;
__n54 := {  };
__n54["type"] := "IfStatement";
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := false;
__n55["raw"] := "false";
__n54["test"] := __n55;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "IfStatement";
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := true;
__n59["raw"] := "true";
__n58["test"] := __n59;
__n60 := {  };
__n60["type"] := "ExpressionStatement";
__n61 := {  };
__n61["type"] := "CallExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "$ERROR";
__n61["callee"] := __n62;
__n64 := {  };
__n64["type"] := "Literal";
__n64["value"] := "#4.1: At embedded \"if/else\" constructions engine must select right branches";
__n64["raw"] := "'#4.1: At embedded \"if/else\" constructions engine must select right branches'";
__n63 := [ __n64 ];
__n61["arguments"] := __n63;
__n60["expression"] := __n61;
__n58["consequent"] := __n60;
__n58["alternate"] := null;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n54["consequent"] := __n56;
__n65 := {  };
__n65["type"] := "BlockStatement";
__n67 := {  };
__n67["type"] := "IfStatement";
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := false;
__n68["raw"] := "false";
__n67["test"] := __n68;
__n69 := {  };
__n69["type"] := "ExpressionStatement";
__n70 := {  };
__n70["type"] := "CallExpression";
__n71 := {  };
__n71["type"] := "Identifier";
__n71["name"] := "$ERROR";
__n70["callee"] := __n71;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "#4.3: At embedded \"if/else\" constructions engine must select right branches";
__n73["raw"] := "'#4.3: At embedded \"if/else\" constructions engine must select right branches'";
__n72 := [ __n73 ];
__n70["arguments"] := __n72;
__n69["expression"] := __n70;
__n67["consequent"] := __n69;
__n67["alternate"] := null;
__n66 := [ __n67 ];
__n65["body"] := __n66;
__n54["alternate"] := __n65;
__n1 := [ __n2, __n22, __n38, __n54 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n74 := [  ];
__n0["variableDeclarations"] := __n74;
__n75 := [  ];
__n0["functionDeclarations"] := __n75;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}