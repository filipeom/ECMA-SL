function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "CallExpression";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "assert";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "sameValue";
__n6["raw"] := "\"sameValue\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["callee"] := __n4;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "FunctionExpression";
__n9["id"] := null;
__n10 := [  ];
__n9["params"] := __n10;
__n11 := {  };
__n11["type"] := "BlockStatement";
__n13 := {  };
__n13["type"] := "ReturnStatement";
__n13["argument"] := null;
__n14 := {  };
__n14["type"] := "ExpressionStatement";
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 1.;
__n15["raw"] := "1";
__n14["expression"] := __n15;
__n12 := [ __n13, __n14 ];
__n11["body"] := __n12;
__n16 := [  ];
__n11["variableDeclarations"] := __n16;
__n17 := [  ];
__n11["functionDeclarations"] := __n17;
__n11["codeType"] := "function";
__n11["strict"] := false;
__n9["body"] := __n11;
__n9["generator"] := false;
__n9["async"] := false;
__n9["expression"] := false;
__n8["callee"] := __n9;
__n18 := [  ];
__n8["arguments"] := __n18;
__n19 := {  };
__n19["type"] := "Identifier";
__n19["name"] := "undefined";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "#1: LineTerminator(U-000A) between return and Identifier_opt yields return without Identifier_opt";
__n20["raw"] := "\"#1: LineTerminator(U-000A) between return and Identifier_opt yields return without Identifier_opt\"";
__n7 := [ __n8, __n19, __n20 ];
__n3["arguments"] := __n7;
__n2["expression"] := __n3;
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "MemberExpression";
__n24 := {  };
__n24["type"] := "Identifier";
__n24["name"] := "assert";
__n23["object"] := __n24;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "sameValue";
__n25["raw"] := "\"sameValue\"";
__n23["property"] := __n25;
__n23["computed"] := true;
__n22["callee"] := __n23;
__n27 := {  };
__n27["type"] := "CallExpression";
__n28 := {  };
__n28["type"] := "FunctionExpression";
__n28["id"] := null;
__n29 := [  ];
__n28["params"] := __n29;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ReturnStatement";
__n32["argument"] := null;
__n33 := {  };
__n33["type"] := "ExpressionStatement";
__n34 := {  };
__n34["type"] := "Literal";
__n34["value"] := 1.;
__n34["raw"] := "1";
__n33["expression"] := __n34;
__n31 := [ __n32, __n33 ];
__n30["body"] := __n31;
__n35 := [  ];
__n30["variableDeclarations"] := __n35;
__n36 := [  ];
__n30["functionDeclarations"] := __n36;
__n30["codeType"] := "function";
__n30["strict"] := false;
__n28["body"] := __n30;
__n28["generator"] := false;
__n28["async"] := false;
__n28["expression"] := false;
__n27["callee"] := __n28;
__n37 := [  ];
__n27["arguments"] := __n37;
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "undefined";
__n39 := {  };
__n39["type"] := "Literal";
__n39["value"] := "#1: LineTerminator(U-000D) between return and Identifier_opt yields return without Identifier_opt";
__n39["raw"] := "\"#1: LineTerminator(U-000D) between return and Identifier_opt yields return without Identifier_opt\"";
__n26 := [ __n27, __n38, __n39 ];
__n22["arguments"] := __n26;
__n21["expression"] := __n22;
__n40 := {  };
__n40["type"] := "ExpressionStatement";
__n41 := {  };
__n41["type"] := "CallExpression";
__n42 := {  };
__n42["type"] := "MemberExpression";
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "assert";
__n42["object"] := __n43;
__n44 := {  };
__n44["type"] := "Literal";
__n44["value"] := "sameValue";
__n44["raw"] := "\"sameValue\"";
__n42["property"] := __n44;
__n42["computed"] := true;
__n41["callee"] := __n42;
__n46 := {  };
__n46["type"] := "CallExpression";
__n47 := {  };
__n47["type"] := "FunctionExpression";
__n47["id"] := null;
__n48 := [  ];
__n47["params"] := __n48;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ReturnStatement";
__n51["argument"] := null;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "Literal";
__n53["value"] := 1.;
__n53["raw"] := "1";
__n52["expression"] := __n53;
__n50 := [ __n51, __n52 ];
__n49["body"] := __n50;
__n54 := [  ];
__n49["variableDeclarations"] := __n54;
__n55 := [  ];
__n49["functionDeclarations"] := __n55;
__n49["codeType"] := "function";
__n49["strict"] := false;
__n47["body"] := __n49;
__n47["generator"] := false;
__n47["async"] := false;
__n47["expression"] := false;
__n46["callee"] := __n47;
__n56 := [  ];
__n46["arguments"] := __n56;
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "undefined";
__n58 := {  };
__n58["type"] := "Literal";
__n58["value"] := "#1: LineTerminator(U-2028) between return and Identifier_opt yields return without Identifier_opt";
__n58["raw"] := "\"#1: LineTerminator(U-2028) between return and Identifier_opt yields return without Identifier_opt\"";
__n45 := [ __n46, __n57, __n58 ];
__n41["arguments"] := __n45;
__n40["expression"] := __n41;
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "CallExpression";
__n61 := {  };
__n61["type"] := "MemberExpression";
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "assert";
__n61["object"] := __n62;
__n63 := {  };
__n63["type"] := "Literal";
__n63["value"] := "sameValue";
__n63["raw"] := "\"sameValue\"";
__n61["property"] := __n63;
__n61["computed"] := true;
__n60["callee"] := __n61;
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "FunctionExpression";
__n66["id"] := null;
__n67 := [  ];
__n66["params"] := __n67;
__n68 := {  };
__n68["type"] := "BlockStatement";
__n70 := {  };
__n70["type"] := "ReturnStatement";
__n70["argument"] := null;
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := 1.;
__n72["raw"] := "1";
__n71["expression"] := __n72;
__n69 := [ __n70, __n71 ];
__n68["body"] := __n69;
__n73 := [  ];
__n68["variableDeclarations"] := __n73;
__n74 := [  ];
__n68["functionDeclarations"] := __n74;
__n68["codeType"] := "function";
__n68["strict"] := false;
__n66["body"] := __n68;
__n66["generator"] := false;
__n66["async"] := false;
__n66["expression"] := false;
__n65["callee"] := __n66;
__n75 := [  ];
__n65["arguments"] := __n75;
__n76 := {  };
__n76["type"] := "Identifier";
__n76["name"] := "undefined";
__n77 := {  };
__n77["type"] := "Literal";
__n77["value"] := "#1: LineTerminator(U-2029) between return and Identifier_opt yields return without Identifier_opt";
__n77["raw"] := "\"#1: LineTerminator(U-2029) between return and Identifier_opt yields return without Identifier_opt\"";
__n64 := [ __n65, __n76, __n77 ];
__n60["arguments"] := __n64;
__n59["expression"] := __n60;
__n1 := [ __n2, __n21, __n40, __n59 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n78 := [  ];
__n0["variableDeclarations"] := __n78;
__n79 := [  ];
__n0["functionDeclarations"] := __n79;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}