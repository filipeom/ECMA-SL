function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Identifier";
__n3["name"] := "SwitchTest";
__n2["expression"] := __n3;
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "x";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "CallExpression";
__n9 := {  };
__n9["type"] := "Identifier";
__n9["name"] := "SwitchTest";
__n8["callee"] := __n9;
__n11 := {  };
__n11["type"] := "Literal";
__n11["value"] := 0.;
__n11["raw"] := "0";
__n10 := [ __n11 ];
__n8["arguments"] := __n10;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n12 := {  };
__n12["type"] := "IfStatement";
__n13 := {  };
__n13["type"] := "BinaryExpression";
__n13["operator"] := "!==";
__n14 := {  };
__n14["type"] := "Identifier";
__n14["name"] := "x";
__n13["left"] := __n14;
__n15 := {  };
__n15["type"] := "Literal";
__n15["value"] := 6.;
__n15["raw"] := "6";
__n13["right"] := __n15;
__n12["test"] := __n13;
__n16 := {  };
__n16["type"] := "ExpressionStatement";
__n17 := {  };
__n17["type"] := "CallExpression";
__n18 := {  };
__n18["type"] := "Identifier";
__n18["name"] := "$ERROR";
__n17["callee"] := __n18;
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "+";
__n21 := {  };
__n21["type"] := "Literal";
__n21["value"] := "#1: SwitchTest(0) === 6. Actual:  SwitchTest(0) ===";
__n21["raw"] := "\"#1: SwitchTest(0) === 6. Actual:  SwitchTest(0) ===\"";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "SwitchTest";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := 0.;
__n25["raw"] := "0";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n20["right"] := __n22;
__n19 := [ __n20 ];
__n17["arguments"] := __n19;
__n16["expression"] := __n17;
__n12["consequent"] := __n16;
__n12["alternate"] := null;
__n1 := [ __n2, __n4, __n12 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n26 := [ "x" ];
__n0["variableDeclarations"] := __n26;
__n28 := {  };
__n28["type"] := "FunctionDeclaration";
__n29 := {  };
__n29["type"] := "Identifier";
__n29["name"] := "SwitchTest";
__n28["id"] := __n29;
__n30 := [ "value" ];
__n28["params"] := __n30;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "VariableDeclaration";
__n35 := {  };
__n35["type"] := "VariableDeclarator";
__n36 := {  };
__n36["type"] := "Identifier";
__n36["name"] := "result";
__n35["id"] := __n36;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 0.;
__n37["raw"] := "0";
__n35["init"] := __n37;
__n34 := [ __n35 ];
__n33["declarations"] := __n34;
__n33["kind"] := "var";
__n38 := {  };
__n38["type"] := "SwitchStatement";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "value";
__n38["discriminant"] := __n39;
__n42 := {  };
__n42["type"] := "SwitchCase";
__n43 := {  };
__n43["type"] := "Literal";
__n43["value"] := 0.;
__n43["raw"] := "0";
__n42["test"] := __n43;
__n45 := {  };
__n45["type"] := "SwitchStatement";
__n46 := {  };
__n46["type"] := "Identifier";
__n46["name"] := "value";
__n45["discriminant"] := __n46;
__n49 := {  };
__n49["type"] := "SwitchCase";
__n50 := {  };
__n50["type"] := "Literal";
__n50["value"] := 0.;
__n50["raw"] := "0";
__n49["test"] := __n50;
__n52 := {  };
__n52["type"] := "ExpressionStatement";
__n53 := {  };
__n53["type"] := "AssignmentExpression";
__n53["operator"] := "+=";
__n54 := {  };
__n54["type"] := "Identifier";
__n54["name"] := "result";
__n53["left"] := __n54;
__n55 := {  };
__n55["type"] := "Literal";
__n55["value"] := 3.;
__n55["raw"] := "3";
__n53["right"] := __n55;
__n52["expression"] := __n53;
__n56 := {  };
__n56["type"] := "BreakStatement";
__n56["label"] := null;
__n51 := [ __n52, __n56 ];
__n49["consequent"] := __n51;
__n48 := [ __n49 ];
__n57 := {  };
__n57["type"] := "SwitchCase";
__n57["test"] := null;
__n59 := {  };
__n59["type"] := "ExpressionStatement";
__n60 := {  };
__n60["type"] := "AssignmentExpression";
__n60["operator"] := "+=";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "result";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Literal";
__n62["value"] := 32.;
__n62["raw"] := "32";
__n60["right"] := __n62;
__n59["expression"] := __n60;
__n63 := {  };
__n63["type"] := "BreakStatement";
__n63["label"] := null;
__n58 := [ __n59, __n63 ];
__n57["consequent"] := __n58;
__n64 := [  ];
__n47 := [ __n48, __n57, __n64 ];
__n45["cases"] := __n47;
__n65 := {  };
__n65["type"] := "ExpressionStatement";
__n66 := {  };
__n66["type"] := "AssignmentExpression";
__n66["operator"] := "*=";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "result";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := 2.;
__n68["raw"] := "2";
__n66["right"] := __n68;
__n65["expression"] := __n66;
__n69 := {  };
__n69["type"] := "BreakStatement";
__n69["label"] := null;
__n70 := {  };
__n70["type"] := "ExpressionStatement";
__n71 := {  };
__n71["type"] := "AssignmentExpression";
__n71["operator"] := "=";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "result";
__n71["left"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := 3.;
__n73["raw"] := "3";
__n71["right"] := __n73;
__n70["expression"] := __n71;
__n44 := [ __n45, __n65, __n69, __n70 ];
__n42["consequent"] := __n44;
__n41 := [ __n42 ];
__n74 := {  };
__n74["type"] := "SwitchCase";
__n74["test"] := null;
__n76 := {  };
__n76["type"] := "ExpressionStatement";
__n77 := {  };
__n77["type"] := "AssignmentExpression";
__n77["operator"] := "+=";
__n78 := {  };
__n78["type"] := "Identifier";
__n78["name"] := "result";
__n77["left"] := __n78;
__n79 := {  };
__n79["type"] := "Literal";
__n79["value"] := 32.;
__n79["raw"] := "32";
__n77["right"] := __n79;
__n76["expression"] := __n77;
__n80 := {  };
__n80["type"] := "BreakStatement";
__n80["label"] := null;
__n75 := [ __n76, __n80 ];
__n74["consequent"] := __n75;
__n81 := [  ];
__n40 := [ __n41, __n74, __n81 ];
__n38["cases"] := __n40;
__n82 := {  };
__n82["type"] := "ReturnStatement";
__n83 := {  };
__n83["type"] := "Identifier";
__n83["name"] := "result";
__n82["argument"] := __n83;
__n32 := [ __n33, __n38, __n82 ];
__n31["body"] := __n32;
__n84 := [ "result" ];
__n31["variableDeclarations"] := __n84;
__n85 := [  ];
__n31["functionDeclarations"] := __n85;
__n31["codeType"] := "function";
__n31["strict"] := false;
__n28["body"] := __n31;
__n28["generator"] := false;
__n28["async"] := false;
__n28["expression"] := false;
__n27 := [ __n28 ];
__n0["functionDeclarations"] := __n27;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}