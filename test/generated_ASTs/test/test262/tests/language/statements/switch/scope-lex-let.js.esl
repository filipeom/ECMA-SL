function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "SwitchStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := 0.;
__n3["raw"] := "0";
__n2["discriminant"] := __n3;
__n5 := [  ];
__n6 := {  };
__n6["type"] := "SwitchCase";
__n6["test"] := null;
__n7 := [  ];
__n6["consequent"] := __n7;
__n8 := [  ];
__n4 := [ __n5, __n6, __n8 ];
__n2["cases"] := __n4;
__n9 := {  };
__n9["type"] := "ExpressionStatement";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "f";
__n9["expression"] := __n10;
__n1 := [ __n2, __n9 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n11 := [  ];
__n0["variableDeclarations"] := __n11;
__n12 := [  ];
__n0["functionDeclarations"] := __n12;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}