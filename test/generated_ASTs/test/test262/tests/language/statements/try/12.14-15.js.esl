function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "VariableDeclaration";
__n4 := {  };
__n4["type"] := "VariableDeclarator";
__n5 := {  };
__n5["type"] := "Identifier";
__n5["name"] := "global";
__n4["id"] := __n5;
__n6 := {  };
__n6["type"] := "ThisExpression";
__n4["init"] := __n6;
__n3 := [ __n4 ];
__n2["declarations"] := __n3;
__n2["kind"] := "var";
__n7 := {  };
__n7["type"] := "VariableDeclaration";
__n9 := {  };
__n9["type"] := "VariableDeclarator";
__n10 := {  };
__n10["type"] := "Identifier";
__n10["name"] := "result";
__n9["id"] := __n10;
__n9["init"] := null;
__n8 := [ __n9 ];
__n7["declarations"] := __n8;
__n7["kind"] := "var";
__n11 := {  };
__n11["type"] := "ExpressionStatement";
__n12 := {  };
__n12["type"] := "CallExpression";
__n13 := {  };
__n13["type"] := "FunctionExpression";
__n13["id"] := null;
__n14 := [  ];
__n13["params"] := __n14;
__n15 := {  };
__n15["type"] := "BlockStatement";
__n17 := {  };
__n17["type"] := "VariableDeclaration";
__n19 := {  };
__n19["type"] := "VariableDeclarator";
__n20 := {  };
__n20["type"] := "Identifier";
__n20["name"] := "obj";
__n19["id"] := __n20;
__n21 := {  };
__n21["type"] := "ObjectExpression";
__n22 := [  ];
__n21["properties"] := __n22;
__n19["init"] := __n21;
__n18 := [ __n19 ];
__n17["declarations"] := __n18;
__n17["kind"] := "var";
__n23 := {  };
__n23["type"] := "ExpressionStatement";
__n24 := {  };
__n24["type"] := "AssignmentExpression";
__n24["operator"] := "=";
__n25 := {  };
__n25["type"] := "MemberExpression";
__n26 := {  };
__n26["type"] := "Identifier";
__n26["name"] := "obj";
__n25["object"] := __n26;
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "test";
__n27["raw"] := "\"test\"";
__n25["property"] := __n27;
__n25["computed"] := true;
__n24["left"] := __n25;
__n28 := {  };
__n28["type"] := "FunctionExpression";
__n28["id"] := null;
__n29 := [  ];
__n28["params"] := __n29;
__n30 := {  };
__n30["type"] := "BlockStatement";
__n32 := {  };
__n32["type"] := "ExpressionStatement";
__n33 := {  };
__n33["type"] := "AssignmentExpression";
__n33["operator"] := "=";
__n34 := {  };
__n34["type"] := "MemberExpression";
__n35 := {  };
__n35["type"] := "ThisExpression";
__n34["object"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "_12_14_15_foo";
__n36["raw"] := "\"_12_14_15_foo\"";
__n34["property"] := __n36;
__n34["computed"] := true;
__n33["left"] := __n34;
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := "test";
__n37["raw"] := "\"test\"";
__n33["right"] := __n37;
__n32["expression"] := __n33;
__n31 := [ __n32 ];
__n30["body"] := __n31;
__n38 := [  ];
__n30["variableDeclarations"] := __n38;
__n39 := [  ];
__n30["functionDeclarations"] := __n39;
__n30["codeType"] := "function";
__n30["strict"] := false;
__n28["body"] := __n30;
__n28["generator"] := false;
__n28["async"] := false;
__n28["expression"] := false;
__n24["right"] := __n28;
__n23["expression"] := __n24;
__n40 := {  };
__n40["type"] := "TryStatement";
__n41 := {  };
__n41["type"] := "BlockStatement";
__n43 := {  };
__n43["type"] := "ThrowStatement";
__n44 := {  };
__n44["type"] := "MemberExpression";
__n45 := {  };
__n45["type"] := "Identifier";
__n45["name"] := "obj";
__n44["object"] := __n45;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := "test";
__n46["raw"] := "\"test\"";
__n44["property"] := __n46;
__n44["computed"] := true;
__n43["argument"] := __n44;
__n42 := [ __n43 ];
__n41["body"] := __n42;
__n40["block"] := __n41;
__n47 := {  };
__n47["type"] := "CatchClause";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "e";
__n47["param"] := __n48;
__n49 := {  };
__n49["type"] := "BlockStatement";
__n51 := {  };
__n51["type"] := "ExpressionStatement";
__n52 := {  };
__n52["type"] := "CallExpression";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "e";
__n52["callee"] := __n53;
__n54 := [  ];
__n52["arguments"] := __n54;
__n51["expression"] := __n52;
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "AssignmentExpression";
__n56["operator"] := "=";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "result";
__n56["left"] := __n57;
__n58 := {  };
__n58["type"] := "MemberExpression";
__n59 := {  };
__n59["type"] := "Identifier";
__n59["name"] := "global";
__n58["object"] := __n59;
__n60 := {  };
__n60["type"] := "Literal";
__n60["value"] := "_12_14_15_foo";
__n60["raw"] := "\"_12_14_15_foo\"";
__n58["property"] := __n60;
__n58["computed"] := true;
__n56["right"] := __n58;
__n55["expression"] := __n56;
__n50 := [ __n51, __n55 ];
__n49["body"] := __n50;
__n47["body"] := __n49;
__n40["handler"] := __n47;
__n40["finalizer"] := null;
__n16 := [ __n17, __n23, __n40 ];
__n15["body"] := __n16;
__n61 := [ "obj" ];
__n15["variableDeclarations"] := __n61;
__n62 := [  ];
__n15["functionDeclarations"] := __n62;
__n15["codeType"] := "function";
__n15["strict"] := false;
__n13["body"] := __n15;
__n13["generator"] := false;
__n13["async"] := false;
__n13["expression"] := false;
__n12["callee"] := __n13;
__n63 := [  ];
__n12["arguments"] := __n63;
__n11["expression"] := __n12;
__n64 := {  };
__n64["type"] := "ExpressionStatement";
__n65 := {  };
__n65["type"] := "CallExpression";
__n66 := {  };
__n66["type"] := "MemberExpression";
__n67 := {  };
__n67["type"] := "Identifier";
__n67["name"] := "assert";
__n66["object"] := __n67;
__n68 := {  };
__n68["type"] := "Literal";
__n68["value"] := "sameValue";
__n68["raw"] := "\"sameValue\"";
__n66["property"] := __n68;
__n66["computed"] := true;
__n65["callee"] := __n66;
__n70 := {  };
__n70["type"] := "Identifier";
__n70["name"] := "result";
__n71 := {  };
__n71["type"] := "Literal";
__n71["value"] := "test";
__n71["raw"] := "\"test\"";
__n72 := {  };
__n72["type"] := "Literal";
__n72["value"] := "result";
__n72["raw"] := "'result'";
__n69 := [ __n70, __n71, __n72 ];
__n65["arguments"] := __n69;
__n64["expression"] := __n65;
__n1 := [ __n2, __n7, __n11, __n64 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n73 := [ "global", "result" ];
__n0["variableDeclarations"] := __n73;
__n74 := [  ];
__n0["functionDeclarations"] := __n74;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}