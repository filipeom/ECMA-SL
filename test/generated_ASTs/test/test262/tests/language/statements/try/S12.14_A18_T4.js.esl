function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "TryStatement";
__n3 := {  };
__n3["type"] := "BlockStatement";
__n5 := {  };
__n5["type"] := "ThrowStatement";
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "exception #1";
__n6["raw"] := "\"exception #1\"";
__n5["argument"] := __n6;
__n4 := [ __n5 ];
__n3["body"] := __n4;
__n2["block"] := __n3;
__n7 := {  };
__n7["type"] := "CatchClause";
__n8 := {  };
__n8["type"] := "Identifier";
__n8["name"] := "e";
__n7["param"] := __n8;
__n9 := {  };
__n9["type"] := "BlockStatement";
__n11 := {  };
__n11["type"] := "IfStatement";
__n12 := {  };
__n12["type"] := "BinaryExpression";
__n12["operator"] := "!==";
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "e";
__n12["left"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "exception #1";
__n14["raw"] := "\"exception #1\"";
__n12["right"] := __n14;
__n11["test"] := __n12;
__n15 := {  };
__n15["type"] := "ExpressionStatement";
__n16 := {  };
__n16["type"] := "CallExpression";
__n17 := {  };
__n17["type"] := "Identifier";
__n17["name"] := "$ERROR";
__n16["callee"] := __n17;
__n19 := {  };
__n19["type"] := "BinaryExpression";
__n19["operator"] := "+";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := "#1: Exception ===\"exception #1\". Actual:  Exception ===";
__n20["raw"] := "'#1: Exception ===\"exception #1\". Actual:  Exception ==='";
__n19["left"] := __n20;
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "e";
__n19["right"] := __n21;
__n18 := [ __n19 ];
__n16["arguments"] := __n18;
__n15["expression"] := __n16;
__n11["consequent"] := __n15;
__n11["alternate"] := null;
__n10 := [ __n11 ];
__n9["body"] := __n10;
__n7["body"] := __n9;
__n2["handler"] := __n7;
__n2["finalizer"] := null;
__n22 := {  };
__n22["type"] := "TryStatement";
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ThrowStatement";
__n26 := {  };
__n26["type"] := "BinaryExpression";
__n26["operator"] := "+";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := "exception";
__n27["raw"] := "\"exception\"";
__n26["left"] := __n27;
__n28 := {  };
__n28["type"] := "Literal";
__n28["value"] := " #1";
__n28["raw"] := "\" #1\"";
__n26["right"] := __n28;
__n25["argument"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n22["block"] := __n23;
__n29 := {  };
__n29["type"] := "CatchClause";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "e";
__n29["param"] := __n30;
__n31 := {  };
__n31["type"] := "BlockStatement";
__n33 := {  };
__n33["type"] := "IfStatement";
__n34 := {  };
__n34["type"] := "BinaryExpression";
__n34["operator"] := "!==";
__n35 := {  };
__n35["type"] := "Identifier";
__n35["name"] := "e";
__n34["left"] := __n35;
__n36 := {  };
__n36["type"] := "Literal";
__n36["value"] := "exception #1";
__n36["raw"] := "\"exception #1\"";
__n34["right"] := __n36;
__n33["test"] := __n34;
__n37 := {  };
__n37["type"] := "ExpressionStatement";
__n38 := {  };
__n38["type"] := "CallExpression";
__n39 := {  };
__n39["type"] := "Identifier";
__n39["name"] := "$ERROR";
__n38["callee"] := __n39;
__n41 := {  };
__n41["type"] := "BinaryExpression";
__n41["operator"] := "+";
__n42 := {  };
__n42["type"] := "Literal";
__n42["value"] := "#2: Exception ===\"exception #1\". Actual:  Exception ===";
__n42["raw"] := "'#2: Exception ===\"exception #1\". Actual:  Exception ==='";
__n41["left"] := __n42;
__n43 := {  };
__n43["type"] := "Identifier";
__n43["name"] := "e";
__n41["right"] := __n43;
__n40 := [ __n41 ];
__n38["arguments"] := __n40;
__n37["expression"] := __n38;
__n33["consequent"] := __n37;
__n33["alternate"] := null;
__n32 := [ __n33 ];
__n31["body"] := __n32;
__n29["body"] := __n31;
__n22["handler"] := __n29;
__n22["finalizer"] := null;
__n44 := {  };
__n44["type"] := "VariableDeclaration";
__n46 := {  };
__n46["type"] := "VariableDeclarator";
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "b";
__n46["id"] := __n47;
__n48 := {  };
__n48["type"] := "Literal";
__n48["value"] := "exception #1";
__n48["raw"] := "\"exception #1\"";
__n46["init"] := __n48;
__n45 := [ __n46 ];
__n44["declarations"] := __n45;
__n44["kind"] := "var";
__n49 := {  };
__n49["type"] := "TryStatement";
__n50 := {  };
__n50["type"] := "BlockStatement";
__n52 := {  };
__n52["type"] := "ThrowStatement";
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "b";
__n52["argument"] := __n53;
__n51 := [ __n52 ];
__n50["body"] := __n51;
__n49["block"] := __n50;
__n54 := {  };
__n54["type"] := "CatchClause";
__n55 := {  };
__n55["type"] := "Identifier";
__n55["name"] := "e";
__n54["param"] := __n55;
__n56 := {  };
__n56["type"] := "BlockStatement";
__n58 := {  };
__n58["type"] := "IfStatement";
__n59 := {  };
__n59["type"] := "BinaryExpression";
__n59["operator"] := "!==";
__n60 := {  };
__n60["type"] := "Identifier";
__n60["name"] := "e";
__n59["left"] := __n60;
__n61 := {  };
__n61["type"] := "Literal";
__n61["value"] := "exception #1";
__n61["raw"] := "\"exception #1\"";
__n59["right"] := __n61;
__n58["test"] := __n59;
__n62 := {  };
__n62["type"] := "ExpressionStatement";
__n63 := {  };
__n63["type"] := "CallExpression";
__n64 := {  };
__n64["type"] := "Identifier";
__n64["name"] := "$ERROR";
__n63["callee"] := __n64;
__n66 := {  };
__n66["type"] := "BinaryExpression";
__n66["operator"] := "+";
__n67 := {  };
__n67["type"] := "Literal";
__n67["value"] := "#3: Exception ===\"exception #1\". Actual:  Exception ===";
__n67["raw"] := "'#3: Exception ===\"exception #1\". Actual:  Exception ==='";
__n66["left"] := __n67;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "e";
__n66["right"] := __n68;
__n65 := [ __n66 ];
__n63["arguments"] := __n65;
__n62["expression"] := __n63;
__n58["consequent"] := __n62;
__n58["alternate"] := null;
__n57 := [ __n58 ];
__n56["body"] := __n57;
__n54["body"] := __n56;
__n49["handler"] := __n54;
__n49["finalizer"] := null;
__n69 := {  };
__n69["type"] := "VariableDeclaration";
__n71 := {  };
__n71["type"] := "VariableDeclarator";
__n72 := {  };
__n72["type"] := "Identifier";
__n72["name"] := "a";
__n71["id"] := __n72;
__n73 := {  };
__n73["type"] := "Literal";
__n73["value"] := "exception";
__n73["raw"] := "\"exception\"";
__n71["init"] := __n73;
__n70 := [ __n71 ];
__n69["declarations"] := __n70;
__n69["kind"] := "var";
__n74 := {  };
__n74["type"] := "VariableDeclaration";
__n76 := {  };
__n76["type"] := "VariableDeclarator";
__n77 := {  };
__n77["type"] := "Identifier";
__n77["name"] := "b";
__n76["id"] := __n77;
__n78 := {  };
__n78["type"] := "Literal";
__n78["value"] := " #1";
__n78["raw"] := "\" #1\"";
__n76["init"] := __n78;
__n75 := [ __n76 ];
__n74["declarations"] := __n75;
__n74["kind"] := "var";
__n79 := {  };
__n79["type"] := "TryStatement";
__n80 := {  };
__n80["type"] := "BlockStatement";
__n82 := {  };
__n82["type"] := "ThrowStatement";
__n83 := {  };
__n83["type"] := "BinaryExpression";
__n83["operator"] := "+";
__n84 := {  };
__n84["type"] := "Identifier";
__n84["name"] := "a";
__n83["left"] := __n84;
__n85 := {  };
__n85["type"] := "Identifier";
__n85["name"] := "b";
__n83["right"] := __n85;
__n82["argument"] := __n83;
__n81 := [ __n82 ];
__n80["body"] := __n81;
__n79["block"] := __n80;
__n86 := {  };
__n86["type"] := "CatchClause";
__n87 := {  };
__n87["type"] := "Identifier";
__n87["name"] := "e";
__n86["param"] := __n87;
__n88 := {  };
__n88["type"] := "BlockStatement";
__n90 := {  };
__n90["type"] := "IfStatement";
__n91 := {  };
__n91["type"] := "BinaryExpression";
__n91["operator"] := "!==";
__n92 := {  };
__n92["type"] := "Identifier";
__n92["name"] := "e";
__n91["left"] := __n92;
__n93 := {  };
__n93["type"] := "Literal";
__n93["value"] := "exception #1";
__n93["raw"] := "\"exception #1\"";
__n91["right"] := __n93;
__n90["test"] := __n91;
__n94 := {  };
__n94["type"] := "ExpressionStatement";
__n95 := {  };
__n95["type"] := "CallExpression";
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "$ERROR";
__n95["callee"] := __n96;
__n98 := {  };
__n98["type"] := "BinaryExpression";
__n98["operator"] := "+";
__n99 := {  };
__n99["type"] := "Literal";
__n99["value"] := "#4: Exception ===\"exception #1\". Actual:  Exception ===";
__n99["raw"] := "'#4: Exception ===\"exception #1\". Actual:  Exception ==='";
__n98["left"] := __n99;
__n100 := {  };
__n100["type"] := "Identifier";
__n100["name"] := "e";
__n98["right"] := __n100;
__n97 := [ __n98 ];
__n95["arguments"] := __n97;
__n94["expression"] := __n95;
__n90["consequent"] := __n94;
__n90["alternate"] := null;
__n89 := [ __n90 ];
__n88["body"] := __n89;
__n86["body"] := __n88;
__n79["handler"] := __n86;
__n79["finalizer"] := null;
__n1 := [ __n2, __n22, __n44, __n49, __n69, __n74, __n79 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n101 := [ "b", "a" ];
__n0["variableDeclarations"] := __n101;
__n102 := [  ];
__n0["functionDeclarations"] := __n102;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}