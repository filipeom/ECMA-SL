function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "AssignmentExpression";
__n3["operator"] := "=";
__n4 := {  };
__n4["type"] := "MemberExpression";
__n5 := {  };
__n5["type"] := "ThisExpression";
__n4["object"] := __n5;
__n6 := {  };
__n6["type"] := "Literal";
__n6["value"] := "p1";
__n6["raw"] := "\"p1\"";
__n4["property"] := __n6;
__n4["computed"] := true;
__n3["left"] := __n4;
__n7 := {  };
__n7["type"] := "Literal";
__n7["value"] := "a";
__n7["raw"] := "'a'";
__n3["right"] := __n7;
__n2["expression"] := __n3;
__n8 := {  };
__n8["type"] := "VariableDeclaration";
__n10 := {  };
__n10["type"] := "VariableDeclarator";
__n11 := {  };
__n11["type"] := "Identifier";
__n11["name"] := "myObj";
__n10["id"] := __n11;
__n12 := {  };
__n12["type"] := "ObjectExpression";
__n14 := {  };
__n14["type"] := "Property";
__n15 := {  };
__n15["type"] := "Identifier";
__n15["name"] := "p1";
__n14["key"] := __n15;
__n16 := {  };
__n16["type"] := "ArrayExpression";
__n18 := {  };
__n18["type"] := "Literal";
__n18["value"] := 1.;
__n18["raw"] := "1";
__n19 := {  };
__n19["type"] := "Literal";
__n19["value"] := 2.;
__n19["raw"] := "2";
__n20 := {  };
__n20["type"] := "Literal";
__n20["value"] := 3.;
__n20["raw"] := "3";
__n17 := [ __n18, __n19, __n20 ];
__n16["elements"] := __n17;
__n14["value"] := __n16;
__n14["computed"] := false;
__n14["kind"] := "init";
__n14["shorthand"] := false;
__n13 := [ __n14 ];
__n12["properties"] := __n13;
__n10["init"] := __n12;
__n9 := [ __n10 ];
__n8["declarations"] := __n9;
__n8["kind"] := "var";
__n21 := {  };
__n21["type"] := "ExpressionStatement";
__n22 := {  };
__n22["type"] := "CallExpression";
__n23 := {  };
__n23["type"] := "Identifier";
__n23["name"] := "eval";
__n22["callee"] := __n23;
__n25 := {  };
__n25["type"] := "Literal";
__n25["value"] := "with(myObj){p1=[3,2,1]}";
__n25["raw"] := "\"with(myObj){p1=[3,2,1]}\"";
__n24 := [ __n25 ];
__n22["arguments"] := __n24;
__n21["expression"] := __n22;
__n26 := {  };
__n26["type"] := "IfStatement";
__n27 := {  };
__n27["type"] := "BinaryExpression";
__n27["operator"] := "!==";
__n28 := {  };
__n28["type"] := "MemberExpression";
__n28["computed"] := true;
__n29 := {  };
__n29["type"] := "MemberExpression";
__n30 := {  };
__n30["type"] := "Identifier";
__n30["name"] := "myObj";
__n29["object"] := __n30;
__n31 := {  };
__n31["type"] := "Literal";
__n31["value"] := "p1";
__n31["raw"] := "\"p1\"";
__n29["property"] := __n31;
__n29["computed"] := true;
__n28["object"] := __n29;
__n32 := {  };
__n32["type"] := "Literal";
__n32["value"] := 2.;
__n32["raw"] := "2";
__n28["property"] := __n32;
__n27["left"] := __n28;
__n33 := {  };
__n33["type"] := "Literal";
__n33["value"] := 1.;
__n33["raw"] := "1";
__n27["right"] := __n33;
__n26["test"] := __n27;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ExpressionStatement";
__n37 := {  };
__n37["type"] := "CallExpression";
__n38 := {  };
__n38["type"] := "Identifier";
__n38["name"] := "$ERROR";
__n37["callee"] := __n38;
__n40 := {  };
__n40["type"] := "BinaryExpression";
__n40["operator"] := "+";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := "#1: myObj.p1[2] === 1. Actual:  myObj.p1[2] ===";
__n41["raw"] := "'#1: myObj.p1[2] === 1. Actual:  myObj.p1[2] ==='";
__n40["left"] := __n41;
__n42 := {  };
__n42["type"] := "MemberExpression";
__n42["computed"] := true;
__n43 := {  };
__n43["type"] := "MemberExpression";
__n44 := {  };
__n44["type"] := "Identifier";
__n44["name"] := "myObj";
__n43["object"] := __n44;
__n45 := {  };
__n45["type"] := "Literal";
__n45["value"] := "p1";
__n45["raw"] := "\"p1\"";
__n43["property"] := __n45;
__n43["computed"] := true;
__n42["object"] := __n43;
__n46 := {  };
__n46["type"] := "Literal";
__n46["value"] := 2.;
__n46["raw"] := "2";
__n42["property"] := __n46;
__n40["right"] := __n42;
__n39 := [ __n40 ];
__n37["arguments"] := __n39;
__n36["expression"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n26["consequent"] := __n34;
__n26["alternate"] := null;
__n47 := {  };
__n47["type"] := "IfStatement";
__n48 := {  };
__n48["type"] := "BinaryExpression";
__n48["operator"] := "===";
__n49 := {  };
__n49["type"] := "MemberExpression";
__n50 := {  };
__n50["type"] := "Identifier";
__n50["name"] := "myObj";
__n49["object"] := __n50;
__n51 := {  };
__n51["type"] := "Literal";
__n51["value"] := "p1";
__n51["raw"] := "\"p1\"";
__n49["property"] := __n51;
__n49["computed"] := true;
__n48["left"] := __n49;
__n52 := {  };
__n52["type"] := "Literal";
__n52["value"] := "a";
__n52["raw"] := "'a'";
__n48["right"] := __n52;
__n47["test"] := __n48;
__n53 := {  };
__n53["type"] := "BlockStatement";
__n55 := {  };
__n55["type"] := "ExpressionStatement";
__n56 := {  };
__n56["type"] := "CallExpression";
__n57 := {  };
__n57["type"] := "Identifier";
__n57["name"] := "$ERROR";
__n56["callee"] := __n57;
__n59 := {  };
__n59["type"] := "Literal";
__n59["value"] := "#2: myObj.p1 !== 'a'";
__n59["raw"] := "'#2: myObj.p1 !== \\'a\\''";
__n58 := [ __n59 ];
__n56["arguments"] := __n58;
__n55["expression"] := __n56;
__n54 := [ __n55 ];
__n53["body"] := __n54;
__n47["consequent"] := __n53;
__n47["alternate"] := null;
__n1 := [ __n2, __n8, __n21, __n26, __n47 ];
__n0["body"] := __n1;
__n0["optimised"] := true;
__n60 := [ "myObj" ];
__n0["variableDeclarations"] := __n60;
__n61 := [  ];
__n0["functionDeclarations"] := __n61;
__n0["codeType"] := "global";
__n0["strict"] := false;
return ( false, __n0 )
}