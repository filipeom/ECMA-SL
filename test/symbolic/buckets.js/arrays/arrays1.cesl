function buildAST (___internal_esl_global) {
__n0 := {  };
__n0["type"] := "Program";
__n0["sourceType"] := "script";
__n2 := {  };
__n2["type"] := "ExpressionStatement";
__n3 := {  };
__n3["type"] := "Literal";
__n3["value"] := "use strict";
__n3["raw"] := "'use strict'";
__n2["expression"] := __n3;
__n2["directive"] := "use strict";
__n4 := {  };
__n4["type"] := "VariableDeclaration";
__n6 := {  };
__n6["type"] := "VariableDeclarator";
__n7 := {  };
__n7["type"] := "Identifier";
__n7["name"] := "buckets";
__n6["id"] := __n7;
__n8 := {  };
__n8["type"] := "ObjectExpression";
__n9 := [  ];
__n8["properties"] := __n9;
__n6["init"] := __n8;
__n5 := [ __n6 ];
__n4["declarations"] := __n5;
__n4["kind"] := "var";
__n10 := {  };
__n10["type"] := "ExpressionStatement";
__n11 := {  };
__n11["type"] := "AssignmentExpression";
__n11["operator"] := "=";
__n12 := {  };
__n12["type"] := "MemberExpression";
__n12["computed"] := true;
__n13 := {  };
__n13["type"] := "Identifier";
__n13["name"] := "buckets";
__n12["object"] := __n13;
__n14 := {  };
__n14["type"] := "Literal";
__n14["value"] := "defaultCompare";
__n14["raw"] := "\"defaultCompare\"";
__n12["property"] := __n14;
__n11["left"] := __n12;
__n15 := {  };
__n15["type"] := "FunctionExpression";
__n15["id"] := null;
__n16 := [ "a", "b" ];
__n15["params"] := __n16;
__n17 := {  };
__n17["type"] := "BlockStatement";
__n19 := {  };
__n19["type"] := "IfStatement";
__n20 := {  };
__n20["type"] := "BinaryExpression";
__n20["operator"] := "<";
__n21 := {  };
__n21["type"] := "Identifier";
__n21["name"] := "a";
__n20["left"] := __n21;
__n22 := {  };
__n22["type"] := "Identifier";
__n22["name"] := "b";
__n20["right"] := __n22;
__n19["test"] := __n20;
__n23 := {  };
__n23["type"] := "BlockStatement";
__n25 := {  };
__n25["type"] := "ReturnStatement";
__n26 := {  };
__n26["type"] := "UnaryExpression";
__n26["operator"] := "-";
__n27 := {  };
__n27["type"] := "Literal";
__n27["value"] := 1.;
__n27["raw"] := "1";
__n26["argument"] := __n27;
__n26["prefix"] := true;
__n25["argument"] := __n26;
__n24 := [ __n25 ];
__n23["body"] := __n24;
__n28 := [  ];
__n23["letDeclarations"] := __n28;
__n29 := [  ];
__n23["constDeclarations"] := __n29;
__n19["consequent"] := __n23;
__n19["alternate"] := null;
__n30 := {  };
__n30["type"] := "IfStatement";
__n31 := {  };
__n31["type"] := "BinaryExpression";
__n31["operator"] := "===";
__n32 := {  };
__n32["type"] := "Identifier";
__n32["name"] := "a";
__n31["left"] := __n32;
__n33 := {  };
__n33["type"] := "Identifier";
__n33["name"] := "b";
__n31["right"] := __n33;
__n30["test"] := __n31;
__n34 := {  };
__n34["type"] := "BlockStatement";
__n36 := {  };
__n36["type"] := "ReturnStatement";
__n37 := {  };
__n37["type"] := "Literal";
__n37["value"] := 0.;
__n37["raw"] := "0";
__n36["argument"] := __n37;
__n35 := [ __n36 ];
__n34["body"] := __n35;
__n38 := [  ];
__n34["letDeclarations"] := __n38;
__n39 := [  ];
__n34["constDeclarations"] := __n39;
__n30["consequent"] := __n34;
__n30["alternate"] := null;
__n40 := {  };
__n40["type"] := "ReturnStatement";
__n41 := {  };
__n41["type"] := "Literal";
__n41["value"] := 1.;
__n41["raw"] := "1";
__n40["argument"] := __n41;
__n18 := [ __n19, __n30, __n40 ];
__n17["body"] := __n18;
__n17["isSimpleParameterList"] := true;
__n42 := [  ];
__n17["variableDeclarations"] := __n42;
__n43 := [  ];
__n17["functionDeclarations"] := __n43;
__n44 := [  ];
__n17["letDeclarations"] := __n44;
__n45 := [  ];
__n17["constDeclarations"] := __n45;
__n17["containsExpression"] := false;
__n47 := {  };
__n47["type"] := "Identifier";
__n47["name"] := "a";
__n48 := {  };
__n48["type"] := "Identifier";
__n48["name"] := "b";
__n46 := [ __n47, __n48 ];
__n17["paramsDetails"] := __n46;
__n49 := [ "a", "b" ];
__n17["paramsNames"] := __n49;
__n17["codeType"] := "function";
__n17["strict"] := false;
__n15["body"] := __n17;
__n15["generator"] := false;
__n15["async"] := false;
__n15["expression"] := false;
__n11["right"] := __n15;
__n10["expression"] := __n11;
__n50 := {  };
__n50["type"] := "ExpressionStatement";
__n51 := {  };
__n51["type"] := "AssignmentExpression";
__n51["operator"] := "=";
__n52 := {  };
__n52["type"] := "MemberExpression";
__n52["computed"] := true;
__n53 := {  };
__n53["type"] := "Identifier";
__n53["name"] := "buckets";
__n52["object"] := __n53;
__n54 := {  };
__n54["type"] := "Literal";
__n54["value"] := "defaultEquals";
__n54["raw"] := "\"defaultEquals\"";
__n52["property"] := __n54;
__n51["left"] := __n52;
__n55 := {  };
__n55["type"] := "FunctionExpression";
__n55["id"] := null;
__n56 := [ "a", "b" ];
__n55["params"] := __n56;
__n57 := {  };
__n57["type"] := "BlockStatement";
__n59 := {  };
__n59["type"] := "ReturnStatement";
__n60 := {  };
__n60["type"] := "BinaryExpression";
__n60["operator"] := "===";
__n61 := {  };
__n61["type"] := "Identifier";
__n61["name"] := "a";
__n60["left"] := __n61;
__n62 := {  };
__n62["type"] := "Identifier";
__n62["name"] := "b";
__n60["right"] := __n62;
__n59["argument"] := __n60;
__n58 := [ __n59 ];
__n57["body"] := __n58;
__n57["isSimpleParameterList"] := true;
__n63 := [  ];
__n57["variableDeclarations"] := __n63;
__n64 := [  ];
__n57["functionDeclarations"] := __n64;
__n65 := [  ];
__n57["letDeclarations"] := __n65;
__n66 := [  ];
__n57["constDeclarations"] := __n66;
__n57["containsExpression"] := false;
__n68 := {  };
__n68["type"] := "Identifier";
__n68["name"] := "a";
__n69 := {  };
__n69["type"] := "Identifier";
__n69["name"] := "b";
__n67 := [ __n68, __n69 ];
__n57["paramsDetails"] := __n67;
__n70 := [ "a", "b" ];
__n57["paramsNames"] := __n70;
__n57["codeType"] := "function";
__n57["strict"] := false;
__n55["body"] := __n57;
__n55["generator"] := false;
__n55["async"] := false;
__n55["expression"] := false;
__n51["right"] := __n55;
__n50["expression"] := __n51;
__n71 := {  };
__n71["type"] := "ExpressionStatement";
__n72 := {  };
__n72["type"] := "AssignmentExpression";
__n72["operator"] := "=";
__n73 := {  };
__n73["type"] := "MemberExpression";
__n73["computed"] := true;
__n74 := {  };
__n74["type"] := "Identifier";
__n74["name"] := "buckets";
__n73["object"] := __n74;
__n75 := {  };
__n75["type"] := "Literal";
__n75["value"] := "defaultToString";
__n75["raw"] := "\"defaultToString\"";
__n73["property"] := __n75;
__n72["left"] := __n73;
__n76 := {  };
__n76["type"] := "FunctionExpression";
__n76["id"] := null;
__n77 := [ "item" ];
__n76["params"] := __n77;
__n78 := {  };
__n78["type"] := "BlockStatement";
__n80 := {  };
__n80["type"] := "IfStatement";
__n81 := {  };
__n81["type"] := "BinaryExpression";
__n81["operator"] := "===";
__n82 := {  };
__n82["type"] := "Identifier";
__n82["name"] := "item";
__n81["left"] := __n82;
__n83 := {  };
__n83["type"] := "Literal";
__n83["value"] := 'null;
__n83["raw"] := "\"'null\"";
__n81["right"] := __n83;
__n80["test"] := __n81;
__n84 := {  };
__n84["type"] := "BlockStatement";
__n86 := {  };
__n86["type"] := "ReturnStatement";
__n87 := {  };
__n87["type"] := "Literal";
__n87["value"] := "BUCKETS_NULL";
__n87["raw"] := "'BUCKETS_NULL'";
__n86["argument"] := __n87;
__n85 := [ __n86 ];
__n84["body"] := __n85;
__n88 := [  ];
__n84["letDeclarations"] := __n88;
__n89 := [  ];
__n84["constDeclarations"] := __n89;
__n80["consequent"] := __n84;
__n80["alternate"] := null;
__n90 := {  };
__n90["type"] := "IfStatement";
__n91 := {  };
__n91["type"] := "CallExpression";
__n92 := {  };
__n92["type"] := "MemberExpression";
__n92["computed"] := true;
__n93 := {  };
__n93["type"] := "Identifier";
__n93["name"] := "buckets";
__n92["object"] := __n93;
__n94 := {  };
__n94["type"] := "Literal";
__n94["value"] := "isUndefined";
__n94["raw"] := "\"isUndefined\"";
__n92["property"] := __n94;
__n91["callee"] := __n92;
__n91["is_tail_call"] := 'undefined;
__n96 := {  };
__n96["type"] := "Identifier";
__n96["name"] := "item";
__n95 := [ __n96 ];
__n91["arguments"] := __n95;
__n90["test"] := __n91;
__n97 := {  };
__n97["type"] := "BlockStatement";
__n99 := {  };
__n99["type"] := "ReturnStatement";
__n100 := {  };
__n100["type"] := "Literal";
__n100["value"] := "BUCKETS_UNDEFINED";
__n100["raw"] := "'BUCKETS_UNDEFINED'";
__n99["argument"] := __n100;
__n98 := [ __n99 ];
__n97["body"] := __n98;
__n101 := [  ];
__n97["letDeclarations"] := __n101;
__n102 := [  ];
__n97["constDeclarations"] := __n102;
__n90["consequent"] := __n97;
__n90["alternate"] := null;
__n103 := {  };
__n103["type"] := "IfStatement";
__n104 := {  };
__n104["type"] := "CallExpression";
__n105 := {  };
__n105["type"] := "MemberExpression";
__n105["computed"] := true;
__n106 := {  };
__n106["type"] := "Identifier";
__n106["name"] := "buckets";
__n105["object"] := __n106;
__n107 := {  };
__n107["type"] := "Literal";
__n107["value"] := "isString";
__n107["raw"] := "\"isString\"";
__n105["property"] := __n107;
__n104["callee"] := __n105;
__n104["is_tail_call"] := 'undefined;
__n109 := {  };
__n109["type"] := "Identifier";
__n109["name"] := "item";
__n108 := [ __n109 ];
__n104["arguments"] := __n108;
__n103["test"] := __n104;
__n110 := {  };
__n110["type"] := "BlockStatement";
__n112 := {  };
__n112["type"] := "ReturnStatement";
__n113 := {  };
__n113["type"] := "Identifier";
__n113["name"] := "item";
__n112["argument"] := __n113;
__n111 := [ __n112 ];
__n110["body"] := __n111;
__n114 := [  ];
__n110["letDeclarations"] := __n114;
__n115 := [  ];
__n110["constDeclarations"] := __n115;
__n103["consequent"] := __n110;
__n103["alternate"] := null;
__n116 := {  };
__n116["type"] := "ReturnStatement";
__n117 := {  };
__n117["type"] := "CallExpression";
__n118 := {  };
__n118["type"] := "MemberExpression";
__n118["computed"] := true;
__n119 := {  };
__n119["type"] := "Identifier";
__n119["name"] := "item";
__n118["object"] := __n119;
__n120 := {  };
__n120["type"] := "Literal";
__n120["value"] := "toString";
__n120["raw"] := "\"toString\"";
__n118["property"] := __n120;
__n117["callee"] := __n118;
__n117["is_tail_call"] := true;
__n121 := [  ];
__n117["arguments"] := __n121;
__n116["argument"] := __n117;
__n79 := [ __n80, __n90, __n103, __n116 ];
__n78["body"] := __n79;
__n78["isSimpleParameterList"] := true;
__n122 := [  ];
__n78["variableDeclarations"] := __n122;
__n123 := [  ];
__n78["functionDeclarations"] := __n123;
__n124 := [  ];
__n78["letDeclarations"] := __n124;
__n125 := [  ];
__n78["constDeclarations"] := __n125;
__n78["containsExpression"] := false;
__n127 := {  };
__n127["type"] := "Identifier";
__n127["name"] := "item";
__n126 := [ __n127 ];
__n78["paramsDetails"] := __n126;
__n128 := [ "item" ];
__n78["paramsNames"] := __n128;
__n78["codeType"] := "function";
__n78["strict"] := false;
__n76["body"] := __n78;
__n76["generator"] := false;
__n76["async"] := false;
__n76["expression"] := false;
__n72["right"] := __n76;
__n71["expression"] := __n72;
__n129 := {  };
__n129["type"] := "ExpressionStatement";
__n130 := {  };
__n130["type"] := "AssignmentExpression";
__n130["operator"] := "=";
__n131 := {  };
__n131["type"] := "MemberExpression";
__n131["computed"] := true;
__n132 := {  };
__n132["type"] := "Identifier";
__n132["name"] := "buckets";
__n131["object"] := __n132;
__n133 := {  };
__n133["type"] := "Literal";
__n133["value"] := "isFunction";
__n133["raw"] := "\"isFunction\"";
__n131["property"] := __n133;
__n130["left"] := __n131;
__n134 := {  };
__n134["type"] := "FunctionExpression";
__n134["id"] := null;
__n135 := [ "func" ];
__n134["params"] := __n135;
__n136 := {  };
__n136["type"] := "BlockStatement";
__n138 := {  };
__n138["type"] := "ReturnStatement";
__n139 := {  };
__n139["type"] := "BinaryExpression";
__n139["operator"] := "===";
__n140 := {  };
__n140["type"] := "UnaryExpression";
__n140["operator"] := "typeof";
__n141 := {  };
__n141["type"] := "Identifier";
__n141["name"] := "func";
__n140["argument"] := __n141;
__n140["prefix"] := true;
__n139["left"] := __n140;
__n142 := {  };
__n142["type"] := "Literal";
__n142["value"] := "function";
__n142["raw"] := "'function'";
__n139["right"] := __n142;
__n138["argument"] := __n139;
__n137 := [ __n138 ];
__n136["body"] := __n137;
__n136["isSimpleParameterList"] := true;
__n143 := [  ];
__n136["variableDeclarations"] := __n143;
__n144 := [  ];
__n136["functionDeclarations"] := __n144;
__n145 := [  ];
__n136["letDeclarations"] := __n145;
__n146 := [  ];
__n136["constDeclarations"] := __n146;
__n136["containsExpression"] := false;
__n148 := {  };
__n148["type"] := "Identifier";
__n148["name"] := "func";
__n147 := [ __n148 ];
__n136["paramsDetails"] := __n147;
__n149 := [ "func" ];
__n136["paramsNames"] := __n149;
__n136["codeType"] := "function";
__n136["strict"] := false;
__n134["body"] := __n136;
__n134["generator"] := false;
__n134["async"] := false;
__n134["expression"] := false;
__n130["right"] := __n134;
__n129["expression"] := __n130;
__n150 := {  };
__n150["type"] := "ExpressionStatement";
__n151 := {  };
__n151["type"] := "AssignmentExpression";
__n151["operator"] := "=";
__n152 := {  };
__n152["type"] := "MemberExpression";
__n152["computed"] := true;
__n153 := {  };
__n153["type"] := "Identifier";
__n153["name"] := "buckets";
__n152["object"] := __n153;
__n154 := {  };
__n154["type"] := "Literal";
__n154["value"] := "isUndefined";
__n154["raw"] := "\"isUndefined\"";
__n152["property"] := __n154;
__n151["left"] := __n152;
__n155 := {  };
__n155["type"] := "FunctionExpression";
__n155["id"] := null;
__n156 := [ "obj" ];
__n155["params"] := __n156;
__n157 := {  };
__n157["type"] := "BlockStatement";
__n159 := {  };
__n159["type"] := "ReturnStatement";
__n160 := {  };
__n160["type"] := "BinaryExpression";
__n160["operator"] := "===";
__n161 := {  };
__n161["type"] := "Identifier";
__n161["name"] := "obj";
__n160["left"] := __n161;
__n162 := {  };
__n162["type"] := "Identifier";
__n162["name"] := "undefined";
__n160["right"] := __n162;
__n159["argument"] := __n160;
__n158 := [ __n159 ];
__n157["body"] := __n158;
__n157["isSimpleParameterList"] := true;
__n163 := [  ];
__n157["variableDeclarations"] := __n163;
__n164 := [  ];
__n157["functionDeclarations"] := __n164;
__n165 := [  ];
__n157["letDeclarations"] := __n165;
__n166 := [  ];
__n157["constDeclarations"] := __n166;
__n157["containsExpression"] := false;
__n168 := {  };
__n168["type"] := "Identifier";
__n168["name"] := "obj";
__n167 := [ __n168 ];
__n157["paramsDetails"] := __n167;
__n169 := [ "obj" ];
__n157["paramsNames"] := __n169;
__n157["codeType"] := "function";
__n157["strict"] := false;
__n155["body"] := __n157;
__n155["generator"] := false;
__n155["async"] := false;
__n155["expression"] := false;
__n151["right"] := __n155;
__n150["expression"] := __n151;
__n170 := {  };
__n170["type"] := "ExpressionStatement";
__n171 := {  };
__n171["type"] := "AssignmentExpression";
__n171["operator"] := "=";
__n172 := {  };
__n172["type"] := "MemberExpression";
__n172["computed"] := true;
__n173 := {  };
__n173["type"] := "Identifier";
__n173["name"] := "buckets";
__n172["object"] := __n173;
__n174 := {  };
__n174["type"] := "Literal";
__n174["value"] := "isString";
__n174["raw"] := "\"isString\"";
__n172["property"] := __n174;
__n171["left"] := __n172;
__n175 := {  };
__n175["type"] := "FunctionExpression";
__n175["id"] := null;
__n176 := [ "obj" ];
__n175["params"] := __n176;
__n177 := {  };
__n177["type"] := "BlockStatement";
__n179 := {  };
__n179["type"] := "ReturnStatement";
__n180 := {  };
__n180["type"] := "BinaryExpression";
__n180["operator"] := "===";
__n181 := {  };
__n181["type"] := "CallExpression";
__n182 := {  };
__n182["type"] := "MemberExpression";
__n182["computed"] := true;
__n183 := {  };
__n183["type"] := "MemberExpression";
__n183["computed"] := true;
__n184 := {  };
__n184["type"] := "MemberExpression";
__n184["computed"] := true;
__n185 := {  };
__n185["type"] := "Identifier";
__n185["name"] := "Object";
__n184["object"] := __n185;
__n186 := {  };
__n186["type"] := "Literal";
__n186["value"] := "prototype";
__n186["raw"] := "\"prototype\"";
__n184["property"] := __n186;
__n183["object"] := __n184;
__n187 := {  };
__n187["type"] := "Literal";
__n187["value"] := "toString";
__n187["raw"] := "\"toString\"";
__n183["property"] := __n187;
__n182["object"] := __n183;
__n188 := {  };
__n188["type"] := "Literal";
__n188["value"] := "call";
__n188["raw"] := "\"call\"";
__n182["property"] := __n188;
__n181["callee"] := __n182;
__n181["is_tail_call"] := 'undefined;
__n190 := {  };
__n190["type"] := "Identifier";
__n190["name"] := "obj";
__n189 := [ __n190 ];
__n181["arguments"] := __n189;
__n180["left"] := __n181;
__n191 := {  };
__n191["type"] := "Literal";
__n191["value"] := "[object String]";
__n191["raw"] := "'[object String]'";
__n180["right"] := __n191;
__n179["argument"] := __n180;
__n178 := [ __n179 ];
__n177["body"] := __n178;
__n177["isSimpleParameterList"] := true;
__n192 := [  ];
__n177["variableDeclarations"] := __n192;
__n193 := [  ];
__n177["functionDeclarations"] := __n193;
__n194 := [  ];
__n177["letDeclarations"] := __n194;
__n195 := [  ];
__n177["constDeclarations"] := __n195;
__n177["containsExpression"] := false;
__n197 := {  };
__n197["type"] := "Identifier";
__n197["name"] := "obj";
__n196 := [ __n197 ];
__n177["paramsDetails"] := __n196;
__n198 := [ "obj" ];
__n177["paramsNames"] := __n198;
__n177["codeType"] := "function";
__n177["strict"] := false;
__n175["body"] := __n177;
__n175["generator"] := false;
__n175["async"] := false;
__n175["expression"] := false;
__n171["right"] := __n175;
__n170["expression"] := __n171;
__n199 := {  };
__n199["type"] := "ExpressionStatement";
__n200 := {  };
__n200["type"] := "AssignmentExpression";
__n200["operator"] := "=";
__n201 := {  };
__n201["type"] := "MemberExpression";
__n201["computed"] := true;
__n202 := {  };
__n202["type"] := "Identifier";
__n202["name"] := "buckets";
__n201["object"] := __n202;
__n203 := {  };
__n203["type"] := "Literal";
__n203["value"] := "reverseCompareFunction";
__n203["raw"] := "\"reverseCompareFunction\"";
__n201["property"] := __n203;
__n200["left"] := __n201;
__n204 := {  };
__n204["type"] := "FunctionExpression";
__n204["id"] := null;
__n205 := [ "compareFunction" ];
__n204["params"] := __n205;
__n206 := {  };
__n206["type"] := "BlockStatement";
__n208 := {  };
__n208["type"] := "IfStatement";
__n209 := {  };
__n209["type"] := "UnaryExpression";
__n209["operator"] := "!";
__n210 := {  };
__n210["type"] := "CallExpression";
__n211 := {  };
__n211["type"] := "MemberExpression";
__n211["computed"] := true;
__n212 := {  };
__n212["type"] := "Identifier";
__n212["name"] := "buckets";
__n211["object"] := __n212;
__n213 := {  };
__n213["type"] := "Literal";
__n213["value"] := "isFunction";
__n213["raw"] := "\"isFunction\"";
__n211["property"] := __n213;
__n210["callee"] := __n211;
__n210["is_tail_call"] := 'undefined;
__n215 := {  };
__n215["type"] := "Identifier";
__n215["name"] := "compareFunction";
__n214 := [ __n215 ];
__n210["arguments"] := __n214;
__n209["argument"] := __n210;
__n209["prefix"] := true;
__n208["test"] := __n209;
__n216 := {  };
__n216["type"] := "BlockStatement";
__n218 := {  };
__n218["type"] := "ReturnStatement";
__n219 := {  };
__n219["type"] := "FunctionExpression";
__n219["id"] := null;
__n220 := [ "a", "b" ];
__n219["params"] := __n220;
__n221 := {  };
__n221["type"] := "BlockStatement";
__n223 := {  };
__n223["type"] := "IfStatement";
__n224 := {  };
__n224["type"] := "BinaryExpression";
__n224["operator"] := "<";
__n225 := {  };
__n225["type"] := "Identifier";
__n225["name"] := "a";
__n224["left"] := __n225;
__n226 := {  };
__n226["type"] := "Identifier";
__n226["name"] := "b";
__n224["right"] := __n226;
__n223["test"] := __n224;
__n227 := {  };
__n227["type"] := "BlockStatement";
__n229 := {  };
__n229["type"] := "ReturnStatement";
__n230 := {  };
__n230["type"] := "Literal";
__n230["value"] := 1.;
__n230["raw"] := "1";
__n229["argument"] := __n230;
__n228 := [ __n229 ];
__n227["body"] := __n228;
__n231 := [  ];
__n227["letDeclarations"] := __n231;
__n232 := [  ];
__n227["constDeclarations"] := __n232;
__n223["consequent"] := __n227;
__n223["alternate"] := null;
__n233 := {  };
__n233["type"] := "IfStatement";
__n234 := {  };
__n234["type"] := "BinaryExpression";
__n234["operator"] := "===";
__n235 := {  };
__n235["type"] := "Identifier";
__n235["name"] := "a";
__n234["left"] := __n235;
__n236 := {  };
__n236["type"] := "Identifier";
__n236["name"] := "b";
__n234["right"] := __n236;
__n233["test"] := __n234;
__n237 := {  };
__n237["type"] := "BlockStatement";
__n239 := {  };
__n239["type"] := "ReturnStatement";
__n240 := {  };
__n240["type"] := "Literal";
__n240["value"] := 0.;
__n240["raw"] := "0";
__n239["argument"] := __n240;
__n238 := [ __n239 ];
__n237["body"] := __n238;
__n241 := [  ];
__n237["letDeclarations"] := __n241;
__n242 := [  ];
__n237["constDeclarations"] := __n242;
__n233["consequent"] := __n237;
__n233["alternate"] := null;
__n243 := {  };
__n243["type"] := "ReturnStatement";
__n244 := {  };
__n244["type"] := "UnaryExpression";
__n244["operator"] := "-";
__n245 := {  };
__n245["type"] := "Literal";
__n245["value"] := 1.;
__n245["raw"] := "1";
__n244["argument"] := __n245;
__n244["prefix"] := true;
__n243["argument"] := __n244;
__n222 := [ __n223, __n233, __n243 ];
__n221["body"] := __n222;
__n221["isSimpleParameterList"] := true;
__n246 := [  ];
__n221["variableDeclarations"] := __n246;
__n247 := [  ];
__n221["functionDeclarations"] := __n247;
__n248 := [  ];
__n221["letDeclarations"] := __n248;
__n249 := [  ];
__n221["constDeclarations"] := __n249;
__n221["containsExpression"] := false;
__n251 := {  };
__n251["type"] := "Identifier";
__n251["name"] := "a";
__n252 := {  };
__n252["type"] := "Identifier";
__n252["name"] := "b";
__n250 := [ __n251, __n252 ];
__n221["paramsDetails"] := __n250;
__n253 := [ "a", "b" ];
__n221["paramsNames"] := __n253;
__n221["codeType"] := "function";
__n221["strict"] := false;
__n219["body"] := __n221;
__n219["generator"] := false;
__n219["async"] := false;
__n219["expression"] := false;
__n218["argument"] := __n219;
__n217 := [ __n218 ];
__n216["body"] := __n217;
__n254 := [  ];
__n216["letDeclarations"] := __n254;
__n255 := [  ];
__n216["constDeclarations"] := __n255;
__n208["consequent"] := __n216;
__n208["alternate"] := null;
__n256 := {  };
__n256["type"] := "ReturnStatement";
__n257 := {  };
__n257["type"] := "FunctionExpression";
__n257["id"] := null;
__n258 := [ "d", "v" ];
__n257["params"] := __n258;
__n259 := {  };
__n259["type"] := "BlockStatement";
__n261 := {  };
__n261["type"] := "ReturnStatement";
__n262 := {  };
__n262["type"] := "BinaryExpression";
__n262["operator"] := "*";
__n263 := {  };
__n263["type"] := "CallExpression";
__n264 := {  };
__n264["type"] := "Identifier";
__n264["name"] := "compareFunction";
__n263["callee"] := __n264;
__n263["is_tail_call"] := 'undefined;
__n266 := {  };
__n266["type"] := "Identifier";
__n266["name"] := "d";
__n267 := {  };
__n267["type"] := "Identifier";
__n267["name"] := "v";
__n265 := [ __n266, __n267 ];
__n263["arguments"] := __n265;
__n262["left"] := __n263;
__n268 := {  };
__n268["type"] := "UnaryExpression";
__n268["operator"] := "-";
__n269 := {  };
__n269["type"] := "Literal";
__n269["value"] := 1.;
__n269["raw"] := "1";
__n268["argument"] := __n269;
__n268["prefix"] := true;
__n262["right"] := __n268;
__n261["argument"] := __n262;
__n260 := [ __n261 ];
__n259["body"] := __n260;
__n259["isSimpleParameterList"] := true;
__n270 := [  ];
__n259["variableDeclarations"] := __n270;
__n271 := [  ];
__n259["functionDeclarations"] := __n271;
__n272 := [  ];
__n259["letDeclarations"] := __n272;
__n273 := [  ];
__n259["constDeclarations"] := __n273;
__n259["containsExpression"] := false;
__n275 := {  };
__n275["type"] := "Identifier";
__n275["name"] := "d";
__n276 := {  };
__n276["type"] := "Identifier";
__n276["name"] := "v";
__n274 := [ __n275, __n276 ];
__n259["paramsDetails"] := __n274;
__n277 := [ "d", "v" ];
__n259["paramsNames"] := __n277;
__n259["codeType"] := "function";
__n259["strict"] := false;
__n257["body"] := __n259;
__n257["generator"] := false;
__n257["async"] := false;
__n257["expression"] := false;
__n256["argument"] := __n257;
__n207 := [ __n208, __n256 ];
__n206["body"] := __n207;
__n206["isSimpleParameterList"] := true;
__n278 := [  ];
__n206["variableDeclarations"] := __n278;
__n279 := [  ];
__n206["functionDeclarations"] := __n279;
__n280 := [  ];
__n206["letDeclarations"] := __n280;
__n281 := [  ];
__n206["constDeclarations"] := __n281;
__n206["containsExpression"] := false;
__n283 := {  };
__n283["type"] := "Identifier";
__n283["name"] := "compareFunction";
__n282 := [ __n283 ];
__n206["paramsDetails"] := __n282;
__n284 := [ "compareFunction" ];
__n206["paramsNames"] := __n284;
__n206["codeType"] := "function";
__n206["strict"] := false;
__n204["body"] := __n206;
__n204["generator"] := false;
__n204["async"] := false;
__n204["expression"] := false;
__n200["right"] := __n204;
__n199["expression"] := __n200;
__n285 := {  };
__n285["type"] := "ExpressionStatement";
__n286 := {  };
__n286["type"] := "AssignmentExpression";
__n286["operator"] := "=";
__n287 := {  };
__n287["type"] := "MemberExpression";
__n287["computed"] := true;
__n288 := {  };
__n288["type"] := "Identifier";
__n288["name"] := "buckets";
__n287["object"] := __n288;
__n289 := {  };
__n289["type"] := "Literal";
__n289["value"] := "compareToEquals";
__n289["raw"] := "\"compareToEquals\"";
__n287["property"] := __n289;
__n286["left"] := __n287;
__n290 := {  };
__n290["type"] := "FunctionExpression";
__n290["id"] := null;
__n291 := [ "compareFunction" ];
__n290["params"] := __n291;
__n292 := {  };
__n292["type"] := "BlockStatement";
__n294 := {  };
__n294["type"] := "ReturnStatement";
__n295 := {  };
__n295["type"] := "FunctionExpression";
__n295["id"] := null;
__n296 := [ "a", "b" ];
__n295["params"] := __n296;
__n297 := {  };
__n297["type"] := "BlockStatement";
__n299 := {  };
__n299["type"] := "ReturnStatement";
__n300 := {  };
__n300["type"] := "BinaryExpression";
__n300["operator"] := "===";
__n301 := {  };
__n301["type"] := "CallExpression";
__n302 := {  };
__n302["type"] := "Identifier";
__n302["name"] := "compareFunction";
__n301["callee"] := __n302;
__n301["is_tail_call"] := 'undefined;
__n304 := {  };
__n304["type"] := "Identifier";
__n304["name"] := "a";
__n305 := {  };
__n305["type"] := "Identifier";
__n305["name"] := "b";
__n303 := [ __n304, __n305 ];
__n301["arguments"] := __n303;
__n300["left"] := __n301;
__n306 := {  };
__n306["type"] := "Literal";
__n306["value"] := 0.;
__n306["raw"] := "0";
__n300["right"] := __n306;
__n299["argument"] := __n300;
__n298 := [ __n299 ];
__n297["body"] := __n298;
__n297["isSimpleParameterList"] := true;
__n307 := [  ];
__n297["variableDeclarations"] := __n307;
__n308 := [  ];
__n297["functionDeclarations"] := __n308;
__n309 := [  ];
__n297["letDeclarations"] := __n309;
__n310 := [  ];
__n297["constDeclarations"] := __n310;
__n297["containsExpression"] := false;
__n312 := {  };
__n312["type"] := "Identifier";
__n312["name"] := "a";
__n313 := {  };
__n313["type"] := "Identifier";
__n313["name"] := "b";
__n311 := [ __n312, __n313 ];
__n297["paramsDetails"] := __n311;
__n314 := [ "a", "b" ];
__n297["paramsNames"] := __n314;
__n297["codeType"] := "function";
__n297["strict"] := false;
__n295["body"] := __n297;
__n295["generator"] := false;
__n295["async"] := false;
__n295["expression"] := false;
__n294["argument"] := __n295;
__n293 := [ __n294 ];
__n292["body"] := __n293;
__n292["isSimpleParameterList"] := true;
__n315 := [  ];
__n292["variableDeclarations"] := __n315;
__n316 := [  ];
__n292["functionDeclarations"] := __n316;
__n317 := [  ];
__n292["letDeclarations"] := __n317;
__n318 := [  ];
__n292["constDeclarations"] := __n318;
__n292["containsExpression"] := false;
__n320 := {  };
__n320["type"] := "Identifier";
__n320["name"] := "compareFunction";
__n319 := [ __n320 ];
__n292["paramsDetails"] := __n319;
__n321 := [ "compareFunction" ];
__n292["paramsNames"] := __n321;
__n292["codeType"] := "function";
__n292["strict"] := false;
__n290["body"] := __n292;
__n290["generator"] := false;
__n290["async"] := false;
__n290["expression"] := false;
__n286["right"] := __n290;
__n285["expression"] := __n286;
__n322 := {  };
__n322["type"] := "ExpressionStatement";
__n323 := {  };
__n323["type"] := "AssignmentExpression";
__n323["operator"] := "=";
__n324 := {  };
__n324["type"] := "MemberExpression";
__n324["computed"] := true;
__n325 := {  };
__n325["type"] := "Identifier";
__n325["name"] := "buckets";
__n324["object"] := __n325;
__n326 := {  };
__n326["type"] := "Literal";
__n326["value"] := "arrays";
__n326["raw"] := "\"arrays\"";
__n324["property"] := __n326;
__n323["left"] := __n324;
__n327 := {  };
__n327["type"] := "ObjectExpression";
__n328 := [  ];
__n327["properties"] := __n328;
__n323["right"] := __n327;
__n322["expression"] := __n323;
__n329 := {  };
__n329["type"] := "ExpressionStatement";
__n330 := {  };
__n330["type"] := "AssignmentExpression";
__n330["operator"] := "=";
__n331 := {  };
__n331["type"] := "MemberExpression";
__n331["computed"] := true;
__n332 := {  };
__n332["type"] := "MemberExpression";
__n332["computed"] := true;
__n333 := {  };
__n333["type"] := "Identifier";
__n333["name"] := "buckets";
__n332["object"] := __n333;
__n334 := {  };
__n334["type"] := "Literal";
__n334["value"] := "arrays";
__n334["raw"] := "\"arrays\"";
__n332["property"] := __n334;
__n331["object"] := __n332;
__n335 := {  };
__n335["type"] := "Literal";
__n335["value"] := "indexOf";
__n335["raw"] := "\"indexOf\"";
__n331["property"] := __n335;
__n330["left"] := __n331;
__n336 := {  };
__n336["type"] := "FunctionExpression";
__n336["id"] := null;
__n337 := [ "array", "item", "equalsFunction" ];
__n336["params"] := __n337;
__n338 := {  };
__n338["type"] := "BlockStatement";
__n340 := {  };
__n340["type"] := "VariableDeclaration";
__n342 := {  };
__n342["type"] := "VariableDeclarator";
__n343 := {  };
__n343["type"] := "Identifier";
__n343["name"] := "equals";
__n342["id"] := __n343;
__n344 := {  };
__n344["type"] := "LogicalExpression";
__n344["operator"] := "||";
__n345 := {  };
__n345["type"] := "Identifier";
__n345["name"] := "equalsFunction";
__n344["left"] := __n345;
__n346 := {  };
__n346["type"] := "MemberExpression";
__n346["computed"] := true;
__n347 := {  };
__n347["type"] := "Identifier";
__n347["name"] := "buckets";
__n346["object"] := __n347;
__n348 := {  };
__n348["type"] := "Literal";
__n348["value"] := "defaultEquals";
__n348["raw"] := "\"defaultEquals\"";
__n346["property"] := __n348;
__n344["right"] := __n346;
__n342["init"] := __n344;
__n349 := {  };
__n349["type"] := "VariableDeclarator";
__n350 := {  };
__n350["type"] := "Identifier";
__n350["name"] := "length";
__n349["id"] := __n350;
__n351 := {  };
__n351["type"] := "MemberExpression";
__n351["computed"] := true;
__n352 := {  };
__n352["type"] := "Identifier";
__n352["name"] := "array";
__n351["object"] := __n352;
__n353 := {  };
__n353["type"] := "Literal";
__n353["value"] := "length";
__n353["raw"] := "\"length\"";
__n351["property"] := __n353;
__n349["init"] := __n351;
__n354 := {  };
__n354["type"] := "VariableDeclarator";
__n355 := {  };
__n355["type"] := "Identifier";
__n355["name"] := "i";
__n354["id"] := __n355;
__n354["init"] := null;
__n341 := [ __n342, __n349, __n354 ];
__n340["declarations"] := __n341;
__n340["kind"] := "var";
__n356 := {  };
__n356["type"] := "ForStatement";
__n357 := {  };
__n357["type"] := "AssignmentExpression";
__n357["operator"] := "=";
__n358 := {  };
__n358["type"] := "Identifier";
__n358["name"] := "i";
__n357["left"] := __n358;
__n359 := {  };
__n359["type"] := "Literal";
__n359["value"] := 0.;
__n359["raw"] := "0";
__n357["right"] := __n359;
__n356["init"] := __n357;
__n360 := {  };
__n360["type"] := "BinaryExpression";
__n360["operator"] := "<";
__n361 := {  };
__n361["type"] := "Identifier";
__n361["name"] := "i";
__n360["left"] := __n361;
__n362 := {  };
__n362["type"] := "Identifier";
__n362["name"] := "length";
__n360["right"] := __n362;
__n356["test"] := __n360;
__n363 := {  };
__n363["type"] := "AssignmentExpression";
__n363["operator"] := "+=";
__n364 := {  };
__n364["type"] := "Identifier";
__n364["name"] := "i";
__n363["left"] := __n364;
__n365 := {  };
__n365["type"] := "Literal";
__n365["value"] := 1.;
__n365["raw"] := "1";
__n363["right"] := __n365;
__n356["update"] := __n363;
__n366 := {  };
__n366["type"] := "BlockStatement";
__n368 := {  };
__n368["type"] := "IfStatement";
__n369 := {  };
__n369["type"] := "CallExpression";
__n370 := {  };
__n370["type"] := "Identifier";
__n370["name"] := "equals";
__n369["callee"] := __n370;
__n369["is_tail_call"] := 'undefined;
__n372 := {  };
__n372["type"] := "MemberExpression";
__n372["computed"] := true;
__n373 := {  };
__n373["type"] := "Identifier";
__n373["name"] := "array";
__n372["object"] := __n373;
__n374 := {  };
__n374["type"] := "Identifier";
__n374["name"] := "i";
__n372["property"] := __n374;
__n375 := {  };
__n375["type"] := "Identifier";
__n375["name"] := "item";
__n371 := [ __n372, __n375 ];
__n369["arguments"] := __n371;
__n368["test"] := __n369;
__n376 := {  };
__n376["type"] := "BlockStatement";
__n378 := {  };
__n378["type"] := "ReturnStatement";
__n379 := {  };
__n379["type"] := "Identifier";
__n379["name"] := "i";
__n378["argument"] := __n379;
__n377 := [ __n378 ];
__n376["body"] := __n377;
__n380 := [  ];
__n376["letDeclarations"] := __n380;
__n381 := [  ];
__n376["constDeclarations"] := __n381;
__n368["consequent"] := __n376;
__n368["alternate"] := null;
__n367 := [ __n368 ];
__n366["body"] := __n367;
__n382 := [  ];
__n366["letDeclarations"] := __n382;
__n383 := [  ];
__n366["constDeclarations"] := __n383;
__n356["body"] := __n366;
__n384 := {  };
__n384["type"] := "ReturnStatement";
__n385 := {  };
__n385["type"] := "UnaryExpression";
__n385["operator"] := "-";
__n386 := {  };
__n386["type"] := "Literal";
__n386["value"] := 1.;
__n386["raw"] := "1";
__n385["argument"] := __n386;
__n385["prefix"] := true;
__n384["argument"] := __n385;
__n339 := [ __n340, __n356, __n384 ];
__n338["body"] := __n339;
__n338["isSimpleParameterList"] := true;
__n387 := [ "equals", "length", "i" ];
__n338["variableDeclarations"] := __n387;
__n388 := [  ];
__n338["functionDeclarations"] := __n388;
__n389 := [  ];
__n338["letDeclarations"] := __n389;
__n390 := [  ];
__n338["constDeclarations"] := __n390;
__n338["containsExpression"] := false;
__n392 := {  };
__n392["type"] := "Identifier";
__n392["name"] := "array";
__n393 := {  };
__n393["type"] := "Identifier";
__n393["name"] := "item";
__n394 := {  };
__n394["type"] := "Identifier";
__n394["name"] := "equalsFunction";
__n391 := [ __n392, __n393, __n394 ];
__n338["paramsDetails"] := __n391;
__n395 := [ "array", "item", "equalsFunction" ];
__n338["paramsNames"] := __n395;
__n338["codeType"] := "function";
__n338["strict"] := false;
__n336["body"] := __n338;
__n336["generator"] := false;
__n336["async"] := false;
__n336["expression"] := false;
__n330["right"] := __n336;
__n329["expression"] := __n330;
__n396 := {  };
__n396["type"] := "ExpressionStatement";
__n397 := {  };
__n397["type"] := "AssignmentExpression";
__n397["operator"] := "=";
__n398 := {  };
__n398["type"] := "MemberExpression";
__n398["computed"] := true;
__n399 := {  };
__n399["type"] := "MemberExpression";
__n399["computed"] := true;
__n400 := {  };
__n400["type"] := "Identifier";
__n400["name"] := "buckets";
__n399["object"] := __n400;
__n401 := {  };
__n401["type"] := "Literal";
__n401["value"] := "arrays";
__n401["raw"] := "\"arrays\"";
__n399["property"] := __n401;
__n398["object"] := __n399;
__n402 := {  };
__n402["type"] := "Literal";
__n402["value"] := "lastIndexOf";
__n402["raw"] := "\"lastIndexOf\"";
__n398["property"] := __n402;
__n397["left"] := __n398;
__n403 := {  };
__n403["type"] := "FunctionExpression";
__n403["id"] := null;
__n404 := [ "array", "item", "equalsFunction" ];
__n403["params"] := __n404;
__n405 := {  };
__n405["type"] := "BlockStatement";
__n407 := {  };
__n407["type"] := "VariableDeclaration";
__n409 := {  };
__n409["type"] := "VariableDeclarator";
__n410 := {  };
__n410["type"] := "Identifier";
__n410["name"] := "equals";
__n409["id"] := __n410;
__n411 := {  };
__n411["type"] := "LogicalExpression";
__n411["operator"] := "||";
__n412 := {  };
__n412["type"] := "Identifier";
__n412["name"] := "equalsFunction";
__n411["left"] := __n412;
__n413 := {  };
__n413["type"] := "MemberExpression";
__n413["computed"] := true;
__n414 := {  };
__n414["type"] := "Identifier";
__n414["name"] := "buckets";
__n413["object"] := __n414;
__n415 := {  };
__n415["type"] := "Literal";
__n415["value"] := "defaultEquals";
__n415["raw"] := "\"defaultEquals\"";
__n413["property"] := __n415;
__n411["right"] := __n413;
__n409["init"] := __n411;
__n416 := {  };
__n416["type"] := "VariableDeclarator";
__n417 := {  };
__n417["type"] := "Identifier";
__n417["name"] := "length";
__n416["id"] := __n417;
__n418 := {  };
__n418["type"] := "MemberExpression";
__n418["computed"] := true;
__n419 := {  };
__n419["type"] := "Identifier";
__n419["name"] := "array";
__n418["object"] := __n419;
__n420 := {  };
__n420["type"] := "Literal";
__n420["value"] := "length";
__n420["raw"] := "\"length\"";
__n418["property"] := __n420;
__n416["init"] := __n418;
__n421 := {  };
__n421["type"] := "VariableDeclarator";
__n422 := {  };
__n422["type"] := "Identifier";
__n422["name"] := "i";
__n421["id"] := __n422;
__n421["init"] := null;
__n408 := [ __n409, __n416, __n421 ];
__n407["declarations"] := __n408;
__n407["kind"] := "var";
__n423 := {  };
__n423["type"] := "ForStatement";
__n424 := {  };
__n424["type"] := "AssignmentExpression";
__n424["operator"] := "=";
__n425 := {  };
__n425["type"] := "Identifier";
__n425["name"] := "i";
__n424["left"] := __n425;
__n426 := {  };
__n426["type"] := "BinaryExpression";
__n426["operator"] := "-";
__n427 := {  };
__n427["type"] := "Identifier";
__n427["name"] := "length";
__n426["left"] := __n427;
__n428 := {  };
__n428["type"] := "Literal";
__n428["value"] := 1.;
__n428["raw"] := "1";
__n426["right"] := __n428;
__n424["right"] := __n426;
__n423["init"] := __n424;
__n429 := {  };
__n429["type"] := "BinaryExpression";
__n429["operator"] := ">=";
__n430 := {  };
__n430["type"] := "Identifier";
__n430["name"] := "i";
__n429["left"] := __n430;
__n431 := {  };
__n431["type"] := "Literal";
__n431["value"] := 0.;
__n431["raw"] := "0";
__n429["right"] := __n431;
__n423["test"] := __n429;
__n432 := {  };
__n432["type"] := "AssignmentExpression";
__n432["operator"] := "-=";
__n433 := {  };
__n433["type"] := "Identifier";
__n433["name"] := "i";
__n432["left"] := __n433;
__n434 := {  };
__n434["type"] := "Literal";
__n434["value"] := 1.;
__n434["raw"] := "1";
__n432["right"] := __n434;
__n423["update"] := __n432;
__n435 := {  };
__n435["type"] := "BlockStatement";
__n437 := {  };
__n437["type"] := "IfStatement";
__n438 := {  };
__n438["type"] := "CallExpression";
__n439 := {  };
__n439["type"] := "Identifier";
__n439["name"] := "equals";
__n438["callee"] := __n439;
__n438["is_tail_call"] := 'undefined;
__n441 := {  };
__n441["type"] := "MemberExpression";
__n441["computed"] := true;
__n442 := {  };
__n442["type"] := "Identifier";
__n442["name"] := "array";
__n441["object"] := __n442;
__n443 := {  };
__n443["type"] := "Identifier";
__n443["name"] := "i";
__n441["property"] := __n443;
__n444 := {  };
__n444["type"] := "Identifier";
__n444["name"] := "item";
__n440 := [ __n441, __n444 ];
__n438["arguments"] := __n440;
__n437["test"] := __n438;
__n445 := {  };
__n445["type"] := "BlockStatement";
__n447 := {  };
__n447["type"] := "ReturnStatement";
__n448 := {  };
__n448["type"] := "Identifier";
__n448["name"] := "i";
__n447["argument"] := __n448;
__n446 := [ __n447 ];
__n445["body"] := __n446;
__n449 := [  ];
__n445["letDeclarations"] := __n449;
__n450 := [  ];
__n445["constDeclarations"] := __n450;
__n437["consequent"] := __n445;
__n437["alternate"] := null;
__n436 := [ __n437 ];
__n435["body"] := __n436;
__n451 := [  ];
__n435["letDeclarations"] := __n451;
__n452 := [  ];
__n435["constDeclarations"] := __n452;
__n423["body"] := __n435;
__n453 := {  };
__n453["type"] := "ReturnStatement";
__n454 := {  };
__n454["type"] := "UnaryExpression";
__n454["operator"] := "-";
__n455 := {  };
__n455["type"] := "Literal";
__n455["value"] := 1.;
__n455["raw"] := "1";
__n454["argument"] := __n455;
__n454["prefix"] := true;
__n453["argument"] := __n454;
__n406 := [ __n407, __n423, __n453 ];
__n405["body"] := __n406;
__n405["isSimpleParameterList"] := true;
__n456 := [ "equals", "length", "i" ];
__n405["variableDeclarations"] := __n456;
__n457 := [  ];
__n405["functionDeclarations"] := __n457;
__n458 := [  ];
__n405["letDeclarations"] := __n458;
__n459 := [  ];
__n405["constDeclarations"] := __n459;
__n405["containsExpression"] := false;
__n461 := {  };
__n461["type"] := "Identifier";
__n461["name"] := "array";
__n462 := {  };
__n462["type"] := "Identifier";
__n462["name"] := "item";
__n463 := {  };
__n463["type"] := "Identifier";
__n463["name"] := "equalsFunction";
__n460 := [ __n461, __n462, __n463 ];
__n405["paramsDetails"] := __n460;
__n464 := [ "array", "item", "equalsFunction" ];
__n405["paramsNames"] := __n464;
__n405["codeType"] := "function";
__n405["strict"] := false;
__n403["body"] := __n405;
__n403["generator"] := false;
__n403["async"] := false;
__n403["expression"] := false;
__n397["right"] := __n403;
__n396["expression"] := __n397;
__n465 := {  };
__n465["type"] := "ExpressionStatement";
__n466 := {  };
__n466["type"] := "AssignmentExpression";
__n466["operator"] := "=";
__n467 := {  };
__n467["type"] := "MemberExpression";
__n467["computed"] := true;
__n468 := {  };
__n468["type"] := "MemberExpression";
__n468["computed"] := true;
__n469 := {  };
__n469["type"] := "Identifier";
__n469["name"] := "buckets";
__n468["object"] := __n469;
__n470 := {  };
__n470["type"] := "Literal";
__n470["value"] := "arrays";
__n470["raw"] := "\"arrays\"";
__n468["property"] := __n470;
__n467["object"] := __n468;
__n471 := {  };
__n471["type"] := "Literal";
__n471["value"] := "contains";
__n471["raw"] := "\"contains\"";
__n467["property"] := __n471;
__n466["left"] := __n467;
__n472 := {  };
__n472["type"] := "FunctionExpression";
__n472["id"] := null;
__n473 := [ "array", "item", "equalsFunction" ];
__n472["params"] := __n473;
__n474 := {  };
__n474["type"] := "BlockStatement";
__n476 := {  };
__n476["type"] := "ReturnStatement";
__n477 := {  };
__n477["type"] := "BinaryExpression";
__n477["operator"] := ">=";
__n478 := {  };
__n478["type"] := "CallExpression";
__n479 := {  };
__n479["type"] := "MemberExpression";
__n479["computed"] := true;
__n480 := {  };
__n480["type"] := "MemberExpression";
__n480["computed"] := true;
__n481 := {  };
__n481["type"] := "Identifier";
__n481["name"] := "buckets";
__n480["object"] := __n481;
__n482 := {  };
__n482["type"] := "Literal";
__n482["value"] := "arrays";
__n482["raw"] := "\"arrays\"";
__n480["property"] := __n482;
__n479["object"] := __n480;
__n483 := {  };
__n483["type"] := "Literal";
__n483["value"] := "indexOf";
__n483["raw"] := "\"indexOf\"";
__n479["property"] := __n483;
__n478["callee"] := __n479;
__n478["is_tail_call"] := 'undefined;
__n485 := {  };
__n485["type"] := "Identifier";
__n485["name"] := "array";
__n486 := {  };
__n486["type"] := "Identifier";
__n486["name"] := "item";
__n487 := {  };
__n487["type"] := "Identifier";
__n487["name"] := "equalsFunction";
__n484 := [ __n485, __n486, __n487 ];
__n478["arguments"] := __n484;
__n477["left"] := __n478;
__n488 := {  };
__n488["type"] := "Literal";
__n488["value"] := 0.;
__n488["raw"] := "0";
__n477["right"] := __n488;
__n476["argument"] := __n477;
__n475 := [ __n476 ];
__n474["body"] := __n475;
__n474["isSimpleParameterList"] := true;
__n489 := [  ];
__n474["variableDeclarations"] := __n489;
__n490 := [  ];
__n474["functionDeclarations"] := __n490;
__n491 := [  ];
__n474["letDeclarations"] := __n491;
__n492 := [  ];
__n474["constDeclarations"] := __n492;
__n474["containsExpression"] := false;
__n494 := {  };
__n494["type"] := "Identifier";
__n494["name"] := "array";
__n495 := {  };
__n495["type"] := "Identifier";
__n495["name"] := "item";
__n496 := {  };
__n496["type"] := "Identifier";
__n496["name"] := "equalsFunction";
__n493 := [ __n494, __n495, __n496 ];
__n474["paramsDetails"] := __n493;
__n497 := [ "array", "item", "equalsFunction" ];
__n474["paramsNames"] := __n497;
__n474["codeType"] := "function";
__n474["strict"] := false;
__n472["body"] := __n474;
__n472["generator"] := false;
__n472["async"] := false;
__n472["expression"] := false;
__n466["right"] := __n472;
__n465["expression"] := __n466;
__n498 := {  };
__n498["type"] := "ExpressionStatement";
__n499 := {  };
__n499["type"] := "AssignmentExpression";
__n499["operator"] := "=";
__n500 := {  };
__n500["type"] := "MemberExpression";
__n500["computed"] := true;
__n501 := {  };
__n501["type"] := "MemberExpression";
__n501["computed"] := true;
__n502 := {  };
__n502["type"] := "Identifier";
__n502["name"] := "buckets";
__n501["object"] := __n502;
__n503 := {  };
__n503["type"] := "Literal";
__n503["value"] := "arrays";
__n503["raw"] := "\"arrays\"";
__n501["property"] := __n503;
__n500["object"] := __n501;
__n504 := {  };
__n504["type"] := "Literal";
__n504["value"] := "remove";
__n504["raw"] := "\"remove\"";
__n500["property"] := __n504;
__n499["left"] := __n500;
__n505 := {  };
__n505["type"] := "FunctionExpression";
__n505["id"] := null;
__n506 := [ "array", "item", "equalsFunction" ];
__n505["params"] := __n506;
__n507 := {  };
__n507["type"] := "BlockStatement";
__n509 := {  };
__n509["type"] := "VariableDeclaration";
__n511 := {  };
__n511["type"] := "VariableDeclarator";
__n512 := {  };
__n512["type"] := "Identifier";
__n512["name"] := "index";
__n511["id"] := __n512;
__n513 := {  };
__n513["type"] := "CallExpression";
__n514 := {  };
__n514["type"] := "MemberExpression";
__n514["computed"] := true;
__n515 := {  };
__n515["type"] := "MemberExpression";
__n515["computed"] := true;
__n516 := {  };
__n516["type"] := "Identifier";
__n516["name"] := "buckets";
__n515["object"] := __n516;
__n517 := {  };
__n517["type"] := "Literal";
__n517["value"] := "arrays";
__n517["raw"] := "\"arrays\"";
__n515["property"] := __n517;
__n514["object"] := __n515;
__n518 := {  };
__n518["type"] := "Literal";
__n518["value"] := "indexOf";
__n518["raw"] := "\"indexOf\"";
__n514["property"] := __n518;
__n513["callee"] := __n514;
__n513["is_tail_call"] := 'undefined;
__n520 := {  };
__n520["type"] := "Identifier";
__n520["name"] := "array";
__n521 := {  };
__n521["type"] := "Identifier";
__n521["name"] := "item";
__n522 := {  };
__n522["type"] := "Identifier";
__n522["name"] := "equalsFunction";
__n519 := [ __n520, __n521, __n522 ];
__n513["arguments"] := __n519;
__n511["init"] := __n513;
__n510 := [ __n511 ];
__n509["declarations"] := __n510;
__n509["kind"] := "var";
__n523 := {  };
__n523["type"] := "IfStatement";
__n524 := {  };
__n524["type"] := "BinaryExpression";
__n524["operator"] := "<";
__n525 := {  };
__n525["type"] := "Identifier";
__n525["name"] := "index";
__n524["left"] := __n525;
__n526 := {  };
__n526["type"] := "Literal";
__n526["value"] := 0.;
__n526["raw"] := "0";
__n524["right"] := __n526;
__n523["test"] := __n524;
__n527 := {  };
__n527["type"] := "BlockStatement";
__n529 := {  };
__n529["type"] := "ReturnStatement";
__n530 := {  };
__n530["type"] := "Literal";
__n530["value"] := false;
__n530["raw"] := "false";
__n529["argument"] := __n530;
__n528 := [ __n529 ];
__n527["body"] := __n528;
__n531 := [  ];
__n527["letDeclarations"] := __n531;
__n532 := [  ];
__n527["constDeclarations"] := __n532;
__n523["consequent"] := __n527;
__n523["alternate"] := null;
__n533 := {  };
__n533["type"] := "ExpressionStatement";
__n534 := {  };
__n534["type"] := "CallExpression";
__n535 := {  };
__n535["type"] := "MemberExpression";
__n535["computed"] := true;
__n536 := {  };
__n536["type"] := "Identifier";
__n536["name"] := "array";
__n535["object"] := __n536;
__n537 := {  };
__n537["type"] := "Literal";
__n537["value"] := "splice";
__n537["raw"] := "\"splice\"";
__n535["property"] := __n537;
__n534["callee"] := __n535;
__n534["is_tail_call"] := 'undefined;
__n539 := {  };
__n539["type"] := "Identifier";
__n539["name"] := "index";
__n540 := {  };
__n540["type"] := "Literal";
__n540["value"] := 1.;
__n540["raw"] := "1";
__n538 := [ __n539, __n540 ];
__n534["arguments"] := __n538;
__n533["expression"] := __n534;
__n541 := {  };
__n541["type"] := "ReturnStatement";
__n542 := {  };
__n542["type"] := "Literal";
__n542["value"] := true;
__n542["raw"] := "true";
__n541["argument"] := __n542;
__n508 := [ __n509, __n523, __n533, __n541 ];
__n507["body"] := __n508;
__n507["isSimpleParameterList"] := true;
__n543 := [ "index" ];
__n507["variableDeclarations"] := __n543;
__n544 := [  ];
__n507["functionDeclarations"] := __n544;
__n545 := [  ];
__n507["letDeclarations"] := __n545;
__n546 := [  ];
__n507["constDeclarations"] := __n546;
__n507["containsExpression"] := false;
__n548 := {  };
__n548["type"] := "Identifier";
__n548["name"] := "array";
__n549 := {  };
__n549["type"] := "Identifier";
__n549["name"] := "item";
__n550 := {  };
__n550["type"] := "Identifier";
__n550["name"] := "equalsFunction";
__n547 := [ __n548, __n549, __n550 ];
__n507["paramsDetails"] := __n547;
__n551 := [ "array", "item", "equalsFunction" ];
__n507["paramsNames"] := __n551;
__n507["codeType"] := "function";
__n507["strict"] := false;
__n505["body"] := __n507;
__n505["generator"] := false;
__n505["async"] := false;
__n505["expression"] := false;
__n499["right"] := __n505;
__n498["expression"] := __n499;
__n552 := {  };
__n552["type"] := "ExpressionStatement";
__n553 := {  };
__n553["type"] := "AssignmentExpression";
__n553["operator"] := "=";
__n554 := {  };
__n554["type"] := "MemberExpression";
__n554["computed"] := true;
__n555 := {  };
__n555["type"] := "MemberExpression";
__n555["computed"] := true;
__n556 := {  };
__n556["type"] := "Identifier";
__n556["name"] := "buckets";
__n555["object"] := __n556;
__n557 := {  };
__n557["type"] := "Literal";
__n557["value"] := "arrays";
__n557["raw"] := "\"arrays\"";
__n555["property"] := __n557;
__n554["object"] := __n555;
__n558 := {  };
__n558["type"] := "Literal";
__n558["value"] := "frequency";
__n558["raw"] := "\"frequency\"";
__n554["property"] := __n558;
__n553["left"] := __n554;
__n559 := {  };
__n559["type"] := "FunctionExpression";
__n559["id"] := null;
__n560 := [ "array", "item", "equalsFunction" ];
__n559["params"] := __n560;
__n561 := {  };
__n561["type"] := "BlockStatement";
__n563 := {  };
__n563["type"] := "VariableDeclaration";
__n565 := {  };
__n565["type"] := "VariableDeclarator";
__n566 := {  };
__n566["type"] := "Identifier";
__n566["name"] := "equals";
__n565["id"] := __n566;
__n567 := {  };
__n567["type"] := "LogicalExpression";
__n567["operator"] := "||";
__n568 := {  };
__n568["type"] := "Identifier";
__n568["name"] := "equalsFunction";
__n567["left"] := __n568;
__n569 := {  };
__n569["type"] := "MemberExpression";
__n569["computed"] := true;
__n570 := {  };
__n570["type"] := "Identifier";
__n570["name"] := "buckets";
__n569["object"] := __n570;
__n571 := {  };
__n571["type"] := "Literal";
__n571["value"] := "defaultEquals";
__n571["raw"] := "\"defaultEquals\"";
__n569["property"] := __n571;
__n567["right"] := __n569;
__n565["init"] := __n567;
__n572 := {  };
__n572["type"] := "VariableDeclarator";
__n573 := {  };
__n573["type"] := "Identifier";
__n573["name"] := "length";
__n572["id"] := __n573;
__n574 := {  };
__n574["type"] := "MemberExpression";
__n574["computed"] := true;
__n575 := {  };
__n575["type"] := "Identifier";
__n575["name"] := "array";
__n574["object"] := __n575;
__n576 := {  };
__n576["type"] := "Literal";
__n576["value"] := "length";
__n576["raw"] := "\"length\"";
__n574["property"] := __n576;
__n572["init"] := __n574;
__n577 := {  };
__n577["type"] := "VariableDeclarator";
__n578 := {  };
__n578["type"] := "Identifier";
__n578["name"] := "freq";
__n577["id"] := __n578;
__n579 := {  };
__n579["type"] := "Literal";
__n579["value"] := 0.;
__n579["raw"] := "0";
__n577["init"] := __n579;
__n580 := {  };
__n580["type"] := "VariableDeclarator";
__n581 := {  };
__n581["type"] := "Identifier";
__n581["name"] := "i";
__n580["id"] := __n581;
__n580["init"] := null;
__n564 := [ __n565, __n572, __n577, __n580 ];
__n563["declarations"] := __n564;
__n563["kind"] := "var";
__n582 := {  };
__n582["type"] := "ForStatement";
__n583 := {  };
__n583["type"] := "AssignmentExpression";
__n583["operator"] := "=";
__n584 := {  };
__n584["type"] := "Identifier";
__n584["name"] := "i";
__n583["left"] := __n584;
__n585 := {  };
__n585["type"] := "Literal";
__n585["value"] := 0.;
__n585["raw"] := "0";
__n583["right"] := __n585;
__n582["init"] := __n583;
__n586 := {  };
__n586["type"] := "BinaryExpression";
__n586["operator"] := "<";
__n587 := {  };
__n587["type"] := "Identifier";
__n587["name"] := "i";
__n586["left"] := __n587;
__n588 := {  };
__n588["type"] := "Identifier";
__n588["name"] := "length";
__n586["right"] := __n588;
__n582["test"] := __n586;
__n589 := {  };
__n589["type"] := "AssignmentExpression";
__n589["operator"] := "+=";
__n590 := {  };
__n590["type"] := "Identifier";
__n590["name"] := "i";
__n589["left"] := __n590;
__n591 := {  };
__n591["type"] := "Literal";
__n591["value"] := 1.;
__n591["raw"] := "1";
__n589["right"] := __n591;
__n582["update"] := __n589;
__n592 := {  };
__n592["type"] := "BlockStatement";
__n594 := {  };
__n594["type"] := "IfStatement";
__n595 := {  };
__n595["type"] := "CallExpression";
__n596 := {  };
__n596["type"] := "Identifier";
__n596["name"] := "equals";
__n595["callee"] := __n596;
__n595["is_tail_call"] := 'undefined;
__n598 := {  };
__n598["type"] := "MemberExpression";
__n598["computed"] := true;
__n599 := {  };
__n599["type"] := "Identifier";
__n599["name"] := "array";
__n598["object"] := __n599;
__n600 := {  };
__n600["type"] := "Identifier";
__n600["name"] := "i";
__n598["property"] := __n600;
__n601 := {  };
__n601["type"] := "Identifier";
__n601["name"] := "item";
__n597 := [ __n598, __n601 ];
__n595["arguments"] := __n597;
__n594["test"] := __n595;
__n602 := {  };
__n602["type"] := "BlockStatement";
__n604 := {  };
__n604["type"] := "ExpressionStatement";
__n605 := {  };
__n605["type"] := "AssignmentExpression";
__n605["operator"] := "+=";
__n606 := {  };
__n606["type"] := "Identifier";
__n606["name"] := "freq";
__n605["left"] := __n606;
__n607 := {  };
__n607["type"] := "Literal";
__n607["value"] := 1.;
__n607["raw"] := "1";
__n605["right"] := __n607;
__n604["expression"] := __n605;
__n603 := [ __n604 ];
__n602["body"] := __n603;
__n608 := [  ];
__n602["letDeclarations"] := __n608;
__n609 := [  ];
__n602["constDeclarations"] := __n609;
__n594["consequent"] := __n602;
__n594["alternate"] := null;
__n593 := [ __n594 ];
__n592["body"] := __n593;
__n610 := [  ];
__n592["letDeclarations"] := __n610;
__n611 := [  ];
__n592["constDeclarations"] := __n611;
__n582["body"] := __n592;
__n612 := {  };
__n612["type"] := "ReturnStatement";
__n613 := {  };
__n613["type"] := "Identifier";
__n613["name"] := "freq";
__n612["argument"] := __n613;
__n562 := [ __n563, __n582, __n612 ];
__n561["body"] := __n562;
__n561["isSimpleParameterList"] := true;
__n614 := [ "equals", "length", "freq", "i" ];
__n561["variableDeclarations"] := __n614;
__n615 := [  ];
__n561["functionDeclarations"] := __n615;
__n616 := [  ];
__n561["letDeclarations"] := __n616;
__n617 := [  ];
__n561["constDeclarations"] := __n617;
__n561["containsExpression"] := false;
__n619 := {  };
__n619["type"] := "Identifier";
__n619["name"] := "array";
__n620 := {  };
__n620["type"] := "Identifier";
__n620["name"] := "item";
__n621 := {  };
__n621["type"] := "Identifier";
__n621["name"] := "equalsFunction";
__n618 := [ __n619, __n620, __n621 ];
__n561["paramsDetails"] := __n618;
__n622 := [ "array", "item", "equalsFunction" ];
__n561["paramsNames"] := __n622;
__n561["codeType"] := "function";
__n561["strict"] := false;
__n559["body"] := __n561;
__n559["generator"] := false;
__n559["async"] := false;
__n559["expression"] := false;
__n553["right"] := __n559;
__n552["expression"] := __n553;
__n623 := {  };
__n623["type"] := "ExpressionStatement";
__n624 := {  };
__n624["type"] := "AssignmentExpression";
__n624["operator"] := "=";
__n625 := {  };
__n625["type"] := "MemberExpression";
__n625["computed"] := true;
__n626 := {  };
__n626["type"] := "MemberExpression";
__n626["computed"] := true;
__n627 := {  };
__n627["type"] := "Identifier";
__n627["name"] := "buckets";
__n626["object"] := __n627;
__n628 := {  };
__n628["type"] := "Literal";
__n628["value"] := "arrays";
__n628["raw"] := "\"arrays\"";
__n626["property"] := __n628;
__n625["object"] := __n626;
__n629 := {  };
__n629["type"] := "Literal";
__n629["value"] := "equals";
__n629["raw"] := "\"equals\"";
__n625["property"] := __n629;
__n624["left"] := __n625;
__n630 := {  };
__n630["type"] := "FunctionExpression";
__n630["id"] := null;
__n631 := [ "array1", "array2", "equalsFunction" ];
__n630["params"] := __n631;
__n632 := {  };
__n632["type"] := "BlockStatement";
__n634 := {  };
__n634["type"] := "VariableDeclaration";
__n636 := {  };
__n636["type"] := "VariableDeclarator";
__n637 := {  };
__n637["type"] := "Identifier";
__n637["name"] := "equals";
__n636["id"] := __n637;
__n638 := {  };
__n638["type"] := "LogicalExpression";
__n638["operator"] := "||";
__n639 := {  };
__n639["type"] := "Identifier";
__n639["name"] := "equalsFunction";
__n638["left"] := __n639;
__n640 := {  };
__n640["type"] := "MemberExpression";
__n640["computed"] := true;
__n641 := {  };
__n641["type"] := "Identifier";
__n641["name"] := "buckets";
__n640["object"] := __n641;
__n642 := {  };
__n642["type"] := "Literal";
__n642["value"] := "defaultEquals";
__n642["raw"] := "\"defaultEquals\"";
__n640["property"] := __n642;
__n638["right"] := __n640;
__n636["init"] := __n638;
__n643 := {  };
__n643["type"] := "VariableDeclarator";
__n644 := {  };
__n644["type"] := "Identifier";
__n644["name"] := "length";
__n643["id"] := __n644;
__n645 := {  };
__n645["type"] := "MemberExpression";
__n645["computed"] := true;
__n646 := {  };
__n646["type"] := "Identifier";
__n646["name"] := "array1";
__n645["object"] := __n646;
__n647 := {  };
__n647["type"] := "Literal";
__n647["value"] := "length";
__n647["raw"] := "\"length\"";
__n645["property"] := __n647;
__n643["init"] := __n645;
__n648 := {  };
__n648["type"] := "VariableDeclarator";
__n649 := {  };
__n649["type"] := "Identifier";
__n649["name"] := "i";
__n648["id"] := __n649;
__n648["init"] := null;
__n635 := [ __n636, __n643, __n648 ];
__n634["declarations"] := __n635;
__n634["kind"] := "var";
__n650 := {  };
__n650["type"] := "IfStatement";
__n651 := {  };
__n651["type"] := "BinaryExpression";
__n651["operator"] := "!==";
__n652 := {  };
__n652["type"] := "MemberExpression";
__n652["computed"] := true;
__n653 := {  };
__n653["type"] := "Identifier";
__n653["name"] := "array1";
__n652["object"] := __n653;
__n654 := {  };
__n654["type"] := "Literal";
__n654["value"] := "length";
__n654["raw"] := "\"length\"";
__n652["property"] := __n654;
__n651["left"] := __n652;
__n655 := {  };
__n655["type"] := "MemberExpression";
__n655["computed"] := true;
__n656 := {  };
__n656["type"] := "Identifier";
__n656["name"] := "array2";
__n655["object"] := __n656;
__n657 := {  };
__n657["type"] := "Literal";
__n657["value"] := "length";
__n657["raw"] := "\"length\"";
__n655["property"] := __n657;
__n651["right"] := __n655;
__n650["test"] := __n651;
__n658 := {  };
__n658["type"] := "BlockStatement";
__n660 := {  };
__n660["type"] := "ReturnStatement";
__n661 := {  };
__n661["type"] := "Literal";
__n661["value"] := false;
__n661["raw"] := "false";
__n660["argument"] := __n661;
__n659 := [ __n660 ];
__n658["body"] := __n659;
__n662 := [  ];
__n658["letDeclarations"] := __n662;
__n663 := [  ];
__n658["constDeclarations"] := __n663;
__n650["consequent"] := __n658;
__n650["alternate"] := null;
__n664 := {  };
__n664["type"] := "ForStatement";
__n665 := {  };
__n665["type"] := "AssignmentExpression";
__n665["operator"] := "=";
__n666 := {  };
__n666["type"] := "Identifier";
__n666["name"] := "i";
__n665["left"] := __n666;
__n667 := {  };
__n667["type"] := "Literal";
__n667["value"] := 0.;
__n667["raw"] := "0";
__n665["right"] := __n667;
__n664["init"] := __n665;
__n668 := {  };
__n668["type"] := "BinaryExpression";
__n668["operator"] := "<";
__n669 := {  };
__n669["type"] := "Identifier";
__n669["name"] := "i";
__n668["left"] := __n669;
__n670 := {  };
__n670["type"] := "Identifier";
__n670["name"] := "length";
__n668["right"] := __n670;
__n664["test"] := __n668;
__n671 := {  };
__n671["type"] := "AssignmentExpression";
__n671["operator"] := "+=";
__n672 := {  };
__n672["type"] := "Identifier";
__n672["name"] := "i";
__n671["left"] := __n672;
__n673 := {  };
__n673["type"] := "Literal";
__n673["value"] := 1.;
__n673["raw"] := "1";
__n671["right"] := __n673;
__n664["update"] := __n671;
__n674 := {  };
__n674["type"] := "BlockStatement";
__n676 := {  };
__n676["type"] := "IfStatement";
__n677 := {  };
__n677["type"] := "UnaryExpression";
__n677["operator"] := "!";
__n678 := {  };
__n678["type"] := "CallExpression";
__n679 := {  };
__n679["type"] := "Identifier";
__n679["name"] := "equals";
__n678["callee"] := __n679;
__n678["is_tail_call"] := 'undefined;
__n681 := {  };
__n681["type"] := "MemberExpression";
__n681["computed"] := true;
__n682 := {  };
__n682["type"] := "Identifier";
__n682["name"] := "array1";
__n681["object"] := __n682;
__n683 := {  };
__n683["type"] := "Identifier";
__n683["name"] := "i";
__n681["property"] := __n683;
__n684 := {  };
__n684["type"] := "MemberExpression";
__n684["computed"] := true;
__n685 := {  };
__n685["type"] := "Identifier";
__n685["name"] := "array2";
__n684["object"] := __n685;
__n686 := {  };
__n686["type"] := "Identifier";
__n686["name"] := "i";
__n684["property"] := __n686;
__n680 := [ __n681, __n684 ];
__n678["arguments"] := __n680;
__n677["argument"] := __n678;
__n677["prefix"] := true;
__n676["test"] := __n677;
__n687 := {  };
__n687["type"] := "BlockStatement";
__n689 := {  };
__n689["type"] := "ReturnStatement";
__n690 := {  };
__n690["type"] := "Literal";
__n690["value"] := false;
__n690["raw"] := "false";
__n689["argument"] := __n690;
__n688 := [ __n689 ];
__n687["body"] := __n688;
__n691 := [  ];
__n687["letDeclarations"] := __n691;
__n692 := [  ];
__n687["constDeclarations"] := __n692;
__n676["consequent"] := __n687;
__n676["alternate"] := null;
__n675 := [ __n676 ];
__n674["body"] := __n675;
__n693 := [  ];
__n674["letDeclarations"] := __n693;
__n694 := [  ];
__n674["constDeclarations"] := __n694;
__n664["body"] := __n674;
__n695 := {  };
__n695["type"] := "ReturnStatement";
__n696 := {  };
__n696["type"] := "Literal";
__n696["value"] := true;
__n696["raw"] := "true";
__n695["argument"] := __n696;
__n633 := [ __n634, __n650, __n664, __n695 ];
__n632["body"] := __n633;
__n632["isSimpleParameterList"] := true;
__n697 := [ "equals", "length", "i" ];
__n632["variableDeclarations"] := __n697;
__n698 := [  ];
__n632["functionDeclarations"] := __n698;
__n699 := [  ];
__n632["letDeclarations"] := __n699;
__n700 := [  ];
__n632["constDeclarations"] := __n700;
__n632["containsExpression"] := false;
__n702 := {  };
__n702["type"] := "Identifier";
__n702["name"] := "array1";
__n703 := {  };
__n703["type"] := "Identifier";
__n703["name"] := "array2";
__n704 := {  };
__n704["type"] := "Identifier";
__n704["name"] := "equalsFunction";
__n701 := [ __n702, __n703, __n704 ];
__n632["paramsDetails"] := __n701;
__n705 := [ "array1", "array2", "equalsFunction" ];
__n632["paramsNames"] := __n705;
__n632["codeType"] := "function";
__n632["strict"] := false;
__n630["body"] := __n632;
__n630["generator"] := false;
__n630["async"] := false;
__n630["expression"] := false;
__n624["right"] := __n630;
__n623["expression"] := __n624;
__n706 := {  };
__n706["type"] := "ExpressionStatement";
__n707 := {  };
__n707["type"] := "AssignmentExpression";
__n707["operator"] := "=";
__n708 := {  };
__n708["type"] := "MemberExpression";
__n708["computed"] := true;
__n709 := {  };
__n709["type"] := "MemberExpression";
__n709["computed"] := true;
__n710 := {  };
__n710["type"] := "Identifier";
__n710["name"] := "buckets";
__n709["object"] := __n710;
__n711 := {  };
__n711["type"] := "Literal";
__n711["value"] := "arrays";
__n711["raw"] := "\"arrays\"";
__n709["property"] := __n711;
__n708["object"] := __n709;
__n712 := {  };
__n712["type"] := "Literal";
__n712["value"] := "copy";
__n712["raw"] := "\"copy\"";
__n708["property"] := __n712;
__n707["left"] := __n708;
__n713 := {  };
__n713["type"] := "FunctionExpression";
__n713["id"] := null;
__n714 := [ "array" ];
__n713["params"] := __n714;
__n715 := {  };
__n715["type"] := "BlockStatement";
__n717 := {  };
__n717["type"] := "ReturnStatement";
__n718 := {  };
__n718["type"] := "CallExpression";
__n719 := {  };
__n719["type"] := "MemberExpression";
__n719["computed"] := true;
__n720 := {  };
__n720["type"] := "Identifier";
__n720["name"] := "array";
__n719["object"] := __n720;
__n721 := {  };
__n721["type"] := "Literal";
__n721["value"] := "concat";
__n721["raw"] := "\"concat\"";
__n719["property"] := __n721;
__n718["callee"] := __n719;
__n718["is_tail_call"] := true;
__n722 := [  ];
__n718["arguments"] := __n722;
__n717["argument"] := __n718;
__n716 := [ __n717 ];
__n715["body"] := __n716;
__n715["isSimpleParameterList"] := true;
__n723 := [  ];
__n715["variableDeclarations"] := __n723;
__n724 := [  ];
__n715["functionDeclarations"] := __n724;
__n725 := [  ];
__n715["letDeclarations"] := __n725;
__n726 := [  ];
__n715["constDeclarations"] := __n726;
__n715["containsExpression"] := false;
__n728 := {  };
__n728["type"] := "Identifier";
__n728["name"] := "array";
__n727 := [ __n728 ];
__n715["paramsDetails"] := __n727;
__n729 := [ "array" ];
__n715["paramsNames"] := __n729;
__n715["codeType"] := "function";
__n715["strict"] := false;
__n713["body"] := __n715;
__n713["generator"] := false;
__n713["async"] := false;
__n713["expression"] := false;
__n707["right"] := __n713;
__n706["expression"] := __n707;
__n730 := {  };
__n730["type"] := "ExpressionStatement";
__n731 := {  };
__n731["type"] := "AssignmentExpression";
__n731["operator"] := "=";
__n732 := {  };
__n732["type"] := "MemberExpression";
__n732["computed"] := true;
__n733 := {  };
__n733["type"] := "MemberExpression";
__n733["computed"] := true;
__n734 := {  };
__n734["type"] := "Identifier";
__n734["name"] := "buckets";
__n733["object"] := __n734;
__n735 := {  };
__n735["type"] := "Literal";
__n735["value"] := "arrays";
__n735["raw"] := "\"arrays\"";
__n733["property"] := __n735;
__n732["object"] := __n733;
__n736 := {  };
__n736["type"] := "Literal";
__n736["value"] := "swap";
__n736["raw"] := "\"swap\"";
__n732["property"] := __n736;
__n731["left"] := __n732;
__n737 := {  };
__n737["type"] := "FunctionExpression";
__n737["id"] := null;
__n738 := [ "array", "i", "j" ];
__n737["params"] := __n738;
__n739 := {  };
__n739["type"] := "BlockStatement";
__n741 := {  };
__n741["type"] := "VariableDeclaration";
__n743 := {  };
__n743["type"] := "VariableDeclarator";
__n744 := {  };
__n744["type"] := "Identifier";
__n744["name"] := "temp";
__n743["id"] := __n744;
__n743["init"] := null;
__n742 := [ __n743 ];
__n741["declarations"] := __n742;
__n741["kind"] := "var";
__n745 := {  };
__n745["type"] := "IfStatement";
__n746 := {  };
__n746["type"] := "LogicalExpression";
__n746["operator"] := "||";
__n747 := {  };
__n747["type"] := "LogicalExpression";
__n747["operator"] := "||";
__n748 := {  };
__n748["type"] := "LogicalExpression";
__n748["operator"] := "||";
__n749 := {  };
__n749["type"] := "BinaryExpression";
__n749["operator"] := "<";
__n750 := {  };
__n750["type"] := "Identifier";
__n750["name"] := "i";
__n749["left"] := __n750;
__n751 := {  };
__n751["type"] := "Literal";
__n751["value"] := 0.;
__n751["raw"] := "0";
__n749["right"] := __n751;
__n748["left"] := __n749;
__n752 := {  };
__n752["type"] := "BinaryExpression";
__n752["operator"] := ">=";
__n753 := {  };
__n753["type"] := "Identifier";
__n753["name"] := "i";
__n752["left"] := __n753;
__n754 := {  };
__n754["type"] := "MemberExpression";
__n754["computed"] := true;
__n755 := {  };
__n755["type"] := "Identifier";
__n755["name"] := "array";
__n754["object"] := __n755;
__n756 := {  };
__n756["type"] := "Literal";
__n756["value"] := "length";
__n756["raw"] := "\"length\"";
__n754["property"] := __n756;
__n752["right"] := __n754;
__n748["right"] := __n752;
__n747["left"] := __n748;
__n757 := {  };
__n757["type"] := "BinaryExpression";
__n757["operator"] := "<";
__n758 := {  };
__n758["type"] := "Identifier";
__n758["name"] := "j";
__n757["left"] := __n758;
__n759 := {  };
__n759["type"] := "Literal";
__n759["value"] := 0.;
__n759["raw"] := "0";
__n757["right"] := __n759;
__n747["right"] := __n757;
__n746["left"] := __n747;
__n760 := {  };
__n760["type"] := "BinaryExpression";
__n760["operator"] := ">=";
__n761 := {  };
__n761["type"] := "Identifier";
__n761["name"] := "j";
__n760["left"] := __n761;
__n762 := {  };
__n762["type"] := "MemberExpression";
__n762["computed"] := true;
__n763 := {  };
__n763["type"] := "Identifier";
__n763["name"] := "array";
__n762["object"] := __n763;
__n764 := {  };
__n764["type"] := "Literal";
__n764["value"] := "length";
__n764["raw"] := "\"length\"";
__n762["property"] := __n764;
__n760["right"] := __n762;
__n746["right"] := __n760;
__n745["test"] := __n746;
__n765 := {  };
__n765["type"] := "BlockStatement";
__n767 := {  };
__n767["type"] := "ReturnStatement";
__n768 := {  };
__n768["type"] := "Literal";
__n768["value"] := false;
__n768["raw"] := "false";
__n767["argument"] := __n768;
__n766 := [ __n767 ];
__n765["body"] := __n766;
__n769 := [  ];
__n765["letDeclarations"] := __n769;
__n770 := [  ];
__n765["constDeclarations"] := __n770;
__n745["consequent"] := __n765;
__n745["alternate"] := null;
__n771 := {  };
__n771["type"] := "ExpressionStatement";
__n772 := {  };
__n772["type"] := "AssignmentExpression";
__n772["operator"] := "=";
__n773 := {  };
__n773["type"] := "Identifier";
__n773["name"] := "temp";
__n772["left"] := __n773;
__n774 := {  };
__n774["type"] := "MemberExpression";
__n774["computed"] := true;
__n775 := {  };
__n775["type"] := "Identifier";
__n775["name"] := "array";
__n774["object"] := __n775;
__n776 := {  };
__n776["type"] := "Identifier";
__n776["name"] := "i";
__n774["property"] := __n776;
__n772["right"] := __n774;
__n771["expression"] := __n772;
__n777 := {  };
__n777["type"] := "ExpressionStatement";
__n778 := {  };
__n778["type"] := "AssignmentExpression";
__n778["operator"] := "=";
__n779 := {  };
__n779["type"] := "MemberExpression";
__n779["computed"] := true;
__n780 := {  };
__n780["type"] := "Identifier";
__n780["name"] := "array";
__n779["object"] := __n780;
__n781 := {  };
__n781["type"] := "Identifier";
__n781["name"] := "i";
__n779["property"] := __n781;
__n778["left"] := __n779;
__n782 := {  };
__n782["type"] := "MemberExpression";
__n782["computed"] := true;
__n783 := {  };
__n783["type"] := "Identifier";
__n783["name"] := "array";
__n782["object"] := __n783;
__n784 := {  };
__n784["type"] := "Identifier";
__n784["name"] := "j";
__n782["property"] := __n784;
__n778["right"] := __n782;
__n777["expression"] := __n778;
__n785 := {  };
__n785["type"] := "ExpressionStatement";
__n786 := {  };
__n786["type"] := "AssignmentExpression";
__n786["operator"] := "=";
__n787 := {  };
__n787["type"] := "MemberExpression";
__n787["computed"] := true;
__n788 := {  };
__n788["type"] := "Identifier";
__n788["name"] := "array";
__n787["object"] := __n788;
__n789 := {  };
__n789["type"] := "Identifier";
__n789["name"] := "j";
__n787["property"] := __n789;
__n786["left"] := __n787;
__n790 := {  };
__n790["type"] := "Identifier";
__n790["name"] := "temp";
__n786["right"] := __n790;
__n785["expression"] := __n786;
__n791 := {  };
__n791["type"] := "ReturnStatement";
__n792 := {  };
__n792["type"] := "Literal";
__n792["value"] := true;
__n792["raw"] := "true";
__n791["argument"] := __n792;
__n740 := [ __n741, __n745, __n771, __n777, __n785, __n791 ];
__n739["body"] := __n740;
__n739["isSimpleParameterList"] := true;
__n793 := [ "temp" ];
__n739["variableDeclarations"] := __n793;
__n794 := [  ];
__n739["functionDeclarations"] := __n794;
__n795 := [  ];
__n739["letDeclarations"] := __n795;
__n796 := [  ];
__n739["constDeclarations"] := __n796;
__n739["containsExpression"] := false;
__n798 := {  };
__n798["type"] := "Identifier";
__n798["name"] := "array";
__n799 := {  };
__n799["type"] := "Identifier";
__n799["name"] := "i";
__n800 := {  };
__n800["type"] := "Identifier";
__n800["name"] := "j";
__n797 := [ __n798, __n799, __n800 ];
__n739["paramsDetails"] := __n797;
__n801 := [ "array", "i", "j" ];
__n739["paramsNames"] := __n801;
__n739["codeType"] := "function";
__n739["strict"] := false;
__n737["body"] := __n739;
__n737["generator"] := false;
__n737["async"] := false;
__n737["expression"] := false;
__n731["right"] := __n737;
__n730["expression"] := __n731;
__n802 := {  };
__n802["type"] := "ExpressionStatement";
__n803 := {  };
__n803["type"] := "AssignmentExpression";
__n803["operator"] := "=";
__n804 := {  };
__n804["type"] := "MemberExpression";
__n804["computed"] := true;
__n805 := {  };
__n805["type"] := "MemberExpression";
__n805["computed"] := true;
__n806 := {  };
__n806["type"] := "Identifier";
__n806["name"] := "buckets";
__n805["object"] := __n806;
__n807 := {  };
__n807["type"] := "Literal";
__n807["value"] := "arrays";
__n807["raw"] := "\"arrays\"";
__n805["property"] := __n807;
__n804["object"] := __n805;
__n808 := {  };
__n808["type"] := "Literal";
__n808["value"] := "forEach";
__n808["raw"] := "\"forEach\"";
__n804["property"] := __n808;
__n803["left"] := __n804;
__n809 := {  };
__n809["type"] := "FunctionExpression";
__n809["id"] := null;
__n810 := [ "array", "callback" ];
__n809["params"] := __n810;
__n811 := {  };
__n811["type"] := "BlockStatement";
__n813 := {  };
__n813["type"] := "VariableDeclaration";
__n815 := {  };
__n815["type"] := "VariableDeclarator";
__n816 := {  };
__n816["type"] := "Identifier";
__n816["name"] := "lenght";
__n815["id"] := __n816;
__n817 := {  };
__n817["type"] := "MemberExpression";
__n817["computed"] := true;
__n818 := {  };
__n818["type"] := "Identifier";
__n818["name"] := "array";
__n817["object"] := __n818;
__n819 := {  };
__n819["type"] := "Literal";
__n819["value"] := "length";
__n819["raw"] := "\"length\"";
__n817["property"] := __n819;
__n815["init"] := __n817;
__n820 := {  };
__n820["type"] := "VariableDeclarator";
__n821 := {  };
__n821["type"] := "Identifier";
__n821["name"] := "i";
__n820["id"] := __n821;
__n820["init"] := null;
__n814 := [ __n815, __n820 ];
__n813["declarations"] := __n814;
__n813["kind"] := "var";
__n822 := {  };
__n822["type"] := "ForStatement";
__n823 := {  };
__n823["type"] := "AssignmentExpression";
__n823["operator"] := "=";
__n824 := {  };
__n824["type"] := "Identifier";
__n824["name"] := "i";
__n823["left"] := __n824;
__n825 := {  };
__n825["type"] := "Literal";
__n825["value"] := 0.;
__n825["raw"] := "0";
__n823["right"] := __n825;
__n822["init"] := __n823;
__n826 := {  };
__n826["type"] := "BinaryExpression";
__n826["operator"] := "<";
__n827 := {  };
__n827["type"] := "Identifier";
__n827["name"] := "i";
__n826["left"] := __n827;
__n828 := {  };
__n828["type"] := "Identifier";
__n828["name"] := "lenght";
__n826["right"] := __n828;
__n822["test"] := __n826;
__n829 := {  };
__n829["type"] := "AssignmentExpression";
__n829["operator"] := "+=";
__n830 := {  };
__n830["type"] := "Identifier";
__n830["name"] := "i";
__n829["left"] := __n830;
__n831 := {  };
__n831["type"] := "Literal";
__n831["value"] := 1.;
__n831["raw"] := "1";
__n829["right"] := __n831;
__n822["update"] := __n829;
__n832 := {  };
__n832["type"] := "BlockStatement";
__n834 := {  };
__n834["type"] := "IfStatement";
__n835 := {  };
__n835["type"] := "BinaryExpression";
__n835["operator"] := "===";
__n836 := {  };
__n836["type"] := "CallExpression";
__n837 := {  };
__n837["type"] := "Identifier";
__n837["name"] := "callback";
__n836["callee"] := __n837;
__n836["is_tail_call"] := 'undefined;
__n839 := {  };
__n839["type"] := "MemberExpression";
__n839["computed"] := true;
__n840 := {  };
__n840["type"] := "Identifier";
__n840["name"] := "array";
__n839["object"] := __n840;
__n841 := {  };
__n841["type"] := "Identifier";
__n841["name"] := "i";
__n839["property"] := __n841;
__n838 := [ __n839 ];
__n836["arguments"] := __n838;
__n835["left"] := __n836;
__n842 := {  };
__n842["type"] := "Literal";
__n842["value"] := false;
__n842["raw"] := "false";
__n835["right"] := __n842;
__n834["test"] := __n835;
__n843 := {  };
__n843["type"] := "BlockStatement";
__n845 := {  };
__n845["type"] := "ReturnStatement";
__n845["argument"] := null;
__n844 := [ __n845 ];
__n843["body"] := __n844;
__n846 := [  ];
__n843["letDeclarations"] := __n846;
__n847 := [  ];
__n843["constDeclarations"] := __n847;
__n834["consequent"] := __n843;
__n834["alternate"] := null;
__n833 := [ __n834 ];
__n832["body"] := __n833;
__n848 := [  ];
__n832["letDeclarations"] := __n848;
__n849 := [  ];
__n832["constDeclarations"] := __n849;
__n822["body"] := __n832;
__n812 := [ __n813, __n822 ];
__n811["body"] := __n812;
__n811["isSimpleParameterList"] := true;
__n850 := [ "lenght", "i" ];
__n811["variableDeclarations"] := __n850;
__n851 := [  ];
__n811["functionDeclarations"] := __n851;
__n852 := [  ];
__n811["letDeclarations"] := __n852;
__n853 := [  ];
__n811["constDeclarations"] := __n853;
__n811["containsExpression"] := false;
__n855 := {  };
__n855["type"] := "Identifier";
__n855["name"] := "array";
__n856 := {  };
__n856["type"] := "Identifier";
__n856["name"] := "callback";
__n854 := [ __n855, __n856 ];
__n811["paramsDetails"] := __n854;
__n857 := [ "array", "callback" ];
__n811["paramsNames"] := __n857;
__n811["codeType"] := "function";
__n811["strict"] := false;
__n809["body"] := __n811;
__n809["generator"] := false;
__n809["async"] := false;
__n809["expression"] := false;
__n803["right"] := __n809;
__n802["expression"] := __n803;
__n858 := {  };
__n858["type"] := "VariableDeclaration";
__n860 := {  };
__n860["type"] := "VariableDeclarator";
__n861 := {  };
__n861["type"] := "Identifier";
__n861["name"] := "n1";
__n860["id"] := __n861;
__n862 := {  };
__n862["type"] := "CallExpression";
__n863 := {  };
__n863["type"] := "MemberExpression";
__n863["computed"] := true;
__n864 := {  };
__n864["type"] := "Identifier";
__n864["name"] := "esl_symbolic";
__n863["object"] := __n864;
__n865 := {  };
__n865["type"] := "Literal";
__n865["value"] := "number";
__n865["raw"] := "\"number\"";
__n863["property"] := __n865;
__n862["callee"] := __n863;
__n862["is_tail_call"] := 'undefined;
__n867 := {  };
__n867["type"] := "Literal";
__n867["value"] := "n1";
__n867["raw"] := "\"n1\"";
__n866 := [ __n867 ];
__n862["arguments"] := __n866;
__n860["init"] := __n862;
__n859 := [ __n860 ];
__n858["declarations"] := __n859;
__n858["kind"] := "var";
__n868 := {  };
__n868["type"] := "VariableDeclaration";
__n870 := {  };
__n870["type"] := "VariableDeclarator";
__n871 := {  };
__n871["type"] := "Identifier";
__n871["name"] := "n2";
__n870["id"] := __n871;
__n872 := {  };
__n872["type"] := "CallExpression";
__n873 := {  };
__n873["type"] := "MemberExpression";
__n873["computed"] := true;
__n874 := {  };
__n874["type"] := "Identifier";
__n874["name"] := "esl_symbolic";
__n873["object"] := __n874;
__n875 := {  };
__n875["type"] := "Literal";
__n875["value"] := "number";
__n875["raw"] := "\"number\"";
__n873["property"] := __n875;
__n872["callee"] := __n873;
__n872["is_tail_call"] := 'undefined;
__n877 := {  };
__n877["type"] := "Literal";
__n877["value"] := "n2";
__n877["raw"] := "\"n2\"";
__n876 := [ __n877 ];
__n872["arguments"] := __n876;
__n870["init"] := __n872;
__n869 := [ __n870 ];
__n868["declarations"] := __n869;
__n868["kind"] := "var";
__n878 := {  };
__n878["type"] := "VariableDeclaration";
__n880 := {  };
__n880["type"] := "VariableDeclarator";
__n881 := {  };
__n881["type"] := "Identifier";
__n881["name"] := "n3";
__n880["id"] := __n881;
__n882 := {  };
__n882["type"] := "CallExpression";
__n883 := {  };
__n883["type"] := "MemberExpression";
__n883["computed"] := true;
__n884 := {  };
__n884["type"] := "Identifier";
__n884["name"] := "esl_symbolic";
__n883["object"] := __n884;
__n885 := {  };
__n885["type"] := "Literal";
__n885["value"] := "number";
__n885["raw"] := "\"number\"";
__n883["property"] := __n885;
__n882["callee"] := __n883;
__n882["is_tail_call"] := 'undefined;
__n887 := {  };
__n887["type"] := "Literal";
__n887["value"] := "n3";
__n887["raw"] := "\"n3\"";
__n886 := [ __n887 ];
__n882["arguments"] := __n886;
__n880["init"] := __n882;
__n879 := [ __n880 ];
__n878["declarations"] := __n879;
__n878["kind"] := "var";
__n888 := {  };
__n888["type"] := "VariableDeclaration";
__n890 := {  };
__n890["type"] := "VariableDeclarator";
__n891 := {  };
__n891["type"] := "Identifier";
__n891["name"] := "n4";
__n890["id"] := __n891;
__n892 := {  };
__n892["type"] := "CallExpression";
__n893 := {  };
__n893["type"] := "MemberExpression";
__n893["computed"] := true;
__n894 := {  };
__n894["type"] := "Identifier";
__n894["name"] := "esl_symbolic";
__n893["object"] := __n894;
__n895 := {  };
__n895["type"] := "Literal";
__n895["value"] := "number";
__n895["raw"] := "\"number\"";
__n893["property"] := __n895;
__n892["callee"] := __n893;
__n892["is_tail_call"] := 'undefined;
__n897 := {  };
__n897["type"] := "Literal";
__n897["value"] := "n4";
__n897["raw"] := "\"n4\"";
__n896 := [ __n897 ];
__n892["arguments"] := __n896;
__n890["init"] := __n892;
__n889 := [ __n890 ];
__n888["declarations"] := __n889;
__n888["kind"] := "var";
__n898 := {  };
__n898["type"] := "ExpressionStatement";
__n899 := {  };
__n899["type"] := "CallExpression";
__n900 := {  };
__n900["type"] := "MemberExpression";
__n900["computed"] := true;
__n901 := {  };
__n901["type"] := "Identifier";
__n901["name"] := "esl_symbolic";
__n900["object"] := __n901;
__n902 := {  };
__n902["type"] := "Literal";
__n902["value"] := "assume";
__n902["raw"] := "\"assume\"";
__n900["property"] := __n902;
__n899["callee"] := __n900;
__n899["is_tail_call"] := 'undefined;
__n904 := {  };
__n904["type"] := "UnaryExpression";
__n904["operator"] := "!";
__n905 := {  };
__n905["type"] := "BinaryExpression";
__n905["operator"] := "==";
__n906 := {  };
__n906["type"] := "Identifier";
__n906["name"] := "n1";
__n905["left"] := __n906;
__n907 := {  };
__n907["type"] := "Identifier";
__n907["name"] := "n2";
__n905["right"] := __n907;
__n904["argument"] := __n905;
__n904["prefix"] := true;
__n903 := [ __n904 ];
__n899["arguments"] := __n903;
__n898["expression"] := __n899;
__n908 := {  };
__n908["type"] := "ExpressionStatement";
__n909 := {  };
__n909["type"] := "CallExpression";
__n910 := {  };
__n910["type"] := "MemberExpression";
__n910["computed"] := true;
__n911 := {  };
__n911["type"] := "Identifier";
__n911["name"] := "esl_symbolic";
__n910["object"] := __n911;
__n912 := {  };
__n912["type"] := "Literal";
__n912["value"] := "assume";
__n912["raw"] := "\"assume\"";
__n910["property"] := __n912;
__n909["callee"] := __n910;
__n909["is_tail_call"] := 'undefined;
__n914 := {  };
__n914["type"] := "UnaryExpression";
__n914["operator"] := "!";
__n915 := {  };
__n915["type"] := "BinaryExpression";
__n915["operator"] := "==";
__n916 := {  };
__n916["type"] := "Identifier";
__n916["name"] := "n1";
__n915["left"] := __n916;
__n917 := {  };
__n917["type"] := "Identifier";
__n917["name"] := "n3";
__n915["right"] := __n917;
__n914["argument"] := __n915;
__n914["prefix"] := true;
__n913 := [ __n914 ];
__n909["arguments"] := __n913;
__n908["expression"] := __n909;
__n918 := {  };
__n918["type"] := "ExpressionStatement";
__n919 := {  };
__n919["type"] := "CallExpression";
__n920 := {  };
__n920["type"] := "MemberExpression";
__n920["computed"] := true;
__n921 := {  };
__n921["type"] := "Identifier";
__n921["name"] := "esl_symbolic";
__n920["object"] := __n921;
__n922 := {  };
__n922["type"] := "Literal";
__n922["value"] := "assume";
__n922["raw"] := "\"assume\"";
__n920["property"] := __n922;
__n919["callee"] := __n920;
__n919["is_tail_call"] := 'undefined;
__n924 := {  };
__n924["type"] := "UnaryExpression";
__n924["operator"] := "!";
__n925 := {  };
__n925["type"] := "BinaryExpression";
__n925["operator"] := "==";
__n926 := {  };
__n926["type"] := "Identifier";
__n926["name"] := "n1";
__n925["left"] := __n926;
__n927 := {  };
__n927["type"] := "Identifier";
__n927["name"] := "n4";
__n925["right"] := __n927;
__n924["argument"] := __n925;
__n924["prefix"] := true;
__n923 := [ __n924 ];
__n919["arguments"] := __n923;
__n918["expression"] := __n919;
__n928 := {  };
__n928["type"] := "ExpressionStatement";
__n929 := {  };
__n929["type"] := "CallExpression";
__n930 := {  };
__n930["type"] := "MemberExpression";
__n930["computed"] := true;
__n931 := {  };
__n931["type"] := "Identifier";
__n931["name"] := "esl_symbolic";
__n930["object"] := __n931;
__n932 := {  };
__n932["type"] := "Literal";
__n932["value"] := "assume";
__n932["raw"] := "\"assume\"";
__n930["property"] := __n932;
__n929["callee"] := __n930;
__n929["is_tail_call"] := 'undefined;
__n934 := {  };
__n934["type"] := "UnaryExpression";
__n934["operator"] := "!";
__n935 := {  };
__n935["type"] := "BinaryExpression";
__n935["operator"] := "==";
__n936 := {  };
__n936["type"] := "Identifier";
__n936["name"] := "n2";
__n935["left"] := __n936;
__n937 := {  };
__n937["type"] := "Identifier";
__n937["name"] := "n3";
__n935["right"] := __n937;
__n934["argument"] := __n935;
__n934["prefix"] := true;
__n933 := [ __n934 ];
__n929["arguments"] := __n933;
__n928["expression"] := __n929;
__n938 := {  };
__n938["type"] := "ExpressionStatement";
__n939 := {  };
__n939["type"] := "CallExpression";
__n940 := {  };
__n940["type"] := "MemberExpression";
__n940["computed"] := true;
__n941 := {  };
__n941["type"] := "Identifier";
__n941["name"] := "esl_symbolic";
__n940["object"] := __n941;
__n942 := {  };
__n942["type"] := "Literal";
__n942["value"] := "assume";
__n942["raw"] := "\"assume\"";
__n940["property"] := __n942;
__n939["callee"] := __n940;
__n939["is_tail_call"] := 'undefined;
__n944 := {  };
__n944["type"] := "UnaryExpression";
__n944["operator"] := "!";
__n945 := {  };
__n945["type"] := "BinaryExpression";
__n945["operator"] := "==";
__n946 := {  };
__n946["type"] := "Identifier";
__n946["name"] := "n2";
__n945["left"] := __n946;
__n947 := {  };
__n947["type"] := "Identifier";
__n947["name"] := "n4";
__n945["right"] := __n947;
__n944["argument"] := __n945;
__n944["prefix"] := true;
__n943 := [ __n944 ];
__n939["arguments"] := __n943;
__n938["expression"] := __n939;
__n948 := {  };
__n948["type"] := "ExpressionStatement";
__n949 := {  };
__n949["type"] := "CallExpression";
__n950 := {  };
__n950["type"] := "MemberExpression";
__n950["computed"] := true;
__n951 := {  };
__n951["type"] := "Identifier";
__n951["name"] := "esl_symbolic";
__n950["object"] := __n951;
__n952 := {  };
__n952["type"] := "Literal";
__n952["value"] := "assume";
__n952["raw"] := "\"assume\"";
__n950["property"] := __n952;
__n949["callee"] := __n950;
__n949["is_tail_call"] := 'undefined;
__n954 := {  };
__n954["type"] := "UnaryExpression";
__n954["operator"] := "!";
__n955 := {  };
__n955["type"] := "BinaryExpression";
__n955["operator"] := "==";
__n956 := {  };
__n956["type"] := "Identifier";
__n956["name"] := "n3";
__n955["left"] := __n956;
__n957 := {  };
__n957["type"] := "Identifier";
__n957["name"] := "n4";
__n955["right"] := __n957;
__n954["argument"] := __n955;
__n954["prefix"] := true;
__n953 := [ __n954 ];
__n949["arguments"] := __n953;
__n948["expression"] := __n949;
__n958 := {  };
__n958["type"] := "VariableDeclaration";
__n960 := {  };
__n960["type"] := "VariableDeclarator";
__n961 := {  };
__n961["type"] := "Identifier";
__n961["name"] := "numberArray";
__n960["id"] := __n961;
__n962 := {  };
__n962["type"] := "ArrayExpression";
__n964 := {  };
__n964["type"] := "Identifier";
__n964["name"] := "n1";
__n965 := {  };
__n965["type"] := "Identifier";
__n965["name"] := "n2";
__n966 := {  };
__n966["type"] := "Identifier";
__n966["name"] := "n2";
__n967 := {  };
__n967["type"] := "Identifier";
__n967["name"] := "n2";
__n968 := {  };
__n968["type"] := "Identifier";
__n968["name"] := "n3";
__n969 := {  };
__n969["type"] := "Identifier";
__n969["name"] := "n3";
__n963 := [ __n964, __n965, __n966, __n967, __n968, __n969 ];
__n962["elements"] := __n963;
__n960["init"] := __n962;
__n959 := [ __n960 ];
__n958["declarations"] := __n959;
__n958["kind"] := "var";
__n970 := {  };
__n970["type"] := "VariableDeclaration";
__n972 := {  };
__n972["type"] := "VariableDeclarator";
__n973 := {  };
__n973["type"] := "Identifier";
__n973["name"] := "reset";
__n972["id"] := __n973;
__n974 := {  };
__n974["type"] := "FunctionExpression";
__n974["id"] := null;
__n975 := [  ];
__n974["params"] := __n975;
__n976 := {  };
__n976["type"] := "BlockStatement";
__n978 := {  };
__n978["type"] := "ExpressionStatement";
__n979 := {  };
__n979["type"] := "AssignmentExpression";
__n979["operator"] := "=";
__n980 := {  };
__n980["type"] := "Identifier";
__n980["name"] := "numberArray";
__n979["left"] := __n980;
__n981 := {  };
__n981["type"] := "ArrayExpression";
__n983 := {  };
__n983["type"] := "Identifier";
__n983["name"] := "n1";
__n984 := {  };
__n984["type"] := "Identifier";
__n984["name"] := "n2";
__n985 := {  };
__n985["type"] := "Identifier";
__n985["name"] := "n2";
__n986 := {  };
__n986["type"] := "Identifier";
__n986["name"] := "n2";
__n987 := {  };
__n987["type"] := "Identifier";
__n987["name"] := "n3";
__n988 := {  };
__n988["type"] := "Identifier";
__n988["name"] := "n3";
__n982 := [ __n983, __n984, __n985, __n986, __n987, __n988 ];
__n981["elements"] := __n982;
__n979["right"] := __n981;
__n978["expression"] := __n979;
__n977 := [ __n978 ];
__n976["body"] := __n977;
__n976["isSimpleParameterList"] := true;
__n989 := [  ];
__n976["variableDeclarations"] := __n989;
__n990 := [  ];
__n976["functionDeclarations"] := __n990;
__n991 := [  ];
__n976["letDeclarations"] := __n991;
__n992 := [  ];
__n976["constDeclarations"] := __n992;
__n976["containsExpression"] := false;
__n993 := [  ];
__n976["paramsDetails"] := __n993;
__n994 := [  ];
__n976["paramsNames"] := __n994;
__n976["codeType"] := "function";
__n976["strict"] := false;
__n974["body"] := __n976;
__n974["generator"] := false;
__n974["async"] := false;
__n974["expression"] := false;
__n972["init"] := __n974;
__n971 := [ __n972 ];
__n970["declarations"] := __n971;
__n970["kind"] := "var";
__n995 := {  };
__n995["type"] := "ExpressionStatement";
__n996 := {  };
__n996["type"] := "CallExpression";
__n997 := {  };
__n997["type"] := "Identifier";
__n997["name"] := "reset";
__n996["callee"] := __n997;
__n996["is_tail_call"] := 'undefined;
__n998 := [  ];
__n996["arguments"] := __n998;
__n995["expression"] := __n996;
__n999 := {  };
__n999["type"] := "VariableDeclaration";
__n1001 := {  };
__n1001["type"] := "VariableDeclarator";
__n1002 := {  };
__n1002["type"] := "Identifier";
__n1002["name"] := "res2";
__n1001["id"] := __n1002;
__n1003 := {  };
__n1003["type"] := "CallExpression";
__n1004 := {  };
__n1004["type"] := "MemberExpression";
__n1004["computed"] := true;
__n1005 := {  };
__n1005["type"] := "MemberExpression";
__n1005["computed"] := true;
__n1006 := {  };
__n1006["type"] := "Identifier";
__n1006["name"] := "buckets";
__n1005["object"] := __n1006;
__n1007 := {  };
__n1007["type"] := "Literal";
__n1007["value"] := "arrays";
__n1007["raw"] := "\"arrays\"";
__n1005["property"] := __n1007;
__n1004["object"] := __n1005;
__n1008 := {  };
__n1008["type"] := "Literal";
__n1008["value"] := "indexOf";
__n1008["raw"] := "\"indexOf\"";
__n1004["property"] := __n1008;
__n1003["callee"] := __n1004;
__n1003["is_tail_call"] := 'undefined;
__n1010 := {  };
__n1010["type"] := "Identifier";
__n1010["name"] := "numberArray";
__n1011 := {  };
__n1011["type"] := "Identifier";
__n1011["name"] := "n2";
__n1009 := [ __n1010, __n1011 ];
__n1003["arguments"] := __n1009;
__n1001["init"] := __n1003;
__n1000 := [ __n1001 ];
__n999["declarations"] := __n1000;
__n999["kind"] := "var";
__n1012 := {  };
__n1012["type"] := "ExpressionStatement";
__n1013 := {  };
__n1013["type"] := "CallExpression";
__n1014 := {  };
__n1014["type"] := "MemberExpression";
__n1014["computed"] := true;
__n1015 := {  };
__n1015["type"] := "Identifier";
__n1015["name"] := "esl_symbolic";
__n1014["object"] := __n1015;
__n1016 := {  };
__n1016["type"] := "Literal";
__n1016["value"] := "assert";
__n1016["raw"] := "\"assert\"";
__n1014["property"] := __n1016;
__n1013["callee"] := __n1014;
__n1013["is_tail_call"] := 'undefined;
__n1018 := {  };
__n1018["type"] := "BinaryExpression";
__n1018["operator"] := "==";
__n1019 := {  };
__n1019["type"] := "Identifier";
__n1019["name"] := "res2";
__n1018["left"] := __n1019;
__n1020 := {  };
__n1020["type"] := "Literal";
__n1020["value"] := 1.;
__n1020["raw"] := "1";
__n1018["right"] := __n1020;
__n1017 := [ __n1018 ];
__n1013["arguments"] := __n1017;
__n1012["expression"] := __n1013;
__n1021 := {  };
__n1021["type"] := "VariableDeclaration";
__n1023 := {  };
__n1023["type"] := "VariableDeclarator";
__n1024 := {  };
__n1024["type"] := "Identifier";
__n1024["name"] := "res3";
__n1023["id"] := __n1024;
__n1025 := {  };
__n1025["type"] := "CallExpression";
__n1026 := {  };
__n1026["type"] := "MemberExpression";
__n1026["computed"] := true;
__n1027 := {  };
__n1027["type"] := "MemberExpression";
__n1027["computed"] := true;
__n1028 := {  };
__n1028["type"] := "Identifier";
__n1028["name"] := "buckets";
__n1027["object"] := __n1028;
__n1029 := {  };
__n1029["type"] := "Literal";
__n1029["value"] := "arrays";
__n1029["raw"] := "\"arrays\"";
__n1027["property"] := __n1029;
__n1026["object"] := __n1027;
__n1030 := {  };
__n1030["type"] := "Literal";
__n1030["value"] := "indexOf";
__n1030["raw"] := "\"indexOf\"";
__n1026["property"] := __n1030;
__n1025["callee"] := __n1026;
__n1025["is_tail_call"] := 'undefined;
__n1032 := {  };
__n1032["type"] := "Identifier";
__n1032["name"] := "numberArray";
__n1033 := {  };
__n1033["type"] := "Identifier";
__n1033["name"] := "n4";
__n1031 := [ __n1032, __n1033 ];
__n1025["arguments"] := __n1031;
__n1023["init"] := __n1025;
__n1022 := [ __n1023 ];
__n1021["declarations"] := __n1022;
__n1021["kind"] := "var";
__n1034 := {  };
__n1034["type"] := "ExpressionStatement";
__n1035 := {  };
__n1035["type"] := "CallExpression";
__n1036 := {  };
__n1036["type"] := "MemberExpression";
__n1036["computed"] := true;
__n1037 := {  };
__n1037["type"] := "Identifier";
__n1037["name"] := "esl_symbolic";
__n1036["object"] := __n1037;
__n1038 := {  };
__n1038["type"] := "Literal";
__n1038["value"] := "assert";
__n1038["raw"] := "\"assert\"";
__n1036["property"] := __n1038;
__n1035["callee"] := __n1036;
__n1035["is_tail_call"] := 'undefined;
__n1040 := {  };
__n1040["type"] := "BinaryExpression";
__n1040["operator"] := "==";
__n1041 := {  };
__n1041["type"] := "Identifier";
__n1041["name"] := "res3";
__n1040["left"] := __n1041;
__n1042 := {  };
__n1042["type"] := "UnaryExpression";
__n1042["operator"] := "-";
__n1043 := {  };
__n1043["type"] := "Literal";
__n1043["value"] := 1.;
__n1043["raw"] := "1";
__n1042["argument"] := __n1043;
__n1042["prefix"] := true;
__n1040["right"] := __n1042;
__n1039 := [ __n1040 ];
__n1035["arguments"] := __n1039;
__n1034["expression"] := __n1035;
__n1 := [ __n2, __n4, __n10, __n50, __n71, __n129, __n150, __n170, __n199, __n285, __n322, __n329, __n396, __n465, __n498, __n552, __n623, __n706, __n730, __n802, __n858, __n868, __n878, __n888, __n898, __n908, __n918, __n928, __n938, __n948, __n958, __n970, __n995, __n999, __n1012, __n1021, __n1034 ];
__n0["body"] := __n1;
__n1044 := [ "buckets", "n1", "n2", "n3", "n4", "numberArray", "reset", "res2", "res3" ];
__n0["variableDeclarations"] := __n1044;
__n1045 := [  ];
__n0["functionDeclarations"] := __n1045;
__n1046 := [  ];
__n0["letDeclarations"] := __n1046;
__n1047 := [  ];
__n0["constDeclarations"] := __n1047;
__n0["codeType"] := "global";
__n0["strict"] := true;
return ( false, __n0 )
};
function getCompletionType (___internal_esl_global, c) { __v0 := t_nth(c, 0);
return ( false, __v0 ) };
function initScope (___internal_esl_global, scope, vdecls, fdecls) { __v1 := "_initScopeVdecls" (___internal_esl_global, scope, vdecls);
if (fst(__v1)) {
return __v1
} else {
__v1 := snd(__v1)
};
__v2 := "_initScopeFdecls" (___internal_esl_global, scope, fdecls);
if (fst(__v2)) {
return __v2
} else {
__v2 := snd(__v2)
};
return ( false, null ) };
function resolveName (___internal_esl_global, scope, name) { __v3 := scope["store"];
__v4 := name in_obj __v3;
if (__v4) {
__v6 := scope["store"];
__v5 := __v6[name];
return ( false, __v5 )
} else {
__v7 := scope["parent"];
__v8 := __v7 = null;
if (__v8) {
return ( false, 'undefined )
} else {
__v9 := scope["parent"];
__v10 := "resolveName" (___internal_esl_global, __v9, name);
if (fst(__v10)) {
return __v10
} else {
__v10 := snd(__v10)
};
return ( false, __v10 )
}
} };
function isAbruptCompletion (___internal_esl_global, c) { __v12 := "getCompletionType" (___internal_esl_global, c);
if (fst(__v12)) {
return __v12
} else {
__v12 := snd(__v12)
};
__v13 := __v12 = 'Normal;
__v11 := !(__v13);
return ( false, __v11 ) };
function FunctionObject (___internal_esl_global, name, params, code, scope) { __v14 := { };
__v14["name"] := name;
__v14["code"] := code;
__v14["params"] := params;
__v14["scope"] := scope;
functionObject := __v14;
return ( false, functionObject ) };
function BreakCompletion (___internal_esl_global, v) { __v15 := ( 'Break, v );
return ( false, __v15 ) };
function interpretCall (___internal_esl_global, scope, functionObject, args, thisBinding) { __v16 := functionObject = 'undefined;
if (__v16) {
__v17 := "raiseError" (___internal_esl_global, "Unknown function", functionObject);
if (fst(__v17)) {
return __v17
} else {
__v17 := snd(__v17)
}
};
__v18 := "name" in_obj functionObject;
__v19 := "params" in_obj functionObject;
__v20 := "code" in_obj functionObject;
__v21 := "scope" in_obj functionObject;
if (true && __v18 && __v19 && __v20 && __v21) {
name := functionObject["name"];
params := functionObject["params"];
code := functionObject["code"];
scope := functionObject["scope"];
__v23 := l_len(params);
__v24 := l_len(args);
__v25 := __v23 = __v24;
__v22 := !(__v25);
if (__v22) {
__v26 := "raiseError" (___internal_esl_global, "Invalid number of arguments in function call", name);
if (fst(__v26)) {
return __v26
} else {
__v26 := snd(__v26)
}
};
i := 0;
__v27 := "extendScope" (___internal_esl_global, scope, thisBinding);
if (fst(__v27)) {
return __v27
} else {
__v27 := snd(__v27)
};
newScope := __v27;
__v28 := l_len(params);
__v29 := i < __v28;
while (__v29) { __v30 := l_nth(args, i);
arg := __v30;
__v31 := l_nth(params, i);
paramName := __v31;
__v32 := "interpreter" (___internal_esl_global, scope, arg);
if (fst(__v32)) {
return __v32
} else {
__v32 := snd(__v32)
};
val := __v32;
__v33 := "isAbruptCompletion" (___internal_esl_global, val);
if (fst(__v33)) {
return __v33
} else {
__v33 := snd(__v33)
};
if (__v33) {
return ( false, val )
} else {
__v34 := "getCompletionValue" (___internal_esl_global, val);
if (fst(__v34)) {
return __v34
} else {
__v34 := snd(__v34)
};
val := __v34
};
__v35 := "updateScope" (___internal_esl_global, newScope, newScope, paramName, val);
if (fst(__v35)) {
return __v35
} else {
__v35 := snd(__v35)
};
__v36 := i + 1;
i := __v36;
__v28 := l_len(params);
__v29 := i < __v28 };
__v37 := "interpreter" (___internal_esl_global, newScope, code);
if (fst(__v37)) {
return __v37
} else {
__v37 := snd(__v37)
};
return ( false, __v37 )
} else {
if (true) {
__v38 := "raiseError" (___internal_esl_global, "Illegal function call", functionObject);
if (fst(__v38)) {
return __v38
} else {
__v38 := snd(__v38)
}
}
} };
function applyBinaryOperator (___internal_esl_global, op, v1, v2) { if ("+" = op) {
__v39 := v1 + v2;
return ( false, __v39 )
} else {
if ("-" = op) {
__v40 := v1 - v2;
return ( false, __v40 )
} else {
if ("*" = op) {
__v41 := v1 * v2;
return ( false, __v41 )
} else {
if ("/" = op) {
__v42 := v1 / v2;
return ( false, __v42 )
} else {
if ("%" = op) {
__v43 := v1 % v2;
return ( false, __v43 )
} else {
if ("**" = op) {
__v44 := v1 ** v2;
return ( false, __v44 )
} else {
if ("&" = op) {
__v45 := v1 & v2;
return ( false, __v45 )
} else {
if ("|" = op) {
__v46 := v1 | v2;
return ( false, __v46 )
} else {
if ("^" = op) {
__v47 := v1 ^ v2;
return ( false, __v47 )
} else {
if ("<<" = op) {
__v48 := v1 << v2;
return ( false, __v48 )
} else {
if (">>" = op) {
__v49 := v1 >> v2;
return ( false, __v49 )
} else {
if (">>>" = op) {
__v50 := v1 >>> v2;
return ( false, __v50 )
} else {
if ("==" = op) {
__v51 := v1 = v2;
return ( false, __v51 )
} else {
if ("!=" = op) {
__v53 := v1 = v2;
__v52 := !(__v53);
return ( false, __v52 )
} else {
if (">" = op) {
__v54 := v1 > v2;
return ( false, __v54 )
} else {
if ("<" = op) {
__v55 := v1 < v2;
return ( false, __v55 )
} else {
if (">=" = op) {
__v56 := v1 >= v2;
return ( false, __v56 )
} else {
if ("<=" = op) {
__v57 := v1 <= v2;
return ( false, __v57 )
} else {
__v58 := "raiseError" (___internal_esl_global, "Unsuported binary operator", op);
if (fst(__v58)) {
return __v58
} else {
__v58 := snd(__v58)
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} };
function _initScopeVdecls (___internal_esl_global, scope, vdecls) { __v60 := 0;
__v59 := l_len(vdecls);
__v61 := __v59 > __v60;
while (__v61) { vdecl := l_nth(vdecls, __v60);
__v62 := scope["store"];
__v62[vdecl] := 'undefined;
__v60 := __v60 + 1;
__v61 := __v59 > __v60 };
return ( false, null ) };
function updateScope (___internal_esl_global, currScope, scope, name, val) { __v63 := scope["store"];
__v64 := name in_obj __v63;
if (__v64) {
__v65 := scope["store"];
__v65[name] := val
} else {
__v66 := scope["parent"];
__v67 := __v66 = null;
if (__v67) {
__v68 := currScope["store"];
__v68[name] := val
} else {
__v69 := scope["parent"];
__v70 := "updateScope" (___internal_esl_global, currScope, __v69, name, val);
if (fst(__v70)) {
return __v70
} else {
__v70 := snd(__v70)
}
}
};
return ( false, null ) };
function updateObject (___internal_esl_global, objVal, propName, val) { objVal[propName] := val;
return ( false, null ) };
function interpretProgram (___internal_esl_global, scope, stmts, vdecls, fdecls) { __v71 := "initScope" (___internal_esl_global, scope, vdecls, fdecls);
if (fst(__v71)) {
return __v71
} else {
__v71 := snd(__v71)
};
retVal := 'empty;
__v73 := 0;
__v72 := l_len(stmts);
__v74 := __v72 > __v73;
while (__v74) { stmt := l_nth(stmts, __v73);
__v75 := "interpreter" (___internal_esl_global, scope, stmt);
if (fst(__v75)) {
return __v75
} else {
__v75 := snd(__v75)
};
retVal := __v75;
__v76 := "isAbruptCompletion" (___internal_esl_global, retVal);
if (fst(__v76)) {
return __v76
} else {
__v76 := snd(__v76)
};
if (__v76) {
return ( false, retVal )
} else {
__v77 := "getCompletionValue" (___internal_esl_global, retVal);
if (fst(__v77)) {
return __v77
} else {
__v77 := snd(__v77)
};
retVal := __v77
};
__v73 := __v73 + 1;
__v74 := __v72 > __v73 };
__v78 := "NormalCompletion" (___internal_esl_global, retVal);
if (fst(__v78)) {
return __v78
} else {
__v78 := snd(__v78)
};
return ( false, __v78 ) };
function ReturnCompletion (___internal_esl_global, v) { __v79 := ( 'Return, v );
return ( false, __v79 ) };
function applyUnaryOperator (___internal_esl_global, op, v) { if ("+" = op) {
return ( false, v )
} else {
if ("-" = op) {
__v80 := -(v);
return ( false, __v80 )
} else {
if ("~" = op) {
__v81 := ~(v);
return ( false, __v81 )
} else {
if ("!" = op) {
__v82 := !(v);
return ( false, __v82 )
} else {
__v83 := "raiseError" (___internal_esl_global, "Unsuported unary operator", op);
if (fst(__v83)) {
return __v83
} else {
__v83 := snd(__v83)
}
}
}
}
} };
function raiseError (___internal_esl_global, msg, src) { __v85 := [ "[ERROR]: ", msg ];
__v84 := s_concat(__v85);
errMsg := __v84;
print errMsg;
print src;
return ( true, msg ) };
function getThisBinding (___internal_esl_global, scope) { __v86 := scope["thisBinding"];
return ( false, __v86 ) };
function Scope (___internal_esl_global, thisBinding) { __v87 := { };
__v87["parent"] := null;
__v88 := { };
__v87["store"] := __v88;
__v87["thisBinding"] := thisBinding;
scope := __v87;
return ( false, scope ) };
function Object (___internal_esl_global) { __v89 := { };
__v89["__proto__"] := null;
object := __v89;
return ( false, object ) };
function ContinueCompletion (___internal_esl_global, v) { __v90 := ( 'Continue, v );
return ( false, __v90 ) };
function ThrowCompletion (___internal_esl_global, v) { __v91 := ( 'Throw, v );
return ( false, __v91 ) };
function NormalCompletion (___internal_esl_global, v) { __v92 := ( 'Normal, v );
return ( false, __v92 ) };
function getCompletionValue (___internal_esl_global, c) { __v93 := t_nth(c, 1);
return ( false, __v93 ) };
function applyAssignmentOperator (___internal_esl_global, op, oldVal, rightVal) { __v94 := { };
__v94["op"] := op;
__v94["oldVal"] := oldVal;
updateData := __v94;
__v95 := "op" in_obj updateData;
__v97 := updateData["op"];
__v96 := __v97 = "=";
__v98 := "oldVal" in_obj updateData;
if (true && __v95 && __v96 && __v98) {
oldVal := updateData["oldVal"];
return ( false, rightVal )
} else {
__v99 := "op" in_obj updateData;
__v101 := updateData["op"];
__v100 := __v101 = "+=";
__v102 := "oldVal" in_obj updateData;
if (true && __v99 && __v100 && __v102) {
oldVal := updateData["oldVal"];
__v103 := oldVal + rightVal;
return ( false, __v103 )
} else {
__v104 := "op" in_obj updateData;
__v106 := updateData["op"];
__v105 := __v106 = "-=";
__v107 := "oldVal" in_obj updateData;
if (true && __v104 && __v105 && __v107) {
oldVal := updateData["oldVal"];
__v108 := oldVal - rightVal;
return ( false, __v108 )
} else {
__v109 := "op" in_obj updateData;
__v111 := updateData["op"];
__v110 := __v111 = "*=";
__v112 := "oldVal" in_obj updateData;
if (true && __v109 && __v110 && __v112) {
oldVal := updateData["oldVal"];
__v113 := oldVal * rightVal;
return ( false, __v113 )
} else {
__v114 := "op" in_obj updateData;
__v116 := updateData["op"];
__v115 := __v116 = "/=";
__v117 := "oldVal" in_obj updateData;
if (true && __v114 && __v115 && __v117) {
oldVal := updateData["oldVal"];
__v118 := oldVal / rightVal;
return ( false, __v118 )
} else {
__v119 := "op" in_obj updateData;
__v121 := updateData["op"];
__v120 := __v121 = "%=";
__v122 := "oldVal" in_obj updateData;
if (true && __v119 && __v120 && __v122) {
oldVal := updateData["oldVal"];
__v123 := oldVal % rightVal;
return ( false, __v123 )
} else {
__v124 := "op" in_obj updateData;
__v126 := updateData["op"];
__v125 := __v126 = "**=";
__v127 := "oldVal" in_obj updateData;
if (true && __v124 && __v125 && __v127) {
oldVal := updateData["oldVal"];
__v128 := oldVal ** rightVal;
return ( false, __v128 )
} else {
if (true) {
__v129 := "raiseError" (___internal_esl_global, "Illegal assignment operator", op);
if (fst(__v129)) {
return __v129
} else {
__v129 := snd(__v129)
}
}
}
}
}
}
}
}
} };
function _initScopeFdecls (___internal_esl_global, scope, fdecls) { __v131 := 0;
__v130 := l_len(fdecls);
__v132 := __v130 > __v131;
while (__v132) { fdecl := l_nth(fdecls, __v131);
__v133 := "type" in_obj fdecl;
__v135 := fdecl["type"];
__v134 := __v135 = "FunctionDeclaration";
__v136 := "id" in_obj fdecl;
__v137 := "params" in_obj fdecl;
__v138 := "body" in_obj fdecl;
if (true && __v133 && __v134 && __v136 && __v137 && __v138) {
id := fdecl["id"];
params := fdecl["params"];
code := fdecl["body"];
__v139 := "type" in_obj id;
__v141 := id["type"];
__v140 := __v141 = "Identifier";
__v142 := "name" in_obj id;
if (true && __v139 && __v140 && __v142) {
name := id["name"];
__v143 := scope["store"];
__v144 := "FunctionObject" (___internal_esl_global, name, params, code, scope);
if (fst(__v144)) {
return __v144
} else {
__v144 := snd(__v144)
};
__v143[name] := __v144
} else {
if (true) {
__v145 := "raiseError" (___internal_esl_global, "Unsuported function identifier", id);
if (fst(__v145)) {
return __v145
} else {
__v145 := snd(__v145)
}
}
}
} else {
if (true) {
__v146 := "raiseError" (___internal_esl_global, "Unsuported function declaration", fdecl);
if (fst(__v146)) {
return __v146
} else {
__v146 := snd(__v146)
}
}
};
__v131 := __v131 + 1;
__v132 := __v130 > __v131 };
return ( false, null ) };
function resolveProperty (___internal_esl_global, objVal, propName) { __v147 := propName in_obj objVal;
if (__v147) {
__v148 := objVal[propName];
return ( false, __v148 )
} else {
__v149 := objVal["__proto__"];
__v150 := __v149 = null;
if (__v150) {
return ( false, 'undefined )
} else {
__v151 := objVal["__proto__"];
__v152 := "resolveProperty" (___internal_esl_global, __v151, propName);
if (fst(__v152)) {
return __v152
} else {
__v152 := snd(__v152)
};
return ( false, __v152 )
}
} };
function interpreter (___internal_esl_global, scope, s) { __v153 := "type" in_obj s;
__v155 := s["type"];
__v154 := __v155 = "Program";
__v156 := "body" in_obj s;
__v157 := "variableDeclarations" in_obj s;
__v158 := "functionDeclarations" in_obj s;
if (true && __v153 && __v154 && __v156 && __v157 && __v158) {
body := s["body"];
vdecls := s["variableDeclarations"];
fdecls := s["functionDeclarations"];
__v159 := "interpretProgram" (___internal_esl_global, scope, body, vdecls, fdecls);
if (fst(__v159)) {
return __v159
} else {
__v159 := snd(__v159)
};
return ( false, __v159 )
} else {
__v160 := "type" in_obj s;
__v162 := s["type"];
__v161 := __v162 = "BlockStatement";
__v163 := "body" in_obj s;
if (true && __v160 && __v161 && __v163) {
stmts := s["body"];
__v165 := 0;
__v164 := l_len(stmts);
__v166 := __v164 > __v165;
while (__v166) { stmt := l_nth(stmts, __v165);
__v167 := "interpreter" (___internal_esl_global, scope, stmt);
if (fst(__v167)) {
return __v167
} else {
__v167 := snd(__v167)
};
retVal := __v167;
__v168 := "isAbruptCompletion" (___internal_esl_global, retVal);
if (fst(__v168)) {
return __v168
} else {
__v168 := snd(__v168)
};
if (__v168) {
return ( false, retVal )
} else {
__v169 := "getCompletionValue" (___internal_esl_global, retVal);
if (fst(__v169)) {
return __v169
} else {
__v169 := snd(__v169)
};
retVal := __v169
};
__v165 := __v165 + 1;
__v166 := __v164 > __v165 };
__v170 := "NormalCompletion" (___internal_esl_global, retVal);
if (fst(__v170)) {
return __v170
} else {
__v170 := snd(__v170)
};
return ( false, __v170 )
} else {
__v171 := "type" in_obj s;
__v173 := s["type"];
__v172 := __v173 = "ReturnStatement";
__v174 := "argument" in_obj s;
if (true && __v171 && __v172 && __v174) {
arg := s["argument"];
__v175 := "interpreter" (___internal_esl_global, scope, arg);
if (fst(__v175)) {
return __v175
} else {
__v175 := snd(__v175)
};
retVal := __v175;
__v176 := "isAbruptCompletion" (___internal_esl_global, retVal);
if (fst(__v176)) {
return __v176
} else {
__v176 := snd(__v176)
};
if (__v176) {
return ( false, retVal )
} else {
__v177 := "getCompletionValue" (___internal_esl_global, retVal);
if (fst(__v177)) {
return __v177
} else {
__v177 := snd(__v177)
};
retVal := __v177
};
__v178 := "ReturnCompletion" (___internal_esl_global, retVal);
if (fst(__v178)) {
return __v178
} else {
__v178 := snd(__v178)
};
return ( false, __v178 )
} else {
__v179 := "type" in_obj s;
__v181 := s["type"];
__v180 := __v181 = "ExpressionStatement";
__v182 := "expression" in_obj s;
if (true && __v179 && __v180 && __v182) {
expr := s["expression"];
__v183 := "interpreter" (___internal_esl_global, scope, expr);
if (fst(__v183)) {
return __v183
} else {
__v183 := snd(__v183)
};
return ( false, __v183 )
} else {
__v184 := "type" in_obj s;
__v186 := s["type"];
__v185 := __v186 = "BreakStatement";
__v187 := "label" in_obj s;
__v189 := s["label"];
__v188 := __v189 = null;
if (true && __v184 && __v185 && __v187 && __v188) {
__v190 := "BreakCompletion" (___internal_esl_global, 'empty);
if (fst(__v190)) {
return __v190
} else {
__v190 := snd(__v190)
};
return ( false, __v190 )
} else {
__v191 := "type" in_obj s;
__v193 := s["type"];
__v192 := __v193 = "ContinueStatement";
__v194 := "label" in_obj s;
__v196 := s["label"];
__v195 := __v196 = null;
if (true && __v191 && __v192 && __v194 && __v195) {
__v197 := "ContinueCompletion" (___internal_esl_global, 'empty);
if (fst(__v197)) {
return __v197
} else {
__v197 := snd(__v197)
};
return ( false, __v197 )
} else {
__v198 := "type" in_obj s;
__v200 := s["type"];
__v199 := __v200 = "IfStatement";
__v201 := "test" in_obj s;
__v202 := "consequent" in_obj s;
__v203 := "alternate" in_obj s;
if (true && __v198 && __v199 && __v201 && __v202 && __v203) {
test := s["test"];
stmt1 := s["consequent"];
stmt2 := s["alternate"];
__v204 := "interpreter" (___internal_esl_global, scope, test);
if (fst(__v204)) {
return __v204
} else {
__v204 := snd(__v204)
};
testVal := __v204;
__v205 := "isAbruptCompletion" (___internal_esl_global, testVal);
if (fst(__v205)) {
return __v205
} else {
__v205 := snd(__v205)
};
if (__v205) {
return ( false, testVal )
} else {
__v206 := "getCompletionValue" (___internal_esl_global, testVal);
if (fst(__v206)) {
return __v206
} else {
__v206 := snd(__v206)
};
testVal := __v206
};
if (testVal) {
__v211 := "interpreter" (___internal_esl_global, scope, stmt1);
if (fst(__v211)) {
return __v211
} else {
__v211 := snd(__v211)
};
return ( false, __v211 )
} else {
__v209 := stmt2 = null;
__v208 := !(__v209);
if (__v208) {
__v210 := "interpreter" (___internal_esl_global, scope, stmt2);
if (fst(__v210)) {
return __v210
} else {
__v210 := snd(__v210)
};
return ( false, __v210 )
} else {
__v207 := "NormalCompletion" (___internal_esl_global, 'empty);
if (fst(__v207)) {
return __v207
} else {
__v207 := snd(__v207)
};
return ( false, __v207 )
}
}
} else {
__v212 := "type" in_obj s;
__v214 := s["type"];
__v213 := __v214 = "WhileStatement";
__v215 := "test" in_obj s;
__v216 := "body" in_obj s;
if (true && __v212 && __v213 && __v215 && __v216) {
test := s["test"];
stmt := s["body"];
__v217 := "interpreter" (___internal_esl_global, scope, test);
if (fst(__v217)) {
return __v217
} else {
__v217 := snd(__v217)
};
testVal := __v217;
__v218 := "isAbruptCompletion" (___internal_esl_global, testVal);
if (fst(__v218)) {
return __v218
} else {
__v218 := snd(__v218)
};
if (__v218) {
return ( false, testVal )
} else {
__v219 := "getCompletionValue" (___internal_esl_global, testVal);
if (fst(__v219)) {
return __v219
} else {
__v219 := snd(__v219)
};
testVal := __v219
};
while (testVal) { __v220 := "interpreter" (___internal_esl_global, scope, stmt);
if (fst(__v220)) {
return __v220
} else {
__v220 := snd(__v220)
};
retVal := __v220;
__v221 := "getCompletionType" (___internal_esl_global, retVal);
if (fst(__v221)) {
return __v221
} else {
__v221 := snd(__v221)
};
if ('Break = __v221) {
__v222 := "NormalCompletion" (___internal_esl_global, 'empty);
if (fst(__v222)) {
return __v222
} else {
__v222 := snd(__v222)
};
return ( false, __v222 )
} else {
if ('Return = __v221) {
return ( false, retVal )
} else {
if ('Throw = __v221) {
return ( false, retVal )
} else {

}
}
};
__v223 := "interpreter" (___internal_esl_global, scope, test);
if (fst(__v223)) {
return __v223
} else {
__v223 := snd(__v223)
};
testVal := __v223;
__v224 := "isAbruptCompletion" (___internal_esl_global, testVal);
if (fst(__v224)) {
return __v224
} else {
__v224 := snd(__v224)
};
if (__v224) {
return ( false, testVal )
} else {
__v225 := "getCompletionValue" (___internal_esl_global, testVal);
if (fst(__v225)) {
return __v225
} else {
__v225 := snd(__v225)
};
testVal := __v225
} };
__v226 := "NormalCompletion" (___internal_esl_global, 'empty);
if (fst(__v226)) {
return __v226
} else {
__v226 := snd(__v226)
};
return ( false, __v226 )
} else {
__v227 := "type" in_obj s;
__v229 := s["type"];
__v228 := __v229 = "ForStatement";
__v230 := "init" in_obj s;
__v231 := "test" in_obj s;
__v232 := "update" in_obj s;
__v233 := "body" in_obj s;
if (true && __v227 && __v228 && __v230 && __v231 && __v232 && __v233) {
init := s["init"];
test := s["test"];
update := s["update"];
stmt := s["body"];
__v234 := "interpreter" (___internal_esl_global, scope, init);
if (fst(__v234)) {
return __v234
} else {
__v234 := snd(__v234)
};
initVal := __v234;
__v235 := "isAbruptCompletion" (___internal_esl_global, initVal);
if (fst(__v235)) {
return __v235
} else {
__v235 := snd(__v235)
};
if (__v235) {
return ( false, initVal )
} else {
__v236 := "getCompletionValue" (___internal_esl_global, initVal);
if (fst(__v236)) {
return __v236
} else {
__v236 := snd(__v236)
};
initVal := __v236
};
__v237 := "interpreter" (___internal_esl_global, scope, test);
if (fst(__v237)) {
return __v237
} else {
__v237 := snd(__v237)
};
testVal := __v237;
__v238 := "isAbruptCompletion" (___internal_esl_global, testVal);
if (fst(__v238)) {
return __v238
} else {
__v238 := snd(__v238)
};
if (__v238) {
return ( false, testVal )
} else {
__v239 := "getCompletionValue" (___internal_esl_global, testVal);
if (fst(__v239)) {
return __v239
} else {
__v239 := snd(__v239)
};
testVal := __v239
};
while (testVal) { __v240 := "interpreter" (___internal_esl_global, scope, stmt);
if (fst(__v240)) {
return __v240
} else {
__v240 := snd(__v240)
};
retVal := __v240;
__v241 := "getCompletionType" (___internal_esl_global, retVal);
if (fst(__v241)) {
return __v241
} else {
__v241 := snd(__v241)
};
if ('Break = __v241) {
__v242 := "NormalCompletion" (___internal_esl_global, 'empty);
if (fst(__v242)) {
return __v242
} else {
__v242 := snd(__v242)
};
return ( false, __v242 )
} else {
if ('Return = __v241) {
return ( false, retVal )
} else {
if ('Throw = __v241) {
return ( false, retVal )
} else {

}
}
};
__v243 := "interpreter" (___internal_esl_global, scope, update);
if (fst(__v243)) {
return __v243
} else {
__v243 := snd(__v243)
};
updateVal := __v243;
__v244 := "isAbruptCompletion" (___internal_esl_global, updateVal);
if (fst(__v244)) {
return __v244
} else {
__v244 := snd(__v244)
};
if (__v244) {
return ( false, updateVal )
} else {
__v245 := "getCompletionValue" (___internal_esl_global, updateVal);
if (fst(__v245)) {
return __v245
} else {
__v245 := snd(__v245)
};
updateVal := __v245
};
__v246 := "interpreter" (___internal_esl_global, scope, test);
if (fst(__v246)) {
return __v246
} else {
__v246 := snd(__v246)
};
testVal := __v246;
__v247 := "isAbruptCompletion" (___internal_esl_global, testVal);
if (fst(__v247)) {
return __v247
} else {
__v247 := snd(__v247)
};
if (__v247) {
return ( false, testVal )
} else {
__v248 := "getCompletionValue" (___internal_esl_global, testVal);
if (fst(__v248)) {
return __v248
} else {
__v248 := snd(__v248)
};
testVal := __v248
} };
__v249 := "NormalCompletion" (___internal_esl_global, 'empty);
if (fst(__v249)) {
return __v249
} else {
__v249 := snd(__v249)
};
return ( false, __v249 )
} else {
__v250 := "type" in_obj s;
__v252 := s["type"];
__v251 := __v252 = "UnaryExpression";
__v253 := "operator" in_obj s;
__v254 := "argument" in_obj s;
if (true && __v250 && __v251 && __v253 && __v254) {
op := s["operator"];
arg := s["argument"];
__v255 := "interpreter" (___internal_esl_global, scope, arg);
if (fst(__v255)) {
return __v255
} else {
__v255 := snd(__v255)
};
argVal := __v255;
__v256 := "isAbruptCompletion" (___internal_esl_global, argVal);
if (fst(__v256)) {
return __v256
} else {
__v256 := snd(__v256)
};
if (__v256) {
return ( false, argVal )
} else {
__v257 := "getCompletionValue" (___internal_esl_global, argVal);
if (fst(__v257)) {
return __v257
} else {
__v257 := snd(__v257)
};
argVal := __v257
};
__v258 := "applyUnaryOperator" (___internal_esl_global, op, argVal);
if (fst(__v258)) {
return __v258
} else {
__v258 := snd(__v258)
};
__v259 := "NormalCompletion" (___internal_esl_global, __v258);
if (fst(__v259)) {
return __v259
} else {
__v259 := snd(__v259)
};
return ( false, __v259 )
} else {
__v260 := "type" in_obj s;
__v262 := s["type"];
__v261 := __v262 = "BinaryExpression";
__v263 := "operator" in_obj s;
__v264 := "left" in_obj s;
__v265 := "right" in_obj s;
if (true && __v260 && __v261 && __v263 && __v264 && __v265) {
op := s["operator"];
left := s["left"];
right := s["right"];
__v266 := "interpreter" (___internal_esl_global, scope, left);
if (fst(__v266)) {
return __v266
} else {
__v266 := snd(__v266)
};
leftVal := __v266;
__v267 := "isAbruptCompletion" (___internal_esl_global, leftVal);
if (fst(__v267)) {
return __v267
} else {
__v267 := snd(__v267)
};
if (__v267) {
return ( false, leftVal )
} else {
__v268 := "getCompletionValue" (___internal_esl_global, leftVal);
if (fst(__v268)) {
return __v268
} else {
__v268 := snd(__v268)
};
leftVal := __v268
};
__v269 := "interpreter" (___internal_esl_global, scope, right);
if (fst(__v269)) {
return __v269
} else {
__v269 := snd(__v269)
};
rightVal := __v269;
__v270 := "isAbruptCompletion" (___internal_esl_global, rightVal);
if (fst(__v270)) {
return __v270
} else {
__v270 := snd(__v270)
};
if (__v270) {
return ( false, rightVal )
} else {
__v271 := "getCompletionValue" (___internal_esl_global, rightVal);
if (fst(__v271)) {
return __v271
} else {
__v271 := snd(__v271)
};
rightVal := __v271
};
__v272 := "applyBinaryOperator" (___internal_esl_global, op, leftVal, rightVal);
if (fst(__v272)) {
return __v272
} else {
__v272 := snd(__v272)
};
__v273 := "NormalCompletion" (___internal_esl_global, __v272);
if (fst(__v273)) {
return __v273
} else {
__v273 := snd(__v273)
};
return ( false, __v273 )
} else {
__v274 := "type" in_obj s;
__v276 := s["type"];
__v275 := __v276 = "LogicalExpression";
__v277 := "operator" in_obj s;
__v278 := "left" in_obj s;
__v279 := "right" in_obj s;
if (true && __v274 && __v275 && __v277 && __v278 && __v279) {
op := s["operator"];
left := s["left"];
right := s["right"];
__v280 := "interpreter" (___internal_esl_global, scope, left);
if (fst(__v280)) {
return __v280
} else {
__v280 := snd(__v280)
};
leftVal := __v280;
__v281 := "isAbruptCompletion" (___internal_esl_global, leftVal);
if (fst(__v281)) {
return __v281
} else {
__v281 := snd(__v281)
};
if (__v281) {
return ( false, leftVal )
} else {
__v282 := "getCompletionValue" (___internal_esl_global, leftVal);
if (fst(__v282)) {
return __v282
} else {
__v282 := snd(__v282)
};
leftVal := __v282
};
__v283 := "operator" in_obj s;
__v285 := s["operator"];
__v284 := __v285 = "&&";
__v286 := "leftVal" in_obj s;
__v288 := s["leftVal"];
__v287 := __v288 = false;
if (true && __v283 && __v284 && __v286 && __v287) {
__v289 := "NormalCompletion" (___internal_esl_global, false);
if (fst(__v289)) {
return __v289
} else {
__v289 := snd(__v289)
};
return ( false, __v289 )
} else {
__v290 := "operator" in_obj s;
__v292 := s["operator"];
__v291 := __v292 = "||";
__v293 := "leftVal" in_obj s;
__v295 := s["leftVal"];
__v294 := __v295 = true;
if (true && __v290 && __v291 && __v293 && __v294) {
__v296 := "NormalCompletion" (___internal_esl_global, true);
if (fst(__v296)) {
return __v296
} else {
__v296 := snd(__v296)
};
return ( false, __v296 )
}
};
__v297 := "interpreter" (___internal_esl_global, scope, right);
if (fst(__v297)) {
return __v297
} else {
__v297 := snd(__v297)
};
return ( false, __v297 )
} else {
__v298 := "type" in_obj s;
__v300 := s["type"];
__v299 := __v300 = "ConditionalExpression";
__v301 := "test" in_obj s;
__v302 := "consequent" in_obj s;
__v303 := "alternate" in_obj s;
if (true && __v298 && __v299 && __v301 && __v302 && __v303) {
test := s["test"];
expr1 := s["consequent"];
expr2 := s["alternate"];
__v304 := "interpreter" (___internal_esl_global, scope, test);
if (fst(__v304)) {
return __v304
} else {
__v304 := snd(__v304)
};
testVal := __v304;
__v305 := "isAbruptCompletion" (___internal_esl_global, testVal);
if (fst(__v305)) {
return __v305
} else {
__v305 := snd(__v305)
};
if (__v305) {
return ( false, testVal )
} else {
__v306 := "getCompletionValue" (___internal_esl_global, testVal);
if (fst(__v306)) {
return __v306
} else {
__v306 := snd(__v306)
};
testVal := __v306
};
if (testVal) {
__v307 := "interpreter" (___internal_esl_global, scope, expr1);
if (fst(__v307)) {
return __v307
} else {
__v307 := snd(__v307)
};
return ( false, __v307 )
} else {
__v308 := "interpreter" (___internal_esl_global, scope, expr2);
if (fst(__v308)) {
return __v308
} else {
__v308 := snd(__v308)
};
return ( false, __v308 )
}
} else {
__v309 := "type" in_obj s;
__v311 := s["type"];
__v310 := __v311 = "AssignmentExpression";
__v312 := "operator" in_obj s;
__v313 := "left" in_obj s;
__v314 := "right" in_obj s;
if (true && __v309 && __v310 && __v312 && __v313 && __v314) {
op := s["operator"];
left := s["left"];
right := s["right"];
__v315 := "interpreter" (___internal_esl_global, scope, right);
if (fst(__v315)) {
return __v315
} else {
__v315 := snd(__v315)
};
rightVal := __v315;
__v316 := "isAbruptCompletion" (___internal_esl_global, rightVal);
if (fst(__v316)) {
return __v316
} else {
__v316 := snd(__v316)
};
if (__v316) {
return ( false, rightVal )
} else {
__v317 := "getCompletionValue" (___internal_esl_global, rightVal);
if (fst(__v317)) {
return __v317
} else {
__v317 := snd(__v317)
};
rightVal := __v317
};
__v318 := "type" in_obj left;
__v320 := left["type"];
__v319 := __v320 = "Identifier";
__v321 := "name" in_obj left;
if (true && __v318 && __v319 && __v321) {
name := left["name"];
__v322 := "resolveName" (___internal_esl_global, scope, name);
if (fst(__v322)) {
return __v322
} else {
__v322 := snd(__v322)
};
oldVal := __v322;
__v323 := "applyAssignmentOperator" (___internal_esl_global, op, oldVal, rightVal);
if (fst(__v323)) {
return __v323
} else {
__v323 := snd(__v323)
};
newVal := __v323;
__v324 := "updateScope" (___internal_esl_global, scope, scope, name, newVal);
if (fst(__v324)) {
return __v324
} else {
__v324 := snd(__v324)
};
__v325 := "NormalCompletion" (___internal_esl_global, newVal);
if (fst(__v325)) {
return __v325
} else {
__v325 := snd(__v325)
};
return ( false, __v325 )
} else {
__v326 := "type" in_obj left;
__v328 := left["type"];
__v327 := __v328 = "MemberExpression";
__v329 := "object" in_obj left;
__v330 := "property" in_obj left;
__v331 := "computed" in_obj left;
if (true && __v326 && __v327 && __v329 && __v330 && __v331) {
object := left["object"];
prop := left["property"];
computed := left["computed"];
__v332 := "interpreter" (___internal_esl_global, scope, object);
if (fst(__v332)) {
return __v332
} else {
__v332 := snd(__v332)
};
objVal := __v332;
__v333 := "isAbruptCompletion" (___internal_esl_global, objVal);
if (fst(__v333)) {
return __v333
} else {
__v333 := snd(__v333)
};
if (__v333) {
return ( false, objVal )
} else {
__v334 := "getCompletionValue" (___internal_esl_global, objVal);
if (fst(__v334)) {
return __v334
} else {
__v334 := snd(__v334)
};
objVal := __v334
};
if (computed) {
__v335 := "interpreter" (___internal_esl_global, scope, prop);
if (fst(__v335)) {
return __v335
} else {
__v335 := snd(__v335)
};
propName := __v335;
__v336 := "isAbruptCompletion" (___internal_esl_global, propName);
if (fst(__v336)) {
return __v336
} else {
__v336 := snd(__v336)
};
if (__v336) {
return ( false, propName )
} else {
__v337 := "getCompletionValue" (___internal_esl_global, propName);
if (fst(__v337)) {
return __v337
} else {
__v337 := snd(__v337)
};
propName := __v337
}
} else {
__v338 := prop["name"];
propName := __v338
};
__v339 := "resolveProperty" (___internal_esl_global, objVal, propName);
if (fst(__v339)) {
return __v339
} else {
__v339 := snd(__v339)
};
oldVal := __v339;
__v340 := "applyAssignmentOperator" (___internal_esl_global, op, oldVal, rightVal);
if (fst(__v340)) {
return __v340
} else {
__v340 := snd(__v340)
};
newVal := __v340;
__v341 := "updateObject" (___internal_esl_global, objVal, propName, newVal);
if (fst(__v341)) {
return __v341
} else {
__v341 := snd(__v341)
};
__v342 := "NormalCompletion" (___internal_esl_global, newVal);
if (fst(__v342)) {
return __v342
} else {
__v342 := snd(__v342)
};
return ( false, __v342 )
} else {
if (true) {
__v343 := "raiseError" (___internal_esl_global, "Illegal assignment expression", left);
if (fst(__v343)) {
return __v343
} else {
__v343 := snd(__v343)
}
}
}
}
} else {
__v344 := "type" in_obj s;
__v346 := s["type"];
__v345 := __v346 = "UpdateExpression";
__v347 := "operator" in_obj s;
__v348 := "argument" in_obj s;
__v349 := "prefix" in_obj s;
if (true && __v344 && __v345 && __v347 && __v348 && __v349) {
op := s["operator"];
arg := s["argument"];
prefix := s["prefix"];
__v350 := { };
__v350["type"] := "Literal";
__v350["value"] := 1.;
__v350["raw"] := "1.0";
rightVal := __v350;
__v351 := "interpreter" (___internal_esl_global, scope, arg);
if (fst(__v351)) {
return __v351
} else {
__v351 := snd(__v351)
};
oldVal := __v351;
__v352 := "isAbruptCompletion" (___internal_esl_global, oldVal);
if (fst(__v352)) {
return __v352
} else {
__v352 := snd(__v352)
};
if (__v352) {
return ( false, oldVal )
} else {
__v353 := "getCompletionValue" (___internal_esl_global, oldVal);
if (fst(__v353)) {
return __v353
} else {
__v353 := snd(__v353)
};
oldVal := __v353
};
if ("++" = op) {
__v354 := { };
__v354["type"] := "AssignmentExpression";
__v354["operator"] := "+=";
__v354["left"] := arg;
__v354["right"] := rightVal;
updateExpr := __v354
} else {
if ("--" = op) {
__v355 := { };
__v355["type"] := "AssignmentExpression";
__v355["operator"] := "-=";
__v355["left"] := arg;
__v355["right"] := rightVal;
updateExpr := __v355
} else {
__v356 := "raiseError" (___internal_esl_global, "Illegal update expression operator", op);
if (fst(__v356)) {
return __v356
} else {
__v356 := snd(__v356)
}
}
};
__v357 := "interpreter" (___internal_esl_global, scope, updateExpr);
if (fst(__v357)) {
return __v357
} else {
__v357 := snd(__v357)
};
newVal := __v357;
__v358 := "isAbruptCompletion" (___internal_esl_global, newVal);
if (fst(__v358)) {
return __v358
} else {
__v358 := snd(__v358)
};
if (__v358) {
return ( false, newVal )
} else {
__v359 := "getCompletionValue" (___internal_esl_global, newVal);
if (fst(__v359)) {
return __v359
} else {
__v359 := snd(__v359)
};
newVal := __v359
};
if (prefix) {
__v360 := "NormalCompletion" (___internal_esl_global, newVal);
if (fst(__v360)) {
return __v360
} else {
__v360 := snd(__v360)
};
return ( false, __v360 )
} else {
__v361 := "NormalCompletion" (___internal_esl_global, oldVal);
if (fst(__v361)) {
return __v361
} else {
__v361 := snd(__v361)
};
return ( false, __v361 )
}
} else {
__v362 := "type" in_obj s;
__v364 := s["type"];
__v363 := __v364 = "ObjectExpression";
__v365 := "properties" in_obj s;
if (true && __v362 && __v363 && __v365) {
props := s["properties"];
__v366 := "Object" (___internal_esl_global);
if (fst(__v366)) {
return __v366
} else {
__v366 := snd(__v366)
};
object := __v366;
__v368 := 0;
__v367 := l_len(props);
__v369 := __v367 > __v368;
while (__v369) { prop := l_nth(props, __v368);
__v371 := prop["key"];
__v370 := __v371["name"];
propName := __v370;
__v372 := prop["value"];
__v373 := "interpreter" (___internal_esl_global, scope, __v372);
if (fst(__v373)) {
return __v373
} else {
__v373 := snd(__v373)
};
propVal := __v373;
__v374 := "isAbruptCompletion" (___internal_esl_global, propVal);
if (fst(__v374)) {
return __v374
} else {
__v374 := snd(__v374)
};
if (__v374) {
return ( false, propVal )
} else {
__v375 := "getCompletionValue" (___internal_esl_global, propVal);
if (fst(__v375)) {
return __v375
} else {
__v375 := snd(__v375)
};
propVal := __v375
};
object[propName] := propVal;
__v368 := __v368 + 1;
__v369 := __v367 > __v368 };
__v376 := "NormalCompletion" (___internal_esl_global, object);
if (fst(__v376)) {
return __v376
} else {
__v376 := snd(__v376)
};
return ( false, __v376 )
} else {
__v377 := "type" in_obj s;
__v379 := s["type"];
__v378 := __v379 = "MemberExpression";
__v380 := "object" in_obj s;
__v381 := "property" in_obj s;
__v382 := "computed" in_obj s;
if (true && __v377 && __v378 && __v380 && __v381 && __v382) {
object := s["object"];
prop := s["property"];
computed := s["computed"];
__v383 := "interpreter" (___internal_esl_global, scope, object);
if (fst(__v383)) {
return __v383
} else {
__v383 := snd(__v383)
};
objVal := __v383;
__v384 := "isAbruptCompletion" (___internal_esl_global, objVal);
if (fst(__v384)) {
return __v384
} else {
__v384 := snd(__v384)
};
if (__v384) {
return ( false, objVal )
} else {
__v385 := "getCompletionValue" (___internal_esl_global, objVal);
if (fst(__v385)) {
return __v385
} else {
__v385 := snd(__v385)
};
objVal := __v385
};
if (computed) {
__v386 := "interpreter" (___internal_esl_global, scope, prop);
if (fst(__v386)) {
return __v386
} else {
__v386 := snd(__v386)
};
propName := __v386;
__v387 := "isAbruptCompletion" (___internal_esl_global, propName);
if (fst(__v387)) {
return __v387
} else {
__v387 := snd(__v387)
};
if (__v387) {
return ( false, propName )
} else {
__v388 := "getCompletionValue" (___internal_esl_global, propName);
if (fst(__v388)) {
return __v388
} else {
__v388 := snd(__v388)
};
propName := __v388
}
} else {
__v389 := prop["name"];
propName := __v389
};
__v390 := "resolveProperty" (___internal_esl_global, objVal, propName);
if (fst(__v390)) {
return __v390
} else {
__v390 := snd(__v390)
};
__v391 := "NormalCompletion" (___internal_esl_global, __v390);
if (fst(__v391)) {
return __v391
} else {
__v391 := snd(__v391)
};
return ( false, __v391 )
} else {
__v392 := "type" in_obj s;
__v394 := s["type"];
__v393 := __v394 = "CallExpression";
__v395 := "callee" in_obj s;
__v396 := "arguments" in_obj s;
if (true && __v392 && __v393 && __v395 && __v396) {
callee := s["callee"];
args := s["arguments"];
__v397 := "interpreter" (___internal_esl_global, scope, callee);
if (fst(__v397)) {
return __v397
} else {
__v397 := snd(__v397)
};
functionObject := __v397;
__v398 := "isAbruptCompletion" (___internal_esl_global, functionObject);
if (fst(__v398)) {
return __v398
} else {
__v398 := snd(__v398)
};
if (__v398) {
return ( false, functionObject )
} else {
__v399 := "getCompletionValue" (___internal_esl_global, functionObject);
if (fst(__v399)) {
return __v399
} else {
__v399 := snd(__v399)
};
functionObject := __v399
};
__v400 := "type" in_obj callee;
__v402 := callee["type"];
__v401 := __v402 = "MemberExpression";
__v403 := "object" in_obj callee;
if (true && __v400 && __v401 && __v403) {
obj := callee["object"];
__v404 := "interpreter" (___internal_esl_global, scope, obj);
if (fst(__v404)) {
return __v404
} else {
__v404 := snd(__v404)
};
thisBinding := __v404;
__v405 := "isAbruptCompletion" (___internal_esl_global, thisBinding);
if (fst(__v405)) {
return __v405
} else {
__v405 := snd(__v405)
};
if (__v405) {
return ( false, thisBinding )
} else {
__v406 := "getCompletionValue" (___internal_esl_global, thisBinding);
if (fst(__v406)) {
return __v406
} else {
__v406 := snd(__v406)
};
thisBinding := __v406
}
} else {
if (true) {
thisBinding := functionObject
}
};
__v407 := "interpretCall" (___internal_esl_global, scope, functionObject, args, thisBinding);
if (fst(__v407)) {
return __v407
} else {
__v407 := snd(__v407)
};
retVal := __v407;
__v408 := "getCompletionType" (___internal_esl_global, retVal);
if (fst(__v408)) {
return __v408
} else {
__v408 := snd(__v408)
};
if ('Throw = __v408) {
return ( false, retVal )
} else {
__v409 := "getCompletionValue" (___internal_esl_global, retVal);
if (fst(__v409)) {
return __v409
} else {
__v409 := snd(__v409)
};
__v410 := "NormalCompletion" (___internal_esl_global, __v409);
if (fst(__v410)) {
return __v410
} else {
__v410 := snd(__v410)
};
return ( false, __v410 )
}
} else {
__v411 := "type" in_obj s;
__v413 := s["type"];
__v412 := __v413 = "NewExpression";
__v414 := "callee" in_obj s;
__v415 := "arguments" in_obj s;
if (true && __v411 && __v412 && __v414 && __v415) {
callee := s["callee"];
args := s["arguments"];
__v416 := "interpreter" (___internal_esl_global, scope, callee);
if (fst(__v416)) {
return __v416
} else {
__v416 := snd(__v416)
};
functionObject := __v416;
__v417 := "isAbruptCompletion" (___internal_esl_global, functionObject);
if (fst(__v417)) {
return __v417
} else {
__v417 := snd(__v417)
};
if (__v417) {
return ( false, functionObject )
} else {
__v418 := "getCompletionValue" (___internal_esl_global, functionObject);
if (fst(__v418)) {
return __v418
} else {
__v418 := snd(__v418)
};
functionObject := __v418
};
__v419 := "Object" (___internal_esl_global);
if (fst(__v419)) {
return __v419
} else {
__v419 := snd(__v419)
};
newObject := __v419;
__v420 := "interpretCall" (___internal_esl_global, scope, functionObject, args, newObject);
if (fst(__v420)) {
return __v420
} else {
__v420 := snd(__v420)
};
retVal := __v420;
__v421 := "getCompletionType" (___internal_esl_global, retVal);
if (fst(__v421)) {
return __v421
} else {
__v421 := snd(__v421)
};
if ('Throw = __v421) {
return ( false, retVal )
} else {
__v422 := "NormalCompletion" (___internal_esl_global, newObject);
if (fst(__v422)) {
return __v422
} else {
__v422 := snd(__v422)
};
return ( false, __v422 )
}
} else {
__v423 := "type" in_obj s;
__v425 := s["type"];
__v424 := __v425 = "Literal";
__v426 := "value" in_obj s;
__v427 := "raw" in_obj s;
if (true && __v423 && __v424 && __v426 && __v427) {
value := s["value"];
raw := s["raw"];
__v428 := "NormalCompletion" (___internal_esl_global, value);
if (fst(__v428)) {
return __v428
} else {
__v428 := snd(__v428)
};
return ( false, __v428 )
} else {
__v429 := "type" in_obj s;
__v431 := s["type"];
__v430 := __v431 = "Identifier";
__v432 := "name" in_obj s;
if (true && __v429 && __v430 && __v432) {
name := s["name"];
__v433 := "resolveName" (___internal_esl_global, scope, name);
if (fst(__v433)) {
return __v433
} else {
__v433 := snd(__v433)
};
__v434 := "NormalCompletion" (___internal_esl_global, __v433);
if (fst(__v434)) {
return __v434
} else {
__v434 := snd(__v434)
};
return ( false, __v434 )
} else {
__v435 := "type" in_obj s;
__v437 := s["type"];
__v436 := __v437 = "ThisExpression";
if (true && __v435 && __v436) {
__v438 := "getThisBinding" (___internal_esl_global, scope);
if (fst(__v438)) {
return __v438
} else {
__v438 := snd(__v438)
};
__v439 := "NormalCompletion" (___internal_esl_global, __v438);
if (fst(__v439)) {
return __v439
} else {
__v439 := snd(__v439)
};
return ( false, __v439 )
} else {
__v440 := "type" in_obj s;
__v442 := s["type"];
__v441 := __v442 = "VariableDeclaration";
__v443 := "kind" in_obj s;
__v445 := s["kind"];
__v444 := __v445 = "var";
__v446 := "declarations" in_obj s;
if (true && __v440 && __v441 && __v443 && __v444 && __v446) {
decls := s["declarations"];
retVal := 'empty;
__v448 := 0;
__v447 := l_len(decls);
__v449 := __v447 > __v448;
while (__v449) { decl := l_nth(decls, __v448);
__v450 := "interpreter" (___internal_esl_global, scope, decl);
if (fst(__v450)) {
return __v450
} else {
__v450 := snd(__v450)
};
retValAux := __v450;
__v451 := "isAbruptCompletion" (___internal_esl_global, retValAux);
if (fst(__v451)) {
return __v451
} else {
__v451 := snd(__v451)
};
if (__v451) {
return ( false, retValAux )
} else {
__v452 := "getCompletionValue" (___internal_esl_global, retValAux);
if (fst(__v452)) {
return __v452
} else {
__v452 := snd(__v452)
};
retValAux := __v452
};
__v454 := retValAux = 'empty;
__v453 := !(__v454);
if (__v453) {
retVal := retValAux
};
__v448 := __v448 + 1;
__v449 := __v447 > __v448 };
__v455 := "NormalCompletion" (___internal_esl_global, retVal);
if (fst(__v455)) {
return __v455
} else {
__v455 := snd(__v455)
};
return ( false, __v455 )
} else {
__v456 := "type" in_obj s;
__v458 := s["type"];
__v457 := __v458 = "VariableDeclarator";
__v459 := "id" in_obj s;
__v460 := "init" in_obj s;
if (true && __v456 && __v457 && __v459 && __v460) {
id := s["id"];
init := s["init"];
__v462 := init = null;
__v461 := !(__v462);
if (__v461) {
__v463 := "interpreter" (___internal_esl_global, scope, init);
if (fst(__v463)) {
return __v463
} else {
__v463 := snd(__v463)
};
rightVal := __v463;
__v464 := "isAbruptCompletion" (___internal_esl_global, rightVal);
if (fst(__v464)) {
return __v464
} else {
__v464 := snd(__v464)
};
if (__v464) {
return ( false, rightVal )
} else {
__v465 := "getCompletionValue" (___internal_esl_global, rightVal);
if (fst(__v465)) {
return __v465
} else {
__v465 := snd(__v465)
};
rightVal := __v465
}
} else {
rightVal := 'undefined
};
__v466 := "type" in_obj id;
__v468 := id["type"];
__v467 := __v468 = "Identifier";
__v469 := "name" in_obj id;
if (true && __v466 && __v467 && __v469) {
name := id["name"];
__v470 := "updateScope" (___internal_esl_global, scope, scope, name, rightVal);
if (fst(__v470)) {
return __v470
} else {
__v470 := snd(__v470)
};
__v471 := "NormalCompletion" (___internal_esl_global, rightVal);
if (fst(__v471)) {
return __v471
} else {
__v471 := snd(__v471)
};
return ( false, __v471 )
} else {
if (true) {
__v472 := "raiseError" (___internal_esl_global, "Illegal variable declarator", id);
if (fst(__v472)) {
return __v472
} else {
__v472 := snd(__v472)
}
}
}
} else {
__v473 := "type" in_obj s;
__v475 := s["type"];
__v474 := __v475 = "FunctionExpression";
__v476 := "params" in_obj s;
__v477 := "body" in_obj s;
if (true && __v473 && __v474 && __v476 && __v477) {
params := s["params"];
body := s["body"];
__v478 := "FunctionObject" (___internal_esl_global, "", params, body, scope);
if (fst(__v478)) {
return __v478
} else {
__v478 := snd(__v478)
};
functionObject := __v478;
__v479 := "NormalCompletion" (___internal_esl_global, functionObject);
if (fst(__v479)) {
return __v479
} else {
__v479 := snd(__v479)
};
return ( false, __v479 )
} else {
if (true) {
__v480 := "raiseError" (___internal_esl_global, "Unsuported construct", s);
if (fst(__v480)) {
return __v480
} else {
__v480 := snd(__v480)
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
} };
function extendScope (___internal_esl_global, scope, thisBinding) { __v481 := "Scope" (___internal_esl_global, thisBinding);
if (fst(__v481)) {
return __v481
} else {
__v481 := snd(__v481)
};
newScope := __v481;
newScope["parent"] := scope;
return ( false, newScope ) };
function main () { ___internal_esl_global := { };
__v482 := "buildAST" (___internal_esl_global);
if (fst(__v482)) {
return __v482
} else {
__v482 := snd(__v482)
};
code := __v482;
__v483 := "Object" (___internal_esl_global);
if (fst(__v483)) {
return __v483
} else {
__v483 := snd(__v483)
};
thisBinding := __v483;
__v484 := "Scope" (___internal_esl_global, thisBinding);
if (fst(__v484)) {
return __v484
} else {
__v484 := snd(__v484)
};
scope := __v484;
__v485 := "interpreter" (___internal_esl_global, scope, code);
if (fst(__v485)) {
return __v485
} else {
__v485 := snd(__v485)
};
return ( false, __v485 ) }